<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="KSPCLUtils" type="INT" languagemode="0"><![CDATA[
KSPCLUtils
LoadImg(pFileName,pGlb) public {
	Set file=##class(%File).%New(pFileName)
	Set ok=file.Open("RUK\RAW\")
	If 'ok Write !,"Can't open file "_pFileName Quit
	Kill ^||tmp
	For  {
		If file.AtEnd Quit
		Set len=32000
		Set str=file.Read(.len)
		If str'="" Set ^||tmp($I(^||tmp))=str
		;W !,$L(str)
		If len'=32000 Quit
	}
	Do file.Close()
	;
	;Quit
	;
	Set begin="",i="",seq=$Char(27)_"E"
	For  {
		Set i=$O(^||tmp(i),1,str)
		If i="" Quit
		If str[seq {
			Set begin=i
			Set s1=$Piece(str,$Char(27)_"E",1)
			Set s2=$Extract(str,$Length(s1)+$Length(seq)+1,$Length(str))
			Set ^||tmp(begin)=s2
			Quit
		}	

	}	
	;
	Set end=$Order(^||tmp(""),-1)
	
	Set end="",i="",seq=$Char(27)_"*rB" ;seq=$Char(27)_"E"
	For  {
		Set i=$O(^||tmp(i),-1,str)
		If i="" Quit
		If str[seq {
			Set end=i
			Set s1=$Piece(str,seq,$Length(str,seq))
			Set s2=$Extract(str,1,$Length(str)-$Length(s1)-$Length(seq))
			Set ^||tmp(end)=s2_$C(27)_"*rC"
			Quit
		}	

	}
		
	;
	Kill @pGlb
	If (begin="")||(end="") Write !,"Can't import file "_pFileName
	Set i="",cnt=0
	For  {
		Set i=$O(^||tmp(i),1,str)
		If i="" Quit
		If i<begin Continue
		If i>end Continue
		Set cnt=cnt+1
		If cnt=1 Set str=$$CorrectHeader(str)
		Set @pGlb@($Increment(@pGlb))=str 
	}		
}
CorrectHeader(pVal) public {
	Set header=$Piece(pVal,$Char(27)_"*r1A",1,1)
	Set body=$Extract(pVal,$Length(header)+1,$Length(pVal))
	For substr=$Char(27)_"&l0O",$Char(27)_"&l1H",$Char(27)_"&l26a8c1E" {
		Set header=$Piece(header,substr,1)_$Piece(header,substr,2)
	}	
	Quit header_body
}	
	
MM2DP(pVal) public {
	Quit 720*pVal/25.4\1
}
DP2MM(pVal) public {
	Quit 25.4*pVal/720\1
}

FullName(pLastName,pFirstName,pFatherName,pMaxLen) public {
	Set pLastName=$Get(pLastName)
	Set pFirstName=$Get(pFirstName)
	Set pFatherName=$Get(pFatherName)
	Set pMaxLen=$Get(pMaxLen,99999)
	Set res=""
	Set res=$Get(pLastName)
	If pFirstName'="" {
		If res'="" Set res=res_" "
		Set res=res_pFirstName
	}	
	If pFatherName'="" {
		If res'="" Set res=res_" "
		Set res=res_pFatherName
	}
	If $Length(res)'>pMaxLen Quit res	
	Set res=$Get(pLastName)
	If pFirstName'="" {
		If res'="" Set res=res_" "
		Set res=res_$Extract(pFirstName,1)_"."
	}	
	If pFatherName'="" {
		Set res=res_$Extract(pFatherName,1)_"."
	}
	Quit res
}

DisplayDate(pValue) public {
	Set pValue=+$Get(pValue)
	If '$Get(pValue) Quit ""
	set returnValue=""
	try {
		set returnValue=$ZDate(pValue,4,,4)
	} catch {
		set returnValue=""
	}
	quit returnValue
}


DisplayTime(pValue,pFormat) public {
	//s ^test("DisplayTime",$i(^test("DisplayTime")))=$Get(pValue)_"*"_$Get(pFormat) 
	Set pValue=+$Get(pValue)
	Set pFormat=$Get(pFormat,1)
	If '$Get(pValue) Quit ""
	set returnValue=""
	try {
		set returnValue=$ZTime(pValue,pFormat)
	} catch {
		set returnValue=""
	}
	quit returnValue
}

CenterPosX(pStr,pFontName,pBold,pItalic) public {
	Set charwidth=70.8
	Set strwidth=$Length(pStr)*charwidth
	Quit 2800-(strwidth\2)
}		
]]></Routine>
</Export>
