<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBWKSTS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBWKSTS ; IG 11/5/98 ; LVB Control data access for WKSTS WS_WorkSheetTestSet
 ;
 ; supported calls:
 ;
 ; $$insert^LVBWKSTS(par)
 ; $$update^LVBWKSTS(ROWID)
 ; $$select^LVBWKSTS(ROWID)
 ; $$seltest^LVBWKSTS(wokrsh,test)
 ; $$delete^LVBWKSTS(ROWID,Comments)
 ; $$open^LVBWKSTS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBWKSTS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBWKSTS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBWKSTS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBWKSTS()
 ; $$getall^LVBWKSTS(ws,user)
 ;
  ;---&sql(DECLARE WKSTS CURSOR FOR SELECT * FROM WS_WorkSheetTestSet
   ;---         WHERE WKSTS_ParRef = :par
   ;---         ORDER BY WKSTS_Sequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN WKSTS)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %WKSTS0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH WKSTS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
close()  ;---&SQL(CLOSE WKSTS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %WKSTS0c
 q 0
select(RowID) s RowID=$g(RowID) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM WS_WorkSheetTestSet WHERE WKSTS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; select data by test set
seltest(worksh,test) n (worksh,test) s worksh=$g(worksh),test=$g(test)
  ;---&sql( SELECT * INTO :PLIST() FROM WS_WorkSheetTestSet WHERE WKSTS_ParRef=:worksh AND WKSTS_TestSet_DR=:test)
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, test, worksh
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO WS_WorkSheetTestSet VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE WS_WorkSheetTestSet VALUES :PLIST() WHERE WKSTS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Lo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM WS_WorkSheetTestSet WHERE WKSTS_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0No
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTTS(plist(3))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$C(1)_PLIST(4)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 ;
 q
 ;
 ; get list of all TestItems for worksheet
getall(ws,user) n (ws,user,PLIST) k PLIST s ws=$g(ws),user=$g(user)
 s (cnt,ts)="" f  s ts=$o(^TTAB("WS",ws,10,ts)) q:ts=""  d
 .i $p(^TTAB("WS",ws,10,ts),"\",3)="N" d
 ..s xx=$p(^(ts),"\",4) f j=1:1:$l(xx,",") s tc=$p(xx,",",j) i $l(tc),'$$ValUser^LVBCTTC(user,tc) d
 ...s cnt=cnt+1,PLIST(cnt)=tc_$c(2)_$$seldata^LVBCTTC(tc,3)
 .i $p(^TTAB("WS",ws,10,ts),"\",3)="Y" d
 ..s x2="" f  s x2=$o(^TTAB("TS",ts,0,x2)) q:x2=""  s tc=$p(^(x2),"\",8) i $l(tc),'$$ValUser^LVBCTTC(user,tc) d
 ...s cnt=cnt+1,PLIST(cnt)=tc_$c(2)_$$seldata^LVBCTTC(tc,3)
 s PLIST=$o(PLIST(""),-1)
 q 0
getall1(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  s ^TMP($ZN,$J,cnt)=$p(PLIST(3),$c(1))_$c(2)_$P(PLIST(3),$c(1),2)_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(3),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
%WKSTS0o s $zt="%WKSTS0E" s SQLCODE=$s($g(%WKSTS0c):-101,1:0) q:SQLCODE'=0  s %WKSTS0d(12)=0 s %WKSTS0d(13)=0,%WKSTS0d(14)=""
 s %WKSTS0d(8)=$g(par)
 s %WKSTS0t(1)=$i(^||%sql.temp)
 s %WKSTS0c=1 q
%WKSTS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %WKSTS0c,%WKSTS0d,%WKSTS0E,%WKSTS0l,%WKSTS0n,%WKSTS0R,%WKSTS0s,%WKSTS0t,%WKSTS0Z q
%0Afirst s %WKSTS0d(11)=""
 k ^||%sql.temp(%WKSTS0t(1),0) s ^||%sql.temp(%WKSTS0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%WKSTS0t(1),0))
 d %0ABMod
 ; asl MOD# 4
 i $sortend(^||%sql.temp(%WKSTS0t(1),0))
 s %WKSTS0s(3)=""
%0ADk1 s %WKSTS0s(3)=$o(^||%sql.temp(%WKSTS0t(1),0,%WKSTS0s(3)))
 i %WKSTS0s(3)="" g %0ADdun
 s %WKSTS0d(3)=$s(%WKSTS0s(3)=-1E14:"",1:%WKSTS0s(3))
 s %WKSTS0s(11)=""
%0ADk2 s %WKSTS0s(11)=$o(^||%sql.temp(%WKSTS0t(1),0,%WKSTS0s(3),%WKSTS0s(11)))
 i %WKSTS0s(11)="" g %0ADk1
 s %WKSTS0d(11)=$s(%WKSTS0s(11)=-1E14:"",1:%WKSTS0s(11))
 s %WKSTS0d(33)=$g(^||%sql.temp(%WKSTS0t(1),0,%WKSTS0s(3),%WKSTS0d(11)))
 s %WKSTS0d(1)=$lg(%WKSTS0d(33),3) s %WKSTS0d(2)=$lg(%WKSTS0d(33),4) s %WKSTS0d(4)=$lg(%WKSTS0d(33),6) s %WKSTS0d(5)=$lg(%WKSTS0d(33),2) s %WKSTS0d(6)=$lg(%WKSTS0d(33),1) s %WKSTS0d(7)=$lg(%WKSTS0d(33),5)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %WKSTS0d(12)=%WKSTS0d(12)+1,%ROWCOUNT=%WKSTS0d(12),%ROWID=%WKSTS0d(2),%WKSTS0c=10 q
%WKSTS0f i '$g(%WKSTS0c) { s SQLCODE=-102 q  } i %WKSTS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%WKSTS0d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%WKSTS0d(12),%WKSTS0c=100 q  } g %0Afirst:%WKSTS0c=1
 g %0ADk2
%0ADdun 
%0AAdun 
 s %ROWCOUNT=%WKSTS0d(12),SQLCODE=100,%WKSTS0c=100 q
%WKSTS0c i '$g(%WKSTS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%WKSTS0d(12)),1:0) f %WKSTS0d(15)=1 { i $sortend(^||%sql.temp(%WKSTS0t(%WKSTS0d(15)),0),0) } k ^||%sql.temp(%WKSTS0t(1))
 i $zu(115,2)=1,$g(%WKSTS0d(13))=1 { l -@%WKSTS0d(14) } k %WKSTS0c,%WKSTS0d,%WKSTS0E,%WKSTS0l,%WKSTS0n,%WKSTS0R,%WKSTS0s,%WKSTS0t,%WKSTS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %WKSTS0c=100
 f %WKSTS0d(15)=1 i $sortend(^||%sql.temp(%WKSTS0t(%WKSTS0d(15)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %WKSTS0d(1)=%WKSTS0d(8)
 i %WKSTS0d(1)="" g %0ABdun
 s %WKSTS0d(4)=""
%0ABk1 s %WKSTS0d(4)=$o(^TTAB("WS",%WKSTS0d(1),10,%WKSTS0d(4)))
 i %WKSTS0d(4)="" g %0ABdun
 s %WKSTS0d(23)=$g(^TTAB("WS",%WKSTS0d(1),10,%WKSTS0d(4)))
 s %WKSTS0d(3)=$p(%WKSTS0d(23),"\",1) s %WKSTS0d(5)=$p(%WKSTS0d(23),"\",2) s %WKSTS0d(6)=$p(%WKSTS0d(23),"\",3) s %WKSTS0d(7)=$p(%WKSTS0d(23),"\",4)
 s %WKSTS0d(2)=(%WKSTS0d(1))_"||"_(%WKSTS0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("WS",$p(%WKSTS0d(2),"||",1),10,$p(%WKSTS0d(2),"||",2))#"S":$zu(115,4) i $t { s %WKSTS0d(13)=1,%WKSTS0d(14)=$name(^TTAB("WS",$p(%WKSTS0d(2),"||",1),10,$p(%WKSTS0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.WS_WorkSheetTestSet for RowID value: "_%WKSTS0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %WKSTS0d(10)=$p(%WKSTS0d(2),"||"),%WKSTS0d(4)=$p(%WKSTS0d(2),"||",2)
 i %WKSTS0d(10)'="",%WKSTS0d(4)'="",$d(^TTAB("WS",%WKSTS0d(10),10,%WKSTS0d(4)))
 e  g %0ACdun
 s %WKSTS0d(31)=$g(^TTAB("WS",%WKSTS0d(10),10,%WKSTS0d(4)))
 s %WKSTS0d(3)=$p(%WKSTS0d(31),"\",1) s %WKSTS0d(5)=$p(%WKSTS0d(31),"\",2) s %WKSTS0d(6)=$p(%WKSTS0d(31),"\",3) s %WKSTS0d(7)=$p(%WKSTS0d(31),"\",4)
 s %WKSTS0d(1)=$p(%WKSTS0d(2),"||")
%0ABuncommitted ;
 s %WKSTS0s(3)=$s(%WKSTS0d(3)'="":%WKSTS0d(3),1:-1E14),%WKSTS0d(11)=%WKSTS0d(11)+1,%WKSTS0d(32)="",$li(%WKSTS0d(32),3)=%WKSTS0d(1),$li(%WKSTS0d(32),4)=%WKSTS0d(2),$li(%WKSTS0d(32),6)=%WKSTS0d(4),$li(%WKSTS0d(32),2)=%WKSTS0d(5),$li(%WKSTS0d(32),1)=%WKSTS0d(6),$li(%WKSTS0d(32),5)=%WKSTS0d(7),^||%sql.temp(%WKSTS0t(1),0,%WKSTS0s(3),%WKSTS0d(11))=%WKSTS0d(32)
%0ACdun i $zu(115,2)=1,$g(%WKSTS0d(13))=1 { l -@%WKSTS0d(14) s %WKSTS0d(13)=0 }
 g %0ABk1
%0ABdun 
 q
%0Do d %WKSTS0f q:SQLCODE'=0
 s PLIST(0)=%WKSTS0d(1),PLIST(1)=%WKSTS0d(2),PLIST(2)=%WKSTS0d(3),PLIST(3)=%WKSTS0d(4),PLIST(4)=%WKSTS0d(5),PLIST(5)=%WKSTS0d(6),PLIST(6)=%WKSTS0d(7)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(3)'="",$d(^TTAB("WS",%mmmsqld(11),10,PLIST(3)))
 e  g %0FBdun
 s %mmmsqld(21)=$g(^TTAB("WS",%mmmsqld(11),10,PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(21),"\",1) s PLIST(4)=$p(%mmmsqld(21),"\",2) s PLIST(5)=$p(%mmmsqld(21),"\",3) s PLIST(6)=$p(%mmmsqld(21),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("WS",$p(PLIST(1),"||",1),10,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("WS",$p(PLIST(1),"||",1),10,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.WS_WorkSheetTestSet for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(3)'="",$d(^TTAB("WS",%mmmsqld(11),10,PLIST(3)))
 e  g %0FCdun
 s %mmmsqld(29)=$g(^TTAB("WS",%mmmsqld(11),10,PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(29),"\",1) s PLIST(4)=$p(%mmmsqld(29),"\",2) s PLIST(5)=$p(%mmmsqld(29),"\",3) s PLIST(6)=$p(%mmmsqld(29),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(9)=$g(worksh),%mmmsqld(10)=$g(test)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(0)=%mmmsqld(9)
 s PLIST(3)=%mmmsqld(10)
 i PLIST(0)="" g %0HBdun
 i PLIST(3)="" g %0HBdun
 i '$d(^TTAB("WS",PLIST(0),10,PLIST(3))) g %0HBdun
 s %mmmsqld(22)=$g(^TTAB("WS",PLIST(0),10,PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(22),"\",1) s PLIST(4)=$p(%mmmsqld(22),"\",2) s PLIST(5)=$p(%mmmsqld(22),"\",3) s PLIST(6)=$p(%mmmsqld(22),"\",4)
 s PLIST(1)=(PLIST(0))_"||"_(PLIST(3))
 g:$zu(115,2)=0 %0HBuncommitted i $zu(115,2)=1 l +^TTAB("WS",$p(PLIST(1),"||",1),10,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TTAB("WS",$p(PLIST(1),"||",1),10,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.WS_WorkSheetTestSet for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(12)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i %mmmsqld(12)'="",PLIST(3)'="",$d(^TTAB("WS",%mmmsqld(12),10,PLIST(3)))
 e  g %0HCdun
 s %mmmsqld(30)=$g(^TTAB("WS",%mmmsqld(12),10,PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(30),"\",1) s PLIST(4)=$p(%mmmsqld(30),"\",2) s PLIST(5)=$p(%mmmsqld(30),"\",3) s PLIST(6)=$p(%mmmsqld(30),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
%0HBuncommitted ;
 s SQLCODE=0 g %0Hc
%0HCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.WSWorkSheetTestSet.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("WS",%mmmsqld(4),10,%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(15)=$$%getlock^User.WSWorkSheetTestSet.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("WS",%mmmsqld(4),10,%mmmsqld(5)))
 e  g %0LCdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.WSWorkSheetTestSet.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.WSWorkSheetTestSet.T1(%mmmsqld(2)) g %0Lc
%0LCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.WSWorkSheetTestSet.T1(%mmmsqld(2)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.WSWorkSheetTestSet.T1(%mmmsqld(2)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("WS",%mmmsqld(3),10,%mmmsqld(4)))
 e  g %0NBdun
 s %mmmsqld(14)=$$%getlock^User.WSWorkSheetTestSet.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("WS",%mmmsqld(3),10,%mmmsqld(4)))
 e  g %0NCdun
 d %delete^User.WSWorkSheetTestSet.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.WSWorkSheetTestSet.T1(%mmmsqld(1)) g %0Nc
%0NCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.WSWorkSheetTestSet.T1(%mmmsqld(1)) g:SQLCODE<0 %0Nc
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.WSWorkSheetTestSet.T1(%mmmsqld(1)) g %0Nc
]]></Routine>
</Export>
