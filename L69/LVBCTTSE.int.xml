<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTSE" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTSE ; IG 1/5/98 ; LVB Control data access for CTTSE CT_TestSetFramesGroupRes
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTTSE(par)
 ; $$delete^LVBCTTSE(ROWID,Comments)
 ; $$update^LVBCTTSE(ROWID)
 ; $$select^LVBCTTSE(ROWID,skip)
 ; $$open^LVBCTTSE(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTTSE(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTTSE(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTTSE(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTTSE()
 ; $$getall^LVBCTTSE(par)
 ; $$getall1^LVBCTTSE()
 ; $$descr^LVBCTTSE(par,res)
 ;
  ;---&sql(DECLARE CTTSE CURSOR FOR SELECT * FROM CT_TestSetFramesGroupRes
   ;---         WHERE CTTSE_ParRef = :par
   ;---         ORDER BY CTTSE_Sequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTTSE)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSE0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTTSE INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTTSE)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSE0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetFramesGroupRes WHERE CTTSE_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO CT_TestSetFramesGroupRes VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_TestSetFramesGroupRes VALUES :PLIST() WHERE CTTSE_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_TestSetFramesGroupRes WHERE CTTSE_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par,"Y")
 F cnt=1:1 Q:$$fetch(par,"Y")  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$s($L($p(PLIST(3),$c(1))):$p(PLIST(3),$c(1)),1:$p(PLIST(5),$c(1)))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 ; list of common results
getall1(buffer) n (buffer,PLIST) s buffer=$g(buffer)
 i $l(buffer) k PLIST f j=1:1:$l(buffer,"^") s tc=$p(buffer,"^",j) i $l(tc) s PLIST(j)=tc
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j) m ^TMP($zn,$j,0)=PLIST
 f cnt1=1:1 q:'$d(^TMP($zn,$j,0,cnt1))  d
 .s tc=^(cnt1) i $$getall^LVBCTTCT(tc) 
 .s cnt2="" f  s cnt2=$o(PLIST(cnt2)) q:cnt2=""  d
 ..s sc=$p(PLIST(cnt2),$c(2),3)
 ..s ^TMP($zn,$j,1,sc)=$g(^TMP($zn,$j,1,sc))+1
 ..i '$d(^TMP($zn,$j,2,sc)) s ^TMP($zn,$j,2,sc)=$p(PLIST(cnt2),$c(2),3)_$c(2)_$p(PLIST(cnt2),$c(2),3)_$c(2)_$p(PLIST(cnt2),$c(2),3)
 s cnt1=$o(^TMP($zn,$j,0,""),-1),x=0 k PLIST
 s sc="" f  s sc=$o(^TMP($zn,$j,1,sc)) q:sc=""  i ^(sc)=cnt1 d
 .s x=x+1,PLIST(x)=^TMP($zn,$j,2,sc)
 k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q 0
 ; description for test item from group
descr(par,res) n (par,res) s par=$g(par),res=$g(res)
 ; get test item
 s x1=$p(par,"||",1),x2=$p(par,"||",2),x3=$p(par,"||",3)
 i '$l(x1)!'$l(x2)!'$l(x3) q ""
 s tc=$o(^TTAB("TS",x1,"FRAME",x2,x3,"ITEM",""))
 ; get test item standard comment
 i $$select^LVBCTTCT(tc_"||"_res,"Y") q ""
 q PLIST(3)
%CTTSE0o s $zt="%CTTSE0E" s SQLCODE=$s($g(%CTTSE0c):-101,1:0) q:SQLCODE'=0  s %CTTSE0d(13)=0 s %CTTSE0d(14)=0,%CTTSE0d(15)=""
 s %CTTSE0d(7)=$g(par)
 s %CTTSE0t(1)=$i(^||%sql.temp)
 s %CTTSE0c=1 q
%CTTSE0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTSE0c,%CTTSE0d,%CTTSE0E,%CTTSE0l,%CTTSE0n,%CTTSE0R,%CTTSE0s,%CTTSE0t,%CTTSE0Z q
%0Afirst s %CTTSE0d(12)=""
 k ^||%sql.temp(%CTTSE0t(1),0) s ^||%sql.temp(%CTTSE0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTTSE0t(1),0))
 d %0ABMod
 ; asl MOD# 4
 i $sortend(^||%sql.temp(%CTTSE0t(1),0))
 s %CTTSE0s(5)=""
%0ADk1 s %CTTSE0s(5)=$o(^||%sql.temp(%CTTSE0t(1),0,%CTTSE0s(5)))
 i %CTTSE0s(5)="" g %0ADdun
 s %CTTSE0d(5)=$s(%CTTSE0s(5)=-1E14:"",1:%CTTSE0s(5))
 s %CTTSE0s(12)=""
%0ADk2 s %CTTSE0s(12)=$o(^||%sql.temp(%CTTSE0t(1),0,%CTTSE0s(5),%CTTSE0s(12)))
 i %CTTSE0s(12)="" g %0ADk1
 s %CTTSE0d(12)=$s(%CTTSE0s(12)=-1E14:"",1:%CTTSE0s(12))
 s %CTTSE0d(42)=$g(^||%sql.temp(%CTTSE0t(1),0,%CTTSE0s(5),%CTTSE0d(12)))
 s %CTTSE0d(1)=$lg(%CTTSE0d(42),3) s %CTTSE0d(2)=$lg(%CTTSE0d(42),4) s %CTTSE0d(3)=$lg(%CTTSE0d(42),1) s %CTTSE0d(4)=$lg(%CTTSE0d(42),5) s %CTTSE0d(6)=$lg(%CTTSE0d(42),2)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTSE0d(13)=%CTTSE0d(13)+1,%ROWCOUNT=%CTTSE0d(13),%ROWID=%CTTSE0d(2),%CTTSE0c=10 q
%CTTSE0f i '$g(%CTTSE0c) { s SQLCODE=-102 q  } i %CTTSE0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTSE0d(13))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTSE0d(13),%CTTSE0c=100 q  } g %0Afirst:%CTTSE0c=1
 g %0ADk2
%0ADdun 
%0AAdun 
 s %ROWCOUNT=%CTTSE0d(13),SQLCODE=100,%CTTSE0c=100 q
%CTTSE0c i '$g(%CTTSE0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTSE0d(13)),1:0) f %CTTSE0d(16)=1 { i $sortend(^||%sql.temp(%CTTSE0t(%CTTSE0d(16)),0),0) } k ^||%sql.temp(%CTTSE0t(1))
 i $zu(115,2)=1,$g(%CTTSE0d(14))=1 { l -@%CTTSE0d(15) } k %CTTSE0c,%CTTSE0d,%CTTSE0E,%CTTSE0l,%CTTSE0n,%CTTSE0R,%CTTSE0s,%CTTSE0t,%CTTSE0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTSE0c=100
 f %CTTSE0d(16)=1 i $sortend(^||%sql.temp(%CTTSE0t(%CTTSE0d(16)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTTSE0d(1)=%CTTSE0d(7)
 s %CTTSE0d(9)=$p(%CTTSE0d(1),"||"),%CTTSE0d(10)=$p(%CTTSE0d(1),"||",2),%CTTSE0d(11)=$p(%CTTSE0d(1),"||",3)
 i %CTTSE0d(9)="" g %0ABdun
 i %CTTSE0d(10)="" g %0ABdun
 i %CTTSE0d(11)="" g %0ABdun
 s %CTTSE0d(3)=""
%0ABk1 s %CTTSE0d(3)=$o(^TTAB("TS",%CTTSE0d(9),"FRAME",%CTTSE0d(10),%CTTSE0d(11),"RESULT",%CTTSE0d(3)))
 i %CTTSE0d(3)="" g %0ABdun
 s %CTTSE0d(28)=$g(^TTAB("TS",%CTTSE0d(9),"FRAME",%CTTSE0d(10),%CTTSE0d(11),"RESULT",%CTTSE0d(3)))
 s %CTTSE0d(4)=$p(%CTTSE0d(28),"\",1) s %CTTSE0d(5)=$p(%CTTSE0d(28),"\",2)
 s %CTTSE0d(2)=(%CTTSE0d(9))_"||"_(%CTTSE0d(10))_"||"_(%CTTSE0d(11))_"||"_(%CTTSE0d(3))
 s %CTTSE0d(1)=$p(%CTTSE0d(2),"||",1,3)
 S %CTTSE0d(6)=$$descr^LVBCTTSE($g(%CTTSE0d(1)),$g(%CTTSE0d(3)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%CTTSE0d(2),"||",1),"FRAME",$p(%CTTSE0d(2),"||",2),$p(%CTTSE0d(2),"||",3),"RESULT",$p(%CTTSE0d(2),"||",4))#"S":$zu(115,4) i $t { s %CTTSE0d(14)=1,%CTTSE0d(15)=$name(^TTAB("TS",$p(%CTTSE0d(2),"||",1),"FRAME",$p(%CTTSE0d(2),"||",2),$p(%CTTSE0d(2),"||",3),"RESULT",$p(%CTTSE0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFramesGroupRes for RowID value: "_%CTTSE0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTSE0d(9)=$p(%CTTSE0d(2),"||"),%CTTSE0d(10)=$p(%CTTSE0d(2),"||",2),%CTTSE0d(11)=$p(%CTTSE0d(2),"||",3),%CTTSE0d(3)=$p(%CTTSE0d(2),"||",4)
 i %CTTSE0d(9)'="",%CTTSE0d(10)'="",%CTTSE0d(11)'="",%CTTSE0d(3)'="",$d(^TTAB("TS",%CTTSE0d(9),"FRAME",%CTTSE0d(10),%CTTSE0d(11),"RESULT",%CTTSE0d(3)))
 e  g %0ACdun
 s %CTTSE0d(40)=$g(^TTAB("TS",%CTTSE0d(9),"FRAME",%CTTSE0d(10),%CTTSE0d(11),"RESULT",%CTTSE0d(3)))
 s %CTTSE0d(4)=$p(%CTTSE0d(40),"\",1) s %CTTSE0d(5)=$p(%CTTSE0d(40),"\",2)
 s %CTTSE0d(1)=$p(%CTTSE0d(2),"||",1,3)
 S %CTTSE0d(6)=$$descr^LVBCTTSE($g(%CTTSE0d(1)),$g(%CTTSE0d(3)))
%0ABuncommitted ;
 s %CTTSE0s(5)=$s(%CTTSE0d(5)'="":%CTTSE0d(5),1:-1E14),%CTTSE0d(12)=%CTTSE0d(12)+1,%CTTSE0d(41)="",$li(%CTTSE0d(41),3)=%CTTSE0d(1),$li(%CTTSE0d(41),4)=%CTTSE0d(2),$li(%CTTSE0d(41),1)=%CTTSE0d(3),$li(%CTTSE0d(41),5)=%CTTSE0d(4),$li(%CTTSE0d(41),2)=%CTTSE0d(6),^||%sql.temp(%CTTSE0t(1),0,%CTTSE0s(5),%CTTSE0d(12))=%CTTSE0d(41)
%0ACdun i $zu(115,2)=1,$g(%CTTSE0d(14))=1 { l -@%CTTSE0d(15) s %CTTSE0d(14)=0 }
 g %0ABk1
%0ABdun 
 q
%0Do d %CTTSE0f q:SQLCODE'=0
 s PLIST(0)=%CTTSE0d(1),PLIST(1)=%CTTSE0d(2),PLIST(2)=%CTTSE0d(3),PLIST(3)=%CTTSE0d(4),PLIST(4)=%CTTSE0d(5),PLIST(5)=%CTTSE0d(6)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(8)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(8)
 s %mmmsqld(10)=$p(PLIST(1),"||"),%mmmsqld(11)=$p(PLIST(1),"||",2),%mmmsqld(12)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(10),"FRAME",%mmmsqld(11),%mmmsqld(12),"RESULT",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(26)=$g(^TTAB("TS",%mmmsqld(10),"FRAME",%mmmsqld(11),%mmmsqld(12),"RESULT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(26),"\",1) s PLIST(4)=$p(%mmmsqld(26),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 S PLIST(5)=$$descr^LVBCTTSE($g(PLIST(0)),$g(PLIST(2)))
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),"FRAME",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"RESULT",$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TTAB("TS",$p(PLIST(1),"||",1),"FRAME",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"RESULT",$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFramesGroupRes for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$p(PLIST(1),"||"),%mmmsqld(11)=$p(PLIST(1),"||",2),%mmmsqld(12)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(10),"FRAME",%mmmsqld(11),%mmmsqld(12),"RESULT",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(38)=$g(^TTAB("TS",%mmmsqld(10),"FRAME",%mmmsqld(11),%mmmsqld(12),"RESULT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(38),"\",1) s PLIST(4)=$p(%mmmsqld(38),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 S PLIST(5)=$$descr^LVBCTTSE($g(PLIST(0)),$g(PLIST(2)))
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestSetFramesGroupRes.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTAB("TS",%mmmsqld(4),"FRAME",%mmmsqld(5),%mmmsqld(6),"RESULT",%mmmsqld(7)))
 e  g %0JBdun
 s %mmmsqld(21)=$$%getlock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(2)) i '%mmmsqld(21) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTAB("TS",%mmmsqld(4),"FRAME",%mmmsqld(5),%mmmsqld(6),"RESULT",%mmmsqld(7)))
 e  g %0JCdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestSetFramesGroupRes.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(21)=1 %ReleaseLock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(21)=1 %ReleaseLock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(21))=1 %ReleaseLock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(3),"FRAME",%mmmsqld(4),%mmmsqld(5),"RESULT",%mmmsqld(6)))
 e  g %0LBdun
 s %mmmsqld(20)=$$%getlock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(1)) i '%mmmsqld(20) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(3),"FRAME",%mmmsqld(4),%mmmsqld(5),"RESULT",%mmmsqld(6)))
 e  g %0LCdun
 d %delete^User.CTTestSetFramesGroupRes.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(20)=1 %ReleaseLock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(20)=1 %ReleaseLock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(20))=1 %ReleaseLock^User.CTTestSetFramesGroupRes.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
