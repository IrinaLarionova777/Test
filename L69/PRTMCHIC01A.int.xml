<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTMCHIC01A" type="INT" languagemode="0"><![CDATA[
PRTMCHIC01A ; IG 07/10/98 ; MEDICARE HIC  ; Compiled December 3, 2001 13:51:43 for Cache for Windows
 Q
 ; Parameters :  1.Payment Code
 ;               2.Batch Number
 ;               3.Duplicate
 ;
CREATE(REPID,PAR,USER,%msql) ; Create report
 N (REPID,PAR,USER,%msql) K ^TMP($zn,$j)
 K xHEADER D INIT
 s (xx1,xx2)="" i '$$select^LVBINVB(PAR1_"||"_PAR2) s xx1=$p(PLIST(10),$c(1),2),xx2=PLIST(5)
 s line=1,xHEADER(line)="PATHOLOGY CLAIMS "_$s($l(Claim):"for claim "_Claim,1:"")
 s line=2,xHEADER(line)=""
 s line=3,xHEADER(line)="Service Provider : "_xx1_"   ("_xx2_")"
 s line=4,xHEADER(line)="Company : "_COMP(3)_" ("_COMP(1)_")       Batch : "_PAR1_" "_PAR2
 i $l(PAR3) s xHEADER(line)=xHEADER(line)_" (Duplicate)"
 D HEADER^PRTREP00(.xHEADER),BODY,PRINT
CREND I '$$select^LVBPRPR(REPID) S PLIST(12)=PAR1_"-"_PAR2 I $$update^LVBPRPR(REPID)
 K ^TMP($zn,$j),^TMP("PRTREP00",$j)
 Q
 ; initialize parameters
INIT F J=1:1:$L(PAR,$C(1)) S @("PAR"_J)=$P(PAR,$C(1),J)
 K xSORT D H^PRTREP00(PAR10,$zn)
 S X=xLINE(2),MAX=$L(X),$P(SPACE," ",MAX)="",$P(LINE,"-",MAX)=""
 S COMP=$p(^TMCB(PAR1,PAR2),"\",3),Claim=$p(^TMCB(PAR1,PAR2),"\",4)
 i '$$select^LVBCTCO(COMP,"Y") k COMP m COMP=PLIST
 Q
 ; create temporary printing file
BODY s epis="" f  s epis=$o(^TMCB(PAR1,PAR2,epis)) q:epis=""  d
 . ; sort in surname order
 .s x1=$p(^TEPI(epis),"\",1)
 .s ^TMP($zn,$j,"REPORT",x1,epis)=^TMCB(PAR1,PAR2,epis)
 Q
PRINT i $d(^TMP($zn,$j,"REPORT")) d
 .s (BTOT1,BTOT2,CNT1,CNT2,x1)="" f  s x1=$O(^TMP($zn,$j,"REPORT",x1)) q:x1=""  d
 ..s epis="" f  s epis=$O(^TMP($zn,$j,"REPORT",x1,epis)) q:epis=""  d
 ...k VISIT i '$$select^LVBEPVIS(epis) m VISIT=PLIST s VISIT(7)=""
 ... ; set Rebill flag
 ...k xxx
 ...s Rebill="" i $$CT007^at345(epis,PAR1_"||"_PAR2)="Y" s xxx(7)=$p(VISIT(57),"||",1)_"-"_$p(VISIT(57),"||",2),Rebill="Y"
 ...k DOC i '$$select^LVBCTDR($p(VISIT(15),$c(1)),"Y") m DOC=PLIST s xxx(2)=DOC(18)
 ...i '$$select^LVBCTIC($p(VISIT(18),$c(1)),"Y"),PLIST(7)="Y",'$$select^LVBCTCC($p(VISIT(27),$c(1)),"Y") s xxx(1)=$s($l(PLIST(13))&(VISIT(12)<PLIST(13)):PLIST(14),1:PLIST(10))
 ...k PLIST m PLIST=VISIT s CNT1=CNT1+1 i Rebill'="Y" s CNT2=CNT2+1
 ...s item="" f  s item=$o(^TEPI(epis,7,item)) q:item=""  s xx=^(item) d
 ....s xxx(4)=item,xxx(5)=$p(xx,"\",1),xxx(6)=$p(xx,"\",2)
 ....i item=VISIT(54) d
 .....i '$$select^LVBCTIC($p(VISIT(18),$c(1)),"Y")
 .....s xxx(6)=$s($p($g(PLIST(5)),$c(1))="":"Initiation code",1:$p($g(PLIST(5)),$c(1))) k PLIST
 ....s BTOT1=BTOT1+xxx(5) i Rebill'="Y" s BTOT2=BTOT2+xxx(5)
 ....d PRINT^PRTREP00(.PLIST,.N) k xxx,PLIST
 ....i $p(xx,"\",3)="Y" s xxx(6)="Rule 3 exemption" d PRINT^PRTREP00(,.N) k xxx
 ...i $l(VISIT(25)) s message="" d
 .... d %0Ao
 ....i $l(message) k xxx s xxx(6)=message d PRINT^PRTREP00(,.N)
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 .D ADDLINE^PRTREP00(REPID,"PRT",xLINE(1))
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 .D ADD^SSPRINT(REPID,"PRT","?30 TOTAL BENEFIT CLAIMED     "_$j(BTOT1,0,2))
 .i CNT1'=CNT2 D ADD^SSPRINT(REPID,"PRT","?70 "_$j(BTOT2,0,2))
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 .D ADD^SSPRINT(REPID,"PRT","?30 NUMBER OF PATIENTS        "_CNT1)
 .i CNT1'=CNT2 D ADD^SSPRINT(REPID,"PRT","?70 "_CNT2)
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 s report="MCHIC",EndLine=""
 d %0Bo
 i $p(EndLine,$c(1))="Y" D PRINTEND^PRTREP00(xLINE(1))
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(VISIT(25),$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$E(VISIT(25),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(6)=$p($g(%mmmsqld(4)),"||",1,1)
 s %mmmsqld(3)=$g(%mmmsqld(4))
 i %mmmsqld(6)'="",$d(^TTAB("VA",%mmmsqld(6)))
 e  g %0ABdun
 s %mmmsqln=$g(^TTAB("VA",%mmmsqld(6)))
 s message=$p(%mmmsqln,"\",4)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0BBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(report,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$E(report,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(6)=$p($g(%mmmsqld(4)),"||",1,1)
 s %mmmsqld(3)=$g(%mmmsqld(4))
 i %mmmsqld(6)'="",$d(^TTAB("REPORT-GENERIC",%mmmsqld(6)))
 e  g %0BBdun
 s %mmmsqln=$g(^TTAB("REPORT-GENERIC",%mmmsqld(6)))
 s EndLine=$p(%mmmsqln,"\",6)
 
 s %val=$P(EndLine,$C(1)) d %0BBs1:%val'="" s $P(EndLine,$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Bc
%0BBdun 
%0BAdun 
%0Bc q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
]]></Routine>
</Export>
