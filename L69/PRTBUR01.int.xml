<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTBUR01" type="INT" languagemode="0" generated="1"><![CDATA[
PRTBUR01 ; ML 12/4/99 ; BLOOD USAGE REPORT
 q
 ; Parameters :  1. Site
 ;               2. Date From
 ;               3. Date To
 ;               4. Product
 ;
CREATE(REPID,PAR,USER,%msql) ; create report
 n (REPID,PAR,USER,%msql) k ^TMP($zn,$j)
 k xHEADER d INIT
 s line=1,xHEADER(line)="Blood Usage Report"
 s line=2,xHEADER(line)=""
 s line=3,xHEADER(line)="Site : "_$s(PAR1="":"All Sites",1:$p(^TTAB("USLOC",PAR1),"^"))
 s line=4,xHEADER(line)=""
 d HEADER^PRTREP00(.xHEADER,PAR2,PAR3),BODY,PRINT
 k ^TMP($zn,$j),^TMP("PRTREP00",$j)
 q
INIT ; initialise parameters
 f j=1:1:$l(PAR,$c(1)) s @("PAR"_j)=$p(PAR,$c(1),j)
 k xSORT d H^PRTREP00(PAR10,$zn)
 s X=xLINE(2),MAX=$l(X),$p(SPACE," ",MAX)="",$p(LINE,"-",MAX)=""
 q
BODY ; create temporary printing file
 s date=PAR2-1 f  s date=$o(^BB("PK",0,"Date",date)) q:date=""  q:date>PAR3  d
 .s tran="" f  s tran=$o(^BB("PK",0,"Date",date,tran)) q:tran=""  d
 ..; extract total # of x-matched/transfused units
 ..i " X I DI EI T "'[(" "_$p($g(^CT("TRANS",tran)),"^")_" ") q
 ..s pack="" f  s pack=$o(^BB("PK",0,"Date",date,tran,pack)) q:pack=""  q:'$d(^BB("PK",pack))  d
 ...s packdet=^(pack),loc=$p(packdet,"^",10),site=$p($g(^CT("LO",+loc)),"^",3),prod=$p(packdet,"^",6) q:'prod
 ...i PAR1'="",PAR1'=site q
 ...s:site="" site=" "
 ...i PAR4,PAR4-prod q
 ...s xcnt="" f  s xcnt=$o(^BB("PK",0,"Date",date,tran,pack,xcnt),-1) q:xcnt=""  d
 ....s trandet=^BB("PK",pack,"TRANS",xcnt),epis=$p(trandet,"^",8) q:epis=""
 ....s trans=$p($g(^CT("TRANS",+tran)),"^")
 ....s trans=$s(trans["X":"X",1:"T")
 ....i $d(^TMP($zn,$j,site,prod,"PACK",pack,trans)) q
 ....s ^TMP($zn,$j,site,prod,"UNIT",trans)=$g(^TMP($zn,$j,site,prod,"UNIT",trans))+1
 ....s ^TMP($zn,$j,site,prod,"PACK",pack,trans)=""
 ....s ^TMP($zn,$j,site,prod,"EPIS",epis,trans)=$g(^TMP($zn,$j,site,prod,"EPIS",epis,trans))+1
 ; calculate # of episodes with xmatch/transfused units
 s site="" f  s site=$o(^TMP($zn,$j,site)) q:site=""  d
 .s prod="" f  s prod=$o(^TMP($zn,$j,site,prod)) q:prod=""  d
 ..s epis="" f  s epis=$o(^TMP($zn,$j,site,prod,"EPIS",epis)) q:epis=""  d
 ...s tran="" f  s tran=$o(^TMP($zn,$j,site,prod,"EPIS",epis,tran)) q:tran=""  d
 ....s tran(tran)=$g(tran(tran))+1
 ..s tran="" f  s tran=$o(tran(tran)) q:tran=""  s ^TMP($zn,$j,site,prod,"TRAN",tran)=tran(tran)
 ..k tran
 q
PRINT ; print report
 s site="" f i=1:1:10 s xxx(i)=""
 f  s site=$o(^TMP($zn,$j,site)) q:site=""  d
 .s xxx(1)=site
 .s prod="" f  s prod=$o(^TMP($zn,$j,site,prod)) q:prod=""  d
 ..s xxx(2)=$p($g(^CT("PR",+prod)),"^",1)
 ..s xxx(3)=$g(^TMP($zn,$j,site,prod,"TRAN","X")),xxx(4)=$g(^TMP($zn,$j,site,prod,"TRAN","T"))
 ..s xxx(5)=$g(^TMP($zn,$j,site,prod,"UNIT","X")),xxx(6)=$g(^TMP($zn,$j,site,prod,"UNIT","T"))
 ..s xxx(7)=$s('xxx(3):"",1:$j(xxx(5)/xxx(3),0,1))
 ..s xxx(8)=$s('xxx(4):"",1:$j(xxx(3)/xxx(4),0,1))
 ..s xxx(9)=$s('xxx(6):"",1:$j(xxx(5)/xxx(6),0,1))
 ..d PRINT^PRTREP00(,.N)
 ..k xxx f i=1:1:10 s xxx(i)=""
 q
]]></Routine>
</Export>
