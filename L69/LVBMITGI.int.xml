<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBMITGI" type="INT" languagemode="0" generated="1"><![CDATA[
LVBMITGI ; IG 6/5/98 ; LVB Control data access for MITGI MIF_MachineTestGroupTCode
 ;
 ; supported calls:
 ;
 ; $$insert^LVBMITGI(par)
 ; $$update^LVBMITGI(ROWID)
 ; $$select^LVBMITGI(ROWID)
 ; $$delete^LVBMITGI(ROWID,Comments)
 ; $$open^LVBMITGI(par,display,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBMITGI(par,display,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBMITGI(par,display,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBMITGI(par,display,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBMITGI()
 ; $$getall^LVBMITGI(par,display)
 ; $$create^LVBMITGI(par)
 ;
  ;---&sql(DECLARE MITGI CURSOR FOR SELECT * FROM MIF_MachineTestGroupTCode
   ;---         WHERE MITGI_ParRef = :par
   ;---         AND ((MITGI_Display = :display) OR (:display IS NULL))
   ;---         ORDER BY MITGI_Order)
   ;--- ** SQL PUBLIC Variables: SQLCODE, display, par
 ;
open(par,display,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),display=$g(display)
  ;---&SQL(OPEN MITGI)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MITGI0o
 q 0
 ;
fetch(par,display,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),display=$g(display)
  ;---&SQL(FETCH MITGI INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,display,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),display=$g(display) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,display) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,display,p2,p3,p4,p5,p6,p7,p8,p9) N (par,display,PLIST) s par=$g(par),display=$g(display) K ^TMP($zn,$j)
 i $$open(par,display)
 f cnt=1:1 Q:$$fetch(par,display)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE MITGI)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MITGI0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM MIF_MachineTestGroupTCode WHERE MITGI_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO MIF_MachineTestGroupTCode VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE MIF_MachineTestGroupTCode VALUES :PLIST() WHERE MITGI_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM MIF_MachineTestGroupTCode WHERE MITGI_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTC(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$C(1)_PLIST(14)_$C(1)_PLIST(5)_$C(1)_PLIST(6)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 ;
 q
getall(par,display) n (par,display,PLIST) k ^TMP($zn,$j) s par=$g(par),display=$g(display)
 i $$open(par,display)
 f cnt=1:1 q:$$fetch(par,display)  d
 .d
 ..s ti=$p(PLIST(2),$c(1)) n (ti,plist)
 ..k plist i '$$select^LVBCTTC(ti,"Y") m plist=PLIST
 .s str=$s($l($p(PLIST(2),$c(1),3)):$p(PLIST(2),$c(1),3),1:$p(PLIST(2),$c(1),2))_$c(28)_$p(PLIST(2),$c(1),4)_$c(28)_$p(PLIST(2),$c(1),5)_$c(28)_$p(plist(7),$c(1),1)_$c(28)_$p(plist(8),$c(1),1)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1),2)_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
create(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par),mi=$p(par,"||",1),tg=$p(par,"||",2)
 i $$open^LVBMITGS(par)
 f  q:$$fetch^LVBMITGS(par)  i $$update^LVBMITGS(PLIST(1))
 i $$close^LVBMITGS()
 k ^TMP($zn,$j,1) i '$$getall^LVBMITGS(par) m ^TMP($zn,$j,1)=PLIST
 s cnt1="" f  s cnt1=$o(^TMP($zn,$j,1,cnt1))  q:cnt1=""  s ts=$p(^(cnt1),$c(2),3) i $l(ts) d
 .i $$getall1^LVBCTTC(ts)
 .s cnt2="" f  s cnt2=$o(PLIST(cnt2)) q:cnt2=""  s tc=$p(PLIST(cnt2),$c(2),3) i $l(tc) s ^TMP($zn,$j,2,tc)=""
 s (cnt,tc)="" f  s tc=$o(^TMP($zn,$j,2,tc)) q:tc=""  d
 .i $p($g(^TMIF(mi,"TG",tg,"TC",tc)),"\",2)>cnt s cnt=$p($g(^TMIF(mi,"TG",tg,"TC",tc)),"\",2)
 .s ^TMP($zn,$j,2,tc)=$g(^TMIF(mi,"TG",tg,"TC",tc))
 k ^TMIF(mi,"TG",tg,"TC")
 s tc="" f  s tc=$o(^TMP($zn,$j,2,tc)) q:tc=""  d
 .i $g(^TMP($zn,$j,2,tc))'="" s ^TMIF(mi,"TG",tg,"TC",tc)=^TMP($zn,$j,2,tc)
 .e  s cnt=cnt+1,^TMIF(mi,"TG",tg,"TC",tc)="Y\"_cnt
 k ^TMP($zn,$j)
 ; create TMIF(,2) and TMIF(,3)
 i $$create^LVBMITC(mi)
 q 0
%MITGI0o s $zt="%MITGI0E" s SQLCODE=$s($g(%MITGI0c):-101,1:0) q:SQLCODE'=0  s %MITGI0d(14)=0 s %MITGI0d(15)=0,%MITGI0d(16)=""
 s %MITGI0d(6)=$g(par),%MITGI0d(7)=$g(display),%MITGI0d(8)=$g(display)
 s %MITGI0t(1)=$i(^||%sql.temp)
 s %MITGI0d(11)=$zu(28,%MITGI0d(7),7)
 s %MITGI0c=1 q
%MITGI0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %MITGI0c,%MITGI0d,%MITGI0E,%MITGI0l,%MITGI0n,%MITGI0R,%MITGI0s,%MITGI0t,%MITGI0Z q
%0Afirst 
 k ^||%sql.temp(%MITGI0t(1),0) s ^||%sql.temp(%MITGI0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%MITGI0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%MITGI0t(1),0))
 s %MITGI0s(5)=""
%0ACk1 s %MITGI0s(5)=$o(^||%sql.temp(%MITGI0t(1),0,%MITGI0s(5)))
 i %MITGI0s(5)="" g %0ACdun
 s %MITGI0d(5)=$s(%MITGI0s(5)=-1E14:"",1:%MITGI0s(5))
 s %MITGI0s(2)=""
%0ACk2 s %MITGI0s(2)=$o(^||%sql.temp(%MITGI0t(1),0,%MITGI0s(5),%MITGI0s(2)))
 i %MITGI0s(2)="" g %0ACk1
 s %MITGI0d(2)=$s(%MITGI0s(2)=-1E14:"",1:%MITGI0s(2))
 s %MITGI0d(28)=$g(^||%sql.temp(%MITGI0t(1),0,%MITGI0s(5),%MITGI0s(2)))
 s %MITGI0d(1)=$lg(%MITGI0d(28),2) s %MITGI0d(3)=$lg(%MITGI0d(28),3) s %MITGI0d(4)=$lg(%MITGI0d(28),1)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TMIF($p(%MITGI0d(2),"||",1),"TG",$p(%MITGI0d(2),"||",2),"TC",$p(%MITGI0d(2),"||",3))#"S":$zu(115,4) i $t { s %MITGI0d(15)=1,%MITGI0d(16)=$name(^TMIF($p(%MITGI0d(2),"||",1),"TG",$p(%MITGI0d(2),"||",2),"TC",$p(%MITGI0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineTestGroupTCode for RowID value: "_%MITGI0d(2) ztrap "LOCK"  }
 ; asl MOD# 4
 s %MITGI0d(12)=$p(%MITGI0d(2),"||"),%MITGI0d(13)=$p(%MITGI0d(2),"||",2),%MITGI0d(3)=$p(%MITGI0d(2),"||",3)
 i %MITGI0d(12)'="",%MITGI0d(13)'="",%MITGI0d(3)'="",$d(^TMIF(%MITGI0d(12),"TG",%MITGI0d(13),"TC",%MITGI0d(3)))
 e  g %0ADdun
 s %MITGI0d(37)=$g(^TMIF(%MITGI0d(12),"TG",%MITGI0d(13),"TC",%MITGI0d(3)))
 s %MITGI0d(4)=$p(%MITGI0d(37),"\",1) s %MITGI0d(5)=$p(%MITGI0d(37),"\",2)
 s %MITGI0d(1)=$p(%MITGI0d(2),"||",1,2)
 s %MITGI0d(10)=$zu(28,%MITGI0d(4),7)
 g:'(%MITGI0d(1)=%MITGI0d(6)) %0ADdun
 g:'(((%MITGI0d(10)'=" ")&&(%MITGI0d(10)=%MITGI0d(11)))||(%MITGI0d(8)="")) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %MITGI0d(14)=%MITGI0d(14)+1,%ROWCOUNT=%MITGI0d(14),%ROWID=%MITGI0d(2),%MITGI0c=10 q
%MITGI0f i '$g(%MITGI0c) { s SQLCODE=-102 q  } i %MITGI0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%MITGI0d(14))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%MITGI0d(14),%MITGI0c=100 q  } g %0Afirst:%MITGI0c=1
%0ADdun i $zu(115,2)=1,$g(%MITGI0d(15))=1 { l -@%MITGI0d(16) s %MITGI0d(15)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%MITGI0d(14),SQLCODE=100,%MITGI0c=100 q
%MITGI0c i '$g(%MITGI0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%MITGI0d(14)),1:0) f %MITGI0d(17)=1 { i $sortend(^||%sql.temp(%MITGI0t(%MITGI0d(17)),0),0) } k ^||%sql.temp(%MITGI0t(1))
 i $zu(115,2)=1,$g(%MITGI0d(15))=1 { l -@%MITGI0d(16) } k %MITGI0c,%MITGI0d,%MITGI0E,%MITGI0l,%MITGI0n,%MITGI0R,%MITGI0s,%MITGI0t,%MITGI0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %MITGI0c=100
 f %MITGI0d(17)=1 i $sortend(^||%sql.temp(%MITGI0t(%MITGI0d(17)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %MITGI0d(1)=%MITGI0d(6)
 s %MITGI0d(12)=$p(%MITGI0d(1),"||"),%MITGI0d(13)=$p(%MITGI0d(1),"||",2)
 i %MITGI0d(12)="" g %0ABdun
 i %MITGI0d(13)="" g %0ABdun
 s %MITGI0d(3)=""
%0ABk1 s %MITGI0d(3)=$o(^TMIF(%MITGI0d(12),"TG",%MITGI0d(13),"TC",%MITGI0d(3)))
 i %MITGI0d(3)="" g %0ABdun
 s %MITGI0d(26)=$g(^TMIF(%MITGI0d(12),"TG",%MITGI0d(13),"TC",%MITGI0d(3)))
 s %MITGI0d(4)=$p(%MITGI0d(26),"\",1) s %MITGI0d(5)=$p(%MITGI0d(26),"\",2)
 s %MITGI0d(2)=(%MITGI0d(12))_"||"_(%MITGI0d(13))_"||"_(%MITGI0d(3))
 s %MITGI0d(10)=$zu(28,%MITGI0d(4),7)
 g:'(((%MITGI0d(10)'=" ")&&(%MITGI0d(10)=%MITGI0d(11)))||(%MITGI0d(8)="")) %0ABk1
 s %MITGI0s(5)=$s(%MITGI0d(5)'="":%MITGI0d(5),1:-1E14),%MITGI0s(2)=$s(%MITGI0d(2)'="":%MITGI0d(2),1:-1E14),%MITGI0d(27)="",$li(%MITGI0d(27),2)=%MITGI0d(1),$li(%MITGI0d(27),3)=%MITGI0d(3),$li(%MITGI0d(27),1)=%MITGI0d(4),^||%sql.temp(%MITGI0t(1),0,%MITGI0s(5),%MITGI0s(2))=%MITGI0d(27)
 g %0ABk1
%0ABdun 
 q
%0Do d %MITGI0f q:SQLCODE'=0
 s PLIST(0)=%MITGI0d(1),PLIST(1)=%MITGI0d(2),PLIST(2)=%MITGI0d(3),PLIST(3)=%MITGI0d(4),PLIST(4)=%MITGI0d(5)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(7)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(9),"TG",%mmmsqld(10),"TC",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(21)=$g(^TMIF(%mmmsqld(9),"TG",%mmmsqld(10),"TC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(21),"\",1) s PLIST(4)=$p(%mmmsqld(21),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TMIF($p(PLIST(1),"||",1),"TG",$p(PLIST(1),"||",2),"TC",$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TMIF($p(PLIST(1),"||",1),"TG",$p(PLIST(1),"||",2),"TC",$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineTestGroupTCode for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(9),"TG",%mmmsqld(10),"TC",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(30)=$g(^TMIF(%mmmsqld(9),"TG",%mmmsqld(10),"TC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(30),"\",1) s PLIST(4)=$p(%mmmsqld(30),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.MIFMachineTestGroupTCode.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TMIF(%mmmsqld(4),"TG",%mmmsqld(5),"TC",%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TMIF(%mmmsqld(4),"TG",%mmmsqld(5),"TC",%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.MIFMachineTestGroupTCode.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(3),"TG",%mmmsqld(4),"TC",%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(3),"TG",%mmmsqld(4),"TC",%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.MIFMachineTestGroupTCode.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.MIFMachineTestGroupTCode.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
