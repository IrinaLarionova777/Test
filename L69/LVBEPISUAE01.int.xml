<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBEPISUAE01" type="INT" languagemode="0" generated="1"><![CDATA[
LVBEPISUAE01 ; ML 31/08/00 ; Episode control - United Arab Emirates - ADNOC
 ;
 ; supported calls:
 ;
 ; $$check^LVBEPISUAE01(site,epis)
 ; $$medicare^LVBEPISUAE01(pc,deb,data,type)
 ;
check(site,epis) n (PLIST,site,epis) k PLIST
 ; check existing TEPI
 i $d(^TEPI(epis)) s deb="" d  g end
 .  ;---&sql(SELECT EPVIS_DebtorNumber_DR INTO :deb FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, deb, epis
 . Do %0Ao
 .s deb=$p(deb,$c(1)),ok=$s($l(deb):10,1:40) k PLIST s PLIST(1)=epis
 ; normal request for new Episode
 i epis="." s ok=50 i '$$new^LVBEPVIS("") g end
 ; check Episode format
 s rowid=1,format=""
  ;---&sql( SELECT CFLAB_VisitNumberFormat INTO :format FROM CF_LabTrak WHERE CFLAB_RowID = :rowid)
   ;--- ** SQL PUBLIC Variables: SQLCODE, format, rowid
 Do %0Co
 i '$l(format) s ok=50 k PLIST s PLIST(1)=epis g end
 i $l(format),epis?@format s ok=50 k PLIST s PLIST(1)=epis g end
 s ok=100
end s PLIST=$o(PLIST(""),-1)
 q ok
medicare(pc,deb,data,type) q 0
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(10)=$g(^TEPI(%mmmsqld(3)))
 s deb=$p(%mmmsqld(10),"\",18)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TEPI($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0ACdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(3)))
 s deb=$p(%mmmsqld(13),"\",18)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(rowid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^CF("LAB",%mmmsqld(3)))
 i '$t
 e  i 1]]%mmmsqld(3)
 i  g %0CBdun
 s %mmmsqld(12)=$g(^CF("LAB",%mmmsqld(3)))
 s format=$p(%mmmsqld(12),"^",8)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^CF("LAB",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^CF("LAB",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CF_LabTrak for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^CF("LAB",%mmmsqld(3)))
 i '$t
 e  i 1]]%mmmsqld(3)
 i  g %0CCdun
 s %mmmsqld(17)=$g(^CF("LAB",%mmmsqld(3)))
 s format=$p(%mmmsqld(17),"^",8)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
]]></Routine>
</Export>
