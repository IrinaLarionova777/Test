<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTSO" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTSO ; IG 1/5/98 ; LVB Control data access for CTTSO CT_TestSetXM
 ;
 ; supported calls:
 ;
 ; $$save^LVBCTTSO(par)
 ; $$insert^LVBCTTSO(par)
 ; $$delete^LVBCTTSO(ROWID,Comments)
 ; $$delall^LVBCTTSO(par)
 ; $$update^LVBCTTSO(ROWID)
 ; $$select^LVBCTTSO(ROWID,skip)
 ; $$open^LVBCTTSO(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTTSO(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTTSO(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTTSO(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTTSO()
 ; $$getall^LVBCTTSO(par)
 ;
  ;---&sql(DECLARE CTTSO CURSOR FOR SELECT * FROM CT_TestSetXM
   ;---         WHERE CTTSO_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTTSO)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSO0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTTSO INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTTSO)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSO0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetXM WHERE CTTSO_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO CT_TestSetXM VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_TestSetXM VALUES :PLIST() WHERE CTTSO_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; save all 
save(par) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST
 ; delete all previous data
 i $$delall(par)
 s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  s xx=^(cnt) d
 .k PLIST f j=1:1:$l(xx,$c(1)) s PLIST(j)=$p(xx,$c(1),j)
 .s PLIST=$o(PLIST(""),-1) i $$insert(par)
 k ^TMP($zn,$j)
 q 0
delall(par) s par=$g(par)
  ;---&sql(DELETE FROM CT_TestSetXM WHERE CTTSO_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 Do %0Lo
 q SQLCODE
 ; Delete the data
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_TestSetXM WHERE CTTSO_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0No
 k ^TMP("Comments",$j)
 q SQLCODE
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(9))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTTC(plist(9))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(9)=X K plist
 q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%CTTSO0o s $zt="%CTTSO0E" s SQLCODE=$s($g(%CTTSO0c):-101,1:0) q:SQLCODE'=0  s %CTTSO0d(14)=0 s %CTTSO0d(15)=0,%CTTSO0d(16)=""
 s %CTTSO0d(11)=$g(par)
 s %CTTSO0c=1 q
%CTTSO0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTSO0c,%CTTSO0d,%CTTSO0E,%CTTSO0l,%CTTSO0n,%CTTSO0R,%CTTSO0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTTSO0d(1)=%CTTSO0d(11)
 i %CTTSO0d(1)="" g %0ABdun
 s %CTTSO0d(3)=""
%0ABk1 s %CTTSO0d(3)=$o(^TTAB("TS",%CTTSO0d(1),"XM",%CTTSO0d(3)))
 i %CTTSO0d(3)="" g %0ABdun
 s %CTTSO0d(24)=$g(^TTAB("TS",%CTTSO0d(1),"XM",%CTTSO0d(3)))
 s %CTTSO0d(4)=$p(%CTTSO0d(24),"\",1) s %CTTSO0d(5)=$p(%CTTSO0d(24),"\",2) s %CTTSO0d(6)=$p(%CTTSO0d(24),"\",5) s %CTTSO0d(7)=$p(%CTTSO0d(24),"\",3) s %CTTSO0d(8)=$p(%CTTSO0d(24),"\",4) s %CTTSO0d(9)=$p(%CTTSO0d(24),"\",6) s %CTTSO0d(10)=$p(%CTTSO0d(24),"\",7)
 s %CTTSO0d(2)=(%CTTSO0d(1))_"||"_(%CTTSO0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%CTTSO0d(2),"||",1),"XM",$p(%CTTSO0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTTSO0d(15)=1,%CTTSO0d(16)=$name(^TTAB("TS",$p(%CTTSO0d(2),"||",1),"XM",$p(%CTTSO0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetXM for RowID value: "_%CTTSO0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTSO0d(13)=$p(%CTTSO0d(2),"||"),%CTTSO0d(3)=$p(%CTTSO0d(2),"||",2)
 i %CTTSO0d(13)'="",%CTTSO0d(3)'="",$d(^TTAB("TS",%CTTSO0d(13),"XM",%CTTSO0d(3)))
 e  g %0ACdun
 s %CTTSO0d(32)=$g(^TTAB("TS",%CTTSO0d(13),"XM",%CTTSO0d(3)))
 s %CTTSO0d(4)=$p(%CTTSO0d(32),"\",1) s %CTTSO0d(5)=$p(%CTTSO0d(32),"\",2) s %CTTSO0d(6)=$p(%CTTSO0d(32),"\",5) s %CTTSO0d(7)=$p(%CTTSO0d(32),"\",3) s %CTTSO0d(8)=$p(%CTTSO0d(32),"\",4) s %CTTSO0d(9)=$p(%CTTSO0d(32),"\",6) s %CTTSO0d(10)=$p(%CTTSO0d(32),"\",7)
 s %CTTSO0d(1)=$p(%CTTSO0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTSO0d(14)=%CTTSO0d(14)+1,%ROWCOUNT=%CTTSO0d(14),%ROWID=%CTTSO0d(2),%CTTSO0c=10 q
%CTTSO0f i '$g(%CTTSO0c) { s SQLCODE=-102 q  } i %CTTSO0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTSO0d(14))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTSO0d(14),%CTTSO0c=100 q  } g %0Afirst:%CTTSO0c=1
%0ACdun i $zu(115,2)=1,$g(%CTTSO0d(15))=1 { l -@%CTTSO0d(16) s %CTTSO0d(15)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTTSO0d(14),SQLCODE=100,%CTTSO0c=100 q
%CTTSO0c i '$g(%CTTSO0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTSO0d(14)),1:0)
 i $zu(115,2)=1,$g(%CTTSO0d(15))=1 { l -@%CTTSO0d(16) } k %CTTSO0c,%CTTSO0d,%CTTSO0E,%CTTSO0l,%CTTSO0n,%CTTSO0R,%CTTSO0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTSO0c=100 q
%0Do d %CTTSO0f q:SQLCODE'=0
 s PLIST(0)=%CTTSO0d(1),PLIST(1)=%CTTSO0d(2),PLIST(2)=%CTTSO0d(3),PLIST(3)=%CTTSO0d(4),PLIST(4)=%CTTSO0d(5),PLIST(5)=%CTTSO0d(6),PLIST(6)=%CTTSO0d(7),PLIST(7)=%CTTSO0d(8),PLIST(8)=%CTTSO0d(9),PLIST(9)=%CTTSO0d(10)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(15)=0,%mmmsqld(16)=""
 s %mmmsqld(12)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(12)
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(14)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(14),"XM",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(24)=$g(^TTAB("TS",%mmmsqld(14),"XM",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(24),"\",1) s PLIST(4)=$p(%mmmsqld(24),"\",2) s PLIST(5)=$p(%mmmsqld(24),"\",5) s PLIST(6)=$p(%mmmsqld(24),"\",3) s PLIST(7)=$p(%mmmsqld(24),"\",4) s PLIST(8)=$p(%mmmsqld(24),"\",6) s PLIST(9)=$p(%mmmsqld(24),"\",7)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),"XM",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(15)=1,%mmmsqld(16)=$name(^TTAB("TS",$p(PLIST(1),"||",1),"XM",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetXM for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(14)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(14),"XM",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(32)=$g(^TTAB("TS",%mmmsqld(14),"XM",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"\",1) s PLIST(4)=$p(%mmmsqld(32),"\",2) s PLIST(5)=$p(%mmmsqld(32),"\",5) s PLIST(6)=$p(%mmmsqld(32),"\",3) s PLIST(7)=$p(%mmmsqld(32),"\",4) s PLIST(8)=$p(%mmmsqld(32),"\",6) s PLIST(9)=$p(%mmmsqld(32),"\",7)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) s %mmmsqld(15)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestSetXM.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(4),"XM",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(15)=$$%getlock^User.CTTestSetXM.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(4),"XM",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestSetXM.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(par)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)="" g %0LBdun
 s %mmmsqld(4)=""
%0LBk1 s %mmmsqld(4)=$o(^TTAB("TS",%mmmsqld(1),"XM",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0LBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 s %mmmsqld(15)=$$%getlock^User.CTTestSetXM.T1(%mmmsqld(3)) i '%mmmsqld(15) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(4)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(5)'="",%mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(5),"XM",%mmmsqld(4)))
 e  g %0LCdun
 s %mmmsqld(1)=$p(%mmmsqld(3),"||")
 d %delete^User.CTTestSetXM.T1(%mmmsqld(3),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(3)) g %0Lc
%0LCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(3)) g:SQLCODE<0 %0Lc
 g %0LBk1
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(3)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(3),"XM",%mmmsqld(4)))
 e  g %0NBdun
 s %mmmsqld(14)=$$%getlock^User.CTTestSetXM.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(3),"XM",%mmmsqld(4)))
 e  g %0NCdun
 d %delete^User.CTTestSetXM.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(1)) g %0Nc
%0NCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(1)) g:SQLCODE<0 %0Nc
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTTestSetXM.T1(%mmmsqld(1)) g %0Nc
]]></Routine>
</Export>
