<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSUPH" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSUPH ; SP 9/11/95 ; LVB Control data access for SS_User_PasswordHistory
 ;
 ; supported calls:
 ;
 ; $$insert^MVBSUPH(par)
 ; $$select^MVBSUPH(ROWID)
 ; $$open^MVBSUPH(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSUPH(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSUPH(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSUPH(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSUPH()
 ; $$getall^MVBSUPH(par)
 ;
  ;---&sql(DECLARE SUPH CURSOR FOR SELECT * FROM SS_User_PasswordHistory
   ;---         WHERE SUPH_ParRef = :par
   ;---         ORDER BY SUPH_Order Desc)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN SUPH)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SUPH0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH SUPH INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE SUPH)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SUPH0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM SS_User_PasswordHistory WHERE SUPH_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) d pre("N") K PLIST(1),PLIST(2)
  ;---&sql(INSERT INTO SS_User_PasswordHistory VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s PLIST(2)=$o(^SSU("SSUSR",1,PLIST(0),"PH",""),-1)+1
 s PLIST(4)=+$h,PLIST(5)=$p($h,",",2)
 q
 ; Adjust certain fields
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
%SUPH0o s $zt="%SUPH0E" s SQLCODE=$s($g(%SUPH0c):-101,1:0) q:SQLCODE'=0  s %SUPH0d(10)=0 s %SUPH0d(11)=0,%SUPH0d(12)=""
 s %SUPH0d(7)=$g(par)
 s %SUPH0c=1 q
%SUPH0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SUPH0c,%SUPH0d,%SUPH0E,%SUPH0l,%SUPH0n,%SUPH0R,%SUPH0Z q
%0Afirst 
 ; asl MOD# 2
 s %SUPH0d(1)=%SUPH0d(7)
 i %SUPH0d(1)="" g %0ABdun
 s %SUPH0d(3)=" "
%0ABk1 s %SUPH0d(3)=$zp(^SSU("SSUSR",1,%SUPH0d(1),"PH",%SUPH0d(3)))
 i %SUPH0d(3)="" g %0ABdun
 s %SUPH0d(22)=$g(^SSU("SSUSR",1,%SUPH0d(1),"PH",%SUPH0d(3)))
 s %SUPH0d(4)=$p(%SUPH0d(22),"^",1) s %SUPH0d(5)=$p(%SUPH0d(22),"^",2) s %SUPH0d(6)=$p(%SUPH0d(22),"^",3)
 s %SUPH0d(2)=(%SUPH0d(1))_"||"_(%SUPH0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(%SUPH0d(2),"||",1),"PH",$p(%SUPH0d(2),"||",2))#"S":$zu(115,4) i $t { s %SUPH0d(11)=1,%SUPH0d(12)=$name(^SSU("SSUSR",1,$p(%SUPH0d(2),"||",1),"PH",$p(%SUPH0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User_PasswordHistory for RowID value: "_%SUPH0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SUPH0d(9)=$p(%SUPH0d(2),"||"),%SUPH0d(3)=$p(%SUPH0d(2),"||",2)
 i %SUPH0d(9)'="",%SUPH0d(3)'="",$d(^SSU("SSUSR",1,%SUPH0d(9),"PH",%SUPH0d(3)))
 e  g %0ACdun
 s %SUPH0d(32)=$g(^SSU("SSUSR",1,%SUPH0d(9),"PH",%SUPH0d(3)))
 s %SUPH0d(4)=$p(%SUPH0d(32),"^",1) s %SUPH0d(5)=$p(%SUPH0d(32),"^",2) s %SUPH0d(6)=$p(%SUPH0d(32),"^",3)
 s %SUPH0d(1)=$p(%SUPH0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SUPH0d(10)=%SUPH0d(10)+1,%ROWCOUNT=%SUPH0d(10),%ROWID=%SUPH0d(2),%SUPH0c=10 q
%SUPH0f i '$g(%SUPH0c) { s SQLCODE=-102 q  } i %SUPH0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SUPH0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SUPH0d(10),%SUPH0c=100 q  } g %0Afirst:%SUPH0c=1
%0ACdun i $zu(115,2)=1,$g(%SUPH0d(11))=1 { l -@%SUPH0d(12) s %SUPH0d(11)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SUPH0d(10),SQLCODE=100,%SUPH0c=100 q
%SUPH0c i '$g(%SUPH0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SUPH0d(10)),1:0)
 i $zu(115,2)=1,$g(%SUPH0d(11))=1 { l -@%SUPH0d(12) } k %SUPH0c,%SUPH0d,%SUPH0E,%SUPH0l,%SUPH0n,%SUPH0R,%SUPH0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SUPH0c=100 q
%0Do d %SUPH0f q:SQLCODE'=0
 s PLIST(0)=%SUPH0d(1),PLIST(1)=%SUPH0d(2),PLIST(2)=%SUPH0d(3),PLIST(3)=%SUPH0d(4),PLIST(4)=%SUPH0d(5),PLIST(5)=%SUPH0d(6)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(8)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(8)
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^SSU("SSUSR",1,%mmmsqld(10),"PH",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(22)=$g(^SSU("SSUSR",1,%mmmsqld(10),"PH",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(22),"^",1) s PLIST(4)=$p(%mmmsqld(22),"^",2) s PLIST(5)=$p(%mmmsqld(22),"^",3)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(PLIST(1),"||",1),"PH",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^SSU("SSUSR",1,$p(PLIST(1),"||",1),"PH",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User_PasswordHistory for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^SSU("SSUSR",1,%mmmsqld(10),"PH",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(32)=$g(^SSU("SSUSR",1,%mmmsqld(10),"PH",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"^",1) s PLIST(4)=$p(%mmmsqld(32),"^",2) s PLIST(5)=$p(%mmmsqld(32),"^",3)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSUserPasswordHistory.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
]]></Routine>
</Export>
