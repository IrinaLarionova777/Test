<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBQCMLT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBQCMLT ; ML 14/6/2000 ; MVB Control code access for QC_MaterialLotType
 ;
 ; supported calls:
 ;
 ; $$insert^LVBQCML(par)
 ; $$update^LVBQCML(ROWID)
 ; $$delete^LVBQCML(ROWID,Comments)
 ; $$open^LVBQCML(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBQCML(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBQCML(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBQCML(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBQCML()
 ; $$select^LVBQCML(ROWID)
 ; $$getall^LVBQCML(par,user)
 ;
  ;---&SQL(DECLARE QCMLT CURSOR FOR SELECT * FROM QC_MaterialLotType
   ;---         WHERE QCMLT_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
 ; insert the data
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&SQL(insert INTO QC_MaterialLotType VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE QC_MaterialLotType VALUES :PLIST() WHERE QCMLT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM QC_MaterialLotType WHERE QCMLT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(par,user,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),user=$g(user)
  ;---&SQL(OPEN QCMLT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCMLT0o
 q 0
 ; fetch the data
fetch(par,user,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),user=$g(user)
  ;---f  &SQL(FETCH QCMLT INTO :PLIST()) q:SQLCODE  q:'$$ValUser(user,$p($g(PLIST(1)),$c(1)))
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 f  Do %0Jo q:SQLCODE  q:'$$ValUser(user,$p($g(PLIST(1)),$c(1)))
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,user,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),user=$g(user) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,user) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,user,p2,p3,p4,p5,p6,p7,p8,p9) n (par,user,PLIST) s par=$g(par),user=$g(user) k ^TMP($zn,$j)
 i $$open(par,user)
 f cnt=1:1 q:$$fetch(par,user)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE QCMLT)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCMLT0c
 q 0
 ; select data by code
select(ROWID) k PLIST s ROWID=$g(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM QC_MaterialLotType WHERE QCMLT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 . ; machine description
 .i plist(2)="M" d
 ..s SQLCODE=$$select^LVBMIMP(plist(3))
 . ; worksheet description
 .i plist(2)="W" d
 ..s SQLCODE=$$select^LVBWKS(plist(3))
 .s X="" i 'SQLCODE s X=plist(3)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 q
getall(par,user) n (PLIST,par,user) k ^TMP($zn,$j) s par=$g(par),user=$g(user)
 i $$open(par,user)
 f cnt=1:1 q:$$fetch(par,user)  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
ValUser(user,typeRID) n (user,typeRID) s user=$g(user),typeRID=$g(typeRID),ok=0
 i $l(user),$l(typeRID) d
 .k PLIST
 .i $$getall^LVBQCMTT(typeRID,,,user)
 .s ok='PLIST
 q ok
%QCMLT0o s $zt="%QCMLT0E" s SQLCODE=$s($g(%QCMLT0c):-101,1:0) q:SQLCODE'=0  s %QCMLT0d(9)=0 s %QCMLT0d(10)=0,%QCMLT0d(11)=""
 s %QCMLT0d(5)=$g(par)
 s %QCMLT0c=1 q
%QCMLT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %QCMLT0c,%QCMLT0d,%QCMLT0E,%QCMLT0l,%QCMLT0n,%QCMLT0R,%QCMLT0Z q
%0Afirst 
 ; asl MOD# 2
 s %QCMLT0d(1)=%QCMLT0d(5)
 s %QCMLT0d(7)=$p(%QCMLT0d(1),"||"),%QCMLT0d(8)=$p(%QCMLT0d(1),"||",2)
 i %QCMLT0d(7)="" g %0ABdun
 i %QCMLT0d(8)="" g %0ABdun
 s %QCMLT0d(3)=""
%0ABk1 s %QCMLT0d(3)=$o(^TTQC(%QCMLT0d(7),"LOT",%QCMLT0d(8),"TYPE",%QCMLT0d(3)))
 i %QCMLT0d(3)="" g %0ABdun
 s %QCMLT0d(4)=""
%0ABk2 s %QCMLT0d(4)=$o(^TTQC(%QCMLT0d(7),"LOT",%QCMLT0d(8),"TYPE",%QCMLT0d(3),%QCMLT0d(4)))
 i %QCMLT0d(4)="" g %0ABk1
 s %QCMLT0d(2)=(%QCMLT0d(7))_"||"_(%QCMLT0d(8))_"||"_(%QCMLT0d(3))_"||"_(%QCMLT0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTQC($p(%QCMLT0d(2),"||",1),"LOT",$p(%QCMLT0d(2),"||",2),"TYPE",$p(%QCMLT0d(2),"||",3),$p(%QCMLT0d(2),"||",4))#"S":$zu(115,4) i $t { s %QCMLT0d(10)=1,%QCMLT0d(11)=$name(^TTQC($p(%QCMLT0d(2),"||",1),"LOT",$p(%QCMLT0d(2),"||",2),"TYPE",$p(%QCMLT0d(2),"||",3),$p(%QCMLT0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MaterialLotType for RowID value: "_%QCMLT0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %QCMLT0d(7)=$p(%QCMLT0d(2),"||"),%QCMLT0d(8)=$p(%QCMLT0d(2),"||",2),%QCMLT0d(3)=$p(%QCMLT0d(2),"||",3),%QCMLT0d(4)=$p(%QCMLT0d(2),"||",4)
 i %QCMLT0d(7)'="",%QCMLT0d(8)'="",%QCMLT0d(3)'="",%QCMLT0d(4)'="",$d(^TTQC(%QCMLT0d(7),"LOT",%QCMLT0d(8),"TYPE",%QCMLT0d(3),%QCMLT0d(4)))
 e  g %0ACdun
 s %QCMLT0d(1)=$p(%QCMLT0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %QCMLT0d(9)=%QCMLT0d(9)+1,%ROWCOUNT=%QCMLT0d(9),%ROWID=%QCMLT0d(2),%QCMLT0c=10 q
%QCMLT0f i '$g(%QCMLT0c) { s SQLCODE=-102 q  } i %QCMLT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%QCMLT0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%QCMLT0d(9),%QCMLT0c=100 q  } g %0Afirst:%QCMLT0c=1
%0ACdun i $zu(115,2)=1,$g(%QCMLT0d(10))=1 { l -@%QCMLT0d(11) s %QCMLT0d(10)=0 }
 g %0ABk2
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%QCMLT0d(9),SQLCODE=100,%QCMLT0c=100 q
%QCMLT0c i '$g(%QCMLT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%QCMLT0d(9)),1:0)
 i $zu(115,2)=1,$g(%QCMLT0d(10))=1 { l -@%QCMLT0d(11) } k %QCMLT0c,%QCMLT0d,%QCMLT0E,%QCMLT0l,%QCMLT0n,%QCMLT0R,%QCMLT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %QCMLT0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.QCMaterialLotType.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5),"TYPE",%mmmsqld(6),%mmmsqld(7)))
 e  g %0EBdun
 s %mmmsqld(19)=$$%getlock^User.QCMaterialLotType.T1(%mmmsqld(2)) i '%mmmsqld(19) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5),"TYPE",%mmmsqld(6),%mmmsqld(7)))
 e  g %0ECdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.QCMaterialLotType.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(19)=1 %ReleaseLock^User.QCMaterialLotType.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(19)=1 %ReleaseLock^User.QCMaterialLotType.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(19))=1 %ReleaseLock^User.QCMaterialLotType.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4),"TYPE",%mmmsqld(5),%mmmsqld(6)))
 e  g %0GBdun
 s %mmmsqld(18)=$$%getlock^User.QCMaterialLotType.T1(%mmmsqld(1)) i '%mmmsqld(18) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4),"TYPE",%mmmsqld(5),%mmmsqld(6)))
 e  g %0GCdun
 d %delete^User.QCMaterialLotType.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(18)=1 %ReleaseLock^User.QCMaterialLotType.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(18)=1 %ReleaseLock^User.QCMaterialLotType.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(18))=1 %ReleaseLock^User.QCMaterialLotType.T1(%mmmsqld(1)) g %0Gc
%0Jo d %QCMLT0f q:SQLCODE'=0
 s PLIST(0)=%QCMLT0d(1),PLIST(1)=%QCMLT0d(2),PLIST(2)=%QCMLT0d(3),PLIST(3)=%QCMLT0d(4)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3),PLIST(3)=$p(PLIST(1),"||",4)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTQC(%mmmsqld(8),"LOT",%mmmsqld(9),"TYPE",PLIST(2),PLIST(3)))
 e  g %0LBdun
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2),"TYPE",$p(PLIST(1),"||",3),$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2),"TYPE",$p(PLIST(1),"||",3),$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MaterialLotType for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3),PLIST(3)=$p(PLIST(1),"||",4)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTQC(%mmmsqld(8),"LOT",%mmmsqld(9),"TYPE",PLIST(2),PLIST(3)))
 e  g %0LCdun
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
