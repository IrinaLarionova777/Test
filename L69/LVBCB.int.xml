<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCB" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCB ; IG 4/5/98 ;MVB Control code access for CB_CollectorBooking
 ;
 ; supported calls:
 ;
 ; $$select^LVBCB(ROWID,skip)
 ; $$open^LVBCB(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCB(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCB(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCB(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCB()
 ; $$insert^LVBCB()
 ; $$update^LVBCB(ROWID)
 ; $$delete^LVBCB(ROWID)
 ; $$getall^LVBCB(collector,Continue)
 ;
  ;---&SQL(DECLARE CB CURSOR FOR SELECT * FROM CB_CollectorBooking
   ;---              WHERE (CB_Collector_DR = :collector) OR (:collector IS NULL))
   ;--- ** SQL PUBLIC Variables: SQLCODE, collector
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CB_CollectorBooking VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CB_CollectorBooking VALUES :PLIST() WHERE CB_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID) s ROWID=$g(ROWID)
  ;---&SQL(DELETE FROM CB_CollectorBooking WHERE CB_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ;
 ; Open the cursor
open(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),collector=$g(collector)
  ;---&SQL(OPEN CB)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CB0o
 Q 0
 ;
 ; Fetch the data
fetch(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),collector=$g(collector) K PLIST
  ;---&SQL(FETCH CB INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),collector=$g(collector) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(collector,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(collector,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (collector,skip,PLIST) s skip=$g(skip),collector=$g(collector) K ^TMP($zn,$j)
 i $$open(collector,skip)
 f cnt=1:1 Q:$$fetch(collector,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CB) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CB0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST S ROWID=$G(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CB_CollectorBooking WHERE CB_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(5))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBEPVIS(plist(5),"Y")
 .s X="" i 'SQLCODE d
 ..s X=PLIST(5)_$c(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 .k PLIST m PLIST=plist s PLIST(5)=X k plist
 i $g(PLIST(2))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTPER(plist(2))
 .s X="" i 'SQLCODE d
 ..s X=PLIST(2)_$c(1)_$$NameFormat^LVBCOM03("DR","",PLIST(4),PLIST(3),"","","")
 ..k PLIST m PLIST=plist s PLIST(2)=X k plist
 Q
 ;
getall(collector,Continue) n (collector,Continue,PLIST) s collector=$g(collector),Continue=$g(Continue)
 i Continue="" k ^TMP($zn,$j) d
 .i $$open(collector,"Y")
 .f cnt=1:1 q:$$fetch(collector,"Y")  d
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 .i $$close()
 k PLIST
 s (x,cnt,sum)="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^TMP($zn,$j,x)))>15000  s cnt=cnt+1,PLIST(cnt)=^(x),sum=sum+$l(^(x)) k ^(x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
%CB0o s $zt="%CB0E" s SQLCODE=$s($g(%CB0c):-101,1:0) q:SQLCODE'=0  s %CB0d(9)=0 s %CB0d(10)=0,%CB0d(11)=""
 s %CB0d(6)=$g(collector),%CB0d(7)=$g(collector)
 s %CB0c=1 q
%CB0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CB0c,%CB0d,%CB0E,%CB0l,%CB0n,%CB0R,%CB0Z q
%0Afirst 
 ; asl MOD# 2
 s %CB0d(2)=""
%0ABk1 s %CB0d(2)=$o(^TCLB(%CB0d(2)))
 i %CB0d(2)="" g %0ABdun
 i '((%CB0d(2)=%CB0d(6))||(%CB0d(7)="")) g %0ABk1
 s %CB0d(3)=""
%0ABk2 s %CB0d(3)=$o(^TCLB(%CB0d(2),%CB0d(3)))
 i %CB0d(3)="" g %0ABk1
 s %CB0d(4)=""
%0ABk3 s %CB0d(4)=$o(^TCLB(%CB0d(2),%CB0d(3),%CB0d(4)))
 i %CB0d(4)="" g %0ABk2
 s %CB0d(16)=$g(^TCLB(%CB0d(2),%CB0d(3),%CB0d(4)))
 s %CB0d(5)=$p(%CB0d(16),"\",1)
 s %CB0d(1)=(%CB0d(2))_"||"_(%CB0d(3))_"||"_(%CB0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TCLB($p(%CB0d(1),"||",1),$p(%CB0d(1),"||",2),$p(%CB0d(1),"||",3))#"S":$zu(115,4) i $t { s %CB0d(10)=1,%CB0d(11)=$name(^TCLB($p(%CB0d(1),"||",1),$p(%CB0d(1),"||",2),$p(%CB0d(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CB_CollectorBooking for RowID value: "_%CB0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CB0d(2)=$p(%CB0d(1),"||"),%CB0d(3)=$p(%CB0d(1),"||",2),%CB0d(4)=$p(%CB0d(1),"||",3)
 i %CB0d(2)'="",%CB0d(3)'="",%CB0d(4)'="",$d(^TCLB(%CB0d(2),%CB0d(3),%CB0d(4)))
 e  g %0ACdun
 s %CB0d(21)=$g(^TCLB(%CB0d(2),%CB0d(3),%CB0d(4)))
 s %CB0d(5)=$p(%CB0d(21),"\",1)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CB0d(9)=%CB0d(9)+1,%ROWCOUNT=%CB0d(9),%ROWID=%CB0d(1),%CB0c=10 q
%CB0f i '$g(%CB0c) { s SQLCODE=-102 q  } i %CB0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CB0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CB0d(9),%CB0c=100 q  } g %0Afirst:%CB0c=1
%0ACdun i $zu(115,2)=1,$g(%CB0d(10))=1 { l -@%CB0d(11) s %CB0d(10)=0 }
 g %0ABk3
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CB0d(9),SQLCODE=100,%CB0c=100 q
%CB0c i '$g(%CB0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CB0d(9)),1:0)
 i $zu(115,2)=1,$g(%CB0d(10))=1 { l -@%CB0d(11) } k %CB0c,%CB0d,%CB0E,%CB0l,%CB0n,%CB0R,%CB0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CB0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CBCollectorBooking.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TCLB(%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0EBdun
 s %mmmsqld(13)=$$%getlock^User.CBCollectorBooking.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TCLB(%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0ECdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CBCollectorBooking.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.CBCollectorBooking.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.CBCollectorBooking.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.CBCollectorBooking.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TCLB(%mmmsqld(3),%mmmsqld(4),%mmmsqld(5)))
 e  g %0GBdun
 s %mmmsqld(12)=$$%getlock^User.CBCollectorBooking.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TCLB(%mmmsqld(3),%mmmsqld(4),%mmmsqld(5)))
 e  g %0GCdun
 d %delete^User.CBCollectorBooking.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.CBCollectorBooking.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.CBCollectorBooking.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.CBCollectorBooking.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CB0f q:SQLCODE'=0
 s PLIST(1)=%CB0d(1),PLIST(2)=%CB0d(2),PLIST(3)=%CB0d(3),PLIST(4)=%CB0d(4),PLIST(5)=%CB0d(5)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(7)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2),PLIST(4)=$p(PLIST(1),"||",3)
 i PLIST(2)'="",PLIST(3)'="",PLIST(4)'="",$d(^TCLB(PLIST(2),PLIST(3),PLIST(4)))
 e  g %0LBdun
 s %mmmsqld(15)=$g(^TCLB(PLIST(2),PLIST(3),PLIST(4)))
 s PLIST(5)=$p(%mmmsqld(15),"\",1)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TCLB($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TCLB($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CB_CollectorBooking for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2),PLIST(4)=$p(PLIST(1),"||",3)
 i PLIST(2)'="",PLIST(3)'="",PLIST(4)'="",$d(^TCLB(PLIST(2),PLIST(3),PLIST(4)))
 e  g %0LCdun
 s %mmmsqld(20)=$g(^TCLB(PLIST(2),PLIST(3),PLIST(4)))
 s PLIST(5)=$p(%mmmsqld(20),"\",1)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
