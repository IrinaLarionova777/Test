<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBDEBA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBDEBA ; IG 30/6/98 ; LVB Control data access for DEBA DEB_Aliases
 ;
 ; supported calls:
 ;
 ; $$insert^LVBDEBA(par)
 ; $$update^LVBDEBA(ROWID)
 ; $$select^LVBDEBA(ROWID)
 ; $$delete^LVBDEBA(ROWID)
 ; $$open^LVBDEBA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBDEBA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBDEBA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBDEBA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBDEBA()
 ; $$getall^LVBDEBA(par)
 ;
  ;---&sql(DECLARE DEBA CURSOR FOR SELECT * FROM DEB_Aliases
   ;---         WHERE DEBA_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN DEBA)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DEBA0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH DEBA INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE DEBA)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DEBA0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM DEB_Aliases WHERE DEBA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO DEB_Aliases VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE DEB_Aliases VALUES :PLIST() WHERE DEBA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM DEB_Aliases WHERE DEBA_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
 ;
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
%DEBA0o s $zt="%DEBA0E" s SQLCODE=$s($g(%DEBA0c):-101,1:0) q:SQLCODE'=0  s %DEBA0d(9)=0 s %DEBA0d(10)=0,%DEBA0d(11)=""
 s %DEBA0d(6)=$g(par)
 s %DEBA0c=1 q
%DEBA0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %DEBA0c,%DEBA0d,%DEBA0E,%DEBA0l,%DEBA0n,%DEBA0R,%DEBA0Z q
%0Afirst 
 ; asl MOD# 2
 s %DEBA0d(1)=%DEBA0d(6)
 i %DEBA0d(1)="" g %0ABdun
 s %DEBA0d(3)=""
%0ABk1 s %DEBA0d(3)=$o(^TDEBi(%DEBA0d(1),"ALIAS",%DEBA0d(3)))
 i %DEBA0d(3)="" g %0ABdun
 s %DEBA0d(4)=""
%0ABk2 s %DEBA0d(4)=$o(^TDEBi(%DEBA0d(1),"ALIAS",%DEBA0d(3),%DEBA0d(4)))
 i %DEBA0d(4)="" g %0ABk1
 s %DEBA0d(2)=(%DEBA0d(1))_"||"_(%DEBA0d(3))_"||"_(%DEBA0d(4))
 s %DEBA0d(5)=$$CT004^at356($g(%DEBA0d(2)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TDEBi($p(%DEBA0d(2),"||",1),"ALIAS",$p(%DEBA0d(2),"||",2),$p(%DEBA0d(2),"||",3))#"S":$zu(115,4) i $t { s %DEBA0d(10)=1,%DEBA0d(11)=$name(^TDEBi($p(%DEBA0d(2),"||",1),"ALIAS",$p(%DEBA0d(2),"||",2),$p(%DEBA0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DEB_Aliases for RowID value: "_%DEBA0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %DEBA0d(8)=$p(%DEBA0d(2),"||"),%DEBA0d(3)=$p(%DEBA0d(2),"||",2),%DEBA0d(4)=$p(%DEBA0d(2),"||",3)
 i %DEBA0d(8)'="",%DEBA0d(3)'="",%DEBA0d(4)'="",$d(^TDEBi(%DEBA0d(8),"ALIAS",%DEBA0d(3),%DEBA0d(4)))
 e  g %0ACdun
 s %DEBA0d(1)=$p(%DEBA0d(2),"||")
 s %DEBA0d(5)=$$CT004^at356($g(%DEBA0d(2)))
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %DEBA0d(9)=%DEBA0d(9)+1,%ROWCOUNT=%DEBA0d(9),%ROWID=%DEBA0d(2),%DEBA0c=10 q
%DEBA0f i '$g(%DEBA0c) { s SQLCODE=-102 q  } i %DEBA0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%DEBA0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%DEBA0d(9),%DEBA0c=100 q  } g %0Afirst:%DEBA0c=1
%0ACdun i $zu(115,2)=1,$g(%DEBA0d(10))=1 { l -@%DEBA0d(11) s %DEBA0d(10)=0 }
 g %0ABk2
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%DEBA0d(9),SQLCODE=100,%DEBA0c=100 q
%DEBA0c i '$g(%DEBA0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%DEBA0d(9)),1:0)
 i $zu(115,2)=1,$g(%DEBA0d(10))=1 { l -@%DEBA0d(11) } k %DEBA0c,%DEBA0d,%DEBA0E,%DEBA0l,%DEBA0n,%DEBA0R,%DEBA0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %DEBA0c=100 q
%0Do d %DEBA0f q:SQLCODE'=0
 s PLIST(0)=%DEBA0d(1),PLIST(1)=%DEBA0d(2),PLIST(2)=%DEBA0d(3),PLIST(3)=%DEBA0d(4),PLIST(4)=%DEBA0d(5)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(7)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(9)'="",PLIST(2)'="",PLIST(3)'="",$d(^TDEBi(%mmmsqld(9),"ALIAS",PLIST(2),PLIST(3)))
 e  g %0FBdun
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(4)=$$CT004^at356($g(PLIST(1)))
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TDEBi($p(PLIST(1),"||",1),"ALIAS",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TDEBi($p(PLIST(1),"||",1),"ALIAS",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DEB_Aliases for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(9)'="",PLIST(2)'="",PLIST(3)'="",$d(^TDEBi(%mmmsqld(9),"ALIAS",PLIST(2),PLIST(3)))
 e  g %0FCdun
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(4)=$$CT004^at356($g(PLIST(1)))
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DEBAliases.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TDEBi(%mmmsqld(4),"ALIAS",%mmmsqld(5),%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(15)=$$%getlock^User.DEBAliases.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TDEBi(%mmmsqld(4),"ALIAS",%mmmsqld(5),%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.DEBAliases.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.DEBAliases.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.DEBAliases.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.DEBAliases.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TDEBi(%mmmsqld(3),"ALIAS",%mmmsqld(4),%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(14)=$$%getlock^User.DEBAliases.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TDEBi(%mmmsqld(3),"ALIAS",%mmmsqld(4),%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.DEBAliases.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.DEBAliases.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.DEBAliases.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.DEBAliases.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
