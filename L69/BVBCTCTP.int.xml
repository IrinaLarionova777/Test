<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTCTP" type="INT" languagemode="0"><![CDATA[
BVBCTCTP ; IG 30/07/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:25 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$select^BVBCTCTP(ROWID)
 ; $$open^BVBCTCTP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTCTP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTCTP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTCTP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTCTP()
 ; $$insert^BVBCTCTP(par)
 ; $$update^BVBCTCTP(ROWID)
 ; $$delete^BVBCTCTP(ROWID,Comments)
 ; $$getall^BVBCTCTP(ROWID)
 ; 
  
 ; Insert the data
insert(par) K PLIST(1) s PLIST(0)=par
 s PLIST(2)=$o(^CT("COMP",$p(PLIST(0),"||",1),"TS",$p(PLIST(0),"||",2),"PHASES",""),-1)+1
 d %0Bo
 I 'SQLCODE d add(%ROWID,PLIST(4)) Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) D pre s ROWID=$g(ROWID)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 Q SQLCODE
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTCTP0o
 Q 0
 ;
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par)
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %CTCTP0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre q
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 Q
 ; add phase to all screens
add(rowid,mand) n (rowid,mand) k ^TMP($zn,$j)
 s par=$p(rowid,"||",1,3)
 ; get all screens for the test set
 i $$open^BVBCTCTA(par)
 f cnt=1:1 q:$$fetch^BVBCTCTA(par)  m ^TMP($zn,$j,cnt)=PLIST
 i $$close^BVBCTCTA()
 ; set phase for all screens
 s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  d
 .k PLIST s PLIST(3)=rowid,PLIST(4)=mand
 .i $g(^TMP($zn,$j,cnt,4))="Y" s PLIST(4)="Y"
 .s PLIST=$o(PLIST(""),-1) i $$insert^BVBCTCTB($g(^TMP($zn,$j,cnt,1)))
 k ^TMP($zn,$j)
 q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(5),$c(1))_$c(1)_$P(PLIST(4),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs3 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%CTCTP0o s SQLCODE=$s($g(%CTCTP0c):-101,1:0) q:SQLCODE'=0
 s %CTCTP0c=1 k %CTCTP0m
 s %CTCTP0E=$zt,%CTCTP0f=0,%CTCTP0e=0,%CTCTP0L=""
 s %CTCTP0d(2)=$P(par,$C(1))
 s:%CTCTP0d(2)="" %CTCTP0d(2)=$E(par,2,999)
 l +^mtemp s %CTCTP0t(1)=$zp(^mtemp(" "))+1,^(%CTCTP0t(1))="" l -^mtemp
 q
%0Afirst   ;  init
 k ^mtemp(%CTCTP0t(1),0)
 ; asl MOD# 3
 d %0ABMod
 s %CTCTP0s(4)=""
%0ACk1 s %CTCTP0s(4)=$o(^mtemp(%CTCTP0t(1),0,%CTCTP0s(4)))
 i %CTCTP0s(4)="" g %0ACdun
 s $P(%CTCTP0d(4),$C(1))=$s(%CTCTP0s(4)=-99999999999999999:"",1:%CTCTP0s(4))
 s %CTCTP0s(5)=""
%0ACk2 s %CTCTP0s(5)=$o(^mtemp(%CTCTP0t(1),0,%CTCTP0s(4),%CTCTP0s(5)))
 i %CTCTP0s(5)="" g %0ACk1
 s %CTCTP0d(5)=$s(%CTCTP0s(5)=" ":"",1:%CTCTP0s(5))
 s %CTCTP0n=$g(^mtemp(%CTCTP0t(1),0,%CTCTP0s(4),%CTCTP0s(5)))
 s %CTCTP0d(1)=$p(%CTCTP0n,"|~|",1) s %CTCTP0d(6)=$p(%CTCTP0n,"|~|",2) s %CTCTP0d(7)=$p(%CTCTP0n,"|~|",3) s %CTCTP0d(8)=$p(%CTCTP0n,"|~|",4)
 s %val=$P(%CTCTP0d(4),$C(1)) d %0ABs3:%val'="" s $P(%CTCTP0d(4),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCTP0f=%CTCTP0f+1 s %CTCTP0c=10 q
%CTCTP0f i '$g(%CTCTP0c) s SQLCODE=-102 q
 i %CTCTP0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTCTP0c=1
 g %0ACk2
%0ACdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCTP0c=100 q
%CTCTP0c i '$g(%CTCTP0c) s SQLCODE=-102 q
 f %CTCTP0t=1:1:1 k ^mtemp(%CTCTP0t(%CTCTP0t))
 k %CTCTP0c,%CTCTP0d,%CTCTP0e,%CTCTP0E,%CTCTP0f,%CTCTP0l,%CTCTP0L,%CTCTP0n,%CTCTP0r,%CTCTP0R,%CTCTP0s,%CTCTP0t s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCTP0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0ABMod ; asl MOD# 2
 n %CTCTP0n  ; Nested NEWing for Subquery...
 s %CTCTP0d(1)=$g(%CTCTP0d(2))
 s %CTCTP0d(9)=$p($g(%CTCTP0d(1)),"||",1,1),%CTCTP0d(10)=$p($g(%CTCTP0d(1)),"||",2,2)
 i %CTCTP0d(9)="" g %0ABdun
 i %CTCTP0d(10)="" g %0ABdun
 s $P(%CTCTP0d(6),$C(1))=""
%0ABk1 s $P(%CTCTP0d(6),$C(1))=$o(^CT("COMP",%CTCTP0d(9),"TS",%CTCTP0d(10),"PHASES",$P(%CTCTP0d(6),$C(1))))
 i $P(%CTCTP0d(6),$C(1))="" g %0ABdun
 i $P(%CTCTP0d(6),$C(1))'=+$P(%CTCTP0d(6),$C(1)) g %0ABdun
 s %CTCTP0n=$g(^CT("COMP",%CTCTP0d(9),"TS",%CTCTP0d(10),"PHASES",$P(%CTCTP0d(6),$C(1))))
 s %CTCTP0d(4)=$p(%CTCTP0n,"\",3) s:%CTCTP0d(4)'="" %CTCTP0d(4)=+%CTCTP0d(4) s %CTCTP0d(7)=$p(%CTCTP0n,"\",1) s %CTCTP0d(8)=$p(%CTCTP0n,"\",2)
 s %CTCTP0d(5)=(%CTCTP0d(9))_"||"_(%CTCTP0d(10))_"||"_($P(%CTCTP0d(6),$C(1)))
 s %val=$P(%CTCTP0d(6),$C(1)) d %0ABs1:%val'="" s $P(%CTCTP0d(6),$C(1),2)=%val
 s %val=$P(%CTCTP0d(8),$C(1)) d %0ABs2:%val'="" s $P(%CTCTP0d(8),$C(1),2)=%val
 s %val=$P(%CTCTP0d(4),$C(1)) d %0ABs3:%val'="" s $P(%CTCTP0d(4),$C(1),2)=%val
 s %CTCTP0s(4)=$s($P(%CTCTP0d(4),$C(1))'="":$P(%CTCTP0d(4),$C(1)),1:-99999999999999999),%CTCTP0s(5)=$s(%CTCTP0d(5)'="":%CTCTP0d(5),1:" "),%CTCTP0n="",$p(%CTCTP0n,"|~|",1)=%CTCTP0d(1),$p(%CTCTP0n,"|~|",2)=%CTCTP0d(6),$p(%CTCTP0n,"|~|",3)=%CTCTP0d(7),$p(%CTCTP0n,"|~|",4)=%CTCTP0d(8),^mtemp(%CTCTP0t(1),0,%CTCTP0s(4),%CTCTP0s(5))=%CTCTP0n
 g %0ABk1
%0ABdun 
 q
%0Bo n %insert,icol,ir
 f icol=0:1:5 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt3341("1")
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(PLIST(1),$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(PLIST(1),2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2),$P(%mmmsqld(6),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$P(%mmmsqld(6),$C(1))'="",$d(^CT("COMP",%mmmsqld(4),"TS",%mmmsqld(5),"PHASES",$P(%mmmsqld(6),$C(1))))
 e  g %0CBdun
 k %data,%edit
 f icol=0:1:5 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt3341(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(2)),"||",3,3)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^CT("COMP",%mmmsqld(3),"TS",%mmmsqld(4),"PHASES",$P(%mmmsqld(5),$C(1))))
 e  g %0DBdun
 d delete^mt3341(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTCTP0f q:SQLCODE'=0
 s PLIST(0)=%CTCTP0d(1),PLIST(1)=%CTCTP0d(5),PLIST(2)=%CTCTP0d(6),PLIST(3)=%CTCTP0d(7),PLIST(4)=%CTCTP0d(8),PLIST(5)=%CTCTP0d(4)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(10)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(11)=$p($g(%mmmsqld(3)),"||",2,2),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(10)'="",%mmmsqld(11)'="",$P(PLIST(2),$C(1))'="",$d(^CT("COMP",%mmmsqld(10),"TS",%mmmsqld(11),"PHASES",$P(PLIST(2),$C(1))))
 e  g %0HBdun
 s %mmmsqln=$g(^CT("COMP",%mmmsqld(10),"TS",%mmmsqld(11),"PHASES",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"\",1) s PLIST(4)=$p(%mmmsqln,"\",2) s PLIST(5)=$p(%mmmsqln,"\",3) s:PLIST(5)'="" PLIST(5)=+PLIST(5)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs2:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(5),$C(1)) d %0ABs3:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
