<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTSF" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTSF ; IG 1/5/98 ; LVB Control data access for CTTSF CT_TestSetFields
 ;
 ; supported calls:
 ;
 ; $$copy^LVBCTTSF(tsfrom,tsto)
 ; $$insert^LVBCTTSF(par)
 ; $$delall^LVBCTTSF(par,layout)
 ; $$select^LVBCTTSF(ROWID,skip)
 ; $$select1^LVBCTTSF(TSET,TITEM,skip,layout)
 ; $$open^LVBCTTSF(par,skip,layout,taborder)
 ; $$fetch^LVBCTTSF(par,skip,layout,taborder)
 ; $$close^LVBCTTSF()
 ; $$getall^LVBCTTSF(par,layout)
 ; $$getall1^LVBCTTSF(par,layout)
 ; $$getall2^LVBCTTSF(par)
 ; $$save^LVBCTTSF(par,layout)
 ; $$getit^LVBCTTSF(par,vtsRID,Translate,Short,PE,layout,bpRID,lan,taborder)
 ; $$check^LVBCTTSF(test)
 ; $$checkTI^LVBCTTSF(ts,list)
 ; $$lock^LVBCTTSF(test)
 ; $$unlock^LVBCTTSF(test)
 ;
  ;---&sql(DECLARE CTTSF1 CURSOR FOR SELECT * FROM CT_TestSetFields
   ;---         WHERE CTTSF_ParRef = :par AND CTTSF_LayoutOrder = :layout)
   ;--- ** SQL PUBLIC Variables: SQLCODE, layout, par
  ;---&sql(DECLARE CTTSF2 CURSOR FOR SELECT * FROM CT_TestSetFields
   ;---         WHERE CTTSF_ParRef = :par AND CTTSF_LayoutOrder = :layout
   ;---         ORDER BY CTTSF_TabingOrder)
   ;--- ** SQL PUBLIC Variables: SQLCODE, layout, par
FIX s x1="" f  s x1=$o(^TTAB("TS",x1)) q:x1=""  d
 .s x2="" f  s x2=$o(^TTAB("TS",x1,x2)) q:x2=""  d
 ..i (x2=0)!($e(x2,1,2)="L-") d
 ...s x3="" f  s x3=$o(^TTAB("TS",x1,x2,x3)) q:x3=""  d
 ....f j=1,7 s $p(^(x3),"\",j)=$tr($p(^(x3),"\",j),"^\|"_$c(20),$c(16,17,18,16))
 q
 ;
open(par,skip,layout,taborder) s par=$g(par),skip=$g(skip),layout=$g(layout),taborder=$g(taborder)
 i '$l(layout) s layout=0
 i $l(par),'$d(^TTAB("TS",par,layout)) s layout=0
  ;---i taborder'="Y" &SQL(OPEN CTTSF1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i taborder'="Y" Do %CTTSF10o
  ;---i taborder="Y" &SQL(OPEN CTTSF2)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i taborder="Y" Do %CTTSF20o
 q 0
 ;
fetch(par,skip,layout,taborder) k PLIST s par=$g(par),skip=$g(skip),layout=$g(layout),taborder=$g(taborder)
 i '$l(layout) s layout=0
 i $l(par),'$d(^TTAB("TS",par,layout)) s layout=0
  ;---i taborder'="Y" &SQL(FETCH CTTSF1 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i taborder'="Y" Do %0Go
  ;---i taborder="Y" &SQL(FETCH CTTSF2 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i taborder="Y" Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE CTTSF1)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSF10c
  ;---&SQL(CLOSE CTTSF2)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSF20c
 q 0
 ; copy info form one testset to another
copy(tsfrom,tsto) n (tsfrom,tsto) s tsfrom=$g(tsfrom),tsto=$g(tsto),ok=0
 i $l(tsfrom),$l(tsto) d
 . ; copy test fields
 .s lo="" f  s lo=$o(^TTAB("TS",tsfrom,lo)) q:lo=""  d
 ..i (lo=0)!($e(lo,1,2)="L-") d
 ...s fl="" f  s fl=$o(^TTAB("TS",tsfrom,lo,fl)) q:fl=""  d  i ok q
 ....s ok=$$select(tsfrom_"||"_lo_"||"_fl,"Y") i 'ok s ok=$$insert(tsto)
 .... ; copy calculations
 ....s tc=$p(PLIST(10),$c(1)) i $l(tc) m ^TTAB("TC",tc,3,tsto)=^TTAB("TC",tc,3,tsfrom)
 . ; copy XM
 .m ^TTAB("TS",tsto,"XM")=^TTAB("TS",tsfrom,"XM")
 q ok
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetFields WHERE CTTSF_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Ko
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
select1(tset,titem,skip,layout) k PLIST s tset=$g(tset),titem=$g(titem),skip=$g(skip),layout=$g(layout)
 i '$l(layout) s layout=0
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetFields WHERE CTTSF_ParRef=:tset AND CTTSF_DataItem_DR = :titem AND CTTSF_LayoutOrder = :layout)
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, layout, titem, tset
 Do %0Mo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
 i '$l(PLIST(4)) s PLIST(4)=0
 s PLIST(2)=$o(^TTAB("TS",par,PLIST(4),""),-1)+1
 i '$l($g(PLIST(10))) f j=7,12,14 s PLIST(j)=""
 i $tr($g(PLIST(3))," ")="" s PLIST(3)=" "
  ;---&sql(INSERT INTO CT_TestSetFields VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Oo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
delall(par,layout) s par=$g(par),layout=$g(layout)
 i '$l(layout) s layout=0
  ;---&sql(DELETE FROM CT_TestSetFields WHERE CTTSF_ParRef = :par AND CTTSF_LayoutOrder = :layout)
   ;--- ** SQL PUBLIC Variables: SQLCODE, layout, par
 Do %0Qo
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i PLIST(16)="" s PLIST(16)="Y"
 i $g(skip)="Y" q
 ;
 I $G(PLIST(10))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTTC(plist(10))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(10)=X K plist
 ;
 q
 ; get all test items(only)
getall(par,layout) n (par,layout,PLIST) k ^TMP($zn,$j) s par=$g(par),layout=$g(layout)
 i $$open(par,"Y",layout)
 s cnt=0 f  q:$$fetch(par,"Y",layout)  i $l(PLIST(10)) d
 .s cnt=cnt+1
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p($g(^TTAB("TC",$p(PLIST(10),$c(1)))),"\")_$c(2)_$p(PLIST(2),$c(1))_$c(2)_$p(PLIST(10),$c(1))
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 i $$close()
 k ^TMP($zn,$j)
 q 0
getall1(par,layout) N (par,layout,PLIST) s par=$g(par),layout=$g(layout)
 i $$getall(par,layout)
 f j=1:1:PLIST f i=1,3 s $p(PLIST(j),$c(2),i)=$p(PLIST(j),$c(2),4)
 Q 0
 ; list of layouts
getall2(par) N (par,PLIST) s par=$g(par),cnt=0 k PLIST
 s cnt=cnt+1,PLIST(cnt)=0_$c(2)_0_$c(2)_0
 s x="" f  s x=$o(^TTAB("TS",par,x)) q:x=""  i $e(x,1,2)="L-" s cnt=cnt+1,PLIST(cnt)=x_$c(2)_$p(x,"L-",2)_$c(2)_x
 s PLIST=$o(PLIST(""),-1)
 Q 0
 ; get all data plus extra information
getit(par,vtsRID,Translate,Short,PE,layout,bpRID,lan,taborder) N (par,vtsRID,Translate,Short,PE,layout,bpRID,lan,taborder,PLIST) K ^TMP($zn,$j),PLIST
 s par=$g(par),vtsRID=$g(vtsRID),Translate=$g(Translate),Short=$g(Short),PE=$g(PE),layout=$g(layout),bpRID=$g(bpRID),lan=$g(lan),taborder=$g(taborder),(date,bgRh)=""
 i PE="Y" d  i $l(x1),$l(x2),$l(x3),$d(^TEPI(x1,1,x2,x3))\10 q 0
 .f j=1,2,3 s @("x"_j)=$p(vtsRID,"||",j)
 i $l(vtsRID) d
 .s date=$$seldata^LVBVISTS(vtsRID,7),epis=$p(vtsRID,"||"),par=$p(vtsRID,"||",2)
 .i $l(epis),$e(epis,1,4)="BBP_" s bpRID=$p(epis,"_",2)_"||"_$p(epis,"_",3)
 .i $l(epis),$e(epis,1,4)'="BBP_" d
 ..  ;---&sql(SELECT EPVIS_BloodGroup_DR->BBBG_Rh INTO :bgRh FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, bgRh, epis
 .. Do %0So
 ..s bgRh=$p(bgRh,$c(1))
 ..k VISIT f j=5,6,12,22,26,60,63,64,98,167 s VISIT(j)=$$seldata^LVBEPVIS(epis,j)
 ..s inpat=VISIT(22) i $l(inpat) s inpat=$$seldata^LVBCTHOS(inpat,19)
 i $l(bpRID) d
 .  ;---&SQL(SELECT BBP_BloodGroupEntered_DR->BBBG_Rh INTO :bgRh FROM BBP_PackDetails WHERE BBP_RowID=:bpRID)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, bgRh, bpRID
 . Do %0Uo
 .s bgRh=$p(bgRh,$c(1)) i '$l(bgRh) d
 ..  ;---&SQL(SELECT BBP_BloodGroup_DR->BBBG_Rh INTO :bgRh FROM BBP_PackDetails WHERE BBP_RowID=:bpRID)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, bgRh, bpRID
 .. Do %0Wo
 ..s bgRh=$p(bgRh,$c(1))
 i '$l(date) s date=+$h
 f j=50,51 s TEST(j)=$$seldata^LVBCTTS(par,j)
 i $$open(par,"Y",layout,taborder)
 s cnt1="" f  q:$$fetch(par,"Y",layout,taborder)  d
 .i PE="Y",PLIST(16)'="Y" q
 .i $l($p($g(PLIST(10)),$c(1))),$l($g(VISIT(6))),$l($g(VISIT(12))),(","_$p(TEST(50),";",2)_",")[(","_$p($g(PLIST(10)),$c(1))_","),(VISIT(12)-VISIT(6))'>$p(TEST(50),";") q
 .s cnt1=cnt1+1 f j=1:1:16 s $p(^TMP($zn,$j,cnt1),$c(2),j)=$p($g(PLIST(j)),$c(1))
 .i (","_TEST(51)_",")[(","_$p($g(PLIST(10)),$c(1))_","),bgRh="P" s $p(^TMP($zn,$j,cnt1),$c(2),8)="O"
 .i Short'="Y" d
 ..s $p(^TMP($zn,$j,cnt1),$c(2),26)=$p($g(PLIST(17)),$c(1))   ; 26 ; tabing order
 ..s $p(^TMP($zn,$j,cnt1),$c(2),27)=$p($g(PLIST(18)),$c(1))   ; 27 ; cummulative order
 ..s tc=$p(PLIST(10),$c(1)) i $l(tc) d
 ...s $p(^TMP($zn,$j,cnt1),$c(2),17)=$$seldata^LVBCTTC(tc,4)  ; 17 ; units
 ...s $p(^TMP($zn,$j,cnt1),$c(2),18)=$$seldata^LVBCTTC(tc,5)  ; 18 ; format
 ...s $p(^TMP($zn,$j,cnt1),$c(2),19)=$$seldata^LVBCTTC(tc,6)  ; 19 ; length
 ...s $p(^TMP($zn,$j,cnt1),$c(2),20)=$$seldata^LVBCTTC(tc,9)  ; 20 ; show in cumulative
 ...s $p(^TMP($zn,$j,cnt1),$c(2),21)=$$seldata^LVBCTTC(tc,19) ; 21 ; significant figures
 ...s $p(^TMP($zn,$j,cnt1),$c(2),24)=$$seldata^LVBCTTC(tc,3)  ; 24 ; description
 ...s $p(^TMP($zn,$j,cnt1),$c(2),25)=$$seldata^LVBCTTC(tc,14) ; 25 ; synonym
 ...s $p(^TMP($zn,$j,cnt1),$c(2),28)=$$seldata^LVBCTTC(tc,53) ; 28 ; combo box
 ..i $l(tc),$d(VISIT) s xdate=date d
 ...i '$d(^TTAB("TC",tc,4,xdate)) s xdate=$o(^TTAB("TC",tc,4,xdate),-1)
 ...i $l(xdate) d
 ....s ptype=0_$s(inpat="Y":"-IN",1:"")
 ....s x=$$ranges^LVBVIS1(tc,VISIT(26),VISIT(5),VISIT(63),ptype,xdate,VISIT(98),VISIT(22),,VISIT(64)_$c(1)_VISIT(60)_$c(1)_VISIT(167))
 ....s $p(^TMP($zn,$j,cnt1),$c(2),22)=$p(x,$c(1),1)           ; 22 ; range low
 ....s $p(^TMP($zn,$j,cnt1),$c(2),23)=$p(x,$c(1),2)           ; 23 ; range high
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 ; translate to different language
 i $l(lan) d
 .f j1=1:1:PLIST f j2=3,9,24 s text=$p(PLIST(j1),$c(2),j2) i $l(text),$l($g(^TTAB("TS",par,"LAN",lan,text))) s $p(PLIST(j1),$c(2),j2)=^(text)
 .f j1=1:1:PLIST f j2=17 s x1=$p(PLIST(j1),$c(2),10),x2=$p(PLIST(j1),$c(2),j2) i $l(x1),$l(x2),$l($p($g(^TTAB("TC",x1,"LAN",lan)),"\",2)) s $p(PLIST(j1),$c(2),j2)=$p(^(lan),"\",2)
 i Translate="Y" s x="" f  s x=$o(PLIST(x)) q:x=""  s PLIST(x)=$tr(PLIST(x),$c(16,17,18),"^\|")
 k ^TMP($zn,$j)
 q 0
 ; save all 
save(par,layout) n (par,layout,PLIST) s par=$g(par),layout=$g(layout) k ^TMP($zn,$j) m ^TMP($zn,$j,1)=PLIST
 ; delete all previous data
 i $$delall(par,layout)
 s cnt="" f  s cnt=$o(^TMP($zn,$j,1,cnt)) q:cnt=""  s xx=^(cnt) d
 .s rowid=$p(xx,$c(1),1),ln=+$p(xx,$c(1),6),cn=+$s($p(xx,$c(1),7):$p(xx,$c(1),7),1:$p(xx,$c(1),5)),tc=$p(xx,$c(1),10)
 .i $l(tc),'$$select^LVBCTTC(tc) d
 ..i (PLIST(5)="V")!(PLIST(5)="S")!(PLIST(5)="M")!(PLIST(5)="X") f j=14 s $p(xx,$c(1),j)=""
 ..i (PLIST(5)="D")!(PLIST(5)="Z1")!(PLIST(5)="Z2")!(PLIST(5)="Z3")!(PLIST(5)="Z4") f j=12,14 s $p(xx,$c(1),j)=""
 .i $l(rowid),$l(ln),$l(cn) s ^TMP($zn,$j,2,ln,cn,rowid)=xx
 s ln="" f  s ln=$o(^TMP($zn,$j,2,ln)) q:ln=""  d
 .s cn="" f  s cn=$o(^TMP($zn,$j,2,ln,cn)) q:cn=""  d
 ..s row="" f  s row=$o(^TMP($zn,$j,2,ln,cn,row)) q:row=""  d
 ...k PLIST f j=3:1:$l(^(row),$c(1)) s PLIST(j)=$p(^(row),$c(1),j)
 ...s PLIST(4)=layout
 ...s PLIST=$o(PLIST(""),-1) i $$insert(par)
 k ^TMP($zn,$j)
 q 0
lock(par) s par=$g(par)
 i $$select^LVBCTTS(par) q 50
 l +^TTAB("TS",PLIST(1)):5
 i  s ^TTAB("TS",PLIST(1),"LOCK")=$$user^MVBSSUSR() q 0
 k PLIST s PLIST(1)=$g(^TTAB("TS",par,"LOCK"))
 s PLIST=$o(PLIST(""),-1)
 q 100
unlock(par) 
 i '$$select^LVBCTTS(par) d
 .l -^TTAB("TS",PLIST(1))
 .k ^TTAB("TS",PLIST(1),"LOCK")
 q 0
 ; check if layout already exists
check(test,layout) s test=$g(test),layout=$g(layout),ok=100
 i '$l(layout) s layout=0
 i $l(test),$d(^TTAB("TS",test,layout)) s ok=0
 q ok
 ; check list of entered test items
checkTI(ts,list) n (ts,list) s ts=$g(ts),list=$g(list),result=""
 f j1=1:1:$l(list,",") s (x,xx)=$p(list,",",j1) d
 .i xx[" " s x=$p(xx," ",2)
 .i '$$select^LVBCTTC(x),'$$getall(ts) d  q
 ..s ok=0 f j2=1:1:PLIST i $p(PLIST(j2),$c(2),4)=xx s ok=1 q
 ..i ok s result=result_$s($l(result):",",1:"")_xx
 .s result=result_$s($l(result):",",1:"")_"<"_x_">"
 q result
%CTTSF10o s $zt="%CTTSF10E" s SQLCODE=$s($g(%CTTSF10c):-101,1:0) q:SQLCODE'=0  s %CTTSF10d(24)=0 s %CTTSF10d(25)=0,%CTTSF10d(26)=""
 s %CTTSF10d(20)=$g(par),%CTTSF10d(21)=$g(layout)
 s %CTTSF10c=1 q
%CTTSF10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTSF10c,%CTTSF10d,%CTTSF10E,%CTTSF10l,%CTTSF10n,%CTTSF10R,%CTTSF10Z q
%0Afirst 
 ; asl MOD# 2
 s %CTTSF10d(1)=%CTTSF10d(20)
 s %CTTSF10d(5)=%CTTSF10d(21)
 i %CTTSF10d(1)="" g %0ABdun
 i %CTTSF10d(5)="" g %0ABdun
 s %CTTSF10d(3)=""
%0ABk1 s %CTTSF10d(3)=$o(^TTAB("TS",%CTTSF10d(1),%CTTSF10d(5),%CTTSF10d(3)))
 i %CTTSF10d(3)="" g %0ABdun
 s %CTTSF10d(33)=$g(^TTAB("TS",%CTTSF10d(1),%CTTSF10d(5),%CTTSF10d(3)))
 s %CTTSF10d(4)=$p(%CTTSF10d(33),"\",1) s %CTTSF10d(6)=$p(%CTTSF10d(33),"\",3) s %CTTSF10d(7)=$p(%CTTSF10d(33),"\",4) s %CTTSF10d(8)=$p(%CTTSF10d(33),"\",5) s %CTTSF10d(9)=$p(%CTTSF10d(33),"\",6) s %CTTSF10d(10)=$p(%CTTSF10d(33),"\",7) s %CTTSF10d(11)=$p(%CTTSF10d(33),"\",8) s %CTTSF10d(12)=$p(%CTTSF10d(33),"\",9) s %CTTSF10d(13)=$p(%CTTSF10d(33),"\",10) s %CTTSF10d(14)=$p(%CTTSF10d(33),"\",11) s %CTTSF10d(15)=$p(%CTTSF10d(33),"\",12) s %CTTSF10d(16)=$p(%CTTSF10d(33),"\",13) s %CTTSF10d(17)=$p(%CTTSF10d(33),"\",14) s %CTTSF10d(18)=$p(%CTTSF10d(33),"\",15) s %CTTSF10d(19)=$p(%CTTSF10d(33),"\",16)
 s %CTTSF10d(2)=(%CTTSF10d(1))_"||"_(%CTTSF10d(5))_"||"_(%CTTSF10d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%CTTSF10d(2),"||",1),$p(%CTTSF10d(2),"||",2),$p(%CTTSF10d(2),"||",3))#"S":$zu(115,4) i $t { s %CTTSF10d(25)=1,%CTTSF10d(26)=$name(^TTAB("TS",$p(%CTTSF10d(2),"||",1),$p(%CTTSF10d(2),"||",2),$p(%CTTSF10d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFields for RowID value: "_%CTTSF10d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTSF10d(23)=$p(%CTTSF10d(2),"||"),%CTTSF10d(5)=$p(%CTTSF10d(2),"||",2),%CTTSF10d(3)=$p(%CTTSF10d(2),"||",3)
 i %CTTSF10d(23)'="",%CTTSF10d(5)'="",%CTTSF10d(3)'="",$d(^TTAB("TS",%CTTSF10d(23),%CTTSF10d(5),%CTTSF10d(3)))
 e  g %0ACdun
 s %CTTSF10d(40)=$g(^TTAB("TS",%CTTSF10d(23),%CTTSF10d(5),%CTTSF10d(3)))
 s %CTTSF10d(4)=$p(%CTTSF10d(40),"\",1) s %CTTSF10d(6)=$p(%CTTSF10d(40),"\",3) s %CTTSF10d(7)=$p(%CTTSF10d(40),"\",4) s %CTTSF10d(8)=$p(%CTTSF10d(40),"\",5) s %CTTSF10d(9)=$p(%CTTSF10d(40),"\",6) s %CTTSF10d(10)=$p(%CTTSF10d(40),"\",7) s %CTTSF10d(11)=$p(%CTTSF10d(40),"\",8) s %CTTSF10d(12)=$p(%CTTSF10d(40),"\",9) s %CTTSF10d(13)=$p(%CTTSF10d(40),"\",10) s %CTTSF10d(14)=$p(%CTTSF10d(40),"\",11) s %CTTSF10d(15)=$p(%CTTSF10d(40),"\",12) s %CTTSF10d(16)=$p(%CTTSF10d(40),"\",13) s %CTTSF10d(17)=$p(%CTTSF10d(40),"\",14) s %CTTSF10d(18)=$p(%CTTSF10d(40),"\",15) s %CTTSF10d(19)=$p(%CTTSF10d(40),"\",16)
 s %CTTSF10d(1)=$p(%CTTSF10d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTSF10d(24)=%CTTSF10d(24)+1,%ROWCOUNT=%CTTSF10d(24),%ROWID=%CTTSF10d(2),%CTTSF10c=10 q
%CTTSF10f i '$g(%CTTSF10c) { s SQLCODE=-102 q  } i %CTTSF10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTSF10d(24))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTSF10d(24),%CTTSF10c=100 q  } g %0Afirst:%CTTSF10c=1
%0ACdun i $zu(115,2)=1,$g(%CTTSF10d(25))=1 { l -@%CTTSF10d(26) s %CTTSF10d(25)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTTSF10d(24),SQLCODE=100,%CTTSF10c=100 q
%CTTSF10c i '$g(%CTTSF10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTSF10d(24)),1:0)
 i $zu(115,2)=1,$g(%CTTSF10d(25))=1 { l -@%CTTSF10d(26) } k %CTTSF10c,%CTTSF10d,%CTTSF10E,%CTTSF10l,%CTTSF10n,%CTTSF10R,%CTTSF10Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTSF10c=100 q
%CTTSF20o s $zt="%CTTSF20E" s SQLCODE=$s($g(%CTTSF20c):-101,1:0) q:SQLCODE'=0  s %CTTSF20d(24)=0 s %CTTSF20d(25)=0,%CTTSF20d(26)=""
 s %CTTSF20d(20)=$g(par),%CTTSF20d(21)=$g(layout)
 s %CTTSF20t(1)=$i(^||%sql.temp)
 s %CTTSF20c=1 q
%CTTSF20E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTSF20c,%CTTSF20d,%CTTSF20E,%CTTSF20l,%CTTSF20n,%CTTSF20R,%CTTSF20s,%CTTSF20t,%CTTSF20Z q
%0Cfirst 
 k ^||%sql.temp(%CTTSF20t(1),0) s ^||%sql.temp(%CTTSF20t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTTSF20t(1),0))
 ; asl MOD# 3
 d %0CBMod
 i $sortend(^||%sql.temp(%CTTSF20t(1),0))
 s %CTTSF20s(18)=""
%0CCk1 s %CTTSF20s(18)=$o(^||%sql.temp(%CTTSF20t(1),0,%CTTSF20s(18)))
 i %CTTSF20s(18)="" g %0CCdun
 s %CTTSF20d(18)=$s(%CTTSF20s(18)=-1E14:"",1:%CTTSF20s(18))
 s %CTTSF20s(2)=""
%0CCk2 s %CTTSF20s(2)=$o(^||%sql.temp(%CTTSF20t(1),0,%CTTSF20s(18),%CTTSF20s(2)))
 i %CTTSF20s(2)="" g %0CCk1
 s %CTTSF20d(2)=$s(%CTTSF20s(2)=-1E14:"",1:%CTTSF20s(2))
 s %CTTSF20d(36)=$g(^||%sql.temp(%CTTSF20t(1),0,%CTTSF20s(18),%CTTSF20s(2)))
 s %CTTSF20d(1)=$lg(%CTTSF20d(36),16) s %CTTSF20d(3)=$lg(%CTTSF20d(36),14) s %CTTSF20d(4)=$lg(%CTTSF20d(36),11) s %CTTSF20d(5)=$lg(%CTTSF20d(36),12) s %CTTSF20d(6)=$lg(%CTTSF20d(36),3) s %CTTSF20d(7)=$lg(%CTTSF20d(36),13) s %CTTSF20d(8)=$lg(%CTTSF20d(36),2) s %CTTSF20d(9)=$lg(%CTTSF20d(36),9) s %CTTSF20d(10)=$lg(%CTTSF20d(36),5) s %CTTSF20d(11)=$lg(%CTTSF20d(36),6) s %CTTSF20d(12)=$lg(%CTTSF20d(36),10) s %CTTSF20d(13)=$lg(%CTTSF20d(36),4) s %CTTSF20d(14)=$lg(%CTTSF20d(36),7) s %CTTSF20d(15)=$lg(%CTTSF20d(36),1) s %CTTSF20d(16)=$lg(%CTTSF20d(36),17) s %CTTSF20d(17)=$lg(%CTTSF20d(36),8) s %CTTSF20d(19)=$lg(%CTTSF20d(36),15)
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%CTTSF20d(2),"||",1),$p(%CTTSF20d(2),"||",2),$p(%CTTSF20d(2),"||",3))#"S":$zu(115,4) i $t { s %CTTSF20d(25)=1,%CTTSF20d(26)=$name(^TTAB("TS",$p(%CTTSF20d(2),"||",1),$p(%CTTSF20d(2),"||",2),$p(%CTTSF20d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFields for RowID value: "_%CTTSF20d(2) ztrap "LOCK"  }
 ; asl MOD# 4
 s %CTTSF20d(23)=$p(%CTTSF20d(2),"||"),%CTTSF20d(5)=$p(%CTTSF20d(2),"||",2),%CTTSF20d(3)=$p(%CTTSF20d(2),"||",3)
 i %CTTSF20d(23)'="",%CTTSF20d(5)'="",%CTTSF20d(3)'="",$d(^TTAB("TS",%CTTSF20d(23),%CTTSF20d(5),%CTTSF20d(3)))
 e  g %0CDdun
 s %CTTSF20d(43)=$g(^TTAB("TS",%CTTSF20d(23),%CTTSF20d(5),%CTTSF20d(3)))
 s %CTTSF20d(4)=$p(%CTTSF20d(43),"\",1) s %CTTSF20d(6)=$p(%CTTSF20d(43),"\",3) s %CTTSF20d(7)=$p(%CTTSF20d(43),"\",4) s %CTTSF20d(8)=$p(%CTTSF20d(43),"\",5) s %CTTSF20d(9)=$p(%CTTSF20d(43),"\",6) s %CTTSF20d(10)=$p(%CTTSF20d(43),"\",7) s %CTTSF20d(11)=$p(%CTTSF20d(43),"\",8) s %CTTSF20d(12)=$p(%CTTSF20d(43),"\",9) s %CTTSF20d(13)=$p(%CTTSF20d(43),"\",10) s %CTTSF20d(14)=$p(%CTTSF20d(43),"\",11) s %CTTSF20d(15)=$p(%CTTSF20d(43),"\",12) s %CTTSF20d(16)=$p(%CTTSF20d(43),"\",13) s %CTTSF20d(17)=$p(%CTTSF20d(43),"\",14) s %CTTSF20d(18)=$p(%CTTSF20d(43),"\",15) s %CTTSF20d(19)=$p(%CTTSF20d(43),"\",16)
 s %CTTSF20d(1)=$p(%CTTSF20d(2),"||")
%0CCuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTSF20d(24)=%CTTSF20d(24)+1,%ROWCOUNT=%CTTSF20d(24),%ROWID=%CTTSF20d(2),%CTTSF20c=10 q
%CTTSF20f i '$g(%CTTSF20c) { s SQLCODE=-102 q  } i %CTTSF20c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%CTTSF20d(24))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTSF20d(24),%CTTSF20c=100 q  } g %0Cfirst:%CTTSF20c=1
%0CDdun i $zu(115,2)=1,$g(%CTTSF20d(25))=1 { l -@%CTTSF20d(26) s %CTTSF20d(25)=0 }
 g %0CCk2
%0CCdun 
%0CAdun 
 s %ROWCOUNT=%CTTSF20d(24),SQLCODE=100,%CTTSF20c=100 q
%CTTSF20c i '$g(%CTTSF20c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTSF20d(24)),1:0) f %CTTSF20d(27)=1 { i $sortend(^||%sql.temp(%CTTSF20t(%CTTSF20d(27)),0),0) } k ^||%sql.temp(%CTTSF20t(1))
 i $zu(115,2)=1,$g(%CTTSF20d(25))=1 { l -@%CTTSF20d(26) } k %CTTSF20c,%CTTSF20d,%CTTSF20E,%CTTSF20l,%CTTSF20n,%CTTSF20R,%CTTSF20s,%CTTSF20t,%CTTSF20Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTSF20c=100
 f %CTTSF20d(27)=1 i $sortend(^||%sql.temp(%CTTSF20t(%CTTSF20d(27)),0),0)
 q
%0CBMod ; asl MOD# 2
 s %CTTSF20d(1)=%CTTSF20d(20)
 s %CTTSF20d(5)=%CTTSF20d(21)
 i %CTTSF20d(1)="" g %0CBdun
 i %CTTSF20d(5)="" g %0CBdun
 s %CTTSF20d(3)=""
%0CBk1 s %CTTSF20d(3)=$o(^TTAB("TS",%CTTSF20d(1),%CTTSF20d(5),%CTTSF20d(3)))
 i %CTTSF20d(3)="" g %0CBdun
 s %CTTSF20d(34)=$g(^TTAB("TS",%CTTSF20d(1),%CTTSF20d(5),%CTTSF20d(3)))
 s %CTTSF20d(4)=$p(%CTTSF20d(34),"\",1) s %CTTSF20d(6)=$p(%CTTSF20d(34),"\",3) s %CTTSF20d(7)=$p(%CTTSF20d(34),"\",4) s %CTTSF20d(8)=$p(%CTTSF20d(34),"\",5) s %CTTSF20d(9)=$p(%CTTSF20d(34),"\",6) s %CTTSF20d(10)=$p(%CTTSF20d(34),"\",7) s %CTTSF20d(11)=$p(%CTTSF20d(34),"\",8) s %CTTSF20d(12)=$p(%CTTSF20d(34),"\",9) s %CTTSF20d(13)=$p(%CTTSF20d(34),"\",10) s %CTTSF20d(14)=$p(%CTTSF20d(34),"\",11) s %CTTSF20d(15)=$p(%CTTSF20d(34),"\",12) s %CTTSF20d(16)=$p(%CTTSF20d(34),"\",13) s %CTTSF20d(17)=$p(%CTTSF20d(34),"\",14) s %CTTSF20d(18)=$p(%CTTSF20d(34),"\",15) s %CTTSF20d(19)=$p(%CTTSF20d(34),"\",16)
 s %CTTSF20d(2)=(%CTTSF20d(1))_"||"_(%CTTSF20d(5))_"||"_(%CTTSF20d(3))
 s %CTTSF20s(18)=$s(%CTTSF20d(18)'="":%CTTSF20d(18),1:-1E14),%CTTSF20s(2)=$s(%CTTSF20d(2)'="":%CTTSF20d(2),1:-1E14),%CTTSF20d(35)="",$li(%CTTSF20d(35),16)=%CTTSF20d(1),$li(%CTTSF20d(35),14)=%CTTSF20d(3),$li(%CTTSF20d(35),11)=%CTTSF20d(4),$li(%CTTSF20d(35),12)=%CTTSF20d(5),$li(%CTTSF20d(35),3)=%CTTSF20d(6),$li(%CTTSF20d(35),13)=%CTTSF20d(7),$li(%CTTSF20d(35),2)=%CTTSF20d(8),$li(%CTTSF20d(35),9)=%CTTSF20d(9),$li(%CTTSF20d(35),5)=%CTTSF20d(10),$li(%CTTSF20d(35),6)=%CTTSF20d(11),$li(%CTTSF20d(35),10)=%CTTSF20d(12),$li(%CTTSF20d(35),4)=%CTTSF20d(13),$li(%CTTSF20d(35),7)=%CTTSF20d(14),$li(%CTTSF20d(35),1)=%CTTSF20d(15),$li(%CTTSF20d(35),17)=%CTTSF20d(16),$li(%CTTSF20d(35),8)=%CTTSF20d(17),$li(%CTTSF20d(35),15)=%CTTSF20d(19),^||%sql.temp(%CTTSF20t(1),0,%CTTSF20s(18),%CTTSF20s(2))=%CTTSF20d(35)
 g %0CBk1
%0CBdun 
 q
%0Go d %CTTSF10f q:SQLCODE'=0
 s PLIST(0)=%CTTSF10d(1),PLIST(1)=%CTTSF10d(2),PLIST(2)=%CTTSF10d(3),PLIST(3)=%CTTSF10d(4),PLIST(4)=%CTTSF10d(5),PLIST(5)=%CTTSF10d(6),PLIST(6)=%CTTSF10d(7),PLIST(7)=%CTTSF10d(8),PLIST(8)=%CTTSF10d(9),PLIST(9)=%CTTSF10d(10),PLIST(10)=%CTTSF10d(11),PLIST(11)=%CTTSF10d(12),PLIST(12)=%CTTSF10d(13),PLIST(13)=%CTTSF10d(14),PLIST(14)=%CTTSF10d(15),PLIST(15)=%CTTSF10d(16),PLIST(16)=%CTTSF10d(17),PLIST(17)=%CTTSF10d(18),PLIST(18)=%CTTSF10d(19)
 q
%0Ho d %CTTSF20f q:SQLCODE'=0
 s PLIST(0)=%CTTSF20d(1),PLIST(1)=%CTTSF20d(2),PLIST(2)=%CTTSF20d(3),PLIST(3)=%CTTSF20d(4),PLIST(4)=%CTTSF20d(5),PLIST(5)=%CTTSF20d(6),PLIST(6)=%CTTSF20d(7),PLIST(7)=%CTTSF20d(8),PLIST(8)=%CTTSF20d(9),PLIST(9)=%CTTSF20d(10),PLIST(10)=%CTTSF20d(11),PLIST(11)=%CTTSF20d(12),PLIST(12)=%CTTSF20d(13),PLIST(13)=%CTTSF20d(14),PLIST(14)=%CTTSF20d(15),PLIST(15)=%CTTSF20d(16),PLIST(16)=%CTTSF20d(17),PLIST(17)=%CTTSF20d(18),PLIST(18)=%CTTSF20d(19)
 q
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Kerr" s %mmmsqld(24)=0,%mmmsqld(25)=""
 s %mmmsqld(21)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(21)
 s %mmmsqld(23)=$p(PLIST(1),"||"),PLIST(4)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(23)'="",PLIST(4)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(23),PLIST(4),PLIST(2)))
 e  g %0KBdun
 s %mmmsqld(32)=$g(^TTAB("TS",%mmmsqld(23),PLIST(4),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"\",1) s PLIST(5)=$p(%mmmsqld(32),"\",3) s PLIST(6)=$p(%mmmsqld(32),"\",4) s PLIST(7)=$p(%mmmsqld(32),"\",5) s PLIST(8)=$p(%mmmsqld(32),"\",6) s PLIST(9)=$p(%mmmsqld(32),"\",7) s PLIST(10)=$p(%mmmsqld(32),"\",8) s PLIST(11)=$p(%mmmsqld(32),"\",9) s PLIST(12)=$p(%mmmsqld(32),"\",10) s PLIST(13)=$p(%mmmsqld(32),"\",11) s PLIST(14)=$p(%mmmsqld(32),"\",12) s PLIST(15)=$p(%mmmsqld(32),"\",13) s PLIST(16)=$p(%mmmsqld(32),"\",14) s PLIST(17)=$p(%mmmsqld(32),"\",15) s PLIST(18)=$p(%mmmsqld(32),"\",16)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0KBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(24)=1,%mmmsqld(25)=$name(^TTAB("TS",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFields for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(23)=$p(PLIST(1),"||"),PLIST(4)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(23)'="",PLIST(4)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(23),PLIST(4),PLIST(2)))
 e  g %0KCdun
 s %mmmsqld(39)=$g(^TTAB("TS",%mmmsqld(23),PLIST(4),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(39),"\",1) s PLIST(5)=$p(%mmmsqld(39),"\",3) s PLIST(6)=$p(%mmmsqld(39),"\",4) s PLIST(7)=$p(%mmmsqld(39),"\",5) s PLIST(8)=$p(%mmmsqld(39),"\",6) s PLIST(9)=$p(%mmmsqld(39),"\",7) s PLIST(10)=$p(%mmmsqld(39),"\",8) s PLIST(11)=$p(%mmmsqld(39),"\",9) s PLIST(12)=$p(%mmmsqld(39),"\",10) s PLIST(13)=$p(%mmmsqld(39),"\",11) s PLIST(14)=$p(%mmmsqld(39),"\",12) s PLIST(15)=$p(%mmmsqld(39),"\",13) s PLIST(16)=$p(%mmmsqld(39),"\",14) s PLIST(17)=$p(%mmmsqld(39),"\",15) s PLIST(18)=$p(%mmmsqld(39),"\",16)
 s PLIST(0)=$p(PLIST(1),"||")
%0KBuncommitted ;
 s SQLCODE=0 g %0Kc
%0KCdun i $zu(115,2)=1,$g(%mmmsqld(24))=1 { l -@%mmmsqld(25) s %mmmsqld(24)=0 }
%0KBdun 
%0KAdun 
%0Kc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(24))=1 { l -@%mmmsqld(25) } q
%0Kerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Kc
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Merr" s %mmmsqld(28)=0,%mmmsqld(29)=""
 s %mmmsqld(21)=$g(tset),%mmmsqld(22)=$g(titem),%mmmsqld(23)=$g(layout)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(10)=%mmmsqld(22)
 s PLIST(0)=%mmmsqld(21)
 i PLIST(10)="" g %0MBdun
 i '(PLIST(10)'="") g %0MBdun
 i PLIST(0)="" g %0MBdun
 i '$d(^TTAB("TC",PLIST(10),1,PLIST(0))) g %0MBdun
 s %mmmsqld(37)=$g(^TTAB("TC",PLIST(10),1,PLIST(0)))
 s PLIST(4)=$p(%mmmsqld(37),"\",2)
 g:'(PLIST(4)=%mmmsqld(23)) %0MBdun
 s PLIST(2)=$p(%mmmsqld(37),"\",1)
 s PLIST(1)=(PLIST(0))_"||"_(PLIST(4))_"||"_(PLIST(2))
 s %mmmsqld(25)=$p(PLIST(1),"||"),PLIST(4)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(25)'="",PLIST(4)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(25),PLIST(4),PLIST(2)))
 e  g %0MBdun
 s %mmmsqld(44)=$g(^TTAB("TS",%mmmsqld(25),PLIST(4),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(44),"\",1) s PLIST(5)=$p(%mmmsqld(44),"\",3) s PLIST(6)=$p(%mmmsqld(44),"\",4) s PLIST(7)=$p(%mmmsqld(44),"\",5) s PLIST(8)=$p(%mmmsqld(44),"\",6) s PLIST(9)=$p(%mmmsqld(44),"\",7) s PLIST(11)=$p(%mmmsqld(44),"\",9) s PLIST(12)=$p(%mmmsqld(44),"\",10) s PLIST(13)=$p(%mmmsqld(44),"\",11) s PLIST(14)=$p(%mmmsqld(44),"\",12) s PLIST(15)=$p(%mmmsqld(44),"\",13) s PLIST(16)=$p(%mmmsqld(44),"\",14) s PLIST(17)=$p(%mmmsqld(44),"\",15) s PLIST(18)=$p(%mmmsqld(44),"\",16)
 g:$zu(115,2)=0 %0MBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(28)=1,%mmmsqld(29)=$name(^TTAB("TS",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFields for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(26)=$lb(""_PLIST(10))
 s %mmmsqld(25)=$p(PLIST(1),"||"),PLIST(4)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(25)'="",PLIST(4)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(25),PLIST(4),PLIST(2)))
 e  g %0MCdun
 s %mmmsqld(51)=$g(^TTAB("TS",%mmmsqld(25),PLIST(4),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(51),"\",1) s PLIST(5)=$p(%mmmsqld(51),"\",3) s PLIST(6)=$p(%mmmsqld(51),"\",4) s PLIST(7)=$p(%mmmsqld(51),"\",5) s PLIST(8)=$p(%mmmsqld(51),"\",6) s PLIST(9)=$p(%mmmsqld(51),"\",7) s PLIST(10)=$p(%mmmsqld(51),"\",8) s PLIST(11)=$p(%mmmsqld(51),"\",9) s PLIST(12)=$p(%mmmsqld(51),"\",10) s PLIST(13)=$p(%mmmsqld(51),"\",11) s PLIST(14)=$p(%mmmsqld(51),"\",12) s PLIST(15)=$p(%mmmsqld(51),"\",13) s PLIST(16)=$p(%mmmsqld(51),"\",14) s PLIST(17)=$p(%mmmsqld(51),"\",15) s PLIST(18)=$p(%mmmsqld(51),"\",16)
 s PLIST(0)=$p(PLIST(1),"||")
 s %mmmsqld(27)=$lb(""_PLIST(10))
 g:%mmmsqld(26)'=%mmmsqld(27) %0MCdun
%0MBuncommitted ;
 s SQLCODE=0 g %0Mc
%0MCdun i $zu(115,2)=1,$g(%mmmsqld(28))=1 { l -@%mmmsqld(29) s %mmmsqld(28)=0 }
%0MBdun 
%0MAdun 
%0Mc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(28))=1 { l -@%mmmsqld(29) } q
%0Merr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Mc
%0Oo n %i,icol,ir
 f icol=0:1:18 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestSetFields.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Oo
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(par),%mmmsqld(4)=$g(layout)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(1)="" g %0QBdun
 i %mmmsqld(3)="" g %0QBdun
 s %mmmsqld(6)=""
%0QBk1 s %mmmsqld(6)=$o(^TTAB("TS",%mmmsqld(1),%mmmsqld(3),%mmmsqld(6)))
 i %mmmsqld(6)="" g %0QBdun
 s %mmmsqld(5)=(%mmmsqld(1))_"||"_(%mmmsqld(3))_"||"_(%mmmsqld(6))
 s %mmmsqld(16)=$$%getlock^User.CTTestSetFields.T1(%mmmsqld(5)) i '%mmmsqld(16) s SQLCODE=-110 g %0Qc
 ; asl MOD# 3
 s %mmmsqld(7)=$p(%mmmsqld(5),"||"),%mmmsqld(3)=$p(%mmmsqld(5),"||",2),%mmmsqld(6)=$p(%mmmsqld(5),"||",3)
 i %mmmsqld(7)'="",%mmmsqld(3)'="",%mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(7),%mmmsqld(3),%mmmsqld(6)))
 e  g %0QCdun
 s %mmmsqld(1)=$p(%mmmsqld(5),"||")
 d %delete^User.CTTestSetFields.T1(%mmmsqld(5),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.CTTestSetFields.T1(%mmmsqld(5)) g %0Qc
%0QCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.CTTestSetFields.T1(%mmmsqld(5)) g:SQLCODE<0 %0Qc
 g %0QBk1
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.CTTestSetFields.T1(%mmmsqld(5)) g %0Qc
%0So n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Serr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0SBdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5)))
 s %mmmsqld(14)=$p(%mmmsqld(15),"\",18)
 s %mmmsqld(1)=$$CT069^at42($g(%mmmsqld(14)),$g(%mmmsqld(5)))
 g:$zu(115,2)=0 %0SBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0SCdun
 s %mmmsqld(18)=$g(^TEPI(%mmmsqld(5)))
 s %mmmsqld(14)=$p(%mmmsqld(18),"\",18)
 s %mmmsqld(1)=$$CT069^at42($g(%mmmsqld(14)),$g(%mmmsqld(5)))
%0SBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  s bgRh="",%mmmsqld(2)="" g %0SCp4
 s %mmmsqld(23)=$g(^TTAB("BB-BG",%mmmsqld(2)))
 s bgRh=$p(%mmmsqld(23),"\",3)
%0SCp4 
 g:$zu(115,2)=0 %0SCuncommitted i $zu(115,2)=1 l +^TTAB("BB-BG",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("BB-BG",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_BloodGroup for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  s bgRh="",%mmmsqld(2)="" g %0SDp1
 s %mmmsqld(28)=$g(^TTAB("BB-BG",%mmmsqld(2)))
 s bgRh=$p(%mmmsqld(28),"\",3)
%0SDp1 
%0SCuncommitted ;
 s SQLCODE=0 g %0Sc
%0SDdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0SCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0SBdun 
%0SAdun 
%0Sc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Serr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Sc
%0Uo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Uerr" s %mmmsqld(10)=0,%mmmsqld(11)="",%mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(6)=$g(bpRID)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 s %mmmsqld(8)=$p(%mmmsqld(5),"||"),%mmmsqld(9)=$p(%mmmsqld(5),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 e  g %0UBdun
 s %mmmsqld(17)=$g(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(1)=$p(%mmmsqld(17),"\",43)
 g:$zu(115,2)=0 %0UBuncommitted i $zu(115,2)=1 l +^TBBP($p(%mmmsqld(5),"||",1),$p(%mmmsqld(5),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TBBP($p(%mmmsqld(5),"||",1),$p(%mmmsqld(5),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BBP_PackDetails for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(%mmmsqld(5),"||"),%mmmsqld(9)=$p(%mmmsqld(5),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 e  g %0UCdun
 s %mmmsqld(21)=$g(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",43)
%0UBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  s bgRh="",%mmmsqld(2)="" g %0UCp5
 s %mmmsqld(26)=$g(^TTAB("BB-BG",%mmmsqld(2)))
 s bgRh=$p(%mmmsqld(26),"\",3)
%0UCp5 
 g:$zu(115,2)=0 %0UCuncommitted i $zu(115,2)=1 l +^TTAB("BB-BG",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("BB-BG",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_BloodGroup for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  s bgRh="",%mmmsqld(2)="" g %0UDp1
 s %mmmsqld(31)=$g(^TTAB("BB-BG",%mmmsqld(2)))
 s bgRh=$p(%mmmsqld(31),"\",3)
%0UDp1 
%0UCuncommitted ;
 s SQLCODE=0 g %0Uc
%0UDdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0UCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0UBdun 
%0UAdun 
%0Uc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Uerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Uc
%0Wo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Werr" s %mmmsqld(10)=0,%mmmsqld(11)="",%mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(6)=$g(bpRID)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 s %mmmsqld(8)=$p(%mmmsqld(5),"||"),%mmmsqld(9)=$p(%mmmsqld(5),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 e  g %0WBdun
 s %mmmsqld(17)=$g(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(1)=$p(%mmmsqld(17),"\",5)
 g:$zu(115,2)=0 %0WBuncommitted i $zu(115,2)=1 l +^TBBP($p(%mmmsqld(5),"||",1),$p(%mmmsqld(5),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TBBP($p(%mmmsqld(5),"||",1),$p(%mmmsqld(5),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BBP_PackDetails for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(%mmmsqld(5),"||"),%mmmsqld(9)=$p(%mmmsqld(5),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 e  g %0WCdun
 s %mmmsqld(21)=$g(^TBBP(%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",5)
%0WBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  s bgRh="",%mmmsqld(2)="" g %0WCp5
 s %mmmsqld(26)=$g(^TTAB("BB-BG",%mmmsqld(2)))
 s bgRh=$p(%mmmsqld(26),"\",3)
%0WCp5 
 g:$zu(115,2)=0 %0WCuncommitted i $zu(115,2)=1 l +^TTAB("BB-BG",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("BB-BG",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_BloodGroup for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  s bgRh="",%mmmsqld(2)="" g %0WDp1
 s %mmmsqld(31)=$g(^TTAB("BB-BG",%mmmsqld(2)))
 s bgRh=$p(%mmmsqld(31),"\",3)
%0WDp1 
%0WCuncommitted ;
 s SQLCODE=0 g %0Wc
%0WDdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0WCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0WBdun 
%0WAdun 
%0Wc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Werr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Wc
]]></Routine>
</Export>
