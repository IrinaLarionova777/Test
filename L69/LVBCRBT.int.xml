<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCRBT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCRBT ; IG 29/4/98 ; MVB Control code access for CR_CreditBatch
 ;
 ; supported calls:
 ;
 ; $$post^LVBCRBT(batch)
 ; $$select^LVBCRBT(ROWID)
 ; $$open^LVBCRBT(status,type)
 ; $$fetch^LVBCRBT(status,type)
 ; $$close^LVBCRBT()
 ; $$insert^LVBCRBT()
 ; $$update^LVBCRBT(ROWID)
 ; $$delete^LVBCRBT(ROWID)
 ; $$getall^LVBCRBT(status,type)
 ; $$getall1^LVBCRBT(receipt,cheque,cc,un,df,dt,amount)
 ; $$new^LVBCRBT(type)
 ; $$audit^LVBCRBT(audit)
  ;---&SQL(DECLARE CRBT CURSOR FOR SELECT * FROM CR_CreditBatch
   ;---         WHERE ((CRBT_Status = :status) OR (:status IS NULL))
   ;---         AND CRBT_Code %STARTSWITH :type ORDER BY CRBT_Status)
   ;--- ** SQL PUBLIC Variables: SQLCODE, status, type
audit(audit) n (audit) s audit=$g(audit),result=100
 i $l(audit),$d(^TBATi("AUDIT",audit)) s result=0
 q result
post(batch) s batch=$g(batch) n (batch)
 ; update credit batch
 i '$$select(batch) d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .s PLIST(3)="P",PLIST(12)=+$h i $$update(batch)
 ; update credit batch lines
 s line="" f  s line=$o(^TBAT(batch,line)) q:line=""  d
 .i '$$select^LVBCRBL(batch_"||"_line),$$update^LVBCRBL(batch_"||"_line)
 .i $$open^LVBCRBLB(batch_"||"_line)
 .f  q:$$fetch^LVBCRBLB(batch_"||"_line)  s err=$$update^LVBCRBLB(PLIST(1)) i err d ErrorLog^LVBCOM02("CREDIT",batch_"||"_line_" "_PLIST(2),err)
 .i $$close^LVBCRBLB()
 q 0
 ; new batch number
new(type) n (type) s type=$g(type),number=""
 i $l(type) d
 .s start=1
 .f  q:'$d(^TBAT(type_(start+10000)))  s start=start+10000
 .f  q:'$d(^TBAT(type_(start+1000)))  s start=start+1000
 .f  q:'$d(^TBAT(type_(start+100)))  s start=start+100
 .f number=start:1 q:'$d(^TBAT(type_number))
 q number
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CR_CreditBatch VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE CR_CreditBatch VALUES :PLIST() WHERE CRBT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Fo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID)  ;---&SQL(DELETE FROM CR_CreditBatch WHERE CRBT_RowID=:ROWID)
  ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Ho
 Q SQLCODE
 ; Open the cursor
open(STATUS,type) s STATUS=$g(STATUS),type=$g(type)
 s status=STATUS,GLOBALSTATUS="" i $l(STATUS)>1 s status=$e(STATUS),GLOBALSTATUS=STATUS
  ;---&SQL(OPEN CRBT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CRBT0o
 Q 0
 ; Fetch the data
fetch(STATUS,type) K PLIST s STATUS=$g(STATUS),type=$g(type)
 i $l(GLOBALSTATUS) s status=$e(GLOBALSTATUS)
nx  ;---&SQL(FETCH CRBT INTO :PLIST())
  ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ko
 i SQLCODE,$l($e(GLOBALSTATUS,2,99)) d  g nx
 .i $$close()
 .s GLOBALSTATUS=$e(GLOBALSTATUS,2,99),status=$e(GLOBALSTATUS)
 .i $$open(status,type)
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CRBT) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CRBT0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM CR_CreditBatch WHERE CRBT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Mo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 i $p($g(PLIST(3)),$c(1))'="P",$p($g(^TBAT(PLIST(2))),"\")="P" s PLIST(3)="P"
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(7))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTBA(plist(7),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(7)=X K plist
 ;
 Q
 ;
getall(STATUS,type) n (STATUS,type,PLIST) k ^TMP($zn,$j) s STATUS=$g(STATUS),type=$g(type)
 i $$open(STATUS,type)
 f cnt=1:1 q:$$fetch(STATUS,type)  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; find Batch-Lines with payment details
getall1(receipt,cheque,cc,un,df,dt,amount) n (receipt,cheque,cc,un,df,dt,amount,PLIST) k ^TMP($zn,$j)
 s receipt=$g(receipt),cheque=$$ALPHAUP^SSUTIL4($g(cheque)),cc=$$ALPHAUP^SSUTIL4($g(cc)),un=$$ALPHAUP^SSUTIL4($g(un))
 s df=$g(df),dt=$g(dt),amount=$g(amount)
 i $l(receipt),'$$select^LVBRCPT(receipt) s ^TMP($zn,$j,PLIST(8))=""
 i $l(cheque) d
 .s x1=cheque f  d:$e(x1,1,$l(cheque))=cheque  s x1=$o(^TBATi("CQ",x1)) q:x1=""
 ..s x2="" f  s x2=$o(^TBATi("CQ",x1,x2)) q:x2=""  s ^TMP($zn,$j,$p(x2,"||",1,2))=""
 i $l(cc) d
 .s x1=cc f  d  s x1=$o(^TBATi("CC",x1)) q:x1=""  q:$e(x1,1,$l(cc))'=cc
 ..s x2="" f  s x2=$o(^TBATi("CC",x1,x2)) q:x2=""  s ^TMP($zn,$j,$p(x2,"||",1,2))=""
 i $l(un) s x="" f  s x=$o(^TBATi("EDI",un,x)) q:x=""  s ^TMP($zn,$j,$p(x,"||",1,2))=""
 i $l(df),$l(dt),$l(amount) d
 .s x1="" f  s x1=$o(^TBAT(x1)) q:x1=""  d
 ..s xx=$p(^(x1),"\",10) i (xx<df)!(xx>dt) q
 ..s x2="" f  s x2=$o(^TBAT(x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TBAT(x1,x2,0,x3)) q:x3=""  d
 ....s xx=$p(^(x3),"\",2) i '(xx-amount) s ^TMP($zn,$j,x1_"||"_x2)=""
 k PLIST s x="" f cnt=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  s PLIST(cnt)=x
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 q
%0ABr1 f j=1:1:$l($g(%CRBT0d(1))) i $e($g(%CRBT0d(1)),j)?1N s %CRBT0d(9)=$e($g(%CRBT0d(1)),1,j-1) q
 q
%CRBT0o s $zt="%CRBT0E" s SQLCODE=$s($g(%CRBT0c):-101,1:0) q:SQLCODE'=0  s %CRBT0d(19)=0 s %CRBT0d(20)=0,%CRBT0d(21)=""
 s %CRBT0d(13)=$g(status),%CRBT0d(14)=$g(status),%CRBT0d(15)=$g(type)
 s %CRBT0t(1)=$i(^||%sql.temp)
 s %CRBT0d(18)=$zu(28,%CRBT0d(13),7)
 s %CRBT0c=1 q
%CRBT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CRBT0c,%CRBT0d,%CRBT0E,%CRBT0l,%CRBT0n,%CRBT0R,%CRBT0s,%CRBT0t,%CRBT0Z q
%0Afirst 
 k ^||%sql.temp(%CRBT0t(1),0) s ^||%sql.temp(%CRBT0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CRBT0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CRBT0t(1),0))
 s %CRBT0s(17)=""
%0ACk1 s %CRBT0s(17)=$o(^||%sql.temp(%CRBT0t(1),0,%CRBT0s(17)))
 i %CRBT0s(17)="" g %0ACdun
 s %CRBT0d(17)=$s(%CRBT0s(17)=-1E14:"",1:%CRBT0s(17))
 s %CRBT0s(1)=""
%0ACk2 s %CRBT0s(1)=$o(^||%sql.temp(%CRBT0t(1),0,%CRBT0s(17),%CRBT0s(1)))
 i %CRBT0s(1)="" g %0ACk1
 s %CRBT0d(1)=$s(%CRBT0s(1)=-1E14:"",1:%CRBT0s(1))
 s %CRBT0d(27)=$g(^||%sql.temp(%CRBT0t(1),0,%CRBT0s(17),%CRBT0s(1)))
 s %CRBT0d(2)=$lg(%CRBT0d(27),10) s %CRBT0d(3)=$lg(%CRBT0d(27),1) s %CRBT0d(4)=$lg(%CRBT0d(27),9) s %CRBT0d(5)=$lg(%CRBT0d(27),7) s %CRBT0d(6)=$lg(%CRBT0d(27),4) s %CRBT0d(7)=$lg(%CRBT0d(27),3) s %CRBT0d(8)=$lg(%CRBT0d(27),6) s %CRBT0d(9)=$lg(%CRBT0d(27),5) s %CRBT0d(10)=$lg(%CRBT0d(27),2) s %CRBT0d(11)=$lg(%CRBT0d(27),8) s %CRBT0d(12)=$lg(%CRBT0d(27),11)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TBAT($p(%CRBT0d(1),"||",1))#"S":$zu(115,4) i $t { s %CRBT0d(20)=1,%CRBT0d(21)=$name(^TBAT($p(%CRBT0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CR_CreditBatch for RowID value: "_%CRBT0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CRBT0d(1)'="",$d(^TBAT(%CRBT0d(1)))
 e  g %0ADdun
 s %CRBT0d(30)=$g(^TBAT(%CRBT0d(1)))
 s %CRBT0d(2)=$p(%CRBT0d(30),"\",1) s %CRBT0d(3)=$p(%CRBT0d(30),"\",2) s %CRBT0d(4)=$p(%CRBT0d(30),"\",3) s %CRBT0d(5)=$p(%CRBT0d(30),"\",4) s %CRBT0d(6)=$p(%CRBT0d(30),"\",5) s %CRBT0d(7)=$p(%CRBT0d(30),"\",6) s %CRBT0d(8)=$p(%CRBT0d(30),"\",7) s %CRBT0d(10)=$p(%CRBT0d(30),"\",9) s %CRBT0d(11)=$p(%CRBT0d(30),"\",10) s %CRBT0d(12)=$p(%CRBT0d(30),"\",11)
 d %0ABr1 s %CRBT0d(17)=$zu(28,%CRBT0d(2),7)
 g:'(($c(0)[%CRBT0d(15))||(%CRBT0d(15)=$c(32,0)&&($e(%CRBT0d(1))=$c(32)))||(%CRBT0d(15)=$e(%CRBT0d(1),1,$l(%CRBT0d(15))))) %0ADdun
 g:'(((%CRBT0d(17)'=" ")&&(%CRBT0d(17)=%CRBT0d(18)))||(%CRBT0d(14)="")) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CRBT0d(19)=%CRBT0d(19)+1,%ROWCOUNT=%CRBT0d(19),%ROWID=%CRBT0d(1),%CRBT0c=10 q
%CRBT0f i '$g(%CRBT0c) { s SQLCODE=-102 q  } i %CRBT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CRBT0d(19))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CRBT0d(19),%CRBT0c=100 q  } g %0Afirst:%CRBT0c=1
%0ADdun i $zu(115,2)=1,$g(%CRBT0d(20))=1 { l -@%CRBT0d(21) s %CRBT0d(20)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CRBT0d(19),SQLCODE=100,%CRBT0c=100 q
%CRBT0c i '$g(%CRBT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CRBT0d(19)),1:0) f %CRBT0d(22)=1 { i $sortend(^||%sql.temp(%CRBT0t(%CRBT0d(22)),0),0) } k ^||%sql.temp(%CRBT0t(1))
 i $zu(115,2)=1,$g(%CRBT0d(20))=1 { l -@%CRBT0d(21) } k %CRBT0c,%CRBT0d,%CRBT0E,%CRBT0l,%CRBT0n,%CRBT0R,%CRBT0s,%CRBT0t,%CRBT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CRBT0c=100
 f %CRBT0d(22)=1 i $sortend(^||%sql.temp(%CRBT0t(%CRBT0d(22)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CRBT0d(1)=$s(%CRBT0d(15)=$c(0):"",%CRBT0d(15)=$c(32,0):" ",1:%CRBT0d(15))
 i %CRBT0d(1)'="",$d(^TBAT(%CRBT0d(1))) g %0ABg1
%0ABk1 s %CRBT0d(1)=$o(^TBAT(%CRBT0d(1)))
 i %CRBT0d(1)="" g %0ABdun
%0ABg1 i (%CRBT0d(15)?1n.n),":"']%CRBT0d(1) g %0ABdun
 i '(($c(0)[%CRBT0d(15))||(($c(32,0)[%CRBT0d(15))&&($e(%CRBT0d(1))=" "))||(%CRBT0d(15)=$e(%CRBT0d(1),1,$l(%CRBT0d(15))))) g:(%CRBT0d(15)?1n.n) %0ABk1 g %0ABdun
 s %CRBT0d(25)=$g(^TBAT(%CRBT0d(1)))
 s %CRBT0d(2)=$p(%CRBT0d(25),"\",1) s %CRBT0d(3)=$p(%CRBT0d(25),"\",2) s %CRBT0d(4)=$p(%CRBT0d(25),"\",3) s %CRBT0d(5)=$p(%CRBT0d(25),"\",4) s %CRBT0d(6)=$p(%CRBT0d(25),"\",5) s %CRBT0d(7)=$p(%CRBT0d(25),"\",6) s %CRBT0d(8)=$p(%CRBT0d(25),"\",7) s %CRBT0d(10)=$p(%CRBT0d(25),"\",9) s %CRBT0d(11)=$p(%CRBT0d(25),"\",10) s %CRBT0d(12)=$p(%CRBT0d(25),"\",11)
 d %0ABr1 s %CRBT0d(17)=$zu(28,%CRBT0d(2),7)
 g:'(((%CRBT0d(17)'=" ")&&(%CRBT0d(17)=%CRBT0d(18)))||(%CRBT0d(14)="")) %0ABk1
 s %CRBT0s(17)=$s(%CRBT0d(17)'="":%CRBT0d(17),1:-1E14),%CRBT0s(1)=$s(%CRBT0d(1)'="":%CRBT0d(1),1:-1E14),%CRBT0d(26)="",$li(%CRBT0d(26),10)=%CRBT0d(2),$li(%CRBT0d(26),1)=%CRBT0d(3),$li(%CRBT0d(26),9)=%CRBT0d(4),$li(%CRBT0d(26),7)=%CRBT0d(5),$li(%CRBT0d(26),4)=%CRBT0d(6),$li(%CRBT0d(26),3)=%CRBT0d(7),$li(%CRBT0d(26),6)=%CRBT0d(8),$li(%CRBT0d(26),5)=%CRBT0d(9),$li(%CRBT0d(26),2)=%CRBT0d(10),$li(%CRBT0d(26),8)=%CRBT0d(11),$li(%CRBT0d(26),11)=%CRBT0d(12),^||%sql.temp(%CRBT0t(1),0,%CRBT0s(17),%CRBT0s(1))=%CRBT0d(26)
 g %0ABk1
%0ABdun 
 q
%0Do n %i,icol,ir
 f icol=0:1:13 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CRCreditBatch.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Do
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TBAT(%mmmsqld(2)))
 e  g %0FBdun
 s %mmmsqld(8)=$$%getlock^User.CRCreditBatch.T1(%mmmsqld(2)) i '%mmmsqld(8) s SQLCODE=-110 g %0Fc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TBAT(%mmmsqld(2)))
 e  g %0FCdun
 k %data
 f icol=0:1:13 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CRCreditBatch.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(8)=1 %ReleaseLock^User.CRCreditBatch.T1(%mmmsqld(2)) g %0Fc
%0FCdun 
 d:%mmmsqld(8)=1 %ReleaseLock^User.CRCreditBatch.T1(%mmmsqld(2)) g:SQLCODE<0 %0Fc
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(8))=1 %ReleaseLock^User.CRCreditBatch.T1(%mmmsqld(2)) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TBAT(%mmmsqld(1)))
 e  g %0HBdun
 s %mmmsqld(7)=$$%getlock^User.CRCreditBatch.T1(%mmmsqld(1)) i '%mmmsqld(7) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TBAT(%mmmsqld(1)))
 e  g %0HCdun
 d %delete^User.CRCreditBatch.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(7)=1 %ReleaseLock^User.CRCreditBatch.T1(%mmmsqld(1)) g %0Hc
%0HCdun 
 d:%mmmsqld(7)=1 %ReleaseLock^User.CRCreditBatch.T1(%mmmsqld(1)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(7))=1 %ReleaseLock^User.CRCreditBatch.T1(%mmmsqld(1)) g %0Hc
%0Ko d %CRBT0f q:SQLCODE'=0
 s PLIST(1)=%CRBT0d(1),PLIST(2)=%CRBT0d(1),PLIST(3)=%CRBT0d(2),PLIST(4)=%CRBT0d(3),PLIST(5)=%CRBT0d(4),PLIST(6)=%CRBT0d(5),PLIST(7)=%CRBT0d(6),PLIST(8)=%CRBT0d(7),PLIST(9)=%CRBT0d(8),PLIST(10)=%CRBT0d(9),PLIST(11)=%CRBT0d(10),PLIST(12)=%CRBT0d(11),PLIST(13)=%CRBT0d(12)
 q
%0MBr1 f j=1:1:$l($g(PLIST(2))) i $e($g(PLIST(2)),j)?1N s PLIST(10)=$e($g(PLIST(2)),1,j-1) q
 q
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Merr" s %mmmsqld(16)=0,%mmmsqld(17)=""
 s %mmmsqld(14)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(14)
 i PLIST(2)'="",$d(^TBAT(PLIST(2)))
 e  g %0MBdun
 s %mmmsqld(20)=$g(^TBAT(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",2) s PLIST(5)=$p(%mmmsqld(20),"\",3) s PLIST(6)=$p(%mmmsqld(20),"\",4) s PLIST(7)=$p(%mmmsqld(20),"\",5) s PLIST(8)=$p(%mmmsqld(20),"\",6) s PLIST(9)=$p(%mmmsqld(20),"\",7) s PLIST(11)=$p(%mmmsqld(20),"\",9) s PLIST(12)=$p(%mmmsqld(20),"\",10) s PLIST(13)=$p(%mmmsqld(20),"\",11)
 d %0MBr1
 g:$zu(115,2)=0 %0MBuncommitted i $zu(115,2)=1 l +^TBAT($p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TBAT($p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CR_CreditBatch for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TBAT(PLIST(2)))
 e  g %0MCdun
 s %mmmsqld(23)=$g(^TBAT(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4) s PLIST(7)=$p(%mmmsqld(23),"\",5) s PLIST(8)=$p(%mmmsqld(23),"\",6) s PLIST(9)=$p(%mmmsqld(23),"\",7) s PLIST(11)=$p(%mmmsqld(23),"\",9) s PLIST(12)=$p(%mmmsqld(23),"\",10) s PLIST(13)=$p(%mmmsqld(23),"\",11)
 d %0MBr1
%0MBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Mc
%0MCdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0MBdun 
%0MAdun 
%0Mc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } q
%0Merr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Mc
]]></Routine>
</Export>
