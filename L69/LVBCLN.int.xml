<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCLN" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCLN ; IG 1/5/98 ; LVB Control data access for CLN CL_CollectionListNumber
 ;
 ; supported calls:
 ;
 ; $$delete^LVBCLN(ROWID,Comments)
 ; $$insert^LVBCLN(par)
 ; $$select^LVBCLN(ROWID,skip)
 ; $$update^LVBCLN(par)
 ; $$open^LVBCLN(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCLN(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCLN(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCLN(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCLN()
 ;
  ;---&sql(DECLARE CLN CURSOR FOR SELECT * FROM CL_CollectionListNumber
   ;---         WHERE CLN_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CLN)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CLN0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CLN INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CLN)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CLN0c
 q 0
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CL_CollectionListNumber WHERE CLN_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Fo
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CL_CollectionListNumber WHERE CLN_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
update(par) d pre("Y") s par=$g(par)
  ;---&SQL(UPDATE CL_CollectionListNumber VALUES :PLIST() WHERE CLN_RowID=:par)
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, par
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1) s PLIST(2)=$o(^TTCL(par,"LIST",""),-1)+1
  ;---&sql(INSERT INTO CL_CollectionListNumber VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Lo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(PLIST(6))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTPER(plist(6),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(6)=X k plist
 i $g(PLIST(9))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTUSL(plist(9),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(9)=X k plist
 q        
%CLN0o s $zt="%CLN0E" s SQLCODE=$s($g(%CLN0c):-101,1:0) q:SQLCODE'=0  s %CLN0d(16)=0 s %CLN0d(17)=0,%CLN0d(18)=""
 s %CLN0d(13)=$g(par)
 s %CLN0c=1 q
%CLN0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CLN0c,%CLN0d,%CLN0E,%CLN0l,%CLN0n,%CLN0R,%CLN0Z q
%0Afirst 
 ; asl MOD# 2
 s %CLN0d(1)=%CLN0d(13)
 i %CLN0d(1)="" g %0ABdun
 s %CLN0d(3)=""
%0ABk1 s %CLN0d(3)=$o(^TTCL(%CLN0d(1),"LIST",%CLN0d(3)))
 i %CLN0d(3)="" g %0ABdun
 s %CLN0d(24)=$g(^TTCL(%CLN0d(1),"LIST",%CLN0d(3)))
 s %CLN0d(4)=$p(%CLN0d(24),"\",1) s %CLN0d(5)=$p(%CLN0d(24),"\",2) s %CLN0d(6)=$p(%CLN0d(24),"\",6) s %CLN0d(7)=$p(%CLN0d(24),"\",5) s %CLN0d(8)=$p(%CLN0d(24),"\",3) s %CLN0d(9)=$p(%CLN0d(24),"\",4) s %CLN0d(10)=$p(%CLN0d(24),"\",7) s %CLN0d(12)=$p(%CLN0d(24),"\",8)
 s %CLN0d(2)=(%CLN0d(1))_"||"_(%CLN0d(3))
 s %CLN0d(11)=$$CT010^at443($g(%CLN0d(2)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTCL($p(%CLN0d(2),"||",1),"LIST",$p(%CLN0d(2),"||",2))#"S":$zu(115,4) i $t { s %CLN0d(17)=1,%CLN0d(18)=$name(^TTCL($p(%CLN0d(2),"||",1),"LIST",$p(%CLN0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CL_CollectionListNumber for RowID value: "_%CLN0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CLN0d(15)=$p(%CLN0d(2),"||"),%CLN0d(3)=$p(%CLN0d(2),"||",2)
 i %CLN0d(15)'="",%CLN0d(3)'="",$d(^TTCL(%CLN0d(15),"LIST",%CLN0d(3)))
 e  g %0ACdun
 s %CLN0d(30)=$g(^TTCL(%CLN0d(15),"LIST",%CLN0d(3)))
 s %CLN0d(4)=$p(%CLN0d(30),"\",1) s %CLN0d(5)=$p(%CLN0d(30),"\",2) s %CLN0d(6)=$p(%CLN0d(30),"\",6) s %CLN0d(7)=$p(%CLN0d(30),"\",5) s %CLN0d(8)=$p(%CLN0d(30),"\",3) s %CLN0d(9)=$p(%CLN0d(30),"\",4) s %CLN0d(10)=$p(%CLN0d(30),"\",7) s %CLN0d(12)=$p(%CLN0d(30),"\",8)
 s %CLN0d(1)=$p(%CLN0d(2),"||")
 s %CLN0d(11)=$$CT010^at443($g(%CLN0d(2)))
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CLN0d(16)=%CLN0d(16)+1,%ROWCOUNT=%CLN0d(16),%ROWID=%CLN0d(2),%CLN0c=10 q
%CLN0f i '$g(%CLN0c) { s SQLCODE=-102 q  } i %CLN0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CLN0d(16))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CLN0d(16),%CLN0c=100 q  } g %0Afirst:%CLN0c=1
%0ACdun i $zu(115,2)=1,$g(%CLN0d(17))=1 { l -@%CLN0d(18) s %CLN0d(17)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CLN0d(16),SQLCODE=100,%CLN0c=100 q
%CLN0c i '$g(%CLN0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CLN0d(16)),1:0)
 i $zu(115,2)=1,$g(%CLN0d(17))=1 { l -@%CLN0d(18) } k %CLN0c,%CLN0d,%CLN0E,%CLN0l,%CLN0n,%CLN0R,%CLN0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CLN0c=100 q
%0Do d %CLN0f q:SQLCODE'=0
 s PLIST(0)=%CLN0d(1),PLIST(1)=%CLN0d(2),PLIST(2)=%CLN0d(3),PLIST(3)=%CLN0d(4),PLIST(4)=%CLN0d(5),PLIST(5)=%CLN0d(6),PLIST(6)=%CLN0d(7),PLIST(7)=%CLN0d(8),PLIST(8)=%CLN0d(9),PLIST(9)=%CLN0d(10),PLIST(10)=%CLN0d(11),PLIST(11)=%CLN0d(12)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTCL(%mmmsqld(3),"LIST",%mmmsqld(4)))
 e  g %0FBdun
 s %mmmsqld(12)=$$%getlock^User.CLCollectionListNumber.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Fc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTCL(%mmmsqld(3),"LIST",%mmmsqld(4)))
 e  g %0FCdun
 d %delete^User.CLCollectionListNumber.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.CLCollectionListNumber.T1(%mmmsqld(1)) g %0Fc
%0FCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.CLCollectionListNumber.T1(%mmmsqld(1)) g:SQLCODE<0 %0Fc
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.CLCollectionListNumber.T1(%mmmsqld(1)) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(17)=0,%mmmsqld(18)=""
 s %mmmsqld(14)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(14)
 s %mmmsqld(16)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(16)'="",PLIST(2)'="",$d(^TTCL(%mmmsqld(16),"LIST",PLIST(2)))
 e  g %0HBdun
 s %mmmsqld(24)=$g(^TTCL(%mmmsqld(16),"LIST",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(24),"\",1) s PLIST(4)=$p(%mmmsqld(24),"\",2) s PLIST(5)=$p(%mmmsqld(24),"\",6) s PLIST(6)=$p(%mmmsqld(24),"\",5) s PLIST(7)=$p(%mmmsqld(24),"\",3) s PLIST(8)=$p(%mmmsqld(24),"\",4) s PLIST(9)=$p(%mmmsqld(24),"\",7) s PLIST(11)=$p(%mmmsqld(24),"\",8)
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(10)=$$CT010^at443($g(PLIST(1)))
 g:$zu(115,2)=0 %0HBuncommitted i $zu(115,2)=1 l +^TTCL($p(PLIST(1),"||",1),"LIST",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(17)=1,%mmmsqld(18)=$name(^TTCL($p(PLIST(1),"||",1),"LIST",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CL_CollectionListNumber for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(16)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(16)'="",PLIST(2)'="",$d(^TTCL(%mmmsqld(16),"LIST",PLIST(2)))
 e  g %0HCdun
 s %mmmsqld(30)=$g(^TTCL(%mmmsqld(16),"LIST",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(30),"\",1) s PLIST(4)=$p(%mmmsqld(30),"\",2) s PLIST(5)=$p(%mmmsqld(30),"\",6) s PLIST(6)=$p(%mmmsqld(30),"\",5) s PLIST(7)=$p(%mmmsqld(30),"\",3) s PLIST(8)=$p(%mmmsqld(30),"\",4) s PLIST(9)=$p(%mmmsqld(30),"\",7) s PLIST(11)=$p(%mmmsqld(30),"\",8)
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(10)=$$CT010^at443($g(PLIST(1)))
%0HBuncommitted ;
 s SQLCODE=0 g %0Hc
%0HCdun i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) s %mmmsqld(17)=0 }
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) } q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Hc
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(par)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTCL(%mmmsqld(4),"LIST",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(13)=$$%getlock^User.CLCollectionListNumber.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTCL(%mmmsqld(4),"LIST",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:11 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CLCollectionListNumber.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.CLCollectionListNumber.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.CLCollectionListNumber.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.CLCollectionListNumber.T1(%mmmsqld(2)) g %0Jc
%0Lo n %i,icol,ir
 f icol=0:1:11 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CLCollectionListNumber.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Lo
]]></Routine>
</Export>
