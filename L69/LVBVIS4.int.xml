<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIS4" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIS4 ; IG 6/5/98 ; File results
 ;
 ; supported calls:
 ;
 ; $$clear^LVBVIS4(vistsRID,user,app,group)
 ; $$save^LVBVIS4(vistsRID,flag,user,check,directory,notes,path,app,GROUP)
 ; $$machsave^LVBVIS4(mi,epis,flag,user,testset,tsgrp,screen)
 ; $$BBsave^LVBVIS4(vtsRID,flag,user,app,GROUP)
 ; $$check^LVBVIS4(epis,ts,data)
 ; $$getnats^LVBVIS4(epis,ts)
 ; $$VBlog^LVBVIS4(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$TScompute^LVBVIS4(Test,vtsRID)
 ; $$ccr^LVBVIS4(vtsRID)
 ; $$snomed^LVBVIS4(vtsRID)
 ; $$tr^LVBVIS4(vtsRID)
 ; $$xm^LVBVIS4(vtsRID)
 ; $$abScreen^LVBVIS4(vtsRID)
 ;
 ; snomed result
snomed(vtsRID) n (vtsRID) s vtsRID=$g(vtsRID) k result
 i '$$getall^LVBVISSN(vtsRID) f j=1:1:PLIST d
 .s x1=$p(PLIST(j),$c(2),3),x2=$p(PLIST(j),$c(2),2),x=$p($p(PLIST(j),$c(2),4),$c(28),2)
 .s icd=$p($p(PLIST(j),$c(2),4),$c(28),3),iub=$p($p(PLIST(j),$c(2),4),$c(28),4)
 .i $l(x1),$l(x2),$l(x) d
 ..s result(x)=$g(result(x)),result(x)=result(x)_$s($l(result(x)):",",1:"")_x2
 ..i $l(icd)!$l(iub) s result(x)=result(x)_"<"
 ..i $l(icd) s result(x)=result(x)_"ICD:"_icd_$s($l(iub):",",1:"")
 ..i $l(iub) s result(x)=result(x)_"IUB:"_iub
 ..i $l(icd)!$l(iub) s result(x)=result(x)_">"
 s x1="( ",x2=" )" i $o(result(""))=$o(result(""),-1) s (x1,x2)=""
 s (x,result)="" f  s x=$o(result(x)) q:x=""  s result=result_$s($l(result):" ",1:"")_x1_result(x)_x2
 q result
xm(vtsRID) n (vtsRID) s vtsRID=$g(vtsRID),epis=$p(vtsRID,"||")
 s mrn=$$seldata^LVBEPVIS(epis,20),date=$$seldata^LVBEPVIS(epis,12),time=$$seldata^LVBEPVIS(epis,13),result=""
 i time s time=time\60
 i $l(mrn) d
 .f  d:$l(date)  s date=$o(^TDEBi(mrn,"DATE",date),-1) q:date=""
 ..f  d:$l(time)  s time=$o(^TDEBi(mrn,"DATE",date,time),-1) q:time=""
 ...s epis="" f  s epis=$o(^TDEBi(mrn,"DATE",date,time,epis)) q:epis=""  d
 ....s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 .....s xm=$$seldata^LVBCTTS(ts,6)
 .....i xm="Y" s tscnt="" f  s tscnt=$o(^TEPI(epis,1,ts,tscnt)) q:tscnt=""  d
 ......s vts=epis_"||"_ts_"||"_tscnt i $$status^LVBVIS1(vts)="A" d
 .......s xDate=$$seldata^LVBVISTS(vts,7) i $l(xDate) d
 ........i '$l(result) s result=xDate
 ........i $l(result),result<xDate s result=xDate
 i $l(result) s result=$$extdate2^SSUTIL4(result)
 q result
tr(vtsRID,future) n (vtsRID,future) s vtsRID=$g(vtsRID),future=$g(future),result="",epis=$p(vtsRID,"||")
 i $$getall^LVBBBTR()
 k tr f j=1:1:PLIST i $p($p(PLIST(j),$c(2),4),$c(28),5)="Y" s tr($p($p(PLIST(j),$c(2),4),$c(28),2))=""
 s mrn=$$seldata^LVBEPVIS(epis,20),date=$$seldata^LVBEPVIS(epis,12),time=$$seldata^LVBEPVIS(epis,13)
 i time s time=time\60
 i future'="Y",$l(mrn),$d(tr) s stop="" d
 .s x2=date+1 f  s x2=$o(^TBBPi("TR-Debtor",mrn,x2),-1) q:x2=""  d  q:stop
 ..s x3="" f  s x3=$o(^TBBPi("TR-Debtor",mrn,x2,x3)) q:x3=""  d  q:stop
 ...i date=x2,time>x3 q
 ...s x4="" f  s x4=$o(^TBBPi("TR-Debtor",mrn,x2,x3,x4)) q:x4=""  d  q:stop
 ....s x5="" f  s x5=$o(^TBBPi("TR-Debtor",mrn,x2,x3,x4,x5)) q:x5=""  d  q:stop
 .....s x6="" f  s x6=$o(^TBBPi("TR-Debtor",mrn,x2,x3,x4,x5,x6)) q:x6=""  d  q:stop
 ......i '$$select^LVBBBPT(x4_"||"_x5_"||"_x6),$d(tr($p(PLIST(3),$c(1)))),PLIST(13)'="Y" s stop=1,result=x2_","_x3
 i future="Y",$l(mrn),$d(tr) s stop="" d
 .s x2=date-1 f  s x2=$o(^TBBPi("TR-Debtor",mrn,x2)) q:x2=""  d  q:stop
 ..s x3="" f  s x3=$o(^TBBPi("TR-Debtor",mrn,x2,x3)) q:x3=""  d  q:stop
 ...i date=x2,time<x3 q
 ...s x4="" f  s x4=$o(^TBBPi("TR-Debtor",mrn,x2,x3,x4)) q:x4=""  d  q:stop
 ....s x5="" f  s x5=$o(^TBBPi("TR-Debtor",mrn,x2,x3,x4,x5)) q:x5=""  d  q:stop
 .....s x6="" f  s x6=$o(^TBBPi("TR-Debtor",mrn,x2,x3,x4,x5,x6)) q:x6=""  d  q:stop
 ......i '$$select^LVBBBPT(x4_"||"_x5_"||"_x6),$d(tr($p(PLIST(3),$c(1)))),PLIST(13)'="Y" s stop=1,result=x2_","_x3
 q result
abScreen(vtsRID) n (vtsRID) s vtsRID=$g(vtsRID),(list,result)=""
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1)
 i $l(%routine) s LineRoutine="ABScreen^"_%routine i $l($t(@LineRoutine)) x "s list=$$ABScreen^"_%routine_"()"
 i $l(list) d
 .s epis=$p(vtsRID,"||")
 .s mrn=$$seldata^LVBEPVIS(epis,20),date=$$seldata^LVBEPVIS(epis,12),time=$$seldata^LVBEPVIS(epis,13)
 .i time s time=time\60
 .i $l(mrn) d
 ..f  d:$l(date)  q:$l(result)  s date=$o(^TDEBi(mrn,"DATE",date),-1) q:date=""
 ...f  d:$l(time)  q:$l(result)  s time=$o(^TDEBi(mrn,"DATE",date,time),-1) q:time=""
 ....s epis="" f  s epis=$o(^TDEBi(mrn,"DATE",date,time,epis)) q:epis=""  d  q:$l(result)
 .....s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d  q:$l(result)
 ......s tscnt="" f  s tscnt=$o(^TEPI(epis,1,ts,tscnt)) q:tscnt=""  i $$status^LVBVIS1(epis_"||"_ts_"||"_tscnt)="A" d  q:$l(result)
 .......f j=1:1:$l(list,",") s ti=$p(list,",",j) i $d(^TEPI(epis,1,ts,tscnt,"DATA",ti)) s result=date q
 i $l(result) s result=$$extdate2^SSUTIL4(result)
 q result
 ; ccr result
ccr(vtsRID) n (vtsRID) s vtsRID=$g(vtsRID),result=""
 i '$$getall^LVBVISTC(vtsRID) d
 .f j=1:1:PLIST s x1=$p(PLIST(j),$c(2),3),x2=$p(PLIST(j),$c(2),2) i $l(x1),$l(x2) s result=result_x1_x2
 q result
 ; get not authorised test set for visit
getnats(epis,ts) n (epis,ts) s epis=$g(epis),ts=$g(ts),result=""
 i $l(epis),$l(ts) f  s result=$o(^TEPI(epis,1,ts,result)) q:result=""  i $$status^LVBVIS1(epis_"||"_ts_"||"_result)'="A" q
 q result
 ; clear data for single visist testset
clear(vistsRID,user,app,group) n (vistsRID,user,app,group) s vistsRID=$g(vistsRID),user=$g(user),app=$g(app),group=$g(group)
 s l=$i(^TMPlog("log"))
 s ^TMPlog("log",l)=$h_" : "_$j_" : $$clear^"_$zn_" : "_$g(vistsRID)_"^"_$g(user)_"^"_$g(app)_"^"_$g(group)
 f j=1:1:3 s @("x"_j)=$p(vistsRID,"||",j)
 i $l(x1),$l(x2),$l(x3) d
 .n (x1,x2,x3,oldData,user)
 .m oldData=^TEPI(x1,1,x2,x3)
 .s oldData="" k oldData("History")
 .i '$$select^LVBVISTS(x1_"||"_x2_"||"_x3,"Y") f j=1:1:PLIST s $p(oldData,$c(2),j)=PLIST(j)
 .n PLIST
 .s PLIST(3)=+$h
 .s PLIST(4)=$p($h,",",2)
 .s PLIST(5)=user
 .s PLIST(6)="YC "_oldData
 .s PLIST=$o(PLIST(""),-1)
 .i $$insert^LVBVISTH(x1_"||"_x2_"||"_x3,.oldData)
 i $$delall^LVBVISTD(vistsRID,app,group)
 i $$delall^LVBVISTC(vistsRID,app,group)
 i $$delall^LVBVISTQ(vistsRID,app,group)
 i $$delall^LVBVISSN(vistsRID,,app,group)
 i $$delall^LVBVISVV(vistsRID)
 k PLIST i $$BBsave(vistsRID,"C",user,app,group)
 i '$$select^LVBVISTS(vistsRID,"Y") d
 .k plist f j=1:1:PLIST s plist(j)=""
 .f j=1:1:3,10,12,13,17,18,24:1:26,29,32,34,38,40:1:44,46:1:67,74 i $d(PLIST(j)) s plist(j)=PLIST(j)
 .k PLIST m PLIST=plist s PLIST=$o(PLIST(""),-1) i $$update^LVBVISTS(vistsRID)
 ; --- Temporary clear Word reports which is same as already existing one ---
 s x=$g(^TMPlog("histo",2,vistsRID)) i $l(x) k ^TMPlog("histo",2,vistsRID),^TMPlog("histo",1,x,vistsRID)
 ; --------------------------------------------------------------------------
 s epis=$p(vistsRID,"||",1),ts=$p(vistsRID,"||",2),tscnt=$p(vistsRID,"||",3)
 k %d m %d=^TEPI(epis,1,ts,tscnt,"DATA")
 d SetAll^LVBCOM50(epis,47_"S",.%d,vistsRID)
 q 0
 ; check mandatory fields and ranges
check(epis,ts,data) n (epis,ts,data,Alternate) s epis=$g(epis),ts=$g(ts),ok=0
 s TShidden=$$seldata^LVBCTTS(ts,50)
 s Age=$$seldata^LVBEPVIS(epis,26)
 i $$getit^LVBCTTSF(,epis_"||"_ts,,"Y")
 k ^TMP($zn,$j,"check") m ^TMP($zn,$j,"check")=PLIST
 f j=1:1:^TMP($zn,$j,"check") s tc=$p(^TMP($zn,$j,"check",j),$c(2),10),entrtype=$p(^TMP($zn,$j,"check",j),$c(2),8) i $l(tc) d  q:ok
 .s (mi,result)="" i $d(data(tc)) s result=$p(data(tc),"\",1),xFlag=$p(data(tc),"\",3),mi=$p(data(tc),"\",4)
 . ; alternate result
 .i $l($g(Alternate)),Alternate=result q
 . ; check if numeric field has valid result
 .s xxFormat=$$seldata^LVBCTTC(tc,5)
 .i $l(xxFormat) d
 ..i $l(mi)," A B1 S "[(" "_xxFormat_" ") d  i ok q
 ... ; standard comment
 ...i '$$select^LVBCTTCT(tc_"||"_result,"Y") d  q
 ....i $p(PLIST(5),$c(1),1)="A" s ^TMP("SAVE",$j,"Fail",tc,"RA")=result,ok=1
 ....i $p(PLIST(5),$c(1),1)="B" s ^TMP("SAVE",$j,"Fail",tc,"RA")=result,ok=1
 ..i xxFormat["N" d  i ok q
 ... ; standard comment
 ...i '$$select^LVBCTTCT(tc_"||"_result,"Y") q
 ... ; numeric comment
 ...i '$$select^LVBCTRC(result,"Y") q
 ... ; numeric result
 ...s res=$$res^LVBVIS1(result) d
 ....i $l(res),"<>"[$e(res) s res=$e(res,2,$l(res))
 ....i $l(res),"+-"[$e(res) s res=$e(res,2,$l(res))
 ....i $l(res),"."=$e(res) s res=0_res
 ....i $l(res),res'?1.N.1".".N s ^TMP("SAVE",$j,"Fail",tc,"NUM")=res,ok=1
 . ; check mandatory field
 .i entrtype="M",'$d(data(tc)) s (^TMP("SAVE",$j,"REQ"),^TMP("SAVE",$j,"Fail",tc,"REQ"))="",ok=1 q
 . ; check only pathologist and unacceptable ranges
 .i '$l(mi) d
 ..i $l(result) s res=result,err=$$validres^LVBVIS1(epis,tc,res,,278) d  q
 ...i $l(err) f jj=2 i $p(err,$c(1),jj)'="N" s ok=1,^TMP("SAVE",$j,"Fail",tc,"RP")=res
 ...i $l(err) f jj=7 i $p(err,$c(1),jj)'="N" s ok=1,^TMP("SAVE",$j,"Fail",tc,"RU")=res
 ...i $l(err) f jj=8 i $p(err,$c(1),jj)'="N" s ok=1,^TMP("SAVE",$j,"Fail",tc,"IN")=res
 .i $l(mi) d
 ..i $l(result) s res=result,err=$$validres^LVBVIS1(epis,tc,res,,4678,mi) d  q
 ...i $l(err) d
 ....f jj=6 i $p(err,$c(1),jj)'="N" s ok=1,^TMP("SAVE",$j,"Fail",tc,"RA")=res
 ....f jj=7 i $p(err,$c(1),jj)'="N" s ok=1,^TMP("SAVE",$j,"Fail",tc,"RU")=res
 ....f jj=4 i $p(err,$c(1),jj)'="N" s ok=1,^TMP("SAVE",$j,"Fail",tc,"D")=res
 ....f jj=8 i $p(err,$c(1),jj)'="N" s ok=1,^TMP("SAVE",$j,"Fail",tc,"IN")=res
 ...i $l(xFlag) s ok=1
 k ^TMP($zn,$j,"check")
 q ok
 ; check comments
checkcom(tc,data,comm,LD) n (tc,data,comm,LD) s tc=$g(tc),data=$g(data),comm=$g(comm),LD=$g(LD),ok=0 s:'$l(LD) LD="|"
 s format=$$seldata^LVBCTTC(tc,5)
 i $l(data) s data="{"_data_"}"
 f result=data,comm d  q:ok
 .f jxx=1:1:$l(result,LD) d  q:ok
 .. ; standard comments
 ..s line=$p(result,LD,jxx) f  q:line'["{"  q:line'["}"  d  q:ok
 ...s line=$p(line,"{",2,$l(line,"{")),code=$p(line,"}",1),line=$p(line,"}",2,$l(line,"}"))
 ...i $$select^LVBCTTCT(tc_"||"_code,"Y") d  q
 ....i format="S" s ok=1,^TMP("SAVE",$j,"Fail",tc,"COM-1")=code
 ...i $p(PLIST(5),$c(1))="B" s ok=1,^TMP("SAVE",$j,"Fail",tc,"COM-2")=code
 ...i $p(PLIST(5),$c(1))="A" s ok=1,^TMP("SAVE",$j,"Fail",tc,"COM-3")=code
 .. ; auto comments
 ..s line=$p(result,LD,jxx) f  q:line'["["  q:line'["]"  d  q:ok
 ...s line=$p(line,"[",2,$l(line,"[")),code=$p(line,"]",1),line=$p(line,"]",2,$l(line,"]"))
 ...i $$select^LVBCTTCT(tc_"||"_code,"Y") d  q
 ....i format="S" s ok=1,^TMP("SAVE",$j,"Fail",tc,"COM-1")=code
 ...i $p(PLIST(5),$c(1))="B" s ok=1,^TMP("SAVE",$j,"Fail",tc,"COM-2")=code
 ...i $p(PLIST(5),$c(1))="A" s ok=1,^TMP("SAVE",$j,"Fail",tc,"COM-3")=code
 q ok
VBlog(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,PLIST)
 s l=$i(^TMPlog("log")) m ^TMPlog("log",l)=PLIST
 s ^TMPlog("log",l)=$h_" : "_$j_" : $$VBlog^"_$zn_" : "_$g(p0)_"^"_$g(p1)_"^"_$g(p2)_"^"_$g(p3)_"^"_$g(p4)_"^"_$g(p5)_"^"_$g(p6)_"^"_$g(p7)_"^"_$g(p8)_"^"_$g(p9)
 q 0
bb1(x1) n (x1,NewStatus) s x1=$g(x1),NewStatus=$$seldata^LVBBBST(x1,4)
 q
bb2(x2) n (x2,autologous,loc,stat) s x2=$g(x2)
 s autologous=$$seldata^LVBBBP(x2,24),loc=$$seldata^LVBBBP(x2,11),stat=$$seldata^LVBBBP(x2,18)
 q
 ; flag - E-Update
 ;        D-DeAuthorize
 ;        A-Authorize
 ;        C-Clear
BBsave(vtsRID,flag,user,app,GROUP) n (vtsRID,flag,user,app,GROUP,PLIST)
 k ^TMP($zn,$j),^TMP("BBprint",vtsRID,$j) m ^TMP($zn,$j)=PLIST
 s vtsRID=$g(vtsRID),flag=$g(flag),user=$g(user),app=$g(app),GROUP=$g(GROUP)
 s epis=$p(vtsRID,"||",1),ts=$p(vtsRID,"||",2),tscnt=$p(vtsRID,"||",3),ok=0
 s l=$i(^TMPlog("log")) m ^TMPlog("log",l)=PLIST
 s ^TMPlog("log",l)=$h_" : "_$j_" : $$BBsave^"_$zn_" : "_$g(vtsRID)_"^"_$g(flag)_"^"_$g(user)_"^"_$g(app)_"^"_$g(GROUP)
 s mrn=$$mrn^LVBEPVIS(epis)
 i $$status^LVBVIS1(vtsRID)="A",flag="E" s flag="A"
 i $$LOCK^SSLOCK("Patient",epis,,,,1)
 s (xx1,xx2,xx3)="" i '$$select^MVBCFLAB(1) d
 .f j=1:1:PLIST s PLIST(j)=$p($g(PLIST(j)),$c(1))
 .i flag="E" s xx1=PLIST(28),xx2=PLIST(79),xx3=PLIST(25)
 .i flag="D" s xx1=PLIST(76),xx2=PLIST(77),xx3=PLIST(78)
 .i flag="C" s xx1=PLIST(80),xx2=PLIST(81),xx3=PLIST(82)
 .s cl1=PLIST(80),cl2=PLIST(81),cl3=PLIST(82)
 ; update existing units
 s x="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  d
 .s x1=$p(^(x),"\",1) i '$$select^LVBVISTE(x1,"Y") d
 ..f j=2:1:$l(^TMP($zn,$j,x),"\") s PLIST(j)=$p(^TMP($zn,$j,x),"\",j)
 ..s PLIST(13)=x
 ..i '$$update^LVBVISTE(x1,app,GROUP) d
 ...k VISTE m VISTE=PLIST
 ...d bb1(VISTE(7))
 ...s mrn0=$s(NewStatus="OUT":mrn,NewStatus="IN-0":mrn,1:$$mrn^at500(VISTE(2)_"||"_VISTE(3)))
 ...s vts0=$s(NewStatus="OUT":vtsRID,NewStatus="IN-0":vtsRID,1:$$vts^at500(VISTE(2)_"||"_VISTE(3)))
 ...s rowid=VISTE(2)_"||"_VISTE(3) d bb2(rowid)
 ...i stat="OUT" q
 ...k PLIST s PLIST(3)=$s($l(xx1):xx1,1:VISTE(5))
 ...s PLIST(4)=$p($h,",",1)
 ...s PLIST(5)=$p($h,",",2)
 ...s PLIST(6)=user
 ...s PLIST(7)=""
 ...s PLIST(8)=$s(autologous="Y":mrn,1:mrn0)
 ...s PLIST(9)=$s(autologous="Y":vtsRID,1:vts0)
 ...i autologous="Y" s PLIST(10)=$s($l(xx3):xx3,1:VISTE(7))
 ...i autologous'="Y" s PLIST(10)=$s($l(xx2):xx2,1:VISTE(7))
 ...s PLIST(11)=$s($l(VISTE(11)):VISTE(11),1:loc)
 ...s PLIST(12)=VISTE(4)
 ...s PLIST(14)=vtsRID
 ...s PLIST(15)=$$mrn^LVBEPVIS($p(vtsRID,"||"))
 ...s PLIST=$o(PLIST(""),-1) i $$insert^LVBBBPT(rowid)
 ; insert new units
 s x="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  d
 .s x1=$p(^(x),"\",1) i $$select^LVBVISTE(x1,"Y") d
 ..f j=2:1:$l(^TMP($zn,$j,x),"\") s PLIST(j)=$p(^TMP($zn,$j,x),"\",j)
 ..s PLIST(13)=x
 ..i '$$insert^LVBVISTE(vtsRID) d
 ...k VISTE m VISTE=PLIST
 ...d bb1(VISTE(7))
 ...s mrn0=$s(NewStatus="OUT":mrn,NewStatus="IN-0":mrn,1:$$mrn^at500(VISTE(2)_"||"_VISTE(3)))
 ...s vts0=$s(NewStatus="OUT":vtsRID,NewStatus="IN-0":vtsRID,1:$$vts^at500(VISTE(2)_"||"_VISTE(3)))
 ...s rowid=VISTE(2)_"||"_VISTE(3) d bb2(rowid)
 ...k PLIST s PLIST(3)=$s($l(xx1):xx1,1:VISTE(5))
 ...s PLIST(4)=$p($h,",",1)
 ...s PLIST(5)=$p($h,",",2)
 ...s PLIST(6)=user
 ...s PLIST(7)=""
 ...s PLIST(8)=$s(autologous="Y":mrn,1:mrn0)
 ...s PLIST(9)=$s(autologous="Y":vtsRID,1:vts0)
 ...i autologous="Y" s PLIST(10)=$s($l(xx3):xx3,1:VISTE(7))
 ...i autologous'="Y" s PLIST(10)=$s($l(xx2):xx2,1:VISTE(7))
 ...s PLIST(11)=$s($l(VISTE(11)):VISTE(11),1:loc)
 ...s PLIST(12)=VISTE(4)
 ...s PLIST(14)=vtsRID
 ...s PLIST(15)=$$mrn^LVBEPVIS($p(vtsRID,"||"))
 ...s PLIST=$o(PLIST(""),-1) i $$insert^LVBBBPT(rowid)
 ; delete old units
 i $$open^LVBVISTE(vtsRID)
 f  q:$$fetch^LVBVISTE(vtsRID)  d
 .s (ok,x)="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  i $p(^(x),"\",1)=PLIST(1) s ok=1 q
 .i 'ok,'$$delete^LVBVISTE(PLIST(1),app,GROUP) d
 ..k VISTE m VISTE=PLIST
 ..s mrn0=$$mrn^at500(VISTE(2)_"||"_VISTE(3))
 ..s vts0=$$vts^at500(VISTE(2)_"||"_VISTE(3))
 ..s rowid=VISTE(2)_"||"_VISTE(3) d bb2(rowid)
 ..i stat="OUT" q
 ..k PLIST s PLIST(3)=cl1
 ..s PLIST(4)=$p($h,",",1)
 ..s PLIST(5)=$p($h,",",2)
 ..s PLIST(6)=user
 ..s PLIST(7)=""
 ..s PLIST(8)=$s(autologous="Y":mrn,1:mrn0)
 ..s PLIST(9)=$s($l(vts0):vts0,1:"")
 ..s PLIST(10)=$s(autologous="Y":cl3,1:cl2)
 ..s PLIST(11)=$s($l(VISTE(11)):VISTE(11),1:loc)
 ..s PLIST(12)=""
 ..s PLIST(14)=vtsRID
 ..s PLIST(15)=$$mrn^LVBEPVIS($p(vtsRID,"||"))
 ..s PLIST=$o(PLIST(""),-1) i $$insert^LVBBBPT(rowid)
 i $$close^LVBVISTE()
 ; print BB labels
 s BBL="" i (flag="A")!(flag="E") s x="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  s XXX=^(x) d
 .s tr=$p(XXX,"\",5),print=$$seldata^LVBBBTR(tr,4)
 .i print="",$p(XXX,"\",10)="Y" s BBL=BBL_$s($l(BBL):",",1:"")_$p(XXX,"\",2)_"||"_$p(XXX,"\",3) q
 .i print="U",flag="E" s BBL=BBL_$s($l(BBL):",",1:"")_$p(XXX,"\",2)_"||"_$p(XXX,"\",3) q
 .i print="A",flag="A" s BBL=BBL_$s($l(BBL):",",1:"")_$p(XXX,"\",2)_"||"_$p(XXX,"\",3) q
 i $l(BBL) d
 .s PARAM=vtsRID_"\"_BBL_"\"_user
 .s a=$o(^TMP("BBprint",vtsRID,$j,""),-1)+1,^TMP("BBprint",vtsRID,$j,a)=user_$c(1,1)_PARAM_$c(1)_"BBL"
 s (ok,x)="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  i $p(^(x),"\",12)="Y" s ok=1 q
 i flag="A" d  i ok s a=$o(^TMP("BBprint",vtsRID,$j,""),-1)+1,^TMP("BBprint",vtsRID,$j,a)=user_$c(1,1)_vtsRID_"\\"_user_"\"_app_$c(1)_"BBXMR"
 .i $$getall^LVBCTTSO(ts)
 .s ok1=0 f j=1:1:PLIST i $p($p(PLIST(j),$c(2),4),$c(28),8)=13 s ok1=1 q
 .s ok=$s('ok1:1,ok:1,1:"")
 i flag="E",ok s a=$o(^TMP("BBprint",vtsRID,$j,""),-1)+1,^TMP("BBprint",vtsRID,$j,a)=user_$c(1,1)_vtsRID_"\U\"_user_"\"_app_$c(1)_"BBXMR"
 i $$LOCKCLR^SSLOCK("Patient",epis)
 s epis=$p(vtsRID,"||",1),ts=$p(vtsRID,"||",2),tscnt=$p(vtsRID,"||",3)
 k %d m %d=^TEPI(epis,1,ts,tscnt,"BBP")
 d SetAll^LVBCOM50(epis,507_"SU",.%d,vtsRID)
 q 0
 ; PLIST IN - 1.TestItem RowID
 ;            2.TestItem
 ;            3.Result
 ;            4.Comments
 ;            5.Result status
 ;            6.Suppress Report
 ;            9.Machine ID
 ;           13.Repeat
 ;           14.PreviousResult
 ; PLIST OUT - with results in VISTD format
 ; flag - E-Update
 ;        P-Pathologist attention
 ;        A-Authorize/Verify_$c(2)_Verif.Queue_$c(2)_Full Authorize
save(vistsRID,flag,user,check,directory,notes,path,app,GROUP) n (vistsRID,flag,user,check,directory,notes,path,app,GROUP,PLIST)
 s vistsRID=$g(vistsRID),flag=$g(flag),user=$g(user),check=$g(check),directory=$g(directory),notes=$g(notes),path=$g(path),app=$g(app),GROUP=$g(GROUP)
 s epis=$p(vistsRID,"||",1),ts=$p(vistsRID,"||",2),tscnt=$p(vistsRID,"||",3),ok=0
 s l=$i(^TMPlog("log")) m ^TMPlog("log",l)=PLIST
 s ^TMPlog("log",l)=$h_" : "_$j_" : $$save^"_$zn_" : "_vistsRID_"^"_flag_"^"_user_"^"_check_"^"_directory_"^"_path_"^"_app_"^"_GROUP
 s x="" f  s x=$o(PLIST(x)) q:x=""  i $p(PLIST(x),"\")="T" s PLIST(x)=$tr(PLIST(x),$c(7))
 k ^TMP($zn,$j),^TMP("SAVE",$j) m ^TMP($zn,$j)=PLIST s LD="|"
 ; check if T/S is a Word T/S
 s word="N"
 i word="N",$$seldata^LVBCTTS(ts,31)="Y" s word="Y"
 i word="N",$$seldata^LVBCTTS(ts,54)="Y" s word="Y"
 ; --- Temporary clear Word reports which is same as already existing one ---
 i word="Y",check'="N" s xf="" d  i $l(xf) s ^TMPlog("histo",3,vistsRID,xf)=$h q 199
 .s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  d
 ..s tc=$p(^(cnt),"\"),comm=$p(^(cnt),"\",2,$l(^(cnt),"\"))
 ..i tc="T",$l(comm) d
 ...s x="" f j=1:1:$s($l(comm,LD)>10:10,1:$l(comm,LD)) s x=$s($l(x):x_"\",1:"")_$p(comm,LD,j)
 ...i $l(x) s x=$e(x,1,200) i $d(^TMPlog("histo",1,x)),'$d(^TMPlog("histo",1,x,vistsRID)) d
 ....s x1="" f  s x1=$o(^TMPlog("histo",1,x,x1)) q:x1=""  d  i $l(xf) q
 .....s xx1=$p(x1,"||",1),xx2=$p(x1,"||",2),xx3=$p(x1,"||",3),xf=x1
 .....f j=1:1:$l(comm,LD) i $p(comm,LD,j)'=$g(^TEPI(xx1,1,xx2,xx3,"DATA","T","REM",j)) s xf="" q
 ; --------------------------------------------------------------------------
 s FA=$p(flag,$c(2),3),Queue=$p(flag,$c(2),2),flag=$p(flag,$c(2))
 i $$LOCK^SSLOCK("Patient",epis,,,,1)
 l +^DBLock("Printing",epis)
 ; get pending type
 s Alternate=$p($$seldata^MVBCFLAB(1,69),"-"),pending=$$seldata^MVBCFLAB(1,40)
 ; get user type
 i '$$gettype^MVBSSUSR(user) s usertype=PLIST(1)
 ; check mandatory results and ranges
 k PLIST s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  d
 .s tc=$p($p(^TMP($zn,$j,cnt),"\",2),$c(1)),res=$p(^TMP($zn,$j,cnt),"\",3),comm=$p(^TMP($zn,$j,cnt),"\",4)
 .i $l(tc),$l(res)!$l(comm) s PLIST(tc)=res_"\"_comm
 s PLIST=$o(PLIST(""),-1)
 s epis=$p(vistsRID,"||",1) i $$check(epis,ts,.PLIST)
 ; check standard comments
 k PLIST s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  d
 .s tc=$p($p(^TMP($zn,$j,cnt),"\",2),$c(1)),res=$p(^TMP($zn,$j,cnt),"\",3),comm=$p(^TMP($zn,$j,cnt),"\",4)
 .i $l(tc),$l(res)!$l(comm) i $$checkcom(tc,res,comm,LD) k ^TMP("SAVE",$j,"Fail",tc,"COM-3")
 ; delete Pathologist attention message if user pathologist
 i usertype="P" d
 .s tc="" f  s tc=$o(^TMP("SAVE",$j,"Fail",tc)) q:tc=""  d
 ..k ^TMP("SAVE",$j,"Fail",tc,"RP")
 ..k ^TMP("SAVE",$j,"Fail",tc,"COM-2")
 ; skip save if result is invalid/unacceptable
 s (ok,tc)="" f  s tc=$o(^TMP("SAVE",$j,"Fail",tc)) q:tc=""  d  q:ok
 .f j="NUM","IN","RU" i $d(^TMP("SAVE",$j,"Fail",tc,j)) s ok=1 q
 i ok g saveEnd
 ; update results
 k update
 ; check CCR field
 i $$getall1^LVBCTTC(ts)
 s cnt1="" f  s cnt1=$o(PLIST(cnt1)) q:cnt1=""  s tc=$p(PLIST(cnt1),$c(2),1) i $l(tc) d
 .i $p($p(PLIST(cnt1),$c(2),4),$c(28),5)'="Z5" q
 .s cnt2="" f  s cnt2=$o(^TMP($zn,$j,cnt2)) q:cnt2=""  i $p($p(^(cnt2),"\",2),$c(1))=tc q
 .i 'cnt2 s cnt2=$o(^TMP($zn,$j,""),-1)+1
 .s ^TMP($zn,$j,cnt2)="\"_tc_"\"_$$ccr(vistsRID)_"\"
 s change="" f j=1:1:3 s @("x"_j)=$p(vistsRID,"||",j)
 i $l(x1),$l(x2),$l(x3) d
 .n (x1,x2,x3,oldData)
 .m oldData=^TEPI(x1,1,x2,x3)
 .s oldData="" k oldData("History")
 .i '$$select^LVBVISTS(x1_"||"_x2_"||"_x3,"Y") f j=1:1:PLIST s $p(oldData,$c(2),j)=PLIST(j)
 ; update normal test sets
 i word'="Y" s ok=0 d
 .s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  d  q:ok
 ..s tc=$p($p(^(cnt),"\",2),$c(1)) q:tc=""
 .. ; check if result already exists
 ..s new=$$select^LVBVISTD(vistsRID_"||"_tc)
 .. ; update existing result
 ..k update(tc) i 'new d
 ...s xNew=0 f j=3:1:6,9,11,13,14 i $g(PLIST(j))'=$p(^TMP($zn,$j,cnt),"\",j) s PLIST(j)=$p(^TMP($zn,$j,cnt),"\",j),xNew=1
 ... ; update new result if result or comment exist
 ...i ($l(PLIST(3))!$l(PLIST(4))) s update(tc)="" i xNew s ok=$$update^LVBVISTD(vistsRID_"||"_tc,app,GROUP) i change'["Y1" s change=change_$s($l(change):",",1:"")_"Y1"
 ... ; delete result if result and comment are empty
 ...i '$l(PLIST(3)),'$l(PLIST(4)),'$$delete^LVBVISTD(vistsRID_"||"_tc,app,GROUP) k update(tc) i change'["Y2" s change=change_$s($l(change):",",1:"")_"Y2"
 .. ; insert new result
 ..i new d
 ...k PLIST s PLIST(2)=tc f j=3:1:6,9,11,13,14 s PLIST(j)=$p(^TMP($zn,$j,cnt),"\",j)
 ... ; insert new result if result exist
 ...i $l(PLIST(3))!$l(PLIST(4)) s update(tc)="",ok=$$insert^LVBVISTD(vistsRID) i change'["Y3" s change=change_$s($l(change):",",1:"")_"Y3"
 ; update Word test sets
 i word="Y" s ok=0 d
 .s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  d
 ..s tc=$p(^(cnt),"\"),result=$p(^(cnt),"\",2,$l(^(cnt),"\"))
 ..i tc="T2" d
 ... ; check if result already exists
 ...s new=$$select^LVBVISTD(vistsRID_"||"_tc)
 ... ; update existing result
 ...k update(tc) i 'new d
 ....s PLIST(3)=result f j=4:1:6,9,11,13,14 s PLIST(j)=""
 .... ; update new result if result or comment exist
 ....i $l(PLIST(3)) s update(tc)="",ok=$$update^LVBVISTD(vistsRID_"||"_tc,app,GROUP) i change'["Y4" s change=change_$s($l(change):",",1:"")_"Y4"
 .... ; delete result if result and comment are empty
 ....i '$l(PLIST(3)),'$$delete^LVBVISTD(vistsRID_"||"_tc,app,GROUP) k update(tc) i change'["Y5" s change=change_$s($l(change):",",1:"")_"Y5"
 ... ; insert new result
 ...i new d
 ....k PLIST s PLIST(2)=tc,PLIST(3)=result f j=4:1:6,9,11,13,14 s PLIST(j)=""
 .... ; insert new result if result exist
 ....i $l(PLIST(3)) s update(tc)="",ok=$$insert^LVBVISTD(vistsRID) i change'["Y6" s change=change_$s($l(change):",",1:"")_"Y6"
 ..i tc="T" d
 ... ; delete empty lines
 ...f j=$l(result,LD):-1:1 q:$l($tr($p(result,LD,j)," "))  s result=$p(result,LD,1,j-1)
 ... ; retreive old result
 ...s resultOLD="" f j=1:1 q:'$d(^TEPI(epis,1,ts,tscnt,"DATA",tc,"REM",j))  s resultOLD=resultOLD_$s($l(resultOLD):LD,1:"")_^(j)
 ...i result=resultOLD q
 ... ; delete old result
 ...k ^TEPI(epis,1,ts,tscnt,"DATA",tc)
 ... ; insert changes
 ...d
 ....k PLIST
 ....i $l(resultOLD),'$l(result) d
 .....s PLIST(3)=+$h,PLIST(4)=$p($h,",",2),PLIST(5)=user
 .....s xx=$$fieldName^SSUTIL4(47,4) i $l($p(xx,$c(1),2)) s PLIST(6)=$p(xx,$c(1),3)
 .....s PLIST(7)=resultOLD,PLIST(8)="...Deleted...",PLIST(9)=GROUP,PLIST(10)=app
 ....i $l(resultOLD),$l(result) d
 .....k PLIST
 .....s PLIST(3)=+$h,PLIST(4)=$p($h,",",2),PLIST(5)=user
 .....s xx=$$fieldName^SSUTIL4(47,4) i $l($p(xx,$c(1),2)) s PLIST(6)=$p(xx,$c(1),3)
 .....s PLIST(7)=resultOLD,PLIST(8)=result,PLIST(9)=GROUP,PLIST(10)=app
 ....s PLIST=$o(PLIST(""),-1)
 ....i PLIST,$$insert^LVBVISHS(epis)
 ... ; insert new result
 ...i $l(result) s update(tc)="" d
 ....k PLIST s PLIST(2)=tc,(PLIST(3),PLIST(4))=""
 ....i '$$insert^LVBVISTD(vistsRID) s:change'["Y7" change=change_$s($l(change):",",1:"")_"Y7" d
 .....f j=1:1:$l(result,LD) s ^TEPI(epis,1,ts,tscnt,"DATA",tc,"REM",j)=$p(result,LD,j)
 .....s ^TEPI(epis,1,ts,tscnt,"DATA",tc,"REM",0)=$l(result,LD)
 .... ; --- Temporary save first 10 lines of Word reports ---
 ....i tc="T",check'="N" d
 .....s x="" f line=1:1:10 q:'$d(^TEPI(epis,1,ts,tscnt,"DATA","T","REM",line))  d
 ......s x=$s($l(x):x_"\",1:"")_^TEPI(epis,1,ts,tscnt,"DATA","T","REM",line)
 .....i $l(x) s x=$e(x,1,200) d
 ......s ^TMPlog("histo",1,x,epis_"||"_ts_"||"_tscnt)=""
 ......s ^TMPlog("histo",2,epis_"||"_ts_"||"_tscnt)=x
 s epis=$p(vistsRID,"||",1),ts=$p(vistsRID,"||",2),tscnt=$p(vistsRID,"||",3)
 k %d m %d=^TEPI(epis,1,ts,tscnt,"DATA")
 d SetAll^LVBCOM50(epis,47_"S",.%d,vistsRID)
 i change["Y" d
 .n PLIST
 .s PLIST(3)=+$h
 .s PLIST(4)=$p($h,",",2)
 .s PLIST(5)=user
 .s PLIST(6)=change_" "_oldData
 .s PLIST=$o(PLIST(""),-1)
 .i $$insert^LVBVISTH(vistsRID,.oldData)
 ; update vists record
 i 'ok d
 . ; requied field missing
 .i $d(^TMP("SAVE",$j,"REQ")) s flag="E" i pending="Y" f j=4,5,6 s PLIST(j)=""
 . ; find correct flag if unacceptable result is entered
 .i flag="A" d
 .. ; pathologist attention requires because of check
 ..s tc="" f  s tc=$o(^TMP("SAVE",$j,"Fail",tc)) q:tc=""  i $d(^TMP("SAVE",$j,"Fail",tc,"RP")) s flag="P",^TMP("SAVE",$j,"Pathologist",vistsRID)="" q
 . ; find correct flag if user is not pathologist and authorisation is requested
 .i usertype'="P",flag="A" d
 .. ; pathologist attention requires because of check
 ..i $d(^TMP("SAVE",$j,"Fail")) s flag="P",^TMP("SAVE",$j,"Pathologist",vistsRID)="" q
 .. ; pathologist attention requires because test set forced for pathology attention
 ..i $$seldata^LVBCTTS(ts,32)="Y" s flag="P",^TMP("SAVE",$j,"Pathologist",vistsRID)="" q
 .i $$select^LVBVISTS(vistsRID,"Y") q
 . ; pathologist attention requires because test set sent to a pathologist
 .i usertype'="P",flag="A",PLIST(33)="P" s flag="P"
 . ; word test set entered
 .i word="Y" s PLIST(66)=directory i $l(path) s PLIST(10)=path i flag="E" s flag="P"
 . ; check flag
 .i PLIST(33)="A" s flag="A"
 .e  i PLIST(33)="P",flag'="A" s flag="P"
 .e  i PLIST(33)="H",flag="A" s flag="E"
 .i pending="Y",$d(^TMP("SAVE",$j,"REQ")) f j=4,5,6 s PLIST(j)=""
 .e  i '$l(PLIST(4)),$d(update) s PLIST(4)=+$h,PLIST(5)=$p($h,",",2),PLIST(6)=user
 .e  i $l(PLIST(4)),$d(update)
 .e  i flag="E" f j=4,5,6 s PLIST(j)=""
 .e  i '$l(PLIST(4))!'$l(PLIST(5))!'$l(PLIST(6)) s PLIST(4)=+$h,PLIST(5)=$p($h,",",2),PLIST(6)=user
 .i (flag="A")!(flag="P") d
 ..s stop=0 d
 ...n PLIST
 ... ; close last Queue
 ...s xxQueueCnt=$o(^TEPI(epis,1,ts,tscnt,"QUEUE","VQ",""),-1)
 ...i (flag="A"),xxQueueCnt d
 ....k PLIST i $$select^LVBVISTQ(vistsRID_"||VQ||"_xxQueueCnt)
 ....s PLIST(7)=+$h,PLIST(8)=$p($h,",",2),PLIST(9)=user
 ....i $$update^LVBVISTQ(vistsRID_"||VQ||"_xxQueueCnt)
 ... ; exclude VQ/RQ already on a Test
 ...k vq i $l(vistsRID),'$$getall^LVBVISTQ(vistsRID) f j=1:1:PLIST s vq=$p($p(PLIST(j),$c(2),4),$c(28),10) i $l(vq) s vq(vq)=""
 ...i FA="Y" q
 ...s QueueRO=""
 ...i $l(Queue) s error=$$VQ^LVBCOM13(vistsRID,Queue),QueueRO=$p(error,$c(1),2) i 'error,QueueRO'="Y" s stop=1 
 ...i '$l(Queue)!(QueueRO="Y") d
 ....s queue=$$seldata^LVBCTTS(ts,53),Queue=$p($p(queue,$c(1)),",",xxQueueCnt+1)
 ....i $l(Queue) s error=$$VQ^LVBCOM13(vistsRID,Queue),QueueRO=$p(error,$c(1),2) i 'error,QueueRO'="Y" s stop=1 
 ..i '$l(PLIST(4))!'$l(PLIST(5))!'$l(PLIST(6)) s PLIST(4)=+$h,PLIST(5)=$p($h,",",2),PLIST(6)=user
 ..i 'stop d
 ...i '$l(PLIST(7)) s PLIST(7)=+$h,PLIST(8)=$p($h,",",2),PLIST(9)=user
 ... ;f j=21,22 s PLIST(j)=""
 .i flag="P" d
 ..i '$l(PLIST(21)) s PLIST(21)=+$h,PLIST(22)=$p($h,",",2) i $l(path) s PLIST(10)=path
 ..f j=7,8,9 s PLIST(j)=""
 ..i '$l(PLIST(10)) s ^TMP("SAVE",$j,"Pathologist",vistsRID)=""
 .s:$l(notes) PLIST(23)=notes s error=$$update^LVBVISTS(vistsRID,app,GROUP) i error s l=$i(^TMPlog("error")),^TMPlog("error",l)=error
saveEnd i $$LOCKCLR^SSLOCK("Patient",epis)
 l -^DBLock("Printing",epis)
 ; delete Required field missing messages and Fail for Word results
 i word="Y" k ^TMP("SAVE",$j,"REQ"),^TMP("SAVE",$j,"Fail")
 ; delete Required field missing messages for Update
 i flag="E" k ^TMP("SAVE",$j,"REQ") d
 .s tc="" f  s tc=$o(^TMP("SAVE",$j,"Fail",tc)) q:tc=""  k ^TMP("SAVE",$j,"Fail",tc,"REQ")
 ; set return data
 k PLIST 
 ; PLIST(1) - Fail codes
 i check="Y" d
 .s (ind,tc)="" f  s tc=$o(^TMP("SAVE",$j,"Fail",tc)) q:tc=""  d
 ..s fail="" f  s fail=$o(^TMP("SAVE",$j,"Fail",tc,fail)) q:fail=""  s s=^(fail) d
 ...s ind=ind+1,$p(PLIST(1),$c(2),ind)=tc_$c(1)_$p(s,$c(1),1)_$c(1)_$s($e(fail)="R":"R",1:fail)_$p(s,$c(1),2)_$c(1)_vistsRID
 ; PLIST(2) - Tests which should have pathologist attention
 s (ind,vts)="" f  s vts=$o(^TMP("SAVE",$j,"Pathologist",vts)) q:vts=""  d
 .s ind=ind+1,$p(PLIST(2),$c(2),ind)=vts,ts=$p(vts,"||",2),syn=$$seldata^LVBCTTS(ts,4)
 .s $p(PLIST(3),$c(2),ind)=$p(vts,"||",1)_" - "_syn_$s($p(vts,"||",3)>1:"("_$p(vts,"||",3)_")",1:"")
 s PLIST=$o(PLIST(""),-1) 
 s a="" f  s a=$o(^TMP("BBprint",vistsRID,$j,a)) q:a=""  d
 .f j=1:1:4 s @("x"_j)=$p(^(a),$c(1),j)
 .i $$START^PRTREP00(x1,x2,x3,x4)
 s l=$i(^TMPlog("log")),^TMPlog("log",l)=$h_" : "_$j_" : $$saveEnd^"_$zn_" : "_vistsRID
 k ^TMP("SAVE",$j),^TMP($zn,$j),^TMP("BBprint",vistsRID,$j)
 ; Complete all procedures and file Result
 i $$status^LVBVIS1(vistsRID)="A" d Complete^LVBHIVAO(vistsRID)
 q ok
 ; PLIST with results as tc\result
TScompute(test,vtsRID) n (test,vtsRID,PLIST) s test=$g(test),vtsRID=$g(vtsRID) k ^TMP($zn,$j,"TScompute")
 f j=1:1:PLIST s ti=$p(PLIST(j),"\",1),result=$p(PLIST(j),"\",2) i $l(ti) s ^TMP($zn,$j,"TScompute",1,ti)=result
 i $$getall1^LVBCTTC(test)
 k ITEMS m ITEMS=PLIST
 s j="" f  s j=$o(ITEMS(j)) q:j=""  s ti=$p(ITEMS(j),$c(2),1) i $l(ti) d
 .i '$$select^LVBCTTCC(ti_"||"_test,"Y") d
 ..s result=$g(^TMP($zn,$j,"TScompute",1,ti))
 ..i PLIST(5)="Y" s ^TMP($zn,$j,"TScompute",1,ti)=""
 ..i PLIST(5)'="Y",'$d(^TMP($zn,$j,"TScompute",1,ti)) s ^TMP($zn,$j,"TScompute",1,ti)=""
 f  s stopCalc=1 d  q:stopCalc
 .s j="" f  s j=$o(ITEMS(j)) q:j=""  s ti=$p(ITEMS(j),$c(2),1) i $l(ti) d
 ..n (j,ti,test,ITEMS,stopCalc,vtsRID)
 ..i $g(^TMP($zn,$j,"TScompute",1,ti))="",'$$select^LVBCTTCC(ti_"||"_test,"Y") d
 ...s formula=PLIST(3),required=PLIST(4),(param,data)=""
 ...i '$d(^TMP($zn,$j,"TScompute",2,ti)) s ^TMP($zn,$j,"TScompute",2,ti)=""
 ...s x="" f  s x=$o(ITEMS(x)) q:x=""  s xx=$p(ITEMS(x),$c(2),1) i formula[xx s param=param_"^"_xx,data=data_"^"_$g(^TMP($zn,$j,"TScompute",1,xx))
 ...s param=param
 ...s data=data
 ...s formula=formula
 ...s required=required
 ...s vtsRID=vtsRID
 ...i '$$compute^LVBCTTCC(param,data,formula,required,vtsRID,ti),$l(PLIST(1)) s stopCalc="" d
 ....s ^TMP($zn,$j,"TScompute",1,ti)=PLIST(1)
 ....s ^TMP($zn,$j,"TScompute",2,ti)=PLIST(1)
 k PLIST s x="" f cnt=1:1 s x=$o(^TMP($zn,$j,"TScompute",2,x)) q:x=""  s PLIST(cnt)=x_"\"_^(x)
 s PLIST=$o(PLIST(""),-1) k ^TMP($zn,$j,"TScompute")
 q 0
 ; authorise single episode from machine
 ; PLIST with results as tc\result\comments\flag
 ; flag - E-Update
 ;        P-Pathologist attention
 ;        A-Authorize/Verify_$c(2)_Verif.Queue_$c(2)_Full Authorize
 ; screen - AG-AutoAuthorise_$c(2)_OverwriteResult
 ;          S-SingleEntry_$c(2)_OverwriteResult
 ;          G-Grid_$c(2)_OverwriteResult
machsave(mi,epis,flag,user,testset,tsgrp,screen,app,GROUP,Job,cacheOnly) n (mi,epis,flag,user,testset,tsgrp,screen,app,GROUP,Job,cacheOnly,PLIST)
 s mi=$g(mi),epis=$p($g(epis),$c(1)),flag=$g(flag),user=$g(user),testset=$g(testset),tsgrp=$g(tsgrp),screen=$g(screen),cacheOnly=$g(cacheOnly)
 s app=$g(app),GROUP=$g(GROUP),Job=$g(Job),OverwriteResult=$p(screen,$c(2),2),screen=$p(screen,$c(2),1),LD="|"
 i $l(epis)," 0 1 9 "'[(" "_$p($g(^TEPI(epis)),"\",44)_" ") q 100
 s l=$i(^TMPlog("log")) m ^TMPlog("log",l)=PLIST
 s ^TMPlog("log",l)=$h_" : "_$j_" : $$machsave^"_$zn_" : "_mi_"^"_epis_"^"_flag_"^"_user_"^"_testset_"^"_tsgrp_"^"_screen_"^"_app_"^"_GROUP_"^"_Job
 k ^TMP("MACH-SAVE",$j) m ^TMP("MACH-SAVE",$j,"PLIST")=PLIST
 ; save result by test code
 s cnt="" f  s cnt=$o(PLIST(cnt)) q:cnt=""  s tc=$p(PLIST(cnt),"\",1) i $l(tc) d
 .s ^TMP("MACH-SAVE",$j,"result",tc)=$p(PLIST(cnt),"\",2,4)
 .s $p(^TMP("MACH-SAVE",$j,"result",tc),"\",6)=$p(PLIST(cnt),"\",6)
 .s $p(^TMP("MACH-SAVE",$j,"result",tc),"\",13)=$p(PLIST(cnt),"\",13)
 .s $p(^TMP("MACH-SAVE",$j,"result",tc),"\",14)=$p(PLIST(cnt),"\",14)
 .i screen["G" s $p(^TMP("MACH-SAVE",$j,"result",tc),"\",9)=mi
 .i screen="S" s $p(^TMP("MACH-SAVE",$j,"result",tc),"\",9)=$p(PLIST(cnt),"\",9)
 ; get sample number
 i $l(mi),$l(epis) d
 .i screen="S",'$d(^TMIF(mi,9,epis)) d SampleSave(epis)
 .i $d(^TMIF(mi,9,epis)) s sample="" f  s sample=$o(^TMIF(mi,9,epis,sample)) q:sample=""  d SampleSave(sample)
 ; set return data
 k PLIST s ok=0 i $d(^TMP("MACH-SAVE",$j,"Fail")) s ok=61
 ; PLIST(1) - Fail codes
 s (ind,ts)="" f  s ts=$o(^TMP("MACH-SAVE",$j,"Fail",ts)) q:ts=""  d
 .s tc="" f  s tc=$o(^TMP("MACH-SAVE",$j,"Fail",ts,tc)) q:tc=""  d
 ..s fail="" f  s fail=$o(^TMP("MACH-SAVE",$j,"Fail",ts,tc,fail)) q:fail=""  d
 ...s ind=ind+1,$p(PLIST(1),$c(2),ind)=tc_$c(1)_^(fail)_$c(1)_fail_$c(1)_ts
 ; PLIST(2) - Tests which should have pathologist attention
 s ts="" f ind=1:1 s ts=$o(^TMP("MACH-SAVE",$j,"Pathologist",ts)) q:ts=""  s $p(PLIST(2),$c(2),ind)=ts
 ; PLIST(3) - List of lines to delete
 s x1="" f ind=1:1 s x1=$o(^TMP("MACH-SAVE",$j,"Delete",x1)) q:x1=""  s $p(PLIST(3),$c(2),ind)=x1
 ; PLIST(4) - List of lines to reselect
 s (x1,ind)="" f  s x1=$o(^TMP("MACH-SAVE",$j,"ReSelect",x1)) q:x1=""  i '$d(^TMP("MACH-SAVE",$j,"Delete",x1)) s ind=ind+1,$p(PLIST(4),$c(2),ind)=x1
 ; PLIST(5) - List of ts and events
 s x1="" f ind=1:1 s x1=$o(^TMP("MACH-SAVE",$j,"Event",x1)) q:x1=""  s $p(PLIST(5),$c(2),ind)=^(x1)
 s PLIST=$o(PLIST(""),-1) 
 ; PLIST(6) - List of unauthorised ts
 s x1="" f  s x1=$o(^TMP("MACH-SAVE",$j,"Authorised",x1)) q:x1=""  d
 .s x=$p(x1,"||") f j=1,2 s @("xx"_j)=$p($g(^TMP("MACH-SAVE",$j,"x",x)),$c(28),j)
 .s xx1=xx1_$s($l(xx1):" ",1:"")_x1
 .s xx2=xx2_$s($l(xx2):" ",1:"")_$$seldata^LVBCTTS($p(x1,"||",2),4)
 .s ^TMP("MACH-SAVE",$j,"x",x)=xx1_$c(28)_xx2
 s x1="" f ind=1:1 s x1=$o(^TMP("MACH-SAVE",$j,"x",x1)) q:x1=""  s $p(PLIST(6),$c(2),ind)=x1_$c(28)_^(x1)
 s PLIST=$o(PLIST(""),-1) 
 s l=$i(^TMPlog("log")) m ^TMPlog("log",l)=PLIST
 s ^TMPlog("log",l)=$h_" : "_$j_" : $$machsaveEnd^"_$zn_" : "_mi_"^"_epis_"^"_flag_"^"_user_"^"_testset_"^"_tsgrp_"^"_screen
 k ^TMP("MACH-SAVE",$j),^TMP($zn,$j)
 q ok
SampleSave(sample) s sample=$g(sample)
 ; do not autoauthorise results with pathogens
 i screen["A",$d(^TMIF(mi,1,sample,"BUG")) q
 ; sample is on hold
 i $p($g(^TMIF(mi,1,sample)),"\",7)="Y" q
 k ^TMP("MACH-SAVE",$j,"TEST")
 ; get list of testsets
 i '$l(testset) d
 .s x1=$p(tsgrp,"||",1),x2=$p(tsgrp,"||",2),(cnt,ts)=""
 .f  s ts=$o(^TMIF(x1,"TG",x2,"TS",ts)) q:ts=""  d
 ..s tscnt=$$getnats(epis,ts)
 ..i tscnt s cnt=cnt+1,^TMP("MACH-SAVE",$j,"TEST",cnt)=ts_$c(1)_tscnt
 i $l(testset) d
 .s cnt="" f j=1:1:$l(testset,",") s ts=$p(testset,",",j) i $l(ts) d
 ..s tscnt=$s($l($p(ts,"||",2)):$p(ts,"||",2),1:$$getnats(epis,ts))
 ..i tscnt s cnt=cnt+1,^TMP("MACH-SAVE",$j,"TEST",cnt)=$p(ts,"||")_$c(1)_tscnt
 ; setup results against test set in VISTD format
 s cnt1="" f  s cnt1=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1)) q:cnt1=""  d
 .s ts=$p(^(cnt1),$c(1),1),tscnt=$p(^(cnt1),$c(1),2)
 . ; skip authorised tests
 .i $$status^LVBVIS1(epis_"||"_ts_"||"_tscnt)="A" k ^TMP("MACH-SAVE",$j,"TEST",cnt1) q
 .k ^TMP("MACH-SAVE",$j,"RESULT") m ^TMP("MACH-SAVE",$j,"RESULT")=^TMP("MACH-SAVE",$j,"result")
 . ; check if at least 1 item is coming from the instrument for this test set
 .s tc="" f  s tc=$o(^TMP("MACH-SAVE",$j,"RESULT",tc)) q:tc=""  i $d(^TTAB("TC",tc,1,ts)) q
 .i '$l(tc) k ^TMP("MACH-SAVE",$j,"TEST",cnt1) q
 . ; check auto authorise - VISTS staff notes
 .i screen["A",$p(^TMIF(mi),"\",36)="Y",$d(^TEPI(epis,1,ts,tscnt,"SN")) s ok=1 k ^TMP("MACH-SAVE",$j,"TEST",cnt1) q
 . ; check auto authorise - EPVIS staff notes
 .i screen["A",$p(^TMIF(mi),"\",36)="Y",$g(^TEPI(epis,"SN",0)) s ok=1 k ^TMP("MACH-SAVE",$j,"TEST",cnt1) q
 . ; check auto authorise - verification queues
 .i screen["A",$d(^TEPI(epis,1,ts,tscnt,"QUEUE","VQ")),$$seldata^LVBMIMP(mi,42)'="Y" s ok=1 k ^TMP("MACH-SAVE",$j,"TEST",cnt1) q
 . ; check auto authorise conditions
 .i screen["A" s ok=0 d auto i ok k ^TMP("MACH-SAVE",$j,"TEST",cnt1) q
 . ; if comes from grid add fields already in ^TEPI
 .s tc="" f  s tc=$o(^TEPI(epis,1,ts,tscnt,"DATA",tc)) q:tc=""  d
 ..i '$d(^TMP("MACH-SAVE",$j,"RESULT",tc)) d
 ...s ^TMP("MACH-SAVE",$j,"RESULT",tc)=$p(^TEPI(epis,1,ts,tscnt,"DATA",tc),"\")
 ...s remark="" i $d(^TEPI(epis,1,ts,tscnt,"DATA",tc,"REM")) d
 ....s remcnt="0" f  s remcnt=$o(^TEPI(epis,1,ts,tscnt,"DATA",tc,"REM",remcnt)) q:remcnt=""  s remark=$g(remark)_LD_^(remcnt)
 ...s $p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",2)=$e(remark,2,9999)
 . ; copy same TestItems
 .s cnt2="" f  s cnt2=$o(^TTAB("TS",ts,0,cnt2)) q:cnt2=""  s tc=$p(^(cnt2),"\",8) i $l(tc),'$d(^TMP("MACH-SAVE",$j,"RESULT",tc)) d
 ..s rc=$$seldata^LVBCTTC(tc,55) i rc="Y" d
 ...s x1="" f  s x1=$o(^TEPI(epis,1,x1)) q:x1=""  d
 ....s x2="" f  s x2=$o(^TEPI(epis,1,x1,x2)) q:x2=""  d
 .....i ts'=x1,$d(^TEPI(epis,1,x1,x2,"DATA",tc)) s ^TMP("MACH-SAVE",$j,"RESULT",tc)=$p(^(tc),"\")
 .k ITEMS i '$$getall1^LVBCTTC(ts) m ITEMS=PLIST
 . ; set "Z"-type fields
 .s j="" f  s j=$o(ITEMS(j)) q:j=""  s tc=$p(ITEMS(j),$c(2),1) i $l(tc) d
 ..i '$d(^TMP("MACH-SAVE",$j,"RESULT",tc)) d
 ...s result=$$zResult^LVBVIS14($p($p(ITEMS(j),$c(2),4),$c(28),5),epis_"||"_ts_"||"_tscnt)
 ...i $l(result) d
 ....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",2)=tc
 ....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",3)=result
 ....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",4)=""
 ....s $p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",1)=result
 . ; set computed fields
 .s j="" f  s j=$o(ITEMS(j)) q:j=""  s tc=$p(ITEMS(j),$c(2),1) i $l(tc) d
 ..i $d(^TMP("MACH-SAVE",$j,"RESULT",tc)) d
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",2)=tc
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",3)=$p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",1)
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",4)=$p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",2)
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",6)=$p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",6)
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",9)=$p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",9)
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",11)=$p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",3)
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",13)=$p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",13)
 ...s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",14)=$p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",14)
 .f  s stopCalc=1 d  q:stopCalc
 ..s j="" f  s j=$o(ITEMS(j)) q:j=""  s tc=$p(ITEMS(j),$c(2),1) i $l(tc) d
 ...n (epis,cnt1,tc,ts,tscnt,ITEMS,stopCalc)
 ...i $p($g(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)),"\",3)="",'$$select^LVBCTTCC(tc_"||"_ts,"Y") d
 ....s formula=PLIST(3),required=PLIST(4),(param,data)=""
 ....s x="" f  s x=$o(ITEMS(x)) q:x=""  s xx=$p(ITEMS(x),$c(2),1) i formula[xx s param=param_"^"_xx,data=data_"^"_$p($g(^TMP("MACH-SAVE",$j,"TEST",cnt1,xx)),"\",3)
 ....i '$$compute^LVBCTTCC(param,data,formula,required,epis_"||"_ts_"||"_tscnt,tc),$l(PLIST(1)) s stopCalc="" d
 .....s err=$$validres^LVBVIS12(epis,tc,PLIST(1))
 .....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",2)=tc
 .....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",3)=PLIST(9)
 .....s $p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",1)=PLIST(9)
 .s j="" f  s j=$o(ITEMS(j)) q:j=""  s tc=$p(ITEMS(j),$c(2),1) i $l(tc) d
 ..n (epis,cnt1,tc,ts,tscnt,ITEMS)
 ..i '$$select^LVBCTTCC(tc_"||"_ts,"Y"),PLIST(5)="Y" d
 ...s formula=PLIST(3),required=PLIST(4),(param,data)=""
 ...s x="" f  s x=$o(ITEMS(x)) q:x=""  s xx=$p(ITEMS(x),$c(2),1) i formula[xx s param=param_"^"_xx,data=data_"^"_$p($g(^TMP("MACH-SAVE",$j,"TEST",cnt1,xx)),"\",3)
 ...i '$$compute^LVBCTTCC(param,data,formula,required,epis_"||"_ts_"||"_tscnt,tc),$l(PLIST(1)) d
 ....s err=$$validres^LVBVIS12(epis,tc,PLIST(1))
 ....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",2)=tc
 ....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",3)=PLIST(9)
 ....s $p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",1)=PLIST(9)
 . ; check auto authorise - multiple results
 .i screen["A",$p(^TMIF(mi),"\",34)="Y" s ok=0 d  i ok k ^TMP("MACH-SAVE",$j,"TEST",cnt1) q
 ..s tc="" f  s tc=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)) q:tc=""  d  i ok s ok=ok-1
 ...s tc1="" f ok=0:1 s tc1=$o(^TMIF(mi,1,epis,"DATA",tc,tc1)) q:tc1=""
 . ; set auto comments
 .i screen["G" d
 ..k PLIST
 ..s tc="" f j=1:1 s tc=$o(^TMP("MACH-SAVE",$j,"RESULT",tc)) q:tc=""  s PLIST(j)=tc_$c(1)_$p(^(tc),"\",1)
 ..s PLIST=$o(PLIST(""),-1)
 ..i $$autocomm^LVBVIS1(epis_"||"_ts_"||"_tscnt)
 ..f j1=1:1:PLIST s tc=$p(PLIST(j1),$c(1),1),result=$p(PLIST(j1),$c(1),2) i $l(tc) d
 ...f j2=1:1:$l(result,$c(2)) s res=$p(result,$c(2),j2) i $l(res) d
 ....i $p($g(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)),"\",4)[("{"_res_"}") q
 ....i $p($g(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)),"\",4)[("["_res_"]") q
 ....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",2)=tc
 ....s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",4)=$p($g(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)),"\",4)_$s($l($p($g(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)),"\",4)):LD,1:"")_"["_res_"]"
 ; save test set info
 s cnt1="" f  s cnt1=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1)) q:cnt1=""  d
 .s ts=$p(^(cnt1),$c(1),1),tscnt=$p(^(cnt1),$c(1),2)
 .s ^TMP("MACH-SAVE",$j,"Authorised",epis_"||"_ts_"||"_tscnt)=""
 .s ok=0
 . ; check mandatory results and validity of data
 .i screen["A" d
 ..i ok=0 d
 ...k PLIST s x="" f  s x=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1,x)) q:x=""  d
 ....s tc=$p(^(x),"\",2),res=$p(^(x),"\",3),comm=$p(^(x),"\",4),xFlag=$p(^(x),"\",11),mix=$p(^(x),"\",9)
 ....i $l(res)!$l(comm) s PLIST(tc)=res_"\"_comm_"\"_xFlag_"\"_mix
 ...s PLIST=$o(PLIST(""),-1)
 ...s ok=$$check(epis,ts,.PLIST) k ^TMP("SAVE",$j)
 ..i ok=0 d
 ...k PLIST s x="" f  s x=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1,x)) q:x=""  d  q:ok
 ....s tc=$p(^(x),"\",2),comm=$p(^(x),"\",4)
 ....i $l(tc),$l(comm) s ok=$$checkcom(tc,,comm,LD)
 . ; save result
 .i (screen'["A")!((screen["A")&(ok=0)) d
 ..s VQ="" i screen'["S" s ok="Y" d  i ok="N" q
 ... ; check Actions
 ...k PLIST s x="" f j=1:1 s x=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1,x)) q:x=""  d
 ....s tc=$p($p(^(x),"\",2),$c(1)),res=$p(^(x),"\",3),comm=$p(^(x),"\",4)
 ....s PLIST(j)="DATA"_$c(1)_tc_$c(1)_res_$c(1)_comm
 ...s PLIST=$o(PLIST(""),-1)
 ...i $$TScheck^LVBVIS7(epis_"||"_ts_"||"_tscnt,$s($p(flag,$c(1))="A":"A",1:"U"),"","B")
 ...f j=1:1:PLIST d  i ok="N" q
 ....i $e($p(PLIST(j),$c(1)))="E" s ok="N" q
 ....i $e($p(PLIST(j),$c(1)),1,2)="SD" d  q
 .....s tc=$p(PLIST(j),$c(1),6),res=$p(PLIST(j),$c(1),2) i $l(tc),$l(res) d
 ......s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",2)=tc
 ......s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",3)=res
 ......s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",4)=""
 ......s $p(^TMP("MACH-SAVE",$j,"RESULT",tc),"\",1)=res
 ....i $e($p(PLIST(j),$c(1)),1)="R" d  q
 .....s tcList=$p(PLIST(j),$c(1),6)
 .....f jk=1:1:$l(tcList,",") s tc=$p(tcList,",",jk) i $l(tc),$d(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)) s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",6)=""
 ....i $e($p(PLIST(j),$c(1)),1,2)="NR" d  q
 .....s tcList=$p(PLIST(j),$c(1),6)
 .....f jk=1:1:$l(tcList,",") s tc=$p(tcList,",",jk) i $l(tc),$d(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)) s $p(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc),"\",6)="Y"
 ....i '$l(VQ),$e($p(PLIST(j),$c(1)),1,2)="VQ" s VQ=$p(PLIST(j),$c(1),2)
 ..k PLIST
 ..s x="" f cnt=1:1 s x=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1,x)) q:x=""  d
 ...s PLIST(cnt)=$p(^(x),"\",1,4),$p(PLIST(cnt),"\",6)=$p(^(x),"\",6),$p(PLIST(cnt),"\",9)=$p(^(x),"\",9),$p(PLIST(cnt),"\",13)=$p(^(x),"\",13)
 ..s PLIST=$o(PLIST(""),-1)
 ..i PLIST d
 ...s ok=$$save(epis_"||"_ts_"||"_tscnt,flag_$c(2)_VQ,user,"Y",,,,app,GROUP)
 ...i 'ok d
 ....k ^TMP("MACH-SAVE",$j,"Authorised",epis_"||"_ts_"||"_tscnt)
 ....i cacheOnly'="Y" q
 ....n PLIST k PLIST
 ....s PLIST=$o(PLIST(""),-1)
 ....i $$TScheck^LVBVIS7(epis_"||"_ts_"||"_tscnt,$s($p(flag,$c(1))="A":"A",1:"U"),"","A")
 ....s rowid=epis_"||"_ts_"||"_tscnt
 ....d Actions^LVBCOM13(rowid)
 ....k ^TMP($zn,$j,"actions") m ^TMP($zn,$j,"actions")=PLIST
 ....s sq1="" f  s sq1=$o(^TMP($zn,$j,"actions",sq1)) q:sq1=""  d
 .....s rowid=^(sq1) 
 .....k PLIST s PLIST=$o(PLIST(""),-1)
 .....i $$TScheck^LVBVIS7(rowid,"TA","","A")
 .....d Actions^LVBCOM13(rowid)
 .....s sq2="" f  s sq2=$o(PLIST(sq2)) q:sq2=""  s sq3=$o(^TMP($zn,$j,"actions",""),-1)+1 m ^TMP($zn,$j,"actions",sq3)=PLIST(sq2)
 ... ; save ScatterPlots
 ...i $d(^TMIF(mi,1,sample,"PLOT")) d
 ....k ^TEPI(epis,1,ts,tscnt,"PLOT")
 ....m ^TEPI(epis,1,ts,tscnt,"PLOT")=^TMIF(mi,1,sample,"PLOT")
 ... ; save antibiotics
 ...i screen["G" d
 ....s x1="" f  s x1=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1,x1)) q:x1=""  d
 .....s tc=$p($p(^(x1),"\",2),$c(1)) i $l(tc) d
 ......s x2="" f  s x2=$o(^TMIF(mi,1,sample,"DATA",tc,1,"ANT",x2)) q:x2=""  d
 .......i $l($p(^TMIF(mi,1,sample,"DATA",tc,1,"ANT",x2),"\")) s ^TEPI(epis,1,ts,tscnt,"DATA",tc,"ANT",x2)=^TMIF(mi,1,sample,"DATA",tc,1,"ANT",x2)
 ...i $d(^TTAB("TS",ts,"ACTION"))!$d(^TTAB("TS-ACTION")) d
 ....s x=$o(^TMP("MACH-SAVE",$j,"Event",""),-1)+1
 ....s ^TMP("MACH-SAVE",$j,"Event",x)=epis_"||"_ts_"||"_tscnt_$c(1)_$s($$status^LVBVIS1(epis_"||"_ts_"||"_tscnt)="A":"A",1:"U")
 ...i $l($g(PLIST(1))) f j=1:1:$l(PLIST(1),$c(2)) s data=$p(PLIST(1),$c(2),j) i $l(data) d
 ....s tc=$p(data,$c(1),1),code=$p(data,$c(1),2),fail=$p(data,$c(1),3),xTS=$p(data,$c(1),4)
 ....s ^TMP("MACH-SAVE",$j,"Fail",xTS,tc,fail)=code
 ...i $l($g(PLIST(2))) f j=1:1:$l(PLIST(2),$c(2)) s xTS=$p(PLIST(2),$c(2),j) i $l(ts) d
 ....s ^TMP("MACH-SAVE",$j,"Pathologist",xTS)=""
 ...i 'ok s tc="" f  s tc=$o(^TMP("MACH-SAVE",$j,"TEST",cnt1,tc)) q:tc=""  d
 .... ; find if all test items for episode had been filed
 ....s Dflag=1,xTS="" f  s xTS=$o(^TEPI(epis,1,xTS)) q:xTS=""  d  i 'Dflag q
 ..... ; Test Set doesnot belong to the machine
 .....i '$d(^TMIF(mi,0,xTS)) q
 .....s xTScnt="" f  s xTScnt=$o(^TEPI(epis,1,xTS,xTScnt)) q:xTScnt=""  d  i 'Dflag q
 ......i $d(^TTRQ(xTS,epis,xTScnt,tc)) s Dflag=0
 ....i Dflag,$$delalltc^LVBMIRI(mi_"||"_sample_"||"_tc)
 ..i $l(Job) d
 ... ; check if anything left in ^TMIF
 ...s ro=$p(^TMP("RESULT-GRID",Job),"^",3) d check^LVBMIRH4(mi,sample,epis)
 ... ; check if anything left in ^TTRQ
 ...s x1="" f  s x1=$o(^TMP("RESULT-GRID",Job,"PATIENT",epis,x1)) q:x1=""  d
 ....s (ok,tc)="" f  s tc=$o(^TTRQ(ts,epis,tscnt,tc)) q:tc=""  i $d(^TMIF(mi,1,x1,"DATA",tc)) s ok=1 q
 ....i 'ok k ^TMP("RESULT-GRID",Job,"PATIENT",epis,x1,ts)
 ... ; check ro parameter
 ...i (ro="RA")!(ro="RB"),'$d(^TMP("RESULT-GRID",Job,"PATIENT",epis,sample," ")) k ^TMP("RESULT-GRID",Job,"PATIENT",epis)
 ...i ro="RB",'$l($o(^TMP("RESULT-GRID",Job,"PATIENT",epis,sample," "))) k ^TMP("RESULT-GRID",Job,"PATIENT",epis)
 ... ; something left in ^TMP("RESULT-GRID",Job)
 ...i $d(^TMP("RESULT-GRID",Job,"PATIENT",epis,sample)) d
 ....i $p(^TMP("RESULT-GRID",Job),"^",15)="Totals" d totals^LVBMIRH4(mi,epis,Job)
 ....s ^TMP("MACH-SAVE",$j,"ReSelect",mi_"||"_sample_"||"_epis)=""
 ... ; nothing left in ^TMP("RESULT-GRID",Job)
 ...i '$d(^TMP("RESULT-GRID",Job,"PATIENT",epis,sample)) d
 ....i $o(^TMP("RESULT-GRID",Job,"PATIENT",epis,""))="" k ^TMP("RESULT-GRID",Job,"PATIENT",epis)
 ....s ^TMP("MACH-SAVE",$j,"Delete",mi_"||"_sample_"||"_epis)=""
 q
 ; if autoauthorise check all cases
auto n (epis,ts,ok)
 i $$select^LVBCTTS(ts,"Y") s ok=1 q
 ; test not autoauthorise
 i PLIST(20)'="Y" s ok=2 q
 ; doctor not autoauthorise
 f j=15,5,26 s VISIT(j)=$$seldata^LVBEPVIS(epis,j)
 i $l(VISIT(15)),$$seldata^LVBCTDR(VISIT(15),1)="" s ok=5 q
 i $l(VISIT(15)),$$seldata^LVBCTDR(VISIT(15),32)="N" s ok=6 q
 ; exclude test exist on a patient
 i $$open^LVBCTTSX(ts,"Y")
 f  q:$$fetch^LVBCTTSX(ts,"Y")  d  i ok q
 .f j=1:1:PLIST i $d(PLIST(j)) s PLIST(j)=$p(PLIST(j),$c(1))
 . ; check species
 .i $l(PLIST(3)),PLIST(3)'=VISIT(5) q
 . ; check doctor
 .i $l(PLIST(4)),PLIST(4)'=VISIT(15) q
 . ; check min age
 .i $l(PLIST(5)),PLIST(5)<VISIT(26) q
 . ; check max age
 .i $l(PLIST(6)),PLIST(6)>VISIT(26) q
 . ; check test set
 .i $l(PLIST(7)),'$d(^TEPI(epis,1,PLIST(7))) q
 .s ok=7_PLIST(1)
 i $$close^LVBCTTSX()
 q
]]></Routine>
</Export>
