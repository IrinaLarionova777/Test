<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBBIIR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBBIIR ; IG 30/4/98 ;MVB Control code access for BI_InvoiceReprint
 ;
 ; supported calls:
 ;
 ; $$select^LVBBIIR(ROWID)
 ; $$open^LVBBIIR(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBBIIR(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBBIIR(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBBIIR(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBBIIR()
 ; $$insert^LVBBIIR()
 ; $$update^LVBBIIR(ROWID)
 ; $$delete^LVBBIIR(ROWID)
 ; $$print^LVBBIIR(date)
 ;
  ;---&SQL(DECLARE BIIR CURSOR FOR SELECT * FROM BI_InvoiceReprint
   ;---         WHERE BIIR_Date = :date
   ;---         ORDER BY BIIR_Flag)
   ;--- ** SQL PUBLIC Variables: SQLCODE, date
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO BI_InvoiceReprint VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE BI_InvoiceReprint VALUES :PLIST() WHERE BIIR_RowID=:ROWID AND ((BIIR_Flag NOT= 'Y') OR (BIIR_Flag IS NULL)))
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID) S ROWID=$G(ROWID)
  ;---&SQL(DELETE FROM BI_InvoiceReprint WHERE BIIR_RowID=:ROWID AND ((BIIR_Flag NOT= 'Y') OR (BIIR_Flag IS NULL)))
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ;
 ; Open the cursor
open(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) s date=$g(date)
  ;---&SQL(OPEN BIIR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BIIR0o
 Q 0
 ;
 ; Fetch the data
fetch(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s date=$g(date)
  ;---&SQL(FETCH BIIR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) s date=$g(date) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(date) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (date,PLIST) s date=$g(date) K ^TMP($zn,$j)
 i $$open(date)
 f cnt=1:1 Q:$$fetch(date)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE BIIR) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BIIR0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST S ROWID=$G(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM BI_InvoiceReprint WHERE BIIR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBEPVIS(plist(3),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 Q
print(date,user) n (date,user) s date=$g(date),user=$g(user)
 s epis="" f  s epis=$o(^TBIL(4,date,epis)) q:epis=""  i $p(^(epis),"\",2)'="Y" d
 .s xx=$p(^(epis),"\",1)
 .i '$$select^LVBEPVIS(epis,"Y") d
 ..k EPVIS m EPVIS=PLIST
 ..i $l(EPVIS(57)),'$$select^LVBINVBP(EPVIS(57)_"||"_epis) d
 ...s param=$p(EPVIS(57),"||",1)_"\"_$p(EPVIS(57),"||",2)_"\"_$p(PLIST(4),$c(1))_"\"_$s(xx["R":$e(xx,2),1:"Y")
 ...i $$print^LVBBILL0(user,param)
 ...s $p(^TBIL(4,date,epis),"\",2)="Y"
 q 0
%BIIR0o s $zt="%BIIR0E" s SQLCODE=$s($g(%BIIR0c):-101,1:0) q:SQLCODE'=0  s %BIIR0d(10)=0 s %BIIR0d(11)=0,%BIIR0d(12)=""
 s %BIIR0d(6)=$g(date)
 s %BIIR0t(1)=$i(^||%sql.temp)
 s %BIIR0c=1 q
%BIIR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %BIIR0c,%BIIR0d,%BIIR0E,%BIIR0l,%BIIR0n,%BIIR0R,%BIIR0s,%BIIR0t,%BIIR0Z q
%0Afirst s %BIIR0d(9)=""
 k ^||%sql.temp(%BIIR0t(1),0) s ^||%sql.temp(%BIIR0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%BIIR0t(1),0))
 d %0ABMod
 ; asl MOD# 4
 i $sortend(^||%sql.temp(%BIIR0t(1),0))
 s %BIIR0s(8)=""
%0ADk1 s %BIIR0s(8)=$o(^||%sql.temp(%BIIR0t(1),0,%BIIR0s(8)))
 i %BIIR0s(8)="" g %0ADdun
 s %BIIR0d(8)=$s(%BIIR0s(8)=-1E14:"",1:%BIIR0s(8))
 s %BIIR0s(9)=""
%0ADk2 s %BIIR0s(9)=$o(^||%sql.temp(%BIIR0t(1),0,%BIIR0s(8),%BIIR0s(9)))
 i %BIIR0s(9)="" g %0ADk1
 s %BIIR0d(9)=$s(%BIIR0s(9)=-1E14:"",1:%BIIR0s(9))
 s %BIIR0d(27)=$g(^||%sql.temp(%BIIR0t(1),0,%BIIR0s(8),%BIIR0d(9)))
 s %BIIR0d(1)=$lg(%BIIR0d(27),4) s %BIIR0d(2)=$lg(%BIIR0d(27),1) s %BIIR0d(3)=$lg(%BIIR0d(27),2) s %BIIR0d(4)=$lg(%BIIR0d(27),5) s %BIIR0d(5)=$lg(%BIIR0d(27),3)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %BIIR0d(10)=%BIIR0d(10)+1,%ROWCOUNT=%BIIR0d(10),%ROWID=%BIIR0d(1),%BIIR0c=10 q
%BIIR0f i '$g(%BIIR0c) { s SQLCODE=-102 q  } i %BIIR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%BIIR0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%BIIR0d(10),%BIIR0c=100 q  } g %0Afirst:%BIIR0c=1
 g %0ADk2
%0ADdun 
%0AAdun 
 s %ROWCOUNT=%BIIR0d(10),SQLCODE=100,%BIIR0c=100 q
%BIIR0c i '$g(%BIIR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%BIIR0d(10)),1:0) f %BIIR0d(13)=1 { i $sortend(^||%sql.temp(%BIIR0t(%BIIR0d(13)),0),0) } k ^||%sql.temp(%BIIR0t(1))
 i $zu(115,2)=1,$g(%BIIR0d(11))=1 { l -@%BIIR0d(12) } k %BIIR0c,%BIIR0d,%BIIR0E,%BIIR0l,%BIIR0n,%BIIR0R,%BIIR0s,%BIIR0t,%BIIR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %BIIR0c=100
 f %BIIR0d(13)=1 i $sortend(^||%sql.temp(%BIIR0t(%BIIR0d(13)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %BIIR0d(2)=%BIIR0d(6)
 i %BIIR0d(2)="" g %0ABdun
 s %BIIR0d(3)=""
%0ABk1 s %BIIR0d(3)=$o(^TBIL(4,%BIIR0d(2),%BIIR0d(3)))
 i %BIIR0d(3)="" g %0ABdun
 s %BIIR0d(19)=$g(^TBIL(4,%BIIR0d(2),%BIIR0d(3)))
 s %BIIR0d(4)=$p(%BIIR0d(19),"\",1) s %BIIR0d(5)=$p(%BIIR0d(19),"\",2)
 s %BIIR0d(1)=(%BIIR0d(2))_"||"_(%BIIR0d(3))
 s %BIIR0d(8)=$zu(28,%BIIR0d(5),7)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TBIL(4,$p(%BIIR0d(1),"||",1),$p(%BIIR0d(1),"||",2))#"S":$zu(115,4) i $t { s %BIIR0d(11)=1,%BIIR0d(12)=$name(^TBIL(4,$p(%BIIR0d(1),"||",1),$p(%BIIR0d(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BI_InvoiceReprint for RowID value: "_%BIIR0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %BIIR0d(2)=$p(%BIIR0d(1),"||"),%BIIR0d(3)=$p(%BIIR0d(1),"||",2)
 i %BIIR0d(2)'="",%BIIR0d(3)'="",$d(^TBIL(4,%BIIR0d(2),%BIIR0d(3)))
 e  g %0ACdun
 s %BIIR0d(25)=$g(^TBIL(4,%BIIR0d(2),%BIIR0d(3)))
 s %BIIR0d(4)=$p(%BIIR0d(25),"\",1) s %BIIR0d(5)=$p(%BIIR0d(25),"\",2)
 s %BIIR0d(8)=$zu(28,%BIIR0d(5),7)
%0ABuncommitted ;
 s %BIIR0s(8)=$s(%BIIR0d(8)'="":%BIIR0d(8),1:-1E14),%BIIR0d(9)=%BIIR0d(9)+1,%BIIR0d(26)="",$li(%BIIR0d(26),4)=%BIIR0d(1),$li(%BIIR0d(26),1)=%BIIR0d(2),$li(%BIIR0d(26),2)=%BIIR0d(3),$li(%BIIR0d(26),5)=%BIIR0d(4),$li(%BIIR0d(26),3)=%BIIR0d(5),^||%sql.temp(%BIIR0t(1),0,%BIIR0s(8),%BIIR0d(9))=%BIIR0d(26)
%0ACdun i $zu(115,2)=1,$g(%BIIR0d(11))=1 { l -@%BIIR0d(12) s %BIIR0d(11)=0 }
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.BIInvoiceReprint.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(10)=0 s %mmmsqld(11)=""
 s %mmmsqld(3)=$g(ROWID),%mmmsqld(5)="Y"
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 s %mmmsqld(7)=$zu(28,%mmmsqld(5),7)
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(8)=$p(%mmmsqld(2),"||"),%mmmsqld(9)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TBIL(4,%mmmsqld(8),%mmmsqld(9)))
 e  g %0EBdun
 s %mmmsqld(17)=$g(^TBIL(4,%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(17),"\",2)
 s %mmmsqld(6)=$zu(28,%mmmsqld(4),7)
 g:'(((%mmmsqld(6)'=" ")&&(%mmmsqld(6)'=%mmmsqld(7)))||(%mmmsqld(6)=" ")) %0EBdun
 s %mmmsqld(18)=$$%getlock^User.BIInvoiceReprint.T1(%mmmsqld(2)) i '%mmmsqld(18) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(8)=$p(%mmmsqld(2),"||"),%mmmsqld(9)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TBIL(4,%mmmsqld(8),%mmmsqld(9)))
 e  g %0ECdun
 s %mmmsqld(24)=$g(^TBIL(4,%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(24),"\",2)
 s %mmmsqld(6)=$zu(28,%mmmsqld(4),7)
 g:'(%mmmsqld(2)=%mmmsqld(3)) %0ECdun
 g:'(((%mmmsqld(6)'=" ")&&(%mmmsqld(6)'=%mmmsqld(7)))||(%mmmsqld(6)=" ")) %0ECdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.BIInvoiceReprint.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(10))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(18)=1 %ReleaseLock^User.BIInvoiceReprint.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(18)=1 %ReleaseLock^User.BIInvoiceReprint.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(10)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(18))=1 %ReleaseLock^User.BIInvoiceReprint.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(11)=0 s %mmmsqld(12)=""
 s %mmmsqld(2)=$g(ROWID),%mmmsqld(4)="Y"
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 s %mmmsqld(6)=$zu(28,%mmmsqld(4),7)
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(7)=$p(%mmmsqld(1),"||"),%mmmsqld(8)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TBIL(4,%mmmsqld(7),%mmmsqld(8)))
 e  g %0GBdun
 s %mmmsqld(18)=$g(^TBIL(4,%mmmsqld(7),%mmmsqld(8)))
 s %mmmsqld(3)=$p(%mmmsqld(18),"\",2)
 s %mmmsqld(5)=$zu(28,%mmmsqld(3),7)
 g:'(((%mmmsqld(5)'=" ")&&(%mmmsqld(5)'=%mmmsqld(6)))||(%mmmsqld(5)=" ")) %0GBdun
 s %mmmsqld(19)=$$%getlock^User.BIInvoiceReprint.T1(%mmmsqld(1)) i '%mmmsqld(19) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(9)=$lb(""_%mmmsqld(5))
 s %mmmsqld(7)=$p(%mmmsqld(1),"||"),%mmmsqld(8)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TBIL(4,%mmmsqld(7),%mmmsqld(8)))
 e  g %0GCdun
 s %mmmsqld(25)=$g(^TBIL(4,%mmmsqld(7),%mmmsqld(8)))
 s %mmmsqld(3)=$p(%mmmsqld(25),"\",2)
 s %mmmsqld(5)=$zu(28,%mmmsqld(3),7)
 s %mmmsqld(10)=$lb(""_%mmmsqld(5))
 g:%mmmsqld(9)'=%mmmsqld(10) %0GCdun
 d %delete^User.BIInvoiceReprint.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(11))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(19)=1 %ReleaseLock^User.BIInvoiceReprint.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(19)=1 %ReleaseLock^User.BIInvoiceReprint.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(11)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(19))=1 %ReleaseLock^User.BIInvoiceReprint.T1(%mmmsqld(1)) g %0Gc
%0Jo d %BIIR0f q:SQLCODE'=0
 s PLIST(1)=%BIIR0d(1),PLIST(2)=%BIIR0d(2),PLIST(3)=%BIIR0d(3),PLIST(4)=%BIIR0d(4),PLIST(5)=%BIIR0d(5)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(7)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i PLIST(2)'="",PLIST(3)'="",$d(^TBIL(4,PLIST(2),PLIST(3)))
 e  g %0LBdun
 s %mmmsqld(16)=$g(^TBIL(4,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(16),"\",1) s PLIST(5)=$p(%mmmsqld(16),"\",2)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TBIL(4,$p(PLIST(1),"||",1),$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TBIL(4,$p(PLIST(1),"||",1),$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BI_InvoiceReprint for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i PLIST(2)'="",PLIST(3)'="",$d(^TBIL(4,PLIST(2),PLIST(3)))
 e  g %0LCdun
 s %mmmsqld(22)=$g(^TBIL(4,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(22),"\",1) s PLIST(5)=$p(%mmmsqld(22),"\",2)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
