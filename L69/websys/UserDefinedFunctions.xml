<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="websys.UserDefinedFunctions">
<Description><![CDATA[
User defined functions which are called in response to websys events
All user defined values must return a value.<br>
For certain events the return value can affect subsequent processing.<br>
The naming convention is to create a function where the function name corresponds to the event name, and the 
cache script routine corresponds to the class name prefixed with U.<br>
<br>
$$OnNew^Usample(compref)<br>
<br>
$$OnBeforeSave^Usample(compref,.id)<br>
<br>
$$OnAfterSave^Usample(compref,id,new)<br>
<br>
Where: <br>
compref is the calling component name.<br>
id is the instance id. Where OnBeforeSave takes over the task of creating a new instance this should be passed by reference.<br>
new is a boolean flag to indicate wether a new instance was created. <br>
All parameters are optional.<br>
<br>
<br>
Return values:<br>
OnNew - ignored<br>
OnBeforeSave - 1 - continues with the save.<br>
OnBeforeSave - 0 - abort the save.<br>
OnAfterSave - ignored<br>
<br>
Additional instances which can be utilised:<br>
msg - websys.Message<br>
obj - the object instance corresponding to the component classname. This object may be manipulated in order to set default values.]]></Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract,XML.Abstract</Super>
<TimeCreated>60218,47035.468832</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>116</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="EXTENTSIZE">
<Default>52</Default>
</Parameter>

<Parameter name="SQLCODE">
<Default>ID</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Default>ID</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Index name="ClassNameEvent">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>ClassName,Event</Properties>
<Unique>0</Unique>
</Index>

<Property name="CacheScript">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ClassName">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Event">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="UpdateDate">
<Type>%Library.Date</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="UpdateTime">
<Type>%Library.Time</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="UpdateUser">
<Type>User.SSUser</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Method name="Evaluate">
<Description>
Evaluate the user defined function and return the return value.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ClassName:%Library.String,Event:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Boolean</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n code
 &sql(	SELECT CacheScript
 INTO :code 
 FROM websys.UserDefinedFunctions
 WHERE ClassName=:ClassName and Event=:Event)
 i SQLCODE q 1
 ;
 q ##Class(websys.Conversions).expressionEvaluate(code)
]]></Implementation>
</Method>

<Method name="Exists">
<Description>
Evaluate the user defined function and return the return value.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ClassName:%Library.String,Event:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Boolean</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n code
 &sql(	SELECT CacheScript
 INTO :code 
 FROM websys.UserDefinedFunctions
 WHERE ClassName=:ClassName and Event=:Event)
 i SQLCODE q 0
 ;
 q 1
]]></Implementation>
</Method>

<Method name="GetIdFromClassAndEvent">
<Description>
Evaluate the user defined function and return the return value.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ClassName:%Library.String,Event:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Boolean</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n rowid 
 &sql(	SELECT ID
 INTO :rowid 
 FROM websys.UserDefinedFunctions
 WHERE ClassName=:ClassName and Event=:Event)
 i SQLCODE q ""
 ;
 q rowid
]]></Implementation>
</Method>

<Method name="VBFindLEClose">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<PlaceAfter>VBFindLEFetch</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n work,rs
 ;
 s work=$li(QHandle,3)
 s rs=$li(work,1)
 //SYSTEMOREF i rs d rs.%Close()
 ;
 s QHandle=""
 k %trakobjects(+rs) //SYSTEMOREF
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="VBFindLEExecute">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,desc:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,rs
 s work=""
 ;
 s user=$lb(desc)
 ;
 s rs=##Class(%Library.ResultSet).%New("websys.UserDefinedFunctions:VBFindLESimple")
 s %trakobjects(+rs)=rs //SYSTEMOREF
 d rs.Execute(desc)
 ;
 s work=$lb(rs)
 s QHandle=$lb(0,user,work)
 ;
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="VBFindLEFetch">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<PlaceAfter>VBFindLEExecute</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,rs,desc,ID,Name,UpdateDate,UpdateTime
 s (desc,ID,Name,UpdateDate,UpdateTime)=""	
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s desc=$li(user,1)
 s rs=$li(work,1)
 s rs=$g(%trakobjects(+rs)) //SYSTEMOREF
 ;
 i 'rs.Next() s AtEnd=1,Row="" q $$$OK
 ;
 s ID=rs.Data("ID")
 s Name=rs.Data("Name")
 s UpdateDate=##class(websys.Conversions).DateLogicalToHtml(rs.Data("UpdateDate"))
 s UpdateTime=##class(websys.Conversions).TimeLogicalToHtml(rs.Data("UpdateTime"))
 s Row=$lb(ID,Name,UpdateDate,UpdateTime)
 s work=$lb(rs)
 s QHandle=$lb(AtEnd,user,work)
 ;
 q $$$OK
]]></Implementation>
</Method>

<Query name="VBFindLE">
<Type>%Library.Query</Type>
<FormalSpec>desc:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery/>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Name:%Library.String,UpdateDate:%String,UpdateTime:%String"/>
</Query>

<Query name="VBFindLESimple">
<Type>%Library.SQLQuery</Type>
<FormalSpec>name:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ID, ClassName,Event,UpdateDate,UpdateTime
FROM UserDefinedFunctions
WHERE (ClassName %STARTSWITH :name)
ORDER BY ClassName,Event</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Name:%Library.String,Event:%String,UpdateDate:%String,UpdateTime:%String"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^websys.UserDefinedFunctionsD</DataLocation>
<DefaultData>UserDefinedFunctionsDefaultData</DefaultData>
<IdLocation>^websys.UserDefinedFunctionsD</IdLocation>
<IndexLocation>^websys.UserDefinedFunctionsI</IndexLocation>
<StreamLocation>^websys.UserDefinedFunctionsS</StreamLocation>
<Data name="UserDefinedFunctionsClassName">
<Attribute>%%CLASSNAME</Attribute>
<Structure>node</Structure>
<Subscript>0</Subscript>
</Data>
<Data name="UserDefinedFunctionsDefaultData">
<Structure>listnode</Structure>
<Value name="1">
<Value>CacheScript</Value>
</Value>
<Value name="2">
<Value>ClassName</Value>
</Value>
<Value name="3">
<Value>Event</Value>
</Value>
<Value name="4">
<Value>UpdateDate</Value>
</Value>
<Value name="5">
<Value>UpdateTime</Value>
</Value>
<Value name="6">
<Value>UpdateUser</Value>
</Value>
</Data>
<Property name="CacheScript"/>
<Property name="ClassName"/>
<Property name="Event"/>
<Property name="UpdateDate"/>
<Property name="UpdateTime"/>
<Property name="UpdateUser"/>
</Storage>
</Class>
</Export>
