<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="websys.Dictionary.T1" type="MAC" languagemode="0" generated="1"><![CDATA[
 ; websys.Dictionary.T1
 ; Filing Methods for table: websys.Dictionary (extent = websys.Dictionary) - Do Not Edit.  Compiled April 20, 2010 23:04:43
 ; Filing Methods for table: websys.Dictionary (extent = websys.Dictionary)
#classmethod websys.DictionaryTableCode
#classcontext websys.Dictionary
#include %occExtent
#include %occInclude
#include %systemInclude
#import websys
%delete(%rowid,%check,%tstart=1,%mv=0) n bva,%cnt,%d,%e,%ele,%itm,%key,%l,%oper,%pos,%s,sn,sqlcode,subs s %oper="DELETE",sqlcode=0,%ROWID=%rowid,%d(1)=%rowid,%e(1)=%rowid,%l=$c(0)
 k:'$TLEVEL %0CacheLock i '$a(%check,2) { n %ls i $i(%0CacheLock("websys.Dictionary"))>$zu(115,6) { l +^websys.DictionaryD:$zu(115,4) l:$t -^websys.DictionaryD s %ls=$s($t:2,1:0) } else { l +^websys.DictionaryD(%d(1)):$zu(115,4) s %ls=$t } s:%ls=2 $e(%check,2)=$c(1) s:%ls=1 $e(%l)=$c(1) i '%ls s SQLCODE=-110,%msg="Unable to acquire lock for "_%oper_" of table 'websys.Dictionary' on row with RowID = '"_$g(%d(1))_"'" q  } If %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } s $zt="%ETrap"
 d getold i sqlcode s SQLCODE=-106 g %EExit
 if %e(3)'="" s sn=$p(%e(3),$e(%e(3)),$l(%e(3),$e(%e(3)))-1) if "websys.Dictionary"'=sn n %f d %CopyIcolToName GOTO @("%PolymorphicDEL^"_$zutil(135,23,sn)_".T1")
 i '$a(%check),'$zu(115,7) d  i sqlcode s SQLCODE=sqlcode g %EExit
 . n %fk,%k,%p,%st,%t,%z s %k="",%p("%1")="%d(1),",%p("IDKEY")="%d(1),",%p("UniquePhraseIndex")="%e(2),"
 . f  q:sqlcode<0  s %k=$o(^oddEXTR("websys.Dictionary","n",%k)) q:%k=""  s %t="" f  s %t=$o(^oddEXTR("websys.Dictionary","n",%k,"f",%t)) q:%t=""  s %st=(%t="websys.Dictionary") s %fk="" f  s %fk=$o(^oddEXTR("websys.Dictionary","n",%k,"f",%t,%fk)) q:%fk=""  s %z=$g(^oddEXTR("websys.Dictionary","n",%k,"f",%t,%fk,61)) i %z'="",@("$$"_%z_"("_%p(%k)_",%k,%st)") s sqlcode=-124 q
 i '($a(%check,2)#2),$g(%0CacheLock("websys.Dictionary"))'>$zu(115,6) { i $g(%e(2))'="" { l +^websys.DictionaryI("UniquePhraseIndex",$zu(28,%e(2),7)):$zu(115,4) If $t { l -^websys.DictionaryI("UniquePhraseIndex",$zu(28,%e(2),7)) } Else { d ulerror("UniquePhraseIndex") q  }} }
 k ^websys.DictionaryD(%d(1))
 s sn(1)=$zu(28,%e(2),7) s sn(2)=%d(1) k ^websys.DictionaryI("UniquePhraseIndex",sn(1),sn(2))
 d gunlock TCOMMIT:%tstart&&($zu(115,1)=1)
 s SQLCODE=0 q
%insert(%d,%check,%inssel,%vco,%tstart=1,%mv=0) n bva,%cnt,%ele,%itm,%key,%l,%n,%oper,%pos,%s,sqlcode,sn,subs,icol s %oper="INSERT",sqlcode=0,%l=$c(0,0,0,0) i $d(%d(1)),'$zu(115,11) { i %d(1)'="" { s SQLCODE=-111,%msg="INSERT of Default Only RowID Field 'ID' not allowed" q ""  } k %d(1) }  d Normalize
 k:'$TLEVEL %0CacheLock If %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } s $zt="%ETrap"
 i '$a(%check) d  i sqlcode<0 s SQLCODE=sqlcode g %EExit
 . i $g(%vco)'="" d @%vco q:sqlcode<0
 . If $g(%d(2))'="" { If '$a(%check,2) { l +^websys.DictionaryI("UniquePhraseIndex",$zu(28,%d(2),7)):$zu(115,4) If $t { s $e(%l,3)=$c(1) } Else { d ulerror("UniquePhraseIndex") q  } } If $d(^websys.DictionaryI("UniquePhraseIndex",$zu(28,%d(2),7))) s sqlcode=-119,%msg="Table 'websys.Dictionary', Constraint 'UniquePhraseIndex' (Field 'Phrase') failed unique check" q  }
 If '$d(%d(1)) { s %d(1)=$i(^websys.DictionaryD) } ElseIf %d(1)>$g(^websys.DictionaryD) { If $i(^websys.DictionaryD,$zabs(%d(1)-$g(^websys.DictionaryD))) {}} ElseIf $d(^websys.DictionaryD(%d(1))) { s SQLCODE=-119,%msg="'ID' value not unique!  A value of "_%d(1)_" already exists for 'websys.Dictionary.ID'"  g %EExit }
 f icol=3,2 s:'$d(%d(icol)) %d(icol)=""
 i '$a(%check,2) { n %ls i $i(%0CacheLock("websys.Dictionary"))>$zu(115,6) { l +^websys.DictionaryD:$zu(115,4) l:$t -^websys.DictionaryD s %ls=$s($t:2,1:0) } else { l +^websys.DictionaryD(%d(1)):$zu(115,4) s %ls=$t } s:%ls=2 $e(%check,2)=$c(1) s:%ls=1 $e(%l)=$c(1) i '%ls s SQLCODE=-110,%msg="Unable to acquire lock for "_%oper_" of table 'websys.Dictionary' on row with RowID = '"_$g(%d(1))_"'" g %EExit }
 s ^websys.DictionaryD(%d(1))=$lb(%d(2))
 s:(%d(3)'="") ^websys.DictionaryD(%d(1),0)=%d(3)
 i '$a(%check,3) { s sn(1)=$zu(28,%d(2),7) s sn(2)=%d(1) s ^websys.DictionaryI("UniquePhraseIndex",sn(1),sn(2))=%d(3) }
 d gunlock2
 d gunlock TCOMMIT:%tstart&&($zu(115,1)=1)
 s SQLCODE=0 q %d(1) 			// %insert-end
%update(%rowid,%check,%d,%vco,%tstart=1,%quick=0,%mv=0) n %e,bva,%cnt,%ele,%itm,%key,%l,%n,%oper,%pos,%s,icol,s,sn,sqlcode,subs,t s %oper="UPDATE",sqlcode=0,%ROWID=%rowid,$e(%e,1)=$c(0),%l=$c(0,0,0,0) d Normalize i $d(%d(1)),%d(1)'=%rowid s SQLCODE=-107,%msg="UPDATE of RowID Field 'ID' not allowed" q
 f icol=2:1:3 s $e(%e,icol)=$c($d(%d(icol)))
 s %d(1)=%rowid,%e(1)=%rowid
 k:'$TLEVEL %0CacheLock i '$a(%check,2) { n %ls i $i(%0CacheLock("websys.Dictionary"))>$zu(115,6) { l +^websys.DictionaryD:$zu(115,4) l:$t -^websys.DictionaryD s %ls=$s($t:2,1:0) } else { l +^websys.DictionaryD(%d(1)):$zu(115,4) s %ls=$t } s:%ls=2 $e(%check,2)=$c(1) s:%ls=1 $e(%l)=$c(1) i '%ls s SQLCODE=-110,%msg="Unable to acquire lock for "_%oper_" of table 'websys.Dictionary' on row with RowID = '"_$g(%d(1))_"'" q  } If %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } s $zt="%ETrap"
 if $g(%vco)="" { d getold i sqlcode { s SQLCODE=-109 g %EExit } f icol=3,2 { s:'$d(%d(icol)) %d(icol)=%e(icol) s:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }} else { d getoldall i sqlcode { s SQLCODE=-109 g %EExit } f icol=2,3 { s:'$d(%d(icol)) %d(icol)=%e(icol) s:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }}
 if %e(3)'="" s sn=$p(%e(3),$e(%e(3)),$l(%e(3),$e(%e(3)))-1) if "websys.Dictionary"'=sn n %f d %CopyIcolToName GOTO @("%PolymorphicUPD^"_$zutil(135,23,sn)_".T1")
 d:'$a(%check)  i sqlcode s SQLCODE=sqlcode g %EExit
 . i $g(%vco)'="" d @%vco q:sqlcode<0
 . i ($a(%e,2)),$g(%d(2))'="" { i '($a(%check,2)#2),$g(%0CacheLock("websys.Dictionary"))'>$zu(115,6) { l +^websys.DictionaryI("UniquePhraseIndex",$zu(28,%d(2),7)):$zu(115,4) i $t { s $e(%l,3)=$c(1) } else { d ulerror("UniquePhraseIndex") q  } l +^websys.DictionaryI("UniquePhraseIndex",$zu(28,%e(2),7)):$zu(115,4) If $t { l -^websys.DictionaryI("UniquePhraseIndex",$zu(28,%e(2),7)) } Else { d ulerror("UniquePhraseIndex") q  }} i $d(^websys.DictionaryI("UniquePhraseIndex",$zu(28,%d(2),7))),'$d(^websys.DictionaryI("UniquePhraseIndex",$zu(28,%d(2),7),%d(1))) { s sqlcode=-120,%msg="Table 'websys.Dictionary', Constraint 'UniquePhraseIndex' (Field 'Phrase') failed unique check" q  } }
 . n %fk,%st,%t,%y i ($a(%e,2)),'$zu(115,7) s %t="" f  s %t=$o(^oddEXTR("websys.Dictionary","n","UniquePhraseIndex","f",%t)) q:%t=""  s %st=(%t="websys.Dictionary") s %fk="" f  s %fk=$o(^oddEXTR("websys.Dictionary","n","UniquePhraseIndex","f",%t,%fk)) q:%fk=""  s %y=$g(^oddEXTR("websys.Dictionary","n","UniquePhraseIndex","f",%t,%fk,61)) i %y'="",@("$$"_%y_"(%e(2),%d(2),""UniquePhraseIndex"",%st)") s sqlcode=-123 q
 s:$a(%e,2) ^websys.DictionaryD(%d(1))=$lb(%d(2))
 s:$a(%e,3) ^websys.DictionaryD(%d(1),0)=%d(3)
 i '$a(%check,3) { i $a(%e,2) { s sn(1)=$zu(28,%e(2),7) s sn(2)=%d(1) k ^websys.DictionaryI("UniquePhraseIndex",sn(1),sn(2))  }
 i $a(%e,2)||$a(%e,3) { s sn(1)=$zu(28,%d(2),7) s sn(2)=%d(1) s ^websys.DictionaryI("UniquePhraseIndex",sn(1),sn(2))=%d(3)  } }
 d gunlock2
 d gunlock TCOMMIT:%tstart&&($zu(115,1)=1)
 s SQLCODE=0 q
%1(%p1,lockonly=0) q $d(^websys.DictionaryD(%p1))
IDKEY(%p1,lockonly=0) q $d(^websys.DictionaryD(%p1))
UniquePhraseIndex(%p1,lockonly=0) n id s id=$$%Q2UniquePhraseIndex($lb(%p1),1) q:SQLCODE $s('lockonly:0,1:1) i '$$%getlock(id,1) { s sqlcode=-114,%msg="SQLCODE=-114:  Cannot acquire lock on referenced row for referenced key WEBSYS.DICTIONARY:UNIQUEPHRASEINDEX" q 0 } If 'lockonly { n qv s qv=$d(^websys.DictionaryI("UniquePhraseIndex",$zu(28,%p1,7))) d %ReleaseLock(id,1) q qv } Else { d %ReleaseLock(id,1) q 1 }
%PurgeIndices(indices="") q ##class(websys.Dictionary).%PurgeIndices(indices)
%BuildIndices(indices="") q ##class(websys.Dictionary).%BuildIndices(indices)
%CheckUniqueIndices(indices,ok) n d,g,n,o s d=0
 s ok=1 q
%AcquireLock(%rowid,s) n %d s %d(1)=%rowid i $g(s) { l +^websys.DictionaryD(%d(1))#"S":$zu(115,4) q $t } l +^websys.DictionaryD(%d(1)):$zu(115,4) q $t
%AcquireTableLock(s,SQLCODE) i $g(s) { l +^websys.DictionaryD#"S":$zu(115,4) If $t { s SQLCODE=0 q 1 } Else { s SQLCODE=-110,%msg="Unable to acquire table lock for table 'websys.Dictionary'" q 0 }} l +^websys.DictionaryD:$zu(115,4) If $t { s SQLCODE=0 q 1 } Else { s SQLCODE=-110,%msg="Unable to acquire table lock for table 'websys.Dictionary'" q 0 }
%ReleaseLock(%rowid,s,i) n %d s %d(1)=%rowid i '$g(i),'$g(s) { l -^websys.DictionaryD(%d(1)) q  } elseif $g(i),'$g(s) { l -^websys.DictionaryD(%d(1))#"I" s:$g(%0CacheLock("websys.Dictionary")) %0CacheLock("websys.Dictionary")=%0CacheLock("websys.Dictionary")-1 q  } elseif '$g(i),$g(s) { l -^websys.DictionaryD(%d(1))#"S" q  } else { l -^websys.DictionaryD(%d(1))#"IS" s:$g(%0CacheLock("websys.Dictionary")) %0CacheLock("websys.Dictionary")=%0CacheLock("websys.Dictionary")-1 q  }
%ReleaseTableLock(s,i) i '$g(i),'$g(s) { l -^websys.DictionaryD q 1 } elseif $g(i),'$g(s) { l -^websys.DictionaryD#"I" q 1 } elseif '$g(i),$g(s) { l -^websys.DictionaryD#"S" q 1 } else { l -^websys.DictionaryD#"IS" q 1 }
%getlock(%rowid,%s) k:'$TLEVEL %0CacheLock i $i(%0CacheLock("websys.Dictionary"))>$zu(115,6) { l +^websys.DictionaryD:$zu(115,4) l:$t -^websys.DictionaryD q $s($t:2,1:0) } q:$$%AcquireLock(%rowid,$g(%s)) 1 q 0
gunlock l:$a(%l) -^websys.DictionaryD(%d(1))
 q
gunlock2 l:$a(%l,3) -^websys.DictionaryI("UniquePhraseIndex",$zu(28,%d(2),7))#"I" q
%nBuild s %n=$lb(,"ID","Phrase","x__classname")
 q
Normalize n %f ;Normalize all fields
 s:$g(%d(2))'="" %d(2)=$e(%d(2),1,200)  q
missing(fname) s sqlcode=-108,%msg="'"_fname_"' in table '"_"websys"_"."_"Dictionary"_"' is a required field" q
ulerror(cname) s sqlcode=-110,%msg="Unable to obtain lock to "_$s(%oper="DELETE":"maintain",1:"check")_" uniqueness of constraint '"_cname_"'" q
%ETrap s $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_"Error occuring during "_%oper_" in '"_"websys"_"."_"Dictionary"_"':  $ZE="_$ze i $ze["<FRAMESTACK>" { s %msg="Error '"_$ze_"' occurred during "_%oper_" in '"_"websys"_"."_"Dictionary"_" - Process HALTed" d ##Class(%SYS.System).WriteToConsoleLog(%msg) i ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { w !,%msg h 3 } HALT  } g %EExit
%EExit d:%oper'="DELETE" gunlock2 d gunlock If %tstart,$zu(115,1)=1,$TLEVEL { s %tstart=0 TROLLBACK 1 }  q:%oper="INSERT" "" q
getold ; Get old data values
 #sqlcompile SELECT=Logical
#import websys
 &sql(SELECT x__classname,Phrase INTO :%e() FROM websys.Dictionary WHERE ID=:%rowid) s sqlcode=SQLCODE q
getoldall ; Get all old data values
 #sqlcompile SELECT=Logical
#import websys
 &sql(SELECT Phrase,x__classname INTO :%e() FROM websys.Dictionary WHERE ID=:%rowid) s sqlcode=SQLCODE q
%CopyIcolToName  s:$d(%d(1)) %f("ID")=%d(1) s:$d(%d(2)) %f("Phrase")=%d(2) s:$d(%d(3)) %f("x__classname")=%d(3) q
%QuickInsert(d,%nolock=0,pkey=0,parentpkey=0) // Insert new row with values d(icol)
 s:%nolock=2 %nolock=0
 s %ROWID=$$%insert^websys.Dictionary.T1(.d,$c(0,%nolock=1,0)),%ROWCOUNT='SQLCODE,%qrc=SQLCODE k d q
%QuickBulkInsert(%inscall,%nolock=0) // Insert multiple new rows with values %qd(icol)
 n c,call,nc,nr,%qd,r,x s:%nolock=2 %nolock=0 s nr=$zobjexport(12) f r=1:1:nr { s nc=$zobjexport(12) k %qd f c=1:1:nc { s:$zobjexport(17) %qd(c+1)=$zobjexport(12) } d @%inscall s x=$zobjexport($s(%qrc:-1,1:%ROWID),18) } q  
%QuickUpdate(%rowid,d,%nolock=0,pkey=0) // Update row with SQLRowID=%rowid with values d(icol)
 s:%nolock=2 %nolock=0
 d %update^websys.Dictionary.T1(%rowid,$c(0,%nolock=1,0),.d,,,1) s %ROWCOUNT='SQLCODE s:SQLCODE=100 SQLCODE=0 s %qrc=SQLCODE k d q
%QuickBulkUpdate(%updcall,%nolock=0) // Update multiple new rows with values %qd(icol)
 n c,call,nc,nr,%qd,r,x s:%nolock=2 %nolock=0 s nr=$zobjexport(12) f r=1:1:nr { s %rowid=$zobjexport(12),nc=$zobjexport(12) k %qd f c=1:1:nc { s:$zobjexport(17) %qd(c+1)=$zobjexport(12) } d @%updcall s x=$zobjexport($s(%qrc:-1,1:%ROWID),18) q:%qrc  } q  
%QuickDelete(%rowid,%nolock=0,pkey=0) // Delete row where SQLRowID=%rowid
 s:%nolock=2 %nolock=0
 d %delete^websys.Dictionary.T1(%rowid,$c(0,%nolock=1,0))
 If SQLCODE=-106 { s %qrc=0,%ROWCOUNT=0 } ElseIf SQLCODE<0 { s %qrc=-SQLCODE,%ROWCOUNT=0 } Else { s %ROWCOUNT=1,%qrc=SQLCODE } q
%QuickLoad(%rowid,%nolock=0,pkey=0,skipnewqout=0) // Get non-hidden fields from row where SQLRowID=%rowid
 n d,i,il,subs,t s:%nolock=2 %nolock=1
 i %nolock=0 { i '$$%AcquireLock^websys.Dictionary.T1(%rowid) { s %qrc=114,%msg="Unable to acquire exclusive lock on table websys.Dictionary for RowID value: "_%rowid,%ROWCOUNT=0 q  } s:$zu(115,2) il=$zu(115,2,0) }
#sqlcompile SELECT=ODBC
 &sql(SELECT %INTERNAL(ID),Phrase,x__classname INTO :d(1),:d(2),:d(3) FROM websys.Dictionary WHERE %ID = :%rowid)
 i SQLCODE { i %nolock=0 { d %ReleaseLock^websys.Dictionary.T1(%rowid,0,1) d:$g(il) $zu(115,2,il) } s %ROWCOUNT=0 s:SQLCODE<0 SQLCODE=-SQLCODE s %qrc=SQLCODE q  }
 If %nolock=0 { If $zu(115,1)=1 { TSTART  } ElseIf '$TLEVEL,$zu(115,1)=2 { TSTART  }}
 s i=-1 f  { s i=$o(d(i)) q:i=""  s d=$zobjexport(d(i),18) } s %qrc=0,%ROWCOUNT=1 i %nolock=0 { d %ReleaseLock^websys.Dictionary.T1(%rowid,0,0) d:$g(il) $zu(115,2,il) } q
%QuickBulkLoad(%rowidlist,%nolock=0,pkey=0) // QuickLoad multiple rows
 n i,ql,rc,%rowid s:%nolock=2 %nolock=0 s rc=0,ql=$g(^oddSQL("websys","Dictionary","QL")) s $p(ql,",",4)="1)"
 f i=2:1:$lg(%rowidlist)+1 { s %rowid=$lg(%rowidlist,i) d @ql If SQLCODE=0 { s rc=rc+1 } Else { q  } } s %ROWCOUNT=rc q
%Q2UniquePhraseIndex(%con,internal=0) // Get ROWID value for UNIQUE Key UniquePhraseIndex value given in %con
 n %d,id,rtm s rtm=$zu(115,5,$s(internal:0,1:1)) s %d(2)=$lg(%con,1)
#sqlcompile SELECT=RUNTIME
 s %ROWCOUNT=0 s:'internal %qrc=0 &sql(SELECT %ID INTO :id FROM websys.Dictionary WHERE Phrase = :%d(2))
 d $zu(115,5,rtm) q:internal $g(id) i SQLCODE { s:SQLCODE<0 %qrc=-SQLCODE s:'%ROWCOUNT&&(SQLCODE=100) id="",%qrc=0 } s d=$zobjexport(id,18) q
SQLUPPER(v,l) PUBLIC { q $zu(28,v,7,$g(l,32767)) }
ALPHAUP(v,r) PUBLIC { q $zu(28,v,6) }
STRING(v,l) PUBLIC { q $zu(28,v,9,$g(l,32767)) }
SQLSTRING(v,l) PUBLIC { q $zu(28,v,8,$g(l,32767)) }
UPPER(v) PUBLIC { q $zu(28,v,5) }
MVR(v) PUBLIC { q $zu(28,v,2) }
#endclasscontext
#endclassmethod
]]></Routine>
</Export>
