<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="websys.Menu">
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract,XML.Abstract</Super>
<TimeCreated>60218,47035.152901</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>528</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="EXTENTSIZE">
<Description><![CDATA[
Default save method used for updating the database for Components of type Edit.<br>
<br>
The compref is the  component reference which is the string from which we can deduce the instance of<BR>
websysComponent<BR>
websysComponentItem<BR>
id is the id for the instance of class we wish to update.]]></Description>
<Default>7550</Default>
</Parameter>

<Parameter name="SQLCODE">
<Final>0</Final>
<Default>Name</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Final>0</Final>
<Default>Caption</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Parameter name="xmlidentifiedby">
<Description>
Used in conjunction with XMLId method to unqiuely identify a record.
By default ..%Id() is used unless other properties are specified. A comma separated list may be provided and processed by overridding XMLId method</Description>
<Final>0</Final>
<Default>%Id()</Default>
</Parameter>

<Parameter name="xmltoclass">
<Description>
Mapping from XML to Class</Description>
<Final>0</Final>
<Default>menu</Default>
</Parameter>

<Parameter name="xmltypeChart">
<Final>0</Final>
<Default>IGNORE</Default>
</Parameter>

<Parameter name="xmltypeChartBook">
<Final>0</Final>
<Default>IGNORE</Default>
</Parameter>

<Parameter name="xmltypeConditionalExpression">
<Final>0</Final>
<Default>CDATA</Default>
</Parameter>

<Parameter name="xmltypeLinkReport">
<Final>0</Final>
<Default>IGNORE</Default>
</Parameter>

<Parameter name="xmltypeValueExpression">
<Final>0</Final>
<Default>CDATA</Default>
</Parameter>

<Parameter name="xmltypeWorklist">
<Default>IGNORE</Default>
</Parameter>

<Index name="CaptionName">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>Caption,Name</Properties>
<Unique>0</Unique>
</Index>

<Index name="SubMenuOf1">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>SubMenuOf</Properties>
<Unique>0</Unique>
</Index>

<Index name="SubMenuOf2">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>SubMenuOf,Sequence</Properties>
<Unique>0</Unique>
</Index>

<Index name="UniqueNameIndex">
<Description>
Uniqueness index for property Name</Description>
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>Name</Properties>
<Unique>1</Unique>
</Index>

<Property name="Caption">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<InitialExpression>""</InitialExpression>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Chart">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ChartBook">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ConditionalExpression">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Image">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="JavascriptFunction">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="LinkComponent">
<Description>
Used in conjunction with LinkUrl of websysDefault.asp.
If this property is set then LinkLinkUrl is assumes to be websysDefault.ASP</Description>
<Type>websys.Component</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="LinkReport">
<Type>websys.Report</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="LinkUrl">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Method">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Name">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN" value="99"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="PrintPreview">
<Type>%Library.Boolean</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="Sequence">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ShortcutKey">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ShowInNewWindow">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="SubMenuOf">
<Type>websys.Menu</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="Target">
<Description>
name of browser window frame to send the link</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Type">
<Description>
a value of either: SideMenu, ComponentMenu, HeaderMenu
this will be automatically calculated on update</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="UpdateDate">
<Type>%Library.Date</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="UpdateTime">
<Type>%Library.Time</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="UpdateUser">
<Type>User.SSUser</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="ValueExpression">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="WorkFlow">
<Description>
Name of workflow</Description>
<Type>websys.WorkFlow</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="Worklist">
<Type>%String</Type>
<Collection/>
<Relationship>0</Relationship>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Method name="%OnBeforeSave">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Save</METHOD> method to 
provide notification that the object is being saved. It is called before 
any data is written to disk.

<P><VAR>insert</VAR> will be set to 1 if this object is being saved for the first time.

<P>If this method returns an error then the call to <METHOD>%Save</METHOD> will fail.]]></Description>
<CodeMode>code</CodeMode>
<FormalSpec>insert:%Boolean</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	;TN:10-July-2003: sets the Type of menu
	;find the topmost parent menu
	;quit with error if submenuof is child of current menu
	n tmp,err
	s tmp=%this,err=""
	f  {
		q:'(tmp.SubMenuOf)
		;quit if parent menu is itself
		i tmp=tmp.SubMenuOf s err="SubMenuOf menu is itself" q
		;quit if parent menu loops back to this menu (parent menu is child of this menu)
		i %this=tmp.SubMenuOf s err="SubMenuOf menu is a child of this menu" q
		s tmp=tmp.SubMenuOf
	}
	i err'="" q $$Error^%apiOBJ(5524,err,"SubMenuOf")
	
	i tmp.%Id()=1 {
		s ..Type="SideMenu"
	} elseif $zcvt($e(tmp.Name,1,7),"U")="SYSTEM." {
		s ..Type="ComponentMenu"
	} else {
		s ..Type="HeaderMenu"
	}
	q $$$OK
]]></Implementation>
</Method>

<Method name="CaptionGet">
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 i '$l(i%Name) q i%Caption
 q $s($d(t(i%Name)):$p(t(i%Name),"^"),1:i%Caption)
]]></Implementation>
</Method>

<Method name="CopyMenu">
<Description>
Creates a new menu from an existing menu

origmenuid - the id of the original menu to copy from
newname - the name for the newly created menu
newcaption - the caption for the newly created menu
newid - a reference pointer to the id of the newly created menu
newsubmenuid - if not null, the newly created menu takes on this submenu instead of that of the original menu</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[origmenuid:%Library.String,newname:%Library.String,newcaption:%Library.String,&newid:%Library.String="",newsubmenuid:%Library.String=""]]></FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 i $g(origmenuid)="" q
 i $g(newname)="" q
 ;
 n origmenu,menu,save,err,j,newmenuid,origwkfl,origwkflid,wkfl,newwkflname,wkflitem,origitem,newwkflid,contx
 //check to see unique newname
 s newmenuid=##Class(websys.Menu).GetIdFromCodeOrDescription(newname)
 //?? quit if not unique or use the same menu??
 //?? ...currently use the same menu
 s origmenu=##Class(websys.Menu).%OpenId(origmenuid,0)
 i origmenu d
 .if (newmenuid'="") s menu=##Class(websys.Menu).%OpenId(newmenuid)
 .if (newmenuid="") s menu=##Class(websys.Menu).%New()
 .s menu.Caption=$s(newcaption'="":newcaption,1:origmenu.Caption)
 .i origmenu.Chart d menu.ChartSetObjectId(origmenu.Chart.%Id())
 .i origmenu.ChartBook d menu.ChartBookSetObjectId(origmenu.ChartBook.%Id())
 .s menu.ConditionalExpression=origmenu.ConditionalExpression
 .s menu.Image=origmenu.Image
 .s menu.JavascriptFunction=origmenu.JavascriptFunction
 .i origmenu.LinkComponent d menu.LinkComponentSetObjectId(origmenu.LinkComponent.%Id())
 .i origmenu.LinkReport d menu.LinkReportSetObjectId(origmenu.LinkReport.%Id())
 .s menu.LinkUrl=origmenu.LinkUrl
 .s menu.Method=origmenu.Method
 .s menu.Name=newname
 .s menu.PrintPreview=origmenu.PrintPreview
 .s menu.Sequence=origmenu.Sequence
 .s menu.ShortcutKey=origmenu.ShortcutKey
 .s menu.ShowInNewWindow=origmenu.ShowInNewWindow
 .i newsubmenuid {d menu.SubMenuOfSetObjectId(newsubmenuid)} elseif origmenu.SubMenuOf {d menu.SubMenuOfSetObjectId(origmenu.SubMenuOf.%Id())}
 .s menu.Target=origmenu.Target
 .s menu.ValueExpression=origmenu.ValueExpression
 .i origmenu.WorkFlow d
 ..s origwkfl=origmenu.WorkFlow
 ..s origwkflid=origwkfl.%Id()
 ..d menu.WorkFlowSetObjectId(origwkflid)
 ..s newwkflname=origwkfl.Name
 ..if $l(newwkflname,".")=1 {s newwkflname=$p(newname,".",1)_"."_newwkflname} else {s $p(newwkflname,".",1)=$p(newname,".",1)}
 ..s newwkflid=##Class(websys.WorkFlow).GetIdFromCodeOrDescription(newwkflname)
 ..s wkfl=##Class(websys.WorkFlow).%OpenId(newwkflid,0)
 ..if 'wkfl s wkfl=##Class(websys.WorkFlow).%New()
 ..s wkfl.Name=newwkflname
 ..d wkfl.WorkFlowItems.Clear()
 ..f j=1:1:origwkfl.WorkFlowItems.Count() d
 ...s origitem=origwkfl.WorkFlowItems.GetAt(j)
 ...if origitem,origitem.Item d
 ....s wkflitem=##Class(websys.WorkFlowItem).%New()
 ....d wkflitem.ItemSetObjectId(origitem.Item.%Id())
 ....s wkflitem.TransitionExpression=origitem.TransitionExpression
 ....s wkflitem.ConditionalExpression=origitem.ConditionalExpression
 ....d wkfl.WorkFlowItems.Insert(wkflitem)
 ....d wkflitem.%Close()
 ..s wkfl.UpdateDate=+$h
 ..s wkfl.UpdateTime=+$p($h,",",2)
 ..i $d(%session) d wkfl.UpdateUserSetObjectId($g(%session.Data("LOGON.USERID")))
 ..s save=wkfl.%Save(0)
 ..i $$$ISERR(save),$d(msg) d
 ...s err=""
 ...Do DecomposeStatus^%apiOBJ(save,.err)
 ...f j=1:1:err d msg.AddItem("E",j,err(j))
 ..i save d
 ...s newwkflid=wkfl.%Id()
 ...d menu.WorkFlowSetObjectId(newwkflid)
 ...s contx="" f  s contx=$o(^websys.TranslationD("CONTEXT",contx))  q:contx=""  d
 ....i contx?1n.n1"W"1n.n,$p(contx,"W",2)=origwkflid d
 .....s compid=$p(contx,"W",1)
 .....k ^websys.TranslationD("CONTEXT",compid_"W"_newwkflid)
 .....m ^websys.TranslationD("CONTEXT",compid_"W"_newwkflid)=^websys.TranslationD("CONTEXT",contx)
 ..d wkfl.%Close()
 .s menu.UpdateDate=+$h
 .s menu.UpdateTime=+$p($h,",",2)
 .i $d(%session) d menu.UpdateUserSetObjectId($g(%session.Data("LOGON.USERID")))
 .s save=menu.%Save(0)
 .i $$$ISERR(save),$d(msg) d
 ..s err=""
 ..Do DecomposeStatus^%apiOBJ(save,.err)
 ..f j=1:1:err d msg.AddItem("E",j,err(j))
 .s:save newid=menu.%Id()
 .d menu.%Close()
 .d origmenu.%Close()
 quit
]]></Implementation>
</Method>

<Method name="EvaluateMethod">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>expression:%String</FormalSpec>
<Private>0</Private>
<ReturnType>%String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ; moved from HtmlEvent
 i expression="" q ""
 q @expression
]]></Implementation>
</Method>

<Method name="EvaluateValue">
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Private>0</Private>
<ReturnType>%String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 S $ZT="ERR"
 i ..ValueExpression="" q ""
 q @(..ValueExpression)
ERR q $ZE
]]></Implementation>
</Method>

<Method name="FindClose">
<Description>
Default implementation of Find Query.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<PlaceAfter>FindFetch</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ; Retrieve the current status
 n user,work
 n caption,name,submenuof,Component
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s caption=$li(user,1)
 s name=$li(user,2)
 s submenuof=$li(user,3)
 s Component=$li(user,3)
 ;
 ; id, caption, name, submenuof, submenuof name
 if submenuof'="" {
 &SQL(CLOSE BySubMen)
 } elseif Component'="" {
 &sql(CLOSE ByComponent)
 } else {
 &SQL(CLOSE ByName)
 }
 s QHandle=""
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="FindExecute">
<Description>
Find menus by cpation,name OR by submenuof.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,caption:%String="",name:%String="",submenuof:%String="",Component:%Library.String="",workflow:%Library.String=""]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work
 s user=$lb(caption,name,submenuof,Component,workflow)
 s work=""
 ;
 ; Query either by (submenuof) Or (caption,name) (not both)
 ;
 ; Be sure to keep these select parts of these in sync.	
 &sql(
 DECLARE ByWorkFlow CURSOR FOR 
 SELECT ID,Caption,Name,SubMenuOf,SubMenuOf->Caption,WorkFlow->Name
 FROM websys.Menu 
 WHERE WorkFlow->Name = :workflow 
 )
 &sql(
 DECLARE BySubMen CURSOR FOR 
 SELECT ID,Caption,Name,SubMenuOf,SubMenuOf->Caption,WorkFlow->Name
 FROM websys.Menu 
 WHERE SubMenuOf->Caption = :submenuof 
 )
 //ORDER BY Caption	)
 &sql( 
 DECLARE ByName CURSOR FOR 
 SELECT ID,Caption,Name,SubMenuOf,SubMenuOf->Caption as zCaption,WorkFlow->Name
 FROM websys.Menu 
 WHERE Caption %STARTSWITH :caption and Name %STARTSWITH :name 
 ORDER BY Caption	)
 ;
 //Order by Component
 &sql( 
 DECLARE ByComponent CURSOR FOR 
 SELECT ID,Caption,Name,SubMenuOf,SubMenuOf->Caption,WorkFlow->Name
 FROM websys.Menu 
 WHERE LinkComponent->Name %STARTSWITH :Component 
 )
 ;
 if workflow'="" {
 &sql(OPEN ByWorkFlow)
 } elseif submenuof'="" {
 &sql(OPEN BySubMen)
 } elseif Component'="" {
 &sql(OPEN ByComponent)
 } else {
 &sql(OPEN ByName)
 }
 ;
 s QHandle=$lb(0,user,work)
 ; 
 QUIT $$$OK
]]></Implementation>
</Method>

<Method name="FindFetch">
<Description>
Default implementation of Find Query.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<PlaceAfter>FindExecute</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ; Retrieve the current status
 n user,work,caption,name,submenuof,Component,workflow
 n fid,fcaption,fname,fsubmenuof,fsubmenuofname,fworkflow
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 s fworkflow=""
 ;
 s caption=$li(user,1)
 s name=$li(user,2)
 s submenuof=$li(user,3)
 s Component=$li(user,4)
 s workflow=$li(user,5)
 ;
 ; id, caption, name, submenuof, submenuof name
 if workflow'="" {
 &sql(FETCH ByWorkFlow INTO :fid, :fcaption, :fname, :fsubmenuof, :fsubmenuofname, :fworkflow)
 } elseif submenuof'="" {
 &sql(FETCH BySubMen INTO :fid, :fcaption, :fname, :fsubmenuof, :fsubmenuofname, :fworkflow)
 } elseif Component'="" {
 &sql(FETCH ByComponent INTO :fid, :fcaption, :fname, :fsubmenuof, :fsubmenuofname, :fworkflow)
 } else  {
 &sql(FETCH ByName INTO :fid, :fcaption, :fname, :fsubmenuof, :fsubmenuofname, :fworkflow)
 }
 ;
 i SQLCODE s AtEnd=1
 s Row=""
 i 'AtEnd s Row=$lb(fid,fcaption,fname,fsubmenuof,fsubmenuofname,fworkflow)
 s QHandle=$lb(AtEnd,user,work)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="ImageEx">
<Description><![CDATA[
Extended image.<br>
Treat image property as an expression to be evaluated.<br>
Formats include:<br>
Literal : webemr/rb.gif<br>
Function : $s(rs.GetDataByName("Type")="S":"webemr/super.gif",1:"webemr/other.gif")<br>
ClassMethod : ##Class(web.SomeClass).GetImage(rs.GetDataByName("Type"))<br>]]></Description>
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ; To avoid conversion issues with user defined stuff, derive...
 i $e(i%Image)="$" q ##Class(websys.Conversions).expressionEvaluate(i%Image)
 i $e(i%Image,1,2)="##" q ##Class(websys.Conversions).expressionEvaluate(i%Image)
 q i%Image
]]></Implementation>
</Method>

<Method name="InvokeMethod">
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ; moved from HtmlEvent
 i ..Method="" q
 ;
 n class,method,PX,j
 ;
 s class=$p(..Method,",",1)
 s method=$p(..Method,",",2)
 ;
 ; for non class methods we need to instantiate to get the oref
 ; thereore for now this will only work with class methods
 s oref=""
 ;
 f j=0:1 s p=$p(..Method,",",j+3) q:p=""  s PX(j+1)=..EvaluateMethod(p)
 ;
 ; Is there another way, is there a better way ?
 d:j=0 InvokeMethod^%apiOBJ(class,oref,method)
 d:j=1 InvokeMethod^%apiOBJ(class,oref,method,PX(1))
 d:j=2 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2))
 d:j=3 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2),PX(3))
 d:j=4 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2),PX(3),PX(4))
 d:j=5 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2),PX(3),PX(4),PX(5))
 d:j=6 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2),PX(3),PX(4),PX(5),PX(6))
 d:j=7 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2),PX(3),PX(4),PX(5),PX(6),PX(7))
 d:j=8 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2),PX(3),PX(4),PX(5),PX(6),PX(7),PX(8))
 d:j=9 InvokeMethod^%apiOBJ(class,oref,method,PX(1),PX(2),PX(3),PX(4),PX(5),PX(6),PX(7),PX(8),PX(9))
 Q
]]></Implementation>
</Method>

<Method name="LinkUrlSet">
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>val:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 i $zcvt(val,"L")[".csp" { //if its' a link to a csp page, store it as lowercase
 s i%LinkUrl=$zcvt(val,"L")
 } else {
 s i%LinkUrl=val
 }
 Q $$$OK
]]></Implementation>
</Method>

<Method name="OpenName">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>generator</CodeMode>
<FormalSpec>name:%String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 s %code=0
 n class
 s class=$p(%class,".",$l(%class,"."))
 i $$$CLASSabstract($$$MGINFO,%class) $$$GENERATE(" QUIT") QUIT $$$OK
 ;
 $$$GENERATE(" n id")
 $$$GENERATE(" s id=""""")
 $$$GENERATE(" &sql(SELECT ID INTO :id FROM "_class_" WHERE Name=:name)")
 $$$GENERATE(" i 'SQLCODE,id'="""" q ##Class("_%class_").%OpenId(id)")
 $$$GENERATE(" q """"")
 QUIT $$$OK
]]></Implementation>
</Method>

<Method name="ShowBar">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>id:%String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n rs,j,security,t
 ;
 ; Plenty of opportunity to simplify this... and ShowBarItem !!!Simon
 ;
 s security=$g(%session.Data("LOGON.GROUPMENUS")) s:security="" security=$zbitstr(20,0)
 ; Protect translation
 d ##Class(websys.Translation).Load("MENU",$g(%session.Data("LOGON.LANGID")),id)
 ;
 &html<<TABLE WIDTH=100%>>
 ;
 ; Iterate sub menus of menu
 s rs=##Class(%Library.ResultSet).%New("websys.Menu:Items")
 d rs.Execute(id)
 f j=1:1 q:'rs.Next()  d
 . n k,id,name
 . s id=rs.Data("ID")
 . ; check security
 . i +id>$zbitlen(security) q
 . i '$zbitget(security,+id) q
 . ;
 . &html<<TR id="tb<%=j%>" CLASS="tb"><TD NOWRAP>>
 . d ..ShowBarItem(1,j,id,0)
 . &html<</TD></TR>>
 . &html<<TR ID="tbi<%=j%>" CLASS="tbihide">>
 . &html<<TD NOWRAP>>
 . ; Iterate through all sub menu option
 . ;d
 . d ..ShowBarSub(id,j,0)
 . ;. ;n () To cope with nested cursors... watch out for weblink variables
 . ;. ;removed for Cache 5 as the exclusive new caused undefined errors
 . ;. ;n (id,name,%session,%request,j,t,security,TAPP,TIMAGES,TSCRIPTS,TSCRIPTSGEN)
 . ;. s rssub=##Class(%Library.ResultSet).%New("websys.Menu:Items")
 . ;. d rssub.Execute(id)
 . ;. f  q:'rssub.Next()  d
 . ;. . n id
 . ;. . s id=rssub.Data("ID")
 . ;. . i id'="" d
 . ;. . . ; check security
 . ;. . . i +id>$zbitlen(security) q
 . ;. . . i '$zbitget(security,+id) q
 . ;. . . ;
 . ;. . . d ..ShowBarItem(0,j,id)
 . ;. d rssub.%Close()
 . &html<</TD></TR>>
 d rs.%Close()
 &html<</TABLE>> 
 q
]]></Implementation>
</Method>

<Method name="ShowBarItem">
<Description>
Log 51261 - AI - 30-08-2005 : Modified Method to include reportmanagerdsn and configmanagerdsn.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>top:%String,cnt:%String,menuid:%String,sublevel:%Integer=0</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 #define tpagid                $i(^websys.Counters("tpagid"))
 n txt,LinkUrl,href,menu,val,exec,printoption,objconf,paramcomponent,urltocrystal,crystalviewertype,crystalpreviewmode,pathtoreports
 n reportmanagerdsn,configmanagerdsn
 // menu Separator
 s menu=##Class(websys.Menu).%OpenId(menuid,0)
 i menu.LinkUrl="-" &html<<HR>> d menu.%Close() q
 s val=1,exec=menu.ConditionalExpression d ##Class(websys.Conversions).expressionExecute(exec)
 i 'val d menu.%Close() q 
 //
 // Either it is a link, or it has sub menus (not both)
 //
 //KK 17/Dec/2002 Log 30023 User Print Options
 //show the print options screen only if the menu has an associated report without the parameter component
 s (paramcomponent,printoption,urltocrystal,crystalviewertype,crystalpreviewmode,pathtoreports,reportmanagerdsn,configmanagerdsn)=""
 ;s objconf=##Class(websys.Configuration).%OpenId(1,0)
 ;if objconf s printoption=objconf.EnablePrintOptions d objconf.%Close()
 s printoption=$lg(^websys.ConfigurationD(1),59)
 ; log 37272 - prepare path to crystal reports for preview
 s urltocrystal=$lg(^websys.ConfigurationD(1),65)
 s crystalviewertype=$lg(^websys.ConfigurationD(1),66)
 s crystalpreviewmode=$lg(^websys.ConfigurationD(1),67)   ;KK L:43422
 i crystalpreviewmode="RAS",urltocrystal="" s urltocrystal="../csp/"
 i urltocrystal="" s urltocrystal="../custom/"_$g(%session.Data("LOGON.SITECODE"))_"/reports/"
 i $e(urltocrystal,$l(urltocrystal))'="/" s urltocrystal=urltocrystal_"/"
 s crystalviewertype="init="_crystalviewertype
 i $lg(^websys.ConfigurationD(1),69)'="" s pathtoreports="&pathtoreports="_$lg(^websys.ConfigurationD(1),69) ;KK L:51032
 i pathtoreports="" s pathtoreports=$zconvert($lg(^websys.ConfigurationD(1),1),"l") s pathtoreports="&pathtoreports="_$p(pathtoreports,"scripts_gen",1)_"custom\"_$g(%session.Data("LOGON.SITECODE"))_"\reports"
 s configmanagerdsn=$lg(^websys.ConfigurationD(1),24)
 ;
 ; if report uses a component e.g. webcommon.DateFromTo.Custom set flag
 i menu.LinkReport,menu.LinkReport.ParameterComponent s paramcomponent=menu.LinkReport.ParameterComponent.%Id()
 ;
 i menu.LinkReport s reportmanagerdsn=menu.LinkReport.DSN
 ;
 ; CSP files
 s val=menu.EvaluateValue()
 if menu.LinkReport {
 if ##Class(%Library.Collation).Upper(menu.LinkReport.ParameterUrl)[".CSP" {
 //this is a bit strange - saves changing all the definitions
 s LinkUrl="websys.csp?a=a"_val_"&TMENU="_menu.%Id()_"&TPAGID="_$$$tpagid_"&CONTEXT=R"_menu.LinkReport.%Id()_"&PRINTPREVIEW="_menu.PrintPreview
 } elseif 'menu.PrintPreview {
 s LinkUrl="websys.print.auto.csp?RF=1&ReportCode="_menu.LinkReport.Code_val
 i menu.LinkReport.Type="Crystal" s LinkUrl=LinkUrl_menu.LinkReport.CrystalParamList()
 s menu.Target="TRAK_hidden"
 } else { //e.g. Crystal reports
 i menu.PrintPreview,crystalpreviewmode="RAS" {   ;KK L:43422
	     		s LinkUrl=$g(urltocrystal)_"crystalpreview.asp?a=a&report="_menu.LinkReport.ReportUrl_"&reportmanagerdsn="_reportmanagerdsn_"&configmanagerdsn="_configmanagerdsn
	     		s LinkUrl=LinkUrl_"&"_crystalviewertype_pathtoreports_val_menu.LinkReport.CrystalParamList()
	     		s LinkUrl=$zcvt(LinkUrl,"O","JS")
 }else{
 s LinkUrl=urltocrystal_menu.LinkReport.ReportUrl
 s LinkUrl=LinkUrl_"&"_crystalviewertype_pathtoreports_val_menu.LinkReport.CrystalParamList()
 s LinkUrl=$zcvt(LinkUrl,"O","JS")
 }
 }
 } else 	{
 if ##Class(%Library.Collation).Upper(menu.LinkUrl)[".CSP" {
 //this is a bit strange - saves changing all the definitions
 s LinkUrl="websys.csp?a=a"_val_"&TMENU="_menu.%Id()_"&TPAGID="_$$$tpagid
 } else { //e.g. Crystal reports
 s LinkUrl=menu.LinkUrl
 i LinkUrl'="",val'="" s LinkUrl=LinkUrl_"?"_val
 }
 }
 //
 //Top level menu
 if LinkUrl="" {
 W "<a href="""
 I menu.JavascriptFunction'="" {
 w "javascript:",menu.JavascriptFunction,"('",LinkUrl,"','",menu.ShowInNewWindow,"')"""
 } else {
 w:top "#"" onclick=""tb_sh('tbi",cnt,"'); return false;"""
 w:'top "#"""
 //w:top "<A HREF=""#"" onclick=""tb_sh('tbi",cnt,"');"""
 //w:'top "<A HREF=""#"""
 }
 } else {
 W "<a href="""
 I menu.JavascriptFunction'="" {
 i paramcomponent="",'menu.LinkReport w "javascript:",menu.JavascriptFunction,"('",LinkUrl,"','"
 i paramcomponent'="" w "javascript:",menu.JavascriptFunction,"('",LinkUrl,"','"
 i paramcomponent'="",menu.LinkReport,'menu.PrintPreview {
 w "TRAK_hidden" 
 } else {
 w menu.ShowInNewWindow
 }
 i paramcomponent="",menu.LinkReport {
 s menu.Target="TRAK_hidden"
 w "javascript:","websys_print","('",printoption,"','",LinkUrl,"','","params","','",menu.Target,"','",menu.JavascriptFunction    
 }
 w "')"""
 } elseif menu.ShowInNewWindow'="" {
	 	i menu.LinkReport,menu.PrintPreview,crystalpreviewmode="Disable" { ;KK L:43422
		 	w "#"" onClick=""javascript:alert('Previewing Crystal Reports is disabled');"""
	 	} else {
 w "#"" onClick=""websys_lu('",LinkUrl,"',false,'",menu.ShowInNewWindow,"');ReleaseFieldFocus(top.frames[1]);"""
	 	}
 } else {
 i paramcomponent="",menu.LinkReport {
 i 'menu.PrintPreview {
 s menu.Target="TRAK_hidden"
 if menu.LinkReport.Type'="Other" {
 w "javascript:","websys_print","('",printoption,"','",LinkUrl,"','","params","','",menu.Target,"','",menu.JavascriptFunction,"');"""   
 } else {
 w LinkUrl,""""
 w " target='",menu.Target,"'"
 }					    	
 } else {
	 			i menu.PrintPreview,crystalpreviewmode="Disable"{  ;KK L:43422
		 			w "javascript:alert('Previewing Crystal Reports is disabled');"""
	 			}else{
 w "#"" onClick=""websys_lu('",LinkUrl,"',false,'",menu.ShowInNewWindow,"');"""
	 			}
 }	
 } else {
 w LinkUrl,""""
 w " target='",$s(menu.Target="":"TRAK_main",1:menu.Target),"'"
 }
 }
 //i menu.ShowInNewWindow'="" w "<A HREF=""#"" onClick=""websys_lu('",LinkUrl,"',false,'",menu.ShowInNewWindow,"');"""
 ////If the link is javascript don;t show in "main"
 ///i menu.ShowInNewWindow="" w "<A HREF=""",LinkUrl,"""" w "target='",$s(menu.Target="":"main",1:menu.Target),"'"
 } 
 i menu.ShortcutKey'="" w " accesskey=",menu.ShortcutKey
 i menu.Name="" s menu.Name="UN-NAMED"
 s txt=menu.Caption
 // Derive the short cut key from the (optional) '&' in the caption translation
 i txt["&" {
 //set the shortcut key and remove the ampersand
 s menu.ShortcutKey=$e(txt,$f(txt,"&"))
 s txt=$tr(txt,"&","")
 }
 s txt=##Class(websys.Conversions).HtmlFriendly(txt)
 w " title=",txt
 w ">"
 n sl f sl=2:1:sublevel w "<img SRC=""../images/websys/blank.gif""  BORDER=""0"" >"
 w "<img SRC=""../images/",$s(menu.Image'="":menu.ImageEx(),1:"websys/blank.gif"),"""  BORDER=""0"" >"
 //SP//w "<img SRC=""../images/",$s(menu.Image'="":"tmp/snowman.gif",1:"../images/websys/blank.gif"),"""  BORDER=""0"" >"
 //
 // Show the translated caption else the default caption
 i menu.LinkUrl'="",$l(txt,menu.ShortcutKey) s txt=$p(txt,menu.ShortcutKey,1)_"<U>"_menu.ShortcutKey_"</U>"_$p(txt,menu.ShortcutKey,2,999)
 w txt
 &html<</A>>
 i 'top &html<<BR>>
 d menu.%Close() q
 q
]]></Implementation>
</Method>

<Method name="ShowBarSub">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>id:%String,j:%String,sublevel:%Integer,sublevelidx:%Integer=0</FormalSpec>
<Implementation><![CDATA[
 n rs,intid,subj,subname
 d ##Class(websys.Translation).Load("MENU",$g(%session.Data("LOGON.LANGID")),id)
 s subj=sublevelidx
 s rs=##Class(%Library.ResultSet).%New("websys.Menu:Items")
 d rs.Execute(id)
 f  {
	 q:'rs.Next()
	 s intid=rs.Data("ID")
	 s subj=subj+1
	 i +intid'>$zbitlen(security) {
		 i $zbitget(security,+intid) {
			 if $d(^websys.MenuI("SubMenuOf2",intid)) {
				 s subname=j_"_"_(sublevel+1)_"_"_subj
				 d ..ShowBarItem(1,subname,intid,sublevel)
				 &html<<TABLE><TR ID="tbi<%=subname%>" CLASS="tbihide"><TD NOWRAP>>
				 d ..ShowBarSub(intid,j,(sublevel+1),subj)
 &html<</TD></TR></TABLE>> 
			 } else {
				 d ..ShowBarItem(0,j,intid,sublevel)
			 }
		 }
	 }
 }
 d rs.%Close()
 q
]]></Implementation>
</Method>

<Method name="ShowMenuMS">
<Description>
Log 51261 - AI - 30-08-2005 : Modified Method to include reportmanagerdsn and configmanagerdsn.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>menulist:%String,title:%String="",componentid:%Library.String="",componentname:%Library.String=""</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 #define tpagid                $i(^websys.Counters("tpagid"))
 n j,item,list,frm,txt,img,security,menucnt,unqiueid,val,LinkUrl,printoption,objconf
 n crystalparams,paramcomponent,urltocrystal,crystalviewertype,crystalpreviewmode,pathtoreports
 n reportmanagerdsn,configmanagerdsn
 ;
 ; componentid is passed in so that it is available for use in menu expressions e.g help menu to make it context sensitive.
 ;
 s security=$g(%session.Data("LOGON.GROUPMENUS"))
 i security="" s security=$zbitstr(20,0)
 ;
 s list=$g(menulist)
 s formid=$g(formid)
 s menucnt=0
 s:list'="" list=list_","
 s (printoption,paramcomponent,urltocrystal,crystalviewertype,crystalpreviewmode,pathtoreports,reportmanagerdsn,configmanagerdsn)=""
 s printoption=$lg(^websys.ConfigurationD(1),59)
 ; log 37272 - prepare path to crystal reports for preview
 s urltocrystal=$lg(^websys.ConfigurationD(1),65)
 s crystalviewertype=$lg(^websys.ConfigurationD(1),66)
 s crystalpreviewmode=$lg(^websys.ConfigurationD(1),67)  ;KK L:43422
 i crystalpreviewmode="RAS",urltocrystal="" s urltocrystal="../csp/"
 i urltocrystal="" s urltocrystal="../custom/"_$g(%session.Data("LOGON.SITECODE"))_"/reports/"
 i $e(urltocrystal,$l(urltocrystal))'="/" s urltocrystal=urltocrystal_"/"
 s crystalviewertype="&init="_crystalviewertype
 i $lg(^websys.ConfigurationD(1),69)'="" s pathtoreports="&pathtoreports="_$lg(^websys.ConfigurationD(1),69) ;KK L:51032
 i pathtoreports="" s pathtoreports=$zconvert($lg(^websys.ConfigurationD(1),1),"l") s pathtoreports="&pathtoreports="_$p(pathtoreports,"scripts_gen",1)_"custom\"_$g(%session.Data("LOGON.SITECODE"))_"\reports"
 s configmanagerdsn=$lg(^websys.ConfigurationD(1),24)
 ;
 ; Only give developer options if inside trak.
 ;i $g(%CGIEVAR("SERVER_NAME"))["128.230" s list=list_"sys_developer,"
 ;Cache4.0 versions - we don't have developer menu options
 ;s list=list_"sys_developer,"
 s list=list_"System.Help"
 ;i list="help" s list="blank,"_list
 ;
 ; Make all the form properties available to the menu's
 ;SP;s frm=##Class(HtmlForm).%OpenId(formid)
 ;
 &html<<div class=tbToolbar>>
 s componentname=$tr(componentname,".","_")
 &html<<TABLE width="100%" id="m<%=componentname%>" name="m<%=componentname%>">>
 &html<<TR>>
 ;
 ; Show the title (in minimum amount of space)
 &html<<TD valign=middle width=1><IMG SRC="../images/websys/tbseparator.gif"></TD>>
 ; remove the title
 ;&html<<TD valign=middle width=1 NOWRAP class=tbTitle><%=title%></TD>>
 ;
 f j=1:1:$l(list,",") d  q:item=""
 . s item=$p(list,",",j)
 . d:item'=""
 . . n menu,rs,k
 . . s id="",menu=##Class(websys.Menu).OpenName(item)
 . . ;
 . . i menu s id=menu.%Id()
 . . i 'menu q
 . . i id="" d menu.%Close() q
 . . ; Protect translation
 . . n t
 . . d ##Class(websys.Translation).Load("MENU",$g(%session.Data("LOGON.LANGID")),id)
 . . ;; check security (only on submneus - this part does not work reliably so don;t just uncomment it !)
 . . ;i +id>$zbitlen(security) d menu.%Close() q
 . . ;i '$zbitget(security,+id)  d menu.%Close() q
 . . ;
 . . ; Only show menu bar if there is at least one menu item
 . . ; hence this strange structure
 . . s menucnt=menucnt+1
 . . s uniqueid=$i(^websys.Unique)
 . . i menucnt=1 d
 . . ;
 . . ; Show the top level menus
 . . ;&html<<TD NOWRAP valign=middle onmouseover="websys_show('<%=menucnt%>');" onmouseout="websys_hide('<%=menucnt%>');">>
 . . &html<<TD NOWRAP valign=middle onmouseover="websys_show('<%=uniqueid%>');" onmouseout="websys_hide('<%=uniqueid%>');">>
 . . ;&html<<div class=tbMenu id=tbMenu<%=menucnt%>>>
 . . &html<<div class=tbMenu id=tbMenu<%=uniqueid%>>>
 . . ; Show the translated caption else the default caption
 . . s txt=##Class(websys.Conversions).HtmlFriendly(menu.Caption)
 . . i $l(txt,menu.ShortcutKey) s txt=$p(txt,menu.ShortcutKey,1)_"<U>"_menu.ShortcutKey_"</U>"_$p(txt,menu.ShortcutKey,2,999)
 . . w txt
 . . d menu.%Close()
 . . ;
 . . ; Start of sub menus
 . . ;&html<<div class="tbMenuItemHide" ID="tbMenuItem<%=menucnt%>">>  uniqueid
 . . &html<<div class="tbMenuItemHide" ID="tbMenuItem<%=uniqueid%>">>  
 . . ; Iterate first level of submenu items
 . . s rs=##Class(%Library.ResultSet).%New("websys.Menu:Items")
 . . d rs.Execute(id)
 . . f k=1:1 q:'rs.Next()  d
 . . . n menu
 . . . s menu=##Class(websys.Menu).%OpenId(rs.Data("ID"))
 . . . ; check security
 . . . i +menu.%Id()>$zbitlen(security) d menu.%Close() q
 . . . i '$zbitget(security,+menu.%Id()) d menu.%Close() q
 . . . d
 . . . . n LinkUrl,val,exec
 . . . . ; menu Separator
 . . . . i menu.LinkUrl="-" &html<<div class="tbSeparator"></div>> q
 . . . . s val=1,exec=menu.ConditionalExpression d ##Class(websys.Conversions).expressionExecute(exec)
 . . . . i 'val q
 . . . . ;
 . . . . s paramcomponent=""
 . . . . i menu,menu.LinkReport,menu.LinkReport.ParameterComponent s paramcomponent=menu.LinkReport.ParameterComponent.%Id()
 . . . . s val=menu.EvaluateValue()
 . . . . if menu.LinkReport d
 . . . . . n rpt,rptid
 . . . . . s crystalparams=""
 . . . . . s rptid=##Class(websys.Report).GetIdFromLocation(menu.LinkReport.Code,$g(%session.Data("LOGON.CTLOCID")))
 . . . . . s rpt=##Class(websys.Report).%OpenId(rptid,0)
 . . . . . i rpt d
 . . . . . . s crystalparams=$s(rpt.Type="Crystal":rpt.CrystalParamList(),1:"")
 . . . . . . s reportmanagerdsn=rpt.DSN
 . . . . . . i ##Class(%Library.Collation).Upper(rpt.ParameterUrl)[".CSP" s LinkUrl="websys.csp?a=a"_val_"&TMENU="_menu.%Id()_"&TPAGID="_$$$tpagid_"&CONTEXT=R"_menu.%Id()_"&PRINTPREVIEW="_menu.PrintPreview i 1
 . . . . . . e  i 'menu.PrintPreview s LinkUrl="websys.print.auto.csp?RF=1&ReportCode="_menu.LinkReport.Code_val s menu.Target="TRAK_hidden" i 1
 . . . . . . e  i menu.PrintPreview,crystalpreviewmode="RAS" s LinkUrl=$g(urltocrystal)_"crystalpreview.asp?a=a&report="_menu.LinkReport.ReportUrl_crystalviewertype_pathtoreports_val_crystalparams_"&reportmanagerdsn="_reportmanagerdsn_"&configmanagerdsn="_configmanagerdsn i 1
 . . . . . . e  s LinkUrl=urltocrystal_rpt.ReportUrl i LinkUrl'="" s LinkUrl=LinkUrl_"?RF=1"_crystalviewertype_pathtoreports_val_crystalparams
 . . . . . . d rpt.%Close()
 . . . . if 'menu.LinkReport d
 . . . . . i ##Class(%Library.Collation).Upper(menu.LinkUrl)[".CSP" s LinkUrl="websys.csp?a=a"_val_"&TMENU="_menu.%Id()_"&TPAGID="_$$$tpagid_"&TRELOADID="_$g(TRELOADNEW) i 1
 . . . . . e  s LinkUrl=menu.LinkUrl i LinkUrl'="",val'="" s LinkUrl=LinkUrl_"?a=a"_val
 . . . . if $g(LinkUrl)="" w "<A HREF=""#""" i 1
 . . . . e  i $e(##Class(%Library.Collation).Upper(LinkUrl),1,7)="ONCLICK" w "<A HREF=""#"" ",LinkUrl i 1
 . . . . e  i paramcomponent'="" d
 . . . . . i menu.LinkReport d
 . . . . . . i menu.ShowInNewWindow'="" w "<A HREF=""#"" onClick=""websys_lu('",$zcvt(LinkUrl,"O","JS"),"',false,'",menu.ShowInNewWindow,"');""" i 1
 . . . . . . i menu.ShowInNewWindow="" w "<A HREF=""",LinkUrl,""""
 . . . . . . i 1
 . . . . e  i menu.JavascriptFunction'="" d
 . . . . . i 'menu.LinkReport w "<A HREF=""#"" onclick=""",menu.JavascriptFunction,"('",$zcvt(LinkUrl,"O","JS"),"','"
 . . . . . i menu.LinkReport,menu.PrintPreview d
 . . . . . . i crystalpreviewmode="Disable" w "<A HREF=""#"" onclick=""javascript:alert('Previewing Crystal Reports is disabled"
 . . . . . . e  w "<A HREF=""#"" onclick=""",menu.JavascriptFunction,"('','",$zcvt(LinkUrl,"O","JS"),"','"
 . . . . . . ;e  w "<A HREF=""#"" onclick=""",menu.JavascriptFunction,"('','",LinkUrl,"','"
 . . . . . i menu.LinkReport,'menu.PrintPreview d
 . . . . . . i menu.LinkReport.Type="Other" w "<A HREF=""#"" onclick=""",menu.JavascriptFunction,"('','",$zcvt(LinkUrl,"O","JS"),"','",menu.Target,"','"
 . . . . . . e  w "<A HREF=""#"" onclick=""websys_print","('",printoption,"','",$zcvt(LinkUrl,"O","JS"),"','","params","','",menu.Target,"','",menu.JavascriptFunction i 1
 . . . . . i menu.LinkReport,'menu.PrintPreview s menu.Target="" i 1
 . . . . . e  w menu.ShowInNewWindow
 . . . . . w "');""" 
 . . . . . i 1
 . . . . e  i menu.ShowInNewWindow'="" w "<A HREF=""#"" onClick=""websys_lu('",$zcvt(LinkUrl,"O","JS"),"',false,'",menu.ShowInNewWindow,"');""" i 1
 . . . . e  i menu.ShowInNewWindow="" d
 . . . . . i menu.LinkReport d
 . . . . . . i 'menu.PrintPreview,menu.LinkReport.Type'="Other" d 
 . . . . . . . i $g(crystalparams)'="" s LinkUrl=LinkUrl_crystalparams
 . . . . . . . w "<A HREF=""#"" onclick=""websys_print","('",printoption,"','",$zcvt(LinkUrl,"O","JS"),"','","params","','","TRAK_hidden","','",menu.JavascriptFunction,"');"""
 . . . . . . . s menu.Target="" i 1
 . . . . . . e  w "<A HREF=""",LinkUrl,"""" i 1
 . . . . . e  w "<A HREF=""",LinkUrl,"""" 
 . . . . i menu.ShortcutKey'="" w " accesskey=",menu.ShortcutKey
 . . . . i menu.Target'="" w " target=""",menu.Target,""""
 . . . . s txt=##Class(websys.Conversions).HtmlFriendly(menu.Caption)
 . . . . w " title=""",txt,""""
 . . . . w ">"
 . . . . w "<img SRC=""",$s(menu.Image'="":"../images/"_menu.ImageEx(),1:"../images/websys/blank.gif"),"""  BORDER=""0"" >&nbsp;"
 . . . . //
 . . . . // Show the translated caption else the default caption
 . . . . i menu.LinkUrl'="",$l(txt,menu.ShortcutKey) s txt=$p(txt,menu.ShortcutKey,1)_"<U>"_menu.ShortcutKey_"</U>"_$p(txt,menu.ShortcutKey,2,999)
 . . . . w txt
 . . . . &html<</A></BR>>
 . . . d menu.%Close()
 . . d rs.%Close()
 . . ; End of sub menus
 . . &html<</div>>
 . . ;;i menucnt>0 &html<</DIV>>
 . . &html<</DIV></TD>>
 ;SP;i frm d frm.%Close()
 ;&html<</div>>
 ;
 &html<</TR>>
 &html<</TABLE>>
 &html<</div>>
 q
]]></Implementation>
</Method>

<Method name="ShowToolBar">
<Description>
Displays a menu across the page.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>id:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n rs,j,security
 ;
 s security=$g(%session.Data("LOGON.GROUPMENUS"))
 i security="" s security=$zbitstr(20,0)
 ;
 &html<<TABLE width="100%" id='tablemenu'>>
 &html<<TR>>
 ;
 ; Iterate sub menus of menu
 s rs=##Class(%Library.ResultSet).%New("websys.Menu:Items")
 d rs.Execute(id)
 f j=1:1 q:'rs.Next()  d
 . n k,id,name
 . s id=rs.Data("ID")
 . s name=rs.Data("Name")
 . ; check security
 . i +id>$zbitlen(security) q
 . i '$zbitget(security,+id) q
 . ;
 . &html<<TD id="tb<%=j%>" class="tb" NOWRAP>>
 . i id'="" d
 . . ; Protect translation
 . . n t
 . . d ##Class(websys.Translation).Load("MENU",$g(%session.Data("LOGON.LANGID")),id)
 . . ;
 . . d ..ShowToolBarItem(1,j,id)
 . . ;
 . . ; Iterate through all sub menu option
 . . ; though there is not data in this div, leave it in because of legacy code in ..ShowToolBarItem and js onclick's SelectToolbar
 . . &html<<DIV ID="tbi<%=j%>" class="tlbar" style="visibility:hidden;">>
 . . &html<</DIV>>
 . &html<</TD>>
 ;
 ;
 d rs.%Close()
 &html<</TR>>
 &html<</TABLE>>
 Q
]]></Implementation>
</Method>

<Method name="ShowToolBarItem">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>top:%Library.String,cnt:%Library.String,menuid:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 #define tpagid                $i(^websys.Counters("tpagid"))
 n txt,LinkUrl,href,menu,val,menulnk
 // menu Separator
 s menu=##Class(websys.Menu).%OpenId(menuid,0)
 s menulnk=##Class(%Library.Collation).Upper(menu.LinkUrl)
 i menulnk="-" &html<<HR>> d menu.%Close() q
 //
 s val=menu.EvaluateValue()
 if menu.LinkReport {
 if ##Class(%Library.Collation).Upper(menu.LinkReport.ParameterUrl)[".CSP" {
 //this is a bit strange - saves changing all the definitions
 s LinkUrl="websys.csp?a=a"_val_"&TMENU="_menu.%Id()_"&TPAGID="_$$$tpagid_"&CONTEXT=R"_menu.LinkReport.%Id()
 } elseif 'menu.PrintPreview {
 s LinkUrl="websys.print.auto.csp?RF=1&ReportCode="_menu.LinkReport.Code_val
 i menu.LinkReport.Type="Crystal" s LinkUrl=LinkUrl_menu.LinkReport.CrystalParamList()
 s menu.Target="TRAK_hidden"
 } else { //e.g. Crystal reports
 s LinkUrl="../custom/"_$g(%session.Data("LOGON.SITECODE"))_"/reports/"_menu.LinkReport.ReportUrl
 s LinkUrl=LinkUrl_"?"_val_menu.LinkReport.CrystalParamList()
 }
 } elseif menulnk[".CSP" {
 //this is a bit strange - saves changing all the definitions
 s LinkUrl="websys.csp?a=a"_val_"&TMENU="_menu.%Id()_"&TPAGID="_$$$tpagid
 } else { //e.g. Crystal reports
 s LinkUrl=menu.LinkUrl
 i LinkUrl'="",val'="" s LinkUrl=LinkUrl_"?"_val
 }
 if (menu.Chart) s LinkUrl=LinkUrl_"&ChartID="_menu.Chart.%Id()
 if (menu.ChartBook) s LinkUrl=LinkUrl_"&ChartBookID="_menu.ChartBook.%Id()
 w "<a href="""
 if menu.JavascriptFunction'="" {
 w "javascript:",menu.JavascriptFunction,"('",LinkUrl,"','"
 if menu.LinkReport,'menu.PrintPreview {
 w "TRAK_hidden" 
 } else {
 w menu.ShowInNewWindow
 }
 w "')"""
 } elseif menu.ShowInNewWindow'="" {
 w "#"" onClick=""websys_lu('",LinkUrl,"',false,'",menu.ShowInNewWindow,"');ReleaseFieldFocus(top.frames[1]);"""
 } else {
 w LinkUrl,""""
 w " target='",$s(menu.Target="":"TRAK_main",1:menu.Target),"'"
 }
 w:top " onclick=""SelectToolbar('tbi",cnt,"');"" "
 //
 s txt=menu.Caption
 // Derive the short cut key from the (optional) '&' in the caption translation
 i txt["&" {
 //set the shortcut key and remove the ampersand
 s menu.ShortcutKey=$e(txt,$f(txt,"&"))
 s txt=$tr(txt,"&","")
 }
 //
 s txt=##Class(websys.Conversions).HtmlFriendly(txt)
 i menu.ShortcutKey'="" w " accesskey=",menu.ShortcutKey
 i menu.Name="" s menu.Name="UN-NAMED"
 w " title=",txt
 w ">"
 w:top "<img SRC=""../images/",$s(menu.Image'="":menu.ImageEx(),1:"../images/websys/blank.gif"),"""  BORDER=""0"" >"
 //SP//w:top "<img SRC=""../images/",$s(menu.Image'="":"tmp/tree_sm.gif",1:"../images/websys/blank.gif"),"""  BORDER=""0"" >"
 //
 // Show the translated caption else the default caption
 i menu.LinkUrl'="",$l(txt,menu.ShortcutKey) s txt=$p(txt,menu.ShortcutKey,1)_"<U>"_menu.ShortcutKey_"</U>"_$p(txt,menu.ShortcutKey,2,999)
 w txt
 &html<</A>>
 d menu.%Close() q
 q
]]></Implementation>
</Method>

<Method name="VBFindLEClose">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<PlaceAfter>VBFindLEFetch</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n work,rs
 ;
 s work=$li(QHandle,3)
 s rs=$li(work,1)
 //SYSTEMOREF i rs d rs.%Close()
 ;
 s QHandle=""
 k %trakobjects(+rs) //SYSTEMOREF
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="VBFindLEExecute">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,desc:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,rs
 s work=""
 ;
 s user=$lb(desc)
 ;
 s rs=##Class(%Library.ResultSet).%New("websys.Menu:VBFindLESimple")
 s %trakobjects(+rs)=rs //SYSTEMOREF
 d rs.Execute(desc)
 ;
 s work=$lb(rs)
 s QHandle=$lb(0,user,work)
 ;
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="VBFindLEFetch">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<PlaceAfter>VBFindLEExecute</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,rs,desc,ID,Description,UpdateDate,UpdateTime
 s (desc,ID,Description,UpdateDate,UpdateTime)=""	
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s desc=$li(user,1)
 s rs=$li(work,1)
 s rs=$g(%trakobjects(+rs)) //SYSTEMOREF
 ;
 i 'rs.Next() s AtEnd=1,Row="" q $$$OK
 ;
 s ID=rs.Data("ID")
 s Description=rs.Data("Description")
 s UpdateDate=##class(websys.Conversions).DateLogicalToHtml(rs.Data("UpdateDate"))
 s UpdateTime=##class(websys.Conversions).TimeLogicalToHtml(rs.Data("UpdateTime"))
 s Row=$lb(ID,Description,UpdateDate,UpdateTime)
 s work=$lb(rs)
 s QHandle=$lb(AtEnd,user,work)
 ;
 q $$$OK
]]></Implementation>
</Method>

<Method name="XMLId">
<Description>
Get the ID from the identified by string.
By default the generated version of this returns the value passed.
In general this method will be overridden to provide the required behaviour.
For example - Component name is passed - this will return ..%Id()</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>val:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ;q ..GetIdFromCodeOrDescription(val)
 i '$d(^websys.MenuD(val)) s ^websys.MenuD(val)=$lb("Menu"_val)
 q val
]]></Implementation>
</Method>

<Method name="XMLPreference">
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n rs
 ;
 d ..XMLExport()
 ;
 s rs=##Class(%ResultSet).%New("websys.Menu:Items")
 ;
 d rs.Execute(..%Id())
 ;
 f  q:'rs.Next()  d
 . s mnuid=rs.Data("ID") 
 . s mnu=##Class(websys.Menu).%OpenId(mnuid,0)
 . i mnu d
 . . d mnu.XMLExport()
 . . d mnu.%Close()
 ;
 d rs.%Close()
 ;
 q
]]></Implementation>
</Method>

<Method name="websysSaveCopyHeaders">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>newcode:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 i $g(newcode)="" q
 n j,menuid,menu,newid,rs,subid,id
 f j=1:1 {
 s menuid=$g(%request.Data("IDHeaderz"_j,1))
 q:'menuid
 if ($g(%request.Data("SelectHeaderz"_j,1))="on") {
 ;i $g(%session.Data("LOGON.SITECODE"))="TRAKDEV"
 s menu=##Class(websys.Menu).%OpenId(menuid,0)
 i menu {
 s newname=menu.Name
 s newcaption=menu.Caption
 d menu.%Close()
 }
 if $l(newname,".")=1 {s newname=newcode_"."_newname}
 else {s $p(newname,".",1)=newcode}
 if $l(newcaption," ")=1 {s newcaption=newcode_" "_newcaption}
 else {s $p(newcaption," ",1)=newcode}
 s newid=""
 d ..CopyMenu(menuid,newname,newcaption,.newid)
 if newid {
	 		s rs=##Class(%Library.ResultSet).%New("websys.Menu:Items")
	 		d rs.Execute(menuid)
	 		while rs.Next() {
		 		s subid=rs.Data("ID")
		 		s newname=rs.Data("Name")
		 		s newcaption=rs.Data("Caption")
		 		if $l(newname,".")=1 {s newname=newcode_"."_newname}
		 		else {s $p(newname,".",1)=newcode}
		 		s id=""
		 		d ..CopyMenu(subid,newname,newcaption,.id,newid)
		 	}
		 	d rs.%Close()
		}
	}
 }
 //required when copying the workflows
 ;RQG 12.11.02-Log27691: To run PublishAll in the background to avoid timeout error
 ;d ##Class(websys.Component).PublishAll()
 d ##Class(websys.Component).JobPublishAll()
 ;
 quit
]]></Implementation>
</Method>

<Query name="Find">
<Description>
Find Menus by name and caption prefix OR by submenuof</Description>
<Type>%Library.Query</Type>
<FormalSpec>caption:%String,name:%String,submenuof:%String,Component:%String,workflow:%String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Caption,Name,SubMenuOf,SubMenuOfName,Workflow"/>
</Query>

<Query name="FindByLinkUrl">
<Description>
used to find menus which are are valid as submenu of i.e. valid parents</Description>
<Type>%Library.SQLQuery</Type>
<FormalSpec>name:%String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT Name,Caption
FROM websys.Menu
WHERE (LinkUrl IS NULL) AND ((Name %STARTSWITH :name) OR (Caption %STARTSWITH :name))
ORDER BY Name</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="Name:%String,Caption:%String"/>
</Query>

<Query name="FindCaptionByLinkUrl">
<Description>
select menus by caption which have no url and so are valid for submenu of (i.e. valid parent)</Description>
<Type>%Library.SQLQuery</Type>
<FormalSpec>caption:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT Caption
FROM websys.Menu
WHERE (Caption %STARTSWITH :caption) AND (LinkUrl IS NULL)
ORDER BY Caption</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="Caption:%String"/>
</Query>

<Query name="FindbyTarget">
<Description>
used to find menus which are are valid as submenu of i.e. valid parents</Description>
<Type>%Library.SQLQuery</Type>
<FormalSpec>target:%String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ID,Name,Caption,Target
FROM websys.Menu
WHERE (Target = :target) 
ORDER BY Name</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Name:%String,Caption:%String,Target"/>
</Query>

<Query name="Items">
<Type>%SQLQuery</Type>
<FormalSpec>menuid:%String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ID,Name,Caption
FROM websys.Menu
WHERE SubMenuOf=:menuid
ORDER BY Sequence</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Name,Caption"/>
</Query>

<Query name="VBFind">
<Description>
Find called from VB Patching OCX</Description>
<Type>%Library.SQLQuery</Type>
<FormalSpec>name</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ID, Name
FROM Menu
WHERE Name %STARTSWITH :name
ORDER BY Name</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Name:%String"/>
</Query>

<Query name="VBFindLE">
<Type>%Library.Query</Type>
<FormalSpec>desc:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Description:%Library.String,UpdateDate:%String,UpdateTime:%String"/>
</Query>

<Query name="VBFindLESimple">
<Description>
Find Menu items in:
Layout Editor XML Export</Description>
<Type>%Library.SQLQuery</Type>
<FormalSpec>name:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery><![CDATA[SELECT ID, Name,UpdateDate,UpdateTime
FROM Menu
WHERE (Name %STARTSWITH :name) AND (ID>49999)
ORDER BY Name]]></SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Description:%String,UpdateDate:%Date,UpdateTime:%Time"/>
</Query>

<Storage name="Default">
<Type>%CacheStorage</Type>
<DataLocation>^websys.MenuD</DataLocation>
<DefaultData>MenuDefaultData</DefaultData>
<IdLocation>^websys.MenuD</IdLocation>
<IndexLocation>^websys.MenuI</IndexLocation>
<StreamLocation>^websys.MenuS</StreamLocation>
<Data name="MenuDefaultData">
<Structure>listnode</Structure>
<Value name="1">
<Value>Caption</Value>
</Value>
<Value name="2">
<Value>Image</Value>
</Value>
<Value name="3">
<Value>Method</Value>
</Value>
<Value name="4">
<Value>Name</Value>
</Value>
<Value name="5">
<Value>Sequence</Value>
</Value>
<Value name="6">
<Value>ShortcutKey</Value>
</Value>
<Value name="7">
<Value>ShowInNewWindow</Value>
</Value>
<Value name="8">
<Value>Type</Value>
</Value>
<Value name="9">
<Value>LinkUrl</Value>
</Value>
<Value name="10">
<Value>ValueExpression</Value>
</Value>
<Value name="11">
<Value>websysMenu</Value>
</Value>
<Value name="12">
<Value>SubMenuOf</Value>
</Value>
<Value name="13">
<Value>expression</Value>
</Value>
<Value name="14">
<Value>Component</Value>
</Value>
<Value name="15">
<Value>LinkComponent</Value>
</Value>
<Value name="16">
<Value>WorkFlow</Value>
</Value>
<Value name="17">
<Value>JavascriptFunction</Value>
</Value>
<Value name="18">
<Value>LinkReport</Value>
</Value>
<Value name="19">
<Value>ConditionalExpression</Value>
</Value>
<Value name="20">
<Value>Target</Value>
</Value>
<Value name="21">
<Value>Chart</Value>
</Value>
<Value name="22">
<Value>ChartBook</Value>
</Value>
<Value name="23">
<Value>PrintPreview</Value>
</Value>
<Value name="24">
<Value>UpdateDate</Value>
</Value>
<Value name="25">
<Value>UpdateTime</Value>
</Value>
<Value name="26">
<Value>UpdateUser</Value>
</Value>
<Value name="27">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="28">
<Value>Worklist</Value>
</Value>
</Data>
<Property name="Caption"/>
<Property name="Chart"/>
<Property name="ChartBook"/>
<Property name="ConditionalExpression"/>
<Property name="Image"/>
<Property name="JavascriptFunction"/>
<Property name="LinkComponent"/>
<Property name="LinkReport"/>
<Property name="LinkUrl"/>
<Property name="Method"/>
<Property name="Name"/>
<Property name="PrintPreview"/>
<Property name="Sequence"/>
<Property name="ShortcutKey"/>
<Property name="ShowInNewWindow"/>
<Property name="SubMenuOf"/>
<Property name="Target"/>
<Property name="Type"/>
<Property name="UpdateDate"/>
<Property name="UpdateTime"/>
<Property name="UpdateUser"/>
<Property name="ValueExpression"/>
<Property name="WorkFlow"/>
</Storage>
</Class>
</Export>
