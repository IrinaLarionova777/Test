<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="websys.Abstract.G2" type="MAC" languagemode="0" generated="1"><![CDATA[
 ;websys.Abstract.G2
 ;(C)InterSystems, method generator for class websys.Abstract.  Do NOT edit.
 Quit
 ;
 #; method code include files begin
 #include %systemInclude
 #include TRAK
 #; method code include files end

#classcontext websys.Abstract
#classmethod LookUpExecute
LookUpExecute(%mode,%class,%property,%method,%parameter,%codemode,%code,%classmodify,%context,%language) ;
 s %code=0
 n class,labclass,webclass,SQLTABLE,SQLROWID,SQLDESCRIPTION,SQLCODE,SQLFILTER
 s (class,labclass,webclass)=%class
 ;
 ; for class starting with web prefix (but not websys), it is likely
 ; that we want to update the core class, not the web class
 i $p(labclass,".",1)="web" s $p(labclass,".",1)="User"
 i $p(webclass,".",1)="User" s $p(webclass,".",1)="web"
 ;
 ; if class is abstract, quit here, don't instantiate 
 i $$$CLASSabstract($$$MGINFO,%class) $$$GENERATE(" QUIT """"") QUIT $$$OK
 ; If there is no corresponding lab class
 i '$d($$$CLASS($$$TRAKDEF,labclass)) $$$GENERATE(" QUIT """"") QUIT $$$OK
 ;
 ; Do we have a specific value set ?
 s SQLROWID=$g($$$PARAMdefault($$$TRAKDEF,webclass,"SQLROWID"))
 ; Get any stored value for Description
 s SQLDESCRIPTION=$g($$$PARAMdefault($$$TRAKDEF,webclass,"SQLDESCRIPTION"))
 ; Get any stored value for Code
 s SQLCODE=$g($$$PARAMdefault($$$TRAKDEF,webclass,"SQLCODE"))
 ; Get any stored value for Filter
 s SQLFILTER=$g($$$PARAMdefault($$$TRAKDEF,webclass,"SQLFILTER"))
 ; Get any stored value for table name, default to labclass classname
 s SQLTABLE=$g($$$CLASSsqltablename($$$TRAKDEF,labclass),labclass)
 ;
 i SQLTABLE'="",SQLROWID'="" d
 . i SQLTABLE'["." s SQLTABLE="SQLUser."_SQLTABLE
 ;
 $$$GENERATE(" n user,work")
 $$$GENERATE(" s user=$lb(desc)")
 $$$GENERATE(" s work=""""")
 ;
 i SQLTABLE'="",SQLROWID'="" d
 . i SQLTABLE'["." s SQLTABLE="SQLUser."_SQLTABLE
 . ;
 . ; e.g. SELECT APCVC_Rowid INTO :id FROM APC_VendCat WHERE APCVC_Code=:val
 . i SQLDESCRIPTION'="" d
 . . ;[C52];$$$GENERATE(" &sql( DECLARE LOOKUP CURSOR FOR SELECT "_SQLDESCRIPTION_","_SQLROWID_","_SQLCODE_" FROM "_SQLTABLE_" WHERE "_SQLDESCRIPTION_" %STARTSWITH :desc"_$s(SQLFILTER'="":" AND "_SQLFILTER,1:"")_" ORDER BY "_SQLDESCRIPTION_")")
 . . $$$GENERATE(" &sql( DECLARE LOOKUP CURSOR FOR SELECT "_SQLDESCRIPTION_" as zDESC,"_SQLROWID_" as zID,"_SQLCODE_" as zCODE FROM "_SQLTABLE_" WHERE "_SQLDESCRIPTION_" %STARTSWITH :desc"_$s(SQLFILTER'="":" AND "_SQLFILTER,1:"")_" ORDER BY zDESC)")
 . . $$$GENERATE(" &sql( OPEN LOOKUP)")
 . . ;
 . . $$$GENERATE(" s QHandle=$lb(0,user,work)")
 ;
 $$$GENERATE(" q $$$OK")
 ; 
 QUIT $$$OK
 q 1
#classmethod LookUpFetch
LookUpFetch(%mode,%class,%property,%method,%parameter,%codemode,%code,%classmodify,%context,%language) ;
 s %code=0
 ;
 n class,labclass,webclass,SQLTABLE,SQLROWID,SQLDESCRIPTION
 s (class,labclass,webclass)=%class
 ;
 ; for class starting with web prefix (but not websys), it is likely
 ; that we want to update the core class, not the web class
 i $p(labclass,".",1)="web" s $p(labclass,".",1)="User"
 i $p(webclass,".",1)="User" s $p(webclass,".",1)="web"
 ;
 ; if class is abstract, quit here, don't instantiate 
 i $$$CLASSabstract($$$MGINFO,%class) $$$GENERATE(" QUIT """"") QUIT $$$OK
 ; If there is no corresponding user class
 i '$d($$$CLASS($$$TRAKDEF,labclass)) $$$GENERATE(" QUIT """"") QUIT $$$OK
 ;
 $$$GENERATE(" ; Retrieve the current status")
 $$$GENERATE(" n user,work,code,description,id")
 $$$GENERATE(" ;")
 $$$GENERATE(" s AtEnd=$li(QHandle,1)")
 $$$GENERATE(" s user=$li(QHandle,2)")
 $$$GENERATE(" s work=$li(QHandle,3)")
 $$$GENERATE(" ;")
 $$$GENERATE(" s desc=$li(user,1)")
 i $g($$$PARAMdefault($$$TRAKDEF,webclass,"SQLDESCRIPTION"))'="" d
 . $$$GENERATE(" &SQL(FETCH LOOKUP INTO :description,:id,:code)")
 . $$$GENERATE(" i SQLCODE s AtEnd=1")
 i $g($$$PARAMdefault($$$TRAKDEF,webclass,"SQLDESCRIPTION"))="" d
 . $$$GENERATE(" s AtEnd=1")
 $$$GENERATE(" ;")
 $$$GENERATE(" s Row=""""")
 $$$GENERATE(" i 'AtEnd s Row=$lb(description,id,code)")
 $$$GENERATE(" s QHandle=$lb(AtEnd,user,work)")
 $$$GENERATE(" QUIT $$$OK")
 Quit $$$OK
 q 1
#classmethod websysAfterSave
websysAfterSave(%mode,%class,%property,%method,%parameter,%codemode,%code,%classmodify,%context,%language) ;
 s %code=0
 #; if class is abstract, quit here, don't instantiate 
 i $$$CLASSabstract($$$MGINFO,%class) $$$GENERATE(" QUIT") QUIT $$$OK
 #;
 ;
 $$$GENERATE(" i ##Class(websys.UserDefinedFunctions).Evaluate("""_$p(%class,".",2)_""",""OnAfterSave"")")
 $$$GENERATE(" q")
 q 1
#classmethod websysBeforeSave
websysBeforeSave(%mode,%class,%property,%method,%parameter,%codemode,%code,%classmodify,%context,%language) ;
 s %code=0
 #; if class is abstract, quit here, don't instantiate 
 i $$$CLASSabstract($$$MGINFO,%class) $$$GENERATE(" QUIT") QUIT $$$OK
 #;
 $$$GENERATE(" ; q 1 to continue with websysSave on return")
 $$$GENERATE(" ; q 0 to abort websysSave on return")
 $$$GENERATE(" new blnUDF")
 $$$GENERATE(" set blnUDF=""""")
 $$$GENERATE(" set blnUDF=##Class(websys.UserDefinedFunctions).Evaluate("""_$p(%class,".",2)_""",""OnBeforeSave"")")
 $$$GENERATE(" if 'blnUDF quit 0")
 $$$GENERATE(" quit $$$OK")
 q 1
#classmethod websysDelete
websysDelete(%mode,%class,%property,%method,%parameter,%codemode,%code,%classmodify,%context,%language) ;
 s %code=0
 n class
 s class=%class
 ;
 ; for class starting with web prefix (but not websys), it is likely
 ; that we want to update the core class, not the web class
 i $p(class,".",1)="web" s $p(class,".",1)="User"
 ;
 #; if class is abstract, quit here, don't instantiate 
 i $$$CLASSabstract($$$MGINFO,%class) $$$GENERATE(" QUIT") QUIT $$$OK
 #;
 $$$GENERATE(" i id'="""",'##Class(websys.Lock).Lock($lb(id,"""_class_"""),%session.SessionId,%session.Get(""LOGON.USERID""),.status) d  q 0")
 $$$GENERATE(" . d msg.AddItem(""E"",""LOCKED"",status)")
 $$$GENERATE(" d ##Class("_class_").%DeleteId(id)")
 $$$GENERATE(" i ##Class(websys.UserDefinedFunctions).Evaluate("""_$p(%class,".",2)_""",""OnDelete"")")
 $$$GENERATE(" d ##Class(websys.Lock).LockClear($lb(id,"""_class_"""),%session.SessionId)")
 #;
 QUIT $$$OK
 q 1
#classmethod websysSave
websysSave(%mode,%class,%property,%method,%parameter,%codemode,%code,%classmodify,%context,%language) ;
 s %code=0
 n class
 s class=%class
 ;
 ; for class starting with web prefix (but not websys), it is likely
 ; that we want to update the core class, not the web class
 i $p(class,".",1)="web" s $p(class,".",1)="User"
 ;
 #; if class is abstract, quit here, don't instantiate 
 i $$$CLASSabstract($$$MGINFO,%class) $$$GENERATE(" QUIT") QUIT $$$OK
 ;
 ; compile coded has been moved to generated code
 $$$GENERATE(" d ##Class(websys.ComponentXRef).GetSave(compref,id)")
 ;
 q $$$OK
 q 1
]]></Routine>
</Export>
