<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="websys.DictionaryClass">
<Description>
Lookup table to provide user friendly names for classes and properties; and the corresponding tables and columns</Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract</Super>
<TimeCreated>60218,47035.092772</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>125</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="EXTENTSIZE">
<Default>37</Default>
</Parameter>

<Parameter name="SQLCODE">
<Final>0</Final>
<Default>ClassName</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Final>0</Final>
<Default>ClassName</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Index name="ClassName">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>ClassName</Properties>
<Unique>1</Unique>
</Index>

<Index name="DisplayName">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>DisplayName</Properties>
<Unique>1</Unique>
</Index>

<Index name="SQLTableName">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>SQLTableName</Properties>
<Unique>1</Unique>
</Index>

<Property name="ClassName">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="COLLATION" value="ALPHAUP"/>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="DisplayName">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="COLLATION" value="ALPHAUP"/>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Properties">
<Type>websys.DictionaryClassProperty</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Cardinality>children</Cardinality>
<Collection/>
<Inverse>ParRef</Inverse>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>1</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="SQLTableName">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="COLLATION" value="ALPHAUP"/>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Method name="FindClose">
<Description>
Default implementation of Find Query.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<PlaceAfter>FindFetch</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ; Retrieve the current status
 n user,work,clsname,tblname,displayname
 n fcls,fid,fsql,fdisplay
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s clsname=$li(user,1)
 s tblname=$li(user,2)
 s displayname=$li(user,3)
 ;
 if displayname'="" {
 &sql(CLOSE ByDispl)
 } elseif tblname'="" {
 &sql(CLOSE BySQL)
 } else {
 &sql(CLOSE ByClass)
 }
 s QHandle=""
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="FindExecute">
<Description>
Find menus by cpation,name OR by submenuof.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,clsname:%String,tblname:%String,displayname:%String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work
 s user=$lb(clsname,tblname,displayname)
 s work=""
 ;
 ; Be sure to keep these select parts of these in sync.
 &sql(
 DECLARE ByClass CURSOR FOR 
 SELECT	ID, ClassName, SQLTableName, DisplayName
 FROM	DictionaryClass
 WHERE	(ClassName %STARTSWITH :clsname)
 ORDER	BY ClassName
 )
 &sql( 
 DECLARE BySQL CURSOR FOR 
 SELECT	ID, ClassName, SQLTableName, DisplayName
 FROM	DictionaryClass
 WHERE	(SQLTableName %STARTSWITH :tblname)
 ORDER	BY SQLTableName
 )
 &sql( 
 DECLARE ByDispl CURSOR FOR 
 SELECT	ID, ClassName, SQLTableName, DisplayName
 FROM	DictionaryClass
 WHERE	(DisplayName %STARTSWITH :displayname)
 ORDER	BY DisplayName
 )
 ;
 if displayname'="" {
 &sql(OPEN ByDispl)
 } elseif tblname'="" {
 &sql(OPEN BySQL)
 } else {
 &sql(OPEN ByClass)
 }
 ;
 s QHandle=$lb(0,user,work)
 ; 
 QUIT $$$OK
]]></Implementation>
</Method>

<Method name="FindFetch">
<Description>
Default implementation of Find Query.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<PlaceAfter>FindExecute</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ; Retrieve the current status
 n user,work,clsname,tblname,displayname
 n fcls,fid,fsql,fdisplay
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s clsname=$li(user,1)
 s tblname=$li(user,2)
 s displayname=$li(user,3)
 ;
 if displayname'="" {
 &sql(FETCH ByDispl INTO :fid,:fcls,:fsql,:fdisplay)
 } elseif tblname'="" {
 &sql(FETCH BySQL INTO :fid,:fcls,:fsql,:fdisplay)
 } else {
 &sql(FETCH ByClass INTO :fid,:fcls,:fsql,:fdisplay)
 }
 ;
 i SQLCODE s AtEnd=1
 s Row=""
 i 'AtEnd s Row=$lb(fid,fcls,fsql,fdisplay)
 s QHandle=$lb(AtEnd,user,work)
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetDisplayInfoFromClassName">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>clsname:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n id,cls,tbl,display
 &sql(SELECT ID,ClassName,SQLTableName,DisplayName INTO :id,:cls,:tbl,:display FROM DictionaryClass WHERE ClassName=:clsname)
 i 'SQLCODE q $lb(id,cls,tbl,display)
 q $lb("","","")
]]></Implementation>
</Method>

<Method name="GetDisplayInfoFromSQLName">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>tblname:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n id,cls,tbl,display
 &sql(SELECT ID,ClassName,SQLTableName,DisplayName INTO :id,:cls,:tbl,:display FROM DictionaryClass WHERE SQLTableName=:tblname)
 i 'SQLCODE q $lb(id,cls,tbl,display)
 q $lb("","","")
]]></Implementation>
</Method>

<Method name="GetDisplayName">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ClassName:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n DisplayName
 s DisplayName=""
 &sql(SELECT	DisplayName
 INTO 	:DisplayName
 FROM	DictionaryClass
 WHERE	(ClassName = :ClassName)
 )
 ;
 q DisplayName
]]></Implementation>
</Method>

<Method name="websysBeforeSave">
<Description><![CDATA[
Invoked before websysSave - can be used to cancel the save.<br>]]></Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[compref:%String,&id:%String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Boolean</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n ok,clsname
 s ok=1
 s clsname=$g(%request.Data("ClassName",1))
 i clsname="" d:msg msg.AddItem("E",$g(t("clsname"),"ClassName"),$g(t("CLSEXIST"),"Class does not exist")) s ok=0
 i clsname'="",'$d(^oddDEF(clsname)) d:msg msg.AddItem("E",clsname,$g(t("CLSEXIST"),"Class does not exist")) s ok=0
 ;
 i 'ok q 0
 q ##Class(websys.UserDefinedFunctions).Evaluate("websys.DictionaryClass","OnBeforeSave")
]]></Implementation>
</Method>

<Query name="Find">
<Type>%Library.Query</Type>
<FormalSpec>clsname:%Library.String,tblname:%Library.String,displayname:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="2"/>
<Parameter name="ROWSPEC" value="ID,ClassName:%Library.String,SQLTableName:%Library.String,DisplayName:%Library.String"/>
</Query>

<Query name="LookUpByClassName">
<Type>%Library.SQLQuery</Type>
<FormalSpec>clsname:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ClassName, ID, SQLTableName, DisplayName
FROM DictionaryClass
WHERE (ClassName %STARTSWITH :clsname) 
ORDER BY ClassName
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="2"/>
<Parameter name="ROWSPEC" value="ClassName:%Library.String,HIDDEN,SQLTableName:%Library.String,DisplayName:%Library.String"/>
</Query>

<Query name="LookUpByDisplayName">
<Type>%Library.SQLQuery</Type>
<FormalSpec>displayname:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ClassName, ID, SQLTableName, DisplayName
FROM DictionaryClass
WHERE (DisplayName %STARTSWITH :displayname)
ORDER BY DisplayName
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="2"/>
<Parameter name="ROWSPEC" value="ClassName:%Library.String,HIDDEN,SQLTableName:%Library.String,DisplayName:%Library.String"/>
</Query>

<Query name="LookUpBySQLTableName">
<Type>%Library.SQLQuery</Type>
<FormalSpec>tblname:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ClassName, ID, SQLTableName, DisplayName
FROM DictionaryClass
WHERE (SQLTableName %STARTSWITH :tblname)
ORDER BY SQLTableName
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="2"/>
<Parameter name="ROWSPEC" value="ClassName:%Library.String,HIDDEN,SQLTableName:%Library.String,DisplayName:%Library.String"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^websys.DictionaryClassD</DataLocation>
<DefaultData>DictionaryClassDefaultData</DefaultData>
<IdLocation>^websys.DictionaryClassD</IdLocation>
<IndexLocation>^websys.DictionaryClassI</IndexLocation>
<StreamLocation>^websys.DictionaryClassS</StreamLocation>
<Data name="DictionaryClassClassName">
<Attribute>%%CLASSNAME</Attribute>
<Structure>node</Structure>
<Subscript>0</Subscript>
</Data>
<Data name="DictionaryClassDefaultData">
<Structure>listnode</Structure>
<Value name="1">
<Value>ClassName</Value>
</Value>
<Value name="2">
<Value>SQLTableName</Value>
</Value>
<Value name="3">
<Value>DisplayName</Value>
</Value>
</Data>
<Property name="ClassName"/>
<Property name="DisplayName"/>
<Property name="SQLTableName"/>
</Storage>
</Class>
</Export>
