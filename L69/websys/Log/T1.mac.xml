<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="websys.Log.T1" type="MAC" languagemode="0" generated="1"><![CDATA[
 ; websys.Log.T1
 ; Filing Methods for table: websys.Log (extent = websys.Log) - Do Not Edit.  Compiled April 20, 2010 23:04:44
 ; Filing Methods for table: websys.Log (extent = websys.Log)
#classmethod websys.LogTableCode
#classcontext websys.Log
#include %occExtent
#include %occInclude
#include %systemInclude
#import websys
%delete(%rowid,%check,%tstart=1,%mv=0) n bva,%cnt,%d,%e,%ele,%itm,%key,%l,%oper,%pos,%s,sn,sqlcode,subs s %oper="DELETE",sqlcode=0,%ROWID=%rowid,%d(1)=%rowid,%e(1)=%rowid,%l=$c(0)
 k:'$TLEVEL %0CacheLock i '$a(%check,2) { n %ls i $i(%0CacheLock("websys.Log"))>$zu(115,6) { l +^websys.LogD:$zu(115,4) l:$t -^websys.LogD s %ls=$s($t:2,1:0) } else { l +^websys.LogD(%d(1)):$zu(115,4) s %ls=$t } s:%ls=2 $e(%check,2)=$c(1) s:%ls=1 $e(%l)=$c(1) i '%ls s SQLCODE=-110,%msg="Unable to acquire lock for "_%oper_" of table 'websys.Log' on row with RowID = '"_$g(%d(1))_"'" q  } If %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } s $zt="%ETrap"
 d getold i sqlcode s SQLCODE=-106 g %EExit
 if %e(20)'="" s sn=$p(%e(20),$e(%e(20)),$l(%e(20),$e(%e(20)))-1) if "websys.Log"'=sn n %f d %CopyIcolToName GOTO @("%PolymorphicDEL^"_$zutil(135,23,sn)_".T1")
 i '$a(%check),'$zu(115,7) d  i sqlcode s SQLCODE=sqlcode g %EExit
 . n %fk,%k,%p,%st,%t,%z s %k="",%p("%1")="%d(1),",%p("IDKEY")="%d(1),"
 . f  q:sqlcode<0  s %k=$o(^oddEXTR("websys.Log","n",%k)) q:%k=""  s %t="" f  s %t=$o(^oddEXTR("websys.Log","n",%k,"f",%t)) q:%t=""  s %st=(%t="websys.Log") s %fk="" f  s %fk=$o(^oddEXTR("websys.Log","n",%k,"f",%t,%fk)) q:%fk=""  s %z=$g(^oddEXTR("websys.Log","n",%k,"f",%t,%fk,61)) i %z'="",@("$$"_%z_"("_%p(%k)_",%k,%st)") s sqlcode=-124 q
 k ^websys.LogD(%d(1))
 s sn(1)=%e(2) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) k ^websys.LogI("Date",sn(1),sn(2))
 s sn(1)=$zu(28,%e(16),7) s sn(2)=%d(1) k ^websys.LogI("EpisodeID",sn(1),sn(2))
 s sn(1)=$zu(28,%e(19),7) s sn(2)=%d(1) k ^websys.LogI("PatientID",sn(1),sn(2))
 s sn(1)=$zu(28,%e(10),7) s sn(2)=$zu(28,%e(17),7) s sn(3)=%d(1) k ^websys.LogI("ReferenceId",sn(1),sn(2),sn(3))
 s sn(1)=%e(3) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) k ^websys.LogI("Time",sn(1),sn(2))
 s sn(1)=$zu(28,%e(13),7) s sn(2)=%d(1) k ^websys.LogI("UserDRIndex",sn(1),sn(2))
 d gunlock TCOMMIT:%tstart&&($zu(115,1)=1)
 s SQLCODE=0 q
%insert(%d,%check,%inssel,%vco,%tstart=1,%mv=0) n bva,%cnt,%ele,%itm,%key,%l,%n,%oper,%pos,%s,sqlcode,sn,subs,icol s %oper="INSERT",sqlcode=0,%l=$c(0,0,0) i $d(%d(1)),'$zu(115,11) { i %d(1)'="" { s SQLCODE=-111,%msg="INSERT of Default Only RowID Field 'ID' not allowed" q ""  } k %d(1) }  i '$a(%check),'$$FieldValidate() { s SQLCODE=sqlcode q "" } d Normalize
 k:'$TLEVEL %0CacheLock If %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } s $zt="%ETrap"
 s:'$d(%d(2)) %d(2)=+$H s:'$d(%d(3)) %d(3)=$p($H,",",2)
 i '$a(%check) d  i sqlcode<0 s SQLCODE=sqlcode g %EExit
 . i $g(%vco)'="" d @%vco q:sqlcode<0
 If '$d(%d(1)) { s %d(1)=$i(^websys.LogD) } ElseIf %d(1)>$g(^websys.LogD) { If $i(^websys.LogD,$zabs(%d(1)-$g(^websys.LogD))) {}} ElseIf $d(^websys.LogD(%d(1))) { s SQLCODE=-119,%msg="'ID' value not unique!  A value of "_%d(1)_" already exists for 'websys.Log.ID'"  g %EExit }
 f icol=20,2,16,19,10,17,3,13 s:'$d(%d(icol)) %d(icol)=""
 i '$a(%check,2) { n %ls i $i(%0CacheLock("websys.Log"))>$zu(115,6) { l +^websys.LogD:$zu(115,4) l:$t -^websys.LogD s %ls=$s($t:2,1:0) } else { l +^websys.LogD(%d(1)):$zu(115,4) s %ls=$t } s:%ls=2 $e(%check,2)=$c(1) s:%ls=1 $e(%l)=$c(1) i '%ls s SQLCODE=-110,%msg="Unable to acquire lock for "_%oper_" of table 'websys.Log' on row with RowID = '"_$g(%d(1))_"'" g %EExit }
 s ^websys.LogD(%d(1))=$lb(%d(2),%d(3),,,%d(13),%d(17),$g(%d(18)),,,%d(19),$g(%d(12)),%d(16),$g(%d(4)),$g(%d(5)),$g(%d(6)),$g(%d(7)),$g(%d(11)),$g(%d(9)),%d(10),$g(%d(15)),$g(%d(14)),$g(%d(8)))
 s:(%d(20)'="") ^websys.LogD(%d(1),0)=%d(20)
 i '$a(%check,3) { s sn(1)=%d(2) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) s ^websys.LogI("Date",sn(1),sn(2))=%d(20)
 s sn(1)=$zu(28,%d(16),7) s sn(2)=%d(1) s ^websys.LogI("EpisodeID",sn(1),sn(2))=%d(20)
 s sn(1)=$zu(28,%d(19),7) s sn(2)=%d(1) s ^websys.LogI("PatientID",sn(1),sn(2))=%d(20)
 s sn(1)=$zu(28,%d(10),7) s sn(2)=$zu(28,%d(17),7) s sn(3)=%d(1) s ^websys.LogI("ReferenceId",sn(1),sn(2),sn(3))=%d(20)
 s sn(1)=%d(3) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) s ^websys.LogI("Time",sn(1),sn(2))=%d(20)
 s sn(1)=$zu(28,%d(13),7) s sn(2)=%d(1) s ^websys.LogI("UserDRIndex",sn(1),sn(2))=%d(20) }
 d gunlock TCOMMIT:%tstart&&($zu(115,1)=1)
 s SQLCODE=0 q %d(1) 			// %insert-end
%update(%rowid,%check,%d,%vco,%tstart=1,%quick=0,%mv=0) n %e,bva,%cnt,%ele,%itm,%key,%l,%n,%oper,%pos,%s,icol,s,sn,sqlcode,subs,t s %oper="UPDATE",sqlcode=0,%ROWID=%rowid,$e(%e,1)=$c(0),%l=$c(0,0,0) i '$a(%check),'$$FieldValidate() s SQLCODE=sqlcode q
 d Normalize i $d(%d(1)),%d(1)'=%rowid s SQLCODE=-107,%msg="UPDATE of RowID Field 'ID' not allowed" q
 f icol=2:1:20 s $e(%e,icol)=$c($d(%d(icol)))
 s %d(1)=%rowid,%e(1)=%rowid
 k:'$TLEVEL %0CacheLock i '$a(%check,2) { n %ls i $i(%0CacheLock("websys.Log"))>$zu(115,6) { l +^websys.LogD:$zu(115,4) l:$t -^websys.LogD s %ls=$s($t:2,1:0) } else { l +^websys.LogD(%d(1)):$zu(115,4) s %ls=$t } s:%ls=2 $e(%check,2)=$c(1) s:%ls=1 $e(%l)=$c(1) i '%ls s SQLCODE=-110,%msg="Unable to acquire lock for "_%oper_" of table 'websys.Log' on row with RowID = '"_$g(%d(1))_"'" q  } If %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } s $zt="%ETrap"
 if $g(%vco)="" { d getold i sqlcode { s SQLCODE=-109 g %EExit } f icol=20,2,16,19,10,17,3,13 { s:'$d(%d(icol)) %d(icol)=%e(icol) s:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }} else { d getoldall i sqlcode { s SQLCODE=-109 g %EExit } f icol=2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20 { s:'$d(%d(icol)) %d(icol)=%e(icol) s:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }}
 if %e(20)'="" s sn=$p(%e(20),$e(%e(20)),$l(%e(20),$e(%e(20)))-1) if "websys.Log"'=sn n %f d %CopyIcolToName GOTO @("%PolymorphicUPD^"_$zutil(135,23,sn)_".T1")
 d:'$a(%check)  i sqlcode s SQLCODE=sqlcode g %EExit
 . i $g(%vco)'="" d @%vco q:sqlcode<0
 s:$s($a(%e,2):1,$a(%e,3):1,$a(%e,4):1,$a(%e,5):1,$a(%e,6):1,$a(%e,7):1,$a(%e,8):1,$a(%e,9):1,$a(%e,10):1,$a(%e,11):1,$a(%e,12):1,$a(%e,13):1,$a(%e,14):1,$a(%e,15):1,$a(%e,16):1,$a(%e,17):1,$a(%e,18):1,1:$a(%e,19)) s=$g(^websys.LogD(%d(1))),^websys.LogD(%d(1))=$lb($s($a(%e,2):%d(2),1:$lg(s)),$s($a(%e,3):%d(3),1:$lg(s,2)),,,$s($a(%e,13):%d(13),1:$lg(s,5)),$s($a(%e,17):%d(17),1:$lg(s,6)),$s($a(%e,18):%d(18),1:$lg(s,7)),,,$s($a(%e,19):%d(19),1:$lg(s,10)),$s($a(%e,12):%d(12),1:$lg(s,11)),$s($a(%e,16):%d(16),1:$lg(s,12)),$s($a(%e,4):%d(4),1:$lg(s,13)),$s($a(%e,5):%d(5),1:$lg(s,14)),$s($a(%e,6):%d(6),1:$lg(s,15)),$s($a(%e,7):%d(7),1:$lg(s,16)),$s($a(%e,11):%d(11),1:$lg(s,17)),$s($a(%e,9):%d(9),1:$lg(s,18)),$s($a(%e,10):%d(10),1:$lg(s,19)),$s($a(%e,15):%d(15),1:$lg(s,20)),$s($a(%e,14):%d(14),1:$lg(s,21)),$s($a(%e,8):%d(8),1:$lg(s,22)))
 s:$a(%e,20) ^websys.LogD(%d(1),0)=%d(20)
 i '$a(%check,3) { i $a(%e,2) { s sn(1)=%e(2) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) k ^websys.LogI("Date",sn(1),sn(2))  }
 i $a(%e,2)||$a(%e,20) { s sn(1)=%d(2) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) s ^websys.LogI("Date",sn(1),sn(2))=%d(20)  }
 i $a(%e,16) { s sn(1)=$zu(28,%e(16),7) s sn(2)=%d(1) k ^websys.LogI("EpisodeID",sn(1),sn(2))  }
 i $a(%e,16)||$a(%e,20) { s sn(1)=$zu(28,%d(16),7) s sn(2)=%d(1) s ^websys.LogI("EpisodeID",sn(1),sn(2))=%d(20)  }
 i $a(%e,19) { s sn(1)=$zu(28,%e(19),7) s sn(2)=%d(1) k ^websys.LogI("PatientID",sn(1),sn(2))  }
 i $a(%e,19)||$a(%e,20) { s sn(1)=$zu(28,%d(19),7) s sn(2)=%d(1) s ^websys.LogI("PatientID",sn(1),sn(2))=%d(20)  }
 i $a(%e,10)||$a(%e,17) { s sn(1)=$zu(28,%e(10),7) s sn(2)=$zu(28,%e(17),7) s sn(3)=%d(1) k ^websys.LogI("ReferenceId",sn(1),sn(2),sn(3))  }
 i $s($a(%e,10):1,$a(%e,17):1,1:$a(%e,20)) { s sn(1)=$zu(28,%d(10),7) s sn(2)=$zu(28,%d(17),7) s sn(3)=%d(1) s ^websys.LogI("ReferenceId",sn(1),sn(2),sn(3))=%d(20)  }
 i $a(%e,3) { s sn(1)=%e(3) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) k ^websys.LogI("Time",sn(1),sn(2))  }
 i $a(%e,3)||$a(%e,20) { s sn(1)=%d(3) s:sn(1)="" sn(1)=-1E14 s sn(2)=%d(1) s ^websys.LogI("Time",sn(1),sn(2))=%d(20)  }
 i $a(%e,13) { s sn(1)=$zu(28,%e(13),7) s sn(2)=%d(1) k ^websys.LogI("UserDRIndex",sn(1),sn(2))  }
 i $a(%e,13)||$a(%e,20) { s sn(1)=$zu(28,%d(13),7) s sn(2)=%d(1) s ^websys.LogI("UserDRIndex",sn(1),sn(2))=%d(20)  } }
 d gunlock TCOMMIT:%tstart&&($zu(115,1)=1)
 s SQLCODE=0 q
%1(%p1,lockonly=0) q $d(^websys.LogD(%p1))
IDKEY(%p1,lockonly=0) q $d(^websys.LogD(%p1))
%PurgeIndices(indices="") q ##class(websys.Log).%PurgeIndices(indices)
%BuildIndices(indices="") q ##class(websys.Log).%BuildIndices(indices)
%CheckUniqueIndices(indices,ok) n d,g,n,o s d=0
 s ok=1 q
%AcquireLock(%rowid,s) n %d s %d(1)=%rowid i $g(s) { l +^websys.LogD(%d(1))#"S":$zu(115,4) q $t } l +^websys.LogD(%d(1)):$zu(115,4) q $t
%AcquireTableLock(s,SQLCODE) i $g(s) { l +^websys.LogD#"S":$zu(115,4) If $t { s SQLCODE=0 q 1 } Else { s SQLCODE=-110,%msg="Unable to acquire table lock for table 'websys.Log'" q 0 }} l +^websys.LogD:$zu(115,4) If $t { s SQLCODE=0 q 1 } Else { s SQLCODE=-110,%msg="Unable to acquire table lock for table 'websys.Log'" q 0 }
%ReleaseLock(%rowid,s,i) n %d s %d(1)=%rowid i '$g(i),'$g(s) { l -^websys.LogD(%d(1)) q  } elseif $g(i),'$g(s) { l -^websys.LogD(%d(1))#"I" s:$g(%0CacheLock("websys.Log")) %0CacheLock("websys.Log")=%0CacheLock("websys.Log")-1 q  } elseif '$g(i),$g(s) { l -^websys.LogD(%d(1))#"S" q  } else { l -^websys.LogD(%d(1))#"IS" s:$g(%0CacheLock("websys.Log")) %0CacheLock("websys.Log")=%0CacheLock("websys.Log")-1 q  }
%ReleaseTableLock(s,i) i '$g(i),'$g(s) { l -^websys.LogD q 1 } elseif $g(i),'$g(s) { l -^websys.LogD#"I" q 1 } elseif '$g(i),$g(s) { l -^websys.LogD#"S" q 1 } else { l -^websys.LogD#"IS" q 1 }
%getlock(%rowid,%s) k:'$TLEVEL %0CacheLock i $i(%0CacheLock("websys.Log"))>$zu(115,6) { l +^websys.LogD:$zu(115,4) l:$t -^websys.LogD q $s($t:2,1:0) } q:$$%AcquireLock(%rowid,$g(%s)) 1 q 0
gunlock l:$a(%l) -^websys.LogD(%d(1))
 q
%nBuild s %n=$lb(,"ID","AuditDate","AuditTime","CacheUser","ClientExe","ClientIP","ClientName","LogonLocation","ReferencedClass","ReferencedId","SourceType","Type","UserDR","WorkFlowId","WorkFlowItemId","requestEPISODE","requestID","requestMRADM","requestPATIENT","x__classname")
 q
FieldValidate() n %f ;Validate all fields
 i $g(%d(3))'="",'($select($isvalidnum(%d(3),,0,86400)&&(%d(3)'=86400):1,'$isvalidnum(%d(3)):$$$ERROR($$$DTNotNum,%d(3)),%d(3)<0:$$$ERROR($$$DTMinVal,%d(3),0),1:$$$ERROR($$$DTMaxVal,%d(3),86400))) { d invalid(3+1,%d(3)) } i $g(%d(2))'="",'($select($isvalidnum(%d(2),0,0,):1,'$isvalidnum(%d(2)):$$$ERROR($$$DTNotNum,%d(2)),1:$$$ERROR($$$DTMinVal,%d(2),0))) { d invalid(2+1,%d(2)) } i $g(%d(12))'="",'(%d(12)'[","&&(",N,O,S,D,"[(","_%d(12)_","))) { d invalid(12+1,%d(12)) } i $g(%d(11))'="",'(%d(11)'[","&&(",W,C,O,"[(","_%d(11)_","))) { d invalid(11+1,%d(11)) }  q 'sqlcode
invalid(ficol,val) [sqlcode] PUBLIC { s:$l($g(val))>40 val=$e(val,1,40)_"..." d:'$d(%n) %nBuild s %msg="Field 'Log."_$lg(%n,ficol)_"' "_$s($g(val)'="":" (value "_$s(val="":"<NULL>",val=$c(0):"<EMPTY STRING>",1:"'"_val_"'")_")",1:"")_" failed validation",sqlcode=$s(%oper="INSERT":-104,1:-105) q  }
Normalize n %f ;Normalize all fields
 f %f=4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19 { s:$g(%d(%f))'="" %d(%f)=$e(%d(%f),1,50) } s:$g(%d(2))'="" %d(2)=%d(2)\1  q
missing(fname) s sqlcode=-108,%msg="'"_fname_"' in table '"_"websys"_"."_"Log"_"' is a required field" q
ulerror(cname) s sqlcode=-110,%msg="Unable to obtain lock to "_$s(%oper="DELETE":"maintain",1:"check")_" uniqueness of constraint '"_cname_"'" q
%ETrap s $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_"Error occuring during "_%oper_" in '"_"websys"_"."_"Log"_"':  $ZE="_$ze i $ze["<FRAMESTACK>" { s %msg="Error '"_$ze_"' occurred during "_%oper_" in '"_"websys"_"."_"Log"_" - Process HALTed" d ##Class(%SYS.System).WriteToConsoleLog(%msg) i ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { w !,%msg h 3 } HALT  } g %EExit
%EExit d gunlock If %tstart,$zu(115,1)=1,$TLEVEL { s %tstart=0 TROLLBACK 1 }  q:%oper="INSERT" "" q
getold ; Get old data values
 #sqlcompile SELECT=Logical
#import websys
 &sql(SELECT x__classname,AuditDate,requestEPISODE,requestPATIENT,ReferencedId,requestID,AuditTime,UserDR INTO :%e() FROM websys.Log WHERE ID=:%rowid) s sqlcode=SQLCODE q
getoldall ; Get all old data values
 #sqlcompile SELECT=Logical
#import websys
 &sql(SELECT AuditDate,AuditTime,CacheUser,ClientExe,ClientIP,ClientName,LogonLocation,ReferencedClass,ReferencedId,SourceType,Type,UserDR,WorkFlowId,WorkFlowItemId,requestEPISODE,requestID,requestMRADM,requestPATIENT,x__classname INTO :%e() FROM websys.Log WHERE ID=:%rowid) s sqlcode=SQLCODE q
%CopyIcolToName  s:$d(%d(1)) %f("ID")=%d(1) s:$d(%d(2)) %f("AuditDate")=%d(2) s:$d(%d(3)) %f("AuditTime")=%d(3) s:$d(%d(4)) %f("CacheUser")=%d(4) s:$d(%d(5)) %f("ClientExe")=%d(5) s:$d(%d(6)) %f("ClientIP")=%d(6) s:$d(%d(7)) %f("ClientName")=%d(7) s:$d(%d(8)) %f("LogonLocation")=%d(8) s:$d(%d(9)) %f("ReferencedClass")=%d(9) s:$d(%d(10)) %f("ReferencedId")=%d(10) s:$d(%d(11)) %f("SourceType")=%d(11) s:$d(%d(12)) %f("Type")=%d(12) s:$d(%d(13)) %f("UserDR")=%d(13) s:$d(%d(14)) %f("WorkFlowId")=%d(14) s:$d(%d(15)) %f("WorkFlowItemId")=%d(15) s:$d(%d(16)) %f("requestEPISODE")=%d(16) s:$d(%d(17)) %f("requestID")=%d(17) s:$d(%d(18)) %f("requestMRADM")=%d(18) s:$d(%d(19)) %f("requestPATIENT")=%d(19) s:$d(%d(20)) %f("x__classname")=%d(20) q
%0Qotl1(%val="") ;
	Quit $s(%val="":"",1:$zdh(%val,3,,,,,,,"error: '"_%val_"' is an invalid date value"))
%0Qotl2(%val="") ;
	Quit $select(%val="":"",1:$ztimeh(%val,,"error"))
%QuickInsert(d,%nolock=0,pkey=0,parentpkey=0) // Insert new row with values d(icol)
 s:%nolock=2 %nolock=0
 s:($g(d(2)))'="" d(2)=$$%0Qotl1(d(2)) s:($g(d(3)))'="" d(3)=$$%0Qotl2(d(3)) 
 s %ROWID=$$%insert^websys.Log.T1(.d,$c(0,%nolock=1,0)),%ROWCOUNT='SQLCODE,%qrc=SQLCODE k d q
%QuickBulkInsert(%inscall,%nolock=0) // Insert multiple new rows with values %qd(icol)
 n c,call,nc,nr,%qd,r,x s:%nolock=2 %nolock=0 s nr=$zobjexport(12) f r=1:1:nr { s nc=$zobjexport(12) k %qd f c=1:1:nc { s:$zobjexport(17) %qd(c+1)=$zobjexport(12) } d @%inscall s x=$zobjexport($s(%qrc:-1,1:%ROWID),18) } q  
%QuickUpdate(%rowid,d,%nolock=0,pkey=0) // Update row with SQLRowID=%rowid with values d(icol)
 s:%nolock=2 %nolock=0
 s:($g(d(2)))'="" d(2)=$$%0Qotl1(d(2)) s:($g(d(3)))'="" d(3)=$$%0Qotl2(d(3)) 
 d %update^websys.Log.T1(%rowid,$c(0,%nolock=1,0),.d,,,1) s %ROWCOUNT='SQLCODE s:SQLCODE=100 SQLCODE=0 s %qrc=SQLCODE k d q
%QuickBulkUpdate(%updcall,%nolock=0) // Update multiple new rows with values %qd(icol)
 n c,call,nc,nr,%qd,r,x s:%nolock=2 %nolock=0 s nr=$zobjexport(12) f r=1:1:nr { s %rowid=$zobjexport(12),nc=$zobjexport(12) k %qd f c=1:1:nc { s:$zobjexport(17) %qd(c+1)=$zobjexport(12) } d @%updcall s x=$zobjexport($s(%qrc:-1,1:%ROWID),18) q:%qrc  } q  
%QuickDelete(%rowid,%nolock=0,pkey=0) // Delete row where SQLRowID=%rowid
 s:%nolock=2 %nolock=0
 d %delete^websys.Log.T1(%rowid,$c(0,%nolock=1,0))
 If SQLCODE=-106 { s %qrc=0,%ROWCOUNT=0 } ElseIf SQLCODE<0 { s %qrc=-SQLCODE,%ROWCOUNT=0 } Else { s %ROWCOUNT=1,%qrc=SQLCODE } q
%QuickLoad(%rowid,%nolock=0,pkey=0,skipnewqout=0) // Get non-hidden fields from row where SQLRowID=%rowid
 n d,i,il,subs,t s:%nolock=2 %nolock=1
 i %nolock=0 { i '$$%AcquireLock^websys.Log.T1(%rowid) { s %qrc=114,%msg="Unable to acquire exclusive lock on table websys.Log for RowID value: "_%rowid,%ROWCOUNT=0 q  } s:$zu(115,2) il=$zu(115,2,0) }
#sqlcompile SELECT=ODBC
 &sql(SELECT %INTERNAL(ID),AuditDate,AuditTime,CacheUser,ClientExe,ClientIP,ClientName,LogonLocation,ReferencedClass,ReferencedId,SourceType,Type,UserDR,WorkFlowId,WorkFlowItemId,requestEPISODE,requestID,requestMRADM,requestPATIENT,x__classname INTO :d(1),:d(2),:d(3),:d(4),:d(5),:d(6),:d(7),:d(8),:d(9),:d(10),:d(11),:d(12),:d(13),:d(14),:d(15),:d(16),:d(17),:d(18),:d(19),:d(20) FROM websys.Log WHERE %ID = :%rowid)
 i SQLCODE { i %nolock=0 { d %ReleaseLock^websys.Log.T1(%rowid,0,1) d:$g(il) $zu(115,2,il) } s %ROWCOUNT=0 s:SQLCODE<0 SQLCODE=-SQLCODE s %qrc=SQLCODE q  }
 If %nolock=0 { If $zu(115,1)=1 { TSTART  } ElseIf '$TLEVEL,$zu(115,1)=2 { TSTART  }}
 s i=-1 f  { s i=$o(d(i)) q:i=""  s d=$zobjexport(d(i),18) } s %qrc=0,%ROWCOUNT=1 i %nolock=0 { d %ReleaseLock^websys.Log.T1(%rowid,0,0) d:$g(il) $zu(115,2,il) } q
%QuickBulkLoad(%rowidlist,%nolock=0,pkey=0) // QuickLoad multiple rows
 n i,ql,rc,%rowid s:%nolock=2 %nolock=0 s rc=0,ql=$g(^oddSQL("websys","Log","QL")) s $p(ql,",",4)="1)"
 f i=2:1:$lg(%rowidlist)+1 { s %rowid=$lg(%rowidlist,i) d @ql If SQLCODE=0 { s rc=rc+1 } Else { q  } } s %ROWCOUNT=rc q
SQLUPPER(v,l) PUBLIC { q $zu(28,v,7,$g(l,32767)) }
ALPHAUP(v,r) PUBLIC { q $zu(28,v,6) }
STRING(v,l) PUBLIC { q $zu(28,v,9,$g(l,32767)) }
SQLSTRING(v,l) PUBLIC { q $zu(28,v,8,$g(l,32767)) }
UPPER(v) PUBLIC { q $zu(28,v,5) }
MVR(v) PUBLIC { q $zu(28,v,2) }
#endclasscontext
#endclassmethod
]]></Routine>
</Export>
