<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="websys.Report">
<Description>
Report Interface Definition</Description>
<Abstract>0</Abstract>
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract,XML.Abstract</Super>
<TimeCreated>60218,47035.340043</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>408</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="EXTENTSIZE">
<Default>103</Default>
</Parameter>

<Parameter name="SQLCODE">
<Default>Code</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Final>0</Final>
<Default>Description</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Index name="CodeHospital">
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>Code,Hospital</Properties>
<Unique>1</Unique>
</Index>

<Property name="Code">
<Description>
Code which uniquely identifies a report</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="DSN">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Description">
<Description>
Brief Description of the report</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="DoNotSaveHistory">
<Type>%Boolean</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Property name="Expression">
<Description>
Pre-processing expression</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Hospital">
<Type>%String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P1">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P1Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P2">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P2Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P3">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P3Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P4">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P4Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P5">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P5Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P6">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P6Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P7">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P7Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P8">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P8Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P9">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="P9Name">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ParameterComponent">
<Description>
Component for page to capture report parameter.
Used in conjunction with ParameterComponent.</Description>
<Type>websys.Component</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="ParameterUrl">
<Description>
Url for page to capture report parameter.</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="PrintDescriptionExpression">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="PrintPriority">
<Type>%Library.String</Type>
<Collection/>
<Relationship>0</Relationship>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Printer">
<Type>websys.Printer</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="ReportGroup">
<Type>websys.ReportGroup</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="ReportIsAuditLetter">
<Type>%Boolean</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Property name="ReportUrl">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="SaveToDatabase">
<Type>%Boolean</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Property name="Type">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="UpdateDate">
<Type>%Library.Date</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="UpdateTime">
<Type>%Library.Time</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="UpdateUser">
<Type>User.SSUser</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Method name="CrystalParamList">
<Description><![CDATA[
Return parameters list for crystal reports web server.<br>
&prompt0=abc&prompt1=cde
etc]]></Description>
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Private>0</Private>
<ReturnType>websys.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n str
 s str=""
 s str=str_"&prompt0="_##Class(websys.Conversions).expressionEvaluate(..P1)
 s str=str_"&prompt1="_##Class(websys.Conversions).expressionEvaluate(..P2)
 s str=str_"&prompt2="_##Class(websys.Conversions).expressionEvaluate(..P3)
 s str=str_"&prompt3="_##Class(websys.Conversions).expressionEvaluate(..P4)
 s str=str_"&prompt4="_##Class(websys.Conversions).expressionEvaluate(..P5)
 s str=str_"&prompt5="_##Class(websys.Conversions).expressionEvaluate(..P6)
 s str=str_"&prompt6="_##Class(websys.Conversions).expressionEvaluate(..P7)
 s str=str_"&prompt7="_##Class(websys.Conversions).expressionEvaluate(..P8)
 s str=str_"&prompt8="_##Class(websys.Conversions).expressionEvaluate(..P9)
 q str
]]></Implementation>
</Method>

<Method name="EvaluateExpressionForTPS">
<Description><![CDATA[
To Be used by the TPS, to Execute a routine that will both create temporary tables for a crystal report
and return a string of the form:
prompt0=value0&prompt1=value1 ...........up to Prompt 9.
OR if there is an error
Error=<Error Message>]]></Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ID:%Library.String=""</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 New PrintHist,rpt,return,Exp
 s return=""
 If ID'="" {
 Set PrintHist = ##Class(websys.PrintHistory).%OpenId(ID)
 If PrintHist {
 set rpt = ##Class(websys.Report).%OpenId(PrintHist.ReportDR.%Id())
 If rpt {
 i rpt.P1Name'="" s @rpt.P1Name=PrintHist.P1
 i rpt.P2Name'="" s @rpt.P2Name=PrintHist.P2
 i rpt.P3Name'="" s @rpt.P3Name=PrintHist.P3
 i rpt.P4Name'="" s @rpt.P4Name=PrintHist.P4
 i rpt.P5Name'="" s @rpt.P5Name=PrintHist.P5
 i rpt.P6Name'="" s @rpt.P6Name=PrintHist.P6
 i rpt.P7Name'="" s @rpt.P7Name=PrintHist.P7
 i rpt.P8Name'="" s @rpt.P8Name=PrintHist.P8
 i rpt.P9Name'="" s @rpt.P9Name=PrintHist.P9
 ;k ^zReportExecute
 ;s ^zReportExecute("P1")=rpt.P1Name_"="_@rpt.P1Name
 ;s ^zReportExecute("P2")=rpt.P2Name_"="_@rpt.P2Name
 ;s ^zReportExecute("P3")=rpt.P3Name_"="_@rpt.P3Name
 ;s ^zReportExecute("P4")=rpt.P4Name_"="_@rpt.P4Name
 ;s ^zReportExecute("Expression")=rpt.Expression
 s return=##Class(websys.Conversions).expressionEvaluate(rpt.Expression)
 ;s ^zReportExecute("Done")="True"
 }
 }
 }
 q return
]]></Implementation>
</Method>

<Method name="Execute">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>%exp:%String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
 n err
 //Have to let everything through here... as anything can be in the expression
 s $zt="ExecuteError^"_$ZN
 s err=""
 x %exp
 q err
ExecuteError
 s %e=$ze
 d BACK^%ETN
 q "("_$g(%exp)_") "_$g(%e)
]]></Implementation>
</Method>

<Method name="ExecuteReportForTPS">
<Description>
Executes a cache report for Trak Print Service.
The Parameter expressions have already been evaluated.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ID:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 New PrintHist,rpt,msg
 s msg=""
 s ^zjohn("report","eval")="hello"
 If ID '= "" {
 Set PrintHist = ##Class(websys.PrintHistory).%OpenId(ID)
 If PrintHist {
 set rpt = ##Class(websys.Report).%OpenId(PrintHist.ReportDR.%Id())
 If rpt {
 i rpt.P1Name'="" s @rpt.P1Name=PrintHist.P1
 i rpt.P2Name'="" s @rpt.P2Name=PrintHist.P2
 i rpt.P3Name'="" s @rpt.P3Name=PrintHist.P3
 i rpt.P4Name'="" s @rpt.P4Name=PrintHist.P4
 i rpt.P5Name'="" s @rpt.P5Name=PrintHist.P5
 i rpt.P6Name'="" s @rpt.P6Name=PrintHist.P6
 i rpt.P7Name'="" s @rpt.P7Name=PrintHist.P7
 i rpt.P8Name'="" s @rpt.P8Name=PrintHist.P8
 i rpt.P9Name'="" s @rpt.P9Name=PrintHist.P9
 ;k ^zReportExecute
 ;s ^zReportExecute("P1")=rpt.P1Name_"="_@rpt.P1Name
 ;s ^zReportExecute("P2")=rpt.P2Name_"="_@rpt.P2Name
 ;s ^zReportExecute("P3")=rpt.P3Name_"="_@rpt.P3Name
 ;s ^zReportExecute("P4")=rpt.P4Name_"="_@rpt.P4Name
 ;s ^zReportExecute("Expression")=rpt.Expression
 ;Note That expression.Execute will resolve the expression in P1 to P9 by it self
 s msg=..Execute(rpt.Expression)
 ;d ##Class(websys.Conversions).expressionExecute(rpt.Expression)
 ;s ^zReportExecute("Done")="True"

 }
 }
 }
 s ^zjohn("report","eval")=msg

 q msg
]]></Implementation>
</Method>

<Method name="GetIdFromLocation">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>reportcode:%Library.String,locationid:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n rptid
 s rptid=""
 i locationid="" q ""
 s hospid="" s hospid=$p($g(^CTLOC(locationid)),"^",22)
 ; Try and find the report for this hospital
 i hospid'="" s rptid=$o(^websys.ReportI("CodeHospital"," "_##Class(%Collation).Upper(reportcode),hospid,""))
 ; Try and find the report (no hospital)
 i rptid="" s rptid=$o(^websys.ReportI("CodeHospital"," "_##Class(%Collation).Upper(reportcode),-100000000000000,""))
 q rptid
]]></Implementation>
</Method>

<Method name="GetReportDSN">
<Description>
Log 51261 - AI - 30-08-2005 : Method to return the Report's DSN.</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>id:%Library.String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
 n rpt,dsn
 s dsn=""
 s rpt=##Class(websys.Report).%OpenId(id,0)
 i rpt {
 s dsn=rpt.DSN
 d rpt.%Close()
 }
 q dsn
]]></Implementation>
</Method>

<Method name="GetReportType">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>id:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n rpt,type
 s type=""
 s rpt=##Class(websys.Report).%OpenId(id,0)
 i rpt {
 s type=rpt.Type
 d rpt.%Close()
 }
 q type
]]></Implementation>
</Method>

<Method name="Job">
<Description>
Generate a report as a bckground job.
;s userid=%session.Get("LOGON.USERID")
;Set config=##Class(websys.Configuration).%OpenId(1,0)
;;log 22193 if Print service is enabled and the report type is crystal do not job print request
;i config.PrintServiceEnabled {
;    i locationid'="" s rptid=..GetIdFromLocation(reportcode,locationid)
;    i rptid="" s rptid=..GetIdFromCodeOrDescription(reportcode)
;    i rptid="" q
;    ;
;    s rpt=##Class(websys.Report).%OpenId(rptid)
;    i rpt {
;	i (rpt.Type = "Crystal"){
;	    d Print(reportcode,locationid,ip,saveas,userid,MailFrom,MailTo,MailCC,MailSubject,MailMessage)
;	} 
;	i (rpt.Type = "Word") {
;	   i $d(^TPSForWordDisabled) {
;	       j Print(reportcode,locationid,ip,saveas,userid,MailFrom,MailTo,MailCC,MailSubject,MailMessage):(:1)
;	   }else {
;   	       d Print(reportcode,locationid,ip,saveas,userid,MailFrom,MailTo,MailCC,MailSubject,MailMessage)
;	   }
;	}
;	else {
;	    j Print(reportcode,locationid,ip,saveas,userid,MailFrom,MailTo,MailCC,MailSubject,MailMessage):(:1)
;	}
;    }
;} else {
;    j Print(reportcode,locationid,ip,saveas,userid,MailFrom,MailTo,MailCC,MailSubject,MailMessage):(:1)
;}
;q
;</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>reportcode:%Library.String,locationid:%Library.String,ip:%Library.String,saveas:%Library.String="",userid:%Library.String="",MailFrom:%Library.String="",MailTo:%Library.String="",MailCC:%Library.String="",MailSubject:%Library.String="",MailMessage:%Library.String=""</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ;log 23911: TPS is assumed enabled and capable of handling all report types
 n config,rpt
 d ..Print(reportcode,locationid,ip,saveas,userid,MailFrom,MailTo,MailCC,MailSubject,MailMessage)
 q
]]></Implementation>
</Method>

<Method name="LookUpByReportBroker">
<Description>
KK 21/Jan/2003 Log 31573 - LookUpBroker for LinkReport field in websys.Menu.Edit</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>itmjs:%Library.String="",itmjsex:%Library.String="",val:%Library.String=""</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Boolean</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n desc,id,code,type
 s (desc,id,code,type)=""
 ;
 s val=$g(val)
 ;
 &sql(
 SELECT	ID,Code,Description,Type
 INTO :id,:code,:desc,:type
 FROM	websys.Report
 WHERE	(%UPPER Code = %UPPER :val)
 )
 i SQLCODE q 0
 i 'SQLCODE{
 s retval=itmjs_"('"_$ZCVT(desc,"O","JS")_"');"
 i itmjsex'="""" s retval=retval_itmjsex_"('"_$ZCVT(id,"O","JS")_"^"_$ZCVT(code,"O","JS")_"^"_$ZCVT(desc,"O","JS")_"^"_$ZCVT(type,"O","JS")_"');"
 &javascript<#(retval)#>
 }
 q 1
]]></Implementation>
</Method>

<Method name="ParameterUrlSet">
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>val:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 i $zcvt(val,"L")[".csp" { //if its' a link to a csp page, store it as lowercase
 s i%ParameterUrl=$zcvt(val,"L")
 } else {
 s i%ParameterUrl=val
 }
]]></Implementation>
</Method>

<Method name="Print">
<Description>
Generate a printed report.:
ReportCode - unique code for the report, corresponds to websys.Report
LocationID - location from where the report was requested. Used in Print Manager to determine the destination printer, e.g. login location
IP - ip address of the client PC from where the report was requested
Filename - filename to save the report to. e.g. test.rtf. Applies to crystal reports.
If the type of report is word this is the name of the file to print.

Log 51153 - AI - 13-07-2005 : Add parameters 18 and 19 - Reprint and SaveOnly. These are passed through to websys.PrintHistory AddItem.
NOTE: Parameters 18 and 19 may not be in most calls to Print - They are currently only set from the calls that set them to 1.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[reportcode:%Library.String,locationid:%Library.String,ip:%Library.String,filename:%Library.String="",userid:%Library.String="",MailFrom:%Library.String="",MailTo:%Library.String="",MailCC:%Library.String="",MailSubject:%Library.String="",MailMessage:%Library.String="",Device:%Library.String="",noofcopies:%Library.String="",ClassName:%String="",ClassNameID:%String="",&ReportHistoryID:%String="",meth:%String="",recip:%String="",reprint:%Boolean=0,saveonly:%Boolean=0]]></FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
	 n rpt,rptid,prtid,prtobj,Error,queueStatus,PrinterID,BatchID,id
	 n p1,p2,p3,p4,p5,p6,p7,p8,p9,printdesc,Trans,temp
	 ;
	 i userid="",$d(%session) s userid=%session.Get("LOGON.USERID")
	 ;
	 ; TP: the ^zwebsysReport global is used to debug printing. until we have a better way 
	 ; to debug printing we should leave it here.
	 k ^zwebsysReport
	 s ^zwebsysReport("Print","reportCode")=reportcode
	 s ^zwebsysReport("Print","locationid")=locationid
	 s ^zwebsysReport("Print","ip")=ip
	 s ^zwebsysReport("Print","filename")=filename
	 s ^zwebsysReport("Print","UserID")=userid
	 s ^zwebsysReport("Print","Device")=Device
	 s ^zwebsysReport("Print","ClassName")=$g(ClassName)
	 s ^zwebsysReport("Print","ClassNameID")=$g(ClassNameID)
	 s ^zwebsysReport("Print","noofcopies")=$g(noofcopies)
	 ;
	 ; Session info is not always available .... needs to be able to work without it.
	 i $d(%session) d ##Class(websys.Component).GetComponentMessages(.Trans,"websys.SYSTEM,websys.Report.Edit")
	 s queueStatus = "W"		;default queuestatus
	 s Error = ""
	 s BatchID = ""			;not used here
	 s (rptid,prtid,dev,PrinterID)=""
	 s (p1,p2,p3,p4,p5,p6,p7,p8,p9,printdesc) = ""
	 i ReportHistoryID="" s rptid=..GetIdFromCodeOrDescription(reportcode)
	 i ReportHistoryID'="" d
	 . s rrhobj=##Class(websys.RequestedReportHistory).%OpenId(ReportHistoryID)
	 . i rrhobj d
	 . . s rptid=rrhobj.ReportDR.%Id()
	 i rptid'="" {
	     s rpt=##Class(websys.Report).%OpenId(rptid)		
	     i rpt {
			s keepReport=rpt.SaveToDatabase
			s ^zwebsysReport("Print","ReportId") = rptid
	     	; TP log 32035: Other type reports do not need Printer or Print Manager i.e. device will be null
	   		if rpt.Type'="Other" {
				; KK log 30023: if user print options is enabled and alternate printing device is selected,
	     	    ; then set the device to the alternative device selected by user.
	     	    ; KK log 35340 : To set the PrinterID to the User Print Options selected printer.
	     	    ; Note: If there is a temporary override printer defined along with the alternative printers, 
	     	    ; the user print option screen picks up only that override printer.
	     	    i Device'=""{
	     	        ;s dev=Device
	     	        ;s PrinterID=##Class(websys.Printer).GetIdfromCodeOrDevice(dev)
	     	        s dev=$p(Device,"^",2)
	 				s printdesc=$p(Device,"^",1)
	 				i printdesc'="" s PrinterID=##Class(websys.Printer).GetIdFromCodeOrDescription(printdesc)
	             } else {
	     	        ; When the User Print Options is OFF, determine destination printer based on report, location and computer(ip)
	     	        ; There is an order or precedence involved which is detailed in the tech notes of log 28788
	    	        s temp=##Class(websys.Print).GetPrinter(reportcode,locationid,ip,.prtid)
	    	        s dev=$p(temp,"^",1)
	 				s prtid=$p(temp,"^",2)
	     	    }
 if prtid '="" {
 s prtobj = ##Class(websys.Print).%OpenId(prtid)
 if prtobj {
 ;Check for temporary override printer and check for batch printing - Batch printing log 28787:
 ;If the selected printer is a defined as a Batch printer then use the special Print queue 
 ;status of "D" for deferred. The item will not be printed immediately.
 if prtobj.TempOverridePrinter {
 ; If there is a Temporary overide printer use it
 s PrinterID = prtobj.TempOverridePrinter.%Id()
 s dev=prtobj.TempOverridePrinter.Device
 if prtobj.TempOverridePrinter.BatchPrint s queueStatus = "D"
 } else {
 s PrinterID = prtobj.Printer.%Id()
 s dev=prtobj.Printer.Device	
 if prtobj.Printer.BatchPrint s queueStatus = "D"
 }
 }
 }    
	         	}
 s ^zwebsysReport("Print","dev,prtid,PrinterID") = dev_", "_$g(prtid)_","_PrinterID 
 i ReportHistoryID="" {
 ; Evaluate report parameters
 if $d(%request),$d(%request.Data("prompt0")) {
 ;Print Request has come from a menu and is for a crystal report. 
 ;Such requests do not define the variables uses in the Report definition. 
 ;Instead parameters have already been resolved into Prompt0-8.
 s p1=%request.Data("prompt0",1)
 s p2=%request.Data("prompt1",1)
 s p3=%request.Data("prompt2",1)
 s p4=%request.Data("prompt3",1)
 s p5=%request.Data("prompt4",1)
 s p6=%request.Data("prompt5",1)
 s p7=%request.Data("prompt6",1)
 s p8=%request.Data("prompt7",1)
 s p9=%request.Data("prompt8",1)
 s ^zwebsysReport("Print","Param_Expressions")=""
 s ^zwebsysReport("Print","Prompt0-9")="P1=["_p1_"], P2=["_p2_"], P3=["_p3_"], P4=["_p4_"], P5=["_p5_"], P6=["_p6_"], P7=["_p7_"], P8=["_p8_"], P9=["_p9_"]"		
 } else {
 s ^zwebsysReport("Print","Prompt0-9")=""
 s ^zwebsysReport("Print","Param_Expressions")="P1=["_rpt.P1_"], P2=["_rpt.P2_"], P3=["_rpt.P3_"], P4=["_rpt.P4_"], P5=["_rpt.P5_"], P6=["_rpt.P6_"], P7=["_rpt.P7_"], P8=["_rpt.P8_"], P9=["_rpt.P9_"]"		
 s p1=##Class(websys.Conversions).expressionEvaluate(rpt.P1)
 s p2=##Class(websys.Conversions).expressionEvaluate(rpt.P2)
 s p3=##Class(websys.Conversions).expressionEvaluate(rpt.P3)
 s p4=##Class(websys.Conversions).expressionEvaluate(rpt.P4)
 s p5=##Class(websys.Conversions).expressionEvaluate(rpt.P5)
 s p6=##Class(websys.Conversions).expressionEvaluate(rpt.P6)
 s p7=##Class(websys.Conversions).expressionEvaluate(rpt.P7)
 s p8=##Class(websys.Conversions).expressionEvaluate(rpt.P8)
 s p9=##Class(websys.Conversions).expressionEvaluate(rpt.P9)
 }
 }
 s printdesc=##Class(websys.Conversions).expressionEvaluate(rpt.PrintDescriptionExpression)
 ;
 ; determine if the combination of Report.Type, Printer and Filename makes sense
 s ^zwebsysReport("Print","Report Type") = rpt.Type
 i ((rpt.Type="Crystal")!(rpt.Type="Cache+Crystal")) {
 if (dev_filename) ="" {
 ; we need either a printer or a filename to save as
 s queueStatus = "E"
 s Error = $g(Trans("NOPRINTERFILE"),"No Printer Device or File name found.")
 }		
 } elseif rpt.Type="Cache"{
 if dev ="" {
 ;A cache Report is expected to define a printer
 s queueStatus = "E"
 s Error = $g(Trans("NOPRINTER"),"No Printer Device found.")
 }
 } elseif (rpt.Type="Other") {
 ;Type Other Reports can be any Cache routine .... there are no restriction
 ;
 } elseif rpt.Type="Word" {
 if (filename) ="" {
 ;Word Reports nust have a file by definition.
 s queueStatus = "E"
 s Error = $g(Trans("NOFILE"),"No File name found.")
 }
 } else {
 ;safety trap
 s queueStatus = "E"
 s Error = $g(Trans("NOREPORTTYPE"),"Unknown report type")_" ["_rpt.Type_"]"
 }
	  			d rpt.%Close()
	     	} else {
	 			s queueStatus = "E"
	 			s Error = $g(Trans("NOREPORTOBJ"), "No Report object found for")_" ["_rptid_"]"
	     	}
	     	; Log 51146 YC - Checks that SMTP server is set if faxing or printing
	     	if meth'="",((meth="E")!(meth="F")) {
		     	s obj=##Class(websys.Configuration).%OpenId(1)
		     	i obj,obj.SMTPServer="" {
		     		s queueStatus="E"
		     		s Error = $g(Trans("NOSMTPSERVER"), "SMTP Server is not setup in Configuration Manager")
		     	}
	     	}
	 } else {		
	 	s queueStatus = "E"
	 	s Error = $g(Trans("NOREPORTID"),"Report code not found for")_" ["_reportcode_"] "_$g(Trans("NOTFOUNDIN"))
	 } 
	 ;
	 ;Proceed ... if the queueStatus = "E" the the entry will appear in the Print History as an error
	 s ^zwebsysReport("Print","Error")=Error
	 s ^zwebsysReport("Print","Status")=queueStatus
	 s ^zwebsysReport("Print","User Options Printer, noofcopies,dev,PrinterID")=noofcopies_","_PrinterID_","_dev
	 ;KK log 30023 to implement number of copies to be printed "ReportHistoryID=",
	 i noofcopies="" s noofcopies=1
	 ;f i=1:1:noofcopies d ##Class(websys.PrintHistory).AddItem(userid,rptid,PrinterID,filename,p1,p2,p3,p4,p5,p6,p7,p8,p9,printdesc,queueStatus,MailFrom,MailTo,MailCC,MailSubject,MailMessage,Error,BatchID,locationid)
	 i queueStatus'="E" s ReportHistoryID=##Class(websys.RequestedReportHistory).InsertRequestedReportHistory(rptid,ClassName,ClassNameID, userid, locationid, "")
	 s ^zwebsysReport("Print","Done")=0
	 s ^zwebsysReport("Print","PrinterID,printdesc")=PrinterID_","_printdesc
	 ; Log 51153 - AI - 13-07-2005 : Add parameters 18 and 19 - Reprint and SaveOnly. Passed in to this method and then passed on to websys.PrintHistory AddItem.
	 d ##Class(websys.PrintHistory).AddItem(userid,rptid,PrinterID,filename,p1,p2,p3,p4,p5,p6,p7,p8,p9,printdesc,queueStatus,MailFrom,MailTo,MailCC,MailSubject,MailMessage,Error,BatchID,locationid,noofcopies,ip,ReportHistoryID,meth,recip,reprint,saveonly)
	 s ^zwebsysReport("Print","Done")="done"
	 q
]]></Implementation>
</Method>

<Method name="ReportUrlSet">
<Final>0</Final>
<ClassMethod>0</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>val:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 i $zcvt(val,"L")[".csp" { //if its' a link to a csp page, store it as lowercase
 s i%ReportUrl=$zcvt(val,"L")
 } else {
 s i%ReportUrl=val
 }
]]></Implementation>
</Method>

<Method name="VBFindLEClose">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<PlaceAfter>VBFindLEFetch</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n work,rs
 ;
 s work=$li(QHandle,3)
 s rs=$li(work,1)
 //SYSTEMOREF i rs d rs.%Close()
 ;
 s QHandle=""
 k %trakobjects(+rs) //SYSTEMOREF
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="VBFindLEExecute">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,desc:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,rs
 s work=""
 ;
 s user=$lb(desc)
 ;
 s rs=##Class(%Library.ResultSet).%New("websys.Report:VBFindLESimple")
 s %trakobjects(+rs)=rs //SYSTEMOREF
 d rs.Execute(desc)
 ;
 s work=$lb(rs)
 s QHandle=$lb(0,user,work)
 ;
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="VBFindLEFetch">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<PlaceAfter>VBFindLEExecute</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,rs,desc,ID,Description,UpdateDate,UpdateTime
 s (desc,ID,Description,UpdateDate,UpdateTime)=""	
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s desc=$li(user,1)
 s rs=$li(work,1)
 s rs=$g(%trakobjects(+rs)) //SYSTEMOREF
 ;
 i 'rs.Next() s AtEnd=1,Row="" q $$$OK
 ;
 s ID=rs.Data("ID")
 s Description=rs.Data("Description")
 s UpdateDate=##class(websys.Conversions).DateLogicalToHtml(rs.Data("UpdateDate"))
 s UpdateTime=##class(websys.Conversions).TimeLogicalToHtml(rs.Data("UpdateTime"))
 s Row=$lb(ID,Description,UpdateDate,UpdateTime)
 s work=$lb(rs)
 s QHandle=$lb(AtEnd,user,work)
 ;
 q $$$OK
]]></Implementation>
</Method>

<Method name="websysBeforeDelete">
<Description>
KK 7/Feb/2003 Log:29627 - Check before deleting Report</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compref:%Library.String="",id:%Library.String=""</FormalSpec>
<Implementation><![CDATA[
 ;KK 7/Feb/2003 Log:29627
 n printid,report,compid
 s (printid,report,compid)=""
 ;
 q:id=""
 ;
 s compid=$e($p(compref,"i",1),2,999)
 ;
 d ##Class(websys.Component).GetComponentMessages(.t,"websys.SYSTEM,websys.Report.Edit")
 ;
 &sql(
 SELECT ID,Report->Description 
 INTO :printid, :report
 FROM websys.Print
 WHERE Report=:id
 )
 i 'SQLCODE{
 d:msg msg.AddItem("E",t("REP"),report_" : "_t("REP_PRN_DELETE"),compid,"")
 }else{
 d ..websysDelete(id)
 }
 q
]]></Implementation>
</Method>

<Method name="websysSaveAs">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compref:%Library.String="",id:%Library.String=""</FormalSpec>
<Implementation><![CDATA[
	n compid,Codeid,oktosave,objOrig,objNew,Code
	s compid=$e($p(compref,"i",1),2,999)
	s Code = %request.Get("Code")
	d ##Class(websys.Component).GetComponentMessages(.t,"websys.Report.SaveAs")
	
	s oktosave=1
	s Codeid="",Codeid=##Class(websys.Report).GetIdFromCodeOrDescription(Code)
 i Code="" d:msg msg.AddItem("E",$g(t("Code")),$g(t("CODEISBLANK")),compid,"Code") s oktosave=0
 i Codeid'="",Code'="" d:msg msg.AddItem("E",$g(t("Code")),$g(t("CODEEXISTS")),compid,"Code") s oktosave=0
 i (oktosave) {
		s objOrig=##class(websys.Report).%OpenId(id)
		i (objOrig) {
			s objNew=##class(websys.Report).%New()
			i (objNew) {
				s objNew.Code = Code
				s objNew.Description = Code
				s objNew.DSN = objOrig.DSN
				s objNew.Expression = objOrig.Expression
				s objNew.Hospital = objOrig.Hospital
				s objNew.SaveToDatabase = objOrig.SaveToDatabase
				s objNew.DoNotSaveHistory = objOrig.DoNotSaveHistory
				s objNew.P1 = objOrig.P1
				s objNew.P1Name = objOrig.P1Name
				s objNew.P2 = objOrig.P2
				s objNew.P2Name = objOrig.P2Name
				s objNew.P3 = objOrig.P3
				s objNew.P3Name = objOrig.P3Name
				s objNew.P4 = objOrig.P4
				s objNew.P4Name = objOrig.P4Name
				s objNew.P5 = objOrig.P5
				s objNew.P5Name = objOrig.P5Name
				s objNew.P6 = objOrig.P6
				s objNew.P6Name = objOrig.P6Name
				s objNew.P7 = objOrig.P7
				s objNew.P7Name = objOrig.P7Name
				s objNew.P8 = objOrig.P8
				s objNew.P8Name = objOrig.P8Name
				s objNew.P9 = objOrig.P9
				s objNew.P9Name = objOrig.P9Name
				d objNew.ParameterComponentSetObjectId(objOrig.GetIdFromCodeOrDescription(id))
				s objNew.ParameterUrl = objOrig.ParameterUrl
				s objNew.PrintDescriptionExpression = objOrig.PrintDescriptionExpression
				d objNew.PrinterSetObjectId(objOrig.GetIdFromCodeOrDescription(id))
				d objNew.ReportGroupSetObjectId(objOrig.GetIdFromCodeOrDescription(id))
				s objNew.ReportIsAuditLetter = objOrig.ReportIsAuditLetter
				s objNew.ReportUrl = objOrig.ReportUrl
				s objNew.Type = objOrig.Type
				s objNew.UpdateDate = objOrig.UpdateDate
				s objNew.UpdateTime = objOrig.UpdateTime
				s objNew.UpdateUser = objOrig.UpdateUser
				d objNew.%Save()
				d objNew.%Close() 
			}
			d objOrig.%Close()
		}
	}
]]></Implementation>
</Method>

<Method name="zPrintReport">
<Description>
TP 29/01/03: This method has been retired. It is no longer called from anywhere.</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>rptid:%Library.String,prtid:%Library.String,userid:%Library.String,filename:%Library.String="",P1:%Library.String="",P2:%Library.String="",P3:%Library.String="",P4:%Library.String="",P5:%Library.String="",P6:%Library.String="",P7:%Library.String="",P8:%Library.String="",P9:%Library.String="",printdesc:%Library.String="",MailFrom:%Library.String="",MailTo:%Library.String="",MailCC:%Library.String="",MailSubject:%Library.String="",MailMessage:%Library.String=""</FormalSpec>
<Implementation><![CDATA[
 ;27/11/2002 Aaron This method is now obselete. The Print method has taken over
 ;all it's functionality.
 n http,config,rpt,rptname,prt,TPSenabled,prtobj,dev,queueStatus,PrinterID
 ;
 ;s ^zwebsysReport("PrintReport",0) = "prtid ="_prtid
 ;log 28787 determine the type of Print queue ... if Printer.BtachPrint then
 ;new items inserted into the PrintHistory Table will be of Status "D"
 s queueStatus = ""
 s dev = ""
 if prtid '="" {
 s queueStatus = "W"		;default queuestatus
 s PrinterID = ""
 s prtobj = ##Class(websys.Print).%OpenId(prtid)
 if prtobj {
 if prtobj.TempOverridePrinter {
 s PrinterID = prtobj.TempOverridePrinter.%Id()
 s dev=prtobj.TempOverridePrinter.Device
 if prtobj.TempOverridePrinter.BatchPrint {
 s queueStatus = "D"
 }
 } else {
 s PrinterID = prtobj.Printer.%Id()
 s dev=prtobj.Printer.Device	
 if prtobj.Printer.BatchPrint {
 s queueStatus = "D"
 }
 }
 }
 }
 s rpt=##Class(websys.Report).%OpenId(rptid)
 ;
 ; Get addtional print info - e.g. portrait, landscape, paper try etc.
 s prt=""
 ;
 ; we need either a printer or a filename to save as
 ;s ^zwebsysReport("PrintReport",1) = "Report Type ="_rpt.Type
 ;log 23911: The TPS is now always enabled and capable of handling all report types
 ;Set config=##Class(websys.Configuration).%OpenId(1,0)
 s TPSenabled = 1
 i rpt,(dev_filename)'="",((rpt.Type="Crystal")!(rpt.Type="Cache+Crystal")) {
 i TPSenabled {
 ;NEW way that puts Crystal reports directly into the the PrintHistory
 ;table with a status of Waiting.The Trak print Service will then
 ;print these "requests"
 ;
 ; Evaluate the cache expression first (it may manipulate parameters)
 d ##Class(websys.Conversions).expressionExecute(rpt.Expression)
 ;
 d ##Class(websys.PrintHistory).AddItem(userid,rptid,PrinterID,filename,P1,P2,P3,P4,P5,P6,P7,P8,P9,printdesc,queueStatus,MailFrom,MailTo,MailCC,MailSubject,MailMessage)
 }else {

 ;OLD way that uses the ASP page to print crystal reports and then makes
 ;an entry in PrintHistory with a status of Printed
 set rptname=rpt.ReportUrl
 i rptname["." s rptname=$p(rptname,".")
 ;
 ;Set config=##Class(websys.Configuration).%OpenId(1,0)
 ;
 Set http=##class(%Net.HttpRequest).%New()
 Set http.Server=config.WebServer
 ; For now use printer defined for the report - need to get device from somewhere...
 d http.SetParam("printer",dev)
 d http.SetParam("rpt",rptname)
 d http.SetParam("site",config.SiteCode)
 i filename'="" d http.SetParam("saveas",filename)
 ;
 ; Evaluate the cache expression first (it may manipulate parameters)
 d ##Class(websys.Conversions).expressionExecute(rpt.Expression)
 ;
 d http.SetParam("prompt0",P1)
 d http.SetParam("prompt1",P2)
 d http.SetParam("prompt2",P3)
 d http.SetParam("prompt3",P4)
 d http.SetParam("prompt4",P5)
 d http.SetParam("prompt5",P6)
 d http.SetParam("prompt6",P7)
 d http.SetParam("prompt7",P8)
 d http.SetParam("prompt8",P9)
 ;
 i config.WebServerUsername'="" d
 . s http.Authorization="Basic "_##Class(websys.Conversions).Base64(config.WebServerUsername_":"_config.WebServerPassword)
 ;
 d http.Get(config.PathToApp_"/csp/websys.printrpt.ASP")
 ;Do http.HttpResponse.OutputToDevice()
 d http.%Close()
 d config.%Close()
 d ##Class(websys.PrintHistory).AddItem(userid,rpt.%Id(),PrinterID,filename,P1,P2,P3,P4,P5,P6,P7,P8,P9,printdesc,"P",MailFrom,MailTo,MailCC,MailSubject,MailMessage,"Mail/Fax attachment = "_filename)
 i MailTo_MailMessage'="" d ##Class(websys.Mail).JobItem(MailFrom,MailTo,MailCC,MailSubject,MailMessage,filename)
 }
 }
 //For cache require a device - other doesn't require a device
 i rpt,(dev'=""&(rpt.Type="Cache"))!(rpt.Type="Other") {
 ;s ^zwebsysReport("PrintReport",4)= "Printer = "_dev
 ;s ^zwebsysReport("PrintReport",5)= "Report = "_rpt.%Id()
 i TPSenabled,'$d(^TPSForCacheDisabled){
 ;In this case the Parameter expressions need to evaluated now while session details
 ;are still avaliable. Later the report expression will be executed from inside the TPS
 ;s ^zwebsysReport("PrintReport",3)= "In Cache Print with TPS"
 i dev'="" d ##Class(websys.PrintHistory).AddItem(userid,rpt.%Id(),PrinterID,filename,P1,P2,P3,P4,P5,P6,P7,P8,P9,printdesc,queueStatus,MailFrom,MailTo,MailCC,MailSubject,MailMessage)
 }else {
 ;s ^zwebsysReport("PrintReport",3)= "In Cache Print no TPS"
 i rpt.P1Name'="" s @rpt.P1Name=P1
 i rpt.P2Name'="" s @rpt.P2Name=P2
 i rpt.P3Name'="" s @rpt.P3Name=P3
 i rpt.P4Name'="" s @rpt.P4Name=P4
 i rpt.P5Name'="" s @rpt.P5Name=P5
 i rpt.P6Name'="" s @rpt.P6Name=P6
 i rpt.P7Name'="" s @rpt.P7Name=P7
 i rpt.P8Name'="" s @rpt.P8Name=P8
 i rpt.P9Name'="" s @rpt.P9Name=P9
 ;Note That expression.Execute will resolve the expression in P1 to P9 by it self
 d ##Class(websys.Conversions).expressionExecute(rpt.Expression)
 i dev'="" d ##Class(websys.PrintHistory).AddItem(userid,rpt.%Id(),PrinterID,filename,P1,P2,P3,P4,P5,P6,P7,P8,P9,printdesc,"P",MailFrom,MailTo,MailCC,MailSubject,MailMessage)
 }
 }
 i rpt,(dev_filename)'="",rpt.Type="Word" {
 ;Backdoor switch: ^TPSForWordDisabled can be set to anything to disable the TPS path for word docs
 i TPSenabled,'$d(^TPSForWordDisabled){
 ;NEW way that puts Crystal reports directly into the the PrintHistory
 ;table with a status of Waiting.The Trak print Service will then
 ;print these "requests"
 ;
 d ##Class(websys.PrintHistory).AddItem(userid,rptid,PrinterID,filename,P1,P2,P3,P4,P5,P6,P7,P8,P9,printdesc,queueStatus,MailFrom,MailTo,MailCC,MailSubject,MailMessage)
 }else {
 ;
 ;s ^zwebsysReport("PrintReport",2)= "Printer = "_dev
 ;s ^zwebsysReport("PrintReport",3)= "file = "_filename
 if dev '="",filename '="",MailTo_MailMessage ="" {
 Set config=##Class(websys.Configuration).%OpenId(1,0)
 ;
 Set http=##class(%Net.HttpRequest).%New()
 Set http.Server=config.WebServer
 ; For now use printer defined for the report - need to get device from somewhere...
 d http.SetParam("printer",dev)
 d http.SetParam("filename",filename)
 ;
 i config.WebServerUsername'="" d
 . s http.Authorization="Basic "_##Class(websys.Conversions).Base64(config.WebServerUsername_":"_config.WebServerPassword)
 ;
 d http.Get(config.PathToApp_"/csp/websys.printdoc.ASP")
 ;Do http.HttpResponse.OutputToDevice()
 d http.%Close()
 d config.%Close()
 }
 i MailTo_MailMessage'="",filename'="" {
 d ##Class(websys.Mail).JobItem(MailFrom,MailTo,MailCC,MailSubject,MailMessage,filename)
 }
 d ##Class(websys.PrintHistory).AddItem(userid,rpt.%Id(),PrinterID,filename,P1,P2,P3,P4,P5,P6,P7,P8,P9,printdesc,"P",MailFrom,MailTo,MailCC,MailSubject,MailMessage,"Mail/Fax attachment = "_filename)
 }
 }
 i prt d prt.%Close()
 d rpt.%Close()
 q
]]></Implementation>
</Method>

<Query name="LookUpByReport">
<Description>
KK 21/Jan/2003 Log 31573</Description>
<Type>%Library.SQLQuery</Type>
<FormalSpec>desc</FormalSpec>
<SqlQuery>SELECT ID,Code,Description,Type
FROM websys.Report
WHERE (%UPPER Description [ %UPPER :desc)</SqlQuery>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="HIDDEN,Code,Description,HIDDEN"/>
</Query>

<Query name="VBFindLE">
<Type>%Library.Query</Type>
<FormalSpec>desc:%Library.String</FormalSpec>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Description:%Library.String,UpdateDate:%String,UpdateTime:%String"/>
</Query>

<Query name="VBFindLESimple">
<Type>%Library.SQLQuery</Type>
<FormalSpec>desc:%Library.String</FormalSpec>
<SqlQuery>SELECT ID, Description,UpdateDate,UpdateTime
FROM Report
WHERE (Description %STARTSWITH :desc)
ORDER BY Description</SqlQuery>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Description:%Library.String,UpdateDate:%Date,UpdateTime:%Time"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^websys.ReportD</DataLocation>
<DefaultData>ReportDefaultData</DefaultData>
<IdLocation>^websys.ReportD</IdLocation>
<IndexLocation>^websys.ReportI</IndexLocation>
<StreamLocation>^websys.ReportS</StreamLocation>
<Data name="ReportClassName">
<Attribute>%%CLASSNAME</Attribute>
<Structure>node</Structure>
<Subscript>0</Subscript>
</Data>
<Data name="ReportDefaultData">
<Structure>listnode</Structure>
<Value name="1">
<Value>Code</Value>
</Value>
<Value name="2">
<Value>Description</Value>
</Value>
<Value name="3">
<Value>NewProperty6</Value>
</Value>
<Value name="4">
<Value>NewProperty7</Value>
</Value>
<Value name="5">
<Value>NewProperty8</Value>
</Value>
<Value name="6">
<Value>NewProperty9</Value>
</Value>
<Value name="7">
<Value>Printer</Value>
</Value>
<Value name="8">
<Value>Type</Value>
</Value>
<Value name="9">
<Value>Url</Value>
</Value>
<Value name="10">
<Value>Expression</Value>
</Value>
<Value name="11">
<Value>ReportUrl</Value>
</Value>
<Value name="12">
<Value>ParameterComponent</Value>
</Value>
<Value name="13">
<Value>ParameterUrl</Value>
</Value>
<Value name="14">
<Value>P1</Value>
</Value>
<Value name="15">
<Value>P2</Value>
</Value>
<Value name="16">
<Value>P3</Value>
</Value>
<Value name="17">
<Value>P4</Value>
</Value>
<Value name="18">
<Value>P5</Value>
</Value>
<Value name="19">
<Value>P6</Value>
</Value>
<Value name="20">
<Value>P7</Value>
</Value>
<Value name="21">
<Value>P8</Value>
</Value>
<Value name="22">
<Value>P9</Value>
</Value>
<Value name="23">
<Value>P1Name</Value>
</Value>
<Value name="24">
<Value>P2Name</Value>
</Value>
<Value name="25">
<Value>P3Name</Value>
</Value>
<Value name="26">
<Value>P4Name</Value>
</Value>
<Value name="27">
<Value>P5Name</Value>
</Value>
<Value name="28">
<Value>P6Name</Value>
</Value>
<Value name="29">
<Value>P7Name</Value>
</Value>
<Value name="30">
<Value>P8Name</Value>
</Value>
<Value name="31">
<Value>P9Name</Value>
</Value>
<Value name="32">
<Value>Hospital</Value>
</Value>
<Value name="33">
<Value>DSN</Value>
</Value>
<Value name="34">
<Value>PrintDescriptionExpression</Value>
</Value>
<Value name="35">
<Value>UpdateDate</Value>
</Value>
<Value name="36">
<Value>UpdateTime</Value>
</Value>
<Value name="37">
<Value>UpdateUser</Value>
</Value>
<Value name="38">
<Value>ReportGroup</Value>
</Value>
<Value name="39">
<Value>bSaveToDatabase</Value>
</Value>
<Value name="40">
<Value>BSaveToDatabase</Value>
</Value>
<Value name="41">
<Value>SaveToDatabase</Value>
</Value>
<Value name="42">
<Value>ReportIsAuditLetter</Value>
</Value>
<Value name="43">
<Value>DoNotSaveHistory</Value>
</Value>
<Value name="44">
<Value>PrintPriority</Value>
</Value>
</Data>
<Property name="Code"/>
<Property name="DSN"/>
<Property name="Description"/>
<Property name="Expression"/>
<Property name="Hospital"/>
<Property name="P1"/>
<Property name="P1Name"/>
<Property name="P2"/>
<Property name="P2Name"/>
<Property name="P3"/>
<Property name="P3Name"/>
<Property name="P4"/>
<Property name="P4Name"/>
<Property name="P5"/>
<Property name="P5Name"/>
<Property name="P6"/>
<Property name="P6Name"/>
<Property name="P7"/>
<Property name="P7Name"/>
<Property name="P8"/>
<Property name="P8Name"/>
<Property name="P9"/>
<Property name="P9Name"/>
<Property name="ParameterComponent"/>
<Property name="ParameterUrl"/>
<Property name="PrintDescriptionExpression"/>
<Property name="Printer"/>
<Property name="ReportGroup"/>
<Property name="ReportUrl"/>
<Property name="Type"/>
<Property name="UpdateDate"/>
<Property name="UpdateTime"/>
<Property name="UpdateUser"/>
</Storage>
</Class>
</Export>
