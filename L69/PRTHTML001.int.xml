<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTHTML001" type="INT" languagemode="0"><![CDATA[
PRTHTML001 ; IG 23/03/99 ; Doctor's Report HEADER - TrakSystems  ; Compiled September 5, 2000 18:18:42 for Cache for Windows
 q
 ; supported calls
 ;
 ; INIT^PRTHTML001
 ; QDR^PRTHTML001
 ; Header^PRTHTML001(page,par1,par2)
 ; Footer^PRTHTML001(page,par1,par2)
 ;
 ; client specific parameters
INIT s MaxLine=40 i $e($$CR(PAR2),1,2)="A5" s MaxLine=17
 q
CR(CR) n (CR) s xCR=CR,result="A4" i xCR["-FAX-" s xCR=$p(CR,"-FAX-",1)
 i '$$select^LVBCTCR(xCR),$e($p(PLIST(4),$c(1)),1,2)="A5" s result="A5"
 q result
 ; print header
Header(page,par1,par2) n (page,par1,par2,VISIT,DOC,HOSP,REPID,SortEpisode)
 d ADD^PRTREP00(REPID,SortEpisode_"PRT"_$c(1)_0,"#")
 s epis=$p(VISIT(2),$c(1))
 ; find copy-to only for DR's copies
 i $d(DOC),$p(VISIT(15),$c(1))=$p(DOC(2),$c(1)) s copyto="" d
 .i $$open^LVBVISDC(epis)
 .f  q:$$fetch^LVBVISDC(epis)  s copyto=copyto_$s($l(copyto):", ",1:"")_$p(PLIST(4),$c(1))
 .i $$close^LVBVISDC()
 .i $l(copyto) s Header("#CopyTo#")=copyto
 ; find copy-from
 i $d(DOC),$p(VISIT(15),$c(1))'=$p(DOC(2),$c(1)) s copyfrom="" d
 .i '$$select^LVBCTDR($p(VISIT(15),$c(1)),"Y") s copyfrom=$$name(PLIST(26),PLIST(4),PLIST(3))
 .i $l(copyfrom) s Header("#CopyFrom#")=copyfrom
 i '$d(DOC) s copyfrom="" d
 .i '$$select^LVBCTDR($p(VISIT(15),$c(1)),"Y") s copyfrom=$$name(PLIST(26),PLIST(4),PLIST(3))
 .i $l(copyfrom) s Header("#CopyFrom#")=copyfrom
 ; extract patient dob, sex and age
 i '$l($p(VISIT(6),$c(1)))!(VISIT(26)=500) s Header("#PatientDOB#")="Unknown"
 e  s Header("#PatientDOB#")=$$dt($p(VISIT(6),$c(1)))
 s Header("#PatientSexAge#")=$p(VISIT(5),$c(1),2)_" "_$s(VISIT(26)'=500:VISIT(26),1:"")_" "_$s(VISIT(26)=1:"year",VISIT(26)'=500:"years",1:"")
 ; expand collection date and time / received date and time
 f j=12,13,61,62 s VISIT(j)=$p(VISIT(j),$c(1))
 s Header("#CollDateTime#")="" i $l(VISIT(12)) s Header("#CollDateTime#")=$$dt(VISIT(12))
 i $l(VISIT(13)) s Header("#CollDateTime#")=Header("#CollDateTime#")_"  "_$e(VISIT(13)\3600+100,2,3)_":"_$e(VISIT(13)\60#60+100,2,3)
 s Header("#ReqDateTime#")="" i $l(VISIT(61)) s Header("#ReqDateTime#")=$$dt(VISIT(61))
 i $l(VISIT(62)) s Header("#ReqDateTime#")=Header("#ReqDateTime#")_"  "_$e(VISIT(62)\3600+100,2,3)_":"_$e(VISIT(62)\60#60+100,2,3)
 ; format doctor address
 i $d(DOC) d Address(DOC(9),DOC(10),DOC(11),DOC(12),DOC(13),.dAddress)
 f j=1:1:4 s Header("#ReportAdd"_j_"#")=$g(dAddress(j))
 ; format patient address
 d Address(VISIT(32),VISIT(33),VISIT(34),VISIT(35),VISIT(36),.pAddress)
 f j=1:1:3 s Header("#PatientAdd"_j_"#")=pAddress(j)
 ; extract tests requested
 k ReqTS s cnt="" m xVISIT(68)=VISIT(68)
 f  s cnt=$g(cnt)+1 d  q:'$l(xVISIT(68))
 .s x="" i $l(xVISIT(68))>45 s x=$l($e(xVISIT(68),1,45)," ")-1,ReqTS(cnt)=$p(xVISIT(68)," ",1,x),xVISIT(68)=$e(xVISIT(68),$l(ReqTS(cnt))+1,$l(xVISIT(68))) q
 .i $l(xVISIT(68))<45 s ReqTS(cnt)=xVISIT(68),xVISIT(68)=$e(xVISIT(68),$l(ReqTS(cnt))+1,$l(xVISIT(68)))
 .i $l(xVISIT(68))=45 s ReqTS(cnt)=xVISIT(68),xVISIT(68)=$e(xVISIT(68),$l(ReqTS(cnt))+1,$l(xVISIT(68)))
 ; print test requested
 f j=1:1:3 s Header("#ReqTests"_j_"#")=""
 f j=1:1:3 i $d(ReqTS(j)) d
 .f  q:$e(ReqTS(j))'=" "  s ReqTS(j)=$e(ReqTS(j),2,99)
 .s Header("#ReqTests"_j_"#")=ReqTS(j)
 ; clinical history
 s Header("#ClinicalNotes#")=""
 i $l(VISIT(53)) s VISIT(53)=$p(VISIT(53),"|",1) d
 .f  q:$l(VISIT(53))<100  s VISIT(53)=$p(VISIT(53)," ",1,$l(VISIT(53)," ")-1)
 .s Header("#ClinicalNotes#")=VISIT(53)
 s Header("#PatientName#")=$p(VISIT(3),$c(1))_", "_$p(VISIT(4),$c(1))
 s Header("#PatientPhone#")=VISIT(43)
 s Header("#Episode#")=epis
 s Header("#ExtRef#")=$p(VISIT(16),$c(1))
 s Header("#Page#")=page_" of "_$o(^TMP("REPORT",$j,""),-1)
 i $d(DOC) s Header("#ReportTo#")=$$NameFormat^LVBCOM03("DR",$p(DOC(26),$c(1)),DOC(4),DOC(3))
 i $d(HOSP) s Header("#ReportTo#")=HOSP(3)
 s Header("#PrintedDateTime#")=$$dt(+$h)_" "_$$exttime^SSUTIL4($p($h,",",2))
 s Header("#CollDate#")=$$extdate2^SSUTIL4(VISIT(12))
 s ttf=$$TTF(epis) s Header("#TestToFollow#")=TSonPage_$s(ttf'="":"   ("_ttf_" to follow)",1:"")
 d Header4,ADDHEADER^PRTREP00(REPID,"SortEpisode"_$c(1)_"HDR"_$c(1)_page,.Header)
 q
Header4 s Header("#Template#")="\Report\temp.htm"
 q
Footer(page,par1,par2) q
 ; Tests to Follow
TTF(epis) n (epis) s epis=$g(epis),result=""
 s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 . ; do not look at empty tests
 .i '$d(^TTAB("TS",ts,0)) q
 . ; do not look at non printable tests
 .s (ok,x)="" f  s x=$o(^TTAB("TS",ts,0,x)) q:x=""  i $p(^(x),"\",8)'="",$p(^(x),"\",13)="Y" s ok=1 q
 .i ok s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  d
 ..s rowid=epis_"||"_ts_"||"_cnt,status=""
 .. d %0Ao
 ..i $p(status,$c(1))'="Y" s result=result_$s($l(result):", ",1:"")_test
 q result
Address(x1,x2,x3,x4,x5,Address) n (x1,x2,x3,x4,x5,Address) k Address s cnt=0 f j=1:1:3 s Address(j)=""
 i $l(x1) s cnt=cnt+1,Address(cnt)=x1
 i $l(x2) s cnt=cnt+1,Address(cnt)=x2
 s cnt=cnt+1
 i $l(x3) s Address(cnt)=Address(cnt)_$s($l(Address(cnt)):",",1:"")_x3
 i $l(x4) s Address(cnt)=Address(cnt)_$s($l(Address(cnt)):",",1:"")_x4
 i $l(x5) d
 .i cnt>1,'$l(Address(cnt)) s cnt=cnt-1
 .s Address(cnt)=Address(cnt)_$s($l(Address(cnt)):",",1:"")_x5
 q
%0ABs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(6)=$P(rowid,$C(1))
 s:%mmmsqld(6)="" %mmmsqld(6)=$E(rowid,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(10)=$p($g(%mmmsqld(6)),"||",1,1),%mmmsqld(8)=$p($g(%mmmsqld(6)),"||",2,2),%mmmsqld(11)=$p($g(%mmmsqld(6)),"||",3,3)
 s %mmmsqld(5)=$g(%mmmsqld(6))
 i %mmmsqld(10)'="",%mmmsqld(8)'="",%mmmsqld(11)'="",$d(^TEPI(%mmmsqld(10),1,%mmmsqld(8),%mmmsqld(11)))
 e  g %0ABdun
 s %mmmsqln=$g(^TEPI(%mmmsqld(10),1,%mmmsqld(8),%mmmsqld(11)))
 s status=$p(%mmmsqln,"\",28)
 
 s %val=$P(status,$C(1)) d %0ABs1:%val'="" s $P(status,$C(1),2)=%val
 s %mmmsqld(12)=$p($g(%mmmsqld(8)),"||",1,1)
 s %mmmsqld(9)=$g(%mmmsqld(8))
 i %mmmsqld(12)'="",$d(^TTAB("TS",%mmmsqld(12)))
 e  s (%mmmsqld(9),test)="" g %0ABp2
 s %mmmsqln=$g(^TTAB("TS",%mmmsqld(12)))
 s test=$p(%mmmsqln,"\",2)
%0ABp2 
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
]]></Routine>
</Export>
