<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSSTAF" type="INT" languagemode="0"><![CDATA[
MVBSSTAF  ; MVB Control code access for SS_TableFields
 ;
 ; supported calls:
 ;
 ; $$select^MVBSSTAF(ROWID,skip)
 ; $$open^MVBSSTAF(par,par1,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSSTAF(par,par1,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSSTAF(par,par1,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSSTAF(par,par1,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSSTAF()
 ; $$getall^MVBSSTAF(par)
 ;
  
 ;
 ;
 ; Open the cursor
open(par,par1,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),par1=$g(par1),skip=$g(skip)
 d %SSTAF0o
 Q 0
 ;
 ; Fetch the data
fetch(par,par1,skip,p3,p4,p5,p6,p7,p8,p9)  K PLIST s par=$g(par),par1=$g(par1),skip=$g(skip)
 d %0Co
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,par1,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),par1=$g(par1),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par,par1,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,par1,skip,p3,p4,p5,p6,p7,p8,p9) N (par,par1,skip,PLIST) s par=$g(par),par1=$g(par1),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,par1,skip)
 f cnt=1:1 Q:$$fetch(par,par1,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %SSTAF0c 
 q 0
 ;
 ; select data by code
select(RowID,skip) K PLIST s RowID=$g(RowID),skip=$g(skip)
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 ;
 Q
 ;
getall(par) N (par,PLIST) K ^TMP($zn,$j) s par=$g(par)
 I $$open(par,,"Y")
 F cnt=1:1 Q:$$fetch(par,,"Y")  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 ;
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%SSTAF0o s SQLCODE=$s($g(%SSTAF0c):-101,1:0) q:SQLCODE'=0
 s %SSTAF0c=1 k %SSTAF0m
 s %SSTAF0E=$zt,%SSTAF0f=0,%SSTAF0e=0,%SSTAF0L=""
 s %SSTAF0d(2)=$P(par,$C(1)),%SSTAF0d(5)=$P(par1,$C(1))
 s:%SSTAF0d(2)="" %SSTAF0d(2)=$e(par,2,99999)
 s %SSTAF0d(6)=$$ALPHAUP(%SSTAF0d(5))
 q
%0Afirst   ;  init
 
 
 
 
 
 
 
 
 
 ; asl MOD# 2
 s %SSTAF0d(1)=$g(%SSTAF0d(2))
 i %SSTAF0d(1)="" g %0ABdun
 s $P(%SSTAF0d(9),$C(1))=""
%0ABk1 s $P(%SSTAF0d(9),$C(1))=$o(^mdd(1,%SSTAF0d(1),2,$P(%SSTAF0d(9),$C(1))))
 i $P(%SSTAF0d(9),$C(1))="" g %0ABdun
 i $P(%SSTAF0d(9),$C(1))'=+$P(%SSTAF0d(9),$C(1)) g %0ABdun
 s %SSTAF0n=$g(^mdd(1,%SSTAF0d(1),2,$P(%SSTAF0d(9),$C(1)),1))
 s %SSTAF0d(3)=$p(%SSTAF0n,$c(1),1) s %SSTAF0d(10)=$p(%SSTAF0n,$c(1),3)
 s %SSTAF0d(8)=(%SSTAF0d(1))_"||"_($P(%SSTAF0d(9),$C(1)))
 
 s %val=$P(%SSTAF0d(9),$C(1)) d %0ABs1:%val'="" s $P(%SSTAF0d(9),$C(1),2)=%val
 s %SSTAF0d(4)=$$ALPHAUP(%SSTAF0d(3))
 g:'((%SSTAF0d(6))=$E((%SSTAF0d(4)),1,$L((%SSTAF0d(6))))) %0ABk1
 s SQLCODE=0 s:SQLCODE=0 %SSTAF0f=%SSTAF0f+1 s %SSTAF0c=10 q
%SSTAF0f i '$g(%SSTAF0c) s SQLCODE=-102 q
 i %SSTAF0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%SSTAF0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %SSTAF0c=100 q
%SSTAF0c i '$g(%SSTAF0c) s SQLCODE=-102 q
 k %SSTAF0c,%SSTAF0d,%SSTAF0e,%SSTAF0E,%SSTAF0f,%SSTAF0l,%SSTAF0L,%SSTAF0n,%SSTAF0r,%SSTAF0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%SSTAF0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %SSTAF0f q:SQLCODE'=0
 s PLIST(0)=%SSTAF0d(1),PLIST(1)=%SSTAF0d(8),PLIST(2)=%SSTAF0d(9),PLIST(3)=%SSTAF0d(3),PLIST(4)=%SSTAF0d(10)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(RowID,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(3)
 s %mmmsqld(9)=$p($g(PLIST(1)),"||",1,1),$P(PLIST(2),$C(1))=$p($g(PLIST(1)),"||",2,2)
 i %mmmsqld(9)'="",$P(PLIST(2),$C(1))'="",$d(^mdd(1,%mmmsqld(9),2,$P(PLIST(2),$C(1))))
 e  g %0EBdun
 s %mmmsqln=$g(^mdd(1,%mmmsqld(9),2,$P(PLIST(2),$C(1)),1))
 s PLIST(3)=$p(%mmmsqln,$c(1),1) s PLIST(4)=$p(%mmmsqln,$c(1),3)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
]]></Routine>
</Export>
