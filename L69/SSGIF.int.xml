<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="SSGIF" type="INT" languagemode="0" generated="1"><![CDATA[
SSGIF ;loads ^SS from file, prevents reports and messages from overwriting
 ;
 w !,"This routine must be called from one of the tags."
 w !,"To load the new version of ^SS and retain your existing"
 w !,"data, call it at tag RESTORE^SSGIF"
 w !
 q
RESTORE ;
 new sMSG
 s sMSG=$$GO()
 i sMSG'="" w !,sMSG
 Q
GO(sFilename) ; Start here
 s sFileName=$g(sFileName)
 w !,"SSGIF loads ^SS from file, prevents reports and messages and languages from overwriting "
 i '$d(^SS) w *7,!,"Global SS doesn't exist, can't run program !" q
 k ^ResSS
 m ^ResSS=^SS
 k ^SS
 i sFileName="" d  ;
 .w !,"Please enter file name where ^SS is saved "
 .d ^%GIF
 i sFileName'="" d  ; Filename passed. Attempt automatic restore
 .s IO=sFileName
 .s IOPAR="UR"
 .s IOT="RMS"
 .s glomerge=1 ; this doesn't actually work :(
 .i $$entry^%GIF
 .i $d(IO) c IO
 i '$d(^SS) w *7,!,"Global SS wasn't restored, can't run program ! " m ^SS=^ResSS q
 s x="" f  s x=$o(^ResSS("VBMESS",0,"Code",x)) q:x=""  i '$d(^SS("VBMESS",0,"Code",x)) d
 .s x0=$o(^ResSS("VBMESS",0,"Code",x,"")) q:x0=""
 .f j=1,2 s @("x"_j)=$p($g(^ResSS("VBMESS",x0)),"^",j)
 .i $l(x1),$l(x2) k PLIST s PLIST(2)=x1,PLIST(3)=x2,PLIST=$o(PLIST(""),-1) i $$insert^MVBSSVBM()
 i $d(^ResSS("LAN")) k ^SS("LAN") m ^SS("LAN")=^ResSS("LAN")
 s x="" f  s x=$o(^ResSS("PRINT","TYPE",x)) q:x=""  i '$d(^SS("PRINT","TYPE",x)) m ^SS("PRINT","TYPE",x)=^ResSS("PRINT","TYPE",x)
 s x="" f  s x=$o(^ResSS("QDR",x)) q:x=""  i '$d(^SS("QDR",x)) m ^SS("QDR",x)=^ResSS("QDR",x)
 m ^SS("XM-FIELDS")=^ResSS("XM-FIELDS")
 s x="" f  s x=$o(^ResSS("PE-FIELDS",x)) q:x=""  i $d(^SS("PE-FIELDS",x)) d
 .s xx=$p(^(x),"^",3)
 .s ^SS("PE-FIELDS",x)=^ResSS("PE-FIELDS",x)
 .s $p(^SS("PE-FIELDS",x),"^",3)=xx
 s x="" f  s x=$o(^ResSS("Query",x)) q:x=""  d
 .i $d(^ResSS("Query",x)) s ^SS("Query",x)=^ResSS("Query",x)
 .i $d(^ResSS("Query",x,"REM",1)) k ^SS("Query",x,"REM") m ^SS("Query",x,"REM")=^ResSS("Query",x,"REM")
 s vb="" f  s vb=$o(^ResSS("SSVBE",vb)) q:vb=""  s lan="" f  s lan=$o(^ResSS("SSVBE",vb,"TRANS",lan)) q:lan=""  s s=^(lan) i $d(^SS("SSVBE",vb)) s ^SS("SSVBE",vb,"TRANS",lan)=s
 s x="CLN" f  s x=$o(^ResSS("REPORT-GENERIC",x)) q:x=""  q:$e(x,1,3)'="CLN"  s ^SS("REPORT-GENERIC",x)=^ResSS("REPORT-GENERIC",x)
 s x="PRTCLN" f  s x=$o(^ResSS("REPORT-HEADER-NON",x)) q:x=""  q:$e(x,1,6)'="PRTCLN"  m ^SS("REPORT-HEADER-NON",x)=^ResSS("REPORT-HEADER-NON",x)
 s x="PRTCLN" f  s x=$o(^ResSS("REPORT-ROUTINE",x)) q:x=""  q:$e(x,1,6)'="PRTCLN"  m ^SS("REPORT-ROUTINE",x)=^ResSS("REPORT-ROUTINE",x)
 s x="~CLN" f  s x=$o(^ResSS("PRINT","VAR",x)) q:x=""  q:$e(x,1,4)'="~CLN"  m ^SS("PRINT","VAR",x)=^ResSS("PRINT","VAR",x)
 s type="" f  s x=$o(^ResSS("PRINT","TYPE",type)) q:type=""  d
 .s x="~CLN" f  s x=$o(^ResSS("PRINT","TYPE",type,x)) q:x=""  q:$e(x,1,4)'="~CLN"  m ^SS("PRINT","TYPE",type,x)=^ResSS("PRINT","TYPE",type,x)
 w !,"^SS was restored successfully"
 q ""
int(sFileName) ; Internal call to enable 'silent' operation.
 ;
 new sMSG
 i sFileName="" q "No SS Filename passed. Restore aborted"
 ;
 s sMSG=$$GO(sFileName)
 q sMSG
]]></Routine>
</Export>
