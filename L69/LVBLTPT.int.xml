<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBLTPT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBLTPT ; IG 29/4/98 ; MVB Control code access for LT_LettersPatient
 ;
 ; supported calls:
 ;
 ; $$select^LVBLTPT(ROWID)
 ; $$open^LVBLTPT(par)
 ; $$fetch^LVBLTPT(par)
 ; $$close^LVBLTPT()
 ; $$insert^LVBLTPT(par)
 ; $$update^LVBLTPT(ROWID)
 ; $$delete^LVBLTPT(ROWID)
 ; $$getdata^LVBLTPT(Letter,vistsRID,visRID,docRID,compRID,urRID)
 ; $$create^LVBLTPT(Letter)
 ; $$deleterp^LVBLTPT(Letter)
 ;
  ;---&SQL(DECLARE LTPT CURSOR FOR SELECT * FROM LT_LettersPatient
   ;---         WHERE LTPT_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ; Insert the data
insert(par) K PLIST(1) s PLIST(0)=$g(par) d pre("N") 
  ;---&SQL(insert INTO LT_LettersPatient VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE LT_LettersPatient VALUES :PLIST() WHERE LTPT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID) s ROWID=$g(ROWID)
  ;---&SQL(DELETE FROM LT_LettersPatient WHERE LTPT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ; Delete and print report
deleterp(LETTERCODE)
 k ^TMP("SLL",$j) m ^TMP("SLL",$j,0)=PLIST
 s x="" f  s x=$o(^TMP("SLL",$j,0,x)) q:x=""  s rowid=LETTERCODE_"||"_^(x) d
 .i $$open(LETTERCODE)
 .f  q:$$fetch(LETTERCODE)  d
 ..s pat=PLIST(1)
 ..k PLIST i $$getall^LVBLTPTT(pat)
 ..k plist m plist=PLIST
 ..s doc="" s doc=$$seldata^LVBEPVIS($p(pat,"||",2),15) i $l(doc) d
 ...k PLIST m PLIST=plist
 ...s x="" f  s x=$o(PLIST(x)) q:x=""  s vts=$p(PLIST(x),$c(2),1) d
 ....s ^TMP("SLL",$j,1,doc,$p(vts,"||",2)_"||"_$p(vts,"||",3)_"||"_$p(vts,"||",4))=""
 s doc="" f  s doc=$o(^TMP("SLL",$j,1,doc)) q:doc=""  i $$START^PRTREP00($$user^MVBSSUSR(),"",LETTERCODE_$c(1)_doc,"SLL")
 s x="" f  s x=$o(^TMP("SLL",$j,0,x)) q:x=""  s rowid=LETTERCODE_"||"_^(x) i $$delete(rowid)
 q 0
 ; Open the cursor
open(par) s par=$g(par)
  ;---&SQL(OPEN LTPT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %LTPT0o
 Q 0
 ; Fetch the data
fetch(par) K PLIST s par=$g(par)
  ;---&SQL(FETCH LTPT INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Close the cursor 
close()  ;---&SQL(CLOSE LTPT) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %LTPT0c 
 q 0
 ; select data by code
select(ROWID) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM LT_LettersPatient WHERE LTPT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; get all data for a letter
getdata(Letter,vistsRID,visRID,docRID,compRID,urRID,hospRID) n (Letter,vistsRID,visRID,docRID,compRID,urRID,hospRID,PLIST) k ^TMP($zn,$j)
 s Letter=$g(Letter),visRID=$g(visRID),vistsRID=$g(vistsRID),docRID=$g(docRID),compRID=$g(compRID),urRID=$g(urRID),hospRID=$g(hospRID)
 s docRID=$tr(docRID,$c(16,17,18),"^\|")
 s hospRID=$tr(hospRID,$c(16,17,18),"^\|")
 m ^TMP($zn,$j,1)=PLIST
 s ReportTo=$s($l(hospRID):"H",$l(docRID):"D",1:"")
 i $$open^LVBCTSV(,"Y")
 f  q:$$fetch^LVBCTSV(,"Y")  d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .i $l(PLIST(2)) s ^TMP($zn,$j,2,PLIST(2))=""
 i $$close^LVBCTSV()
 s ^TMP($zn,$j,2,"DATE_TODAY")=$$extdate2^SSUTIL4(+$h)
 s ^TMP($zn,$j,2,"TIME_TODAY")=$$exttime^SSUTIL4($p($h,",",2))
 ; create list of requested tests
 s (list1,list2,list3)=""
 i '$l(vistsRID) s x="" f  s x=$o(^TMP($zn,$j,1,x)) q:x=""  d
 .s xVTS=^(x),xTS=$p(^(x),"||",2) i '$$select^LVBCTTS(xTS,"Y") d
 ..s:$l(list1) list1=list1_" , " s list1=list1_$p(PLIST(3),$c(1))
 ..s:$l(list2) list2=list2_" , " s list2=list2_$p(PLIST(4),$c(1))
 ..s:$l(list3) list3=list3_" , " s list3=list3_$p(xVTS,"||")_"-"_$p(xVTS,"||",2)_"-"_$p(xVTS,"||",3)
 i $l(vistsRID) d
 .s xTS=$p(vistsRID,"||",2) i '$$select^LVBCTTS(xTS,"Y") d
 ..s list1=$p(PLIST(3),$c(1)),list2=$p(PLIST(4),$c(1))
 ..s list3=$p(vistsRID,"||")_"-"_$p(vistsRID,"||",2)_"-"_$p(vistsRID,"||",3)
 s ^TMP($zn,$j,2,"TEST_REQUESTED_NAME")=list1
 s ^TMP($zn,$j,2,"TEST_REQUESTED_SYNONYM")=list2
 s ^TMP($zn,$j,2,"TEST_REQUESTED_REFERENCE")=list3
 ; get visit testset details
 i $l(vistsRID),'$$select^LVBVISTS(vistsRID) d
 .k VISTS m VISTS=PLIST
 .s ^TMP($zn,$j,2,"TEST_REFERENCE")=$p($p(PLIST(1),$c(1)),"||")_"-"_$p($p(PLIST(1),$c(1)),"||",2)_"-"_$p($p(PLIST(1),$c(1)),"||",3)
 .s ^TMP($zn,$j,2,"TEST_PRIORITY")=$p(PLIST(13),$c(1),2)
 .s ^TMP($zn,$j,2,"TEST_AUTHORISED")=$p(PLIST(9),$c(1),2)
 .s ^TMP($zn,$j,2,"TEST_PATHOLOGIST")=$p(PLIST(10),$c(1),2)
 .s ^TMP($zn,$j,2,"TEST_DATE_AUTHORISED")=$$extdate2^SSUTIL4($p(PLIST(7),$c(1)))
 .s ^TMP($zn,$j,2,"TEST_TIME_AUTHORISED")=$$exttime^SSUTIL4($p(PLIST(8),$c(1)))
 .s ^TMP($zn,$j,2,"TEST_SNOMED")=$$snomed^LVBVIS4(vistsRID)
 .s ^TMP($zn,$j,2,"TEST_CCR")=$$ccr^LVBVIS4(vistsRID)
 .s ^TMP($zn,$j,2,"TEST_ACCESSION")=$$accession^LVBVIS1(vistsRID)
 .i '$l(visRID) s visRID=$p(PLIST(1),"||")
 .i '$$select^LVBCTTS($p(PLIST(3),$c(1))) d
 ..s ^TMP($zn,$j,2,"TEST_NAME")=PLIST(3)
 ..s ^TMP($zn,$j,2,"TEST_DEPARTMENT")=$p(PLIST(26),$c(1),2)
 ..i $l(PLIST(4)) s ^TMP($zn,$j,2,"TEST_SYNONYM")=PLIST(4)
 ..e  i $l(PLIST(5)) s ^TMP($zn,$j,2,"TEST_SYNONYM")=PLIST(5)
 ; get patients details
 i $l(visRID),'$$select^LVBEPVIS(visRID) d
 .k EPVIS m EPVIS=PLIST
 . ; if billing address does not exist set it as patient address
 .i '$l(PLIST(37)) f j=32:1:36 s PLIST(j+5)=PLIST(j)
 .i '$l(PLIST(42)) s PLIST(42)=$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 .s ^TMP($zn,$j,2,"BILL_ADDR1")=PLIST(37)
 .s ^TMP($zn,$j,2,"BILL_ADDR2")=PLIST(38)
 .s ^TMP($zn,$j,2,"BILL_ADDR3")=PLIST(39)
 .s ^TMP($zn,$j,2,"BILL_ADDR4")=PLIST(40)
 .s ^TMP($zn,$j,2,"BILL_ADDR5")=PLIST(41)
 .s ^TMP($zn,$j,2,"BILL_NAME")=PLIST(42)
 .s ^TMP($zn,$j,2,"PAT_ADDR1")=PLIST(32)
 .s ^TMP($zn,$j,2,"PAT_ADDR2")=PLIST(33)
 .s ^TMP($zn,$j,2,"PAT_ADDR3")=PLIST(34)
 .s ^TMP($zn,$j,2,"PAT_ADDR4")=PLIST(35)
 .s ^TMP($zn,$j,2,"PAT_ADDR5")=PLIST(36)
 .s ^TMP($zn,$j,2,"PAT_NAME")=$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 .s ^TMP($zn,$j,2,"PAT_GIVENNAME")=$p(PLIST(4),$c(1))
 .s ^TMP($zn,$j,2,"PAT_SURNAME")=$p(PLIST(3),$c(1))
 .s ^TMP($zn,$j,2,"PAT_NAME_1")=$p(PLIST(99),$c(1))
 .s ^TMP($zn,$j,2,"PAT_NAME_2")=$p(PLIST(100),$c(1))
 .s ^TMP($zn,$j,2,"PAT_NAME_3")=$p(PLIST(101),$c(1))
 .s ^TMP($zn,$j,2,"PAT_TITLE")=$p(PLIST(7),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_SEX_CODE")=$p(PLIST(5),$c(1))
 .s ^TMP($zn,$j,2,"PAT_SEX")=$p(PLIST(5),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_PHONE_HOME")=$p(PLIST(43),$c(1))
 .s ^TMP($zn,$j,2,"PAT_PHONE_WORK")=$p(PLIST(44),$c(1))
 .s ^TMP($zn,$j,2,"PAT_CATEGORY_CODE")=$p(PLIST(94),$c(1))
 .s ^TMP($zn,$j,2,"PAT_CATEGORY_NAME")=$p(PLIST(94),$c(1),2)
 .
 .d
 ..s doc=$p(PLIST(15),$c(1),1) n PLIST
 ..i '$$select^LVBCTDR(doc,"Y") d
 ...m DOC=PLIST
 ...s ^TMP($zn,$j,2,"PAT_DOCTOR_ADDR1")=DOC(9)
 ...s ^TMP($zn,$j,2,"PAT_DOCTOR_ADDR2")=DOC(10)
 ...s ^TMP($zn,$j,2,"PAT_DOCTOR_ADDR3")=DOC(11)
 ...s ^TMP($zn,$j,2,"PAT_DOCTOR_ADDR4")=DOC(12)
 ...s ^TMP($zn,$j,2,"PAT_DOCTOR_ADDR5")=DOC(13)
 .s ^TMP($zn,$j,2,"PAT_DOCTOR_CODE")=$p(PLIST(15),$c(1),1)
 .s ^TMP($zn,$j,2,"PAT_DOCTOR_NAME")=$p(PLIST(15),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_DOCTOR_REF")=$p(PLIST(16),$c(1))
 .
 .s ^TMP($zn,$j,2,"PAT_PAYCODE")=$p(PLIST(9),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_pc_MEDICARE")=$p(PLIST(8),$c(1))
 .s ^TMP($zn,$j,2,"PAT_pc_DVA")=$p(PLIST(89),$c(1))
 .s ^TMP($zn,$j,2,"PAT_pc_PENSIONER")=$p(PLIST(88),$c(1))
 .s ^TMP($zn,$j,2,"PAT_EPISODE")=$p(PLIST(2),$c(1))
 .s ^TMP($zn,$j,2,"PAT_DEBTOR")=$p(PLIST(20),$c(1))
 .s ^TMP($zn,$j,2,"PAT_WARD")=$p(PLIST(22),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_PRIORITY")=$p(PLIST(17),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_DOB")=$$extdate2^SSUTIL4($p(PLIST(6),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_AGE")=PLIST(26)
 .s x="" f j=1:1:$l($p(PLIST(68),$c(1))," ") s test=$p($p($p(PLIST(68),$c(1))," ",j),"x",1) d
 ..n (x,test)
 ..i $$select^LVBCTTS(test,"Y") q
 ..s x=$s($l(x):x_" ",1:"")_$s($l(PLIST(4)):PLIST(4),$l(PLIST(5)):PLIST(5),1:test)
 .s ^TMP($zn,$j,2,"PAT_TESTS")=x
 .s ^TMP($zn,$j,2,"PAT_CLN_NOTES")=$p(PLIST(53),$c(1))
 .s ^TMP($zn,$j,2,"PAT_ADMISSION_DATE")=$$extdate2^SSUTIL4($p(PLIST(47),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_REQUEST_DATE")=$$extdate2^SSUTIL4($p(PLIST(14),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_REQUEST_TIME")=$$exttime^SSUTIL4($p(PLIST(111),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_RECEIVED_DATE")=$$extdate2^SSUTIL4($p(PLIST(61),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_RECEIVED_TIME")=$$exttime^SSUTIL4($p(PLIST(62),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_COLLECTION_DATE")=$$extdate2^SSUTIL4($p(PLIST(12),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_COLLECTION_TIME")=$$exttime^SSUTIL4($p(PLIST(13),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_COLLECTED_BY")=$p(PLIST(28),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_HOSPITAL_MRN")=$p($p(PLIST(65),$c(1)),",",2)
 .s ^TMP($zn,$j,2,"PAT_HOSPITAL_EPIS")=$p($p(PLIST(65),$c(1)),",",1)
 .s ^TMP($zn,$j,2,"PAT_NationalID")=$p(PLIST(126),$c(1))
 .s ^TMP($zn,$j,2,"PAT_BillLocation_CODE")=$p(PLIST(74),$c(1),1)
 .s ^TMP($zn,$j,2,"PAT_BillLocation_NAME")=$p(PLIST(74),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_UserSite_CODE")=$p(PLIST(66),$c(1),1)
 .s ^TMP($zn,$j,2,"PAT_UserSite_NAME")=$p(PLIST(66),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_Contract_CODE")=$p(PLIST(164),$c(1),1)
 .s ^TMP($zn,$j,2,"PAT_Contract_NAME")=$p(PLIST(164),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_HospitalRoom")=$p(PLIST(112),$c(1),1)
 .s ^TMP($zn,$j,2,"PAT_HospitalBed")=$p(PLIST(113),$c(1),1)
 .s copyto="" d
 ..n (copyto,visRID)
 ..i $$open^LVBVISDC(visRID)
 ..f  q:$$fetch^LVBVISDC(visRID)  d
 ...i $l($p(PLIST(3),$c(1))),'$$select^LVBCTDR($p(PLIST(3),$c(1)),"Y") d  q
 ....s copyto=copyto_$s($l(copyto):", ",1:"")_$$NameFormat^LVBCOM03("DR",PLIST(26),PLIST(4),PLIST(3),PLIST(49),PLIST(50),PLIST(51))
 ....i $g(^TMP($zn,$j,2,"PAT_COPYTO_NAME"))="" d
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_NAME")=$$NameFormat^LVBCOM03("DR",PLIST(26),PLIST(4),PLIST(3),PLIST(49),PLIST(50),PLIST(51))
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR")=$tr($p(PLIST(33),$c(1),1),"|"," ")
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR1")=PLIST(9)
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR2")=PLIST(10)
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR3")=PLIST(11)
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR4")=PLIST(12)
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR5")=PLIST(13)
 .....s ^TMP($zn,$j,2,"PAT_COPYTO_PROVIDER")=$p(PLIST(18),$c(1))
 ...i $l($p(PLIST(17),$c(1))),'$$select^LVBCTHOS($p(PLIST(17),$c(1)),"Y") d  q
 ....s copyto=copyto_$s($l(copyto):", ",1:"")_PLIST(3)
 ...i $l($p(PLIST(4),$c(1))) s copyto=copyto_$s($l(copyto):", ",1:"")_PLIST(4)
 ..i $$close^LVBVISDC()
 .s ^TMP($zn,$j,2,"PAT_COPYTO")=copyto
 .i '$l(docRID) s docRID=$p(PLIST(15),$c(1))
 .i '$l(urRID) s urRID=$p(PLIST(20),$c(1))
 .i '$l(hospRID) s hospRID=$p(PLIST(22),$c(1))
 . ; create list of received specimens
 .i $l(visRID),'$$getall^LVBVISSP(visRID) d
 ..s (list1,list2)="" f j=1:1:PLIST d
 ...s list1=list1_$s($l(list1):",",1:"")_$p(PLIST(j),$c(2),3)
 ...s list2=list2_$s($l(list2):",",1:"")_$p(PLIST(j),$c(2),4)
 ..s ^TMP($zn,$j,2,"PAT_SPECIMENS_CODE")=list1
 ..s ^TMP($zn,$j,2,"PAT_SPECIMENS_NAME")=list2
 ; get doctor details
 k DOC
 i $l(docRID),'$$select^LVBCTDR(docRID,"Y") m DOC=PLIST
 i $l(docRID),$p(docRID,"-")="xxx" d
 .k DOC f j=1:1:60 s DOC(j)=""
 .s DOC(3)=$p($p(docRID,"-",3,99),"^") f j=2:1:6 s DOC(j+7)=$p($p(docRID,"-",3,99),"^",j)
 i $d(DOC) d
 .s ^TMP($zn,$j,2,"DOC_CODE")=DOC(2)
 .s ^TMP($zn,$j,2,"DOC_ADDR1")=DOC(9)
 .s ^TMP($zn,$j,2,"DOC_ADDR2")=DOC(10)
 .s ^TMP($zn,$j,2,"DOC_ADDR3")=DOC(11)
 .s ^TMP($zn,$j,2,"DOC_ADDR4")=DOC(12)
 .s ^TMP($zn,$j,2,"DOC_ADDR5")=DOC(13)
 .s ^TMP($zn,$j,2,"DOC_NAME")=$$NameFormat^LVBCOM03("DR",$p(DOC(26),$c(1),1),DOC(4),DOC(3),DOC(49),DOC(50),DOC(51))
 .s ^TMP($zn,$j,2,"DOC_GIVENNAME")=$p(DOC(4),$c(1))
 .s ^TMP($zn,$j,2,"DOC_SURNAME")=$p(DOC(3),$c(1))
 .s ^TMP($zn,$j,2,"DOC_TITLE")=$p(DOC(26),$c(1),1)
 .s ^TMP($zn,$j,2,"DOC_PHONE1")=$p(DOC(5),$c(1))
 .s ^TMP($zn,$j,2,"DOC_PHONE2")=$p(DOC(6),$c(1))
 .s ^TMP($zn,$j,2,"DOC_PHONE3")=$p(DOC(7),$c(1))
 .s ^TMP($zn,$j,2,"DOC_FAX")=$p(DOC(8),$c(1))
 .s ^TMP($zn,$j,2,"DOC_PROVIDER")=$p(DOC(18),$c(1))
 .s ^TMP($zn,$j,2,"DOC_INITIAL")=$e(DOC(4))_$e(DOC(3))
 .i '$l(compRID) s compRID=$p(DOC(20),$c(1))
 .i ReportTo="D" d
 ..s ^TMP($zn,$j,2,"REPORT_TO_CODE")=^TMP($zn,$j,2,"DOC_CODE")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR1")=^TMP($zn,$j,2,"DOC_ADDR1")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR2")=^TMP($zn,$j,2,"DOC_ADDR2")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR3")=^TMP($zn,$j,2,"DOC_ADDR3")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR4")=^TMP($zn,$j,2,"DOC_ADDR4")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR5")=^TMP($zn,$j,2,"DOC_ADDR5")
 ..s ^TMP($zn,$j,2,"REPORT_TO_FAX")=^TMP($zn,$j,2,"DOC_FAX")
 ..s ^TMP($zn,$j,2,"REPORT_TO_NAME")=^TMP($zn,$j,2,"DOC_NAME")
 ..s ^TMP($zn,$j,2,"REPORT_TO_PHONE")=^TMP($zn,$j,2,"DOC_PHONE1")
 ; get ward details
 i $l(hospRID),'$$select^LVBCTHOS(hospRID,"Y") d
 .k HOSP m HOSP=PLIST
 .s ^TMP($zn,$j,2,"PL_CODE")=$p(PLIST(2),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR1")=$p(PLIST(4),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR2")=$p(PLIST(5),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR3")=$p(PLIST(6),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR4")=$p(PLIST(7),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR5")=$p(PLIST(8),$c(1))
 .s ^TMP($zn,$j,2,"PL_NAME")=$p(PLIST(3),$c(1))
 .s ^TMP($zn,$j,2,"PL_PHONE")=$p(PLIST(9),$c(1))
 .s ^TMP($zn,$j,2,"PL_FAX")=$p(PLIST(13),$c(1))
 .i ReportTo="H" d
 ..s ^TMP($zn,$j,2,"REPORT_TO_CODE")=^TMP($zn,$j,2,"PL_CODE")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR1")=^TMP($zn,$j,2,"PL_ADDR1")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR2")=^TMP($zn,$j,2,"PL_ADDR2")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR3")=^TMP($zn,$j,2,"PL_ADDR3")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR4")=^TMP($zn,$j,2,"PL_ADDR4")
 ..s ^TMP($zn,$j,2,"REPORT_TO_ADDR5")=^TMP($zn,$j,2,"PL_ADDR5")
 ..s ^TMP($zn,$j,2,"REPORT_TO_FAX")=^TMP($zn,$j,2,"PL_FAX")
 ..s ^TMP($zn,$j,2,"REPORT_TO_NAME")=^TMP($zn,$j,2,"PL_NAME")
 ..s ^TMP($zn,$j,2,"REPORT_TO_PHONE")=^TMP($zn,$j,2,"PL_PHONE")
 ; get company details
 i $l(compRID),'$$select^LVBCTCO(compRID,"Y") d
 .s ^TMP($zn,$j,2,"COMP_ADDR1")=PLIST(6)
 .s ^TMP($zn,$j,2,"COMP_ADDR2")=PLIST(7)
 .s ^TMP($zn,$j,2,"COMP_ADDR3")=PLIST(8)
 .s ^TMP($zn,$j,2,"COMP_CODE")=PLIST(2)
 .s ^TMP($zn,$j,2,"COMP_NAME")=PLIST(3)
 ; get debtor details
 i $l(urRID),'$$select^LVBDEB(urRID) d
 .s ^TMP($zn,$j,2,"AMOUNT_OWING")=PLIST(3)
 .s ^TMP($zn,$j,2,"AMOUNT_TOTAL")=""
 .s ^TMP($zn,$j,2,"BLOOD_GROUP")=$p(PLIST(9),$c(1),2)
 .s ^TMP($zn,$j,2,"BLOOD_GROUP_ENTERED")=$p(PLIST(15),$c(1),2)
 .s ^TMP($zn,$j,2,"BLOOD_GROUP_ORIGINAL")=$p(PLIST(16),$c(1),2)
 .i $$function4^LVBCOM06(,urRID)
 .s ^TMP($zn,$j,2,"PAT_AB_REGISTRY")=$tr($g(PLIST(1)),"|")
 ; get extra client-specific fields
 f j=1:1:14 s ^TMP($zn,$j,2,"EXTRA_"_j)=""
 s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1)
 i $l(%routine) s LineRoutine="ExtraFields^"_%routine i $l($t(@LineRoutine)) d
 .i $l(vistsRID) d  q
 ..x "d ExtraFields^"_%routine_"("""_vistsRID_""","""_visRID_""")"
 ..f j=1:1:PLIST s x1=$p(PLIST(j),$c(1),1),x2=$p(PLIST(j),$c(1),2) i $l(x1),$l(x2) s ^TMP($zn,$j,2,x1)=x2
 .i '$l(vistsRID),$l(visRID) s done=0 d  q:done
 ..s v1="" f  s v1=$o(^TTLT(Letter,visRID,v1)) q:v1=""  d
 ...s v2="" f  s v2=$o(^TTLT(Letter,visRID,v1,v2)) q:v2=""  d
 ....s done=1 x "d ExtraFields^"_%routine_"("""_visRID_"||"_v1_"||"_v2_""","""_visRID_""")"
 ....f j=1:1:PLIST s x1=$p(PLIST(j),$c(1),1),x2=$p(PLIST(j),$c(1),2) i $l(x1),$l(x2) s ^TMP($zn,$j,2,x1)=x2
 .x "d ExtraFields^"_%routine_"("""_vistsRID_""","""_visRID_""")"
 .f j=1:1:PLIST s x1=$p(PLIST(j),$c(1),1),x2=$p(PLIST(j),$c(1),2) i $l(x1),$l(x2) s ^TMP($zn,$j,2,x1)=x2
 k PLIST s (var,cnt)="" f  s var=$o(^TMP($zn,$j,2,var)) q:var=""  d
 .s cnt=cnt+1,PLIST(cnt)=var_$c(1)_$tr(^(var),"""","'")
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 Q
 ;
 ; create list of outstanding patients for a letter
create(Letter) n (Letter) s Letter=$g(Letter),(Flag,End)=""
 i $l(Letter) d
 .s Start="" i '$$select^LVBLTMN(Letter) s Start=PLIST(3)
 .s End=$h i '$$select^LVBCTSL(Letter,"Y") s Wait=PLIST(4),End=$h-Wait,Flag=PLIST(7)
 .s date=Start f  s date=$o(^TEPIi("AUTHORISED",date)) q:date=""  q:date>End  d
 ..s vis="" f  s vis=$o(^TEPIi("AUTHORISED",date,vis)) q:vis=""  d
 ... ; already set to receive letter
 ...i '$$select^LVBLTPT(Letter_"||"_vis) q
 ... ; check if all test sets had been authorised
 ...s ok=1
 ...s ts="" f  s ts=$o(^TEPI(vis,1,ts)) q:ts=""  d  q:'ok
 ....s tscnt="" f  s tscnt=$o(^TEPI(vis,1,ts,tscnt)) q:tscnt=""  d  q:'ok
 .....i $$status^LVBVIS1(vis_"||"_ts_"||"_tscnt)'="A" s ok=0
 ...i 'ok q
 ... ; check patient details
 ...i $$select^LVBEPVIS(vis,"Y") q
 ...s doc=$p(PLIST(15),$c(1)) i '$l(doc) q
 ...s mrn=$p(PLIST(20),$c(1))
 ...i $$select^LVBCTDR(doc,"Y") q
 ... ; doctor should not receive letters
 ...i Flag="D",PLIST(27)'="Y" q
 ...i Flag="P",PLIST(31)'="Y" q
 ... ; check all test sets for the letter
 ...i $$open^LVBCTSLT(Letter,"Y")
 ...s found="" f  q:$$fetch^LVBCTSLT(Letter,"Y")  d  q:$l(found)
 ....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ....k TEST m TEST=PLIST
 ....i $$open^LVBCTSLR(TEST(1),"Y")
 ....s stop=0 f  q:$$fetch^LVBCTSLR(TEST(1),"Y")  d  q:$l(found)  q:stop
 .....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .....k RESULT m RESULT=PLIST
 ..... ; exclude T/S with waiting period
 .....i Wait,$l(RESULT(4)) d  q:stop
 ......s xd=date f  s xd=$o(^TDEB(mrn,xd)) q:xd=""  d  q:stop
 .......s xv="" f  s xv=$o(^TDEB(mrn,xd,0,xv)) q:xv=""  d  q:stop
 ........s ts="" f  s ts=$o(^TEPI(xv,1,ts)) q:ts=""  i (","_RESULT(4)_",")[(","_ts_",") s stop=1 q
 ..... ; check visit information
 .....s tscnt="" f  s tscnt=$o(^TEPI(vis,1,TEST(2),tscnt)) q:tscnt=""  d  q:$l(found)
 ...... ; check result
 ......i $tr($p($g(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2))),"\"),"[]{}")=RESULT(3) s found=TEST(2)_"||"_tscnt d
 .......i 'Wait f j=1:1:$l(RESULT(4),",") s x=$p(RESULT(4),",",j) i $l(x),$d(^TEPI(vis,1,x)) s found="" q
 ...... ; check standard comments
 ......s x1=0 f  s x1=$o(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2),"REM",x1)) q:x1=""  d
 .......i $g(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2),"REM",x1))[("{"_RESULT(3)_"}") s found=TEST(2)_"||"_tscnt d
 ........ ; exclude T/S without waiting period
 ........i 'Wait f j=1:1:$l(RESULT(4),",") s x=$p(RESULT(4),",",j) i $l(x),$d(^TEPI(vis,1,x)) s found="" q
 .......i $g(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2),"REM",x1))[("["_RESULT(3)_"]") s found=TEST(2)_"||"_tscnt d
 ........ ; exclude T/S without waiting period
 ........i 'Wait f j=1:1:$l(RESULT(4),",") s x=$p(RESULT(4),",",j) i $l(x),$d(^TEPI(vis,1,x)) s found="" q
 ....i $$close^LVBCTSLR()
 ...i $l(found) d
 .... ; save patient
 ....k PLIST s PLIST(2)=vis,PLIST(3)=+$h,PLIST(4)=$$user^MVBSSUSR()
 ....s PLIST=$o(PLIST(""),-1) i $$insert^LVBLTPT(Letter)
 .... ; save patient test/set
 ....k PLIST s PLIST(2)=$p(found,"||",1),PLIST(3)=$p(found,"||",2)
 ....s PLIST=$o(PLIST(""),-1) i $$insert^LVBLTPTT(Letter_"||"_vis)
 ...i $$close^LVBCTSLT()
 .i '$$select^LVBLTMN(Letter) d
 ..f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ..s PLIST(3)=End i $$update^LVBLTMN(Letter)
 q 0
%LTPT0o s $zt="%LTPT0E" s SQLCODE=$s($g(%LTPT0c):-101,1:0) q:SQLCODE'=0  s %LTPT0d(9)=0 s %LTPT0d(10)=0,%LTPT0d(11)=""
 s %LTPT0d(6)=$g(par)
 s %LTPT0c=1 q
%LTPT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %LTPT0c,%LTPT0d,%LTPT0E,%LTPT0l,%LTPT0n,%LTPT0R,%LTPT0Z q
%0Afirst 
 ; asl MOD# 2
 s %LTPT0d(1)=%LTPT0d(6)
 i %LTPT0d(1)="" g %0ABdun
 s %LTPT0d(3)=""
%0ABk1 s %LTPT0d(3)=$o(^TTLT(%LTPT0d(1),%LTPT0d(3)))
 i %LTPT0d(3)="" g %0ABdun
 s %LTPT0d(15)=$g(^TTLT(%LTPT0d(1),%LTPT0d(3)))
 s %LTPT0d(4)=$p(%LTPT0d(15),"\",1) s %LTPT0d(5)=$p(%LTPT0d(15),"\",2)
 s %LTPT0d(2)=(%LTPT0d(1))_"||"_(%LTPT0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTLT($p(%LTPT0d(2),"||",1),$p(%LTPT0d(2),"||",2))#"S":$zu(115,4) i $t { s %LTPT0d(10)=1,%LTPT0d(11)=$name(^TTLT($p(%LTPT0d(2),"||",1),$p(%LTPT0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.LT_LettersPatient for RowID value: "_%LTPT0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %LTPT0d(8)=$p(%LTPT0d(2),"||"),%LTPT0d(3)=$p(%LTPT0d(2),"||",2)
 i %LTPT0d(8)'="",%LTPT0d(3)'="",$d(^TTLT(%LTPT0d(8),%LTPT0d(3)))
 e  g %0ACdun
 s %LTPT0d(19)=$g(^TTLT(%LTPT0d(8),%LTPT0d(3)))
 s %LTPT0d(4)=$p(%LTPT0d(19),"\",1) s %LTPT0d(5)=$p(%LTPT0d(19),"\",2)
 s %LTPT0d(1)=$p(%LTPT0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %LTPT0d(9)=%LTPT0d(9)+1,%ROWCOUNT=%LTPT0d(9),%ROWID=%LTPT0d(2),%LTPT0c=10 q
%LTPT0f i '$g(%LTPT0c) { s SQLCODE=-102 q  } i %LTPT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%LTPT0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%LTPT0d(9),%LTPT0c=100 q  } g %0Afirst:%LTPT0c=1
%0ACdun i $zu(115,2)=1,$g(%LTPT0d(10))=1 { l -@%LTPT0d(11) s %LTPT0d(10)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%LTPT0d(9),SQLCODE=100,%LTPT0c=100 q
%LTPT0c i '$g(%LTPT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%LTPT0d(9)),1:0)
 i $zu(115,2)=1,$g(%LTPT0d(10))=1 { l -@%LTPT0d(11) } k %LTPT0c,%LTPT0d,%LTPT0E,%LTPT0l,%LTPT0n,%LTPT0R,%LTPT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %LTPT0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.LTLettersPatient.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTLT(%mmmsqld(4),%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(11)=$$%getlock^User.LTLettersPatient.T1(%mmmsqld(2)) i '%mmmsqld(11) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTLT(%mmmsqld(4),%mmmsqld(5)))
 e  g %0ECdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.LTLettersPatient.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(11)=1 %ReleaseLock^User.LTLettersPatient.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(11)=1 %ReleaseLock^User.LTLettersPatient.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(11))=1 %ReleaseLock^User.LTLettersPatient.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTLT(%mmmsqld(3),%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(10)=$$%getlock^User.LTLettersPatient.T1(%mmmsqld(1)) i '%mmmsqld(10) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTLT(%mmmsqld(3),%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.LTLettersPatient.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.LTLettersPatient.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.LTLettersPatient.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.LTLettersPatient.T1(%mmmsqld(1)) g %0Gc
%0Jo d %LTPT0f q:SQLCODE'=0
 s PLIST(0)=%LTPT0d(1),PLIST(1)=%LTPT0d(2),PLIST(2)=%LTPT0d(3),PLIST(3)=%LTPT0d(4),PLIST(4)=%LTPT0d(5)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(7)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(9)'="",PLIST(2)'="",$d(^TTLT(%mmmsqld(9),PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(15)=$g(^TTLT(%mmmsqld(9),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(15),"\",1) s PLIST(4)=$p(%mmmsqld(15),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTLT($p(PLIST(1),"||",1),$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTLT($p(PLIST(1),"||",1),$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.LT_LettersPatient for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(9)'="",PLIST(2)'="",$d(^TTLT(%mmmsqld(9),PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(19)=$g(^TTLT(%mmmsqld(9),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(19),"\",1) s PLIST(4)=$p(%mmmsqld(19),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
