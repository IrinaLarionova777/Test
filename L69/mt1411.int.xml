<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1411" type="INT" languagemode="0"><![CDATA[
mt1411  ; Compiled May 22, 2000 13:12:56 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1411(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 i +%check d valid33 i '%ok d vdiag("DELETE",-107_$c(1)_"tbl"_$c(1)_"val"_$c(1)_"CT_ProductCode"_$C(1,1)) s SQLCODE=-107 g gunlock
 d trig0C^mt1411
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1411(+%check=1) i '%ok s SQLCODE=-104 q
winsert s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile^mt1412(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1411 i '%ok s SQLCODE=-108 g gunlock
 i +%check d valid35 i '%ok d vdiag("INSERT",-107_$c(1)_"tbl"_$c(1)_"val"_$c(1)_"CT_ProductCode"_$C(1,1)) s SQLCODE=-107 g gunlock
 d file
 d trig0A^mt1411
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:19 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1411(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:19 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile^mt1412(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1412(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1411 i '%ok s SQLCODE=-108 g gunlock
 i +%check d valid36 i '%ok d vdiag("UPDATE",-107_$c(1)_"tbl"_$c(1)_"val"_$c(1)_"CT_ProductCode"_$C(1,1)) s SQLCODE=-107 g gunlock
 d file
 d trig0B^mt1411
 g gunlock
vdiag(oper,info) i $g(%mdiag)'<10 s $p(%mdiag,$c(1),2)="YES" q
 s %mdiag=$g(%mdiag)+1_$c(1)_"NO"_$c(1)_oper,%mdiag(+%mdiag)=info_$c(1)_$g(%msg) q
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^CT("PR",$p(%ROWID,$c(1))):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^CT("PR",$p(%ROWID,$c(1)))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^CT("PR",$p(%edit(1),$c(1),1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(2)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",1)=$g(%data(2))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",2)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",3)=$p($g(%data(4)),$c(1))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",4)=$p($g(%data(5)),$c(1))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",5)=$g(%data(6))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",6)=$g(%data(7))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",7)=$p($g(%data(8)),$c(1))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",8)=$p($g(%data(9)),$c(1))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",9)=$p($g(%data(10)),$c(1))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",10)=$g(%data(11))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",11)=$g(%data(12))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",12)=$g(%data(13))
 i $d(%edit(14)) s x=$g(%data(14)),^CT("PR",$p(%data(1),$c(1),1),"REM",0)=x d  
 . s irep=%edit(14) s:irep<x irep=x f irep=1:1:irep s:irep'>x ^(irep)=$g(%data(14,irep)) k:irep>x ^(irep)
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",13)=$p($g(%data(15)),$c(1))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",14)=$g(%data(16))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",15)=$p($g(%data(17)),$c(1))
 i $d(%edit(18)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",16)=$p($g(%data(18)),$c(1))
 i $d(%edit(19)) s:'($d(tempn)#2) tempn=$g(^CT("PR",$p(%data(1),$c(1),1))) s $p(tempn,"^",17)=$p($g(%data(19)),$c(1))
 s:$d(tempn)#2 ^CT("PR",$p(%data(1),$c(1),1))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$$ALPHAUP($s($d(%edit(2)):%edit(2),1:$g(%data(2)))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^CT("PR",0,"Code",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^CT("PR",0,"Code",sn(1),sn(2)) k ^CT("PR",0,"Code",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$$ALPHAUP($g(%data(2))) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map1dun
 s ^CT("PR",0,"Code",sn(1),sn(2))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$$ALPHAUP($s($d(%edit(3)):%edit(3),1:$g(%data(3)))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^CT("PR",0,"Desc",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^CT("PR",0,"Desc",sn(1),sn(2)) k ^CT("PR",0,"Desc",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$$ALPHAUP($g(%data(3))) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map2dun
 s ^CT("PR",0,"Desc",sn(1),sn(2))=tempn
map2dun q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(141)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(141)
 q
 d %0Do
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
  d %0Do^mt1411  s %didit=1
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(141)
 q
 d %0Eo
getold(%dataold) g %0Eo
lookupF d %RSFcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",5),1,5)_"  "_$e(%datars(3)_$j("",20),1,20)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupF
 
lookupG d %RSGcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",5),1,5)_"  "_$e(%datars(3)_$j("",20),1,20)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupG
 
lookupH d %RSHcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",5),1,5)_"  "_$e(%datars(3)_$j("",20),1,20)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupH
 
selitmH  ; entry point to select the Row Selection Item
 i $c(1)'[$g(%data(2)) s item=2 q
 i $c(1)'[$g(%data(3)) s item=3 q
 s item=0 f  s item=$o(%data(item)) q:item=""  i $c(1)'[%data(item) s item=1 q
 s item=$s(item=1:"",1:1) q
 s item="" q
code8 ; compute code of field CTPRC_Split
 s $p(%data(8),$c(1))=""
 s $p(%data(8),$c(1))=$$CO08^at22($p($g(%data(1)),$c(1)))
 q
comp8 ; entry point to do computed field CTPRC_Split
 n %oldval q:(","_$g(trak)_",")[(",8,")
 s %oldval=$g(%data(8)) d code8 s %ok=1 i $g(%data(8))=%oldval q
 s %val=%data(8)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde5 s $p(%data(8),$c(1))=%val
 s %val=$p($g(%data(8)),$c(1)) d:%val'="" fdv5^mt1412 s:'%ok %data(8)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CTPRC_Split","",%msg) q
 s %val=$p(%data(8),$c(1))
 d:%val'="" fdi5^mt1412 s $p(%data(8),$c(1),2)=%val
 i $g(%data(8))="",%oldval="" q
 s:'$d(%edit(8)) %edit(8)=%oldval k:$g(%data(8))=$g(%edit(8)) %edit(8)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CT_ProductCode"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(2)) s %ok="Code" d %mdiag(%oper,-106,"Fld Int","Req","CTPRC_Code","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(5)) s %ok="Match ABORH" d %mdiag(%oper,-106,"Fld Int","Req","CTPRC_MatchABORH","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(9)) s %ok="Multi-Donor" d %mdiag(%oper,-106,"Fld Int","Req","CTPRC_MultiDonor","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(3)) s %ok="Product Name" d %mdiag(%oper,-106,"Fld Int","Req","CTPRC_Name","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(1)) s %ok="CT_ProductCode Row ID" d %mdiag(%oper,-106,"Fld Int","Req","CTPRC_RowId","",%ok) s %msg=%ok,%ok=0
 q
valid33 ; DELETE: Row Validation
 n SQLCODE
 d VALDEL^atgen
 q
valid35 ; INSERT: Row Validation
 n SQLCODE
 d VALINS^atgen
 q
valid36 ; UPDATE: Row Validation
 n SQLCODE
 d VALUPD^atgen
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CT_ProductCode
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %val=$i(^CT("PR",0)) g inrwide
 g rowiderr
inrwide ; external to internal conversion for rowid
 i 'rowerr d fde4^mt1411 i '%ok g:'iform rowiderr s rowerr=1
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1412 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i 'rowerr d fdi4^mt1412 s %data(1)=%data(1)_$c(1)_%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 g insarr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt1412
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp8^mt1411
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde19 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,0,"",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde4 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde5 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) s %data(11)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=5 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_MatchABORH","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=9 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_MultiDonor","",$g(%msg))
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=4 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_NormalLife","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=10 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_Quarantine","",$g(%msg))
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=1 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_RowId","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_Split","",$g(%msg))
 f %irep=1:1:$g(%data(14)) i $d(%data(14,%irep)),$p(%data(14,%irep),$c(1))="",$p(%data(14,%irep),$c(1),2)'="" s %val=$p(%data(14,%irep),$c(1),2) s %data(14,%irep)=%val
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=15 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_RecordPackGroup","",$g(%msg))
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) s %data(16)=%val
 i $d(%data(17)),$p(%data(17),$c(1))="",$p(%data(17),$c(1),2)'="" s %val=$p(%data(17),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=17 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_IssueNoCheckGroup","",$g(%msg))
 i $d(%data(18)),$p(%data(18),$c(1))="",$p(%data(18),$c(1),2)'="" s %val=$p(%data(18),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=18 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_XMProduct","",$g(%msg))
 i $d(%data(19)),$p(%data(19),$c(1))="",$p(%data(19),$c(1),2)'="" s %val=$p(%data(19),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=19 d etiok
 . s %msg="" d fde19 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTPRC_ExtendExpiryDate","",$g(%msg))
 q
fdv11 ; DO validation and additional validation code
 n nval s nval=%val d %0Io
  i SQLCODE'=0 s %ok=0
 q
fdv12 ; DO validation and additional validation code
 n nval s nval=%val d %0Jo
  i SQLCODE'=0 s %ok=0
 q
fdv13 ; DO validation and additional validation code
 n nval s nval=%val d %0Ko
  i SQLCODE'=0 s %ok=0
 q
fdv2 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq2($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv5 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
uniq2(%rowid,%unique) n SQLCODE,%val d %0Io q SQLCODE=100
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTPRC_Code","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTPRC_DefLoc_DR","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTPRC_DefStatus_DR","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTPRC_DefTrans_DR","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTPRC_MatchABORH","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTPRC_MultiDonor","",$g(%msg))
 g continue^mt1412
 g ^mt1412
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^CT("PR",%mmmsqld(1),"SPLIT",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0DBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0DBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1421(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0EAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0EBr4 s $P(%dataold(8),$C(1))=$$CO08^at22($P($g(%dataold(1)),$C(1))) q
%0EBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0EBs2 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0EBs3 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 i %mmmsqld(3)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0EAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%dataold(1),$C(1))=%mmmsqld(3)
 i $P(%dataold(1),$C(1))'="",$d(^CT("PR",$P(%dataold(1),$C(1))))
 i '$t
 e  i 1>$P(%dataold(1),$C(1)),$P(%dataold(1),$C(1))=+$P(%dataold(1),$C(1))
 i  g %0EBdun
 s %mmmsqln=$g(^CT("PR",$P(%dataold(1),$C(1))))
 s %dataold(2)=$p(%mmmsqln,"^",1) s %dataold(3)=$p(%mmmsqln,"^",2) s %dataold(4)=$p(%mmmsqln,"^",3) s:%dataold(4)'="" %dataold(4)=+%dataold(4) s %dataold(5)=$p(%mmmsqln,"^",4) s %dataold(6)=$p(%mmmsqln,"^",5) s %dataold(7)=$p(%mmmsqln,"^",6) s %dataold(9)=$p(%mmmsqln,"^",8) s %dataold(10)=$p(%mmmsqln,"^",9)
 s %dataold(11)=$p(%mmmsqln,"^",10) s %dataold(12)=$p(%mmmsqln,"^",11) s %dataold(13)=$p(%mmmsqln,"^",12) s %dataold(15)=$p(%mmmsqln,"^",13) s %dataold(16)=$p(%mmmsqln,"^",14) s %dataold(17)=$p(%mmmsqln,"^",15) s %dataold(18)=$p(%mmmsqln,"^",16) s %dataold(19)=$p(%mmmsqln,"^",17) s:%dataold(19)'="" %dataold(19)=+%dataold(19)
 k %dataold(14) s %dataold(14)=$g(^CT("PR",$P(%dataold(1),$C(1)),"REM",0)) s:'%dataold(14) %dataold(14)="" f %irep=1:1:%dataold(14) s %dataold(14,%irep)=$g(^(%irep))
 
 s %val=$P(%dataold(5),$C(1)) d %0EBs1:%val'="" s $P(%dataold(5),$C(1),2)=%val
 s %val=$P(%dataold(9),$C(1)) d %0EBs1:%val'="" s $P(%dataold(9),$C(1),2)=%val
 s %val=$P(%dataold(4),$C(1)) d %0EBs2:%val'="" s $P(%dataold(4),$C(1),2)=%val
 s %val=$P(%dataold(10),$C(1)) d %0EBs1:%val'="" s $P(%dataold(10),$C(1),2)=%val
 s %val=$P(%dataold(1),$C(1)) d %0EBs2:%val'="" s $P(%dataold(1),$C(1),2)=%val
 s %val=$P(%dataold(15),$C(1)) d %0EBs1:%val'="" s $P(%dataold(15),$C(1),2)=%val
 s %val=$P(%dataold(17),$C(1)) d %0EBs1:%val'="" s $P(%dataold(17),$C(1),2)=%val
 s %val=$P(%dataold(18),$C(1)) d %0EBs1:%val'="" s $P(%dataold(18),$C(1),2)=%val
 s %val=$P(%dataold(19),$C(1)) d %0EBs3:%val'="" s $P(%dataold(19),$C(1),2)=%val
 d %0EBr4
 s %val=$P(%dataold(8),$C(1)) d %0EBs1:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%RSFcuro s SQLCODE=$s($g(%RSFcurc):-101,1:0) q:SQLCODE'=0
 s %RSFcurc=1 k %RSFcurm
 s %RSFcurE=$zt,%RSFcurf=0,%RSFcure=0,%RSFcurL=""
 q
%0Ffirst   ;  init
 ; asl MOD# 2
 s %RSFcurd(8)=""
%0FBk1 s %RSFcurd(8)=$o(^CT("PR",0,"Code",%RSFcurd(8)))
 i %RSFcurd(8)="" g %0FBdun
 s $P(%datars(1),$C(1))=""
%0FBk2 s $P(%datars(1),$C(1))=$o(^CT("PR",0,"Code",%RSFcurd(8),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0FBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0FBk1
 
 s %val=$P(%datars(1),$C(1)) d %0EBs2:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("PR",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0FBk2
 s %RSFcurn=$g(^CT("PR",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSFcurn,"^",1) s %datars(3)=$p(%RSFcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSFcurf=%RSFcurf+1 s %RSFcurc=10 q
%RSFcurf i '$g(%RSFcurc) s SQLCODE=-102 q
 i %RSFcurc=100 s SQLCODE=100 q
 s $zt="%0Ferr^"_$zn s $ze="" n %val g %0Ffirst:%RSFcurc=1
 g %0FBk2
%0FBdun 
%0FAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSFcurc=100 q
%RSFcurc i '$g(%RSFcurc) s SQLCODE=-102 q
 k %RSFcurc,%RSFcurd,%RSFcure,%RSFcurE,%RSFcurf,%RSFcurl,%RSFcurL,%RSFcurn,%RSFcurr,%RSFcurR s SQLCODE=0 q
%0Ferr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSFcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%RSGcuro s SQLCODE=$s($g(%RSGcurc):-101,1:0) q:SQLCODE'=0
 s %RSGcurc=1 k %RSGcurm
 s %RSGcurE=$zt,%RSGcurf=0,%RSGcure=0,%RSGcurL=""
 s %RSGcurd(8)=$P(%data(2),$C(1))
 q
%0Gfirst   ;  init
 s %RSGcurd(9)=$$ALPHAUP(%RSGcurd(8))
 ; asl MOD# 2
 s %RSGcurd(7)=%RSGcurd(9)
 i %RSGcurd(7)'="",$d(^CT("PR",0,"Code",%RSGcurd(7))) g %0GBg1
%0GBk1 s %RSGcurd(7)=$o(^CT("PR",0,"Code",%RSGcurd(7)))
 i %RSGcurd(7)="" g %0GBdun
%0GBg1 i (%RSGcurd(9)?1n.n),":"']%RSGcurd(7) g %0GBdun
 i '(%RSGcurd(9)=$e(%RSGcurd(7),1,$l(%RSGcurd(9)))) g:(%RSGcurd(9)?1n.n) %0GBk1 g %0GBdun
 s $P(%datars(1),$C(1))=""
%0GBk2 s $P(%datars(1),$C(1))=$o(^CT("PR",0,"Code",%RSGcurd(7),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0GBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0GBk1
 
 s %val=$P(%datars(1),$C(1)) d %0EBs2:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("PR",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0GBk2
 s %RSGcurn=$g(^CT("PR",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSGcurn,"^",1) s %datars(3)=$p(%RSGcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSGcurf=%RSGcurf+1 s %RSGcurc=10 q
%RSGcurf i '$g(%RSGcurc) s SQLCODE=-102 q
 i %RSGcurc=100 s SQLCODE=100 q
 s $zt="%0Gerr^"_$zn s $ze="" n %val g %0Gfirst:%RSGcurc=1
 g %0GBk2
%0GBdun 
%0GAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSGcurc=100 q
%RSGcurc i '$g(%RSGcurc) s SQLCODE=-102 q
 k %RSGcurc,%RSGcurd,%RSGcure,%RSGcurE,%RSGcurf,%RSGcurl,%RSGcurL,%RSGcurn,%RSGcurr,%RSGcurR s SQLCODE=0 q
%0Gerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSGcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%RSHcuro s SQLCODE=$s($g(%RSHcurc):-101,1:0) q:SQLCODE'=0
 s %RSHcurc=1 k %RSHcurm
 s %RSHcurE=$zt,%RSHcurf=0,%RSHcure=0,%RSHcurL=""
 s %RSHcurd(8)=$P(%data(3),$C(1))
 q
%0Hfirst   ;  init
 s %RSHcurd(9)=$$ALPHAUP(%RSHcurd(8))
 ; asl MOD# 2
 s %RSHcurd(7)=%RSHcurd(9)
 i %RSHcurd(7)'="",$d(^CT("PR",0,"Desc",%RSHcurd(7))) g %0HBg1
%0HBk1 s %RSHcurd(7)=$o(^CT("PR",0,"Desc",%RSHcurd(7)))
 i %RSHcurd(7)="" g %0HBdun
%0HBg1 i (%RSHcurd(9)?1n.n),":"']%RSHcurd(7) g %0HBdun
 i '(%RSHcurd(9)=$e(%RSHcurd(7),1,$l(%RSHcurd(9)))) g:(%RSHcurd(9)?1n.n) %0HBk1 g %0HBdun
 s $P(%datars(1),$C(1))=""
%0HBk2 s $P(%datars(1),$C(1))=$o(^CT("PR",0,"Desc",%RSHcurd(7),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0HBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0HBk1
 
 s %val=$P(%datars(1),$C(1)) d %0EBs2:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("PR",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0HBk2
 s %RSHcurn=$g(^CT("PR",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSHcurn,"^",1) s %datars(3)=$p(%RSHcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSHcurf=%RSHcurf+1 s %RSHcurc=10 q
%RSHcurf i '$g(%RSHcurc) s SQLCODE=-102 q
 i %RSHcurc=100 s SQLCODE=100 q
 s $zt="%0Herr^"_$zn s $ze="" n %val g %0Hfirst:%RSHcurc=1
 g %0HBk2
%0HBdun 
%0HAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSHcurc=100 q
%RSHcurc i '$g(%RSHcurc) s SQLCODE=-102 q
 k %RSHcurc,%RSHcurd,%RSHcure,%RSHcurE,%RSHcurf,%RSHcurl,%RSHcurL,%RSHcurn,%RSHcurr,%RSHcurR s SQLCODE=0 q
%0Herr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSHcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0EAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(1),$C(1))=%mmmsqld(2)
 i $P(%mmmsqld(1),$C(1))'="",$d(^CT("ST",$P(%mmmsqld(1),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(1),$C(1)),$P(%mmmsqld(1),$C(1))=+$P(%mmmsqld(1),$C(1))
 i  g %0IBdun
 
 s %val=$P(%mmmsqld(1),$C(1)) d %0EBs2:%val'="" s $P(%mmmsqld(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0EAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^CT("TRANS",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0JBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0EAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(1),$C(1))=%mmmsqld(2)
 i $P(%mmmsqld(1),$C(1))'="",$d(^CT("LO",$P(%mmmsqld(1),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(1),$C(1)),$P(%mmmsqld(1),$C(1))=+$P(%mmmsqld(1),$C(1))
 i  g %0KBdun
 
 s %val=$P(%mmmsqld(1),$C(1)) d %0EBs2:%val'="" s $P(%mmmsqld(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Kc
%0KBdun 
%0KAdun 
%0Kc q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(%unique,$C(1)),%mmmsqld(5)=$P(%rowid,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$e(%unique,2,99999)
 i %mmmsqld(5)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0EAr1 s %mmmsqld(5)=%val
 s SQLCODE=100
   ;  init
 s %mmmsqld(8)=$$ALPHAUP(%mmmsqld(4))
 ; asl MOD# 2
 s %mmmsqld(7)=$g(%mmmsqld(8))
 i %mmmsqld(7)="" g %0IBdun
 s %mmmsqld(1)=""
%0IBk1 s %mmmsqld(1)=$o(^CT("PR",0,"Code",%mmmsqld(7),%mmmsqld(1)))
 i %mmmsqld(1)="" g %0IBdun
 i %mmmsqld(1)'=+%mmmsqld(1) g %0IBdun
 i '((%mmmsqld(1))'=(%mmmsqld(5))) g %0IBk1
 i %mmmsqld(1)'="",$d(^CT("PR",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0IBk1
 s %mmmsqln=$g(^CT("PR",%mmmsqld(1)))
 s %mmmsqld(3)=$p(%mmmsqln,"^",1)
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
