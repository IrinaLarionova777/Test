<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBQCMTR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBQCMTR ; ML 15/6/2000 ; MVB Control code access for QC_MLTRules
 ;
 ; supported calls:
 ;
 ; $$insert^LVBQCMTR(par)
 ; $$update^LVBQCMTR(ROWID)
 ; $$delete^LVBQCMTR(ROWID,Comments)
 ; $$open^LVBQCMTR(par,status,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBQCMTR(par,status,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBQCMTR(par,status,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBQCMTR(par,status,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBQCMTR()
 ; $$select^LVBQCMTR(ROWID)
 ; $$getall^LVBQCMTR(par,status)
 ; $$getall1^LVBQCMTR(par,status)
 ;
  ;---&SQL(DECLARE QCMTR CURSOR FOR SELECT * FROM QC_MLTRules
   ;---         WHERE QCMTR_ParRef = :par
   ;---         AND ((:status [ QCMTR_Status) OR (:status IS NULL))
   ;---         ORDER BY QCMTR_Order)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par, status
 ; insert the data
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&SQL(insert INTO QC_MLTRules VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE QC_MLTRules VALUES :PLIST() WHERE QCMTR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM QC_MLTRules WHERE QCMTR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(par,status,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),status=$g(status)
  ;---&SQL(OPEN QCMTR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCMTR0o
 q 0
 ; fetch the data
fetch(par,status,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),status=$g(status)
  ;---&SQL(FETCH QCMTR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,status,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),status=$g(status) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,status) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,status,p2,p3,p4,p5,p6,p7,p8,p9) n (par,status,PLIST) s par=$g(par),status=$g(status) k ^TMP($zn,$j)
 i $$open(par,status)
 f cnt=1:1 q:$$fetch(par,status)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE QCMTR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCMTR0c
 q 0
 ; select data by code
select(ROWID) k PLIST s ROWID=$g(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM QC_MLTRules WHERE QCMTR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("5","")
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("5")
 n plist,j,I,SQLCODE,X f j=1:1:PLIST i $d(PLIST(j)) s PLIST(j)=$p(PLIST(j),$c(1),1)
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTQCR(plist(3),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 q
getall(par,status) n (PLIST,par,status) k ^TMP($zn,$j) s par=$g(par),status=$g(status)
 i $$open(par,status)
 f cnt=1:1 q:$$fetch(par,status)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1),2)_$c(2)_$p(PLIST(3),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
getall1(par,status) n (PLIST,par,status) k ^TMP($zn,$j) s par=$g(par),status=$g(status)
 f i=1:1:$l(par,"^") d
 .s parx=$p(par,"^",i)
 .i $$open(parx,status)
 .s cntx=$o(^TMP($zn,$j,""),-1)+1
 .f cnt=cntx:1 q:$$fetch(parx,status)  s ^TMP($zn,$j,cnt)=parx_$c(1)_$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1),2)_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(4),$c(1))
 .i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%QCMTR0o s $zt="%QCMTR0E" s SQLCODE=$s($g(%QCMTR0c):-101,1:0) q:SQLCODE'=0  s %QCMTR0d(18)=0 s %QCMTR0d(19)=0,%QCMTR0d(20)=""
 s %QCMTR0d(8)=$g(par),%QCMTR0d(9)=$g(status),%QCMTR0d(10)=$g(status)
 s %QCMTR0c=1 q
%QCMTR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %QCMTR0c,%QCMTR0d,%QCMTR0E,%QCMTR0l,%QCMTR0n,%QCMTR0R,%QCMTR0Z q
%0Afirst 
 ; asl MOD# 2
 s %QCMTR0d(1)=%QCMTR0d(8)
 s %QCMTR0d(13)=$p(%QCMTR0d(1),"||"),%QCMTR0d(14)=$p(%QCMTR0d(1),"||",2),%QCMTR0d(15)=$p(%QCMTR0d(1),"||",3),%QCMTR0d(16)=$p(%QCMTR0d(1),"||",4)
 i %QCMTR0d(13)="" g %0ABdun
 i %QCMTR0d(14)="" g %0ABdun
 i %QCMTR0d(15)="" g %0ABdun
 i %QCMTR0d(16)="" g %0ABdun
 s %QCMTR0d(3)=""
%0ABk1 s %QCMTR0d(3)=$o(^TTQC(%QCMTR0d(13),"LOT",%QCMTR0d(14),"TYPE",%QCMTR0d(15),%QCMTR0d(16),"RULES",%QCMTR0d(3)))
 i %QCMTR0d(3)="" g %0ABdun
 s %QCMTR0d(33)=$g(^TTQC(%QCMTR0d(13),"LOT",%QCMTR0d(14),"TYPE",%QCMTR0d(15),%QCMTR0d(16),"RULES",%QCMTR0d(3)))
 s %QCMTR0d(5)=$p(%QCMTR0d(33),"\",1)
 g:'(((%QCMTR0d(5)'="")&&((%QCMTR0d(9)'="")&&(%QCMTR0d(9)[%QCMTR0d(5))))||(%QCMTR0d(10)="")) %0ABk1
 s %QCMTR0d(4)=$p(%QCMTR0d(33),"\",2)
 s %QCMTR0d(6)="" f %irep=1:1:$g(^TTQC(%QCMTR0d(13),"LOT",%QCMTR0d(14),"TYPE",%QCMTR0d(15),%QCMTR0d(16),"RULES",%QCMTR0d(3),"REM",0)) s $li(%QCMTR0d(6),%irep)=$g(^(%irep))
 s %QCMTR0d(2)=(%QCMTR0d(13))_"||"_(%QCMTR0d(14))_"||"_(%QCMTR0d(15))_"||"_(%QCMTR0d(16))_"||"_(%QCMTR0d(3))
 s %QCMTR0d(7)=$$CT006^at481($g(%QCMTR0d(4)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTQC($p(%QCMTR0d(2),"||",1),"LOT",$p(%QCMTR0d(2),"||",2),"TYPE",$p(%QCMTR0d(2),"||",3),$p(%QCMTR0d(2),"||",4),"RULES",$p(%QCMTR0d(2),"||",5))#"S":$zu(115,4) i $t { s %QCMTR0d(19)=1,%QCMTR0d(20)=$name(^TTQC($p(%QCMTR0d(2),"||",1),"LOT",$p(%QCMTR0d(2),"||",2),"TYPE",$p(%QCMTR0d(2),"||",3),$p(%QCMTR0d(2),"||",4),"RULES",$p(%QCMTR0d(2),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MLTRules for RowID value: "_%QCMTR0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %QCMTR0d(12)=$lb(""_%QCMTR0d(5))
 s %QCMTR0d(13)=$p(%QCMTR0d(2),"||"),%QCMTR0d(14)=$p(%QCMTR0d(2),"||",2),%QCMTR0d(15)=$p(%QCMTR0d(2),"||",3),%QCMTR0d(16)=$p(%QCMTR0d(2),"||",4),%QCMTR0d(3)=$p(%QCMTR0d(2),"||",5)
 i %QCMTR0d(13)'="",%QCMTR0d(14)'="",%QCMTR0d(15)'="",%QCMTR0d(16)'="",%QCMTR0d(3)'="",$d(^TTQC(%QCMTR0d(13),"LOT",%QCMTR0d(14),"TYPE",%QCMTR0d(15),%QCMTR0d(16),"RULES",%QCMTR0d(3)))
 e  g %0ACdun
 s %QCMTR0d(46)=$g(^TTQC(%QCMTR0d(13),"LOT",%QCMTR0d(14),"TYPE",%QCMTR0d(15),%QCMTR0d(16),"RULES",%QCMTR0d(3)))
 s %QCMTR0d(4)=$p(%QCMTR0d(46),"\",2) s %QCMTR0d(5)=$p(%QCMTR0d(46),"\",1)
 s %QCMTR0d(6)="" f %irep=1:1:$g(^TTQC(%QCMTR0d(13),"LOT",%QCMTR0d(14),"TYPE",%QCMTR0d(15),%QCMTR0d(16),"RULES",%QCMTR0d(3),"REM",0)) s $li(%QCMTR0d(6),%irep)=$g(^(%irep))
 s %QCMTR0d(1)=$p(%QCMTR0d(2),"||",1,4)
 s %QCMTR0d(7)=$$CT006^at481($g(%QCMTR0d(4)))
 s %QCMTR0d(17)=$lb(""_%QCMTR0d(5))
 g:%QCMTR0d(12)'=%QCMTR0d(17) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %QCMTR0d(18)=%QCMTR0d(18)+1,%ROWCOUNT=%QCMTR0d(18),%ROWID=%QCMTR0d(2),%QCMTR0c=10 q
%QCMTR0f i '$g(%QCMTR0c) { s SQLCODE=-102 q  } i %QCMTR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%QCMTR0d(18))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%QCMTR0d(18),%QCMTR0c=100 q  } g %0Afirst:%QCMTR0c=1
%0ACdun i $zu(115,2)=1,$g(%QCMTR0d(19))=1 { l -@%QCMTR0d(20) s %QCMTR0d(19)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%QCMTR0d(18),SQLCODE=100,%QCMTR0c=100 q
%QCMTR0c i '$g(%QCMTR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%QCMTR0d(18)),1:0)
 i $zu(115,2)=1,$g(%QCMTR0d(19))=1 { l -@%QCMTR0d(20) } k %QCMTR0c,%QCMTR0d,%QCMTR0E,%QCMTR0l,%QCMTR0n,%QCMTR0R,%QCMTR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %QCMTR0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.QCMLTRules.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(9)=0 s %mmmsqld(10)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5),"TYPE",%mmmsqld(6),%mmmsqld(7),"RULES",%mmmsqld(8)))
 e  g %0EBdun
 s %mmmsqld(23)=$$%getlock^User.QCMLTRules.T1(%mmmsqld(2)) i '%mmmsqld(23) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5),"TYPE",%mmmsqld(6),%mmmsqld(7),"RULES",%mmmsqld(8)))
 e  g %0ECdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.QCMLTRules.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(9))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(23)=1 %ReleaseLock^User.QCMLTRules.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(23)=1 %ReleaseLock^User.QCMLTRules.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(9)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(23))=1 %ReleaseLock^User.QCMLTRules.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4),"TYPE",%mmmsqld(5),%mmmsqld(6),"RULES",%mmmsqld(7)))
 e  g %0GBdun
 s %mmmsqld(22)=$$%getlock^User.QCMLTRules.T1(%mmmsqld(1)) i '%mmmsqld(22) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4),"TYPE",%mmmsqld(5),%mmmsqld(6),"RULES",%mmmsqld(7)))
 e  g %0GCdun
 d %delete^User.QCMLTRules.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(22)=1 %ReleaseLock^User.QCMLTRules.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(22)=1 %ReleaseLock^User.QCMLTRules.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(22))=1 %ReleaseLock^User.QCMLTRules.T1(%mmmsqld(1)) g %0Gc
%0Jo d %QCMTR0f q:SQLCODE'=0
 s PLIST(0)=%QCMTR0d(1),PLIST(1)=%QCMTR0d(2),PLIST(2)=%QCMTR0d(3),PLIST(3)=%QCMTR0d(4),PLIST(4)=%QCMTR0d(5),PLIST(5)=%QCMTR0d(6),PLIST(6)=%QCMTR0d(7)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(15)=0,%mmmsqld(16)=""
 s %mmmsqld(9)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),%mmmsqld(12)=$p(PLIST(1),"||",2),%mmmsqld(13)=$p(PLIST(1),"||",3),%mmmsqld(14)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(11)'="",%mmmsqld(12)'="",%mmmsqld(13)'="",%mmmsqld(14)'="",PLIST(2)'="",$d(^TTQC(%mmmsqld(11),"LOT",%mmmsqld(12),"TYPE",%mmmsqld(13),%mmmsqld(14),"RULES",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(29)=$g(^TTQC(%mmmsqld(11),"LOT",%mmmsqld(12),"TYPE",%mmmsqld(13),%mmmsqld(14),"RULES",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"\",2) s PLIST(4)=$p(%mmmsqld(29),"\",1)
 s PLIST(5)="" f %irep=1:1:$g(^TTQC(%mmmsqld(11),"LOT",%mmmsqld(12),"TYPE",%mmmsqld(13),%mmmsqld(14),"RULES",PLIST(2),"REM",0)) s $li(PLIST(5),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||",1,4)
 s PLIST(6)=$$CT006^at481($g(PLIST(3)))
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2),"TYPE",$p(PLIST(1),"||",3),$p(PLIST(1),"||",4),"RULES",$p(PLIST(1),"||",5))#"S":$zu(115,4) i $t { s %mmmsqld(15)=1,%mmmsqld(16)=$name(^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2),"TYPE",$p(PLIST(1),"||",3),$p(PLIST(1),"||",4),"RULES",$p(PLIST(1),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MLTRules for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),%mmmsqld(12)=$p(PLIST(1),"||",2),%mmmsqld(13)=$p(PLIST(1),"||",3),%mmmsqld(14)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(11)'="",%mmmsqld(12)'="",%mmmsqld(13)'="",%mmmsqld(14)'="",PLIST(2)'="",$d(^TTQC(%mmmsqld(11),"LOT",%mmmsqld(12),"TYPE",%mmmsqld(13),%mmmsqld(14),"RULES",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(42)=$g(^TTQC(%mmmsqld(11),"LOT",%mmmsqld(12),"TYPE",%mmmsqld(13),%mmmsqld(14),"RULES",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(42),"\",2) s PLIST(4)=$p(%mmmsqld(42),"\",1)
 s PLIST(5)="" f %irep=1:1:$g(^TTQC(%mmmsqld(11),"LOT",%mmmsqld(12),"TYPE",%mmmsqld(13),%mmmsqld(14),"RULES",PLIST(2),"REM",0)) s $li(PLIST(5),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||",1,4)
 s PLIST(6)=$$CT006^at481($g(PLIST(3)))
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) s %mmmsqld(15)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
