<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTSIT" type="INT" languagemode="0"><![CDATA[
BVBCTSIT  ; MVB Control code access for CT_SiteCodes  ; Compiled May 22, 2000 13:23:48 for Cache for Windows
 ; IG 11/9/96
 ;
 ; supported calls:
 ;
 ; $$select^BVBCTSIT(ROWID)
 ; $$open^BVBCTSIT()
 ; $$fetch^BVBCTSIT()
 ; $$close^BVBCTSIT()
 ; $$insert^BVBCTSIT()
 ; $$update^BVBCTSIT()
 ; $$delete^BVBCTSIT(ROWID)
 ;
 ;
 ; Insert the data
insert() D pre K PLIST(1)
 d %0Bo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROW) D pre
 k PLIST(1)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(ROW)
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID) d %0Do
 Q SQLCODE
 ;
 ; Open the cursor
open() d %CTSIT0o
 Q 0
 ;
 ; Fetch the data
fetch() K PLIST
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ;
 ; Close the cursor 
close() d %CTSIT0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 ;
 ; Adjust fields
 i 'SQLCODE D adjust
 q SQLCODE
 ; select data by code
selcode(ROWID) K PLIST
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 ;
 ; Adjust fields
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre S PLIST(2)=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust ;N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 Q
getall() n cnt,rowid,desc,code
 K PLIST
 d %CTSIT0o
 ;
 f cnt=1:1 d  q:SQLCODE
 . d %0Ko
 . i 'SQLCODE s PLIST(cnt)=$p(LIST(1),$c(1))_$c(2)_LIST(3)_$c(2)_LIST(2)
 s PLIST=$o(PLIST(""),-1)
 ;
 d %CTSIT0c
 q 0
 ;
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTSIT0o s SQLCODE=$s($g(%CTSIT0c):-101,1:0) q:SQLCODE'=0
 s %CTSIT0c=1 k %CTSIT0m
 s %CTSIT0E=$zt,%CTSIT0f=0,%CTSIT0e=0,%CTSIT0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTSIT0d(2),$C(1))=""
%0ABk1 s $P(%CTSIT0d(2),$C(1))=$o(^CT("SITE",$P(%CTSIT0d(2),$C(1))))
 i $P(%CTSIT0d(2),$C(1))="" g %0ABdun
 i 1>$P(%CTSIT0d(2),$C(1)),$P(%CTSIT0d(2),$C(1))=+$P(%CTSIT0d(2),$C(1)) g %0ABk1
 i $P(%CTSIT0d(2),$C(1))'=+$P(%CTSIT0d(2),$C(1)) g %0ABdun
 s %CTSIT0n=$g(^CT("SITE",$P(%CTSIT0d(2),$C(1))))
 s %CTSIT0d(3)=$p(%CTSIT0n,"^",1) s %CTSIT0d(4)=$p(%CTSIT0n,"^",2)
 s %val=$P(%CTSIT0d(2),$C(1)) d %0ABs1:%val'="" s $P(%CTSIT0d(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTSIT0f=%CTSIT0f+1 s %CTSIT0c=10 q
%CTSIT0f i '$g(%CTSIT0c) s SQLCODE=-102 q
 i %CTSIT0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTSIT0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTSIT0c=100 q
%CTSIT0c i '$g(%CTSIT0c) s SQLCODE=-102 q
 k %CTSIT0c,%CTSIT0d,%CTSIT0e,%CTSIT0E,%CTSIT0f,%CTSIT0l,%CTSIT0L,%CTSIT0n,%CTSIT0r,%CTSIT0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTSIT0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:3 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1441("1")
 q
%0CAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROW,$C(1))
 i %mmmsqld(3)="",$L(ROW)>1 s %val=$E(ROW,2,999) d %0CAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("SITE",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0CBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:3 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1441(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("SITE",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0DBdun
 d delete^mt1441(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTSIT0f q:SQLCODE'=0
 s PLIST(1)=%CTSIT0d(2),PLIST(2)=%CTSIT0d(3),PLIST(3)=%CTSIT0d(4)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("SITE",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0HBdun
 s %mmmsqln=$g(^CT("SITE",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 s %mmmsqld(8)=$$ALPHAUP(%mmmsqld(3))
 ; asl MOD# 2
 s %mmmsqld(7)=$g(%mmmsqld(8))
 i %mmmsqld(7)="" g %0IBdun
 s $P(PLIST(1),$C(1))=""
%0IBk1 s $P(PLIST(1),$C(1))=$o(^CT("SITE",0,"Code",%mmmsqld(7),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0IBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0IBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("SITE",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0IBk1
 s %mmmsqln=$g(^CT("SITE",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Ko d %CTSIT0f q:SQLCODE'=0
 s LIST(1)=%CTSIT0d(2),LIST(2)=%CTSIT0d(3),LIST(3)=%CTSIT0d(4)
 q
]]></Routine>
</Export>
