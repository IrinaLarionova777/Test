<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt3332" type="INT" languagemode="0"><![CDATA[
mt3332  ; Compiled May 1, 2007 13:22:15 for Cache for Windows
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"JOU_Journal"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fdv10 ; DO validation and additional validation code
 n nval s nval=%val d %0Go
  i SQLCODE'=0 s %ok=0
 q
fdv12 ; DO validation and additional validation code
 n nval s nval=%val d %0Ho
  i SQLCODE'=0 s %ok=0
 q
fdv16 ; DO validation and additional validation code
 n nval s nval=%val d %0Io
  i SQLCODE'=0 s %ok=0
 q
fdv19 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv4 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv7 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
rowiderr s %ok=0 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
continue ; entry point to continue all the validation code for all fields
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_User_DR","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_BillLocation_DR","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_DateOfCollection","",$g(%msg))
 i $d(%edit(14)),%data(14)'=%edit(14) s %icol=14 s %val=$p(%data(14),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_AmountInDebtor","",$g(%msg))
 i $d(%edit(15)),%data(15)'=%edit(15) s %icol=15 s %val=$p(%data(15),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_AmountGSTFree","",$g(%msg))
 i $d(%edit(16)),%data(16)'=%edit(16) s %icol=16 s %val=$p(%data(16),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv16 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_DebtorNumber_DR","",$g(%msg))
 i $d(%edit(17)),%data(17)'=%edit(17) s %icol=17 s %val=$p(%data(17),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_AmountGSTTaxable","",$g(%msg))
 i $d(%edit(18)),%data(18)'=%edit(18) s %icol=18 s %val=$p(%data(18),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_AmountGST","",$g(%msg))
 i $d(%edit(19)),%data(19)'=%edit(19) s %icol=19 s %val=$p(%data(19),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv19 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","JOU_Printed","",$g(%msg))
 q
fdi19 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi4 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4)
 q
fdi7 s %val=$s(%val'=+%val:"",1:$fn(%val,""))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),$p(%data(4),$c(1))'="" s %val=$p(%data(4),$c(1)) d fdi4 s $p(%data(4),$c(1),2)=%val
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),%data(6)[$c(1) s %data(6)=$s($p(%data(6),$c(1))'="":$p(%data(6),$c(1)),1:$p(%data(6),$c(1),2))
 i $d(%data(7)),$p(%data(7),$c(1))'="" s %val=$p(%data(7),$c(1)) d fdi7 s $p(%data(7),$c(1),2)=%val
 i $d(%data(8)),$p(%data(8),$c(1))'="" s %val=$p(%data(8),$c(1)) d fdi7 s $p(%data(8),$c(1),2)=%val
 i $d(%data(9)),$p(%data(9),$c(1))'="" s %val=$p(%data(9),$c(1)) d fdi7 s $p(%data(9),$c(1),2)=%val
 i $d(%data(10)),%data(10)[$c(1) s %data(10)=$s($p(%data(10),$c(1))'="":$p(%data(10),$c(1)),1:$p(%data(10),$c(1),2))
 i $d(%data(11)),%data(11)[$c(1) s %data(11)=$s($p(%data(11),$c(1))'="":$p(%data(11),$c(1)),1:$p(%data(11),$c(1),2))
 i $d(%data(12)),%data(12)[$c(1) s %data(12)=$s($p(%data(12),$c(1))'="":$p(%data(12),$c(1)),1:$p(%data(12),$c(1),2))
 i $d(%data(13)),$p(%data(13),$c(1))'="" s %val=$p(%data(13),$c(1)) d fdi4 s $p(%data(13),$c(1),2)=%val
 i $d(%data(14)),$p(%data(14),$c(1))'="" s %val=$p(%data(14),$c(1)) d fdi7 s $p(%data(14),$c(1),2)=%val
 i $d(%data(15)),$p(%data(15),$c(1))'="" s %val=$p(%data(15),$c(1)) d fdi7 s $p(%data(15),$c(1),2)=%val
 i $d(%data(16)),%data(16)[$c(1) s %data(16)=$s($p(%data(16),$c(1))'="":$p(%data(16),$c(1)),1:$p(%data(16),$c(1),2))
 i $d(%data(17)),$p(%data(17),$c(1))'="" s %val=$p(%data(17),$c(1)) d fdi7 s $p(%data(17),$c(1),2)=%val
 i $d(%data(18)),$p(%data(18),$c(1))'="" s %val=$p(%data(18),$c(1)) d fdi7 s $p(%data(18),$c(1),2)=%val
 i $d(%data(19)),$p(%data(19),$c(1))'="" s %val=$p(%data(19),$c(1)) d fdi19 s $p(%data(19),$c(1),2)=%val
 i $d(%data(20)),%data(20)[$c(1) s %data(20)=$s($p(%data(20),$c(1))'="":$p(%data(20),$c(1)),1:$p(%data(20),$c(1),2))
 i $d(%data(21)),%data(21)[$c(1) s %data(21)=$s($p(%data(21),$c(1))'="":$p(%data(21),$c(1)),1:$p(%data(21),$c(1),2))
 i $d(%data(22)),%data(22)[$c(1) s %data(22)=$s($p(%data(22),$c(1))'="":$p(%data(22),$c(1)),1:$p(%data(22),$c(1),2))
 i $d(%data(23)),%data(23)[$c(1) s %data(23)=$s($p(%data(23),$c(1))'="":$p(%data(23),$c(1)),1:$p(%data(23),$c(1),2))
 i $d(%data(24)),%data(24)[$c(1) s %data(24)=$s($p(%data(24),$c(1))'="":$p(%data(24),$c(1)),1:$p(%data(24),$c(1),2))
 i $d(%data(25)),%data(25)[$c(1) s %data(25)=$s($p(%data(25),$c(1))'="":$p(%data(25),$c(1)),1:$p(%data(25),$c(1),2))
 i $d(%data(26)),%data(26)[$c(1) s %data(26)=$s($p(%data(26),$c(1))'="":$p(%data(26),$c(1)),1:$p(%data(26),$c(1),2))
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint^mt3331 g:'%ok rowiderr:'iform i %check=1 d validate^mt3331 g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt3332 q:'%ok
 d comp8^mt3331 d comp12^mt3331 d comp16^mt3331 d comp13^mt3331 d comp14^mt3331 d comp2^mt3331
 q
 g ^mt3333
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^SSU("SSUSR",1,%mmmsqld(4)))
 e  g %0GBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("BILL-LOC",%mmmsqld(4)))
 e  g %0HBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TDEB(%mmmsqld(4)))
 e  g %0IBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
