<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCOM04" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCOM04 ; IG 27/10/2000 ; Common routines
 ;
 ; supported calls:
 ;
 ; $$xdelete^LVBCOM04(ROWID,Comments)
 ; $$eXM^LVBCOM04(packID,mrn,vts)
 ; $$clean^LVBCOM04(rowid)
 ; $$getFormat^LVBCOM04(line,test,mrn,vtsRID)
 ; $$check^LVBCOM04(routine)
 ; $$checkbt^LVBCOM04(mrn,bpRID)
 ; $$BarCodes^LVBCOM04()
 ; $$getall1^LVBCOM04(product,bg,mrn,skip,unitID,site,location,status,vtsRID,extra)
 ; $$getall2^LVBCOM04(p0,p1,mrn,p3,p4,p5,p6,p7,vtsRID,extra)
 ; $$getall3^LVBCOM04(par,mrn,type)
 ; $$getall4^LVBCOM04(product,bg,mrn,skip,unitID,site,location,status,vtsRID,extra)
 ;
 ; Delete the data
xdelete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 ; delete all transactions
 i $$delall^LVBBBPT(ROWID)
 ; delete pack
  ;---&SQL(DELETE FROM BBP_PackDetails WHERE BBP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Ao
 d clean^LVBCOM04(ROWID)
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("20")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBSUP(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$C(1)_PLIST(6)_$C(1)_PLIST(7)_$C(1)_PLIST(8)_$C(1)_PLIST(9)_$C(1)_PLIST(10)_$C(1)_PLIST(4)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 I $G(PLIST(8))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBBP(plist(8),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$C(1)_PLIST(9)_$C(1)_PLIST(24)
 .K PLIST M PLIST=plist S PLIST(8)=X K plist
 f j=9,47 I $G(PLIST(j))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBBG(plist(j),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(j)=X K plist
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBL(plist(11))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$c(1)_$p(PLIST(4),$c(1),2)_$c(1)_$p(PLIST(4),$c(1),1)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 I $G(PLIST(16))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(16),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(16)=X K plist
 I $G(PLIST(17))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBST(plist(17),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(17)=X K plist
 f jj=6,19 I $G(PLIST(jj))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBDEB(plist(jj))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(8)_$C(1)_PLIST(4)
 .K PLIST M PLIST=plist S PLIST(jj)=X K plist
 ;
 Q
 ; clean indexes
clean(rowid) n (rowid)
 i '$$select^LVBBBP(rowid,"Y") d
 .s x1="" f  s x1=$o(^TBBPi("DEBTOR",x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TBBPi("DEBTOR",x1,x2)) q:x2=""  d
 ...i $d(^TBBPi("DEBTOR",x1,x2,PLIST(2),PLIST(3))),((x1'=PLIST(6))!(x2'=PLIST(18))) k ^TBBPi("DEBTOR",x1,x2,PLIST(2),PLIST(3))
 .s x1="" f  s x1=$o(^TBBPi("LOCATION",x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TBBPi("LOCATION",x1,x2)) q:x2=""  d
 ...i $d(^TBBPi("LOCATION",x1,x2,PLIST(2),PLIST(3))),((x1'=PLIST(11))!(x2'=PLIST(18))) k ^TBBPi("LOCATION",x1,x2,PLIST(2),PLIST(3))
 .s x1="" f  s x1=$o(^TBBPi("STATUS",x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TBBPi("STATUS",x1,x2)) q:x2=""  d
 ...i $d(^TBBPi("STATUS",x1,x2,PLIST(2),PLIST(3))),((x1'=PLIST(17))!(x2'=PLIST(18))) k ^TBBPi("STATUS",x1,x2,PLIST(2),PLIST(3))
 .s x1="" f  s x1=$o(^TBBPi("STOCK",x1)) q:x1=""  d
 ..i $d(^TBBPi("STOCK",x1,PLIST(2),PLIST(3))),x1'=PLIST(18) k ^TBBPi("STOCK",x1,PLIST(2),PLIST(3))
 q
 ;
 ; x : 1-International Standard
 ;     2-Country/Facility Specific
 ;
 ; 10-Donation Identification number
 ; 11-Blood Group
 ;
 ; x2-Expiry Date
 ; x3-Collection Date
 ; x4-Product Code
 ; x5-Manufactures Identity and Container Information
 ; x9-Donor ID
 ; xa-Production Date
 ;
 ; 26-(specific only) Special Testing
 ; 27-(specific only) National Use BarCodes
 ; 28-(specific only) National Confidential Unit Exclusion Status
 ;
BarCodes() n (PLIST) s ok=0
 ; check barcodes
 f j=1:1:PLIST s ok=100,PLIST(j)=$$UPPER^SSUTIL4(PLIST(j)) d  i ok q
 .
 . ; Progesa
 .
 .i $e(PLIST(j),1,2)="A0",$e(PLIST(j),$l(PLIST(j))-1,$l(PLIST(j)))="3B" s xa(14)=PLIST(j),ok=0 q
 .i $e(PLIST(j),1)="D",$e(PLIST(j),$l(PLIST(j)))="B" s xa(11)=PLIST(j),ok=0 q
 .i $e(PLIST(j),1)="D",$e(PLIST(j),$l(PLIST(j)))="D",$l(PLIST(j))=9 s xa(10)=PLIST(j),ok=0 q
 .i $e(PLIST(j),1)="A",$e(PLIST(j),$l(PLIST(j)))="A",$l(PLIST(j))=9 s xa(10)=PLIST(j),ok=0 q
 .i $e(PLIST(j),1)="A",$e(PLIST(j),$l(PLIST(j)))="A",$l(PLIST(j))=10 s xa(12)=PLIST(j),ok=0 q
 .
 . ; ISBT 128
 .
 .i $e(PLIST(j),1)="=" d  i 'ok q
 ..i $e(PLIST(j),2)?1UN s xx(10)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="%" s xx(11)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)=">" s xx(12)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="*" s xx(13)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="<" s xx(14)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)=")" s xx(15)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)=";" s xx(19)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="}" s xx("1a")=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="{" s xx=$o(xx(26,""),-1)+1,xx(26,xx)=PLIST(j),ok=0 q
 .i $e(PLIST(j),1)="&" d  i 'ok q
 ..i $e(PLIST(j),2)=">" s xx(22)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="*" s xx(23)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="<" s xx(24)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)=")" s xx(25)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="(" s xx=$o(xx(26,""),-1)+1,xx(26,xx)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)?1UN s xx=$o(xx(27,""),-1)+1,xx(27,xx)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="!" s xx(28)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)=";" s xx(29)=PLIST(j),ok=0 q
 ..i $e(PLIST(j),2)="}" s xx("2a")=PLIST(j),ok=0 q
 .
 . ; client specific barcodes
 .
 .i $l($p($g(^CF("SM",1)),"^",28)),$l($t(@("BarCodes^"_$zn_$p(^CF("SM",1),"^",28)))) d @("BarCodes^"_$zn_$p(^CF("SM",1),"^",28))
 k ^TMP($zn,$j) m ^TMP($zn,$j,0)=PLIST
 i 'ok d
 .i '$$getall^LVBBBBG() m BBBG=PLIST
 .i '$$getall^LVBBBBP() m BBBP=PLIST
 .i '$$getall^LVBBBG() m BBG=PLIST
 .i '$$getall^LVBCTCM() m CTCM=PLIST
 .k PLIST f j=1:1:50 s PLIST(j)=""
 .s PLIST=$o(PLIST(""),-1)
 .
 .i $l($g(xx(10))) s PLIST(2)=$e(xx(10),2,16),$p(PLIST(28),",",2)="Y"
 .i $l($g(xa(10))) s PLIST(2)=$e(xa(10),2,8),$p(PLIST(28),",",2)="Y"
 .
 .i $l($g(xx(11))) d
 ..s gg=$e(xx(11),3,4)
 ..s r=$e(xx(11),5,6)
 ..i $l(gg) d
 ...i $e(gg)'="M" s found=0 f j1=1:1:BBBG d  i found q
 ....i (","_$p($p(BBBG(j1),$c(2),4),$c(28),8)_",")'[(","_gg_",") q
 ....s found=1
 ....s PLIST(9)=$p($p($p(BBBG(j1),$c(2),4),$c(28),2),$c(1),1),$p(PLIST(28),",",9)="Y"
 ....f j2=1:1:$l($p($p(BBBG(j1),$c(2),4),$c(28),8),",") i $p($p($p(BBBG(j1),$c(2),4),$c(28),8),",",j2)=gg s PLIST(30)=j2,$p(PLIST(28),",",30)="Y"
 ...i $e(gg)="M" d
 ....i " a b d q x f r "=(" "_$e(gg,2)_" ") s PLIST(30)=$e(gg,2),$p(PLIST(28),",",30)="Y"
 .i $l($g(xa(11))) d
 ..s gg=$e(xa(11),2,4) i $l(gg) d
 ...s found=0 f j1=1:1:BBBG d  i found q
 ....i (","_$p($p(BBBG(j1),$c(2),4),$c(28),8)_",")'[(","_gg_",") q
 ....s found=1
 ....s PLIST(9)=$p($p($p(BBBG(j1),$c(2),4),$c(28),2),$c(1),1),$p(PLIST(28),",",9)="Y"
 ....f j2=1:1:$l($p($p(BBBG(j1),$c(2),4),$c(28),8),",") i $p($p($p(BBBG(j1),$c(2),4),$c(28),8),",",j2)=gg s PLIST(30)=j2,$p(PLIST(28),",",30)="Y"
 .
 .i $l($g(xx(12))) s PLIST(13)=$$intdate^SSUTIL4("01/01/2"_$e(xx(12),3,5))-1+$e(xx(12),6,8),$p(PLIST(28),",",13)="Y"
 .i $l($g(xa(12))) s PLIST(13)=$$intdate^SSUTIL4($e(xa(12),4,5)_"/"_$e(xa(12),2,3)_"/"_$e(xa(12),6,9)),$p(PLIST(28),",",13)="Y"
 .
 .i $l($g(xx(22))) d
 ..s PLIST(13)=$$intdate^SSUTIL4("01/01/2"_$e(xx(22),3,5))-1+$e(xx(22),6,8),$p(PLIST(28),",",13)="Y"
 ..s PLIST(38)=$$inttime^SSUTIL4($e(xx(22),9,10)_":"_$e(xx(22),11,12)),$p(PLIST(28),",",38)="Y"
 .
 .i $l($g(xx(13))) s PLIST(4)=$$intdate^SSUTIL4("01/01/2"_$e(xx(13),3,5))-1+$e(xx(13),6,8),$p(PLIST(28),",",4)="Y"
 .
 .i $l($g(xx(23))) d
 ..s PLIST(4)=$$intdate^SSUTIL4("01/01/2"_$e(xx(23),3,5))-1+$e(xx(23),6,8),$p(PLIST(28),",",4)="Y"
 ..s PLIST(27)=$$inttime^SSUTIL4($e(xx(23),9,10)_":"_$e(xx(23),11,12)),$p(PLIST(28),",",27)="Y"
 .
 .i $l($g(xx(14))) d
 ..s product=$e(xx(14),3,7)
 ..s t=$e(xx(14),8)
 ..s ds=$e(xx(14),9,10)
 ..i $l(product) s found=0 f j1=1:1:BBBP d  i found q
 ...f j2=1:1:$l($p($p($p(BBBP(j1),$c(2),4),$c(28),19),$c(1)),",") d
 ....i $p($p($p($p(BBBP(j1),$c(2),4),$c(28),19),$c(1)),",",j2)'=product q
 ....s found=1
 ....s PLIST(8)=$p($p($p(BBBP(j1),$c(2),4),$c(28),2),$c(1)),$p(PLIST(28),",",8)="Y"
 ..s PLIST(39)=t i t'="0" s $p(PLIST(28),",",39)="Y"
 ..s PLIST(40)=ds i ds'="00" s $p(PLIST(28),",",40)="Y"
 .i $l($g(xa(14))) d
 ..s product=$e(xa(14),3,7)
 ..i $l(product) s found=0 f j1=1:1:BBBP d  i found q
 ...f j2=1:1:$l($p($p($p(BBBP(j1),$c(2),4),$c(28),19),$c(1)),",") d
 ....i $p($p($p($p(BBBP(j1),$c(2),4),$c(28),19),$c(1)),",",j2)'=product q
 ....s found=1
 ....s PLIST(8)=$p($p($p(BBBP(j1),$c(2),4),$c(28),2),$c(1)),$p(PLIST(28),",",8)="Y"
 .
 .i $l($g(xx(24))) d
 ..s product=$e(xx(24),3,7)
 ..s t=$e(xx(24),8)
 ..s ds=$e(xx(24),9,10)
 ..i $l(product) s found=0 f j1=1:1:BBBP d  i found q
 ...f j2=1:1:$l($p($p($p(BBBP(j1),$c(2),4),$c(28),19),$c(1)),",") d
 ....i $p($p($p($p(BBBP(j1),$c(2),4),$c(28),19),$c(1)),",",j2)'=product q
 ....s found=1
 ....s PLIST(8)=$p($p($p(BBBP(j1),$c(2),4),$c(28),2),$c(1)),$p(PLIST(28),",",8)="Y"
 ..s PLIST(39)=t i t'="0" s $p(PLIST(28),",",39)="Y"
 ..s PLIST(40)=ds i ds'="00" s $p(PLIST(28),",",40)="Y"
 .
 .i $l($g(xx(15))) d
 ..s b=$e(xx(15),3)
 ..s qq=$e(xx(15),4,5)
 ..s cat=$e(xx(15),6,12)
 ..i $l(qq) f j=1:1:CTCM i $p($p($p(CTCM(j),$c(2),4),$c(28),4),$c(1))=qq d  q
 ...s PLIST(41)=$p($p($p(CTCM(j),$c(2),4),$c(28),2),$c(1)),$p(PLIST(28),",",41)="Y"
 ..s PLIST(42)=b_qq_cat,$p(PLIST(28),",",42)="Y"
 .
 .i $l($g(xx(25))) s PLIST(43)=$e(xx(25),3,12),$p(PLIST(28),",",43)="Y"
 .
 .i $d(xx(26)) d
 ..f j=1:1 q:'$d(xx(26,j))  d
 ...s PLIST(126)=$g(PLIST(126))
 ...s PLIST(126)=PLIST(126)_$s($l(PLIST(126)):",",1:"")_$e(xx(26,j),3,$l(xx(26,j)))
 .
 .i $d(xx(27)) d
 ..f j=1:1 q:'$d(xx(27,j))  d
 ...s PLIST(127)=$g(PLIST(127))
 ...s PLIST(127)=PLIST(127)_$s($l(PLIST(127)):",",1:"")_$e(xx(27,j),3,$l(xx(27,j)))
 .
 .i $l($g(xx(28))) s PLIST(128)=$e(xx(28),3,$l(xx(28)))
 .
 .i $l($g(xx(19))) s PLIST(44)=$e(xx(19),3,23),$p(PLIST(28),",",44)="Y"
 .
 .i $l($g(xx(29))) s PLIST(44)=$e(xx(29),3,$l(xx(29))),$p(PLIST(28),",",44)="Y"
 .
 .i $l($g(xx("1a"))) s PLIST(45)=$$intdate^SSUTIL4("01/01/2"_$e(xx("1a"),3,5))-1+$e(xx("1a"),6,8),$p(PLIST(28),",",45)="Y"
 .
 .i $l($g(xx("2a"))) d
 ..s PLIST(45)=$$intdate^SSUTIL4("01/01/2"_$e(xx("2a"),3,5))-1+$e(xx("2a"),6,8),$p(PLIST(28),",",45)="Y"
 ..s PLIST(46)=$$inttime^SSUTIL4($e(xx("2a"),9,10)_":"_$e(xx("2a"),11,12)),$p(PLIST(28),",",46)="Y"
 k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q ok
check(routine) n (routine) s routine=$p($g(routine),"("),result=100
 i $l(routine) s xx="+1^"_routine i $l($t(@xx)) s result=0
 q result
 ; check pack tags against patient tags
checkBT(mrn,bpRID) n (mrn,bpRID) s mrn=$g(mrn),bpRID=$g(bpRID),result=0,xx=""
 i $$open^LVBDEBBT(mrn)
 f  q:$$fetch^LVBDEBBT(mrn)  s tag=$p(PLIST(2),$c(1)),x=$p(PLIST(2),$c(1),3) d  i result=100 q
 .i x="Y",$$select^LVBBBPA(bpRID_"||"_tag) s result=100,xx="" q
 .i x'="Y",$$select^LVBBBPA(bpRID_"||"_tag) s result=50,xx=xx_$s($l(xx):",",1:"")_tag q
 i $$close^LVBDEBBT()
 q result_$c(1)_xx
 ; format details
getFormat(line,test,mrn,vtsRID) n (line,test,mrn,vtsRID,extra,PLIST) s line=$g(line),test=$g(test),mrn=$g(mrn),vtsRID=$g(vtsRID)
 s pei=""
 i '$l(pei),$l(mrn) s pei=$$seldata^LVBBBBG($$seldata^LVBDEB(mrn,9),9)
 i '$l(pei),$l(vtsRID) s pei=$$seldata^LVBBBBG($$seldata^LVBDEB($$seldata^LVBEPVIS($p(vtsRID,"||"),20),9),9)
 k PLIST
 i $$open^LVBCTTSO(test,"Y")
 f  q:$$fetch^LVBCTTSO(test,"Y")  s Order(PLIST(2))=PLIST(8)
 i $$close^LVBCTTSO()
 s seq="" f  s seq=$o(Order(seq)) q:seq=""  s xm=Order(seq) d
 . ;---s type="" &SQL(SELECT SSXM_Format INTO :type FROM SS_XM_Fields WHERE SSXM_RowID=:xm)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, type, xm
 .s type="" Do %0Co
 .s Order(seq)=$p(type,$c(1))
 ; sort packs
 k ^TMP($zn,$j,"sort") s sort="" i '$$select^MVBCFLAB(1) s sort=PLIST(98)
 i " 1 2 3 "'[(" "_sort_" ") s sort=1
 s cnt="" f  s cnt=$o(^TMP($zn,$j,line,cnt)) q:cnt=""  d
 .s data1=$p(^(cnt),$c(2),1),data3=$p(^(cnt),$c(2),3)
 .i '$$select^LVBBBP(data1) d
 ..i sort=1 d
 ...s (x1,x2,x3)=$p(data1,"|",1)
 ..i sort=2 d
 ...s x1=$p(data3,$c(28),13) s:'$l(x1) x1=99999 s (x2,x3)=" "
 ..i sort=3 d
 ...s x1=$$seldata^LVBBBBP($p(PLIST(8),$c(1)),17) i '$l(x1) s x1=99999
 ...s x2=$$seldata^LVBBBBG($p(PLIST(9),$c(1)),7) i '$l(x2) s x2=99999
 ...s x3=$p(PLIST(13),$c(1))
 ..i $l(x1),$l(x2),$l(x3) s ^TMP($zn,$j,"sort",x1,x2,x3,cnt)=^TMP($zn,$j,line,cnt)
 k ^TMP($zn,$j,line)
 s x1="" f  s x1=$o(^TMP($zn,$j,"sort",x1)) q:x1=""  d
 .s x2="" f  s x2=$o(^TMP($zn,$j,"sort",x1,x2)) q:x2=""  d
 ..s x3="" f  s x3=$o(^TMP($zn,$j,"sort",x1,x2,x3)) q:x3=""  d
 ...s x4="" f  s x4=$o(^TMP($zn,$j,"sort",x1,x2,x3,x4)) q:x4=""  s xx=^(x4) d
 ....s cnt=$o(^TMP($zn,$j,line,""),-1)+1,^TMP($zn,$j,line,cnt)=xx
 k ^TMP($zn,$j,"sort")
 s cnt="" f  s cnt=$o(^TMP($zn,$j,line,cnt)) q:cnt=""  d
 .s ph="" f j=1,2,3,5,6 s @("data"_j)=$p(^(cnt),$c(2),j)
 .s stat=$p($p(data2,$c(28),17),$c(1)),statStock=$$seldata^LVBBBST(stat,4)
 .s str="",$p(str,$c(28),20)=stat_$c(1)_statStock                                                ; Pack Status (current)
 .k PRODUCT s x=$p($p(data2,$c(28),8),$c(1)) i '$$select^LVBBBBP(x,"Y") d
 ..m PRODUCT=PLIST
 ..s $p(str,$c(28),21)=$p(PRODUCT(7),$c(1))                                                      ; On issue check group
 .s x=$p(data2,$c(28),9)
 .i '$$select^LVBBBBG(x,"Y") d
 ..i pei="Y" s $p(str,$c(28),32)="YQ" q                                                          ; Emergency Issue
 ..s $p(str,$c(28),32)=$p(PLIST(9),$c(1))                                                        ; Emergency Issue
 .i PRODUCT(7)'="Y",$$check^LVBBBAR(mrn,"N",data1)="YQ" s $p(str,$c(28),33)="Y"                  ; Significant phenotypes
 .s $p(str,$c(28),34)=PRODUCT(8)		                                                         ; XM product
 .s $p(str,$c(28),22)=$s($l($p($p(data2,$c(28),6),$c(1))):$p($p(data2,$c(28),6),$c(1))'=mrn,1:0) ; MRN check
 .s $p(str,$c(28),22)=$tr($p(str,$c(28),22),10,"YN")
 .i '$l($p(data3,$c(28),8)),$p(data2,$c(28),13)<$p($$dt($h,$g(PRODUCT(16))),",",1) s $p(str,$c(28),23)=$p(data2,$c(28),13)_$c(1)_$p($$dt($h,$g(PRODUCT(16))),",",1)
 .i $l($p(data3,$c(28),8)),$p(data2,$c(28),13)<$p(data3,$c(28),8) s $p(str,$c(28),23)=$p(data2,$c(28),13)_$c(1)_$p(data3,$c(28),8)
 .s $p(str,$c(28),24)=$s(statStock="IN-1":"",1:"Y")                                              ; Stock status
 .s tooltip="" i '$$getall^LVBBBPA(data1) f j=1:1:PLIST s $p(tooltip,", ",j)=$p(PLIST(j),$c(2),2)
 .s $p(str,$c(28),25)=tooltip                                                                    ; Tags
 .s $p(str,$c(28),26)=$p(data2,$c(28),13)                                                        ; Expiry date
 .s (xx,x1)="" f  s x1=$o(^TBBP($p(data1,"||",1),$p(data1,"||",2),"XM",x1)) q:x1=""  d  i $l(xx) q
 ..i mrn=$$mrn^LVBEPVIS(x1) d
 ...s x2="" f  s x2=$o(^TBBP($p(data1,"||",1),$p(data1,"||",2),"XM",x1,x2)) q:x2=""  d  i $l(xx) q
 ....s x3="" f  s x3=$o(^TBBP($p(data1,"||",1),$p(data1,"||",2),"XM",x1,x2,x3)) q:x3=""  i $p(^(x3),"\",1)="I" s xx="Y" q
 .s $p(str,$c(28),27)=xx                                                                         ; Incompatible XM
 .s $p(str,$c(28),28)=$s(data5>1:+data5,1:"")                                                    ; Preference
 .s $p(str,$c(28),30)=data6                                                                      ; Incompatible Tags
 .i $p(extra,$c(1),12)="Y" s $p(str,$c(28),31)=$s($$eXM($p(data2,$c(28),1),mrn,vtsRID):"N",1:"Y") ;eXM
 .i $p(data2,$c(28),24)="Y",$$seldata^MVBCFLAB(1,164)="Y" d
 ..i '$$getall^LVBBBTR("4",$p(data2,$c(28),17),"E","N"),PLIST s $p(str,$c(28),31)="Y"            ; eXM for autologus packs
 .
 .s seq="" f  s seq=$o(Order(seq)) q:seq=""  d
 ..i Order(seq)=0 s $p(str,$c(28),seq)=$p(data2,$c(28),2)
 ..i Order(seq)=1 s $p(str,$c(28),seq)=$p(data2,$c(28),8)
 ..i Order(seq)=2 s $p(str,$c(28),seq)=$p(data2,$c(28),9)
 ..i Order(seq)=3 s $p(str,$c(28),seq)=$p(data2,$c(28),13)
 ..i Order(seq)=4,'$l($p(data3,$c(28),8)) s $p(str,$c(28),seq)=$$dt($h,$g(PRODUCT(16)))  ; Hold Date/Time
 ..i Order(seq)=4,$l($p(data3,$c(28),8)) s $p(str,$c(28),seq)=$p(data3,$c(28),8)_","_$p(data3,$c(28),9)
 ..i Order(seq)=5 s ph=ph+1,$p(str,$c(28),seq)=$p($p(data3,$c(28),6),",",ph)             ; Phases
 ..i Order(seq)=6 s $p(str,$c(28),seq)=$p(data2,$c(28),17)                               ; Pack Status (current)
 ..i Order(seq)=7 s ($p(str,$c(28),seq),tr)=$p(data3,$c(28),5) i $l(tr) s $p(str,$c(28),50)=$$seldata^LVBBBTR(tr,4)      ; Transaction (issue)
 ..i Order(seq)=8 s $p(str,$c(28),seq)=$p(data3,$c(28),7)                                ; Pack Status (after issue)
 ..i Order(seq)=9 s $p(str,$c(28),seq)=$p(data3,$c(28),4)                                ; XM Status (compatibility)
 ..i Order(seq)=10 s $p(str,$c(28),seq)=$tr(($p($p(data2,$c(28),23),$c(1))=mrn),10,"NY") ; Print Labels
 ..i Order(seq)=11 s $p(str,$c(28),seq)=$s($l($p(data3,$c(28),11)):$p(data3,$c(28),11),1:$p(data2,$c(28),11)) ; Location
 ..i Order(seq)=13 s $p(str,$c(28),seq)=$p(data2,$c(28),25)
 .s $p(^TMP($zn,$j,line,cnt),$c(2),4)=str
 q 0
 ; populate VISTS grid
getall1(product,bg,mrn,skip,unitID,site,location,status,vtsRID,extra) n (product,bg,mrn,skip,unitID,site,location,status,vtsRID,extra,PLIST)
 i $p(extra,$c(1),10)="Y" g getall1Continue
 k ^TMP($zn,$j,"getall1"),^TMP($zn,$j,"getall4")
 s product=$g(product),bg=$g(bg),mrn=$g(mrn),skip=$g(skip),unitID=$g(unitID) i $l(unitID) f j=9,11 s $p(extra,$c(1),j)=""
 s site=$g(site),location=$g(location),status=$g(status),vtsRID=$g(vtsRID),extra=$g(extra),TE=$p(extra,$c(1),9)
 ; Transfusion events
 i $l(TE),'$$getall^LVBBBTEP(TE) d
 .k ^TMP($zn,$j,"TE") m ^TMP($zn,$j,"TE")=PLIST k PLIST
 .s $p(extra,$c(1),9)=""
 .s xx="" f  s xx=$o(^TMP($zn,$j,"TE",xx)) q:xx=""  d
 ..s product=$p($p($p(^(xx),$c(2),4),$c(28),2),$c(1))
 ..s group=$p($p($p(^(xx),$c(2),4),$c(28),5),$c(1))
 ..s $p(extra,$c(1),4)=$p($p(^(xx),$c(2),4),$c(28),3)
 ..i $$getall4(product_$c(1)_group,bg,mrn,skip,unitID,site,location,status,vtsRID,extra)
 ..f j=1:1 q:'$d(^TMP($zn,$j,"getall4",j))  d
 ...s cnt=$o(^TMP($zn,$j,"getall1",""),-1)+1
 ...s ^TMP($zn,$j,"getall1",cnt)=^TMP($zn,$j,"getall4",j)
 i '$l(TE) d
 .i $$getall4(product,bg,mrn,skip,unitID,site,location,status,vtsRID,extra)
 .m ^TMP($zn,$j,"getall1")=^TMP($zn,$j,"getall4")
 .i $l($p(extra,$c(1),11)) d
 ..i '$$select^MVBCFML(1) d
 ...s MT=PLIST(15) i $l(MT) d
 ....s LT=$zu(5) zn MT
 ....i $$updbbstat^COEOrdItem1($p(extra,$c(1),11),"B")
 ....zn LT
 ; format details
 i $l(vtsRID) s test=$p(vtsRID,"||",2),mrn=$$mrn^LVBEPVIS($p(vtsRID,"||")) i $l(test),$$getFormat("getall1",test,mrn,vtsRID)
getall1Continue 
 k PLIST
 s (sum,j2)="" f j1=1:1 s j2=$o(^TMP($zn,$j,"getall1",j2)) q:j2=""  q:sum+$l(^(j2))>15000  s PLIST(j1)=^(j2),sum=sum+$l(^(j2)) k ^(j2)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j,"getall1")):0,1:100)
eXM(packID,mrn,vts) n (packID,mrn,vts) s packID=$g(packID),mrn=$g(mrn),vts=$g(vts),ok=0
 ; patient confirmed BG exist
 i 'ok s ok=100 i $l(mrn),'$$select^LVBDEB(mrn,"Y"),$l(PLIST(9)) s ok=0
 ; patient ALL BG are the same
 i 'ok,$l(mrn),'$$select^LVBDEB(mrn,"Y") d
 .i $l(PLIST(15)),$l(PLIST(16)),PLIST(15)'=PLIST(16) s ok=105
 .i $l(PLIST(15)),$l(PLIST(9)),PLIST(15)'=PLIST(9) s ok=105
 .i $l(PLIST(9)),$l(PLIST(16)),PLIST(9)'=PLIST(16) s ok=105
 ; pack confirmed BG exist
 i 'ok,$l(packID) s ok=101 i '$$select^LVBBBP(packID,"Y"),$l(PLIST(9)) s ok=0
 ; check for significant antibodies in antibody register for current MRN
 i 'ok,$$check^LVBBBAR(mrn,"Y")="Y" s ok=102
 ; check current negative antibody screen available (should be done from VB)
 ; check patient tags
 i '$$getall^LVBDEBBT(mrn,"Y"),PLIST s ok=104
 ; check specimen hold date/time
 i 'ok,$$fHold^LVBCOM03(vts,"Y")="Y" s ok=103
 ; check previous transfusion
 ;i 'ok,$$fPrevTransfusion^LVBCOM03(vts)="Y" s ok=103
 q ok
 ; find BG preference
bgPref1 s (seq1,seq2)=""
 i $l(BG),$l($p(PLIST(8),$c(1))),$l($p(PLIST(9),$c(1))) d
 .f  s seq1=$o(^TTAB("BB-BG",BG,"XM-1",seq1)) q:seq1=""  i $d(^TTAB("BB-BG",BG,"XM-1",seq1,$p(PLIST(8),$c(1)),$p(PLIST(9),$c(1)))) q
 .s $p(^TMP($zn,$j,"getall4",cnt),$c(2),5)=seq1
 i $l(BG),$l($p(PLIST(8),$c(1),4)),$l($p(PLIST(9),$c(1))) d
 .f  s seq2=$o(^TTAB("BB-BG",BG,"XM-2",seq2)) q:seq2=""  i $d(^TTAB("BB-BG",BG,"XM-2",seq2,$p(PLIST(8),$c(1),4),$p(PLIST(9),$c(1)))) q
 .s $p(^TMP($zn,$j,"getall4",cnt),$c(2),5)=seq2
 q
 ; find neonatal BG preference
bgPref2(mBG,bBG) n (mBG,bBG,PLIST) s mBG=$g(mBG),bBG=$g(bBG),result="Y"
 i $l(mBG) s result="N" d
 .i result'="Y",$l(bBG),$l($p(PLIST(8),$c(1))),$l($p(PLIST(9),$c(1))) d
 ..s seq="" f  s seq=$o(^TTAB("BB-BG",bBG,"XM-N",seq)) q:seq=""  s xx=^(seq) d  q:result="Y"
 ...i $p(xx,"\",1)=mBG,$p(xx,"\",2)=$p(PLIST(8),$c(1)),$p(xx,"\",4)=$p(PLIST(9),$c(1)) s result="Y"
 .i result'="Y",$l(bBG),$l($p(PLIST(8),$c(1),4)),$l($p(PLIST(9),$c(1))) d
 ..s seq="" f  s seq=$o(^TTAB("BB-BG",bBG,"XM-N",seq)) q:seq=""  s xx=^(seq) d  q:result="Y"
 ...i $p(xx,"\",1)=mBG,$p(xx,"\",3)=$p(PLIST(8),$c(1),4),$p(xx,"\",4)=$p(PLIST(9),$c(1)) s result="Y"
 q result
 ; populate VISTS grid
getall4(product,bg,mrn,skip,unitID,site,location,status,vtsRID,extra) n (product,bg,mrn,skip,unitID,site,location,status,vtsRID,extra,PLIST)
 k ^TMP($zn,$j,"getall4"),^TMP($zn,$j,"exist4")
 s product=$g(product),group=$p(product,$c(1),2),product=$p(product,$c(1))
 s bg=$g(bg),mrn=$g(mrn),skip=$g(skip),unitID=$g(unitID)
 s site=$g(site),location=$g(location),status=$g(status),vtsRID=$g(vtsRID),extra=$g(extra) i $p(extra,$c(1),2)="" s $p(extra,$c(1),2)=+$h
 s genotype=$p(bg,$c(1),2),bg=$p(bg,$c(1)),UNITS=$p(extra,$c(1),4)
 i '$l(mrn),$l(vtsRID) s mrn=$$mrn^LVBEPVIS($p(vtsRID,"||"))
 s CFLAB(156)=$$seldata^MVBCFLAB(1,156),BG="" i $l(mrn),'$$select^LVBDEB(mrn,"Y") s BG=$s((CFLAB(156)="Y")&'$l(PLIST(9)):PLIST(16),1:PLIST(9))
 k VISTS i $l(vtsRID),'$$select^LVBVISTS(vtsRID,"Y") m VISTS=PLIST
 i $g(VISTS(67))="Y" s bBG=BG,mBG=$$seldata^LVBDEB($$seldata^LVBDEB(mrn,12),9)
 ; select single unitID
 i $l(unitID),unitID["||",'$$select^LVBBBP(unitID) d
 .i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 .s xxBT=$$checkBT(mrn,unitID) i $p(xxBT,$c(1))=100 q
 .i $$check^LVBBBAR(mrn,"N",unitID)="Y" q
 .i $g(VISTS(67))="Y",$$bgPref2(mBG,bBG)'="Y" q
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 .s ^TMP($zn,$j,"getall4",cnt)=$p(PLIST(1),$c(1))_$c(2)_str
 .s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 .d bgPref1
 .s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 ; search for units by unitID
 i $l(unitID),unitID'["||" d
 .k PLIST
 .i $$open^LVBBBP(,,,,unitID,,,,,extra)
 .s cnt=$o(^TMP($zn,$j,"getall4",""),-1)
 .f  q:$$fetch^LVBBBP(,,,,unitID,,,,,extra)  d
 ..i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 ..s xxBT=$$checkBT(mrn,$p(PLIST(1),$c(1))) i $p(xxBT,$c(1))=100 q
 ..i $$check^LVBBBAR(mrn,"N",$p(PLIST(1),$c(1)))="Y" q
 ..i $g(VISTS(67))="Y",$$bgPref2(mBG,bBG)'="Y" q
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 ..s ^TMP($zn,$j,"getall4",cnt)=$p(PLIST(1),$c(1))_$c(2)_str
 ..s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 ..d bgPref1
 ..s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 .i $$close^LVBBBP()
 ; search for units by XM status
 s cnt=$o(^TMP($zn,$j,"getall4",""),-1)
 i $l(mrn),$l($p(extra,$c(1),8)),cnt<UNITS d
 .k PLIST
 .i $$open^LVBBBP(product_$c(1)_group,bg,mrn,skip,,site,location,status,,extra)
 .f  q:$$fetch^LVBBBP(product_$c(1)_group,bg,mrn,skip,,site,location,status,,extra)  d  i cnt=UNITS q
 ..i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 ..s xxBT=$$checkBT(mrn,$p(PLIST(1),$c(1))) i $p(xxBT,$c(1))=100 q
 ..i $$check^LVBBBAR(mrn,"N",$p(PLIST(1),$c(1)))="Y" q
 ..i $g(VISTS(67))="Y",$$bgPref2(mBG,bBG)'="Y" q
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..f j=1,2 s @("x"_j)=$p(PLIST(1),"||",j)
 ..s vts=$g(^TMP($zn,$j,"bbp",x1,x2))
 ..s str0="" i '$$select^LVBVISTE(vts_"||"_x1_"||"_x2) d
 ...f j=1:1:PLIST s $p(str0,$c(28),j)=PLIST(j)
 ...s $p(str0,$c(28),13)=""
 ..s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 ..s ^TMP($zn,$j,"getall4",cnt)=x1_"||"_x2_$c(2)_str_$c(2)_str0
 ..s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 ..d bgPref1
 ..s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 .i $$close^LVBBBP()
 ; search for units without BG preference
 s cnt=$o(^TMP($zn,$j,"getall4",""),-1)
 i '$l(unitID),($l(product)!$l(group)),cnt<UNITS d
 .s $p(extra,$c(1),5)="N",$p(extra,$c(1),6)="IN-1"
 .k PLIST
 .i $$open^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)
 .f  q:$$fetch^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)  d  i cnt=UNITS q
 ..i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 ..s hold=$$hold^LVBBBBP($p(PLIST(8),$c(1))) i $l(hold),PLIST(13)<$p($$dt($h,hold),",",1) q
 ..i $$BBcheck^LVBVIS7(,$p(PLIST(1),$c(1)),mrn) q
 ..s xxBT=$$checkBT(mrn,$p(PLIST(1),$c(1))) i $p(xxBT,$c(1))=100 q
 ..i $$check^LVBBBAR(mrn,"N",$p(PLIST(1),$c(1)))="Y" q
 ..i $g(VISTS(67))="Y",$$bgPref2(mBG,bBG)'="Y" q
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 ..s ^TMP($zn,$j,"getall4",cnt)=$p(PLIST(1),$c(1))_$c(2)_str
 ..s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 ..d bgPref1
 ..s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 .i $$close^LVBBBP()
 ; search for units with BG preference
 s cnt=$o(^TMP($zn,$j,"getall4",""),-1)
 i '$l(unitID),($l(product)!$l(group)),$l(bg),cnt<UNITS d
 .s $p(extra,$c(1),5)="N",$p(extra,$c(1),6)="IN-1",BG=bg
 .k ^TMP($zn,$j,"xx")
 .s seq="" f  s seq=$o(^TTAB("BB-BG",BG,"XM-1",seq)) q:seq=""  m ^TMP($zn,$j,"xx",seq,"XM-1")=^TTAB("BB-BG",BG,"XM-1",seq)
 .s seq="" f  s seq=$o(^TTAB("BB-BG",BG,"XM-2",seq)) q:seq=""  m ^TMP($zn,$j,"xx",seq,"XM-2")=^TTAB("BB-BG",BG,"XM-2",seq)
 .s seq="" f  s seq=$o(^TMP($zn,$j,"xx",seq)) q:seq=""  d  i cnt=UNITS q
 ..i $l(product),($g(VISTS(67))'="Y")!($g(mBG)="") d
 ...s hold=$$hold^LVBBBBP(product)
 ...s bg="" f  s bg=$o(^TTAB("BB-BG",BG,"XM-1",seq,product,bg)) q:bg=""  d  i cnt=UNITS q
 ....k PLIST
 ....i $$open^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)
 ....f  q:$$fetch^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)  d  i cnt=UNITS q
 .....i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 .....i $l(hold),PLIST(13)<$p($$dt($h,hold),",",1) q
 .....i $$BBcheck^LVBVIS7(,$p(PLIST(1),$c(1)),mrn) q
 .....s xxBT=$$checkBT(mrn,$p(PLIST(1),$c(1))) i $p(xxBT,$c(1))=100 q
 .....i $$check^LVBBBAR(mrn,"N",$p(PLIST(1),$c(1)))="Y" q
 .....s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .....s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 .....s ^TMP($zn,$j,"getall4",cnt)=$p(PLIST(1),$c(1))_$c(2)_str_$c(2,2,2)_seq
 .....s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 .....s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 ....i $$close^LVBBBP()
 ..i $l(product),$g(VISTS(67))="Y",mBG'="" d
 ...s hold=$$hold^LVBBBBP(product)
 ...s bg="" f  s bg=$o(^TTAB("BB-BG",BG,"XM-N1",mBG,seq,product,bg)) q:bg=""  d  i cnt=UNITS q
 ....k PLIST
 ....i $$open^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)
 ....f  q:$$fetch^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)  d  i cnt=UNITS q
 .....i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 .....i $l(hold),PLIST(13)<$p($$dt($h,hold),",",1) q
 .....i $$BBcheck^LVBVIS7(,$p(PLIST(1),$c(1)),mrn) q
 .....s xxBT=$$checkBT(mrn,$p(PLIST(1),$c(1))) i $p(xxBT,$c(1))=100 q
 .....i $$check^LVBBBAR(mrn,"N",$p(PLIST(1),$c(1)))="Y" q
 .....s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .....s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 .....s ^TMP($zn,$j,"getall4",cnt)=$p(PLIST(1),$c(1))_$c(2)_str_$c(2,2,2)_seq
 .....s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 .....s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 ....i $$close^LVBBBP()
 ..i $l(group),($g(VISTS(67))'="Y")!(mBG="") d
 ...s bg="" f  s bg=$o(^TTAB("BB-BG",BG,"XM-2",seq,group,bg)) q:bg=""  d  i cnt=UNITS q
 ....k PLIST
 ....i $$open^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)
 ....f  q:$$fetch^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)  d  i cnt=UNITS q
 .....i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 .....s hold=$$hold^LVBBBBP($p(PLIST(8),$c(1))) i $l(hold),PLIST(13)<$p($$dt($h,hold),",",1) q
 .....i $$BBcheck^LVBVIS7(,$p(PLIST(1),$c(1)),mrn) q
 .....s xxBT=$$checkBT(mrn,$p(PLIST(1),$c(1))) i $p(xxBT,$c(1))=100 q
 .....i $$check^LVBBBAR(mrn,"N",$p(PLIST(1),$c(1)))="Y" q
 .....s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .....s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 .....s ^TMP($zn,$j,"getall4",cnt)=$p(PLIST(1),$c(1))_$c(2)_str_$c(2,2,2)_seq
 .....s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 .....s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 ....i $$close^LVBBBP()
 ..i $l(group),$g(VISTS(67))="Y",mBG'="" d
 ...s bg="" f  s bg=$o(^TTAB("BB-BG",BG,"XM-N2",mBG,seq,group,bg)) q:bg=""  d  i cnt=UNITS q
 ....k PLIST
 ....i $$open^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)
 ....f  q:$$fetch^LVBBBP(product_$c(1)_group,bg,,skip,,site,location,status,genotype,extra)  d  i cnt=UNITS q
 .....i $d(^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))) q
 .....s hold=$$hold^LVBBBBP($p(PLIST(8),$c(1))) i $l(hold),PLIST(13)<$p($$dt($h,hold),",",1) q
 .....i $$BBcheck^LVBVIS7(,$p(PLIST(1),$c(1)),mrn) q
 .....s xxBT=$$checkBT(mrn,$p(PLIST(1),$c(1))) i $p(xxBT,$c(1))=100 q
 .....i $$check^LVBBBAR(mrn,"N",$p(PLIST(1),$c(1)))="Y" q
 .....s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .....s cnt=$o(^TMP($zn,$j,"getall4",""),-1)+1
 .....s ^TMP($zn,$j,"getall4",cnt)=$p(PLIST(1),$c(1))_$c(2)_str_$c(2,2,2)_seq
 .....s ^TMP($zn,$j,"exist4",$p(PLIST(1),$c(1)))=""
 .....s $p(^TMP($zn,$j,"getall4",cnt),$c(2),6)=$p(xxBT,$c(1),2)
 ....i $$close^LVBBBP()
 .k ^TMP($zn,$j,"xx")
 k ^TMP($zn,$j,"exist4")
 q 0
 ; get units already assigned to vtsRID
getall2(p0,p1,mrn,p3,p4,p5,p6,p7,vtsRID,extra) n (mrn,vtsRID,extra,PLIST)
 i $p(extra,$c(1),10)="Y" g getall1Continue
 k ^TMP($zn,$j,"getall2"),^TMP($zn,$j,"exist2") s mrn=$g(mrn),vtsRID=$g(vtsRID),extra=$g(extra)
 i '$l(mrn),$l(vtsRID) s mrn=$$mrn^LVBEPVIS($p(vtsRID,"||"))
 ; select units from vtsRID
 i $l(vtsRID) d
 .k PLIST
 .i $$open^LVBVISTE(vtsRID)
 .f  q:$$fetch^LVBVISTE(vtsRID)  d
 ..s str0="" f j=1:1:PLIST s $p(str0,$c(28),j)=PLIST(j)
 ..i '$d(^TMP($zn,$j,"exist2",$p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1)))) d
 ...i '$$select^LVBBBP($p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1))) d
 ....s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ....s ^TMP($zn,$j,"exist2",$p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1)))=""
 ....s cnt=$o(^TMP($zn,$j,"getall2",""),-1)+1
 ....s ^TMP($zn,$j,"getall2",cnt)=$p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1))_$c(2)_str_$c(2)_str0
 .i $$close^LVBVISTE()
 ; select unissued units from Authorized TS
 i '$$select^MVBCFLAB(1),PLIST(26)'="Y" d
 .s epis=$p(vtsRID,"||",1) i $l(epis) d
 ..s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 ...s tscnt="" f  s tscnt=$o(^TEPI(epis,1,ts,tscnt)) q:tscnt=""  d
 ....s newRID=epis_"||"_ts_"||"_tscnt i vtsRID=newRID q
 ....i $$status^LVBVIS1(newRID)'="A" q
 ....k PLIST
 ....i $$open^LVBVISTE(newRID)
 ....f  q:$$fetch^LVBVISTE(newRID)  d
 .....s str0="" f j=1:1:PLIST s $p(str0,$c(28),j)=PLIST(j)
 .....s $p(str0,$c(28),13)=""
 .....i '$d(^TMP($zn,$j,"exist2",$p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1)))) d
 ......i '$$select^LVBBBP($p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1))),PLIST(18)="IN-1" d
 .......s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .......s ^TMP($zn,$j,"exist2",$p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1)))=""
 .......s cnt=$o(^TMP($zn,$j,"getall2",""),-1)+1
 .......s ^TMP($zn,$j,"getall2",cnt)=$p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1))_$c(2)_str_$c(2)_str0
 ....i $$close^LVBVISTE()
 ; search for Autologous units
 i $l(mrn) d
 .s $p(extra,$c(1),5)="A",$p(extra,$c(1),6)="IN-1"
 .k PLIST
 .i $$open^LVBBBP(,,mrn,,,,,,,extra)
 .f  q:$$fetch^LVBBBP(,,mrn,,,,,,,extra)  d
 ..i $l($p(PLIST(12),$c(1))) q
 ..i '$d(^TMP($zn,$j,"exist2",$p(PLIST(1),$c(1)))) d
 ...s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ...s ^TMP($zn,$j,"exist2",$p(PLIST(1),$c(1)))=""
 ...s cnt=$o(^TMP($zn,$j,"getall2",""),-1)+1
 ...s ^TMP($zn,$j,"getall2",cnt)=$p(PLIST(1),$c(1))_$c(2)_str
 .i $$close^LVBBBP()
 ; search for Reserved units
 i $l(mrn) d
 .s $p(extra,$c(1),5)="R",$p(extra,$c(1),6)="IN-1"
 .k PLIST
 .i $$open^LVBBBP(,,mrn,,,,,,,extra)
 .f  q:$$fetch^LVBBBP(,,mrn,,,,,,,extra)  d
 ..i $l($p(PLIST(12),$c(1))) q
 ..i '$d(^TMP($zn,$j,"exist2",$p(PLIST(1),$c(1)))) d
 ...s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ...s ^TMP($zn,$j,"exist2",$p(PLIST(1),$c(1)))=""
 ...s cnt=$o(^TMP($zn,$j,"getall2",""),-1)+1
 ...s ^TMP($zn,$j,"getall2",cnt)=$p(PLIST(1),$c(1))_$c(2)_str
 .i $$close^LVBBBP()
 s test=$p(vtsRID,"||",2),mrn=$$mrn^LVBEPVIS($p(vtsRID,"||")) i $l(test),$$getFormat("getall2",test,mrn,vtsRID)
getall2Continue 
 k PLIST
 s (sum,j2)="" f j1=1:1 s j2=$o(^TMP($zn,$j,"getall2",j2)) q:j2=""  q:sum+$l(^(j2))>15000  s PLIST(j1)=^(j2),sum=sum+$l(^(j2)) k ^(j2)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j,"getall2")):0,1:100)
 ; type : 1-MRN
 ;        2-Episode
getall3(par,mrn,type) n (par,mrn,type,PLIST) s par=$g(par),mrn=$g(mrn),type=$g(type) k ^TMP($zn,$j)
 s par1=$p(par,"||",1),par2=$p(par,"||",2)
 i $l(par1),$l(par2),type=1 d
 .s (cnt,x1)="" f  s x1=$o(^TBBP(par1,par2,"AL",x1)) q:x1=""  i '$$select^LVBDEB(x1) d
 ..i '$$select^LVBEPVIS(PLIST(4),"Y") d
 ...s cnt=cnt+1,^TMP($zn,$j,1,cnt)=x1_$c(2)_x1_" "_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 i $l(par1),$l(par2),type=2 d
 .s x1="" f  s x1=$o(^TBBP(par1,par2,"AL",x1)) q:x1=""  d
 ..i $l(mrn),mrn'=x1 q
 ..s x2="" f  s x2=$o(^TBBP(par1,par2,"AL",x1,x2)) q:x2=""  d
 ...s ep=$p(x2,"||") i $l(ep) s ^TMP($zn,$j,0,ep)=""
 .s (cnt,ep)="" f  s ep=$o(^TMP($zn,$j,0,ep)) q:ep=""  d
 ..i '$$select^LVBEPVIS(ep,"Y") d
 ...s cnt=cnt+1,^TMP($zn,$j,1,cnt)=ep_$c(2)_ep_" "_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j)
 q 0
dt(hor,time) n (hor,time) s hor=$g(hor),time=$g(time)
 s $p(hor,",",2)=$p(hor,",",2)+(time*3600)
 f  q:$p(hor,",",2)<(24*3600)  s $p(hor,",",1)=$p(hor,",",1)+1,$p(hor,",",2)=$p(hor,",",2)-(24*3600)
 q hor
 ; search for MedTrak units
getall5(mrn) n (mrn,PLIST) s mrn=$g(mrn) k ^TMP($zn,$j)
 i $l(mrn) d
 .i '$$select^MVBCFML(1) d
 ..s MT=PLIST(15) i $l(MT) d
 ...s LT=$zu(5) zn MT
 ...i $l(PLIST(18)) d
 ....k order s order="" s XXXserv=##class(LabLink.LabLinkSoap).%New() 
 ....i XXXserv s result=XXXserv.GetUnits(PLIST(18),mrn,.order)
 ....k XXXserv
 ....s x="" f  s x=$o(order(x)) q:x=""  s ^[LT]TMP($zn,$j,x)=order(x)
 ...i '$l(PLIST(18)) d
 ....s orders=$$currorder^COEOrdItem1(mrn)
 ....f j=1:1:$l(orders,"^") s order=$p(orders,"^",j) i $l(order) d
 .....s prod="" f  s prod=$o(^OEORDi(0,"BBExtCode",order,"R",prod)) q:prod=""  d
 ......s x1="" f  s x1=$o(^OEORDi(0,"BBExtCode",order,"R",prod,x1)) q:x1=""  d
 .......s data=$g(^OEORD(order,"I",x1,1))
 .......s quantity=$p(data,"^",12),date=$p(data,"^",9)
 .......i quantity s cnt=$o(^[LT]TMP($zn,$j,""),-1)+1,^[LT]TMP($zn,$j,cnt)=order_"||"_x1_$c(28)_prod_$c(28)_quantity_$c(28)_date
 ...zn LT
 s x="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  d
 .s data=^(x)
 .s prod=$p(data,$c(28),2) i '$$select^LVBBBBP(prod) s $p(data,$c(28),2)=prod_$c(1)_PLIST(3)
 .s ^TMP($zn,$j,x)=$c(2,2,2)_data
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q $s(PLIST:0,1:100)
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TBBP(%mmmsqld(3),%mmmsqld(4)))
 e  g %0ABdun
 s %mmmsqld(10)=$$%getlock^User.BBPPackDetails.T1(%mmmsqld(1)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ac
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TBBP(%mmmsqld(3),%mmmsqld(4)))
 e  g %0ACdun
 d %delete^User.BBPPackDetails.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.BBPPackDetails.T1(%mmmsqld(1)) g %0Ac
%0ACdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.BBPPackDetails.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ac
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.BBPPackDetails.T1(%mmmsqld(1)) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(xm)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^SS("XM-FIELDS",%mmmsqld(3)))
 e  g %0CBdun
 s %mmmsqld(12)=$g(^SS("XM-FIELDS",%mmmsqld(3)))
 s type=$p(%mmmsqld(12),"^",6)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^SS("XM-FIELDS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^SS("XM-FIELDS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_XM_Fields for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^SS("XM-FIELDS",%mmmsqld(3)))
 e  g %0CCdun
 s %mmmsqld(17)=$g(^SS("XM-FIELDS",%mmmsqld(3)))
 s type=$p(%mmmsqld(17),"^",6)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
]]></Routine>
</Export>
