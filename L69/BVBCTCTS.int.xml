<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTCTS" type="INT" languagemode="0"><![CDATA[
BVBCTCTS ; IG 9/12/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:25 for Cache for Windows
 ;
 ; supported calls: 
 ;
 ; $$select^BVBCTCTS(ROWID)
 ; $$selts^BVBCTCTS(par,ts)
 ; $$open^BVBCTCTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTCTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTCTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTCTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTCTS()
 ; $$insert^BVBCTCTS(par)
 ; $$update^BVBCTCTS(ROWID)
 ; $$delete^BVBCTCTS(ROWID,Comments)
 ; $$getall2^BVBCTCTS(par,type)
 ; $$bbtest^BVBCTCTS(ts,grid)
 ; $$bbtest1^BVBCTCTS(ts)
 ; 
  
  
 ;
 q 
getall2(par,type) n (par,type,PLIST) s par=$g(par),type=$g(type)
 K PLIST,^TMP($zn,$j)
 i $l(type) d %CTCTS1o 
 i '$l(type) d %CTCTS2o 
 f  d  q:SQLCODE 
 .i $l(type) d %0Go 
 .i '$l(type) d %0Ho 
 .i 'SQLCODE,$l(PLIST(3)) s cnt=$o(^TMP($zn,$j,""),-1)+1,^TMP($zn,$j,cnt)=PLIST(1)_$c(2)_$p($g(^TTAB("TS",PLIST(3))),"\",1)_$c(2)_PLIST(3)
 i $l(type) d %CTCTS1c 
 i '$l(type) d %CTCTS2c 
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1) 
 q 0
 ;check if test set exists
chktest(par,ts) n (par,ts) s par=+par
 s found=0,ind=0 f  s ind=$o(^CT("COMP",par,"TS",ind)) q:ind=""  q:found  s s=^(ind) d
 .i $p(s,"^")=ts s found=1
 q found
 ; Insert the data
insert(par) K PLIST(1),PLIST(2) s PLIST(0)=par
 d %0Ko
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) D pre s ROWID=$g(ROWID)
 d %0Lo
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Mo
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTCTS0o
 Q 0
 ;
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) K PLIST
 d %0Oo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %CTCTS0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Qo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
selts(par,ts) K PLIST s par=$g(par),ts=$g(ts)
 d %0Ro
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTS(plist(3))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$c(1)_PLIST(4)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTC(plist(4))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 ;
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTC(plist(5))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 ;
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTC(plist(6))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 ;
 I $G(PLIST(8))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTCT(plist(8))
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(2)
 .K PLIST M PLIST=plist S PLIST(8)=X K plist
 ;
 I $G(PLIST(9))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTCT(plist(9))
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(2)
 .K PLIST M PLIST=plist S PLIST(9)=X K plist
 ;
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTC(plist(11))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 ;
 Q
 ;
bbtest(ts,grid) ;check if test set exist in comparison
 ;with type "Update Unsuitable Pack Register"
 n (ts,grid)
 s grid=$g(grid)
 ;get row of comparison table
 s comp=$$gettype^BVBCTCOM("UUPR") q:comp="" "N"
 ;check if test set exists in comparison table
 s fl=0 f j=1:1:$l(comp,"^") d
 .i grid="Y",$p($g(^CT("COMP",+$p(comp,"^",j))),"^",3)'="Y" q
 .i $$chktest($p(comp,"^",j),ts) s fl=1
 q:'fl "N"
 q "Y"
bbtest1(ts) ;check if test set exist in comparison
 q:ts="" "N"
 i $d(^CT("BBTS",0,"TS",ts)) q "Y"
 q "N"
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0ABs2 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs3 s %val=$p("Screen|ID","|",$l($p("|S|I|","|"_%val_"|"),"|")) q
%0ABs4 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%CTCTS0o s SQLCODE=$s($g(%CTCTS0c):-101,1:0) q:SQLCODE'=0
 s %CTCTS0c=1 k %CTCTS0m
 s %CTCTS0E=$zt,%CTCTS0f=0,%CTCTS0e=0,%CTCTS0L=""
 s %CTCTS0d(2)=$P(par,$C(1))
 s:%CTCTS0d(2)="" %CTCTS0d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTCTS0d(1)=$g(%CTCTS0d(2))
 i %CTCTS0d(1)="" g %0ABdun
 s $P(%CTCTS0d(5),$C(1))=""
%0ABk1 s $P(%CTCTS0d(5),$C(1))=$o(^CT("COMP",%CTCTS0d(1),"TS",$P(%CTCTS0d(5),$C(1))))
 i $P(%CTCTS0d(5),$C(1))="" g %0ABdun
 i 1>$P(%CTCTS0d(5),$C(1)),$P(%CTCTS0d(5),$C(1))=+$P(%CTCTS0d(5),$C(1)) g %0ABk1
 i $P(%CTCTS0d(5),$C(1))'=+$P(%CTCTS0d(5),$C(1)) g %0ABdun
 s %CTCTS0n=$g(^CT("COMP",%CTCTS0d(1),"TS",$P(%CTCTS0d(5),$C(1))))
 s %CTCTS0d(6)=$p(%CTCTS0n,"^",1) s %CTCTS0d(7)=$p(%CTCTS0n,"^",2) s %CTCTS0d(8)=$p(%CTCTS0n,"^",3) s %CTCTS0d(9)=$p(%CTCTS0n,"^",4) s %CTCTS0d(10)=$p(%CTCTS0n,"^",5) s:%CTCTS0d(10)'="" %CTCTS0d(10)=+%CTCTS0d(10) s %CTCTS0d(11)=$p(%CTCTS0n,"^",6) s %CTCTS0d(12)=$p(%CTCTS0n,"^",7) s %CTCTS0d(13)=$p(%CTCTS0n,"^",8)
 s %CTCTS0d(14)=$p(%CTCTS0n,"^",9) s %CTCTS0d(15)=$p(%CTCTS0n,"^",10) s %CTCTS0d(16)=$p(%CTCTS0n,"^",11) s %CTCTS0d(17)=$p(%CTCTS0n,"^",12) s %CTCTS0d(18)=$p(%CTCTS0n,"^",13) s %CTCTS0d(19)=$p(%CTCTS0n,"^",14)
 s %CTCTS0d(4)=(%CTCTS0d(1))_"||"_($P(%CTCTS0d(5),$C(1)))
 s %val=$P(%CTCTS0d(5),$C(1)) d %0ABs1:%val'="" s $P(%CTCTS0d(5),$C(1),2)=%val
 s %val=$P(%CTCTS0d(10),$C(1)) d %0ABs2:%val'="" s $P(%CTCTS0d(10),$C(1),2)=%val
 s %val=$P(%CTCTS0d(13),$C(1)) d %0ABs3:%val'="" s $P(%CTCTS0d(13),$C(1),2)=%val
 s %val=$P(%CTCTS0d(15),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS0d(15),$C(1),2)=%val
 s %val=$P(%CTCTS0d(18),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS0d(18),$C(1),2)=%val
 s %val=$P(%CTCTS0d(19),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS0d(19),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCTS0f=%CTCTS0f+1 s %CTCTS0c=10 q
%CTCTS0f i '$g(%CTCTS0c) s SQLCODE=-102 q
 i %CTCTS0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTCTS0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCTS0c=100 q
%CTCTS0c i '$g(%CTCTS0c) s SQLCODE=-102 q
 k %CTCTS0c,%CTCTS0d,%CTCTS0e,%CTCTS0E,%CTCTS0f,%CTCTS0l,%CTCTS0L,%CTCTS0n,%CTCTS0r,%CTCTS0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCTS0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0BAr1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,135,2,1101,36,"get",%val))
 n found s found=0
 i 'found,$f("|Check Blood Group|Update Antibody Register|Update Unsuitable Pack Register|Standard Result Entry|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("CBG|UAR|UUPR|SRE","|",$l($p("|Check Blood Group|Update Antibody Register|Update Unsuitable Pack Register|Standard Result Entry|","|"_%val_"|"),"|"))
 q  
%CTCTS1o s SQLCODE=$s($g(%CTCTS1c):-101,1:0) q:SQLCODE'=0
 s %CTCTS1c=1 k %CTCTS1m
 s %CTCTS1E=$zt,%CTCTS1f=0,%CTCTS1e=0,%CTCTS1L=""
 s %CTCTS1d(2)=$P(par,$C(1))
 n irn,ifn s irn=135,ifn=1101
 i %CTCTS1d(2)="",$L(par)>1 s %val=$E(par,2,999) d %0BAr1 s %CTCTS1d(2)=%val
 q
%0Bfirst   ;  init
 ; asl MOD# 2
 s %CTCTS1d(21)=""
%0BBk1 s %CTCTS1d(21)=$o(^CT("COMP",%CTCTS1d(21)))
 i %CTCTS1d(21)="" g %0BBdun
 i 1>%CTCTS1d(21),%CTCTS1d(21)=+%CTCTS1d(21) g %0BBk1
 i %CTCTS1d(21)'=+%CTCTS1d(21) g %0BBdun
 s %CTCTS1n=$g(^CT("COMP",%CTCTS1d(21)))
 s %CTCTS1d(1)=$p(%CTCTS1n,"^",2)
 g:'((%CTCTS1d(1))'=(%CTCTS1d(2))) %0BBk1
 ; asl MOD# 3
 s %CTCTS1d(4)=$g(%CTCTS1d(21))
 i %CTCTS1d(4)="" g %0BCdun
 s $P(%CTCTS1d(6),$C(1))=""
%0BCk1 s $P(%CTCTS1d(6),$C(1))=$o(^CT("COMP",%CTCTS1d(4),"TS",$P(%CTCTS1d(6),$C(1))))
 i $P(%CTCTS1d(6),$C(1))="" g %0BCdun
 i 1>$P(%CTCTS1d(6),$C(1)),$P(%CTCTS1d(6),$C(1))=+$P(%CTCTS1d(6),$C(1)) g %0BCk1
 i $P(%CTCTS1d(6),$C(1))'=+$P(%CTCTS1d(6),$C(1)) g %0BCdun
 s %CTCTS1n=$g(^CT("COMP",%CTCTS1d(4),"TS",$P(%CTCTS1d(6),$C(1))))
 s %CTCTS1d(7)=$p(%CTCTS1n,"^",1) s %CTCTS1d(8)=$p(%CTCTS1n,"^",2) s %CTCTS1d(9)=$p(%CTCTS1n,"^",3) s %CTCTS1d(10)=$p(%CTCTS1n,"^",4) s %CTCTS1d(11)=$p(%CTCTS1n,"^",5) s:%CTCTS1d(11)'="" %CTCTS1d(11)=+%CTCTS1d(11) s %CTCTS1d(12)=$p(%CTCTS1n,"^",6) s %CTCTS1d(13)=$p(%CTCTS1n,"^",7) s %CTCTS1d(14)=$p(%CTCTS1n,"^",8)
 s %CTCTS1d(15)=$p(%CTCTS1n,"^",9) s %CTCTS1d(16)=$p(%CTCTS1n,"^",10) s %CTCTS1d(17)=$p(%CTCTS1n,"^",11) s %CTCTS1d(18)=$p(%CTCTS1n,"^",12) s %CTCTS1d(19)=$p(%CTCTS1n,"^",13) s %CTCTS1d(20)=$p(%CTCTS1n,"^",14)
 s %CTCTS1d(5)=(%CTCTS1d(4))_"||"_($P(%CTCTS1d(6),$C(1)))
 s %val=$P(%CTCTS1d(6),$C(1)) d %0ABs1:%val'="" s $P(%CTCTS1d(6),$C(1),2)=%val
 s %val=$P(%CTCTS1d(11),$C(1)) d %0ABs2:%val'="" s $P(%CTCTS1d(11),$C(1),2)=%val
 s %val=$P(%CTCTS1d(14),$C(1)) d %0ABs3:%val'="" s $P(%CTCTS1d(14),$C(1),2)=%val
 s %val=$P(%CTCTS1d(16),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS1d(16),$C(1),2)=%val
 s %val=$P(%CTCTS1d(19),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS1d(19),$C(1),2)=%val
 s %val=$P(%CTCTS1d(20),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS1d(20),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCTS1f=%CTCTS1f+1 s %CTCTS1c=10 q
%CTCTS1f i '$g(%CTCTS1c) s SQLCODE=-102 q
 i %CTCTS1c=100 s SQLCODE=100 q
 s $zt="%0Berr^"_$zn s $ze="" n %val g %0Bfirst:%CTCTS1c=1
 g %0BCk1
%0BCdun 
 g %0BBk1
%0BBdun 
%0BAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCTS1c=100 q
%CTCTS1c i '$g(%CTCTS1c) s SQLCODE=-102 q
 k %CTCTS1c,%CTCTS1d,%CTCTS1e,%CTCTS1E,%CTCTS1f,%CTCTS1l,%CTCTS1L,%CTCTS1n,%CTCTS1r,%CTCTS1R s SQLCODE=0 q
%0Berr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCTS1E),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%CTCTS2o s SQLCODE=$s($g(%CTCTS2c):-101,1:0) q:SQLCODE'=0
 s %CTCTS2c=1 k %CTCTS2m
 s %CTCTS2E=$zt,%CTCTS2f=0,%CTCTS2e=0,%CTCTS2L=""
 s %CTCTS2d(2)=$P(par,$C(1))
 n irn,ifn s irn=135,ifn=1101
 i %CTCTS2d(2)="",$L(par)>1 s %val=$E(par,2,999) d %0BAr1 s %CTCTS2d(2)=%val
 q
%0Dfirst   ;  init
 ; asl MOD# 2
 s %CTCTS2d(21)=""
%0DBk1 s %CTCTS2d(21)=$o(^CT("COMP",%CTCTS2d(21)))
 i %CTCTS2d(21)="" g %0DBdun
 i 1>%CTCTS2d(21),%CTCTS2d(21)=+%CTCTS2d(21) g %0DBk1
 i %CTCTS2d(21)'=+%CTCTS2d(21) g %0DBdun
 s %CTCTS2n=$g(^CT("COMP",%CTCTS2d(21)))
 s %CTCTS2d(1)=$p(%CTCTS2n,"^",2)
 g:'((%CTCTS2d(1))=(%CTCTS2d(2))) %0DBk1
 ; asl MOD# 3
 s %CTCTS2d(4)=$g(%CTCTS2d(21))
 i %CTCTS2d(4)="" g %0DCdun
 s $P(%CTCTS2d(6),$C(1))=""
%0DCk1 s $P(%CTCTS2d(6),$C(1))=$o(^CT("COMP",%CTCTS2d(4),"TS",$P(%CTCTS2d(6),$C(1))))
 i $P(%CTCTS2d(6),$C(1))="" g %0DCdun
 i 1>$P(%CTCTS2d(6),$C(1)),$P(%CTCTS2d(6),$C(1))=+$P(%CTCTS2d(6),$C(1)) g %0DCk1
 i $P(%CTCTS2d(6),$C(1))'=+$P(%CTCTS2d(6),$C(1)) g %0DCdun
 s %CTCTS2n=$g(^CT("COMP",%CTCTS2d(4),"TS",$P(%CTCTS2d(6),$C(1))))
 s %CTCTS2d(7)=$p(%CTCTS2n,"^",1) s %CTCTS2d(8)=$p(%CTCTS2n,"^",2) s %CTCTS2d(9)=$p(%CTCTS2n,"^",3) s %CTCTS2d(10)=$p(%CTCTS2n,"^",4) s %CTCTS2d(11)=$p(%CTCTS2n,"^",5) s:%CTCTS2d(11)'="" %CTCTS2d(11)=+%CTCTS2d(11) s %CTCTS2d(12)=$p(%CTCTS2n,"^",6) s %CTCTS2d(13)=$p(%CTCTS2n,"^",7) s %CTCTS2d(14)=$p(%CTCTS2n,"^",8)
 s %CTCTS2d(15)=$p(%CTCTS2n,"^",9) s %CTCTS2d(16)=$p(%CTCTS2n,"^",10) s %CTCTS2d(17)=$p(%CTCTS2n,"^",11) s %CTCTS2d(18)=$p(%CTCTS2n,"^",12) s %CTCTS2d(19)=$p(%CTCTS2n,"^",13) s %CTCTS2d(20)=$p(%CTCTS2n,"^",14)
 s %CTCTS2d(5)=(%CTCTS2d(4))_"||"_($P(%CTCTS2d(6),$C(1)))
 s %val=$P(%CTCTS2d(6),$C(1)) d %0ABs1:%val'="" s $P(%CTCTS2d(6),$C(1),2)=%val
 s %val=$P(%CTCTS2d(11),$C(1)) d %0ABs2:%val'="" s $P(%CTCTS2d(11),$C(1),2)=%val
 s %val=$P(%CTCTS2d(14),$C(1)) d %0ABs3:%val'="" s $P(%CTCTS2d(14),$C(1),2)=%val
 s %val=$P(%CTCTS2d(16),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS2d(16),$C(1),2)=%val
 s %val=$P(%CTCTS2d(19),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS2d(19),$C(1),2)=%val
 s %val=$P(%CTCTS2d(20),$C(1)) d %0ABs4:%val'="" s $P(%CTCTS2d(20),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCTS2f=%CTCTS2f+1 s %CTCTS2c=10 q
%CTCTS2f i '$g(%CTCTS2c) s SQLCODE=-102 q
 i %CTCTS2c=100 s SQLCODE=100 q
 s $zt="%0Derr^"_$zn s $ze="" n %val g %0Dfirst:%CTCTS2c=1
 g %0DCk1
%0DCdun 
 g %0DBk1
%0DBdun 
%0DAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCTS2c=100 q
%CTCTS2c i '$g(%CTCTS2c) s SQLCODE=-102 q
 k %CTCTS2c,%CTCTS2d,%CTCTS2e,%CTCTS2E,%CTCTS2f,%CTCTS2l,%CTCTS2L,%CTCTS2n,%CTCTS2r,%CTCTS2R s SQLCODE=0 q
%0Derr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCTS2E),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Go d %CTCTS1f q:SQLCODE'=0
 s PLIST(0)=%CTCTS1d(4),PLIST(1)=%CTCTS1d(5),PLIST(2)=%CTCTS1d(6),PLIST(3)=%CTCTS1d(7),PLIST(4)=%CTCTS1d(8),PLIST(5)=%CTCTS1d(9),PLIST(6)=%CTCTS1d(10),PLIST(7)=%CTCTS1d(11),PLIST(8)=%CTCTS1d(12),PLIST(9)=%CTCTS1d(13),PLIST(10)=%CTCTS1d(14),PLIST(11)=%CTCTS1d(15),PLIST(12)=%CTCTS1d(16),PLIST(13)=%CTCTS1d(17),PLIST(14)=%CTCTS1d(18),PLIST(15)=%CTCTS1d(19),PLIST(16)=%CTCTS1d(20)
 q
%0Ho d %CTCTS2f q:SQLCODE'=0
 s PLIST(0)=%CTCTS2d(4),PLIST(1)=%CTCTS2d(5),PLIST(2)=%CTCTS2d(6),PLIST(3)=%CTCTS2d(7),PLIST(4)=%CTCTS2d(8),PLIST(5)=%CTCTS2d(9),PLIST(6)=%CTCTS2d(10),PLIST(7)=%CTCTS2d(11),PLIST(8)=%CTCTS2d(12),PLIST(9)=%CTCTS2d(13),PLIST(10)=%CTCTS2d(14),PLIST(11)=%CTCTS2d(15),PLIST(12)=%CTCTS2d(16),PLIST(13)=%CTCTS2d(17),PLIST(14)=%CTCTS2d(18),PLIST(15)=%CTCTS2d(19),PLIST(16)=%CTCTS2d(20)
 q
%0Ko n %insert,icol,ir
 f icol=0:1:16 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1371("1")
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Lerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^CT("COMP",%mmmsqld(4),"TS",$P(%mmmsqld(5),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(5),$C(1)),$P(%mmmsqld(5),$C(1))=+$P(%mmmsqld(5),$C(1))
 i  g %0LBdun
 k %data,%edit
 f icol=0:1:16 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1371(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0LBdun 
%0LAdun 
 q
%0Lerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0LAdun
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Merr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),$P(%mmmsqld(4),$C(1))=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",$P(%mmmsqld(4),$C(1))'="",$d(^CT("COMP",%mmmsqld(3),"TS",$P(%mmmsqld(4),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(4),$C(1)),$P(%mmmsqld(4),$C(1))=+$P(%mmmsqld(4),$C(1))
 i  g %0MBdun
 d delete^mt1371(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0MBdun 
%0MAdun 
 q
%0Merr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0MAdun
%0Oo d %CTCTS0f q:SQLCODE'=0
 s PLIST(0)=%CTCTS0d(1),PLIST(1)=%CTCTS0d(4),PLIST(2)=%CTCTS0d(5),PLIST(3)=%CTCTS0d(6),PLIST(4)=%CTCTS0d(7),PLIST(5)=%CTCTS0d(8),PLIST(6)=%CTCTS0d(9),PLIST(7)=%CTCTS0d(10),PLIST(8)=%CTCTS0d(11),PLIST(9)=%CTCTS0d(12),PLIST(10)=%CTCTS0d(13),PLIST(11)=%CTCTS0d(14),PLIST(12)=%CTCTS0d(15),PLIST(13)=%CTCTS0d(16),PLIST(14)=%CTCTS0d(17),PLIST(15)=%CTCTS0d(18),PLIST(16)=%CTCTS0d(19)
 q
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Qerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(21)=$p($g(%mmmsqld(3)),"||",1,1),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(21)'="",$P(PLIST(2),$C(1))'="",$d(^CT("COMP",%mmmsqld(21),"TS",$P(PLIST(2),$C(1))))
 i '$t
 e  i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1))
 i  g %0QBdun
 s %mmmsqln=$g(^CT("COMP",%mmmsqld(21),"TS",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1) s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s:PLIST(7)'="" PLIST(7)=+PLIST(7) s PLIST(8)=$p(%mmmsqln,"^",6) s PLIST(9)=$p(%mmmsqln,"^",7) s PLIST(10)=$p(%mmmsqln,"^",8) s PLIST(11)=$p(%mmmsqln,"^",9)
 s PLIST(12)=$p(%mmmsqln,"^",10) s PLIST(13)=$p(%mmmsqln,"^",11) s PLIST(14)=$p(%mmmsqln,"^",12) s PLIST(15)=$p(%mmmsqln,"^",13) s PLIST(16)=$p(%mmmsqln,"^",14)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs3:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(12),$C(1)) d %0ABs4:%val'="" s $P(PLIST(12),$C(1),2)=%val
 s %val=$P(PLIST(15),$C(1)) d %0ABs4:%val'="" s $P(PLIST(15),$C(1),2)=%val
 s %val=$P(PLIST(16),$C(1)) d %0ABs4:%val'="" s $P(PLIST(16),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Qc
%0QBdun 
%0QAdun 
%0Qc q
%0Qerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0QAdun
%0Ro n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Rerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(par,$C(1)),%mmmsqld(5)=$P(ts,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(par,2,999)
 s:%mmmsqld(5)="" %mmmsqld(5)=$E(ts,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(0)=$g(%mmmsqld(3))
 i PLIST(0)="" g %0RBdun
 s $P(PLIST(2),$C(1))=""
%0RBk1 s $P(PLIST(2),$C(1))=$o(^CT("COMP",PLIST(0),"TS",$P(PLIST(2),$C(1))))
 i $P(PLIST(2),$C(1))="" g %0RBdun
 i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1)) g %0RBk1
 i $P(PLIST(2),$C(1))'=+$P(PLIST(2),$C(1)) g %0RBdun
 s %mmmsqln=$g(^CT("COMP",PLIST(0),"TS",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 g:'((PLIST(3))=(%mmmsqld(5))) %0RBk1
 s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s:PLIST(7)'="" PLIST(7)=+PLIST(7) s PLIST(8)=$p(%mmmsqln,"^",6) s PLIST(9)=$p(%mmmsqln,"^",7) s PLIST(10)=$p(%mmmsqln,"^",8) s PLIST(11)=$p(%mmmsqln,"^",9) s PLIST(12)=$p(%mmmsqln,"^",10)
 s PLIST(13)=$p(%mmmsqln,"^",11) s PLIST(14)=$p(%mmmsqln,"^",12) s PLIST(15)=$p(%mmmsqln,"^",13) s PLIST(16)=$p(%mmmsqln,"^",14)
 s PLIST(1)=(PLIST(0))_"||"_($P(PLIST(2),$C(1)))
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs3:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(12),$C(1)) d %0ABs4:%val'="" s $P(PLIST(12),$C(1),2)=%val
 s %val=$P(PLIST(15),$C(1)) d %0ABs4:%val'="" s $P(PLIST(15),$C(1),2)=%val
 s %val=$P(PLIST(16),$C(1)) d %0ABs4:%val'="" s $P(PLIST(16),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Rc
 g %0RBk1
%0RBdun 
%0RAdun 
%0Rc q
%0Rerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0RAdun
]]></Routine>
</Export>
