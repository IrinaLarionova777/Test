<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1801" type="INT" languagemode="0"><![CDATA[
mt1801  ; Compiled April 20, 2007 16:16:05 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1801(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0A^mt1801
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1801(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(0))'="",$g(%data(2))'="" d
 . s %data(1)=$g(%data(0))_"||"_$g(%data(2))
 . d insertnw^mt1801(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1801 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:12 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1801(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:12 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1801(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1801 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TMIF($p(%ROWID,"||",1,1),1,$p(%ROWID,"||",2,2)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TMIF($p(%ROWID,"||",1,1),1,$p(%ROWID,"||",2,2))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0,subs(1357)=$p(%data(1),"||",1,1)
 i $g(tupkill) k ^TMIF(subs(1357),1,%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TMIF(subs(1357),1,%data(2))) s $p(tempn,"\",1)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TMIF(subs(1357),1,%data(2))) s $p(tempn,"\",2)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TMIF(subs(1357),1,%data(2))) s $p(tempn,"\",3)=$p($g(%data(5)),$c(1))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TMIF(subs(1357),1,%data(2))) s $p(tempn,"\",4)=$p($g(%data(6)),$c(1))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TMIF(subs(1357),1,%data(2))) s $p(tempn,"\",6)=$p($g(%data(11)),$c(1))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TMIF(subs(1357),1,%data(2))) s $p(tempn,"\",5)=$p($g(%data(7)),$c(1))
 s:$d(tempn)#2 ^TMIF(subs(1357),1,%data(2))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$g(subs(1357)) i sn(1)'="" s sn(2)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(2)'="" s sn(3)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(3)'=""
 i  i $d(^TMIF(sn(1),9,sn(2),sn(3))) s:'$g(tupkill) node=0,tempn=^TMIF(sn(1),9,sn(2),sn(3)) k ^TMIF(sn(1),9,sn(2),sn(3))
 i '$g(tupkill) s sn(1)=$g(subs(1357)) i sn(1)'="" s sn(2)=$g(%data(3)) i sn(2)'="" s sn(3)=$g(%data(2)) i sn(3)'=""
 e  g map1dun
 s ^TMIF(sn(1),9,sn(2),sn(3))=tempn
map1dun q
 d %0Bo
 d %0Co
 d %0Do
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d %0Bo^mt1801  s %didit=1
 d trigB0A i $d(%skip) g trgdoneA
  d %0Co^mt1801  s %didit=1
  d %0Do^mt1801  s %didit=1
trgdoneA q  ;  trigger done
trigB0A s %didit=1
 i $$delete^LVBCOM02($g(%edit(3))_"||"_$g(%edit(0)),180,"7")
 q
 d %0Eo
getold(%dataold) g %0Eo
code8 ; compute code of field MIRH_Status
 s %data(8)=""
 s %data(8)=$$status^LVBMIRH0($g(%data(1)))
 q
comp8 ; entry point to do computed field MIRH_Status
 n %oldval q:(","_$g(trak)_",")[(",8,")
 s %oldval=$g(%data(8)) d code8 s %ok=1 i $g(%data(8))=%oldval q
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","MIRH_Status","",%msg) q
 i $g(%data(8))="",%oldval="" q
 q
code9 ; compute code of field MIRH_TSet_List
 s %data(9)=""
 s %data(9)=$$tsetlst^LVBMIRH0($g(%data(1)))
 q
comp9 ; entry point to do computed field MIRH_TSet_List
 n %oldval q:(","_$g(trak)_",")[(",9,")
 s %oldval=$g(%data(9)) d code9 s %ok=1 i $g(%data(9))=%oldval q
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","MIRH_TSet_List","",%msg) q
 i $g(%data(9))="",%oldval="" q
 q
code10 ; compute code of field MIRH_StatusPlot
 s $p(%data(10),$c(1))=""
 s $p(%data(10),$c(1))="N"
 i $d(^TMIF($p($g(%data(1)),"||",1),1,$p($g(%data(1)),"||",2),"PLOT")) s $p(%data(10),$c(1))="Y"
 q
comp10 ; entry point to do computed field MIRH_StatusPlot
 n %oldval q:(","_$g(trak)_",")[(",10,")
 s %oldval=$g(%data(10)) d code10 s %ok=1 i $g(%data(10))=%oldval q
 s %val=%data(10)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde10 s $p(%data(10),$c(1))=%val
 s %val=$p($g(%data(10)),$c(1)) d:%val'="" fdv10^mt1801 s:'%ok %data(10)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","MIRH_StatusPlot","",%msg) q
 s %val=$p(%data(10),$c(1))
 d:%val'="" fdi10 s $p(%data(10),$c(1),2)=%val
 i $g(%data(10))="",%oldval="" q
 q
code12 ; compute code of field MIRH_StatusPathogen
 s $p(%data(12),$c(1))=""
 s $p(%data(12),$c(1))=$$CT012^at180($g(%data(0)),$g(%data(2)))
 q
comp12 ; entry point to do computed field MIRH_StatusPathogen
 n %oldval q:(","_$g(trak)_",")[(",12,")
 s %oldval=$g(%data(12)) d code12 s %ok=1 i $g(%data(12))=%oldval q
 s %val=%data(12)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde12 s $p(%data(12),$c(1))=%val
 s %val=$p($g(%data(12)),$c(1)) d:%val'="" fdv12^mt1801 s:'%ok %data(12)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","MIRH_StatusPathogen","",%msg) q
 s %val=$p(%data(12),$c(1))
 d:%val'="" fdi12 s $p(%data(12),$c(1),2)=%val
 i $g(%data(12))="",%oldval="" q
 s:'$d(%edit(12)) %edit(12)=%oldval k:$g(%data(12))=$g(%edit(12)) %edit(12)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"MIF_MachineResultHeader"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="MIF_MachineResultHeader Row ID" d %mdiag(%oper,-106,"Fld Int","Req","MIRH_RowId","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(0)) s %ok="MIF_MachineParameters Parent Reference" d %mdiag(%oper,-106,"Fld Int","Req","MIRH_ParRef","",%ok) s %msg=%ok,%ok=0
 q
inf0 ; get value for field MIRH_ParRef
 i $c(1)'[$g(%data(0)),$p(%data(0),$c(1))="" s %val=$p(%data(0),$c(1),2) g ine0
 i $c(1)'[$g(%data(0)) s %val=$p(%data(0),$c(1)) g ini0
 i $c(1)'[$g(%insert(0)),$p(%insert(0),$c(1))="" s %val=$p(%insert(0),$c(1),2) g ine0
 i $c(1)'[$g(%insert(0)) s %val=$p(%insert(0),$c(1)) g ini0
 s %val=$g(da178)
ine0 ; external to internal conversion code for field MIRH_ParRef
ini0 ; internal validation code and uniqueness, also int-ext
 d fdv0^mt1801 q:'%ok
 s %data(0)=%val
 s:$c(1)[%data(0) %ok=0 s:%ok %edit(0)=""
 q
inf2 ; get value for field MIRH_SampleNumber
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field MIRH_SampleNumber
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table MIF_MachineResultHeader
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf0 i '%ok g:'iform rowiderr s rowerr=1
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(0),$c(1))_"||"_$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1801 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini0 g:'%ok rowiderr
 s %val=$p(%data(1),"||",2) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,0,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt1801
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,0,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp8^mt1801 d comp9^mt1801 d comp10^mt1801 d comp12^mt1801
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde10 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde12 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,0,"",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde5 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde6 ; external to internal conversion code
 s %ok=1 s %val=$$timeint^%qarzdt(%val,2) s:%val<0 %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(0)),$p(%data(0),$c(1))="",$p(%data(0),$c(1),2)'="" s %val=$p(%data(0),$c(1),2) s %data(0)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=5 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIRH_DateOfRun","",$g(%msg))
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=6 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIRH_TimeOfRun","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIRH_DateOfTransmission","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) s %data(8)=%val
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=10 d etiok
 . s %msg="" d fde10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIRH_StatusPlot","",$g(%msg))
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=11 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIRH_TimeOfTransmission","",$g(%msg))
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=12 d etiok
 . s %msg="" d fde12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIRH_StatusPathogen","",$g(%msg))
 q
fdv0 ; DO validation and additional validation code
 n nval s nval=%val d %0Io
  i SQLCODE'=0 s %ok=0
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv10 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv12 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q:'%ok
 i $l($p(%val,".",2))>0 s %ok=0,%msg=$$setmsg^%qarzst("DTNNDEC")
 q
fdv5 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv6 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTTimIn")
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Ho q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="MIRH_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","MIRH_RowId","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_RowId","",$g(%msg))
 i $d(%edit(0)),%data(0)'=%edit(0) s %icol=0 s %val=$p(%data(0),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv0 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_ParRef","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_DateOfRun","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_TimeOfRun","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_DateOfTransmission","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_StatusPlot","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_TimeOfTransmission","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","MIRH_StatusPathogen","",$g(%msg))
 q
fdi10 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi12 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0))
 q
fdi5 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4)
 q
fdi6 s %val=$$timeext^%qarzdt(%val,2)
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(0)),%data(0)[$c(1) s %data(0)=$s($p(%data(0),$c(1))'="":$p(%data(0),$c(1)),1:$p(%data(0),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),%data(4)[$c(1) s %data(4)=$s($p(%data(4),$c(1))'="":$p(%data(4),$c(1)),1:$p(%data(4),$c(1),2))
 i $d(%data(5)),$p(%data(5),$c(1))'="" s %val=$p(%data(5),$c(1)) d fdi5 s $p(%data(5),$c(1),2)=%val
 i $d(%data(6)),$p(%data(6),$c(1))'="" s %val=$p(%data(6),$c(1)) d fdi6 s $p(%data(6),$c(1),2)=%val
 i $d(%data(7)),$p(%data(7),$c(1))'="" s %val=$p(%data(7),$c(1)) d fdi5 s $p(%data(7),$c(1),2)=%val
 i $d(%data(8)),%data(8)[$c(1) s %data(8)=$s($p(%data(8),$c(1))'="":$p(%data(8),$c(1)),1:$p(%data(8),$c(1),2))
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),$p(%data(10),$c(1))'="" s %val=$p(%data(10),$c(1)) d fdi10 s $p(%data(10),$c(1),2)=%val
 i $d(%data(11)),$p(%data(11),$c(1))'="" s %val=$p(%data(11),$c(1)) d fdi6 s $p(%data(11),$c(1),2)=%val
 i $d(%data(12)),$p(%data(12),$c(1))'="" s %val=$p(%data(12),$c(1)) d fdi12 s $p(%data(12),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt1801 q:'%ok
 d comp8^mt1801 d comp9^mt1801 d comp10^mt1801 d comp12^mt1801
 q
 g ^mt1802
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(6)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(7)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(6)="" g %0BBdun
 i %mmmsqld(7)="" g %0BBdun
 s %mmmsqld(4)=""
%0BBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(6),1,%mmmsqld(7),"DATA",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0BBdun
 s %mmmsqld(5)=""
%0BBk2 s %mmmsqld(5)=$o(^TMIF(%mmmsqld(6),1,%mmmsqld(7),"DATA",%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0BBk1
 i %mmmsqld(5)'=+%mmmsqld(5) g %0BBk1
 s %mmmsqld(3)=(%mmmsqld(6))_"||"_(%mmmsqld(7))_"||"_(%mmmsqld(4))_"||"_(%mmmsqld(5))
 d delete^mt1861(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0BBk2
%0BBdun 
%0BAdun 
 q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0CBdun
 i %mmmsqld(6)="" g %0CBdun
 s %mmmsqld(4)=""
%0CBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(5),1,%mmmsqld(6),"BUG",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0CBdun
 i %mmmsqld(4)'=+%mmmsqld(4) g %0CBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt4481(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0CBk1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(6)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(7)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(6)="" g %0DBdun
 i %mmmsqld(7)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(6),1,%mmmsqld(7),"PLOT",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 s %mmmsqld(5)=""
%0DBk2 s %mmmsqld(5)=$o(^TMIF(%mmmsqld(6),1,%mmmsqld(7),"PLOT",%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0DBk1
 i %mmmsqld(5)'=+%mmmsqld(5) g %0DBk1
 s %mmmsqld(3)=(%mmmsqld(6))_"||"_(%mmmsqld(7))_"||"_(%mmmsqld(4))_"||"_(%mmmsqld(5))
 d delete^mt3491(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk2
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0EBr3 s %dataold(8)=$$status^LVBMIRH0($g(%dataold(1))) q
%0EBr4 s %dataold(9)=$$tsetlst^LVBMIRH0($g(%dataold(1))) q
%0EBr5 s $P(%dataold(10),$C(1))="N"
 i $d(^TMIF($p($g(%dataold(1)),"||",1),1,$p($g(%dataold(1)),"||",2),"PLOT")) s $P(%dataold(10),$C(1))="Y"
 q
%0EBr7 s $P(%dataold(12),$C(1))=$$CT012^at180($g(%dataold(0)),$g(%dataold(2)))
 s:$c(1)'[$P($g(%dataold(12)),$C(1)) $P(%dataold(12),$C(1))=+$j($P($g(%dataold(12)),$C(1)),"",0)  ; Proper Decimal Places
 q
%0EBs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0EBs2 s %val=$$timeext^%qarzdt(%val,2) q
%0EBs6 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0EBs8 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %mmmsqld(17)=$p($g(%dataold(1)),"||",1,1),%dataold(2)=$p($g(%dataold(1)),"||",2,2)
 i %mmmsqld(17)'="",%dataold(2)'="",$d(^TMIF(%mmmsqld(17),1,%dataold(2)))
 e  g %0EBdun
 s %mmmsqln=$g(^TMIF(%mmmsqld(17),1,%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(6)=$p(%mmmsqln,"\",4) s %dataold(7)=$p(%mmmsqln,"\",5) s %dataold(11)=$p(%mmmsqln,"\",6)
 s %dataold(0)=$p(%dataold(1),"||",1,1)
 
 s %val=$P(%dataold(5),$C(1)) d %0EBs1:%val'="" s $P(%dataold(5),$C(1),2)=%val
 s %val=$P(%dataold(6),$C(1)) d %0EBs2:%val'="" s $P(%dataold(6),$C(1),2)=%val
 s %val=$P(%dataold(7),$C(1)) d %0EBs1:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(11),$C(1)) d %0EBs2:%val'="" s $P(%dataold(11),$C(1),2)=%val
 d %0EBr3
 d %0EBr4
 d %0EBr5
 s %val=$P(%dataold(10),$C(1)) d %0EBs6:%val'="" s $P(%dataold(10),$C(1),2)=%val
 d %0EBr7
 s %val=$P(%dataold(12),$C(1)) d %0EBs8:%val'="" s $P(%dataold(12),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TMIF(%mmmsqld(4)))
 e  g %0IBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TMIF(%mmmsqld(5),1,%mmmsqld(6)))
 e  g %0HBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
