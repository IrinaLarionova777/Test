<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIF143ESP02" type="INT" languagemode="0"><![CDATA[
MIF143ESP02(mi) ; MIC 22/8/02 ; Shimadzu CL-7300 (Bi-Directional loadlist)  ; Compiled June 16, 2003 11:24:44 for Cache for Windows
 s mi=$g(mi) i '$l(mi) q
 i $$select^LVBMIMP(mi) q
 f j=1:1:PLIST s @("par"_j)=PLIST(j)
 s enq=$c(5),ack=$c(6),nak=$c(21),stx=$c(2),etx=$c(3),eot=$c(4)
 s start=0,hh=$p($h,",",2),dy=+$h-1
 s (sample,epis,surname,result,date,time,QC)=""
 s counter=0,EOT=1
 i $$start^MIF000() q
 f  d Main i $$stop^MIF000() q
 c par4
 q
Main ;
 r *x:10
 i x'=-1 d  q
 . d trace^MIF000(mi,$s(x=$a(ack):"ACK",x=$a(nak):"NACK",x=$a(eot):"EOT",x=$a(enq):"ENQ",1:$c(x)),"H<--M")
 . i $c(x)=enq d Rcv
 . i $c(x)=eot s EOT=1
 s ^TMIF(mi,35,"TR")=$c(1,255,1) 
 i " L "[(" "_par9_" ") d loadlist^MIF000(mi,"")
 d URG(mi)
 q
Rcv ;
 D ACK
 s record=$$read^MIF000(stx,etx)
 d trace^MIF000(mi,record,"H<--M")
 i $l(record)=0,counter<3 d NACK s counter=counter+1 q
 i $l(record)=0,counter=3 d EOT s counter=0 q
 i "RPDdBWwI"'[$e(record,1) d NACK s counter=counter+1 q
 D ACK
 s counter=0
 r *x:5
 i x=-1 q
 s x=$c(x)
 d trace^MIF000(mi,$s(x=ack:"ACK",x=nak:"NACK",x=eot:"EOT",x=enq:"ENQ",1:x),"H<--M")
k s type=$e(record,1)
 i type="D" d RcvRes q
 i type="d" d RcvResCont q
 i type="B" d Header q
 q
Header ; receive Header
 s (sample,epis,surname,result,date,time,QC)=""
 S epis=$tr($e(record,14,29)," ")
 ;S QC=$e(record,30)
 s reqnum=$e(record,10,13)
 q
RcvRes ; Receive Results
 s (sample,epis,surname,result,date,time,QC)=""
 s date=$zdh($e($zd($h,8),1,4)_$tr($e(record,2,3)," ","0")_$tr($e(record,4,5)," ","0"),8)
 s time=($e(record,6,7)*3600)+($e(record,8,9)*60)
 S epis=$tr($e(record,14,29)," ")
 s reqnum=$e(record,10,13)
 S test=$E(record,34,35)
 s record=$e(record,36,$l(record))
 s test=$l(record)\16
RcvRes2 ; Get Detail of tests
 f i=1:1:test d
 . s tc=$tr($e(record,((i-1)*16)+1,((i-1)*16)+3)," ")
 . s flag=$tr($e(record,((i-1)*16)+4,((i-1)*16)+7)," ")
 . s res=$tr($e(record,((i-1)*16)+8,((i-1)*16)+16)," ")
 . i res["*" S res="RME",flag="RME"               ;Filtering scrap from the machine
 . i res'="RME" s res=+res
 . s result=result_tc_$c(par10)_res_$c(par11) ; _$c(par10)_flag
 i $l(epis),$l(result) d file^MIF000(mi,sample,epis,surname,result,date,time,QC)
 i $d(^TEPI(epis)) d
 .s tsgrp="" f  s tsgrp=$o(^TMIF(mi,"TG",tsgrp)) q:tsgrp=""  d
 ..s ts="" f  s ts=$o(^TMIF(mi,"TG",tsgrp,"TS",ts)) q:ts=""  i $e(ts)="U" d
 ...s tscnt=$$getnats^LVBVIS4(epis,ts) i tscnt d
 ....k PLIST
 ....s ti="" f j=1:1 s ti=$o(^TMIF(mi,1,epis_" ","DATA",ti)) q:ti=""  d
 .....s x=$o(^TMIF(mi,1,epis_" ","DATA",ti,""),-1)  
 .....s PLIST(j)=ti_"\"_$p($g(^TMIF(mi,1,epis_" ","DATA",ti,x)),"\",1)
 ....s PLIST=$o(PLIST(""),-1)
 ....i $$machsave^LVBVIS4(par2,epis,"E","",ts,tsgrp,"G")
 q
RcvResCont      ; receive Results continuation
 s result=""
 i $e(record,2,5)'=$g(reqnum) d  q
 . d trace^MIF000(mi,"Received Results Continuation out of sequence","H<--M")
 s test=$tr($e(record,6,7)," ","")
 s record=$e(record,8,$l(record))
 g RcvRes2
SAVE(mi)        ; create loadlist records
 n (mi)
 s soh=$c(1),cr=$c(13),stx=$c(2),etx=$c(3),ack=$c(6),nak=$c(15),eot=$c(4),enq=$c(5)
 s epis=^TMP("MIF000",$j,"LL","EPISODE"),epis=$p(epis,$c(1),1)
 s sample=^TMP("MIF000",$j,"LL","SAMPLE")
 s tray=^TMP("MIF000",$j,"LL","TRAY")
 i tray'=^TMIF(mi,35,"TR") s ^TMIF(mi,35,"TR")=tray,^TMIF(mi,35,"CO")=0
 k test s tc="" f  s tc=$o(^TMP("MIF000",$j,"LL","TEST",tc)) q:tc=""  s test(tc)=""
 s ^TMIF(mi,15,epis)=+$h
 s pos=(^TMIF(mi,35,"CO")+tray),^TMIF(mi,36,"COUNT")=pos,pos=$j(pos,4),^TMIF(mi,35,"CO")=^TMIF(mi,35,"CO")+1
SAVE2 ;
 s reg="W"_pos_epis_$e("                ",1,16-$l(epis))_"000000"
 s test=0,tc="" f  s tc=$o(test(tc)) q:tc=""  s test=test+1,reg=reg_$j(tc,3)
 s $e(reg,26,27)=$j(test,2)
 d SEND(reg)     
 q 0      
SEND(msg)       ; send string to instrument
 n (msg,mi)
 s enq=$c(5),ack=$c(6),nak=$c(21),stx=$c(2),etx=$c(3),eot=$c(4)
 s counter=0
 s rep=3
S2 d ENQ
 r *z:10 i z=-1 d trace^MIF000(mi,"TimeOut","H<--M") d EOT g S2
 s z=$c(z)
 d trace^MIF000(mi,$s(z=ack:"ACK",z=nak:"NACK",z=eot:"EOT",z=enq:"ENQ",1:z),"H<--M")
 i z=enq d Rcv g S2
 i z=eot h 5 g S2
 i z=nak h 1 g S2
 i z'=ack h 5 g S2
 q:'rep
 s rep=rep-1
 w stx,msg,etx,*-3
 d trace^MIF000(mi,msg,"H-->M")
 r *z:10 i z=-1 d trace^MIF000(mi,"TimeOut","H<--M") d EOT g S2
 s z=$c(z)
 d trace^MIF000(mi,$s(z=ack:"ACK",z=nak:"NACK",z=eot:"EOT",z=enq:"ENQ",1:z),"H<--M")
 i z=enq d Rcv g S2
 i z=eot h 5 g S2
 i z=nak h 1 g S2
 i z'=ack h 5 g S2
 d EOT
 q
ACK ; send 'ack' to instrument
 w ack,*-3
 d trace^MIF000(mi,"ACK","H-->M")
 q
NACK ; send 'nack' to instrument
 w nak,*-3
 d trace^MIF000(mi,"NACK","H-->M")
 q
EOT ; send 'eot' to instrument
 w eot,*-3
 d trace^MIF000(mi,"EOT","H-->M")
 q
ENQ ; send 'enq' to instrument
 w enq,*-3
 d trace^MIF000(mi,"ENQ","H-->M")
 q
URG(mi) ;
 n (mi)
 s soh=$c(1),cr=$c(13),stx=$c(2),etx=$c(3),ack=$c(6),nak=$c(15),eot=$c(4),enq=$c(5)
 s ts="U"
 f  s ts=$o(^TMIF(mi,0,ts)) q:$e(ts,1)'="U"  d
 . s epis=""
 . f  s epis=$o(^TTRQ(ts,epis)) q:epis=""  d
 .. d SENDURG(epis)
 q
SENDURG(epis)   ;
 n ts
 k ^TMP("MIF-SCAN",$j,mi,epis)
 s ts="U" f  s ts=$o(^TMIF(mi,0,ts)) q:$e(ts)'="U"  d
 . i $d(^TMIF(mi,15,epis,ts)) q
 . d scanone^MIF000(mi,epis,,ts)
 . i $d(^TMP("MIF-SINGLE",$j,mi,epis)) d
 .. s ^TMIF(mi,15,epis,ts)=+$h,^TMIF(mi,16,epis,ts)=$h m ^TMIF(mi,16,epis,ts,"DATA")=^TMP("MIF-SINGLE",$j,mi,epis)
 . m ^TMP("MIF-SCAN",$j,mi,epis)=^TMP("MIF-SINGLE",$j,mi,epis)
 . k ^TMP("MIF-SINGLE",$j)
 q:'$d(^TMP("MIF-SCAN",$j,mi,epis))
 m test=^TMP("MIF-SCAN",$j,mi,epis)
 s (^TMIF(mi,35,"COUNT"),pos)=($G(^TMIF(mi,35,"COUNT"))#218)+550
 s pos=$j(pos,4)
 g SAVE2
NEXTTRAY(tray)  ;
 n (tray)
 q tray+$p(^TMIF("SHIM"),"\",19)-1#549+1
]]></Routine>
</Export>
