<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt5001" type="INT" languagemode="0"><![CDATA[
mt5001  ; Compiled May 14, 2007 13:28:19 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt5001(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0B^mt5001
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt5001(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(2))'="",$g(%data(3))'="" d
 . s %data(1)=$g(%data(2))_"||"_$g(%data(3))
 . d insertnw^mt5001(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile^mt5002(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt5001 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:47 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt5001(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:47 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile^mt5002(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt5003(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt5001 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0A^mt5001
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TBBP($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TBBP($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TBBP(%edit(2),%edit(3))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",1)=$p($g(%data(7)),$c(1))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",5)=$g(%data(9))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",4)=$g(%data(8))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",6)=$p($g(%data(4)),$c(1))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",7)=$p($g(%data(13)),$c(1))
 i $d(%edit(14)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",13)=$p($g(%data(14)),$c(1))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",8)=$g(%data(11))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",9)=$g(%data(10))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",10)=$g(%data(6))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",11)=$g(%data(12))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",2)=$g(%data(17))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",12)=$g(%data(5))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",14)=$p($g(%data(15)),$c(1))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",15)=$g(%data(16))
 i $d(%edit(18)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",3)=$p($g(%data(18)),$c(1))
 i $d(%edit(19)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",16)=$g(%data(19))
 i $d(%edit(20)) s x=$g(%data(20)),^TBBP(%data(2),%data(3),"REM",0)=x d  
 . s irep=%edit(20) s:irep<x irep=x f irep=1:1:irep s:irep'>x ^(irep)=$g(%data(20,irep)) k:irep>x ^(irep)
 i $d(%edit(21)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",17)=$g(%data(21))
 i $d(%edit(22)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",18)=$p($g(%data(22)),$c(1))
 i $d(%edit(23)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",19)=$g(%data(23))
 i $d(%edit(24)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",20)=$p($g(%data(24)),$c(1))
 i $d(%edit(25)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",21)=$g(%data(25))
 i $d(%edit(26)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",22)=$p($g(%data(26)),$c(1))
 i $d(%edit(27)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",23)=$p($g(%data(27)),$c(1))
 i $d(%edit(28)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",24)=$g(%data(28))
 i $d(%edit(29)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",25)=$p($g(%data(29)),$c(1))
 i $d(%edit(30)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",26)=$p($g(%data(30)),$c(1))
 i $d(%edit(31)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",27)=$g(%data(31))
 i $d(%edit(32)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",28)=$g(%data(32))
 i $d(%edit(33)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",29)=$g(%data(33))
 i $d(%edit(34)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",30)=$g(%data(34))
 i $d(%edit(35)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",31)=$g(%data(35))
 i $d(%edit(36)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",32)=$g(%data(36))
 i $d(%edit(37)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",33)=$p($g(%data(37)),$c(1))
 i $d(%edit(38)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",34)=$p($g(%data(38)),$c(1))
 i $d(%edit(39)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",35)=$p($g(%data(39)),$c(1))
 i $d(%edit(40)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",36)=$g(%data(40))
 i $d(%edit(41)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",37)=$g(%data(41))
 i $d(%edit(42)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",38)=$g(%data(42))
 i $d(%edit(43)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",39)=$g(%data(43))
 i $d(%edit(44)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",40)=$g(%data(44))
 i $d(%edit(45)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",41)=$p($g(%data(45)),$c(1))
 i $d(%edit(46)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",42)=$p($g(%data(46)),$c(1))
 i $d(%edit(47)) s:'($d(tempn)#2) tempn=$g(^TBBP(%data(2),%data(3))) s $p(tempn,"\",43)=$g(%data(47))
 s:$d(tempn)#2 ^TBBP(%data(2),%data(3))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(6)):%edit(6),1:$g(%data(6))) i sn(1)'="" s sn(2)=$s($d(%edit(18)):$p(%edit(18),$c(1),1),1:$p($g(%data(18)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(3)'="" s sn(4)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(4)'=""
 i  i $d(^TBBPi("DEBTOR",sn(1),sn(2),sn(3),sn(4))) s:'$g(tupkill) node=0,tempn=^TBBPi("DEBTOR",sn(1),sn(2),sn(3),sn(4)) k ^TBBPi("DEBTOR",sn(1),sn(2),sn(3),sn(4))
 i '$g(tupkill) s sn(1)=$g(%data(6)) i sn(1)'="" s sn(2)=$p($g(%data(18)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(2)) i sn(3)'="" s sn(4)=$g(%data(3)) i sn(4)'=""
 e  g map1dun
 s ^TBBPi("DEBTOR",sn(1),sn(2),sn(3),sn(4))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(11)):%edit(11),1:$g(%data(11))) i sn(1)'="" s sn(2)=$s($d(%edit(18)):$p(%edit(18),$c(1),1),1:$p($g(%data(18)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(3)'="" s sn(4)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(4)'=""
 i  i $d(^TBBPi("LOCATION",sn(1),sn(2),sn(3),sn(4))) s:'$g(tupkill) node=0,tempn=^TBBPi("LOCATION",sn(1),sn(2),sn(3),sn(4)) k ^TBBPi("LOCATION",sn(1),sn(2),sn(3),sn(4))
 i '$g(tupkill) s sn(1)=$g(%data(11)) i sn(1)'="" s sn(2)=$p($g(%data(18)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(2)) i sn(3)'="" s sn(4)=$g(%data(3)) i sn(4)'=""
 e  g map2dun
 s ^TBBPi("LOCATION",sn(1),sn(2),sn(3),sn(4))=tempn
map2dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(10)):%edit(10),1:$g(%data(10))) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'="" s sn(3)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(3)'=""
 i  i $d(^TBBPi("PARENT",sn(1),sn(2),sn(3))) s:'$g(tupkill) node=0,tempn=^TBBPi("PARENT",sn(1),sn(2),sn(3)) k ^TBBPi("PARENT",sn(1),sn(2),sn(3))
 i '$g(tupkill) s sn(1)=$g(%data(10)) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'="" s sn(3)=$g(%data(3)) i sn(3)'=""
 e  g map3dun
 s ^TBBPi("PARENT",sn(1),sn(2),sn(3))=tempn
map3dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(17)):%edit(17),1:$g(%data(17))) i sn(1)'="" s sn(2)=$s($d(%edit(18)):$p(%edit(18),$c(1),1),1:$p($g(%data(18)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(3)'="" s sn(4)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(4)'=""
 i  i $d(^TBBPi("STATUS",sn(1),sn(2),sn(3),sn(4))) s:'$g(tupkill) node=0,tempn=^TBBPi("STATUS",sn(1),sn(2),sn(3),sn(4)) k ^TBBPi("STATUS",sn(1),sn(2),sn(3),sn(4))
 i '$g(tupkill) s sn(1)=$g(%data(17)) i sn(1)'="" s sn(2)=$p($g(%data(18)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(2)) i sn(3)'="" s sn(4)=$g(%data(3)) i sn(4)'=""
 e  g map4dun
 s ^TBBPi("STATUS",sn(1),sn(2),sn(3),sn(4))=tempn
map4dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(18)):$p(%edit(18),$c(1),1),1:$p($g(%data(18)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'="" s sn(3)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(3)'=""
 i  i $d(^TBBPi("STOCK",sn(1),sn(2),sn(3))) s:'$g(tupkill) node=0,tempn=^TBBPi("STOCK",sn(1),sn(2),sn(3)) k ^TBBPi("STOCK",sn(1),sn(2),sn(3))
 i '$g(tupkill) s sn(1)=$p($g(%data(18)),$c(1),1) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'="" s sn(3)=$g(%data(3)) i sn(3)'=""
 e  g map5dun
 s ^TBBPi("STOCK",sn(1),sn(2),sn(3))=tempn
map5dun q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$checkBB^LVBCOM02($g(%data(1)),500)
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(6)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(7)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(6)="" g %0CBdun
 i %mmmsqld(7)="" g %0CBdun
 s %mmmsqld(4)=""
%0CBk1 s %mmmsqld(4)=$o(^TBBP(%mmmsqld(6),%mmmsqld(7),"AL",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0CBdun
 s %mmmsqld(5)=""
%0CBk2 s %mmmsqld(5)=$o(^TBBP(%mmmsqld(6),%mmmsqld(7),"AL",%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0CBk1
 s %mmmsqln=$g(^TBBP(%mmmsqld(6),%mmmsqld(7),"AL",%mmmsqld(4),%mmmsqld(5)))
 s %mmmsqld(15)=$p(%mmmsqln,"\",1) s:%mmmsqld(15)'="" %mmmsqld(15)=+%mmmsqld(15)
 s %mmmsqld(3)=(%mmmsqld(6))_"||"_(%mmmsqld(7))_"||"_($P(%mmmsqld(15),$C(1)))
 d delete^mt5041(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0CBk2
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0DBdun
 i %mmmsqld(6)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^TBBP(%mmmsqld(5),%mmmsqld(6),"TAG",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt5371(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(7)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(8)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(7)="" g %0EBdun
 i %mmmsqld(8)="" g %0EBdun
 s %mmmsqld(4)=""
%0EBk1 s %mmmsqld(4)=$o(^TBBP(%mmmsqld(7),%mmmsqld(8),"XM",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0EBdun
 s %mmmsqld(5)=""
%0EBk2 s %mmmsqld(5)=$o(^TBBP(%mmmsqld(7),%mmmsqld(8),"XM",%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0EBk1
 s %mmmsqld(6)=""
%0EBk3 s %mmmsqld(6)=$o(^TBBP(%mmmsqld(7),%mmmsqld(8),"XM",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 i %mmmsqld(6)="" g %0EBk2
 i %mmmsqld(6)'=+%mmmsqld(6) g %0EBk2
 s %mmmsqld(3)=(%mmmsqld(7))_"||"_(%mmmsqld(8))_"||"_(%mmmsqld(4))_"||"_(%mmmsqld(5))_"||"_(%mmmsqld(6))
 d delete^mt5641(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0EBk3
%0EBdun 
%0EAdun 
 q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0FBdun
 i %mmmsqld(6)="" g %0FBdun
 s %mmmsqld(4)=""
%0FBk1 s %mmmsqld(4)=$o(^TBBP(%mmmsqld(5),%mmmsqld(6),"BC",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0FBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt5911(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0FBk1
%0FBdun 
%0FAdun 
 q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0GBdun
 i %mmmsqld(6)="" g %0GBdun
 s %mmmsqld(4)=""
%0GBk1 s %mmmsqld(4)=$o(^TBBP(%mmmsqld(5),%mmmsqld(6),"AI",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0GBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt5931(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0GBk1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0HBdun
 i %mmmsqld(6)="" g %0HBdun
 s %mmmsqld(4)=""
%0HBk1 s %mmmsqld(4)=$o(^TBBP(%mmmsqld(5),%mmmsqld(6),"History",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0HBdun
 i %mmmsqld(4)'=+%mmmsqld(4) g %0HBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt5961(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0HBk1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0IBdun
 i %mmmsqld(6)="" g %0IBdun
 s %mmmsqld(4)=""
%0IBk1 s %mmmsqld(4)=$o(^TBBP(%mmmsqld(5),%mmmsqld(6),"ANT",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0IBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt6741(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0IBk1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d %0Co^mt5001  s %didit=1
  d %0Do^mt5001  s %didit=1
  d %0Eo^mt5001  s %didit=1
  d %0Fo^mt5001  s %didit=1
  d %0Go^mt5001  s %didit=1
  d %0Ho^mt5001  s %didit=1
  d %0Io^mt5001  s %didit=1
trgdoneB q  ;  trigger done
%0JBr10 s %dataold(11)=$$CT011^at500($g(%dataold(1))) q  ;  Code for update (get old values) of table: BBP_PackDetails
%0JBr11 s %dataold(12)=$$CT012^at500($g(%dataold(1))) q
%0JBr12 s %dataold(17)=$$CT017^at500($g(%dataold(1))) q
%0JBr13 s $P(%dataold(18),$C(1))=$$CT018^at500($g(%dataold(1))) q
%0JBr7 s %dataold(6)=$$CT006^at500($g(%dataold(1))) q
%0JBr8 s $P(%dataold(7),$C(1))=$$CT007^at500($g(%dataold(1))) q
%0JBs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0JBs14 s %val=$p("In Stock Available|In Stock NotAvailable|Out of Stock","|",$l($p("|IN-1|IN-0|OUT|","|"_%val_"|"),"|")) q
%0JBs2 s %val=$$timeext^%qarzdt(%val,2) q
%0JBs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0JBs4 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0JBs5 n v s v=%val
 s %val=$p("Emergency Use Only|Direct/Biohazardous|Direct/Eligible for Crossover|Not Specified|Autologous/Eligible for Crossover||~","|",$l($p("|1|2|3|4|5|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Autologous Use Only|Autologous/Biohazardous|Restricted Use/Autologous collection|Restricted Use/Biohazardous|Restricted Use/Discard||~","|",$l($p("|6|7|Ma|Mb|Md|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Restricted Use/Quarantine|Restricted Use/Not for transfusion|Restricted Use/For fractionation use only|Restricted Use/For research use only","|",$l($p("|Mq|Mx|Mf|Mr|","|"_v_"|"),"|")) q
%0JBs6 n v s v=%val
 s %val=$p("Not Specified|Volunteer homologous donor|Volunteer research donor|Volunteer source donor|Volunteer therapeutic collection||~","|",$l($p("|0|V|R|S|T|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Paid homologous collection|Paid research collection|Paid source collection|Autologous collection, eligible for crossover||~","|",$l($p("|P|r|s|A|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("For autologous use only|For autologous use only, biohazardous|Volunteer directed donation, eligible for crossover|Paid directed collection, eligible for crossover||~","|",$l($p("|1|X|D|d|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("For directed donor use only|For directed donor use only, limited exposure|For directed donor use only, medical exception","|",$l($p("|2|L|E|","|"_v_"|"),"|")) q
%0JBs9 s %val=$p("Autologous|Reserved|Not Allocated","|",$l($p("|A|R|N|","|"_%val_"|"),"|")) q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %dataold(2)=$p($g(%dataold(1)),"||",1,1),%dataold(3)=$p($g(%dataold(1)),"||",2,2)
 i %dataold(2)'="",%dataold(3)'="",$d(^TBBP(%dataold(2),%dataold(3)))
 e  g %0JBdun
 s %mmmsqln=$g(^TBBP(%dataold(2),%dataold(3)))
 s %dataold(4)=$p(%mmmsqln,"\",6) s %dataold(5)=$p(%mmmsqln,"\",12) s %dataold(8)=$p(%mmmsqln,"\",4) s %dataold(9)=$p(%mmmsqln,"\",5) s %dataold(10)=$p(%mmmsqln,"\",9) s %dataold(13)=$p(%mmmsqln,"\",7) s %dataold(14)=$p(%mmmsqln,"\",13) s %dataold(15)=$p(%mmmsqln,"\",14) s %dataold(16)=$p(%mmmsqln,"\",15)
 s %dataold(19)=$p(%mmmsqln,"\",16) s %dataold(21)=$p(%mmmsqln,"\",17) s %dataold(22)=$p(%mmmsqln,"\",18) s %dataold(23)=$p(%mmmsqln,"\",19) s %dataold(24)=$p(%mmmsqln,"\",20) s %dataold(25)=$p(%mmmsqln,"\",21) s %dataold(26)=$p(%mmmsqln,"\",22) s %dataold(27)=$p(%mmmsqln,"\",23) s %dataold(28)=$p(%mmmsqln,"\",24)
 s %dataold(29)=$p(%mmmsqln,"\",25) s:%dataold(29)'="" %dataold(29)=+%dataold(29) s %dataold(30)=$p(%mmmsqln,"\",26) s %dataold(31)=$p(%mmmsqln,"\",27) s %dataold(32)=$p(%mmmsqln,"\",28) s %dataold(33)=$p(%mmmsqln,"\",29) s %dataold(34)=$p(%mmmsqln,"\",30) s %dataold(35)=$p(%mmmsqln,"\",31) s %dataold(36)=$p(%mmmsqln,"\",32)
 s %dataold(37)=$p(%mmmsqln,"\",33) s %dataold(38)=$p(%mmmsqln,"\",34) s %dataold(39)=$p(%mmmsqln,"\",35) s %dataold(40)=$p(%mmmsqln,"\",36) s %dataold(41)=$p(%mmmsqln,"\",37) s %dataold(42)=$p(%mmmsqln,"\",38) s %dataold(43)=$p(%mmmsqln,"\",39) s %dataold(44)=$p(%mmmsqln,"\",40) s %dataold(45)=$p(%mmmsqln,"\",41)
 s %dataold(46)=$p(%mmmsqln,"\",42) s %dataold(47)=$p(%mmmsqln,"\",43)
 k %dataold(20) s %dataold(20)=$g(^TBBP(%dataold(2),%dataold(3),"REM",0)) s:'%dataold(20) %dataold(20)="" f %irep=1:1:%dataold(20) s %dataold(20,%irep)=$g(^(%irep))
 
 s %val=$P(%dataold(4),$C(1)) d %0JBs1:%val'="" s $P(%dataold(4),$C(1),2)=%val
 s %val=$P(%dataold(13),$C(1)) d %0JBs1:%val'="" s $P(%dataold(13),$C(1),2)=%val
 s %val=$P(%dataold(14),$C(1)) d %0JBs1:%val'="" s $P(%dataold(14),$C(1),2)=%val
 s %val=$P(%dataold(15),$C(1)) d %0JBs2:%val'="" s $P(%dataold(15),$C(1),2)=%val
 s %val=$P(%dataold(22),$C(1)) d %0JBs1:%val'="" s $P(%dataold(22),$C(1),2)=%val
 s %val=$P(%dataold(24),$C(1)) d %0JBs3:%val'="" s $P(%dataold(24),$C(1),2)=%val
 s %val=$P(%dataold(26),$C(1)) d %0JBs3:%val'="" s $P(%dataold(26),$C(1),2)=%val
 s %val=$P(%dataold(27),$C(1)) d %0JBs2:%val'="" s $P(%dataold(27),$C(1),2)=%val
 s %val=$P(%dataold(29),$C(1)) d %0JBs4:%val'="" s $P(%dataold(29),$C(1),2)=%val
 s %val=$P(%dataold(30),$C(1)) d %0JBs5:%val'="" s $P(%dataold(30),$C(1),2)=%val
 s %val=$P(%dataold(37),$C(1)) d %0JBs3:%val'="" s $P(%dataold(37),$C(1),2)=%val
 s %val=$P(%dataold(38),$C(1)) d %0JBs2:%val'="" s $P(%dataold(38),$C(1),2)=%val
 s %val=$P(%dataold(39),$C(1)) d %0JBs6:%val'="" s $P(%dataold(39),$C(1),2)=%val
 s %val=$P(%dataold(45),$C(1)) d %0JBs1:%val'="" s $P(%dataold(45),$C(1),2)=%val
 s %val=$P(%dataold(46),$C(1)) d %0JBs2:%val'="" s $P(%dataold(46),$C(1),2)=%val
 d %0JBr7
 d %0JBr8
 s %val=$P(%dataold(7),$C(1)) d %0JBs9:%val'="" s $P(%dataold(7),$C(1),2)=%val
 d %0JBr10
 d %0JBr11
 d %0JBr12
 d %0JBr13
 s %val=$P(%dataold(18),$C(1)) d %0JBs14:%val'="" s $P(%dataold(18),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
getold(%dataold) g %0Jo
code17 ; compute code of field BBP_do_Status_DR
 s %data(17)=""
 s %data(17)=$$CT017^at500($g(%data(1)))
 q
comp17 ; entry point to do computed field BBP_do_Status_DR
 n %oldval q:(","_$g(trak)_",")[(",17,")
 s %oldval=$g(%data(17)) d code17 s %ok=1 i $g(%data(17))=%oldval q
 s %val=$p($g(%data(17)),$c(1)) d:%val'="" fdv17^mt5002 s:'%ok %data(17)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BBP_do_Status_DR","",%msg) q
 i $g(%data(17))="",%oldval="" q
 s:'$d(%edit(17)) %edit(17)=%oldval k:$g(%data(17))=$g(%edit(17)) %edit(17)
 q
code7 ; compute code of field BBP_do_StatusReserve
 s $p(%data(7),$c(1))=""
 s $p(%data(7),$c(1))=$$CT007^at500($g(%data(1)))
 q
comp7 ; entry point to do computed field BBP_do_StatusReserve
 n %oldval q:(","_$g(trak)_",")[(",7,")
 s %oldval=$g(%data(7)) d code7 s %ok=1 i $g(%data(7))=%oldval q
 s %val=%data(7)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde7^mt5002 s $p(%data(7),$c(1))=%val
 s %val=$p($g(%data(7)),$c(1)) d:%val'="" fdv7^mt5002 s:'%ok %data(7)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BBP_do_StatusReserve","",%msg) q
 s %val=$p(%data(7),$c(1))
 d:%val'="" fdi7^mt5002 s $p(%data(7),$c(1),2)=%val
 i $g(%data(7))="",%oldval="" q
 s:'$d(%edit(7)) %edit(7)=%oldval k:$g(%data(7))=$g(%edit(7)) %edit(7)
 q
code11 ; compute code of field BBP_do_Location_DR
 s %data(11)=""
 s %data(11)=$$CT011^at500($g(%data(1)))
 q
comp11 ; entry point to do computed field BBP_do_Location_DR
 n %oldval q:(","_$g(trak)_",")[(",11,")
 s %oldval=$g(%data(11)) d code11 s %ok=1 i $g(%data(11))=%oldval q
 s %val=$p($g(%data(11)),$c(1)) d:%val'="" fdv11^mt5002 s:'%ok %data(11)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BBP_do_Location_DR","",%msg) q
 i $g(%data(11))="",%oldval="" q
 s:'$d(%edit(11)) %edit(11)=%oldval k:$g(%data(11))=$g(%edit(11)) %edit(11)
 q
code6 ; compute code of field BBP_do_PatientDebtor_DR
 s %data(6)=""
 s %data(6)=$$CT006^at500($g(%data(1)))
 q
comp6 ; entry point to do computed field BBP_do_PatientDebtor_DR
 n %oldval q:(","_$g(trak)_",")[(",6,")
 s %oldval=$g(%data(6)) d code6 s %ok=1 i $g(%data(6))=%oldval q
 s %val=$p($g(%data(6)),$c(1)) d:%val'="" fdv6^mt5002 s:'%ok %data(6)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BBP_do_PatientDebtor_DR","",%msg) q
 i $g(%data(6))="",%oldval="" q
 s:'$d(%edit(6)) %edit(6)=%oldval k:$g(%data(6))=$g(%edit(6)) %edit(6)
 q
code12 ; compute code of field BBP_do_VisitTS_DR
 s %data(12)=""
 s %data(12)=$$CT012^at500($g(%data(1)))
 q
comp12 ; entry point to do computed field BBP_do_VisitTS_DR
 n %oldval q:(","_$g(trak)_",")[(",12,")
 s %oldval=$g(%data(12)) d code12 s %ok=1 i $g(%data(12))=%oldval q
 s %val=$p($g(%data(12)),$c(1)) d:%val'="" fdv12^mt5002 s:'%ok %data(12)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BBP_do_VisitTS_DR","",%msg) q
 i $g(%data(12))="",%oldval="" q
 s:'$d(%edit(12)) %edit(12)=%oldval k:$g(%data(12))=$g(%edit(12)) %edit(12)
 q
code18 ; compute code of field BBP_do_StatusStock
 s $p(%data(18),$c(1))=""
 s $p(%data(18),$c(1))=$$CT018^at500($g(%data(1)))
 q
comp18 ; entry point to do computed field BBP_do_StatusStock
 n %oldval q:(","_$g(trak)_",")[(",18,")
 s %oldval=$g(%data(18)) d code18 s %ok=1 i $g(%data(18))=%oldval q
 s %val=%data(18)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde18^mt5002 s $p(%data(18),$c(1))=%val
 s %val=$p($g(%data(18)),$c(1)) d:%val'="" fdv7^mt5002 s:'%ok %data(18)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BBP_do_StatusStock","",%msg) q
 s %val=$p(%data(18),$c(1))
 d:%val'="" fdi18^mt5002 s $p(%data(18),$c(1),2)=%val
 i $g(%data(18))="",%oldval="" q
 s:'$d(%edit(18)) %edit(18)=%oldval k:$g(%data(18))=$g(%edit(18)) %edit(18)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"BBP_PackDetails"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="BBP_PackDetails Row ID" d %mdiag(%oper,-106,"Fld Int","Req","BBP_RowID","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field BBP_PackID
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field BBP_PackID
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
inf3 ; get value for field BBP_SecondIdentifier
 i $c(1)'[$g(%data(3)),$p(%data(3),$c(1))="" s %val=$p(%data(3),$c(1),2) g ine3
 i $c(1)'[$g(%data(3)) s %val=$p(%data(3),$c(1)) g ini3
 i $c(1)'[$g(%insert(3)),$p(%insert(3),$c(1))="" s %val=$p(%insert(3),$c(1),2) g ine3
 i $c(1)'[$g(%insert(3)) s %val=$p(%insert(3),$c(1)) g ini3
 s %ok=0 q
ine3 ; external to internal conversion code for field BBP_SecondIdentifier
ini3 ; internal validation code and uniqueness, also int-ext
 s %data(3)=%val
 s:$c(1)[%data(3) %ok=0 s:%ok %edit(3)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table BBP_PackDetails
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 d inf3 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))_"||"_$p(%data(3),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt5002 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
 s %val=$p(%data(1),"||",2) g:%val="" rowiderr d ini3 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,3,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate^mt5002 g:'%ok rowiderr:'iform
 d intext^mt5002
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,3,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp17^mt5001 d comp7^mt5001 d comp11^mt5001 d comp6^mt5001 d comp12^mt5001 d comp18^mt5001
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 g continue^mt5002
 g ^mt5002
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
