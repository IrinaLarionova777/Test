<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTRCA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTRCA ; IG 30/4/98 ; MVB Control code access for CT_NumericCodedResTransl
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTRCA(ROWID,skip)
 ; $$open^LVBCTRCA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTRCA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTRCA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTRCA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTRCA()
 ; $$save^LVBCTRCA(ROWID)
 ; $$delete^LVBCTRCA(ROWID,Comments)
 ; $$getall^LVBCTRCA(par)
 ;
  ;---&SQL(DECLARE CTRCA CURSOR FOR SELECT * FROM CT_NumericCodedResTransl
   ;---         WHERE CTRCA_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
save(RowID) d pre s PLIST(0)=$p(RowID,"||",1)
 f j=1,2 s @("x"_j)=$p(RowID,"||",j)
 s SQLCODE=100 i $l(x1),$l(x2) d
 . ;---i $d(^TTAB("RC",x1,"LAN",x2)) &SQL(UPDATE CT_NumericCodedResTransl VALUES :PLIST() WHERE CTRCA_RowID=:RowID)
  . ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 .i $d(^TTAB("RC",x1,"LAN",x2)) Do %0Co
 . ;---i '$d(^TTAB("RC",x1,"LAN",x2)) k PLIST(1) &SQL(insert INTO CT_NumericCodedResTransl VALUES :PLIST())
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .i '$d(^TTAB("RC",x1,"LAN",x2)) k PLIST(1) Do %0Eo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_NumericCodedResTransl WHERE CTRCA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTRCA)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTRCA0o
 Q 0
 ;
 ; Fetch the data
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTRCA INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor
close()  ;---&SQL(CLOSE CTRCA) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTRCA0c 
 q 0
 ;
 ; select data by code
select(RowID,skip) s RowID=$g(RowID),skip=$g(skip) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_NumericCodedResTransl WHERE CTRCA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(2),$c(1),2)_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%CTRCA0o s $zt="%CTRCA0E" s SQLCODE=$s($g(%CTRCA0c):-101,1:0) q:SQLCODE'=0  s %CTRCA0d(8)=0 s %CTRCA0d(9)=0,%CTRCA0d(10)=""
 s %CTRCA0d(5)=$g(par)
 s %CTRCA0c=1 q
%CTRCA0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTRCA0c,%CTRCA0d,%CTRCA0E,%CTRCA0l,%CTRCA0n,%CTRCA0R,%CTRCA0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTRCA0d(1)=%CTRCA0d(5)
 i %CTRCA0d(1)="" g %0ABdun
 s %CTRCA0d(3)=""
%0ABk1 s %CTRCA0d(3)=$o(^TTAB("RC",%CTRCA0d(1),"LAN",%CTRCA0d(3)))
 i %CTRCA0d(3)="" g %0ABdun
 s %CTRCA0d(4)=$g(^TTAB("RC",%CTRCA0d(1),"LAN",%CTRCA0d(3)))
 s %CTRCA0d(2)=(%CTRCA0d(1))_"||"_(%CTRCA0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("RC",$p(%CTRCA0d(2),"||",1),"LAN",$p(%CTRCA0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTRCA0d(9)=1,%CTRCA0d(10)=$name(^TTAB("RC",$p(%CTRCA0d(2),"||",1),"LAN",$p(%CTRCA0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_NumericCodedResTransl for RowID value: "_%CTRCA0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTRCA0d(7)=$p(%CTRCA0d(2),"||"),%CTRCA0d(3)=$p(%CTRCA0d(2),"||",2)
 i %CTRCA0d(7)'="",%CTRCA0d(3)'="",$d(^TTAB("RC",%CTRCA0d(7),"LAN",%CTRCA0d(3)))
 e  g %0ACdun
 s %CTRCA0d(4)=$g(^TTAB("RC",%CTRCA0d(7),"LAN",%CTRCA0d(3)))
 s %CTRCA0d(1)=$p(%CTRCA0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTRCA0d(8)=%CTRCA0d(8)+1,%ROWCOUNT=%CTRCA0d(8),%ROWID=%CTRCA0d(2),%CTRCA0c=10 q
%CTRCA0f i '$g(%CTRCA0c) { s SQLCODE=-102 q  } i %CTRCA0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTRCA0d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTRCA0d(8),%CTRCA0c=100 q  } g %0Afirst:%CTRCA0c=1
%0ACdun i $zu(115,2)=1,$g(%CTRCA0d(9))=1 { l -@%CTRCA0d(10) s %CTRCA0d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTRCA0d(8),SQLCODE=100,%CTRCA0c=100 q
%CTRCA0c i '$g(%CTRCA0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTRCA0d(8)),1:0)
 i $zu(115,2)=1,$g(%CTRCA0d(9))=1 { l -@%CTRCA0d(10) } k %CTRCA0c,%CTRCA0d,%CTRCA0E,%CTRCA0l,%CTRCA0n,%CTRCA0R,%CTRCA0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTRCA0c=100 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("RC",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0CBdun
 s %mmmsqld(15)=$$%getlock^User.CTNumericCodedResTransl.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("RC",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0CCdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTNumericCodedResTransl.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTNumericCodedResTransl.T1(%mmmsqld(2)) g %0Cc
%0CCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTNumericCodedResTransl.T1(%mmmsqld(2)) g:SQLCODE<0 %0Cc
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTNumericCodedResTransl.T1(%mmmsqld(2)) g %0Cc
%0Eo n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTNumericCodedResTransl.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("RC",%mmmsqld(3),"LAN",%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(14)=$$%getlock^User.CTNumericCodedResTransl.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("RC",%mmmsqld(3),"LAN",%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.CTNumericCodedResTransl.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTNumericCodedResTransl.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTNumericCodedResTransl.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTNumericCodedResTransl.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTRCA0f q:SQLCODE'=0
 s PLIST(0)=%CTRCA0d(1),PLIST(1)=%CTRCA0d(2),PLIST(2)=%CTRCA0d(3),PLIST(3)=%CTRCA0d(4)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(6)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0LBdun
 s PLIST(3)=$g(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("RC",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("RC",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_NumericCodedResTransl for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0LCdun
 s PLIST(3)=$g(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||")
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
