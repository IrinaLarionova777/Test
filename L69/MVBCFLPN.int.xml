<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBCFLPN" type="INT" languagemode="0" generated="1"><![CDATA[
MVBCFLPN ; ML 3/7/2000 ; MVB Control data access for CF_LabTrakPatName
 ;
 ; supported calls:
 ;
 ; $$insert^MVBCFLPN(par)
 ; $$update^MVBCFLPN(RowID)
 ; $$delete^MVBCFLPN(RowID)
 ; $$select^MVBCFLPN(RowID)
 ; $$open^MVBCFLPN(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBCFLPN(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBCFLPN(parp1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBCFLPN(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBCFLPN()
 ; $$getall^MVBCFLPN(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ;
  ;---&SQL(DECLARE CFLPN CURSOR FOR SELECT * FROM CF_LabtrakPatName WHERE CFLPN_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
 ; insert the data
insert(par) d pre("N") k PLIST(1) s PLIST(0)=par
  ;---&SQL(insert INTO CF_LabTrakPatName VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") k PLIST(1) s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CF_LabTrakPatName VALUES :PLIST() WHERE CFLPN_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID) s ROWID=$g(ROWID)
  ;---&SQL(DELETE FROM CF_LabtrakPatName WHERE CFLPN_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 q SQLCODE
 ; select the data by code
select(ROWID) k PLIST s ROWID=$g(ROWID)
  ;---&sql( SELECT * INTO :PLIST() FROM CF_LabTrakPatName WHERE CFLPN_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Io
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN CFLPN)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CFLPN0o
 q 0
 ; fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k PLIST
  ;---&SQL(FETCH CFLPN INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE CFLPN)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CFLPN0c
 q 0
 ; get all data
getall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(4),$c(1))_$c(28)_$p(PLIST(5),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($ZN,$J)
 q 0
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
%CFLPN0o s $zt="%CFLPN0E" s SQLCODE=$s($g(%CFLPN0c):-101,1:0) q:SQLCODE'=0  s %CFLPN0d(10)=0 s %CFLPN0d(11)=0,%CFLPN0d(12)=""
 s %CFLPN0d(7)=$g(par)
 s %CFLPN0c=1 q
%CFLPN0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CFLPN0c,%CFLPN0d,%CFLPN0E,%CFLPN0l,%CFLPN0n,%CFLPN0R,%CFLPN0Z q
%0Afirst 
 ; asl MOD# 2
 s %CFLPN0d(1)=%CFLPN0d(7)
 i %CFLPN0d(1)="" g %0ABdun
 s %CFLPN0d(3)=""
%0ABk1 s %CFLPN0d(3)=$o(^CF("LAB",%CFLPN0d(1),"PAT-ORDER",%CFLPN0d(3)))
 i %CFLPN0d(3)="" g %0ABdun
 s %CFLPN0d(20)=$g(^CF("LAB",%CFLPN0d(1),"PAT-ORDER",%CFLPN0d(3)))
 s %CFLPN0d(4)=$p(%CFLPN0d(20),"^",1) s %CFLPN0d(5)=$p(%CFLPN0d(20),"^",2) s %CFLPN0d(6)=$p(%CFLPN0d(20),"^",3)
 s %CFLPN0d(2)=(%CFLPN0d(1))_"||"_(%CFLPN0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^CF("LAB",$p(%CFLPN0d(2),"||",1),"PAT-ORDER",$p(%CFLPN0d(2),"||",2))#"S":$zu(115,4) i $t { s %CFLPN0d(11)=1,%CFLPN0d(12)=$name(^CF("LAB",$p(%CFLPN0d(2),"||",1),"PAT-ORDER",$p(%CFLPN0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CF_LabtrakPatName for RowID value: "_%CFLPN0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CFLPN0d(9)=$p(%CFLPN0d(2),"||"),%CFLPN0d(3)=$p(%CFLPN0d(2),"||",2)
 i %CFLPN0d(9)'="",%CFLPN0d(3)'="",$d(^CF("LAB",%CFLPN0d(9),"PAT-ORDER",%CFLPN0d(3)))
 e  g %0ACdun
 s %CFLPN0d(28)=$g(^CF("LAB",%CFLPN0d(9),"PAT-ORDER",%CFLPN0d(3)))
 s %CFLPN0d(4)=$p(%CFLPN0d(28),"^",1) s %CFLPN0d(5)=$p(%CFLPN0d(28),"^",2) s %CFLPN0d(6)=$p(%CFLPN0d(28),"^",3)
 s %CFLPN0d(1)=$p(%CFLPN0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CFLPN0d(10)=%CFLPN0d(10)+1,%ROWCOUNT=%CFLPN0d(10),%ROWID=%CFLPN0d(2),%CFLPN0c=10 q
%CFLPN0f i '$g(%CFLPN0c) { s SQLCODE=-102 q  } i %CFLPN0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CFLPN0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CFLPN0d(10),%CFLPN0c=100 q  } g %0Afirst:%CFLPN0c=1
%0ACdun i $zu(115,2)=1,$g(%CFLPN0d(11))=1 { l -@%CFLPN0d(12) s %CFLPN0d(11)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CFLPN0d(10),SQLCODE=100,%CFLPN0c=100 q
%CFLPN0c i '$g(%CFLPN0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CFLPN0d(10)),1:0)
 i $zu(115,2)=1,$g(%CFLPN0d(11))=1 { l -@%CFLPN0d(12) } k %CFLPN0c,%CFLPN0d,%CFLPN0E,%CFLPN0l,%CFLPN0n,%CFLPN0R,%CFLPN0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CFLPN0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CFLabtrakPatName.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^CF("LAB",%mmmsqld(4),"PAT-ORDER",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(15)=$$%getlock^User.CFLabtrakPatName.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^CF("LAB",%mmmsqld(4),"PAT-ORDER",%mmmsqld(5)))
 e  g %0ECdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CFLabtrakPatName.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CFLabtrakPatName.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CFLabtrakPatName.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CFLabtrakPatName.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^CF("LAB",%mmmsqld(3),"PAT-ORDER",%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(14)=$$%getlock^User.CFLabtrakPatName.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^CF("LAB",%mmmsqld(3),"PAT-ORDER",%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.CFLabtrakPatName.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CFLabtrakPatName.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CFLabtrakPatName.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CFLabtrakPatName.T1(%mmmsqld(1)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(8)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(8)
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^CF("LAB",%mmmsqld(10),"PAT-ORDER",PLIST(2)))
 e  g %0IBdun
 s %mmmsqld(20)=$g(^CF("LAB",%mmmsqld(10),"PAT-ORDER",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"^",1) s PLIST(4)=$p(%mmmsqld(20),"^",2) s PLIST(5)=$p(%mmmsqld(20),"^",3)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0IBuncommitted i $zu(115,2)=1 l +^CF("LAB",$p(PLIST(1),"||",1),"PAT-ORDER",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^CF("LAB",$p(PLIST(1),"||",1),"PAT-ORDER",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CF_LabtrakPatName for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^CF("LAB",%mmmsqld(10),"PAT-ORDER",PLIST(2)))
 e  g %0ICdun
 s %mmmsqld(28)=$g(^CF("LAB",%mmmsqld(10),"PAT-ORDER",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"^",1) s PLIST(4)=$p(%mmmsqld(28),"^",2) s PLIST(5)=$p(%mmmsqld(28),"^",3)
 s PLIST(0)=$p(PLIST(1),"||")
%0IBuncommitted ;
 s SQLCODE=0 g %0Ic
%0ICdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ic
%0Lo d %CFLPN0f q:SQLCODE'=0
 s PLIST(0)=%CFLPN0d(1),PLIST(1)=%CFLPN0d(2),PLIST(2)=%CFLPN0d(3),PLIST(3)=%CFLPN0d(4),PLIST(4)=%CFLPN0d(5),PLIST(5)=%CFLPN0d(6)
 q
]]></Routine>
</Export>
