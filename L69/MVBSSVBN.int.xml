<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSSVBN" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSSVBN ; IG 17/3/99 ; MVB Control data access for Code Tables
 ;
 ; supported calls :
 ;
 ; $$insert^MVBSSVBN()
 ; $$update^MVBSSVBN(ROWID)
 ; $$select^MVBSSVBN(ROWID,skip)
 ; $$selcode^MVBSSVBN(ROWID,skip)
 ; $$open^MVBSSVBN(code,desc,skip)
 ; $$fetch^MVBSSVBN(code,desc,skip)
 ; $$close^MVBSSVBN()
 ; $$getall^MVBSSVBN()
 ; $$delete^MVBSSVBN(ROWID)
 ; $$delcode^MVBSSVBN(code)
 ; $$dellan^MVBSSVBN(ROWID)
 ;
  ;---&SQL(DECLARE SSVBN CURSOR FOR SELECT * FROM SS_VBMessageTranslation
   ;---         WHERE %ALPHAUP(SSVBN_Code) = %ALPHAUP(:code))
   ;--- ** SQL PUBLIC Variables: SQLCODE, code
  ;---&SQL(DECLARE SSVBN1 CURSOR FOR SELECT * FROM SS_VBMessageTranslation
   ;---         WHERE %ALPHAUP(SSVBN_Description) %STARTSWITH %ALPHAUP(:desc))
   ;--- ** SQL PUBLIC Variables: SQLCODE, desc
 ;
select(ROWID,skip) k PLIST s skip=$g(skip)
  ;---&sql(SELECT * INTO :PLIST() FROM SS_VBMessageTranslation WHERE SSVBN_RowId=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 s PLIST=$O(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
selcode(ROWID,skip) k PLIST s skip=$g(skip)
  ;---&sql(SELECT * INTO :PLIST() FROM SS_VBMessageTranslation WHERE SSVBN_Code=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 s PLIST=$O(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
open(code,desc,skip) s code=$g(code),desc=$g(desc),skip=$g(skip)
  ;---i '$l(desc) &SQL(OPEN SSVBN)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i '$l(desc) Do %SSVBN0o
  ;---i $l(desc) &SQL(OPEN SSVBN1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i $l(desc) Do %SSVBN10o
 q 0
 ;
fetch(code,desc,skip) s code=$g(code),desc=$g(desc),skip=$g(skip) k PLIST
  ;---i '$l(desc) &SQL(FETCH SSVBN INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i '$l(desc) Do %0Ko
  ;---i $l(desc) &SQL(FETCH SSVBN1 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i $l(desc) Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE SSVBN)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSVBN0c
  ;---&SQL(CLOSE SSVBN1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSVBN10c
 q 0
 ;
insert() d pre("N") K PLIST(1)
  ;---&sql(INSERT INTO SS_VBMessageTranslation VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Oo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") k PLIST(1)
  ;---&sql(UPDATE SS_VBMessageTranslation VALUES :PLIST() WHERE SSVBN_RowId=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Qo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowId) s RowId=$g(RowId)
  ;---&sql(DELETE FROM SS_VBMessageTranslation WHERE SSVBN_RowId = :RowId)
   ;--- ** SQL PUBLIC Variables: RowId, SQLCODE
 Do %0So
 q SQLCODE
 ;
dellan(RowId) s RowId=$g(RowId)
  ;---&sql(DELETE FROM SS_VBMessageTranslation WHERE SSVBN_Language_DR = :RowId)
   ;--- ** SQL PUBLIC Variables: RowId, SQLCODE
 Do %0Uo
 q SQLCODE
 ;
delcode(code) s code=$g(code)
 s code=$$ALPHAUP^SSUTIL4(code)
 i $l(code) s lan="" f  s lan=$o(^SSLAN("VBM",0,code,lan)) q:lan=""  i $$delete(code_"||"_lan)
 q 0
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4()
 q
getall() N (PLIST) K ^TMP($zn,$j)
 I $$open(,,"Y")
 F cnt=1:1 Q:$$fetch(,,"Y")  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(4),$c(1))_$c(2)_$P(PLIST(3),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
%SSVBN0o s $zt="%SSVBN0E" s SQLCODE=$s($g(%SSVBN0c):-101,1:0) q:SQLCODE'=0  s %SSVBN0d(11)=0 s %SSVBN0d(12)=0,%SSVBN0d(13)=""
 s %SSVBN0d(6)=$g(code)
 s %SSVBN0d(7)=$zu(28,%SSVBN0d(6),6)
 s %SSVBN0c=1 q
%SSVBN0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SSVBN0c,%SSVBN0d,%SSVBN0E,%SSVBN0l,%SSVBN0n,%SSVBN0R,%SSVBN0Z q
%0Afirst 
 ; asl MOD# 2
 s %SSVBN0d(3)=""
%0ABk1 s %SSVBN0d(3)=$o(^SSLAN("VBM",0,%SSVBN0d(3)))
 i %SSVBN0d(3)="" g %0ABdun
 s %SSVBN0d(2)=""
%0ABk2 s %SSVBN0d(2)=$o(^SSLAN("VBM",0,%SSVBN0d(3),%SSVBN0d(2)))
 i %SSVBN0d(2)="" g %0ABk1
 s %SSVBN0d(21)=$g(^SSLAN("VBM",0,%SSVBN0d(3),%SSVBN0d(2)))
 s %SSVBN0d(4)=$p(%SSVBN0d(21),"\",1)
 s %SSVBN0d(1)=(%SSVBN0d(3))_"||"_(%SSVBN0d(2))
 s %SSVBN0d(5)=$zu(28,%SSVBN0d(3),6)
 g:'(%SSVBN0d(5)=%SSVBN0d(7)) %0ABk2
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SSLAN("VBM",0,$p(%SSVBN0d(1),"||",1),$p(%SSVBN0d(1),"||",2))#"S":$zu(115,4) i $t { s %SSVBN0d(12)=1,%SSVBN0d(13)=$name(^SSLAN("VBM",0,$p(%SSVBN0d(1),"||",1),$p(%SSVBN0d(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBMessageTranslation for RowID value: "_%SSVBN0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SSVBN0d(9)=$lb(""_%SSVBN0d(5))
 s %SSVBN0d(3)=$p(%SSVBN0d(1),"||"),%SSVBN0d(2)=$p(%SSVBN0d(1),"||",2)
 i %SSVBN0d(3)'="",%SSVBN0d(2)'="",$d(^SSLAN("VBM",0,%SSVBN0d(3),%SSVBN0d(2)))
 e  g %0ACdun
 s %SSVBN0d(29)=$g(^SSLAN("VBM",0,%SSVBN0d(3),%SSVBN0d(2)))
 s %SSVBN0d(4)=$p(%SSVBN0d(29),"\",1)
 s %SSVBN0d(5)=$zu(28,%SSVBN0d(3),6)
 s %SSVBN0d(10)=$lb(""_%SSVBN0d(5))
 g:%SSVBN0d(9)'=%SSVBN0d(10) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SSVBN0d(11)=%SSVBN0d(11)+1,%ROWCOUNT=%SSVBN0d(11),%ROWID=%SSVBN0d(1),%SSVBN0c=10 q
%SSVBN0f i '$g(%SSVBN0c) { s SQLCODE=-102 q  } i %SSVBN0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SSVBN0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SSVBN0d(11),%SSVBN0c=100 q  } g %0Afirst:%SSVBN0c=1
%0ACdun i $zu(115,2)=1,$g(%SSVBN0d(12))=1 { l -@%SSVBN0d(13) s %SSVBN0d(12)=0 }
 g %0ABk2
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SSVBN0d(11),SQLCODE=100,%SSVBN0c=100 q
%SSVBN0c i '$g(%SSVBN0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SSVBN0d(11)),1:0)
 i $zu(115,2)=1,$g(%SSVBN0d(12))=1 { l -@%SSVBN0d(13) } k %SSVBN0c,%SSVBN0d,%SSVBN0E,%SSVBN0l,%SSVBN0n,%SSVBN0R,%SSVBN0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SSVBN0c=100 q
%SSVBN10o s $zt="%SSVBN10E" s SQLCODE=$s($g(%SSVBN10c):-101,1:0) q:SQLCODE'=0  s %SSVBN10d(9)=0 s %SSVBN10d(10)=0,%SSVBN10d(11)=""
 s %SSVBN10d(6)=$g(desc)
 s %SSVBN10t(1)=$i(^||%sql.temp)
 s %SSVBN10d(7)=$zu(28,%SSVBN10d(6),6)
 s %SSVBN10c=1 q
%SSVBN10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SSVBN10c,%SSVBN10d,%SSVBN10E,%SSVBN10l,%SSVBN10n,%SSVBN10R,%SSVBN10s,%SSVBN10t,%SSVBN10Z q
%0Cfirst 
 k ^||%sql.temp(%SSVBN10t(1),0) s ^||%sql.temp(%SSVBN10t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%SSVBN10t(1),0))
 ; asl MOD# 3
 d %0CBMod
 i $sortend(^||%sql.temp(%SSVBN10t(1),0))
 s %SSVBN10s(1)=""
%0CCk1 s %SSVBN10s(1)=$o(^||%sql.temp(%SSVBN10t(1),0,%SSVBN10s(1)))
 i %SSVBN10s(1)="" g %0CCdun
 s %SSVBN10d(1)=$s(%SSVBN10s(1)=-1E14:"",1:%SSVBN10s(1))
 s %SSVBN10d(3)=$p(%SSVBN10d(1),"||"),%SSVBN10d(2)=$p(%SSVBN10d(1),"||",2)
 i %SSVBN10d(3)'="",%SSVBN10d(2)'="",$d(^SSLAN("VBM",0,%SSVBN10d(3),%SSVBN10d(2)))
 e  g %0CCk1
 s %SSVBN10d(28)=$g(^SSLAN("VBM",0,%SSVBN10d(3),%SSVBN10d(2)))
 s %SSVBN10d(4)=$p(%SSVBN10d(28),"\",1)
 s %SSVBN10d(5)=$zu(28,%SSVBN10d(4),6)
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^SSLAN("VBM",0,$p(%SSVBN10d(1),"||",1),$p(%SSVBN10d(1),"||",2))#"S":$zu(115,4) i $t { s %SSVBN10d(10)=1,%SSVBN10d(11)=$name(^SSLAN("VBM",0,$p(%SSVBN10d(1),"||",1),$p(%SSVBN10d(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBMessageTranslation for RowID value: "_%SSVBN10d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 s %SSVBN10d(3)=$p(%SSVBN10d(1),"||"),%SSVBN10d(2)=$p(%SSVBN10d(1),"||",2)
 i %SSVBN10d(3)'="",%SSVBN10d(2)'="",$d(^SSLAN("VBM",0,%SSVBN10d(3),%SSVBN10d(2)))
 e  g %0CDdun
 s %SSVBN10d(36)=$g(^SSLAN("VBM",0,%SSVBN10d(3),%SSVBN10d(2)))
 s %SSVBN10d(4)=$p(%SSVBN10d(36),"\",1)
 s %SSVBN10d(5)=$zu(28,%SSVBN10d(4),6)
 g:'(($c(0)[%SSVBN10d(7))||(%SSVBN10d(7)=$c(32,0)&&($e(%SSVBN10d(5))=$c(32)))||(%SSVBN10d(7)=$e(%SSVBN10d(5),1,$l(%SSVBN10d(7))))) %0CDdun
 g:'(%SSVBN10d(5)'="") %0CDdun
%0CCuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SSVBN10d(9)=%SSVBN10d(9)+1,%ROWCOUNT=%SSVBN10d(9),%ROWID=%SSVBN10d(1),%SSVBN10c=10 q
%SSVBN10f i '$g(%SSVBN10c) { s SQLCODE=-102 q  } i %SSVBN10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%SSVBN10d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SSVBN10d(9),%SSVBN10c=100 q  } g %0Cfirst:%SSVBN10c=1
%0CDdun i $zu(115,2)=1,$g(%SSVBN10d(10))=1 { l -@%SSVBN10d(11) s %SSVBN10d(10)=0 }
 g %0CCk1
%0CCdun 
%0CAdun 
 s %ROWCOUNT=%SSVBN10d(9),SQLCODE=100,%SSVBN10c=100 q
%SSVBN10c i '$g(%SSVBN10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SSVBN10d(9)),1:0) f %SSVBN10d(12)=1 { i $sortend(^||%sql.temp(%SSVBN10t(%SSVBN10d(12)),0),0) } k ^||%sql.temp(%SSVBN10t(1))
 i $zu(115,2)=1,$g(%SSVBN10d(10))=1 { l -@%SSVBN10d(11) } k %SSVBN10c,%SSVBN10d,%SSVBN10E,%SSVBN10l,%SSVBN10n,%SSVBN10R,%SSVBN10s,%SSVBN10t,%SSVBN10Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SSVBN10c=100
 f %SSVBN10d(12)=1 i $sortend(^||%sql.temp(%SSVBN10t(%SSVBN10d(12)),0),0)
 q
%0CBMod ; asl MOD# 2
 s %SSVBN10d(2)=""
%0CBk1 s %SSVBN10d(2)=$o(^SSLAN("VBM","Descr",%SSVBN10d(2)))
 i %SSVBN10d(2)="" g %0CBdun
 s %SSVBN10d(5)=$s(%SSVBN10d(7)=$c(0):"",%SSVBN10d(7)=$c(32,0):" ",1:%SSVBN10d(7))
 i %SSVBN10d(5)'="",$d(^SSLAN("VBM","Descr",%SSVBN10d(2),%SSVBN10d(5))) g %0CBg2
%0CBk2 s %SSVBN10d(5)=$o(^SSLAN("VBM","Descr",%SSVBN10d(2),%SSVBN10d(5)))
 i %SSVBN10d(5)="" g %0CBk1
%0CBg2 i (%SSVBN10d(7)?1n.n),":"']%SSVBN10d(5) g %0CBk1
 i '(($c(0)[%SSVBN10d(7))||(($c(32,0)[%SSVBN10d(7))&&($e(%SSVBN10d(5))=" "))||(%SSVBN10d(7)=$e(%SSVBN10d(5),1,$l(%SSVBN10d(7))))) g:(%SSVBN10d(7)?1n.n) %0CBk2 g %0CBk1
 i '(%SSVBN10d(5)'="") g %0CBk2
 s %SSVBN10d(3)=""
%0CBk3 s %SSVBN10d(3)=$o(^SSLAN("VBM","Descr",%SSVBN10d(2),%SSVBN10d(5),%SSVBN10d(3)))
 i %SSVBN10d(3)="" g %0CBk2
 s %SSVBN10d(1)=(%SSVBN10d(3))_"||"_(%SSVBN10d(2))
 s %SSVBN10s(1)=$s(%SSVBN10d(1)'="":%SSVBN10d(1),1:-1E14),^||%sql.temp(%SSVBN10t(1),0,%SSVBN10s(1))=""
 g %0CBk3
%0CBdun 
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s PLIST(3)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i PLIST(3)'="",PLIST(2)'="",$d(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 e  g %0EBdun
 s %mmmsqld(17)=$g(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 s PLIST(4)=$p(%mmmsqld(17),"\",1)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^SSLAN("VBM",0,$p(PLIST(1),"||",1),$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^SSLAN("VBM",0,$p(PLIST(1),"||",1),$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBMessageTranslation for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(3)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i PLIST(3)'="",PLIST(2)'="",$d(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 e  g %0ECdun
 s %mmmsqld(25)=$g(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 s PLIST(4)=$p(%mmmsqld(25),"\",1)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(3)=%mmmsqld(6)
 i PLIST(3)="" g %0GBdun
 s PLIST(2)=""
%0GBk1 s PLIST(2)=$o(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 i PLIST(2)="" g %0GBdun
 s %mmmsqld(17)=$g(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 s PLIST(4)=$p(%mmmsqld(17),"\",1)
 s PLIST(1)=(PLIST(3))_"||"_(PLIST(2))
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^SSLAN("VBM",0,$p(PLIST(1),"||",1),$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^SSLAN("VBM",0,$p(PLIST(1),"||",1),$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBMessageTranslation for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(3)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i PLIST(3)'="",PLIST(2)'="",$d(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 e  g %0GCdun
 s %mmmsqld(25)=$g(^SSLAN("VBM",0,PLIST(3),PLIST(2)))
 s PLIST(4)=$p(%mmmsqld(25),"\",1)
%0GBuncommitted ;
 s SQLCODE=0 g %0Gc
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
 g %0GBk1
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
%0Ko d %SSVBN0f q:SQLCODE'=0
 s PLIST(1)=%SSVBN0d(1),PLIST(2)=%SSVBN0d(2),PLIST(3)=%SSVBN0d(3),PLIST(4)=%SSVBN0d(4)
 q
%0Lo d %SSVBN10f q:SQLCODE'=0
 s PLIST(1)=%SSVBN10d(1),PLIST(2)=%SSVBN10d(2),PLIST(3)=%SSVBN10d(3),PLIST(4)=%SSVBN10d(4)
 q
%0Oo n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSVBMessageTranslation.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Oo
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SSLAN("VBM",0,%mmmsqld(4),%mmmsqld(5)))
 e  g %0QBdun
 s %mmmsqld(15)=$$%getlock^User.SSVBMessageTranslation.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Qc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SSLAN("VBM",0,%mmmsqld(4),%mmmsqld(5)))
 e  g %0QCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.SSVBMessageTranslation.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(2)) g %0Qc
%0QCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(2)) g:SQLCODE<0 %0Qc
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(2)) g %0Qc
%0So n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Serr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowId)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SSLAN("VBM",0,%mmmsqld(3),%mmmsqld(4)))
 e  g %0SBdun
 s %mmmsqld(14)=$$%getlock^User.SSVBMessageTranslation.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Sc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SSLAN("VBM",0,%mmmsqld(3),%mmmsqld(4)))
 e  g %0SCdun
 d %delete^User.SSVBMessageTranslation.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(1)) g %0Sc
%0SCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(1)) g:SQLCODE<0 %0Sc
%0SBdun 
%0SAdun 
%0Sc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Serr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(1)) g %0Sc
%0Uo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Uerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowId)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=""
%0UBk1 s %mmmsqld(4)=$o(^SSLAN("VBM",0,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0UBdun
 i %mmmsqld(1)="" g %0UBk1
 i '$d(^SSLAN("VBM",0,%mmmsqld(4),%mmmsqld(1))) g %0UBk1
 s %mmmsqld(3)=(%mmmsqld(4))_"||"_(%mmmsqld(1))
 s %mmmsqld(14)=$$%getlock^User.SSVBMessageTranslation.T1(%mmmsqld(3)) i '%mmmsqld(14) s SQLCODE=-110 g %0Uc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(3),"||"),%mmmsqld(1)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(1)'="",$d(^SSLAN("VBM",0,%mmmsqld(4),%mmmsqld(1)))
 e  g %0UCdun
 d %delete^User.SSVBMessageTranslation.T1(%mmmsqld(3),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(3)) g %0Uc
%0UCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(3)) g:SQLCODE<0 %0Uc
 g %0UBk1
%0UBdun 
%0UAdun 
%0Uc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Uerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.SSVBMessageTranslation.T1(%mmmsqld(3)) g %0Uc
]]></Routine>
</Export>
