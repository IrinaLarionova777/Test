<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTSTC" type="INT" languagemode="0"><![CDATA[
BVBCTSTC ; IG 4/12/98 ; LVB Control data access for CTSTC CT_StandardComments  ; Compiled May 22, 2000 13:23:49 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$insert^BVBCTSTC(par)
 ; $$update^BVBCTSTC(ROWID)
 ; $$select^BVBCTSTC(ROWID)
 ; $$delete^BVBCTSTC(ROWID,Comments)
 ; $$open^BVBCTSTC(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTSTC(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTSTC(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTSTC(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTSTC()
 ; $$getall^BVBCTSTC(par)
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTSTC0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() d %CTSTC0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
insert() d pre K PLIST(1) 
 d %0Fo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ;
update(RowID) d pre s RowID=$g(RowID)
 d %0Go
 i 'SQLCODE d adjust
 q SQLCODE
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
 d %0Ho
 k ^TMP("Comments",$j)
 q SQLCODE
 ; Adjust certain fields
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 f j=3 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("IE",.XX) k PLIST(j) m PLIST(j)=XX
 q
pre f j=3 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("EI",.XX) k PLIST(j) m PLIST(j)=XX
 q
 ;
getall(par) N (par,PLIST) K ^TMP($zn,$j) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 ;
 q
%CTSTC0o s SQLCODE=$s($g(%CTSTC0c):-101,1:0) q:SQLCODE'=0
 s %CTSTC0c=1 k %CTSTC0m
 s %CTSTC0E=$zt,%CTSTC0f=0,%CTSTC0e=0,%CTSTC0L=""
 s %CTSTC0d(2)=$P(par,$C(1)),%CTSTC0d(3)=$P(par,$C(1))
 s:%CTSTC0d(2)="" %CTSTC0d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTSTC0d(1)=""
%0ABk1 s %CTSTC0d(1)=$o(^CT("STDCOMM",%CTSTC0d(1)))
 i %CTSTC0d(1)="" g %0ABdun
 i '(((%CTSTC0d(2))=$E((%CTSTC0d(1)),1,$L((%CTSTC0d(2)))))!(%CTSTC0d(3)="")) g %0ABk1
 k %CTSTC0d(6) s %CTSTC0d(6)=$g(^CT("STDCOMM",%CTSTC0d(1),"REM",0)) s:'%CTSTC0d(6) %CTSTC0d(6)="" f %irep=1:1:%CTSTC0d(6) s %CTSTC0d(6,%irep)=$g(^(%irep))
 s %CTSTC0d(5)=(%CTSTC0d(1))
 s SQLCODE=0 s:SQLCODE=0 %CTSTC0f=%CTSTC0f+1 s %CTSTC0c=10 q
%CTSTC0f i '$g(%CTSTC0c) s SQLCODE=-102 q
 i %CTSTC0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTSTC0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTSTC0c=100 q
%CTSTC0c i '$g(%CTSTC0c) s SQLCODE=-102 q
 k %CTSTC0c,%CTSTC0d,%CTSTC0e,%CTSTC0E,%CTSTC0f,%CTSTC0l,%CTSTC0L,%CTSTC0n,%CTSTC0r,%CTSTC0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTSTC0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTSTC0f q:SQLCODE'=0
 s PLIST(1)=%CTSTC0d(5),PLIST(2)=%CTSTC0d(1)
 k PLIST(3) s PLIST(3)=%CTSTC0d(6) n ir f ir=1:1:PLIST(3) s PLIST(3,ir)=%CTSTC0d(6,ir)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(2)=$p($g(%mmmsqld(3)),"||",1,1)
 s PLIST(1)=$g(%mmmsqld(3))
 i PLIST(2)'="",$d(^CT("STDCOMM",PLIST(2)))
 e  g %0EBdun
 k PLIST(3) s PLIST(3)=$g(^CT("STDCOMM",PLIST(2),"REM",0)) s:'PLIST(3) PLIST(3)="" f %irep=1:1:PLIST(3) s PLIST(3,%irep)=$g(^(%irep))
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %insert,icol,ir
 f icol=0:1:3 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt2591("1")
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",$d(^CT("STDCOMM",%mmmsqld(4)))
 e  g %0GBdun
 k %data,%edit
 f icol=0:1:3 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt2591(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",$d(^CT("STDCOMM",%mmmsqld(3)))
 e  g %0HBdun
 d delete^mt2591(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
