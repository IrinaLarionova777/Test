<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBHOSPT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBHOSPT  ; IG 29/4/98 ; MVB Control code access for HOS_HospitalPatientsTSet
 ;
 ; supported calls:
 ;
 ; $$select^LVBHOSPT(ROWID)
 ; $$open^LVBHOSPT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBHOSPT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBHOSPT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBHOSPT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBHOSPT()
 ; $$insert^LVBHOSPT(par)
 ; $$update^LVBHOSPT(ROWID)
 ; $$delete^LVBHOSPT(ROWID)
 ; $$getall^LVBHOSPT(epis,par)
 ;
  ;---&SQL(DECLARE HOSPT CURSOR FOR SELECT * FROM HOS_HospitalPatientsTSet
   ;---         WHERE HOSPT_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
 ; Insert the data
insert(par) d pre("N") K PLIST(1) s PLIST(0)=$g(par)
 s hosp=$p(par,"||"),deb=$p(par,"||",2),epis=$p(par,"||",3)
 i $l(PLIST(2)),$l(hosp),$l(deb),$l(epis) s PLIST(3)=$o(^THOS(hosp,"PATIENT",deb,epis,"TS",PLIST(2),""),-1)+1
  ;---&SQL(insert INTO HOS_HospitalPatientsTSet VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) d pre("Y")
  ;---&SQL(UPDATE HOS_HospitalPatientsTSet VALUES :PLIST() WHERE HOSPT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID)  ;---&SQL(DELETE FROM HOS_HospitalPatientsTSet WHERE HOSPT_RowID=:ROWID)
  ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ;
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN HOSPT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %HOSPT0o
 Q 0
 ;
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par)
  ;---&SQL(FETCH HOSPT INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j) s par=$g(par)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE HOSPT) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %HOSPT0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM HOS_HospitalPatientsTSet WHERE HOSPT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 i $g(PLIST(2))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$selskip^LVBCTTS(plist(2))
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_$s(PLIST(4)="":PLIST(2),1:PLIST(4))_$c(1)_PLIST(3)_$c(1)_PLIST(24)_$c(1)_PLIST(5)
 .k PLIST m PLIST=plist s PLIST(2)=X k plist
 i $g(PLIST(5))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTSS(plist(5),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(5)=X k plist
 q
getall(epis,par) N (epis,par,PLIST) s epis=$g(epis),par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str=epis_"||"_$p(PLIST(2),$c(1))_"||"_$p(PLIST(3),$c(1))_$c(1)_0_$c(28)_PLIST(3)_$c(28)_PLIST(2)
 .s $p(str,$c(28),38)=PLIST(4)
 .s $p(str,$c(28),32)=PLIST(5)
 .s ts=$p($p(PLIST(2),$c(1)),"||",1) i '$d(^TTAB("TS",ts)) q
 .s ^TMP($zn,$j,1,cnt)=$p($p(str,$c(28),1),$c(1))_$c(2)_$p(PLIST(2),$c(1),2)_$c(2)_ts_$c(2)_str_$c(29)_$p(^TTAB("TS",ts),"\",15)_$c(29)_$p(^TTAB("TS",ts),"\",39)
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%HOSPT0o s $zt="%HOSPT0E" s SQLCODE=$s($g(%HOSPT0c):-101,1:0) q:SQLCODE'=0  s %HOSPT0d(12)=0 s %HOSPT0d(13)=0,%HOSPT0d(14)=""
 s %HOSPT0d(7)=$g(par)
 s %HOSPT0c=1 q
%HOSPT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %HOSPT0c,%HOSPT0d,%HOSPT0E,%HOSPT0l,%HOSPT0n,%HOSPT0R,%HOSPT0Z q
%0Afirst 
 ; asl MOD# 2
 s %HOSPT0d(1)=%HOSPT0d(7)
 s %HOSPT0d(9)=$p(%HOSPT0d(1),"||"),%HOSPT0d(10)=$p(%HOSPT0d(1),"||",2),%HOSPT0d(11)=$p(%HOSPT0d(1),"||",3)
 i %HOSPT0d(9)="" g %0ABdun
 i %HOSPT0d(10)="" g %0ABdun
 i %HOSPT0d(11)="" g %0ABdun
 s %HOSPT0d(3)=""
%0ABk1 s %HOSPT0d(3)=$o(^THOS(%HOSPT0d(9),"PATIENT",%HOSPT0d(10),%HOSPT0d(11),"TS",%HOSPT0d(3)))
 i %HOSPT0d(3)="" g %0ABdun
 s %HOSPT0d(4)=""
%0ABk2 s %HOSPT0d(4)=$o(^THOS(%HOSPT0d(9),"PATIENT",%HOSPT0d(10),%HOSPT0d(11),"TS",%HOSPT0d(3),%HOSPT0d(4)))
 i %HOSPT0d(4)="" g %0ABk1
 s %HOSPT0d(25)=$g(^THOS(%HOSPT0d(9),"PATIENT",%HOSPT0d(10),%HOSPT0d(11),"TS",%HOSPT0d(3),%HOSPT0d(4)))
 s %HOSPT0d(5)=$p(%HOSPT0d(25),"\",1) s %HOSPT0d(6)=$p(%HOSPT0d(25),"\",2)
 s %HOSPT0d(2)=(%HOSPT0d(9))_"||"_(%HOSPT0d(10))_"||"_(%HOSPT0d(11))_"||"_(%HOSPT0d(3))_"||"_(%HOSPT0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^THOS($p(%HOSPT0d(2),"||",1),"PATIENT",$p(%HOSPT0d(2),"||",2),$p(%HOSPT0d(2),"||",3),"TS",$p(%HOSPT0d(2),"||",4),$p(%HOSPT0d(2),"||",5))#"S":$zu(115,4) i $t { s %HOSPT0d(13)=1,%HOSPT0d(14)=$name(^THOS($p(%HOSPT0d(2),"||",1),"PATIENT",$p(%HOSPT0d(2),"||",2),$p(%HOSPT0d(2),"||",3),"TS",$p(%HOSPT0d(2),"||",4),$p(%HOSPT0d(2),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.HOS_HospitalPatientsTSet for RowID value: "_%HOSPT0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %HOSPT0d(9)=$p(%HOSPT0d(2),"||"),%HOSPT0d(10)=$p(%HOSPT0d(2),"||",2),%HOSPT0d(11)=$p(%HOSPT0d(2),"||",3),%HOSPT0d(3)=$p(%HOSPT0d(2),"||",4),%HOSPT0d(4)=$p(%HOSPT0d(2),"||",5)
 i %HOSPT0d(9)'="",%HOSPT0d(10)'="",%HOSPT0d(11)'="",%HOSPT0d(3)'="",%HOSPT0d(4)'="",$d(^THOS(%HOSPT0d(9),"PATIENT",%HOSPT0d(10),%HOSPT0d(11),"TS",%HOSPT0d(3),%HOSPT0d(4)))
 e  g %0ACdun
 s %HOSPT0d(36)=$g(^THOS(%HOSPT0d(9),"PATIENT",%HOSPT0d(10),%HOSPT0d(11),"TS",%HOSPT0d(3),%HOSPT0d(4)))
 s %HOSPT0d(5)=$p(%HOSPT0d(36),"\",1) s %HOSPT0d(6)=$p(%HOSPT0d(36),"\",2)
 s %HOSPT0d(1)=$p(%HOSPT0d(2),"||",1,3)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %HOSPT0d(12)=%HOSPT0d(12)+1,%ROWCOUNT=%HOSPT0d(12),%ROWID=%HOSPT0d(2),%HOSPT0c=10 q
%HOSPT0f i '$g(%HOSPT0c) { s SQLCODE=-102 q  } i %HOSPT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%HOSPT0d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%HOSPT0d(12),%HOSPT0c=100 q  } g %0Afirst:%HOSPT0c=1
%0ACdun i $zu(115,2)=1,$g(%HOSPT0d(13))=1 { l -@%HOSPT0d(14) s %HOSPT0d(13)=0 }
 g %0ABk2
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%HOSPT0d(12),SQLCODE=100,%HOSPT0c=100 q
%HOSPT0c i '$g(%HOSPT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%HOSPT0d(12)),1:0)
 i $zu(115,2)=1,$g(%HOSPT0d(13))=1 { l -@%HOSPT0d(14) } k %HOSPT0c,%HOSPT0d,%HOSPT0E,%HOSPT0l,%HOSPT0n,%HOSPT0R,%HOSPT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %HOSPT0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.HOSHospitalPatientsTSet.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(9)=0 s %mmmsqld(10)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^THOS(%mmmsqld(4),"PATIENT",%mmmsqld(5),%mmmsqld(6),"TS",%mmmsqld(7),%mmmsqld(8)))
 e  g %0EBdun
 s %mmmsqld(21)=$$%getlock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(2)) i '%mmmsqld(21) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^THOS(%mmmsqld(4),"PATIENT",%mmmsqld(5),%mmmsqld(6),"TS",%mmmsqld(7),%mmmsqld(8)))
 e  g %0ECdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.HOSHospitalPatientsTSet.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(9))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(21)=1 %ReleaseLock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(21)=1 %ReleaseLock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(9)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(21))=1 %ReleaseLock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^THOS(%mmmsqld(3),"PATIENT",%mmmsqld(4),%mmmsqld(5),"TS",%mmmsqld(6),%mmmsqld(7)))
 e  g %0GBdun
 s %mmmsqld(20)=$$%getlock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(1)) i '%mmmsqld(20) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^THOS(%mmmsqld(3),"PATIENT",%mmmsqld(4),%mmmsqld(5),"TS",%mmmsqld(6),%mmmsqld(7)))
 e  g %0GCdun
 d %delete^User.HOSHospitalPatientsTSet.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(20)=1 %ReleaseLock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(20)=1 %ReleaseLock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(20))=1 %ReleaseLock^User.HOSHospitalPatientsTSet.T1(%mmmsqld(1)) g %0Gc
%0Jo d %HOSPT0f q:SQLCODE'=0
 s PLIST(0)=%HOSPT0d(1),PLIST(1)=%HOSPT0d(2),PLIST(2)=%HOSPT0d(3),PLIST(3)=%HOSPT0d(4),PLIST(4)=%HOSPT0d(5),PLIST(5)=%HOSPT0d(6)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(8)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(8)
 s %mmmsqld(10)=$p(PLIST(1),"||"),%mmmsqld(11)=$p(PLIST(1),"||",2),%mmmsqld(12)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4),PLIST(3)=$p(PLIST(1),"||",5)
 i %mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",PLIST(3)'="",$d(^THOS(%mmmsqld(10),"PATIENT",%mmmsqld(11),%mmmsqld(12),"TS",PLIST(2),PLIST(3)))
 e  g %0LBdun
 s %mmmsqld(25)=$g(^THOS(%mmmsqld(10),"PATIENT",%mmmsqld(11),%mmmsqld(12),"TS",PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(25),"\",1) s PLIST(5)=$p(%mmmsqld(25),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^THOS($p(PLIST(1),"||",1),"PATIENT",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"TS",$p(PLIST(1),"||",4),$p(PLIST(1),"||",5))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^THOS($p(PLIST(1),"||",1),"PATIENT",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"TS",$p(PLIST(1),"||",4),$p(PLIST(1),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.HOS_HospitalPatientsTSet for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$p(PLIST(1),"||"),%mmmsqld(11)=$p(PLIST(1),"||",2),%mmmsqld(12)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4),PLIST(3)=$p(PLIST(1),"||",5)
 i %mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",PLIST(3)'="",$d(^THOS(%mmmsqld(10),"PATIENT",%mmmsqld(11),%mmmsqld(12),"TS",PLIST(2),PLIST(3)))
 e  g %0LCdun
 s %mmmsqld(36)=$g(^THOS(%mmmsqld(10),"PATIENT",%mmmsqld(11),%mmmsqld(12),"TS",PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(36),"\",1) s PLIST(5)=$p(%mmmsqld(36),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
