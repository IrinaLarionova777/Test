<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTDEP" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTDEP ; IG 30/4/98 ; MVB Control code access for CT_Department
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTDEP(ROWID,skip,user)
 ; $$seldata^LVBCTDEP(ROWID,data)
 ; $$open^LVBCTDEP(skip,user,empty,active,reporting,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTDEP(skip,user,empty,active,reporting,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTDEP(skip,user,empty,active,reporting,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTDEP(skip,user,empty,active,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTDEP()
 ; $$insert^LVBCTDEP()
 ; $$update^LVBCTDEP(ROWID)
 ; $$delete^LVBCTDEP(ROWID,Comments)
 ; $$getall^LVBCTDEP(param,user,empty,active)
 ; $$ValUser^LVBCTDEP(user,dep)
 ; FIX^LVBCTDEP
 ;
  ;---&SQL(DECLARE CTDEP CURSOR FOR SELECT * FROM CT_Department
   ;---         WHERE ((CTDEP_ActiveFlag = :active) OR (:active is NULL))
   ;---         ORDER BY CTDEP_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, active
FIX k ^TTABi("DEP") s a="" f  s a=$o(^TTAB("DEP",a)) q:a=""  d
 .i '$$select(a,"Y") s PLIST(14)="Y",PLIST(15)=99999,err=$$update(a) i err w !,a," ",err
 d ##class(User.CTDepartment).%BuildIndices()
 q
 ;
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_Department VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE d chpath(%ROWID,1) q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&SQL(UPDATE CT_Department VALUES :PLIST() WHERE CTDEP_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Eo
 i 'SQLCODE d chpath(%ROWID,1) q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_Department WHERE CTDEP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(skip,user,empty,active,reporting,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),empty=$g(empty),active=$g(active),reporting=$g(reporting)
  ;---&SQL(OPEN CTDEP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDEP0o
 q 0
 ; fetch the data
fetch(skip,user,empty,active,reporting,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),empty=$g(empty),active=$g(active),reporting=$g(reporting) k PLIST
  ;---f  &SQL(FETCH CTDEP INTO :PLIST())  q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)),reporting)'=60
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 f  Do %0Jo  q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)),reporting)'=60
 i 'SQLCODE,empty="Y" s stop=0 d  i stop g fetch+1
 .s dep=PLIST(2) n (dep,user,stop)
 .i $$getallac^LVBCTTS(dep,user,,,,,,,"Y")
 .i 'PLIST s stop=1
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(skip,user,empty,active,p4,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),empty=$g(empty),active=$g(active) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,user,empty,active) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,user,empty,active,p4,p5,p6,p7,p8,p9) n (skip,user,empty,active,PLIST) s skip=$g(skip),user=$g(user),empty=$g(empty),active=$g(active) k ^TMP($zn,$j)
 i $$open(skip,user,empty,active)
 f cnt=1:1 q:$$fetch(skip,user,empty,active)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE CTDEP)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDEP0c
 q 0
 ; select data by code
select(RowID,skip,user) s RowID=$g(RowID),skip=$g(skip),user=$g(user) k PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_Department WHERE CTDEP_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE s SQLCODE=$$ValUser(user,$p(PLIST(1),$c(1))) i 'SQLCODE d adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=3 s result=$p($g(^TTAB("DEP",ROWID)),"\",1) q
 .i data=7 s result=$p($g(^TTAB("DEP",ROWID)),"\",5) q
 .i data=8 s result=$p($g(^TTAB("DEP",ROWID)),"\",6) q
 .i data=13 s result=$p($g(^TTAB("DEP",ROWID)),"\",11) q
 .i data=15 s result=$p($g(^TTAB("DEP",ROWID)),"\",13) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 i '$g(PLIST(15)) s PLIST(15)=99999
 q
 ; post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(10))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$selrow^MVBSSUSR(plist(10),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(10)=X k plist
 q
getall(param,user,empty,active,reporting) n (param,user,empty,active,reporting,PLIST) 
 k ^TMP($zn,$j) s param=$g(param),user=$g(user),empty=$g(empty),active=$g(active),reporting=$g(reporting)
 ; get number of test sets to print
 i param="Y" d
 .s cour="" f  s cour=$o(^TRPT("DR",cour)) q:cour=""  d
 ..s dh="" f  s dh=$o(^TRPT("DR",cour,dh)) q:dh=""  d
 ...s doc="" f  s doc=$o(^TRPT("DR",cour,dh,doc)) q:doc=""  d
 ....s ep="" f  s ep=$o(^TRPT("DR",cour,dh,doc,ep)) q:ep=""  k epcheck d
 .....k epcheck s ts="" f  s ts=$o(^TRPT("DR",cour,dh,doc,ep,ts)) q:ts=""  s epcheck($e(ts))=1
 .....s dep="" f  s dep=$o(epcheck(dep)) q:dep=""  s check(dep)=$g(check(dep))+1
 i $$open("Y",user,empty,active,reporting)
 f cnt=1:1 q:$$fetch("Y",user,empty,active,reporting)  d
 .s str=$g(check(PLIST(2)))_$c(29)_$$ValUser(user,$p(PLIST(1),$c(1)),reporting)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; check default pathologist for department
 ; flag : 1.(CTDEP) from department
 ;        2.(CTDPP) from department pathologist
chpath(dep,flag,rowid) n (dep,flag,rowid) s dep=$g(dep),flag=$g(flag),rowid=$g(rowid)
 i flag=2 d
 .i '$$select(dep,"Y") d  s flag=1
 ..s path=$p(PLIST(10),$c(1))
 ..i '$$select^LVBCTDPP(rowid,"Y") d  q
 ... ; set current pathologist as default
 ...i PLIST(3)="Y" d  q
 ....s $p(^TTAB("DEP",dep),"\",8)=PLIST(2),path=PLIST(2)
 ....i $$open^LVBCTDPP(dep,"Y")
 ....f  q:$$fetch^LVBCTDPP(dep,"Y")  d
 .....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .....i PLIST(2)'=path,PLIST(3)="Y" s ^TTAB("DEP",dep,"PATHOLOGIST",PLIST(2))="N"
 ....i $$close^LVBCTDPP()
 ... ; find default pathologist
 ...i PLIST(3)'="Y" d  q
 ....s path="" i $$open^LVBCTDPP(dep,"Y")
 ....f  q:$$fetch^LVBCTDPP(dep,"Y")  i PLIST(3)="Y" s path=PLIST(2) q
 ....i $$close^LVBCTDPP()
 ....s $p(^TTAB("DEP",dep),"\",8)=path
 ..i $$select^LVBCTDPP(rowid,"Y") d  q
 ...s path="" i $$open^LVBCTDPP(dep,"Y")
 ...f  q:$$fetch^LVBCTDPP(dep,"Y")  i PLIST(3)="Y" s path=PLIST(2) q
 ...i $$close^LVBCTDPP()
 ...s $p(^TTAB("DEP",dep),"\",8)=path
 i flag=1 d
 .i '$$select(dep,"Y") d
 ..s path=$p(PLIST(10),$c(1))
 ..i $l(path),'$$select^LVBCTDPP(dep_"||"_path,"Y") s ^TTAB("DEP",dep,"PATHOLOGIST",path)="Y"
 ..i $$open^LVBCTDPP(dep,"Y")
 ..f  q:$$fetch^LVBCTDPP(dep,"Y")  d
 ...f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ...i PLIST(2)=path,PLIST(3)'="Y" s ^TTAB("DEP",dep,"PATHOLOGIST",path)="Y"
 ...i PLIST(2)'=path,PLIST(3)="Y" s ^TTAB("DEP",dep,"PATHOLOGIST",PLIST(2))="N"
 ..i $$close^LVBCTDPP()
 q
 ; check user - department
ValUser(user,code,reporting) n (user,code,reporting) s user=$g(user),code=$g(code),reporting=$g(reporting),ok=0
 i $l(user),$l(code) d
 .s SecurityType=$$seldata^MVBSSUSR(user,10)
 .i '$l(SecurityType) s SecurityType=$$seldata^MVBCFLAB(1,66)
 .i $l(reporting) s SecurityType=3
 .i $l(SecurityType),SecurityType'=1,$d(^TTAB("UA",user,4)) s ok=$s(SecurityType=3:60,SecurityType=2:50,1:0) i ok,$d(^TTAB("UA",user,4,code)) s ok=0
 q ok
%CTDEP0o s $zt="%CTDEP0E" s SQLCODE=$s($g(%CTDEP0c):-101,1:0) q:SQLCODE'=0  s %CTDEP0d(22)=0 s %CTDEP0d(23)=0,%CTDEP0d(24)=""
 s %CTDEP0d(17)=$g(active),%CTDEP0d(18)=$g(active)
 s %CTDEP0t(1)=$i(^||%sql.temp)
 s %CTDEP0d(21)=$zu(28,%CTDEP0d(17),7)
 s %CTDEP0c=1 q
%CTDEP0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTDEP0c,%CTDEP0d,%CTDEP0E,%CTDEP0l,%CTDEP0n,%CTDEP0R,%CTDEP0s,%CTDEP0t,%CTDEP0Z q
%0Afirst 
 k ^||%sql.temp(%CTDEP0t(1),0) s ^||%sql.temp(%CTDEP0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTDEP0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTDEP0t(1),0))
 s %CTDEP0s(14)=""
%0ACk1 s %CTDEP0s(14)=$o(^||%sql.temp(%CTDEP0t(1),0,%CTDEP0s(14)))
 i %CTDEP0s(14)="" g %0ACdun
 s %CTDEP0d(14)=$s(%CTDEP0s(14)=-1E14:"",1:%CTDEP0s(14))
 s %CTDEP0s(1)=""
%0ACk2 s %CTDEP0s(1)=$o(^||%sql.temp(%CTDEP0t(1),0,%CTDEP0s(14),%CTDEP0s(1)))
 i %CTDEP0s(1)="" g %0ACk1
 s %CTDEP0d(1)=$s(%CTDEP0s(1)=-1E14:"",1:%CTDEP0s(1))
 i %CTDEP0d(1)'="",$d(^TTAB("DEP",%CTDEP0d(1)))
 e  g %0ACk2
 s %CTDEP0d(35)=$g(^TTAB("DEP",%CTDEP0d(1)))
 s %CTDEP0d(2)=$p(%CTDEP0d(35),"\",1) s %CTDEP0d(3)=$p(%CTDEP0d(35),"\",2) s %CTDEP0d(4)=$p(%CTDEP0d(35),"\",3) s %CTDEP0d(5)=$p(%CTDEP0d(35),"\",4) s %CTDEP0d(6)=$p(%CTDEP0d(35),"\",5) s %CTDEP0d(7)=$p(%CTDEP0d(35),"\",6) s %CTDEP0d(8)=$p(%CTDEP0d(35),"\",7) s %CTDEP0d(9)=$p(%CTDEP0d(35),"\",8) s %CTDEP0d(10)=$p(%CTDEP0d(35),"\",9) s %CTDEP0d(11)=$p(%CTDEP0d(35),"\",10) s %CTDEP0d(12)=$p(%CTDEP0d(35),"\",11) s %CTDEP0d(13)=$p(%CTDEP0d(35),"\",12) s %CTDEP0d(15)=$p(%CTDEP0d(35),"\",14) s %CTDEP0d(16)=$p(%CTDEP0d(35),"\",15)
 s %CTDEP0d(20)=$zu(28,%CTDEP0d(13),7)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("DEP",$p(%CTDEP0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTDEP0d(23)=1,%CTDEP0d(24)=$name(^TTAB("DEP",$p(%CTDEP0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Department for RowID value: "_%CTDEP0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTDEP0d(1)'="",$d(^TTAB("DEP",%CTDEP0d(1)))
 e  g %0ADdun
 s %CTDEP0d(40)=$g(^TTAB("DEP",%CTDEP0d(1)))
 s %CTDEP0d(2)=$p(%CTDEP0d(40),"\",1) s %CTDEP0d(3)=$p(%CTDEP0d(40),"\",2) s %CTDEP0d(4)=$p(%CTDEP0d(40),"\",3) s %CTDEP0d(5)=$p(%CTDEP0d(40),"\",4) s %CTDEP0d(6)=$p(%CTDEP0d(40),"\",5) s %CTDEP0d(7)=$p(%CTDEP0d(40),"\",6) s %CTDEP0d(8)=$p(%CTDEP0d(40),"\",7) s %CTDEP0d(9)=$p(%CTDEP0d(40),"\",8) s %CTDEP0d(10)=$p(%CTDEP0d(40),"\",9) s %CTDEP0d(11)=$p(%CTDEP0d(40),"\",10) s %CTDEP0d(12)=$p(%CTDEP0d(40),"\",11) s %CTDEP0d(13)=$p(%CTDEP0d(40),"\",12) s %CTDEP0d(14)=$p(%CTDEP0d(40),"\",13) s %CTDEP0d(15)=$p(%CTDEP0d(40),"\",14) s %CTDEP0d(16)=$p(%CTDEP0d(40),"\",15)
 s %CTDEP0d(20)=$zu(28,%CTDEP0d(13),7)
 g:'(((%CTDEP0d(20)'=" ")&&(%CTDEP0d(20)=%CTDEP0d(21)))||(%CTDEP0d(18)="")) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTDEP0d(22)=%CTDEP0d(22)+1,%ROWCOUNT=%CTDEP0d(22),%ROWID=%CTDEP0d(1),%CTDEP0c=10 q
%CTDEP0f i '$g(%CTDEP0c) { s SQLCODE=-102 q  } i %CTDEP0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTDEP0d(22))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTDEP0d(22),%CTDEP0c=100 q  } g %0Afirst:%CTDEP0c=1
%0ADdun i $zu(115,2)=1,$g(%CTDEP0d(23))=1 { l -@%CTDEP0d(24) s %CTDEP0d(23)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTDEP0d(22),SQLCODE=100,%CTDEP0c=100 q
%CTDEP0c i '$g(%CTDEP0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTDEP0d(22)),1:0) f %CTDEP0d(25)=1 { i $sortend(^||%sql.temp(%CTDEP0t(%CTDEP0d(25)),0),0) } k ^||%sql.temp(%CTDEP0t(1))
 i $zu(115,2)=1,$g(%CTDEP0d(23))=1 { l -@%CTDEP0d(24) } k %CTDEP0c,%CTDEP0d,%CTDEP0E,%CTDEP0l,%CTDEP0n,%CTDEP0R,%CTDEP0s,%CTDEP0t,%CTDEP0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTDEP0c=100
 f %CTDEP0d(25)=1 i $sortend(^||%sql.temp(%CTDEP0t(%CTDEP0d(25)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTDEP0d(1)=""
%0ABk1 s %CTDEP0d(1)=$o(^TTAB("DEP",%CTDEP0d(1)))
 i %CTDEP0d(1)="" g %0ABdun
 s %CTDEP0d(30)=$g(^TTAB("DEP",%CTDEP0d(1)))
 s %CTDEP0d(2)=$p(%CTDEP0d(30),"\",1) s %CTDEP0d(3)=$p(%CTDEP0d(30),"\",2) s %CTDEP0d(4)=$p(%CTDEP0d(30),"\",3) s %CTDEP0d(5)=$p(%CTDEP0d(30),"\",4) s %CTDEP0d(6)=$p(%CTDEP0d(30),"\",5) s %CTDEP0d(7)=$p(%CTDEP0d(30),"\",6) s %CTDEP0d(8)=$p(%CTDEP0d(30),"\",7) s %CTDEP0d(9)=$p(%CTDEP0d(30),"\",8) s %CTDEP0d(10)=$p(%CTDEP0d(30),"\",9) s %CTDEP0d(11)=$p(%CTDEP0d(30),"\",10) s %CTDEP0d(12)=$p(%CTDEP0d(30),"\",11) s %CTDEP0d(13)=$p(%CTDEP0d(30),"\",12) s %CTDEP0d(14)=$p(%CTDEP0d(30),"\",13) s %CTDEP0d(15)=$p(%CTDEP0d(30),"\",14) s %CTDEP0d(16)=$p(%CTDEP0d(30),"\",15)
 s %CTDEP0d(20)=$zu(28,%CTDEP0d(13),7)
 g:'(((%CTDEP0d(20)'=" ")&&(%CTDEP0d(20)=%CTDEP0d(21)))||(%CTDEP0d(18)="")) %0ABk1
 s %CTDEP0s(14)=$s(%CTDEP0d(14)'="":%CTDEP0d(14),1:-1E14),%CTDEP0s(1)=$s(%CTDEP0d(1)'="":%CTDEP0d(1),1:-1E14),^||%sql.temp(%CTDEP0t(1),0,%CTDEP0s(14),%CTDEP0s(1))=""
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:17 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTDepartment.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTDepartment.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:17 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTDepartment.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTDepartment.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTDepartment.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTDepartment.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("DEP",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTDepartment.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("DEP",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTDepartment.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTDepartment.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTDepartment.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTDepartment.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTDEP0f q:SQLCODE'=0
 s PLIST(1)=%CTDEP0d(1),PLIST(2)=%CTDEP0d(1),PLIST(3)=%CTDEP0d(2),PLIST(4)=%CTDEP0d(3),PLIST(5)=%CTDEP0d(4),PLIST(6)=%CTDEP0d(5),PLIST(7)=%CTDEP0d(6),PLIST(8)=%CTDEP0d(7),PLIST(9)=%CTDEP0d(8),PLIST(10)=%CTDEP0d(9),PLIST(11)=%CTDEP0d(10),PLIST(12)=%CTDEP0d(11),PLIST(13)=%CTDEP0d(12),PLIST(14)=%CTDEP0d(13),PLIST(15)=%CTDEP0d(14),PLIST(16)=%CTDEP0d(15),PLIST(17)=%CTDEP0d(16)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(20)=0,%mmmsqld(21)=""
 s %mmmsqld(18)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(18)
 i PLIST(2)'="",$d(^TTAB("DEP",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(26)=$g(^TTAB("DEP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(26),"\",1) s PLIST(4)=$p(%mmmsqld(26),"\",2) s PLIST(5)=$p(%mmmsqld(26),"\",3) s PLIST(6)=$p(%mmmsqld(26),"\",4) s PLIST(7)=$p(%mmmsqld(26),"\",5) s PLIST(8)=$p(%mmmsqld(26),"\",6) s PLIST(9)=$p(%mmmsqld(26),"\",7) s PLIST(10)=$p(%mmmsqld(26),"\",8) s PLIST(11)=$p(%mmmsqld(26),"\",9) s PLIST(12)=$p(%mmmsqld(26),"\",10) s PLIST(13)=$p(%mmmsqld(26),"\",11) s PLIST(14)=$p(%mmmsqld(26),"\",12) s PLIST(15)=$p(%mmmsqld(26),"\",13) s PLIST(16)=$p(%mmmsqld(26),"\",14) s PLIST(17)=$p(%mmmsqld(26),"\",15)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("DEP",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^TTAB("DEP",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Department for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("DEP",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(31)=$g(^TTAB("DEP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(31),"\",1) s PLIST(4)=$p(%mmmsqld(31),"\",2) s PLIST(5)=$p(%mmmsqld(31),"\",3) s PLIST(6)=$p(%mmmsqld(31),"\",4) s PLIST(7)=$p(%mmmsqld(31),"\",5) s PLIST(8)=$p(%mmmsqld(31),"\",6) s PLIST(9)=$p(%mmmsqld(31),"\",7) s PLIST(10)=$p(%mmmsqld(31),"\",8) s PLIST(11)=$p(%mmmsqld(31),"\",9) s PLIST(12)=$p(%mmmsqld(31),"\",10) s PLIST(13)=$p(%mmmsqld(31),"\",11) s PLIST(14)=$p(%mmmsqld(31),"\",12) s PLIST(15)=$p(%mmmsqld(31),"\",13) s PLIST(16)=$p(%mmmsqld(31),"\",14) s PLIST(17)=$p(%mmmsqld(31),"\",15)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
