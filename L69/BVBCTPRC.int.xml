<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTPRC" type="INT" languagemode="0"><![CDATA[
BVBCTPRC ; IG 10/12/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:29 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$open^BVBCTPRC(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetch^BVBCTPRC(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchbuffer^BVBCTPRC(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchall^BVBCTPRC(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$close^BVBCTPRC() 
 ; $$insert^BVBCTPRC() 
 ; $$update^BVBCTPRC(ROWID) 
 ; $$delete^BVBCTPRC(ROWID,Comments)
 ; $$select^BVBCTPRC(ROWID) 
 ; $$selcode^BVBCTPRC(code) 
 ; $$getall^BVBCTPRC() 
 ; $$close^BVBCTPRC() 
 ; 
open(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) s flag=$g(flag)
 d %CTPRC0o 
 q 0
 ;
fetch(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) s flag=$g(flag) k PLIST
nx d %0Co
 i 'SQLCODE,flag="S",'$o(^CT("PR",+$g(PLIST(1)),"SPLIT",""),-1) g nx
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) s flag=$g(flag) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(flag) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(flag,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (flag,PLIST) s flag=$g(flag) K ^TMP($zn,$j)
 i $$open(flag)
 f cnt=1:1 Q:$$fetch(flag)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
close() d %CTPRC0c 
 q 0 
 ;validate product code
valprod(prod,parent) n (prod,parent)
 i parent,'(parent-prod) q 1
 q 0
select(ROWID) k PLIST s ROWID=$g(ROWID)
 d %0Eo 
 s PLIST=$O(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
selcode(code) k PLIST s code=$g(code)
 d %0Fo 
 s PLIST=$O(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
insert() K PLIST(1) d pre s ROWID=$g(ROWID)
 d %0Go
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) d pre k PLIST(1) s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Io
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
pre f j=14 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("EI",.XX) k PLIST(j) m PLIST(j)=XX
 q
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 f j=14 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("IE",.XX) k PLIST(j) m PLIST(j)=XX
 q
getall(parent) N (parent,PLIST) K ^TMP($zn,$j) s parent=$g(parent)
 I $$open()
 F cnt=1:1 Q:$$fetch()  d
 .i 'SQLCODE,$$valprod(PLIST(1),parent) q
 .S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(18),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 q
%0ABr4 s $P(%CTPRC0d(9),$C(1))=$$CO08^at22($P($g(%CTPRC0d(2)),$C(1))) q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0ABs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs3 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%CTPRC0o s SQLCODE=$s($g(%CTPRC0c):-101,1:0) q:SQLCODE'=0
 s %CTPRC0c=1 k %CTPRC0m
 s %CTPRC0E=$zt,%CTPRC0f=0,%CTPRC0e=0,%CTPRC0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTPRC0d(2),$C(1))=""
%0ABk1 s $P(%CTPRC0d(2),$C(1))=$o(^CT("PR",$P(%CTPRC0d(2),$C(1))))
 i $P(%CTPRC0d(2),$C(1))="" g %0ABdun
 i 1>$P(%CTPRC0d(2),$C(1)),$P(%CTPRC0d(2),$C(1))=+$P(%CTPRC0d(2),$C(1)) g %0ABk1
 i $P(%CTPRC0d(2),$C(1))'=+$P(%CTPRC0d(2),$C(1)) g %0ABdun
 s %CTPRC0n=$g(^CT("PR",$P(%CTPRC0d(2),$C(1))))
 s %CTPRC0d(3)=$p(%CTPRC0n,"^",1) s %CTPRC0d(4)=$p(%CTPRC0n,"^",2) s %CTPRC0d(5)=$p(%CTPRC0n,"^",3) s:%CTPRC0d(5)'="" %CTPRC0d(5)=+%CTPRC0d(5) s %CTPRC0d(6)=$p(%CTPRC0n,"^",4) s %CTPRC0d(7)=$p(%CTPRC0n,"^",5) s %CTPRC0d(8)=$p(%CTPRC0n,"^",6) s %CTPRC0d(10)=$p(%CTPRC0n,"^",8) s %CTPRC0d(11)=$p(%CTPRC0n,"^",9)
 s %CTPRC0d(12)=$p(%CTPRC0n,"^",10) s %CTPRC0d(13)=$p(%CTPRC0n,"^",11) s %CTPRC0d(14)=$p(%CTPRC0n,"^",12) s %CTPRC0d(16)=$p(%CTPRC0n,"^",13) s %CTPRC0d(17)=$p(%CTPRC0n,"^",14) s %CTPRC0d(18)=$p(%CTPRC0n,"^",15) s %CTPRC0d(19)=$p(%CTPRC0n,"^",16) s %CTPRC0d(20)=$p(%CTPRC0n,"^",17) s:%CTPRC0d(20)'="" %CTPRC0d(20)=+%CTPRC0d(20)
 k %CTPRC0d(15) s %CTPRC0d(15)=$g(^CT("PR",$P(%CTPRC0d(2),$C(1)),"REM",0)) s:'%CTPRC0d(15) %CTPRC0d(15)="" f %irep=1:1:%CTPRC0d(15) s %CTPRC0d(15,%irep)=$g(^(%irep))
 s %val=$P(%CTPRC0d(2),$C(1)) d %0ABs1:%val'="" s $P(%CTPRC0d(2),$C(1),2)=%val
 s %val=$P(%CTPRC0d(6),$C(1)) d %0ABs2:%val'="" s $P(%CTPRC0d(6),$C(1),2)=%val
 s %val=$P(%CTPRC0d(10),$C(1)) d %0ABs2:%val'="" s $P(%CTPRC0d(10),$C(1),2)=%val
 s %val=$P(%CTPRC0d(5),$C(1)) d %0ABs1:%val'="" s $P(%CTPRC0d(5),$C(1),2)=%val
 s %val=$P(%CTPRC0d(11),$C(1)) d %0ABs2:%val'="" s $P(%CTPRC0d(11),$C(1),2)=%val
 s %val=$P(%CTPRC0d(16),$C(1)) d %0ABs2:%val'="" s $P(%CTPRC0d(16),$C(1),2)=%val
 s %val=$P(%CTPRC0d(18),$C(1)) d %0ABs2:%val'="" s $P(%CTPRC0d(18),$C(1),2)=%val
 s %val=$P(%CTPRC0d(19),$C(1)) d %0ABs2:%val'="" s $P(%CTPRC0d(19),$C(1),2)=%val
 s %val=$P(%CTPRC0d(20),$C(1)) d %0ABs3:%val'="" s $P(%CTPRC0d(20),$C(1),2)=%val
 d %0ABr4
 s %val=$P(%CTPRC0d(9),$C(1)) d %0ABs2:%val'="" s $P(%CTPRC0d(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTPRC0f=%CTPRC0f+1 s %CTPRC0c=10 q
%CTPRC0f i '$g(%CTPRC0c) s SQLCODE=-102 q
 i %CTPRC0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTPRC0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTPRC0c=100 q
%CTPRC0c i '$g(%CTPRC0c) s SQLCODE=-102 q
 k %CTPRC0c,%CTPRC0d,%CTPRC0e,%CTPRC0E,%CTPRC0f,%CTPRC0l,%CTPRC0L,%CTPRC0n,%CTPRC0r,%CTPRC0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTPRC0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTPRC0f q:SQLCODE'=0
 s PLIST(1)=%CTPRC0d(2),PLIST(2)=%CTPRC0d(3),PLIST(3)=%CTPRC0d(4),PLIST(4)=%CTPRC0d(5),PLIST(5)=%CTPRC0d(6),PLIST(6)=%CTPRC0d(7),PLIST(7)=%CTPRC0d(8),PLIST(8)=%CTPRC0d(9),PLIST(9)=%CTPRC0d(10),PLIST(10)=%CTPRC0d(11),PLIST(11)=%CTPRC0d(12),PLIST(12)=%CTPRC0d(13),PLIST(13)=%CTPRC0d(14)
 k PLIST(14) s PLIST(14)=%CTPRC0d(15) n ir f ir=1:1:PLIST(14) s PLIST(14,ir)=%CTPRC0d(15,ir)
 s PLIST(15)=%CTPRC0d(16),PLIST(16)=%CTPRC0d(17),PLIST(17)=%CTPRC0d(18),PLIST(18)=%CTPRC0d(19),PLIST(19)=%CTPRC0d(20)
 q
%0EAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0EBr1 s $P(PLIST(8),$C(1))=$$CO08^at22($P($g(PLIST(1)),$C(1))) q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("PR",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0EBdun
 s %mmmsqln=$g(^CT("PR",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s:PLIST(4)'="" PLIST(4)=+PLIST(4) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5) s PLIST(7)=$p(%mmmsqln,"^",6) s PLIST(9)=$p(%mmmsqln,"^",8) s PLIST(10)=$p(%mmmsqln,"^",9) s PLIST(11)=$p(%mmmsqln,"^",10)
 s PLIST(12)=$p(%mmmsqln,"^",11) s PLIST(13)=$p(%mmmsqln,"^",12) s PLIST(15)=$p(%mmmsqln,"^",13) s PLIST(16)=$p(%mmmsqln,"^",14) s PLIST(17)=$p(%mmmsqln,"^",15) s PLIST(18)=$p(%mmmsqln,"^",16) s PLIST(19)=$p(%mmmsqln,"^",17) s:PLIST(19)'="" PLIST(19)=+PLIST(19)
 k PLIST(14) s PLIST(14)=$g(^CT("PR",$P(PLIST(1),$C(1)),"REM",0)) s:'PLIST(14) PLIST(14)="" f %irep=1:1:PLIST(14) s PLIST(14,%irep)=$g(^(%irep))
 s %val=$P(PLIST(5),$C(1)) d %0ABs2:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s %val=$P(PLIST(9),$C(1)) d %0ABs2:%val'="" s $P(PLIST(9),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs1:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs2:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(15),$C(1)) d %0ABs2:%val'="" s $P(PLIST(15),$C(1),2)=%val
 s %val=$P(PLIST(17),$C(1)) d %0ABs2:%val'="" s $P(PLIST(17),$C(1),2)=%val
 s %val=$P(PLIST(18),$C(1)) d %0ABs2:%val'="" s $P(PLIST(18),$C(1),2)=%val
 s %val=$P(PLIST(19),$C(1)) d %0ABs3:%val'="" s $P(PLIST(19),$C(1),2)=%val
 d %0EBr1
 s %val=$P(PLIST(8),$C(1)) d %0ABs2:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(code,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(code,2,999)
 s SQLCODE=100
   ;  init
 s %mmmsqld(24)=$$ALPHAUP(%mmmsqld(3))
 ; asl MOD# 2
 s %mmmsqld(23)=$g(%mmmsqld(24))
 i %mmmsqld(23)="" g %0FBdun
 s $P(PLIST(1),$C(1))=""
%0FBk1 s $P(PLIST(1),$C(1))=$o(^CT("PR",0,"Code",%mmmsqld(23),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0FBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0FBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("PR",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0FBk1
 s %mmmsqln=$g(^CT("PR",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s:PLIST(4)'="" PLIST(4)=+PLIST(4) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5) s PLIST(7)=$p(%mmmsqln,"^",6) s PLIST(9)=$p(%mmmsqln,"^",8) s PLIST(10)=$p(%mmmsqln,"^",9) s PLIST(11)=$p(%mmmsqln,"^",10)
 s PLIST(12)=$p(%mmmsqln,"^",11) s PLIST(13)=$p(%mmmsqln,"^",12) s PLIST(15)=$p(%mmmsqln,"^",13) s PLIST(16)=$p(%mmmsqln,"^",14) s PLIST(17)=$p(%mmmsqln,"^",15) s PLIST(18)=$p(%mmmsqln,"^",16) s PLIST(19)=$p(%mmmsqln,"^",17) s:PLIST(19)'="" PLIST(19)=+PLIST(19)
 k PLIST(14) s PLIST(14)=$g(^CT("PR",$P(PLIST(1),$C(1)),"REM",0)) s:'PLIST(14) PLIST(14)="" f %irep=1:1:PLIST(14) s PLIST(14,%irep)=$g(^(%irep))
 s %val=$P(PLIST(5),$C(1)) d %0ABs2:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s %val=$P(PLIST(9),$C(1)) d %0ABs2:%val'="" s $P(PLIST(9),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs1:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs2:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(15),$C(1)) d %0ABs2:%val'="" s $P(PLIST(15),$C(1),2)=%val
 s %val=$P(PLIST(17),$C(1)) d %0ABs2:%val'="" s $P(PLIST(17),$C(1),2)=%val
 s %val=$P(PLIST(18),$C(1)) d %0ABs2:%val'="" s $P(PLIST(18),$C(1),2)=%val
 s %val=$P(PLIST(19),$C(1)) d %0ABs3:%val'="" s $P(PLIST(19),$C(1),2)=%val
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 d %0EBr1
 s %val=$P(PLIST(8),$C(1)) d %0ABs2:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
 g %0FBk1
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %insert,icol,ir
 f icol=0:1:19 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1411("1")
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("PR",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0HBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:19 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1411(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("PR",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0IBdun
 d delete^mt1411(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
