<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt6191" type="INT" languagemode="0"><![CDATA[
mt6191  ; Compiled April 20, 2007 12:18:29 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt6191(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0A^mt6191
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt6191(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(2))'="" d
 . s %data(1)=$g(%data(2))
 . d insertnw^mt6191(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt6191 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:7 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt6191(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:7 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt6191(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt6191 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TTST(%ROWID):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TTST(%ROWID)
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TTST(%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TTST(%data(2))) s $p(tempn,"\",1)=$p($g(%data(3)),$c(1))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TTST(%data(2))) s $p(tempn,"\",2)=$p($g(%data(4)),$c(1))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TTST(%data(2))) s $p(tempn,"\",3)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TTST(%data(2))) s $p(tempn,"\",4)=$g(%data(6))
 s:$d(tempn)#2 ^TTST(%data(2))=tempn
maps q
 d %0Bo
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d %0Bo^mt6191  s %didit=1
trgdoneA q  ;  trigger done
 d %0Co
getold(%dataold) g %0Co
code7 ; compute code of field STC_NumberOfSpecimens
 s $p(%data(7),$c(1))=""
 s $p(%data(7),$c(1))=$$CT007^at619($g(%data(2)))
 q
comp7 ; entry point to do computed field STC_NumberOfSpecimens
 n %oldval q:(","_$g(trak)_",")[(",7,")
 s %oldval=$g(%data(7)) d code7 s %ok=1 i $g(%data(7))=%oldval q
 s %val=%data(7)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde7 s $p(%data(7),$c(1))=%val
 s %val=$p($g(%data(7)),$c(1)) d:%val'="" fdv7^mt6191 s:'%ok %data(7)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","STC_NumberOfSpecimens","",%msg) q
 s %val=$p(%data(7),$c(1))
 d:%val'="" fdi7 s $p(%data(7),$c(1),2)=%val
 i $g(%data(7))="",%oldval="" q
 s:'$d(%edit(7)) %edit(7)=%oldval k:$g(%data(7))=$g(%edit(7)) %edit(7)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"ST_StorageContainer"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="ST_StorageContainer Row ID" d %mdiag(%oper,-106,"Fld Int","Req","STC_RowID","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field STC_Container_DR
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field STC_Container_DR
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table ST_StorageContainer
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt6191 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt6191
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp7^mt6191
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde3 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde7 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=3 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","STC_DateStart","",$g(%msg))
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=4 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","STC_DateEnd","",$g(%msg))
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","STC_NumberOfSpecimens","",$g(%msg))
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv3 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv7 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Eo q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="STC_RowID"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","STC_RowID","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","STC_RowID","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","STC_DateStart","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","STC_DateEnd","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","STC_NumberOfSpecimens","",$g(%msg))
 q
fdi3 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4)
 q
fdi7 s %val=$s(%val'=+%val:"",1:$fn(%val,""))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),$p(%data(3),$c(1))'="" s %val=$p(%data(3),$c(1)) d fdi3 s $p(%data(3),$c(1),2)=%val
 i $d(%data(4)),$p(%data(4),$c(1))'="" s %val=$p(%data(4),$c(1)) d fdi3 s $p(%data(4),$c(1),2)=%val
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),%data(6)[$c(1) s %data(6)=$s($p(%data(6),$c(1))'="":$p(%data(6),$c(1)),1:$p(%data(6),$c(1),2))
 i $d(%data(7)),$p(%data(7),$c(1))'="" s %val=$p(%data(7),$c(1)) d fdi7 s $p(%data(7),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt6191 q:'%ok
 d comp7^mt6191
 q
 g ^mt6192
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0BBdun
 s %mmmsqld(4)=""
%0BBk1 s %mmmsqld(4)=$o(^TTST(%mmmsqld(1),"POS",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0BBdun
 i %mmmsqld(4)'=+%mmmsqld(4) g %0BBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt6201(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0BBk1
%0BBdun 
%0BAdun 
 q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%0CBr2 s $P(%dataold(7),$C(1))=$$CT007^at619($g(%dataold(2)))
 s:$c(1)'[$P($g(%dataold(7)),$C(1)) $P(%dataold(7),$C(1))=+$j($P($g(%dataold(7)),$C(1)),"",$l($p($P($g(%dataold(7)),$C(1)),".",2)))  ; Proper Decimal Places
 q
%0CBs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0CBs3 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %dataold(2)=$p($g(%dataold(1)),"||",1,1)
 i %dataold(2)'="",$d(^TTST(%dataold(2)))
 e  g %0CBdun
 s %mmmsqln=$g(^TTST(%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(6)=$p(%mmmsqln,"\",4)
 
 s %val=$P(%dataold(3),$C(1)) d %0CBs1:%val'="" s $P(%dataold(3),$C(1),2)=%val
 s %val=$P(%dataold(4),$C(1)) d %0CBs1:%val'="" s $P(%dataold(4),$C(1),2)=%val
 d %0CBr2
 s %val=$P(%dataold(7),$C(1)) d %0CBs3:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Cc
%0CBdun 
%0CAdun 
%0Cc q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(5)'="",$d(^TTST(%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
]]></Routine>
</Export>
