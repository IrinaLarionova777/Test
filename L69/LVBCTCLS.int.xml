<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTCLS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTCLS ; ML 30/6/2000 ; MVB Control code access for CT_ClientsSpecificRoutine
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTCLS(ROWID,skip)
 ; $$open^LVBCTCLS(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTCLS(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTCLS(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTCLS(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTCLS()
 ; $$insert^LVBCTCLS()
 ; $$update^LVBCTCLS(ROWID)
 ; $$delete^LVBCTCLS(ROWID,Comments)
 ; $$getall^LVBCTCLS(routine)
 ;
  ;---&SQL(DECLARE CTCLS CURSOR FOR SELECT * FROM CT_ClientsSpecificRoutine
   ;---         WHERE ((CTCLS_ROUTINE = :routine) OR (:routine IS NULL))
   ;---         ORDER BY CTCLS_ROUTINE,CTCLS_DisplayOrder)
   ;--- ** SQL PUBLIC Variables: SQLCODE, routine
 ;
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_ClientsSpecificRoutine VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CT_ClientsSpecificRoutine VALUES :PLIST() WHERE CTCLS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_ClientsSpecificRoutine WHERE CTCLS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) s routine=$g(routine),skip=$g(skip)
  ;---&SQL(OPEN CTCLS)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTCLS0o
 q 0
 ; fetch the data
fetch(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s routine=$g(routine),skip=$g(skip)
  ;---&SQL(FETCH CTCLS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) s routine=$g(routine),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(routine,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) n (routine,skip,PLIST) s routine=$g(routine),skip=$g(skip) k ^TMP($zn,$j)
 i $$open(routine,skip)
 f cnt=1:1 q:$$fetch(routine,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE CTCLS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTCLS0c
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s ROWID=$g(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_ClientsSpecificRoutine WHERE CTCLS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
getall(routine) n (PLIST,routine) k ^TMP($zn,$j) s routine=$g(routine)
 i $$open(routine,"Y")
 f cnt=1:1 q:$$fetch(routine,"Y")  f J=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(2),J)=$p(PLIST(J),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; copy routine parameters
copy(routine) n (routine) s routine=$g(routine)
 m ^TTAB("REPORT-ROUTINE",routine)=^SS("REPORT-ROUTINE",routine)
 q 0
%CTCLS0o s $zt="%CTCLS0E" s SQLCODE=$s($g(%CTCLS0c):-101,1:0) q:SQLCODE'=0  s %CTCLS0d(14)=0 s %CTCLS0d(15)=0,%CTCLS0d(16)=""
 s %CTCLS0d(10)=$g(routine),%CTCLS0d(11)=$g(routine)
 s %CTCLS0t(1)=$i(^||%sql.temp)
 s %CTCLS0c=1 q
%CTCLS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTCLS0c,%CTCLS0d,%CTCLS0E,%CTCLS0l,%CTCLS0n,%CTCLS0R,%CTCLS0s,%CTCLS0t,%CTCLS0Z q
%0Afirst s %CTCLS0d(13)=""
 k ^||%sql.temp(%CTCLS0t(1),0) s ^||%sql.temp(%CTCLS0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTCLS0t(1),0))
 d %0ABMod
 ; asl MOD# 4
 i $sortend(^||%sql.temp(%CTCLS0t(1),0))
 s %CTCLS0s(7)=""
%0ADk1 s %CTCLS0s(7)=$o(^||%sql.temp(%CTCLS0t(1),0,%CTCLS0s(7)))
 i %CTCLS0s(7)="" g %0ADdun
 s %CTCLS0d(7)=$s(%CTCLS0s(7)=-1E14:"",1:%CTCLS0s(7))
 s %CTCLS0s(9)=""
%0ADk2 s %CTCLS0s(9)=$o(^||%sql.temp(%CTCLS0t(1),0,%CTCLS0s(7),%CTCLS0s(9)))
 i %CTCLS0s(9)="" g %0ADk1
 s %CTCLS0d(9)=$s(%CTCLS0s(9)=-1E14:"",1:%CTCLS0s(9))
 s %CTCLS0s(13)=""
%0ADk3 s %CTCLS0s(13)=$o(^||%sql.temp(%CTCLS0t(1),0,%CTCLS0s(7),%CTCLS0s(9),%CTCLS0s(13)))
 i %CTCLS0s(13)="" g %0ADk2
 s %CTCLS0d(13)=$s(%CTCLS0s(13)=-1E14:"",1:%CTCLS0s(13))
 s %CTCLS0d(33)=$g(^||%sql.temp(%CTCLS0t(1),0,%CTCLS0s(7),%CTCLS0s(9),%CTCLS0d(13)))
 s %CTCLS0d(1)=$lg(%CTCLS0d(33),6) s %CTCLS0d(2)=$lg(%CTCLS0d(33),3) s %CTCLS0d(3)=$lg(%CTCLS0d(33),2) s %CTCLS0d(4)=$lg(%CTCLS0d(33),5) s %CTCLS0d(5)=$lg(%CTCLS0d(33),7) s %CTCLS0d(6)=$lg(%CTCLS0d(33),1) s %CTCLS0d(8)=$lg(%CTCLS0d(33),4)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTCLS0d(14)=%CTCLS0d(14)+1,%ROWCOUNT=%CTCLS0d(14),%ROWID=%CTCLS0d(1),%CTCLS0c=10 q
%CTCLS0f i '$g(%CTCLS0c) { s SQLCODE=-102 q  } i %CTCLS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTCLS0d(14))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTCLS0d(14),%CTCLS0c=100 q  } g %0Afirst:%CTCLS0c=1
 g %0ADk3
%0ADdun 
%0AAdun 
 s %ROWCOUNT=%CTCLS0d(14),SQLCODE=100,%CTCLS0c=100 q
%CTCLS0c i '$g(%CTCLS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTCLS0d(14)),1:0) f %CTCLS0d(17)=1 { i $sortend(^||%sql.temp(%CTCLS0t(%CTCLS0d(17)),0),0) } k ^||%sql.temp(%CTCLS0t(1))
 i $zu(115,2)=1,$g(%CTCLS0d(15))=1 { l -@%CTCLS0d(16) } k %CTCLS0c,%CTCLS0d,%CTCLS0E,%CTCLS0l,%CTCLS0n,%CTCLS0R,%CTCLS0s,%CTCLS0t,%CTCLS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTCLS0c=100
 f %CTCLS0d(17)=1 i $sortend(^||%sql.temp(%CTCLS0t(%CTCLS0d(17)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTCLS0d(7)=""
%0ABk1 s %CTCLS0d(7)=$o(^TTAB("REPORT-ROUTINE",%CTCLS0d(7)))
 i %CTCLS0d(7)="" g %0ABdun
 i '((%CTCLS0d(7)=%CTCLS0d(10))||(%CTCLS0d(11)="")) g %0ABk1
 s %CTCLS0d(2)=""
%0ABk2 s %CTCLS0d(2)=$o(^TTAB("REPORT-ROUTINE",%CTCLS0d(7),%CTCLS0d(2)))
 i %CTCLS0d(2)="" g %0ABk1
 s %CTCLS0d(8)=""
%0ABk3 s %CTCLS0d(8)=$o(^TTAB("REPORT-ROUTINE",%CTCLS0d(7),%CTCLS0d(2),%CTCLS0d(8)))
 i %CTCLS0d(8)="" g %0ABk2
 s %CTCLS0d(24)=$g(^TTAB("REPORT-ROUTINE",%CTCLS0d(7),%CTCLS0d(2),%CTCLS0d(8)))
 s %CTCLS0d(3)=$p(%CTCLS0d(24),"\",1) s %CTCLS0d(4)=$p(%CTCLS0d(24),"\",2) s %CTCLS0d(5)=$p(%CTCLS0d(24),"\",4) s %CTCLS0d(6)=$p(%CTCLS0d(24),"\",3) s %CTCLS0d(9)=$p(%CTCLS0d(24),"\",5)
 s %CTCLS0d(1)=(%CTCLS0d(7))_"||"_(%CTCLS0d(2))_"||"_(%CTCLS0d(8))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("REPORT-ROUTINE",$p(%CTCLS0d(1),"||",1),$p(%CTCLS0d(1),"||",2),$p(%CTCLS0d(1),"||",3))#"S":$zu(115,4) i $t { s %CTCLS0d(15)=1,%CTCLS0d(16)=$name(^TTAB("REPORT-ROUTINE",$p(%CTCLS0d(1),"||",1),$p(%CTCLS0d(1),"||",2),$p(%CTCLS0d(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ClientsSpecificRoutine for RowID value: "_%CTCLS0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTCLS0d(7)=$p(%CTCLS0d(1),"||"),%CTCLS0d(2)=$p(%CTCLS0d(1),"||",2),%CTCLS0d(8)=$p(%CTCLS0d(1),"||",3)
 i %CTCLS0d(7)'="",%CTCLS0d(2)'="",%CTCLS0d(8)'="",$d(^TTAB("REPORT-ROUTINE",%CTCLS0d(7),%CTCLS0d(2),%CTCLS0d(8)))
 e  g %0ACdun
 s %CTCLS0d(31)=$g(^TTAB("REPORT-ROUTINE",%CTCLS0d(7),%CTCLS0d(2),%CTCLS0d(8)))
 s %CTCLS0d(3)=$p(%CTCLS0d(31),"\",1) s %CTCLS0d(4)=$p(%CTCLS0d(31),"\",2) s %CTCLS0d(5)=$p(%CTCLS0d(31),"\",4) s %CTCLS0d(6)=$p(%CTCLS0d(31),"\",3) s %CTCLS0d(9)=$p(%CTCLS0d(31),"\",5)
%0ABuncommitted ;
 s %CTCLS0s(7)=$s(%CTCLS0d(7)'="":%CTCLS0d(7),1:-1E14),%CTCLS0s(9)=$s(%CTCLS0d(9)'="":%CTCLS0d(9),1:-1E14),%CTCLS0d(13)=%CTCLS0d(13)+1,%CTCLS0d(32)="",$li(%CTCLS0d(32),6)=%CTCLS0d(1),$li(%CTCLS0d(32),3)=%CTCLS0d(2),$li(%CTCLS0d(32),2)=%CTCLS0d(3),$li(%CTCLS0d(32),5)=%CTCLS0d(4),$li(%CTCLS0d(32),7)=%CTCLS0d(5),$li(%CTCLS0d(32),1)=%CTCLS0d(6),$li(%CTCLS0d(32),4)=%CTCLS0d(8),^||%sql.temp(%CTCLS0t(1),0,%CTCLS0s(7),%CTCLS0s(9),%CTCLS0d(13))=%CTCLS0d(32)
%0ACdun i $zu(115,2)=1,$g(%CTCLS0d(15))=1 { l -@%CTCLS0d(16) s %CTCLS0d(15)=0 }
 g %0ABk3
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTClientsSpecificRoutine.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("REPORT-ROUTINE",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0EBdun
 s %mmmsqld(15)=$$%getlock^User.CTClientsSpecificRoutine.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("REPORT-ROUTINE",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0ECdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTClientsSpecificRoutine.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTClientsSpecificRoutine.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTClientsSpecificRoutine.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTClientsSpecificRoutine.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("REPORT-ROUTINE",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5)))
 e  g %0GBdun
 s %mmmsqld(14)=$$%getlock^User.CTClientsSpecificRoutine.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("REPORT-ROUTINE",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5)))
 e  g %0GCdun
 d %delete^User.CTClientsSpecificRoutine.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTClientsSpecificRoutine.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTClientsSpecificRoutine.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTClientsSpecificRoutine.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTCLS0f q:SQLCODE'=0
 s PLIST(1)=%CTCLS0d(1),PLIST(2)=%CTCLS0d(2),PLIST(3)=%CTCLS0d(3),PLIST(4)=%CTCLS0d(4),PLIST(5)=%CTCLS0d(5),PLIST(6)=%CTCLS0d(6),PLIST(7)=%CTCLS0d(7),PLIST(8)=%CTCLS0d(8),PLIST(9)=%CTCLS0d(9)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(11)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(11)
 s PLIST(7)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(8)=$p(PLIST(1),"||",3)
 i PLIST(7)'="",PLIST(2)'="",PLIST(8)'="",$d(^TTAB("REPORT-ROUTINE",PLIST(7),PLIST(2),PLIST(8)))
 e  g %0LBdun
 s %mmmsqld(21)=$g(^TTAB("REPORT-ROUTINE",PLIST(7),PLIST(2),PLIST(8)))
 s PLIST(3)=$p(%mmmsqld(21),"\",1) s PLIST(4)=$p(%mmmsqld(21),"\",2) s PLIST(5)=$p(%mmmsqld(21),"\",4) s PLIST(6)=$p(%mmmsqld(21),"\",3) s PLIST(9)=$p(%mmmsqld(21),"\",5)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("REPORT-ROUTINE",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TTAB("REPORT-ROUTINE",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ClientsSpecificRoutine for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(7)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(8)=$p(PLIST(1),"||",3)
 i PLIST(7)'="",PLIST(2)'="",PLIST(8)'="",$d(^TTAB("REPORT-ROUTINE",PLIST(7),PLIST(2),PLIST(8)))
 e  g %0LCdun
 s %mmmsqld(28)=$g(^TTAB("REPORT-ROUTINE",PLIST(7),PLIST(2),PLIST(8)))
 s PLIST(3)=$p(%mmmsqld(28),"\",1) s PLIST(4)=$p(%mmmsqld(28),"\",2) s PLIST(5)=$p(%mmmsqld(28),"\",4) s PLIST(6)=$p(%mmmsqld(28),"\",3) s PLIST(9)=$p(%mmmsqld(28),"\",5)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
