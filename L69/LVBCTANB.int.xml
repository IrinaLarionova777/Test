<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTANB" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTANB ; IG 1/5/98 ; LVB Control data access for CTANB CT_AntibioticsCommLang
 ;
 ; supported calls:
 ;
 ; $$save^LVBCTANB(RowID)
 ; $$select^LVBCTANB(ROWID,skip)
 ; $$open^LVBCTANB(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTANB(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTANB(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTANB(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTANB()
 ; $$getall^LVBCTANB(par)
 ;
  ;---&sql(DECLARE CTANB CURSOR FOR SELECT * FROM CT_AntibioticsCommLang
   ;---         WHERE CTANB_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTANB)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTANB0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTANB INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTANB)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTANB0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql(SELECT * INTO :PLIST() FROM CT_AntibioticsCommLang WHERE CTANB_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
save(RowID) d pre s PLIST(0)=$p(RowID,"||",1)
 f j=1,2 s @("x"_j)=$p(RowID,"||",j)
 s SQLCODE=100 i $l(x1),$l(x2) d
 . ;---i $d(^TTAB("ANT-COMM",x1,"LAN",x2)) &sql(UPDATE CT_AntibioticsCommLang VALUES :PLIST() WHERE CTANB_RowID=:RowID)
  . ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 .i $d(^TTAB("ANT-COMM",x1,"LAN",x2)) Do %0Ho
 . ;---i '$d(^TTAB("ANT-COMM",x1,"LAN",x2)) k PLIST(1) &sql(INSERT INTO CT_AntibioticsCommLang VALUES :PLIST())
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .i '$d(^TTAB("ANT-COMM",x1,"LAN",x2)) k PLIST(1) Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 f J=2 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^MVBSSLAN(plist(J),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 q
 ;
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par,"Y")
 f cnt=1:1 q:$$fetch(par,"Y")  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p($p(PLIST(3),$c(1)),"|")_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTANB0o s $zt="%CTANB0E" s SQLCODE=$s($g(%CTANB0c):-101,1:0) q:SQLCODE'=0  s %CTANB0d(8)=0 s %CTANB0d(9)=0,%CTANB0d(10)=""
 s %CTANB0d(5)=$g(par)
 s %CTANB0c=1 q
%CTANB0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTANB0c,%CTANB0d,%CTANB0E,%CTANB0l,%CTANB0n,%CTANB0R,%CTANB0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTANB0d(1)=%CTANB0d(5)
 i %CTANB0d(1)="" g %0ABdun
 s %CTANB0d(3)=""
%0ABk1 s %CTANB0d(3)=$o(^TTAB("ANT-COMM",%CTANB0d(1),"LAN",%CTANB0d(3)))
 i %CTANB0d(3)="" g %0ABdun
 s %CTANB0d(4)=$g(^TTAB("ANT-COMM",%CTANB0d(1),"LAN",%CTANB0d(3)))
 s %CTANB0d(2)=(%CTANB0d(1))_"||"_(%CTANB0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("ANT-COMM",$p(%CTANB0d(2),"||",1),"LAN",$p(%CTANB0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTANB0d(9)=1,%CTANB0d(10)=$name(^TTAB("ANT-COMM",$p(%CTANB0d(2),"||",1),"LAN",$p(%CTANB0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_AntibioticsCommLang for RowID value: "_%CTANB0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTANB0d(7)=$p(%CTANB0d(2),"||"),%CTANB0d(3)=$p(%CTANB0d(2),"||",2)
 i %CTANB0d(7)'="",%CTANB0d(3)'="",$d(^TTAB("ANT-COMM",%CTANB0d(7),"LAN",%CTANB0d(3)))
 e  g %0ACdun
 s %CTANB0d(4)=$g(^TTAB("ANT-COMM",%CTANB0d(7),"LAN",%CTANB0d(3)))
 s %CTANB0d(1)=$p(%CTANB0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTANB0d(8)=%CTANB0d(8)+1,%ROWCOUNT=%CTANB0d(8),%ROWID=%CTANB0d(2),%CTANB0c=10 q
%CTANB0f i '$g(%CTANB0c) { s SQLCODE=-102 q  } i %CTANB0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTANB0d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTANB0d(8),%CTANB0c=100 q  } g %0Afirst:%CTANB0c=1
%0ACdun i $zu(115,2)=1,$g(%CTANB0d(9))=1 { l -@%CTANB0d(10) s %CTANB0d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTANB0d(8),SQLCODE=100,%CTANB0c=100 q
%CTANB0c i '$g(%CTANB0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTANB0d(8)),1:0)
 i $zu(115,2)=1,$g(%CTANB0d(9))=1 { l -@%CTANB0d(10) } k %CTANB0c,%CTANB0d,%CTANB0E,%CTANB0l,%CTANB0n,%CTANB0R,%CTANB0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTANB0c=100 q
%0Do d %CTANB0f q:SQLCODE'=0
 s PLIST(0)=%CTANB0d(1),PLIST(1)=%CTANB0d(2),PLIST(2)=%CTANB0d(3),PLIST(3)=%CTANB0d(4)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(6)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("ANT-COMM",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0FBdun
 s PLIST(3)=$g(^TTAB("ANT-COMM",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("ANT-COMM",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("ANT-COMM",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_AntibioticsCommLang for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("ANT-COMM",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0FCdun
 s PLIST(3)=$g(^TTAB("ANT-COMM",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("ANT-COMM",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0HBdun
 s %mmmsqld(15)=$$%getlock^User.CTAntibioticsCommLang.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("ANT-COMM",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0HCdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTAntibioticsCommLang.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTAntibioticsCommLang.T1(%mmmsqld(2)) g %0Hc
%0HCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTAntibioticsCommLang.T1(%mmmsqld(2)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTAntibioticsCommLang.T1(%mmmsqld(2)) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTAntibioticsCommLang.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
]]></Routine>
</Export>
