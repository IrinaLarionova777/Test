<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt3451" type="INT" languagemode="0"><![CDATA[
mt3451  ; Compiled May 10, 2007 11:24:24 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt3451(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt3451(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(0))'="",$g(%data(2))'="" d
 . s %data(1)=$g(%data(0))_"||"_$g(%data(2))
 . d insertnw^mt3451(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt3451 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:13 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt3451(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:13 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt3451(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt3451 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TMCB($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2),$p(%ROWID,"||",3,3)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TMCB($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2),$p(%ROWID,"||",3,3))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0,subs(2517)=$p(%data(1),"||",1,1),subs(2518)=$p(%data(1),"||",2,2)
 i $g(tupkill) k ^TMCB(subs(2517),subs(2518),%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TMCB(subs(2517),subs(2518),%data(2))) s $p(tempn,"\",1)=$p($g(%data(3)),$c(1))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TMCB(subs(2517),subs(2518),%data(2))) s $p(tempn,"\",2)=$p($g(%data(4)),$c(1))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TMCB(subs(2517),subs(2518),%data(2))) s $p(tempn,"\",3)=$p($g(%data(10)),$c(1))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TMCB(subs(2517),subs(2518),%data(2))) s $p(tempn,"\",4)=$p($g(%data(11)),$c(1))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^TMCB(subs(2517),subs(2518),%data(2))) s $p(tempn,"\",5)=$p($g(%data(12)),$c(1))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^TMCB(subs(2517),subs(2518),%data(2))) s $p(tempn,"\",6)=$g(%data(13))
 s:$d(tempn)#2 ^TMCB(subs(2517),subs(2518),%data(2))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(8)):%edit(8),1:$g(%data(8))) i sn(1)'="" s sn(2)=$s($d(%edit(9)):$p(%edit(9),$c(1),1),1:$p($g(%data(9)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(3)'="" s sn(4)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(4)'=""
 i  i $d(^TDEB(sn(1),sn(2),0,sn(3),"INVOICE",sn(4))) s:'$g(tupkill) node=0,tempn=^TDEB(sn(1),sn(2),0,sn(3),"INVOICE",sn(4)) k ^TDEB(sn(1),sn(2),0,sn(3),"INVOICE",sn(4))
 i '$g(tupkill) s sn(1)=$g(%data(8)) i sn(1)'="" s sn(2)=$p($g(%data(9)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(2)) i sn(3)'="" s sn(4)=$g(%data(1)) i sn(4)'=""
 e  g map1dun
 s ^TDEB(sn(1),sn(2),0,sn(3),"INVOICE",sn(4))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(8)):%edit(8),1:$g(%data(8))) i sn(1)'="" s sn(2)=$s($d(%edit(6)):$p(%edit(6),$c(1),1),1:$p($g(%data(6)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(3)'=""
 i  i $d(^TDEB(sn(1),sn(2),1,"INVOICE",sn(3))) s:'$g(tupkill) node=0,tempn=^TDEB(sn(1),sn(2),1,"INVOICE",sn(3)) k ^TDEB(sn(1),sn(2),1,"INVOICE",sn(3))
 i '$g(tupkill) s sn(1)=$g(%data(8)) i sn(1)'="" s sn(2)=$p($g(%data(6)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(1)) i sn(3)'=""
 e  g map2dun
 s ^TDEB(sn(1),sn(2),1,"INVOICE",sn(3))=tempn
map2dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(1)'="" s sn(2)=$s($d(%edit(6)):$p(%edit(6),$c(1),1),1:$p($g(%data(6)),$c(1),1)) i sn(2)'="" s sn(3)=$g(subs(2517)) i sn(3)'="" s sn(4)=$g(subs(2518)) i sn(4)'=""
 i  i $d(^TEPI(sn(1),"INV",sn(2),sn(3),sn(4))) s:'$g(tupkill) node=0,tempn=^TEPI(sn(1),"INV",sn(2),sn(3),sn(4)) k ^TEPI(sn(1),"INV",sn(2),sn(3),sn(4))
 i '$g(tupkill) s sn(1)=$g(%data(2)) i sn(1)'="" s sn(2)=$p($g(%data(6)),$c(1),1) i sn(2)'="" s sn(3)=$g(subs(2517)) i sn(3)'="" s sn(4)=$g(subs(2518)) i sn(4)'=""
 e  g map3dun
 s ^TEPI(sn(1),"INV",sn(2),sn(3),sn(4))=tempn
map3dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(13)):%edit(13),1:$g(%data(13))) i sn(1)'="" s sn(2)=$g(subs(2517)) i sn(2)'="" s sn(3)=$g(subs(2518)) i sn(3)'="" s sn(4)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(4)'=""
 i  i $d(^TMCBi("UN",sn(1),sn(2),sn(3),sn(4))) s:'$g(tupkill) node=0,tempn=^TMCBi("UN",sn(1),sn(2),sn(3),sn(4)) k ^TMCBi("UN",sn(1),sn(2),sn(3),sn(4))
 i '$g(tupkill) s sn(1)=$g(%data(13)) i sn(1)'="" s sn(2)=$g(subs(2517)) i sn(2)'="" s sn(3)=$g(subs(2518)) i sn(3)'="" s sn(4)=$g(%data(2)) i sn(4)'=""
 e  g map4dun
 s ^TMCBi("UN",sn(1),sn(2),sn(3),sn(4))=tempn
map4dun q
%0ABr3 s %dataold(5)=$$CT005^at345($g(%dataold(0))) q  ;  Code for update (get old values) of table: INV_BatchEpisode
%0ABr4 s $P(%dataold(6),$C(1))=$$CT006^at345($g(%dataold(0))) q
%0ABr6 s %dataold(7)=$$CT007^at345($g(%dataold(2)),$g(%dataold(0))) q
%0ABr7 s %dataold(8)=$$CT008^at345($g(%dataold(2))) q
%0ABr8 s $P(%dataold(9),$C(1))=$$CT009^at345($g(%dataold(2))) q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0ABs5 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %mmmsqld(18)=$p($g(%dataold(1)),"||",1,1),%mmmsqld(19)=$p($g(%dataold(1)),"||",2,2),%dataold(2)=$p($g(%dataold(1)),"||",3,3)
 i %mmmsqld(18)'="",%mmmsqld(19)'="",%dataold(2)'="",$d(^TMCB(%mmmsqld(18),%mmmsqld(19),%dataold(2)))
 e  g %0ABdun
 s %mmmsqln=$g(^TMCB(%mmmsqld(18),%mmmsqld(19),%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s:%dataold(3)'="" %dataold(3)=+%dataold(3) s %dataold(4)=$p(%mmmsqln,"\",2) s:%dataold(4)'="" %dataold(4)=+%dataold(4) s %dataold(10)=$p(%mmmsqln,"\",3) s:%dataold(10)'="" %dataold(10)=+%dataold(10) s %dataold(11)=$p(%mmmsqln,"\",4) s:%dataold(11)'="" %dataold(11)=+%dataold(11)
 s %dataold(12)=$p(%mmmsqln,"\",5) s:%dataold(12)'="" %dataold(12)=+%dataold(12) s %dataold(13)=$p(%mmmsqln,"\",6)
 s %dataold(0)=$p(%dataold(1),"||",1,2)
 
 s %val=$P(%dataold(3),$C(1)) d %0ABs1:%val'="" s $P(%dataold(3),$C(1),2)=%val
 s %val=$P(%dataold(4),$C(1)) d %0ABs2:%val'="" s $P(%dataold(4),$C(1),2)=%val
 s %val=$P(%dataold(10),$C(1)) d %0ABs1:%val'="" s $P(%dataold(10),$C(1),2)=%val
 s %val=$P(%dataold(11),$C(1)) d %0ABs1:%val'="" s $P(%dataold(11),$C(1),2)=%val
 s %val=$P(%dataold(12),$C(1)) d %0ABs1:%val'="" s $P(%dataold(12),$C(1),2)=%val
 d %0ABr3
 d %0ABr4
 s %val=$P(%dataold(6),$C(1)) d %0ABs5:%val'="" s $P(%dataold(6),$C(1),2)=%val
 d %0ABr6
 d %0ABr7
 d %0ABr8
 s %val=$P(%dataold(9),$C(1)) d %0ABs5:%val'="" s $P(%dataold(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
getold(%dataold) g %0Ao
code5 ; compute code of field INVBP_Company_DR
 s %data(5)=""
 s %data(5)=$$CT005^at345($g(%data(0)))
 q
comp5 ; entry point to do computed field INVBP_Company_DR
 n %oldval q:(","_$g(trak)_",")[(",5,")
 s %oldval=$g(%data(5)) d code5 s %ok=1 i $g(%data(5))=%oldval q
 s %val=$p($g(%data(5)),$c(1)) d:%val'="" fdv5^mt3451 s:'%ok %data(5)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","INVBP_Company_DR","",%msg) q
 i $g(%data(5))="",%oldval="" q
 q
code6 ; compute code of field INVBP_DateOfCreation
 s $p(%data(6),$c(1))=""
 s $p(%data(6),$c(1))=$$CT006^at345($g(%data(0)))
 q
comp6 ; entry point to do computed field INVBP_DateOfCreation
 n %oldval q:(","_$g(trak)_",")[(",6,")
 s %oldval=$g(%data(6)) d code6 s %ok=1 i $g(%data(6))=%oldval q
 s %val=%data(6)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde6 s $p(%data(6),$c(1))=%val
 s %val=$p($g(%data(6)),$c(1)) d:%val'="" fdv6^mt3451 s:'%ok %data(6)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","INVBP_DateOfCreation","",%msg) q
 s %val=$p(%data(6),$c(1))
 d:%val'="" fdi6 s $p(%data(6),$c(1),2)=%val
 i $g(%data(6))="",%oldval="" q
 s:'$d(%edit(6)) %edit(6)=%oldval k:$g(%data(6))=$g(%edit(6)) %edit(6)
 q
code7 ; compute code of field INVBP_RebillFlags
 s %data(7)=""
 s %data(7)=$$CT007^at345($g(%data(2)),$g(%data(0)))
 q
comp7 ; entry point to do computed field INVBP_RebillFlags
 n %oldval q:(","_$g(trak)_",")[(",7,")
 s %oldval=$g(%data(7)) d code7 s %ok=1 i $g(%data(7))=%oldval q
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","INVBP_RebillFlags","",%msg) q
 i $g(%data(7))="",%oldval="" q
 q
code8 ; compute code of field INVBP_DebtorNumber_DR
 s %data(8)=""
 s %data(8)=$$CT008^at345($g(%data(2)))
 q
comp8 ; entry point to do computed field INVBP_DebtorNumber_DR
 n %oldval q:(","_$g(trak)_",")[(",8,")
 s %oldval=$g(%data(8)) d code8 s %ok=1 i $g(%data(8))=%oldval q
 s %val=$p($g(%data(8)),$c(1)) d:%val'="" fdv8^mt3451 s:'%ok %data(8)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","INVBP_DebtorNumber_DR","",%msg) q
 i $g(%data(8))="",%oldval="" q
 s:'$d(%edit(8)) %edit(8)=%oldval k:$g(%data(8))=$g(%edit(8)) %edit(8)
 q
code9 ; compute code of field INVBP_DateOfCollection
 s $p(%data(9),$c(1))=""
 s $p(%data(9),$c(1))=$$CT009^at345($g(%data(2)))
 q
comp9 ; entry point to do computed field INVBP_DateOfCollection
 n %oldval q:(","_$g(trak)_",")[(",9,")
 s %oldval=$g(%data(9)) d code9 s %ok=1 i $g(%data(9))=%oldval q
 s %val=%data(9)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde6 s $p(%data(9),$c(1))=%val
 s %val=$p($g(%data(9)),$c(1)) d:%val'="" fdv6^mt3451 s:'%ok %data(9)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","INVBP_DateOfCollection","",%msg) q
 s %val=$p(%data(9),$c(1))
 d:%val'="" fdi6 s $p(%data(9),$c(1),2)=%val
 i $g(%data(9))="",%oldval="" q
 s:'$d(%edit(9)) %edit(9)=%oldval k:$g(%data(9))=$g(%edit(9)) %edit(9)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"INV_BatchEpisode"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="INV_BatchEpisode Row ID" d %mdiag(%oper,-106,"Fld Int","Req","INVBP_RowID","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(0)) s %ok="INV_Batch Parent Reference" d %mdiag(%oper,-106,"Fld Int","Req","INVBP_ParRef","",%ok) s %msg=%ok,%ok=0
 q
inf0 ; get value for field INVBP_ParRef
 i $c(1)'[$g(%data(0)),$p(%data(0),$c(1))="" s %val=$p(%data(0),$c(1),2) g ine0
 i $c(1)'[$g(%data(0)) s %val=$p(%data(0),$c(1)) g ini0
 i $c(1)'[$g(%insert(0)),$p(%insert(0),$c(1))="" s %val=$p(%insert(0),$c(1),2) g ine0
 i $c(1)'[$g(%insert(0)) s %val=$p(%insert(0),$c(1)) g ini0
 s %val=$g(da344)
ine0 ; external to internal conversion code for field INVBP_ParRef
ini0 ; internal validation code and uniqueness, also int-ext
 d fdv0^mt3451 q:'%ok
 s %data(0)=%val
 s:$c(1)[%data(0) %ok=0 s:%ok %edit(0)=""
 q
inf2 ; get value for field INVBP_Episode_DR
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field INVBP_Episode_DR
ini2 ; internal validation code and uniqueness, also int-ext
 d fdv2^mt3451 q:'%ok
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table INV_BatchEpisode
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf0 i '%ok g:'iform rowiderr s rowerr=1
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(0),$c(1))_"||"_$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt3451 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1,2) g:%val="" rowiderr d ini0 g:'%ok rowiderr
 s %val=$p(%data(1),"||",3) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,0,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt3451
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,0,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp5^mt3451 d comp6^mt3451 d comp7^mt3451 d comp8^mt3451 d comp9^mt3451
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde3 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde4 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,0,"",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde6 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(0)),$p(%data(0),$c(1))="",$p(%data(0),$c(1),2)'="" s %val=$p(%data(0),$c(1),2) s %data(0)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=3 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","INVBP_Amount","",$g(%msg))
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=4 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","INVBP_Sequence","",$g(%msg))
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=6 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","INVBP_DateOfCreation","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) s %data(8)=%val
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=9 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","INVBP_DateOfCollection","",$g(%msg))
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=10 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","INVBP_AmountGSTFree","",$g(%msg))
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=11 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","INVBP_AmountGSTTaxable","",$g(%msg))
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=12 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","INVBP_AmountGST","",$g(%msg))
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 q
fdv0 ; DO validation and additional validation code
 n nval s nval=%val d %0Do
  i SQLCODE'=0 s %ok=0
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMCB(%mmmsqld(4),%mmmsqld(5)))
 e  g %0DBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv2 ; DO validation and additional validation code
 n nval s nval=%val d %0Eo
  i SQLCODE'=0 s %ok=0
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0EBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
fdv3 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
fdv4 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q:'%ok
 i $l($p(%val,".",2))>0 s %ok=0,%msg=$$setmsg^%qarzst("DTNNDEC")
 q
fdv5 ; DO validation and additional validation code
 n nval s nval=%val d %0Fo
  i SQLCODE'=0 s %ok=0
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("CO",%mmmsqld(4)))
 e  g %0FBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
fdv6 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv8 ; DO validation and additional validation code
 n nval s nval=%val d %0Go
  i SQLCODE'=0 s %ok=0
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TDEB(%mmmsqld(4)))
 e  g %0GBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
uniq1(%rowid,%unique) n SQLCODE,%val d %0Co q SQLCODE=100
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2),%mmmsqld(7)=$p($g(%mmmsqld(1)),"||",3,3)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TMCB(%mmmsqld(5),%mmmsqld(6),%mmmsqld(7)))
 e  g %0CBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Cc
%0CBdun 
%0CAdun 
%0Cc q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="INVBP_RowID"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","INVBP_RowID","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_RowID","",$g(%msg))
 i $d(%edit(0)),%data(0)'=%edit(0) s %icol=0 s %val=$p(%data(0),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv0 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_ParRef","",$g(%msg))
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_Episode_DR","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_Amount","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_Sequence","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_Company_DR","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_DateOfCreation","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_DebtorNumber_DR","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_DateOfCollection","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_AmountGSTFree","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_AmountGSTTaxable","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","INVBP_AmountGST","",$g(%msg))
 q
fdi3 s %val=$s(%val'=+%val:"",1:$fn(%val,""))
 q
fdi4 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0))
 q
fdi6 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4)
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(0)),%data(0)[$c(1) s %data(0)=$s($p(%data(0),$c(1))'="":$p(%data(0),$c(1)),1:$p(%data(0),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),$p(%data(3),$c(1))'="" s %val=$p(%data(3),$c(1)) d fdi3 s $p(%data(3),$c(1),2)=%val
 i $d(%data(4)),$p(%data(4),$c(1))'="" s %val=$p(%data(4),$c(1)) d fdi4 s $p(%data(4),$c(1),2)=%val
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),$p(%data(6),$c(1))'="" s %val=$p(%data(6),$c(1)) d fdi6 s $p(%data(6),$c(1),2)=%val
 i $d(%data(7)),%data(7)[$c(1) s %data(7)=$s($p(%data(7),$c(1))'="":$p(%data(7),$c(1)),1:$p(%data(7),$c(1),2))
 i $d(%data(8)),%data(8)[$c(1) s %data(8)=$s($p(%data(8),$c(1))'="":$p(%data(8),$c(1)),1:$p(%data(8),$c(1),2))
 i $d(%data(9)),$p(%data(9),$c(1))'="" s %val=$p(%data(9),$c(1)) d fdi6 s $p(%data(9),$c(1),2)=%val
 i $d(%data(10)),$p(%data(10),$c(1))'="" s %val=$p(%data(10),$c(1)) d fdi3 s $p(%data(10),$c(1),2)=%val
 i $d(%data(11)),$p(%data(11),$c(1))'="" s %val=$p(%data(11),$c(1)) d fdi3 s $p(%data(11),$c(1),2)=%val
 i $d(%data(12)),$p(%data(12),$c(1))'="" s %val=$p(%data(12),$c(1)) d fdi3 s $p(%data(12),$c(1),2)=%val
 i $d(%data(13)),%data(13)[$c(1) s %data(13)=$s($p(%data(13),$c(1))'="":$p(%data(13),$c(1)),1:$p(%data(13),$c(1),2))
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt3451 q:'%ok
 d comp5^mt3451 d comp6^mt3451 d comp7^mt3451 d comp8^mt3451 d comp9^mt3451
 q
 g ^mt3452
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
