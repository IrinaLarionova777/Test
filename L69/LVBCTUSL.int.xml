<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTUSL" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTUSL ; IG 4/5/98 ; MVB Control code access for CT_UserLocation
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTUSL(ROWID,skip,user)
 ; $$seldata^LVBCTUSL(ROWID,data)
 ; $$open^LVBCTUSL(desc,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTUSL(desc,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTUSL(desc,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTUSL(desc,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTUSL()
 ; $$insert^LVBCTUSL()
 ; $$update^LVBCTUSL(ROWID)
 ; $$delete^LVBCTUSL(ROWID,Comments)
 ; $$getall^LVBCTUSL(user,Continue,reporting)
 ; $$ValUser^LVBCTUSL(user,site,reporting)
 ;
  ;---&SQL(DECLARE CTUSL CURSOR FOR SELECT * FROM CT_UserLocation
   ;---         WHERE %ALPHAUP(CTUSL_DESC) %STARTSWITH %ALPHAUP(:desc)
   ;---         ORDER BY CTUSL_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, desc
FIX k ^TTABi("USLOC") s a="" f  s a=$o(^TTAB("USLOC",a)) q:a=""  d
 .i '$$select(a,"Y") s PLIST(9)=99999,err=$$update(a) i err w !,a," ",err
 d ##class(User.CTUserLocation).%BuildIndices()
 q
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_UserLocation VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CT_UserLocation VALUES :PLIST() WHERE CTUSL_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_UserLocation WHERE CTUSL_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(desc,skip,user,p3,p4,p5,p6,p7,p8,p9) s desc=$g(desc),skip=$g(skip),user=$g(user)
  ;---&SQL(OPEN CTUSL)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTUSL0o
 Q 0
 ;
 ; Fetch the data
fetch(desc,skip,user,p3,p4,p5,p6,p7,p8,p9) K PLIST s desc=$g(desc),skip=$g(skip),user=$g(user)
  ;---f  &SQL(FETCH CTUSL INTO :PLIST()) q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 f  Do %0Jo q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(desc,skip,user,p3,p4,p5,p6,p7,p8,p9) s desc=$g(desc),skip=$g(skip),user=$g(user) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(desc,skip,user) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(desc,skip,user,p3,p4,p5,p6,p7,p8,p9) N (desc,skip,user,PLIST) s desc=$g(desc),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(desc,skip)
 f cnt=1:1 Q:$$fetch(desc,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTUSL) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTUSL0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip,user) K PLIST S ROWID=$G(ROWID),skip=$g(skip),user=$g(user)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_UserLocation WHERE CTUSL_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE s SQLCODE=$$ValUser(user,$p(PLIST(1),$c(1))) i 'SQLCODE d adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=3 s result=$p($g(^TTAB("USLOC",ROWID)),"\",1) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
 ;
getall(user,Continue,reporting) n (user,Continue,reporting,PLIST) s user=$g(user),Continue=$g(Continue),reporting=$g(reporting)
 i Continue'="Y" d
 .k ^TMP($zn,$j)
 .i $$open(,"Y",user)
 .f cnt=1:1 q:$$fetch(,"Y",user)  d
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s str=str_$c(29)_$$ValUser(user,$p(PLIST(1),$c(1)),reporting)
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 .i $$close()
 k PLIST
 s (x,sum)="" f cnt=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(cnt)=^(x),sum=sum+$l(^(x)) k ^(x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
 ; check user - site
ValUser(user,code,reporting) n (user,code,reporting) s user=$g(user),code=$g(code),reporting=$g(reporting),ok=0
 i $l(user),$l(code) d
 .s SecurityType=$$seldata^MVBSSUSR(user,10)
 .i '$l(SecurityType) s SecurityType=$$seldata^MVBCFLAB(1,66)
 .i $l(reporting) s SecurityType=3
 .i $l(SecurityType),SecurityType'=1 s xxx=$$seldata^MVBSSUSR(user,12) i $l(xxx),xxx'=code s ok=$s(SecurityType=3:60,SecurityType=2:50,1:0)
 q ok
%CTUSL0o s $zt="%CTUSL0E" s SQLCODE=$s($g(%CTUSL0c):-101,1:0) q:SQLCODE'=0  s %CTUSL0d(13)=0 s %CTUSL0d(14)=0,%CTUSL0d(15)=""
 s %CTUSL0d(10)=$g(desc)
 s %CTUSL0t(1)=$i(^||%sql.temp)
 s %CTUSL0d(11)=$zu(28,%CTUSL0d(10),6)
 s %CTUSL0c=1 q
%CTUSL0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTUSL0c,%CTUSL0d,%CTUSL0E,%CTUSL0l,%CTUSL0n,%CTUSL0R,%CTUSL0s,%CTUSL0t,%CTUSL0Z q
%0Afirst 
 k ^||%sql.temp(%CTUSL0t(1),0) s ^||%sql.temp(%CTUSL0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTUSL0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTUSL0t(1),0))
 s %CTUSL0s(8)=""
%0ACk1 s %CTUSL0s(8)=$o(^||%sql.temp(%CTUSL0t(1),0,%CTUSL0s(8)))
 i %CTUSL0s(8)="" g %0ACdun
 s %CTUSL0d(8)=$s(%CTUSL0s(8)=-1E14:"",1:%CTUSL0s(8))
 s %CTUSL0s(1)=""
%0ACk2 s %CTUSL0s(1)=$o(^||%sql.temp(%CTUSL0t(1),0,%CTUSL0s(8),%CTUSL0s(1)))
 i %CTUSL0s(1)="" g %0ACk1
 s %CTUSL0d(1)=$s(%CTUSL0s(1)=-1E14:"",1:%CTUSL0s(1))
 s %CTUSL0d(23)=$g(^||%sql.temp(%CTUSL0t(1),0,%CTUSL0s(8),%CTUSL0s(1)))
 s %CTUSL0d(2)=$lg(%CTUSL0d(23),2) s %CTUSL0d(3)=$lg(%CTUSL0d(23),3) s %CTUSL0d(4)=$lg(%CTUSL0d(23),5) s %CTUSL0d(5)=$lg(%CTUSL0d(23),4) s %CTUSL0d(6)=$lg(%CTUSL0d(23),1) s %CTUSL0d(7)=$lg(%CTUSL0d(23),6)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("USLOC",$p(%CTUSL0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTUSL0d(14)=1,%CTUSL0d(15)=$name(^TTAB("USLOC",$p(%CTUSL0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_UserLocation for RowID value: "_%CTUSL0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTUSL0d(1)'="",$d(^TTAB("USLOC",%CTUSL0d(1)))
 e  g %0ADdun
 s %CTUSL0d(28)=$g(^TTAB("USLOC",%CTUSL0d(1)))
 s %CTUSL0d(2)=$p(%CTUSL0d(28),"\",1) s %CTUSL0d(3)=$p(%CTUSL0d(28),"\",2) s %CTUSL0d(4)=$p(%CTUSL0d(28),"\",3) s %CTUSL0d(5)=$p(%CTUSL0d(28),"\",4) s %CTUSL0d(6)=$p(%CTUSL0d(28),"\",5) s %CTUSL0d(7)=$p(%CTUSL0d(28),"\",6) s %CTUSL0d(8)=$p(%CTUSL0d(28),"\",7)
 s %CTUSL0d(9)=$zu(28,%CTUSL0d(2),6)
 g:'(($c(0)[%CTUSL0d(11))||(%CTUSL0d(11)=$c(32,0)&&($e(%CTUSL0d(9))=$c(32)))||(%CTUSL0d(11)=$e(%CTUSL0d(9),1,$l(%CTUSL0d(11))))) %0ADdun
 g:'(%CTUSL0d(9)'="") %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTUSL0d(13)=%CTUSL0d(13)+1,%ROWCOUNT=%CTUSL0d(13),%ROWID=%CTUSL0d(1),%CTUSL0c=10 q
%CTUSL0f i '$g(%CTUSL0c) { s SQLCODE=-102 q  } i %CTUSL0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTUSL0d(13))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTUSL0d(13),%CTUSL0c=100 q  } g %0Afirst:%CTUSL0c=1
%0ADdun i $zu(115,2)=1,$g(%CTUSL0d(14))=1 { l -@%CTUSL0d(15) s %CTUSL0d(14)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTUSL0d(13),SQLCODE=100,%CTUSL0c=100 q
%CTUSL0c i '$g(%CTUSL0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTUSL0d(13)),1:0) f %CTUSL0d(16)=1 { i $sortend(^||%sql.temp(%CTUSL0t(%CTUSL0d(16)),0),0) } k ^||%sql.temp(%CTUSL0t(1))
 i $zu(115,2)=1,$g(%CTUSL0d(14))=1 { l -@%CTUSL0d(15) } k %CTUSL0c,%CTUSL0d,%CTUSL0E,%CTUSL0l,%CTUSL0n,%CTUSL0R,%CTUSL0s,%CTUSL0t,%CTUSL0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTUSL0c=100
 f %CTUSL0d(16)=1 i $sortend(^||%sql.temp(%CTUSL0t(%CTUSL0d(16)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTUSL0d(1)=""
%0ABk1 s %CTUSL0d(1)=$o(^TTAB("USLOC",%CTUSL0d(1)))
 i %CTUSL0d(1)="" g %0ABdun
 s %CTUSL0d(21)=$g(^TTAB("USLOC",%CTUSL0d(1)))
 s %CTUSL0d(2)=$p(%CTUSL0d(21),"\",1) s %CTUSL0d(3)=$p(%CTUSL0d(21),"\",2) s %CTUSL0d(4)=$p(%CTUSL0d(21),"\",3) s %CTUSL0d(5)=$p(%CTUSL0d(21),"\",4) s %CTUSL0d(6)=$p(%CTUSL0d(21),"\",5) s %CTUSL0d(7)=$p(%CTUSL0d(21),"\",6) s %CTUSL0d(8)=$p(%CTUSL0d(21),"\",7)
 s %CTUSL0d(9)=$zu(28,%CTUSL0d(2),6)
 g:'(($c(0)[%CTUSL0d(11))||(%CTUSL0d(11)=$c(32,0)&&($e(%CTUSL0d(9))=$c(32)))||(%CTUSL0d(11)=$e(%CTUSL0d(9),1,$l(%CTUSL0d(11))))) %0ABk1
 g:'(%CTUSL0d(9)'="") %0ABk1
 s %CTUSL0s(8)=$s(%CTUSL0d(8)'="":%CTUSL0d(8),1:-1E14),%CTUSL0s(1)=$s(%CTUSL0d(1)'="":%CTUSL0d(1),1:-1E14),%CTUSL0d(22)="",$li(%CTUSL0d(22),2)=%CTUSL0d(2),$li(%CTUSL0d(22),3)=%CTUSL0d(3),$li(%CTUSL0d(22),5)=%CTUSL0d(4),$li(%CTUSL0d(22),4)=%CTUSL0d(5),$li(%CTUSL0d(22),1)=%CTUSL0d(6),$li(%CTUSL0d(22),6)=%CTUSL0d(7),^||%sql.temp(%CTUSL0t(1),0,%CTUSL0s(8),%CTUSL0s(1))=%CTUSL0d(22)
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTUserLocation.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("USLOC",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTUserLocation.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("USLOC",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTUserLocation.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTUserLocation.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTUserLocation.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTUserLocation.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("USLOC",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTUserLocation.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("USLOC",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTUserLocation.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTUserLocation.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTUserLocation.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTUserLocation.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTUSL0f q:SQLCODE'=0
 s PLIST(1)=%CTUSL0d(1),PLIST(2)=%CTUSL0d(1),PLIST(3)=%CTUSL0d(2),PLIST(4)=%CTUSL0d(3),PLIST(5)=%CTUSL0d(4),PLIST(6)=%CTUSL0d(5),PLIST(7)=%CTUSL0d(6),PLIST(8)=%CTUSL0d(7),PLIST(9)=%CTUSL0d(8)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(10)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(10)
 i PLIST(2)'="",$d(^TTAB("USLOC",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(18)=$g(^TTAB("USLOC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",1) s PLIST(4)=$p(%mmmsqld(18),"\",2) s PLIST(5)=$p(%mmmsqld(18),"\",3) s PLIST(6)=$p(%mmmsqld(18),"\",4) s PLIST(7)=$p(%mmmsqld(18),"\",5) s PLIST(8)=$p(%mmmsqld(18),"\",6) s PLIST(9)=$p(%mmmsqld(18),"\",7)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("USLOC",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("USLOC",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_UserLocation for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("USLOC",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(23)=$g(^TTAB("USLOC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4) s PLIST(7)=$p(%mmmsqld(23),"\",5) s PLIST(8)=$p(%mmmsqld(23),"\",6) s PLIST(9)=$p(%mmmsqld(23),"\",7)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
