<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="web.EPVisitTestSetData">
<ClassType/>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.RegisteredObject,websys.Abstract</Super>
<TimeCreated>61237,56981</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>727</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="SQLCODE">
<Default>VISTD_TestCode_DR</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Default>VISTD_RowId</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>VISTD_RowId</Default>
</Parameter>

<Method name="MarkAsViewed">
<ClassMethod>1</ClassMethod>
<FormalSpec>compref:%String,id:%String</FormalSpec>
<Implementation><![CDATA[
  n plist,sUser,sGroup,sApp
  n sDate,sTime
  
  s sUser=%session.Get("LOGON.USERCODE")
  s sDate=$p($h,",",1)
  s sTime=$p($h,",",2)
  ;s ^zBKJ("VIEWED DATE,TIME,USER,ID")=sDate_","_sTime_","_sUser_","_id
  q:id="" $$$OK
  ;n webns,labns
  ;s webns=$zu(5)
  ;s labns=$lg(^websys.ConfigurationD(1),12)
  ;zn labns 
  s sGroup=$$newgroup^LVBCOM02($p(id,"||",1))
  s sApp="Lab Viewer : Mark As Read"
  m plist=PLIST
  k PLIST
  s sReturnCode=$$select^LVBVISTS(id,"",sUser,"")
  s PLIST(71)=sDate
  s PLIST(72)=sTime
  s PLIST(73)=sUser
  s sReturnCode=$$update^LVBVISTS(id,sApp,sGroup,"",sUser,"")
  s sReturnCode=$$VBevent^LVBCOM01($p(id,"||",1),"WV","Test Set <"_$$seldata^LVBCTTS($p(id,"||",2),4)_"> marked as viewed on web by "_sUser)
  ;zn webns
  m PLIST=plist
  q $$$OK
]]></Implementation>
</Method>

<Method name="MarkAsUnviewed">
<ClassMethod>1</ClassMethod>
<FormalSpec>compref:%String,id:%String</FormalSpec>
<Implementation><![CDATA[
  n plist,sUser,sGroup,sApp
  
  s sUser=%session.Get("LOGON.USERCODE")
  q:id="" $$$OK
  ;n webns,labns
  ;s webns=$zu(5)
  ;s labns=$lg(^websys.ConfigurationD(1),12)
  ;zn labns 
  s sGroup=$$newgroup^LVBCOM02($p(id,"||",1))
  s sApp="Lab Viewer : Mark As Read"
  m plist=PLIST
  k PLIST
  s sReturnCode=$$select^LVBVISTS(id,"",sUser,"")
  s PLIST(71)=""
  s PLIST(72)=""
  s PLIST(73)=""
  s sReturnCode=$$update^LVBVISTS(id,sApp,sGroup,"",sUser,"")
  ;zn webns
  m PLIST=plist
  q $$$OK
]]></Implementation>
</Method>

<Method name="MarkAsRead">
<ClassMethod>1</ClassMethod>
<FormalSpec>compref:%String,id:%String</FormalSpec>
<Implementation><![CDATA[
  n plist,sUser,sGroup,sApp
  n sDate,sTime

  s sUser=%session.Get("LOGON.USERCODE")
  s sDate=$p($h,",",1)
  s sTime=$p($h,",",2)
  ;s ^zBKJ("READ DATE,TIME,USER,ID")=sDate_","_sTime_","_sUser_","_id
  q:id="" $$$OK
  ;n webns,labns
  ;s webns=$zu(5)
  ;s labns=$lg(^websys.ConfigurationD(1),12)
  ;zn labns 
  s sGroup=$$newgroup^LVBCOM02($p(id,"||",1))
  s sApp="Lab Viewer : Mark As Read"
  m plist=PLIST
  k PLIST
  s sReturnCode=$$select^LVBVISTS(id,"",sUser,"")
  s PLIST(68)=sDate
  s PLIST(69)=sTime
  s PLIST(70)=sUser
  s sReturnCode=$$update^LVBVISTS(id,sApp,sGroup,"",sUser,"")
  s sReturnCode=$$VBevent^LVBCOM01($p(id,"||",1),"WR","Test Set <"_$$seldata^LVBCTTS($p(id,"||",2),4)_"> marked as read on web by "_sUser)
  ;zn webns
  m PLIST=plist
  q $$$OK
]]></Implementation>
</Method>

<Method name="MarkAsUnread">
<ClassMethod>1</ClassMethod>
<FormalSpec>compref:%String,id:%String</FormalSpec>
<Implementation><![CDATA[
  n plist,sGroup,sApp,sUser
  
  s sUser=%session.Get("LOGON.USERCODE")
  q:id="" $$$OK
  ;n webns,labns
  ;s webns=$zu(5)
  ;s labns=$lg(^websys.ConfigurationD(1),12)
  ;zn labns 
  s sGroup=$$newgroup^LVBCOM02($p(id,"||",1))
  s sApp="Lab Viewer : Mark As Read"
  m plist=PLIST
  k PLIST
  s sReturnCode=$$select^LVBVISTS(id,"",sUser,"")
  s PLIST(68)=""
  s PLIST(69)=""
  s PLIST(70)=""
  s sReturnCode=$$update^LVBVISTS(id,sApp,sGroup,"",sUser,"")
  ;zn webns
  m PLIST=plist
  q $$$OK
]]></Implementation>
</Method>

<Method name="CumulativeHistory">
<ClassMethod>1</ClassMethod>
<FormalSpec>RowID:%String,Episode:%String,deps:%String,alldept:%String</FormalSpec>
<Implementation><![CDATA[
	n disselect,j,deptcode,deptname,opselect,alldeptvalue,checkdep
    n webns,labns,sRC,sUser,sMRN,labno,theDate,theTime
    n episcols,displaycols,j,tset,tsetname,worklist,recentdate,thistest,tested
    n zc

    s sUserGroup=%session.Get("LOGON.GROUPID")
    s sGroupId=##class(epr.GroupSettings).GetIdFromGroupId(sUserGroup)
    s obj=##class(epr.GroupSettings).%OpenId(sGroupId)
    s bAlphaSort=0 i obj s bAlphaSort=obj.CumulativeAlphaSort d obj.%Close()
  

    ;s webns=$zu(5)
    ;s labns=$lg(^websys.ConfigurationD(1),12)
    s sUser=%session.Get("LOGON.USERCODE")
	
	w "<table><tr>"
    w "<td valign=top>"
    s disselect=""
    ;s deps=""
    
    ;zn labns
    s sRC=""
    s sMRN=""
    i $l(RowID,"||")=1 s sMRN=RowID
    i $l(RowID,"||")=3 d 
    . s sRC=$$select^LVBVIS5(RowID)
    . i sRC="0" s sMRN=PLIST(3)
    . i sRC'="0",$l(RowID,"||")=1 s sMRN=RowID
    

    s deps=$g(deps)
    s alldept=$g(alldept)
    s alldeptvalue=""
    
    i alldept="true" s alldeptvalue="checked"
    i (deps=""),(alldept="true") s disselect="disabled"

    ;First setup the department box
    s sRC=$$getall^LVBCTDEP()
    i sRC="0" d
    . w "<input type=hidden name=""NextPage"" value=""XXX"">"
    . w "<input type=hidden name=""deps"" value="""_deps_""">"
    . w "<input type=hidden name=""VisitTestSetRowID"" value="""_RowID_""">"
    . w "<input type=hidden name=""Episode"" value="""_Episode_""">"
    . w "<input type=""checkbox"" name=""alldept"" value=""checkdep"" "_alldeptvalue_" onClick=""depclick()"">All Departments<br>"
    . w "<select name=""depselect"" size="_PLIST_" multiple "_disselect_" onChange=""deppick()"">"
 	. f j=1:1:PLIST d
 	. . s deptcode=$p(PLIST(j),$c(2),1),deptname=$p(PLIST(j),$c(2),2)
 	. . s opselect=""
 	. . i deps[deptcode s opselect="selected"
 	. . w "<option value="""_deptcode_""" "_opselect_">"_deptname_"</option>"
 	. w "</select>"
 	. w "</td>"
 	. 
 	. ;Then set up the test sets
 	. w "<td valign=top>"
    . w "<a href=""#"" onClick=' selectall(true); '>Select all</a>&nbsp&nbsp&nbsp&nbsp&nbsp<a href=""#"" onClick=' selectall(false); '>Unselect all</a>"
 	. w "<table border=""1"" cellspacing=""1"">"
    . w "<tr>"
    . w "<td CLASS=""tablecaption"">&nbsp;</td>"
    . w "<td CLASS=""tablecaption"">Test Set</td>"
    . w "<td CLASS=""tablecaption"">Most Recent Test Set</td>"
	. s sRC=$$caption^LVBVIS7("",sMRN,"",deps,sUser,"Y")
	. i sRC d
	. s labno=""
	. s theDate=""
	. s theTime=""
	. f j=1:1  Q:'$d(PLIST(j))  d
 	. . s labno=$p(PLIST(j),$c(1),1)
 	. . s theDate=$p(PLIST(j),$c(1),2)
 	. . i theDate'="" s theDate=$$extdate^SSUTIL4(theDate)
 	. . s theTime=$p(PLIST(j),$c(1),3)
 	. . i theTime'="" s theTime=$$exttime^SSUTIL4(theTime)
    . . w "<td CLASS=""tablecaption"">"_labno_"<br>"_theDate_"<br>"_theTime_"</td>"
 	. w "</tr>"
 	. s episcols=j-1
 	. s displaycols=episcols+2  ;2 columns for the testset name, and recent date
    . w "<tr>"
    . w "<td align=center><a href=""#"" onClick=' submitform("""_Episode_""","""_deps_""",""C""); '><img src=""../images/websys/report.gif"" width=40 height=40 border=0><br>View</a></td>"
    . w "<td colspan="_displaycols_" align=left valign=top><font size=""-2"">TF=To Follow</font></td>"
    . w "</tr>"
 	
	
	s sort="" i bAlphaSort s sort="A"
	k PLIST
 	s sRC=$$open^LVBVIS7("",sMRN,"",deps,sUser,sort)
    i sRC="0" d
    . s zc=1
 	. f  s sRC=$$fetchbuffer^LVBVIS7("",sMRN,"",deps,sUser,sort) d  q:sRC
 	. . k tlist m tlist=PLIST k PLIST
 	. . f j=1:1  Q:'$d(tlist(j))  d
	. . . s tset=$p(tlist(j),$c(28),1)
 	. . . s tsetname=$p(tset,$c(1),4),worklist=$p(tset,$c(1),5)
 	. . . s tset=$p(tset,$c(1),3)
 	. . . s recentdate=$$recent^LVBVIS7(sMRN,tset,sUser)
    . . . s recentdate=$$extdate^SSUTIL4(recentdate)
    . . . i tsetname=""  s tsetname="&nbsp;"
    . . . i recentdate=""  S recentdate="&nbsp;"
	. . . s textbox=""
	. . . s textbox=textbox_"<tr>"
	. . . s textbox=textbox_"<td align=center><input type=""checkbox"" name=""testcheckz"_zc_""" value="""_tset_"""></td>"
	. . . s textbox=textbox_"<td onClick=""highlightRow(this.parentElement);"">"_tsetname_"</td>"
	. . . s textbox=textbox_"<td onClick=""highlightRow(this.parentElement);"">"_recentdate_"</td>"
	. . . s nocheck=""
	. . . s nocheck=nocheck_"<tr>"
	. . . s nocheck=nocheck_"<td align=center>"_""_"</td><td>"_tsetname_"</td><td>"_recentdate_"</td>"
    . . . ;w "<tr>"
    . . . ;w "<td align=center><input type=""checkbox"" name=""testcheckz"_zc_""" value=""",tset,"""></td>" s zc=zc+1
    . . . ;w "<td onClick=""highlightRow(this.parentElement);"">",tsetname,"</td>"
    . . . ;w "<td onClick=""highlightRow(this.parentElement);"">",recentdate,"</td>"
	. . . s rowstr="",enabled=""
 	. . . f tscnt=2:1:episcols+1  d
    . . . . s thistest=$p(tlist(j),$c(28),tscnt)
    . . . . s tested=""
    . . . . i thistest'=""  d
    . . . . . s tested=$p(thistest,$c(1),2)
    . . . . . s tested=$s(tested="A":"Y",tested'="":"TF("_tested_")",1:"TF")
    . . . . . i tested="Y" s enabled="Y"
    . . . . i $g(tested)=""  S tested="&nbsp;"
	. . . . s rowstr=rowstr_"<td align=""center"" onClick=""highlightRow(this.parentElement);"">"_tested_"</td>"
    . . . . ;w "<td align=""center"" onClick=""highlightRow(this.parentElement);"">"_tested_"</td>"
	. . . i enabled="Y" w textbox s zc=zc+1
	. . . i enabled'="Y" w nocheck
	. . . w rowstr
	. . . w "</tr>"
 	s sRC=$$close^LVBVIS7()
 	;S jobnum=$j
    
	. w "</tr>"  ;ending the TEST SET TABLE
	. w "</table>"
 	. 
 	. w "</td>"
 	. w "</tr>"
 	. w "</table>"  ;ending the MAIN TABLE
	. w deps
 	;zn webns
]]></Implementation>
</Method>

<Method name="CumulativeHistoryView">
<ClassMethod>1</ClassMethod>
<FormalSpec>TestSetList:%String,Episode:%String,deps:%String,pageno:%String,FindForMRN:%String</FormalSpec>
<Implementation><![CDATA[
 n sUser,j,a,thestring,endstr,posn,theline,testlist
 n webns,labns,style,STYLELIST,STYLECLOSELIST,sMRN,sRC
 n link
 
 s sUser=%session.Get("LOGON.USERCODE")
 s pageno=$g(pageno)
 s FindForMRN=$g(FindForMRN)
 i $l(FindForMRN) d
 . s testlist="",sFlag=$c(1)_"Y"_$c(1)_sUser_$c(1)_"C"
 . s sRC=$$open^LVBVIS5(,,,FindForMRN,,,,,,sFlag)
 . f  q:$$fetch^LVBVIS5(,,,FindForMRN,,,,,,sFlag)  d
 . . i PLIST(23)="Y",(","_testlist_",")'[(","_$p(PLIST(1),"||",2)_",") s testlist=testlist_$s($l(testlist):",",1:"")_$p(PLIST(1),"||",2)
 i '$l(FindForMRN) s testlist=TestSetList
 ;s webns=$zu(5)
 ;s labns=$lg(^websys.ConfigurationD(1),12)
 q:testlist=""

 i pageno="" s pageno=0
 ;zn labns

 s sMRN=$$mrn^LVBEPVIS(Episode)
 k VISIT i '$$select^LVBEPVIS(Episode) m VISIT=PLIST 
 k PLIST
 ;w !,"P0="_sMRN_" P1="_sUser_" P2="_testlist_" P3="_deps_" P4="_pageno
 
 d cumulative^LVBVIS7(sMRN,sUser,testlist,deps,pageno)
 
 f j=1:1:PLIST w ##class(web.EPVisitTestSet).ConvertDelimGet($g(PLIST(j))),!
 w " "
 w !
 w "Page "_(pageno+1)_"    "
 s link="<a href=""websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.CumulativeHistoryView&PatientBanner=1&Episode="_Episode_"&TestSetList="_testlist_"&Deps="_deps_"&pageno="_(pageno-1)_""">Prev</a>  " 
 i pageno>0 w link
 s link="<a href=""websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.CumulativeHistoryView&PatientBanner=1&Episode="_Episode_"&TestSetList="_testlist_"&Deps="_deps_"&pageno="_(pageno+1)_""">Next</a>  " 
 i '$$next^LVBVIS7(testlist,pageno,$j) w link
 w "<br><a href=""#"" onclick=""window.print();"">Print Page</A>" 
 s sDispName=$$NameFormat^LVBCOM03("PT",$p($g(VISIT(7)), $c(1), 2),$g(VISIT(4)),$g(VISIT(3)),$g(VISIT(99)),$g(VISIT(100)),$g(VISIT(101)))
 s sTitle="Episode : "_Episode_"   NAME : "_sDispName_"   MRN : "_sMRN
 w "<INPUT TYPE=""HIDDEN"" NAME=""WINDOWTITLE"" ID=""WINDOWTITLE"" VALUE="""_sTitle_""">"
]]></Implementation>
</Method>

<Method name="MarkAllAsRead">
<ClassMethod>1</ClassMethod>
<FormalSpec>compref:%String,FullList:%String</FormalSpec>
<Implementation><![CDATA[
	n tsrowid,i,rc,fl2
	s tsrowid=""
	s compref=$g(compref)
	
	s FullList=$g(FullList)
	i FullList'="" d
	.f i=1:1:$l(FullList,",") d
	..s tsrowid=$p(FullList,",",i)
	..s rc=##class(web.EPVisitTestSetData).MarkAsRead(compref,tsrowid)
]]></Implementation>
</Method>

<Method name="MarkAllAsViewed">
<ClassMethod>1</ClassMethod>
<FormalSpec>compref:%String,FullList:%String</FormalSpec>
<Implementation><![CDATA[
	n tsrowid,i,rc
	s tsrowid=""
	s compref=$g(compref)

	s FullList=$g(FullList)
	i FullList'="" d
	.f i=1:1:$l(FullList,",") d
	..s tsrowid=$p(FullList,",",i)
	..s rc=##class(web.EPVisitTestSetData).MarkAsViewed(compref,tsrowid)
]]></Implementation>
</Method>

<Method name="DisplayWordLink">
<ClassMethod>1</ClassMethod>
<FormalSpec>VisTestRowID:%String</FormalSpec>
<Implementation><![CDATA[
	n PLIST,path,wsubdir,webns,labns
	s VisTestRowID=$g(VisTestRowID)
	
	s path=""
	i '$$select^MVBCFSM("1")	d
	.i $l(PLIST(9)) s path=PLIST(9)_"WEBRESULTS" q
	.i $l(PLIST(10)) s path=PLIST(10)_"WEBRESULTS" q
	.s path="WEBLABTRAKRESULTS"
	s path=##class(%Collation).AlphaUp(path)
	

	s path="/"_path_"/"
	s wsubdir=$$seldata^LVBVISTS(VisTestRowID,66)
	i $l(wsubdir) s path=path_wsubdir_"/"
	s path=path_$p(VisTestRowID,"||",1)_"_"_$p(VisTestRowID,"||",2)_"_"_$p(VisTestRowID,"||",3)_".doc"
	w "<a href="""_path_""">View word results</a>"
]]></Implementation>
</Method>

<Method name="AllTSLink">
<ClassMethod>1</ClassMethod>
<FormalSpec>Episode:%String,NewWindow:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 n sFlag,sUser,webns,labns,sTSList,sLinkName,sNormalClass,sReturnCode,sGroupID,obj
 n sMode,mlist,x

 ;s webns=$zu(5)
 ;s labns=$lg(^websys.ConfigurationD(1),12)
 ;zn webns
 
 s sUser=%session.Get("LOGON.USERCODE")
 s sFlag=$c(1)_"Y"_$c(1)_sUser_$c(1)_"C"
 s x=0
 
 s sTSList=""
 s sNormalClass="web.EPVisitTestSet.Result"
 s sGroupID=%session.Get("LOGON.GROUPID")
 i sGroupID'="" s sGroupID=##class(epr.GroupSettings).GetIdFromGroupId(sGroupID)
 i sGroupID'="" d
 . s obj=##class(epr.GroupSettings).%OpenId(sGroupID)
 . i obj d
 . . i obj.CumulativeView=1 s sNormalClass="web.EPVisitTestSet.ResultCumulative"
 . . d obj.%Close() 
 
 ;zn labns
 k mlist
 s mlist=PLIST
 k PLIST
 s sReturnCode=$$open^LVBVIS5(Episode,"","","","","","","","",sFlag)
 
 s access="N"
 f  q:$$fetch^LVBVIS5(Episode,"","","","","","","","",sFlag)  d
 . s sLinkName=PLIST(5) 
 . s x=x+1
 . i $e(PLIST(23))="Y" d
 . . s access="Y"
 . . s sMode="N"
 . . i PLIST(26)="Y" s sMode="W"
 . . i sMode="W" d
 . . . s rtf=$$seldata^LVBCTTS(PLIST(7),31)
 . . . i rtf="Y" s sMode="R"
 . . i NewWindow="Y" d
 . . . ;i sMode="N" s sTSList=sTSList_"<A href='#' onclick=""websys_lu('websys.default.csp?WEBSYS.TCOMPONENT="_sNormalClass_"&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"')"">"_sLinkName_"</A> "
 . . . ;i sMode="R" s sTSList=sTSList_"<A href='#' onclick=""websys_lu('websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.RTFResult&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"')"">"_sLinkName_"</A> "
 . . . ;i sMode="W" s sTSList=sTSList_"<A href='#' onclick=""websys_lu('websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.WordResult&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"')"">"_sLinkName_"</A> "
 . . . i sMode="N" s sTSList=sTSList_"<A href='#' onclick=""var xxx=websys_createWindow('websys.default.csp?WEBSYS.TCOMPONENT="_sNormalClass_"&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"','LEVEL3','scrollbars=yes,resizable=yes');xxx.focus();"">"_sLinkName_"</A> "
 . . . i sMode="R" s sTSList=sTSList_"<A href='#' onclick=""var xxx=websys_createWindow('websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.RTFResult&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"','LEVEL3','scrollbars=yes,resizable=yes');xxx.focus();"">"_sLinkName_"</A> "
 . . . i sMode="W" s sTSList=sTSList_"<A href='#' onclick=""var xxx=websys_createWindow('websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.WordResult&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"','LEVEL3','scrollbars=yes,resizable=yes');xxx.focus();"">"_sLinkName_"</A> "
 . . i NewWindow="" d
 . . . i sMode="N" s sTSList=sTSList_"<A href='websys.default.csp?WEBSYS.TCOMPONENT="_sNormalClass_"&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"'>"_sLinkName_"</A> "
 . . . i sMode="R" s sTSList=sTSList_"<A href='websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.RTFResult&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"'>"_sLinkName_"</A> "
 . . . i sMode="W" s sTSList=sTSList_"<A href='websys.default.csp?WEBSYS.TCOMPONENT=web.EPVisitTestSet.WordResult&VisitTestSetRowID="_PLIST(1)_"&ID="_PLIST(1)_"&PatientBanner=1&Episode="_Episode_"'>"_sLinkName_"</A> "
 . e  s sTSList=sTSList_" "_sLinkName_" "
 s sReturnCode=$$close^LVBVIS5()
 k PLIST
 m PLIST=mlist
 ;zn webns
 q access_$c(1)_sTSList
]]></Implementation>
</Method>

<Method name="FullLabPreview2">
<ClassMethod>1</ClassMethod>
<FormalSpec>Episode</FormalSpec>
<Implementation><![CDATA[
	n sUser,sRC,sRC2,sMRN,sUG,sAudit
    n webns,labns,i,tsrowid,fulllist,j,unreadrowids,unviewedrowids
    n dis,sStatus,sFlag

    ;s webns=$zu(5)
    ;s labns=$lg(^websys.ConfigurationD(1),12)
    s sUser=%session.Get("LOGON.USERCODE")
    s sUG=$$seldata^MVBSSUSR(sUser,4),sAudit=$$seldata^MVBSSGRP(sUG,4)
	s sFlag=$c(1)_"Y"_$c(1)_sUser_$c(1)_"C"

	
    ;zn labns
    s sMRN=$$mrn^LVBEPVIS(Episode)

    ;s ^zBKJ("CALLING")="$$getall^LVBVISTS("_Episode_","_sUser_","""","""","""","""","""","""")"
	s sRC=$$getall^LVBVISTS(Episode,sUser,"","","","","")
	;getall(par,user,param,TestGroups,Sort,DB,mode)
	k fulllist
	s fulllist=PLIST
	m fulllist=PLIST
	s alltests=""
	s unreadrowids=""
	s unviewedrowids=""
	;(RowID,skip,user,param
	f i=1:1:fulllist  d
	. k PLIST
	. s tsrowid=$p(fulllist(i),$c(1),1)
	. s sRC=$$select^LVBVIS5(tsrowid,,,sFlag)
	. i $e(PLIST(23))="Y" d
    . . k PLIST
	. . s sRC=$$select^LVBVISTS(tsrowid,"",sUser,"")
	. . s sStatus=PLIST(33)
	. . s sStatus=$p(sStatus,$c(1),1)
	. . i sRC="0",sStatus="A" d
	. . .i 'PLIST(68) s unreadrowids=$s($l(unreadrowids):unreadrowids_","_tsrowid,1:tsrowid)
	. . .i 'PLIST(71) s unviewedrowids=$s($l(unviewedrowids):unviewedrowids_","_tsrowid,1:tsrowid)
	. . k PLIST
	. . s sRC=$$SINGLE^PRTDR00(tsrowid,"WV","")
	. . s alltests=alltests_$s($l(alltests):",",1:"")_$$seldata^LVBCTTS($p(tsrowid,"||",2),4)
	. . ;zn webns
	. . f j=1:1:PLIST s PLIST(j)=##class(web.EPVisitTestSet).ConvertDelimGet(PLIST(j)) w $g(PLIST(j)),!
	. . ;zn labns
    i sAudit="Y" s sReturnCode=$$VBevent^LVBCOM01(Episode,"WV","Test Set(s) <"_alltests_"> viewed on web by "_sUser)
	s %request.Data("UnreadTSList",1)=unreadrowids
	s %request.Data("UnviewedTSList",1)=unviewedrowids
	s %request.Data("Episode",1)=Episode
    s %request.Data("MRN",1)=sMRN
    ;s %request.Data("DateFrom",1)=%request.Data("
    w "<INPUT TYPE=""HIDDEN"" NAME=""UnreadTSList"" VALUE="""_unreadrowids_""">"
    w "<INPUT TYPE=""HIDDEN"" NAME=""UnviewedTSList"" VALUE="""_unviewedrowids_""">"
	;zn webns
]]></Implementation>
</Method>

<Method name="FullLabPreview">
<ClassMethod>1</ClassMethod>
<FormalSpec>Episode</FormalSpec>
<Implementation><![CDATA[
	n sUser,sRC,sRC2,sMRN,sUG,sAudit
    n webns,labns,i,tsrowid,fulllist,j,unreadrowids,unviewedrowids
    n dis,sStatus,sFlag

    ;s webns=$zu(5)
    ;s labns=$lg(^websys.ConfigurationD(1),12)
    s sUser=%session.Get("LOGON.USERCODE")
    s sUG=$$seldata^MVBSSUSR(sUser,4),sAudit=$$seldata^MVBSSGRP(sUG,4)
    
	s sFlag=$c(1)_"Y"_$c(1)_sUser_$c(1)_"C"

	s unreadrowids=""
	s unviewedrowids=""
	s alltests=""
	
	;zn labns
	k PLIST
    s sMRN=$$mrn^LVBEPVIS(Episode)
	s sRC=$$open^LVBVIS5(Episode,,,,,,,,,sFlag)

	f  q:$$fetch^LVBVIS5(Episode,,,,,,,,,sFlag)  d
	. s tsrowid=PLIST(1)
	. i $e($g(PLIST(23)))="Y" d
    . . k PLIST
	. . s sRC=$$select^LVBVISTS(tsrowid,"",sUser,"")
	. . s sStatus=PLIST(33)
	. . s sStatus=$p(sStatus,$c(1),1)
	. . i sRC="0",sStatus="A" d
	. . .i 'PLIST(68) s unreadrowids=$s($l(unreadrowids):unreadrowids_","_tsrowid,1:tsrowid)
	. . .i 'PLIST(71) s unviewedrowids=$s($l(unviewedrowids):unviewedrowids_","_tsrowid,1:tsrowid)
	. . k PLIST
	. . s sRC=$$SINGLE^PRTDR00(tsrowid,"WV","")
	. . s alltests=alltests_$s($l(alltests):",",1:"")_$$seldata^LVBCTTS($p(tsrowid,"||",2),4)
	. . ;zn webns
	. . f j=1:1:PLIST s PLIST(j)=##class(web.EPVisitTestSet).ConvertDelimGet(PLIST(j)) w PLIST(j),!
	. . ;zn labns
    i sAudit="Y" s sReturnCode=$$VBevent^LVBCOM01(Episode,"WV","Test Set(s) <"_alltests_"> viewed on web by "_sUser)
	s %request.Data("UnreadTSList",1)=unreadrowids
	s %request.Data("UnviewedTSList",1)=unviewedrowids
	s %request.Data("Episode",1)=Episode
    s %request.Data("MRN",1)=sMRN
    ;s %request.Data("DateFrom",1)=%request.Data("
    w "<INPUT TYPE=""HIDDEN"" NAME=""UnreadTSList"" VALUE="""_unreadrowids_""">"
    w "<INPUT TYPE=""HIDDEN"" NAME=""UnviewedTSList"" VALUE="""_unviewedrowids_""">"
	s sRC=$$close^LVBVIS5()
	;zn webns
]]></Implementation>
</Method>

<Method name="DisplayDonationDetails">
<ClassMethod>1</ClassMethod>
<FormalSpec>RowID:%String</FormalSpec>
<Implementation><![CDATA[
	n sReturnCode,sUser,sUG,sAudit
	;n webns,labns
	;s webns=$zu(5)
	;s labns=$lg(^websys.ConfigurationD(1),12)
    s sUser=%session.Get("LOGON.USERCODE")
    s sUG=$$seldata^MVBSSUSR(sUser,4),sAudit=$$seldata^MVBSSGRP(sUG,4)
	
	;zn labns
	s sReturnCode=$$SINGLE^PRTDR00(RowID,"WB","")
    ;i sAudit="Y" s sReturnCode=$$VBevent^LVBCOM01($p(RowID,"||",1),"WV","Test Set <"_$p(RowID,"||",2)_"> viewed on web by "_sUser)
	;zn webns
	f i=1:1:PLIST s PLIST(i)=##class(web.EPVisitTestSet).ConvertDelimGet(PLIST(i)) w $g(PLIST(i)),!
]]></Implementation>
</Method>

<Method name="DisplayReportableReason">
<ClassMethod>1</ClassMethod>
<FormalSpec>RowID:%String</FormalSpec>
<Implementation><![CDATA[
	n sReturnCode
	n webns,labns,reason,sUser
	
	;s webns=$zu(5)
	s sUser=%session.Get("LOGON.USERCODE")
	;s labns=$lg(^websys.ConfigurationD(1),12)
	s reason=""
	;zn labns
	i '$$select^LVBVISTS(RowID,"",sUser,"") d
	.i $l($g(PLIST(58))) d
	..i '$$select^LVBCTR($p(PLIST(58),$c(1)),"Y") s reason=PLIST(6)
	;zn webns
	s reason=##class(web.EPVisitTestSet).ConvertDelimGet(reason) w $g(reason),!
]]></Implementation>
</Method>

<Method name="LabPreview">
<ClassMethod>1</ClassMethod>
<FormalSpec>RowID:%String,Mode:%String</FormalSpec>
<Implementation><![CDATA[
 n sReturnCode,sOutText,i,sEP,sUser,sDispName,sUG,sAudit
 n webns,labns,sTitle
 ;s webns=$zu(5)
 ;s labns=$lg(^websys.ConfigurationD(1),12)
 s sEP=$p(RowID,"||",1)
 s sUser=%session.Get("LOGON.USERCODE")
 s sUG=$$seldata^MVBSSUSR(sUser,4),sAudit=$$seldata^MVBSSGRP(sUG,4)
 
 k PLIST
 s sRC=$$select^LVBEPVIS(sEP,,sUser)
 s sDispName=$$NameFormat^LVBCOM03("PT",$p($g(PLIST(7)), $c(1), 2),$g(PLIST(4)),$g(PLIST(3)),$g(PLIST(99)),$g(PLIST(100)),$g(PLIST(101)))
 s sTitle="Episode : "_sEP_"   NAME : "_sDispName_"   MRN : "_$p($g(PLIST(20)),$c(1), 1)
 s sReturnCode=$$SINGLE^PRTDR00(RowID,"WV",Mode)
 i sAudit="Y" s sReturnCode=$$VBevent^LVBCOM01($p(RowID,"||",1),"WV","Test Set <"_$$seldata^LVBCTTS($p(RowID,"||",2),4)_"> viewed on web by "_sUser)
 
 ;w "$$SINGLE^PRTDR00("_RowID_",""W"","_Mode_")"
 ;zn webns
 f i=1:1:PLIST s PLIST(i)=##class(web.EPVisitTestSet).ConvertDelimGet(PLIST(i)) w $g(PLIST(i)),!
 ;s sTitle="Brians Test.. MANOWAR RULES!"
 ;w "<input type=""button"" value=""Print Page"" onClick=""trakPrint('"_sTitle_"');"" />"
 ;w "<input type=""button"" value=""Print Page"" onClick=""window.print(); return false()"" />"

 ;
 Quit
]]></Implementation>
</Method>

<Method name="FindAntibioticsClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Binary]]></FormalSpec>
<PlaceAfter>FindAntibioticsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 n sReturnCode,obj 
 ;zn "WLABDEV-DATA" 
 ;s sReturnCode=$$close^LVBVIS5()
 ;zn "WLABDEV-WEBSRC"
 s QHandle=""
 ;
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="DisplayAntibioticGrid">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&VisitTestSetRowID:%String]]></FormalSpec>
<Implementation><![CDATA[
	n sReturnCode,sWorkBuffer,ABData,i,i2,y,sCurrent,sTI,sReturnCode,sPathogenList
	n sPatCode,sPatDesc,sPatCurrent,sAntibiotic,sField,smm,smic
	n webns,labns,max,result,tilist,y,Style,sRes,sUserGroup,sGroupId,bShowValues,obj,bShowValues
 	;s webns=$zu(5)
 	;s labns=$lg(^websys.ConfigurationD(1),12)

    s sUserGroup=%session.Get("LOGON.GROUPID")
    s sGroupId=##class(epr.GroupSettings).GetIdFromGroupId(sUserGroup)
	s obj=##class(epr.GroupSettings).%OpenId(sGroupId)
	s bShowValues=0 i obj s bShowValues=obj.ViewMMResults d obj.%Close()

 	s ABData=""
 	s ResColor="#CC0000"
 	s ColorTag=""
 	
 	;Get the data
 	s sReturnCode=$$MVresults^LVBVISTS(VisitTestSetRowID,,"Y")
 	i sReturnCode="100" q $$$OK
 	s sWorkBuffer="" f i=1:1:PLIST s sWorkBuffer=sWorkBuffer_$s($l(sWorkBuffer):"^",1:"")_PLIST(i)

	i sWorkBuffer'="" d
	. f y=1:1:$l(sWorkBuffer,"^") d
	. . s sCurrent=$p(sWorkBuffer,"^",y)
	. . s sTI=$p(sCurrent,$c(1),1)
	. . i ($p(sCurrent,$c(1),3)'=""),($p(sCurrent,$c(1),19)="Y") d
	. . . k plist
	. . . m plist=PLIST
	. . . s sPatCode=$p(sCurrent,$c(1),3)
	. . . s sPatDesc=$p(sCurrent,$c(1),20)
	. . . s sReturnCode=$$getall^LVBVISTA($p(sCurrent,$c(1),3),sTI,,,"N")
	. . . i sReturnCode'="100" d
	. . . . s sPathogenList="" f i2=1:1:PLIST s sPathogenList=sPathogenList_$s($l(sPathogenList):"^",1:"")_PLIST(i2) 
	. . . . i sPathogenList'="" d
	. . . . . f i2=1:1:$l(sPathogenList,"^") d
	. . . . . . s sPatCurrent=$p(sPathogenList,"^",i2)
	. . . . . . i $p($p(sPatCurrent,$c(2),4),"\",1)="Y" d
	. . . . . . . s sAntibiotic=$p(sPatCurrent,$c(2),1)
	. . . . . . . s sAntibiotic=$p(sAntibiotic,$c(1),2)
	. . . . . . . s ABData("ANTI",sAntibiotic)=sAntibiotic
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y)=sPatDesc
	. . . . . . . m ABData("ANTITI",y)=sPatDesc
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y,"MMVal")=$p($p(sPatCurrent,$c(2),4),"\",3)
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y,"MICVal")=$p($p(sPatCurrent,$c(2),4),"\",2)
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y,"Result")=$p(sPatCurrent,$c(2),3)
	. . . m PLIST=plist

	; Display the data
	s tilist=""
	s y=-1 f  s y=$o(ABData("ANTITI",y)) q:y=""  d
	. i tilist'[("*"_y_"*") s tilist=$s($l(tilist):tilist_y_"*",1:"*"_y_"*")
	i tilist'="" d
	. w "<TABLE><TH>Pathogen</TH>"
	. s x=-1 s max=0 f  s x=$o(ABData("ANTI",x)) q:x=""  s max=max+1 w "<TH NOWRAP>"_ABData("ANTI",x)_"</TH>"
	. s tilist=$e(tilist,2,$l(tilist)-1)
	. f i=1:1:$l(tilist,"*") d
 	. . s Style="RowEven"
	. . i i#2 s Style="RowOdd"
	. . w "<TR Class="""_Style_"""><TD NOWRAP><i><b><font color=""#000099"">"_$g(ABData("ANTITI",$p(tilist,"*",i)))_"</font></b></i></TD>"
	. . s y=-1 f  s y=$o(ABData("ANTI",y)) q:y=""  d
	. . . s sField=$g(ABData("ANTI",y,"PATH",$p(tilist,"*",i),"Result"))
	. . . s sRes=sField
	. . . i sField="R" s sField="<FONT COLOR=RED><b>"_sField_"</b></FONT>"
	. . . s smm=$g(ABData("ANTI",y,"PATH",$p(tilist,"*",i),"MMVal"))
	. . . s smic=$g(ABData("ANTI",y,"PATH",$p(tilist,"*",i),"MICVal"))
	. . . i (smm'="")!(smic'="") d
	. . . . i bShowValues s sField=sField_$s(smic'="":"<BR><FONT SIZE=1>MIC: "_smic_"</FONT>",1:"<BR>")_$s(smm'="":"<BR><FONT SIZE=1>mm: "_smm_"</FONT>",1:"<BR>")
	. . . i sField="" s sField="&nbsp;"
	. . . w "<TD NOWRAP VALIGN=TOP>"_sField_"</TD>"
	. . w "</TR>"
	. w "</TABLE>"
	;zn webns
]]></Implementation>
</Method>

<Method name="DisplayVertAntibioticGrid">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&VisitTestSetRowID:%String,&NR:%String]]></FormalSpec>
<Implementation><![CDATA[
	n sReturnCode,sWorkBuffer,ABData,i,i2,y,sCurrent,sTI,sReturnCode,sPathogenList
	n sPatCode,sPatDesc,sPatCurrent,sAntibiotic,sField,smm,smic
	n webns,labns,max,result,tilist,y,Style,sRes,obj
 	s NR=$g(NR)
 	;s webns=$zu(5)
 	;s labns=$lg(^websys.ConfigurationD(1),12)
 	;zn labns

    s sUserGroup=%session.Get("LOGON.GROUPID")
    s sGroupId=##class(epr.GroupSettings).GetIdFromGroupId(sUserGroup)
	s obj=##class(epr.GroupSettings).%OpenId(sGroupId)
	s bShowValues=0 i obj s bShowValues=obj.ViewMMResults d obj.%Close()

 	s ABData=""
 	s ResColor="#CC0000"
 	s ColorTag=""
 	
 	;Get the data
 	s sReturnCode=$$MVresults^LVBVISTS(VisitTestSetRowID,,"Y")
 	i sReturnCode="100" q $$$OK
 	s sWorkBuffer="" f i=1:1:PLIST s sWorkBuffer=sWorkBuffer_$s($l(sWorkBuffer):"^",1:"")_PLIST(i)

	i sWorkBuffer'="" d
	. f y=1:1:$l(sWorkBuffer,"^") d
	. . s sCurrent=$p(sWorkBuffer,"^",y)
	. . s sTI=$p(sCurrent,$c(1),1)
	. . i ($p(sCurrent,$c(1),3)'=""),($p(sCurrent,$c(1),19)="Y") d
	. . . k plist
	. . . m plist=PLIST
	. . . s sPatCode=$p(sCurrent,$c(1),3)
	. . . s sPatDesc=$p(sCurrent,$c(1),20)
	. . . s sReturnCode=$$getall^LVBVISTA($p(sCurrent,$c(1),3),sTI,,,"N")
	. . . i sReturnCode'="100" d
	. . . . s sPathogenList="" f i2=1:1:PLIST s sPathogenList=sPathogenList_$s($l(sPathogenList):"^",1:"")_PLIST(i2) 
	. . . . i sPathogenList'="" d
	. . . . . f i2=1:1:$l(sPathogenList,"^") d
	. . . . . . s sPatCurrent=$p(sPathogenList,"^",i2)
	. . . . . . i (NR="Y")!($p($p(sPatCurrent,$c(2),4),"\",1)="Y") d
	. . . . . . . s sAntibiotic=$p(sPatCurrent,$c(2),1)
	. . . . . . . s sAntibiotic=$p(sAntibiotic,$c(1),2)
	. . . . . . . s ABData("ANTI",sAntibiotic)=sAntibiotic
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y)=sPatDesc
	. . . . . . . m ABData("ANTITI",y)=sPatDesc
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y,"MMVal")=$p($p(sPatCurrent,$c(2),4),"\",3)
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y,"MICVal")=$p($p(sPatCurrent,$c(2),4),"\",2)
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y,"Result")=$p(sPatCurrent,$c(2),3)
	. . . . . . . s ABData("ANTI",sAntibiotic,"PATH",y,"REP")=$p($p(sPatCurrent,$c(2),4),"\",1)
	. . . m PLIST=plist

	; Display the data
	s patlist=""
	s y=-1 f  s y=$o(ABData("ANTITI",y)) q:y=""  d
	. i patlist'[("*"_y_"*") s patlist=$s($l(patlist):patlist_y_"*",1:"*"_y_"*")
	s ablist=""
	s y=-1 f  s y=$o(ABData("ANTI",y)) q:y=""  d
	. i ablist'[("*"_y_"*") s ablist=$s($l(ablist):ablist_y_"*",1:"*"_y_"*")
	i patlist'="" d
	. w "<TABLE><TH>Antibiotic</TH>"
	. s patlist=$e(patlist,2,$l(patlist)-1)
	. s ablist=$e(ablist,2,$l(ablist)-1)
	. f x=1:1:$l(patlist,"*") w "<TH NOWRAP><I>"_ABData("ANTITI",$p(patlist,"*",x))_"</I></TH>"
	. f i=1:1:$l(ablist,"*") d
 	. . s Style="RowEven"
	. . i i#2 s Style="RowOdd"
	. . w "<TR Class="""_Style_"""><TD NOWRAP>"_$g(ABData("ANTI",$p(ablist,"*",i)))_"</TD>"
	. . s y=-1 f  s y=$o(ABData("ANTITI",y)) q:y=""  d
	. . . s sField=$g(ABData("ANTI",$p(ablist,"*",i),"PATH",y,"Result"))
	. . . s sRes=sField
	. . . i $l(sField),$g(ABData("ANTI",$p(ablist,"*",i),"PATH",y,"REP"))'="Y" s sField=sField_"&nbsp;&nbsp;&nbsp;NR"
	. . . i $e(sField)="R" s sField="<FONT COLOR=RED><b>"_sField_"</b></FONT>"
	. . . s smm=$g(ABData("ANTI",$p(ablist,"*",i),"PATH",y,"MMVal"))
	. . . s smic=$g(ABData("ANTI",$p(ablist,"*",i),"PATH",y,"MICVal"))
	. . . i (smm'="")!(smic'="") d
	. . . . i bShowValues s sField=sField_$s(smic'="":"<BR><FONT SIZE=1>MIC: "_smic_"</FONT>",1:"<BR>")_$s(smm'="":"<BR><FONT SIZE=1>mm: "_smm_"</FONT>",1:"<BR>")
	. . . i sField="" s sField="&nbsp;"
	. . . w "<TD NOWRAP VALIGN=TOP>"_sField_"</TD>"
	. . w "</TR>"
	. w "</TABLE>"
	;zn webns
]]></Implementation>
</Method>

<Method name="DisplayAllAntibiotics">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&VisitTestSetRowID:%String]]></FormalSpec>
<Implementation><![CDATA[
	n sReturnCode,i,y,i2,sWorkBuffer,sCurrent,sTI
	n sPathogenList,sPatCurrent,plist
	n sAntibiotic,sResult,sMMValue,sMICValue
	n ResColor,Result,obj
	;n webns,labns
 	;s webns=$zu(5)
 	;s labns=$lg(^websys.ConfigurationD(1),12)
 	
    s sUserGroup=%session.Get("LOGON.GROUPID")
    s sGroupId=##class(epr.GroupSettings).GetIdFromGroupId(sUserGroup)
	s obj=##class(epr.GroupSettings).%OpenId(sGroupId)
	s bShowValues=0 i obj s bShowValues=obj.ViewMMResults d obj.%Close()

 	;zn labns
 	s ResColor="#CC0000"
 	s ColorTag=""
 	s sReturnCode=$$MVresults^LVBVISTS(VisitTestSetRowID,,"Y")
 	i sReturnCode="100" q $$$OK
 	s sWorkBuffer="" f i=1:1:PLIST s sWorkBuffer=sWorkBuffer_$s($l(sWorkBuffer):"^",1:"")_PLIST(i)
	i sWorkBuffer'="" d
	. f i=1:1:$l(sWorkBuffer,"^") d
	. . s sCurrent=$p(sWorkBuffer,"^",i)
	. . s sTI=$p(sCurrent,$c(1),1)
	. . i ($p(sCurrent,$c(1),3)'=""),($p(sCurrent,$c(1),19)="Y") d
	. . . ; Display the list
	. . . w "<br>"
	. . . w "<b><i><font color=""#000099"">"_$p(sCurrent,$c(1),20)_"</font></i></b>"
	. . . w "<TABLE BORDER=1>"
	. . . w "<TR><TD BGCOLOR=""330099""><FONT COLOR=""#FFFFFF""><B>Antibiotic</B></FONT></TD>"
	. . . i bShowValues w "<TD BGCOLOR=""330099""><FONT COLOR=""FFFFFF""><B>Result</B></FONT></TD><TD BGCOLOR=""330099""><FONT COLOR=""FFFFFF""><B>MIC Value</B></FONT></TD><TD BGCOLOR=""330099""><FONT COLOR=""FFFFFF""><B>mm Value</B></FONT></TD>"
	. . . w "</TR>"
	. . . k plist
	. . . m plist=PLIST
	. . . s sReturnCode=$$getall^LVBVISTA($p(sCurrent,$c(1),3),sTI,,,"N")
	. . . i sReturnCode'="100" d
	. . . . s sPathogenList="" f i2=1:1:PLIST s sPathogenList=sPathogenList_$s($l(sPathogenList):"^",1:"")_PLIST(i2)
	. . . . i sPathogenList'="" d
	. . . . . f y=1:1:$l(sPathogenList,"^") d
	. . . . . . s sPatCurrent=$p(sPathogenList,"^",y)
	. . . . . . s sAntibiotic=$p(sPatCurrent,$c(2),1)
 	. . . . . . s sAntibiotic=$p(sAntibiotic,$c(1),2)
 	. . . . . . s sResult=$p(sPatCurrent,$c(2),3)
 	. . . . . . s sResult=$p(sResult,"\")
 	. . . . . . s sResult=$s($l(sResult):sResult,1:"&npsp;")
 	. . . . . . s sMICValue=$p(sPatCurrent,$c(2),4)
 	. . . . . . s sMICValue=$p(sMICValue,"\",2)
 	. . . . . . s sMICValue=$s($l(sMICValue):sMICValue,1:"&nbsp;")
 	. . . . . . s sMMValue=$p(sPatCurrent,$c(2),4)
 	. . . . . . s sMMValue=$p(sMMValue,"\",3)
 	. . . . . . s sMMValue=$s($l(sMMValue):sMMValue,1:"&nbsp;")
	. . . . . . i sResult="R" d
	. . . . . . . s sAntibiotic="<FONT COLOR="""_ResColor_""">"_sAntibiotic_"</FONT>"
	. . . . . . . s sResult="<FONT COLOR="""_ResColor_""">"_sResult_"</FONT>"
	. . . . . . . s sMICValue="<FONT COLOR="""_ResColor_""">"_sMICValue_"</FONT>"
	. . . . . . . s sMMValue="<FONT COLOR="""_ResColor_""">"_sMMValue_"</FONT>"
	. . . . . . w "<TR><TD>"_sAntibiotic_"</FONT></TD><TD>"_sResult_"</FONT></TD>"
	. . . . . . i bShowValues w "<TD>"_sMICValue_"</FONT></TD><TD>"_sMMValue_"</TD>"
	. . . . . . w "</TR>"
	. . . m PLIST=plist
	. . . w "</TABLE>"
	;zn webns
]]></Implementation>
</Method>

<Method name="FindAntibioticsExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Binary,TestItemRowID:%String="",Pathogen:%String=""]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 ; 'user' search values, current 'work' values, 
 n user,work,sBuffer,sReturnCode,sWorkBuffer,i,sUser
 
 s sUser=%session.Get("LOGON.USERCODE")
 
 s sBuffer=""

 n webns,labns
 ;s webns=$zu(5)
 ;s labns=$lg(^websys.ConfigurationD(1),12)
 ;zn labns 
 k PLIST
 s sReturnCode="100"
 
 s sReturnCode=$$getall^LVBVISTA(Pathogen,TestItemRowID,,,"N")
 i sReturnCode="100" s QHandle="" q $$$OK
 s sWorkBuffer="" f i=1:1:PLIST s sWorkBuffer=sWorkBuffer_$s($l(sWorkBuffer):"^",1:"")_PLIST(i)
 ;zn webns
 
 s user=$lb(sUser,sWorkBuffer,0)
 s work=""
 ;
 s QHandle=$lb(0,user,work)
 ;
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="FindAntibioticsFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&QHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>FindAntibioticsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 n sFlag,sWorkBuffer,Counter,sUser,obj
 n sAntibiotic,sResult,sMMValue,sMICValue,sCurrent
 ;
 i QHandle="" s AtEnd=1,Row="" Q $$$OK
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s sUser=$lg(user,1)
 s sWorkBuffer=$lg(user,2)
 s Counter=$lg(user,3)
 s Counter=Counter+1
 ;
 s sCurrent=$p(sWorkBuffer,"^",Counter)
 i sCurrent="" s AtEnd=1,Row="" Q $$$OK

 s sAntibiotic=$p(sCurrent,$c(2),1)
 s sAntibiotic=$p(sAntibiotic,$c(1),2)
 
 s sResult=$p(sCurrent,$c(2),3)
 s sResult=$p(sResult,"\")
 
 s sMICValue=$p(sCurrent,$c(2),4)
 s sMICValue=$p(sMICValue,"\",2)
 
 s sMMValue=$p(sCurrent,$c(2),4)
 s sMMValue=$p(sMMValue,"\",3)
 ;s sTestItem=$p(sCurrent,$c(1),40)
 
 ;s sValue=$p(sCurrent,$c(1),3)
 ;s sUnits=$p(sCurrent,$c(1),30)
 ;s sReferenceRange=$p(sCurrent,$c(1),31)_" - "_$p(sCurrent,$c(1),32)
 ;s sFlag=$p(sCurrent,$c(1),5)
 ;s sAntibiotic=$p(sCurrent,$c(1),19)
 ;i sFlag="L",sFlag="H" s sValue="<i>"_sValue_"</i>"  

 s user=$lb(sUser,sWorkBuffer,Counter)
 s Row=$lb(sAntibiotic,sResult,sMMValue,sMICValue)
 ;
 s QHandle=$lb(AtEnd,user,work)
 ;
 Q $$$OK
]]></Implementation>
</Method>

<Query name="FindAntibiotics">
<Type>%Query</Type>
<FormalSpec>TestItemRowID:%String="",Pathogen:%String=""</FormalSpec>
<Parameter name="ROWSPEC" value="Antibiotic:%String,Result:%String,mmValue:%String,MICValue:%String"/>
</Query>
</Class>
</Export>
