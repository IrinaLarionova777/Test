<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTSHP" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTSHP ; IG 29/4/98 ; LVB Control data access for CTSHP CT_Schedule_PaymentCode
 ;
 ; supported calls:
 ;
 ; $$create^LVBCTSHP(Schedule,Date)
 ; $$copy^LVBCTSHP(PC,DateFrom,DateTo,Type,Percent,All)
 ; $$getdate^LVBCTSHP(PayCode)
 ; $$insert^LVBCTSHP(par)
 ; $$update^LVBCTSHP(ROWID)
 ; $$select^LVBCTSHP(ROWID,skip)
 ; $$delete^LVBCTSHP(ROWID,Comments)
 ; $$open^LVBCTSHP(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTSHP(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTSHP(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTSHP(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTSHP()
 ; $$round^LVBCTSHP(am)
 ;
  ;---&sql(DECLARE CTSHP CURSOR FOR SELECT * FROM CT_Schedule_PaymentCode
   ;---         WHERE CTSHP_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ; create empty Schedule
create(Schedule,Date) n (Schedule,Date)
  ;---s PC="" &SQL(SELECT CTSH_BasePaymentCode_DR INTO :PC FROM CT_Schedule WHERE CTSH_RowID=:Schedule)
   ;--- ** SQL PUBLIC Variables: PC, SQLCODE, Schedule
 s PC="" Do %0Co
 s PC=$p(PC,$c(1)) i $l(PC),$l(Date) d
 .s it="" f  s it=$o(^TTAB("IB",it)) q:it=""  s ^TSCH(Schedule,"AMOUNT",PC,Date,it)=""
 q 0
round(am) s am=$g(am) n (am)
 s %routine=$p($g(^TTAB("REPORT-GENERIC","PRICING1")),"\",1)
 i $l(%routine) s LineRoutine="round^"_%routine i $l($t(@LineRoutine)) x "s am=$$round^"_%routine_"("""_am_""")" q am
 s x=am#.1*100,am=$s((x>0)&(x<5):am\.1/10+.05,x>5:am\.1/10+.1,1:am)
 q am
 ; copy Amounts
copy(PCFrom,DateFrom,PCTo,DateTo,Percent,Delete) n (PCFrom,DateFrom,PCTo,DateTo,Percent,Delete) s SQLCODE=100
 s PCFrom=$g(PCFrom),DateFrom=$g(DateFrom),PCTo=$g(PCTo),DateTo=$g(DateTo),Percent=$g(Percent),Delete=$g(Delete)
 ; copy single PC
 i $l(PCTo) d
 .s (Schedule,F1,F2)=""
 .  ;---&SQL(SELECT CTPC_ItemSchedule_DR,CTPC_CalcManual,CTPC_PercentageOfCommon INTO :Schedule,:F1,:F2 FROM CT_PaymentCode WHERE CTPC_RowID=:PCTo)
  .  ;--- ** SQL PUBLIC Variables: F1, F2, PCTo, SQLCODE, Schedule
 . Do %0Eo
 .s Schedule=$p(Schedule,$c(1)),F1=$p(F1,$c(1)),F2=$p(F2,$c(1))
 .i $l(Schedule) d
 ..s rowid=Schedule_"||"_PCTo_"||"_DateTo
 ..i $$delete(rowid)
 ..k PLIST s PLIST(2)=PCTo,PLIST(3)=DateTo,PLIST(4)=F1,PLIST(5)=F2
 ..s PLIST=$o(PLIST(""),-1) i '$$insert(Schedule) d
 ...s x1="" f  s x1=$o(^TSCH(Schedule,"AMOUNT",PCFrom,DateFrom,x1)) q:x1=""  s xx=^(x1) d
 .... ; check Donot copy flag
 ....s stop=0,(dt,GST)="" f  s dt=$o(^TSCH(Schedule,"AMOUNT",PCTo,dt),-1) q:dt=""  i $d(^TSCH(Schedule,"AMOUNT",PCTo,dt,x1)) d  q
 .....s GST=$p(^(x1),"\",2)
 .....i $p(^(x1),"\",3)="Y" s stop=1,^TSCH(Schedule,"AMOUNT",PCTo,DateTo,x1)=^(x1)
 ....i stop q
 ....i $l($p(xx,"\",1)) s $p(xx,"\",1)=Percent/100*xx,$p(xx,"\",2)=GST,$p(xx,"\")=$$round($p(xx,"\"))
 ....i xx s ^TSCH(Schedule,"AMOUNT",PCTo,DateTo,x1)=xx
 ; copy all PayCodes
 i '$l(PCTo) d
 .s Schedule=""
 .  ;---&SQL(SELECT CTPC_ItemSchedule_DR INTO :Schedule FROM CT_PaymentCode WHERE CTPC_RowID=:PCFrom)
  .  ;--- ** SQL PUBLIC Variables: PCFrom, SQLCODE, Schedule
 . Do %0Go
 .s Schedule=$p(Schedule,$c(1))
 .i $l(Schedule) d
 ..s pc="" f  s pc=$o(^TTAB("BI",pc)) q:pc=""  i $p(^(pc),"\",21)=Schedule d
 ...s rowid=Schedule_"||"_pc_"||"_DateTo
 ...i '$$select(rowid),Delete'="Y" q
 ...s (xx1,xx2)=""
 ...  ;---&SQL(SELECT CTPC_CalcManual,CTPC_PercentageOfCommon INTO :xx1,:xx2 FROM CT_PaymentCode WHERE CTPC_RowID=:pc)
  ...  ;--- ** SQL PUBLIC Variables: SQLCODE, pc, xx1, xx2
 ... Do %0Io
 ...s xx1=$p(xx1,$c(1)),xx2=$p(xx2,$c(1))
 ...i xx1="C",$$copy(PCFrom,DateFrom,pc,DateTo,xx2)
 q SQLCODE
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTSHP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSHP0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k PLIST
  ;---&SQL(FETCH CTSHP INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() n SQLCODE
  ;---&SQL(CLOSE CTSHP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSHP0c
 q 0
 ;
select(ROWID,skip) s ROWId=$g(ROWId),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM CT_Schedule_PaymentCode WHERE CTSHP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) K PLIST(1) d pre("N")
  ;---&sql(INSERT INTO CT_Schedule_PaymentCode VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Po
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&sql(UPDATE CT_Schedule_PaymentCode VALUES :PLIST() WHERE CTSHP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Ro
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_Schedule_PaymentCode WHERE CTSHP_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0To
 k ^TMP("Comments",$j)
 q SQLCODE
pre(xUpdate) d PreSQL^SSUTIL4("","")
 f j=2,5 S PLIST(j)=$$ALPHAUP^SSUTIL4(PLIST(j))
 Q
 ; Adjust certain fields
adjust d PostSQL^SSUTIL4("")
 q
getdate(PayCode) n (PayCode,PLIST) k ^TMP($zn,$j) s PayCode=$g(PayCode)
  ;---s Schedule="" &SQL(SELECT CTPC_ItemSchedule_DR INTO :Schedule FROM CT_PaymentCode WHERE CTPC_RowID=:PayCode)
   ;--- ** SQL PUBLIC Variables: PayCode, SQLCODE, Schedule
 s Schedule="" Do %0Vo
 s Schedule=$p(Schedule,$c(1))
 i $l(Schedule) d
 .s (cnt,date)="" f  s date=$o(^TSCH(Schedule,"AMOUNT",PayCode,date)) q:date=""  d
 ..i '$$select(Schedule_"||"_PayCode_"||"_date) d
 ...s xx="" f j=1:1:PLIST s $p(xx,$c(28),j)=$p(PLIST(j),$c(1))
 ...s cnt=cnt+1,^TMP($zn,$j,cnt)=xx
 k PLIST s x="" f j=1:1 s x=$o(^TMP($zn,$j,x),-1) q:x=""  s PLIST(j)=^(x)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTSHP0o s $zt="%CTSHP0E" s SQLCODE=$s($g(%CTSHP0c):-101,1:0) q:SQLCODE'=0  s %CTSHP0d(10)=0 s %CTSHP0d(11)=0,%CTSHP0d(12)=""
 s %CTSHP0d(7)=$g(par)
 s %CTSHP0c=1 q
%CTSHP0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTSHP0c,%CTSHP0d,%CTSHP0E,%CTSHP0l,%CTSHP0n,%CTSHP0R,%CTSHP0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTSHP0d(1)=%CTSHP0d(7)
 i %CTSHP0d(1)="" g %0ABdun
 s %CTSHP0d(3)=""
%0ABk1 s %CTSHP0d(3)=$o(^TSCH(%CTSHP0d(1),"AMOUNT",%CTSHP0d(3)))
 i %CTSHP0d(3)="" g %0ABdun
 s %CTSHP0d(4)=""
%0ABk2 s %CTSHP0d(4)=$o(^TSCH(%CTSHP0d(1),"AMOUNT",%CTSHP0d(3),%CTSHP0d(4)))
 i %CTSHP0d(4)="" g %0ABk1
 s %CTSHP0d(19)=$g(^TSCH(%CTSHP0d(1),"AMOUNT",%CTSHP0d(3),%CTSHP0d(4)))
 s %CTSHP0d(5)=$p(%CTSHP0d(19),"\",1) s %CTSHP0d(6)=$p(%CTSHP0d(19),"\",2)
 s %CTSHP0d(2)=(%CTSHP0d(1))_"||"_(%CTSHP0d(3))_"||"_(%CTSHP0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TSCH($p(%CTSHP0d(2),"||",1),"AMOUNT",$p(%CTSHP0d(2),"||",2),$p(%CTSHP0d(2),"||",3))#"S":$zu(115,4) i $t { s %CTSHP0d(11)=1,%CTSHP0d(12)=$name(^TSCH($p(%CTSHP0d(2),"||",1),"AMOUNT",$p(%CTSHP0d(2),"||",2),$p(%CTSHP0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule_PaymentCode for RowID value: "_%CTSHP0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTSHP0d(9)=$p(%CTSHP0d(2),"||"),%CTSHP0d(3)=$p(%CTSHP0d(2),"||",2),%CTSHP0d(4)=$p(%CTSHP0d(2),"||",3)
 i %CTSHP0d(9)'="",%CTSHP0d(3)'="",%CTSHP0d(4)'="",$d(^TSCH(%CTSHP0d(9),"AMOUNT",%CTSHP0d(3),%CTSHP0d(4)))
 e  g %0ACdun
 s %CTSHP0d(26)=$g(^TSCH(%CTSHP0d(9),"AMOUNT",%CTSHP0d(3),%CTSHP0d(4)))
 s %CTSHP0d(5)=$p(%CTSHP0d(26),"\",1) s %CTSHP0d(6)=$p(%CTSHP0d(26),"\",2)
 s %CTSHP0d(1)=$p(%CTSHP0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTSHP0d(10)=%CTSHP0d(10)+1,%ROWCOUNT=%CTSHP0d(10),%ROWID=%CTSHP0d(2),%CTSHP0c=10 q
%CTSHP0f i '$g(%CTSHP0c) { s SQLCODE=-102 q  } i %CTSHP0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTSHP0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTSHP0d(10),%CTSHP0c=100 q  } g %0Afirst:%CTSHP0c=1
%0ACdun i $zu(115,2)=1,$g(%CTSHP0d(11))=1 { l -@%CTSHP0d(12) s %CTSHP0d(11)=0 }
 g %0ABk2
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTSHP0d(10),SQLCODE=100,%CTSHP0c=100 q
%CTSHP0c i '$g(%CTSHP0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTSHP0d(10)),1:0)
 i $zu(115,2)=1,$g(%CTSHP0d(11))=1 { l -@%CTSHP0d(12) } k %CTSHP0c,%CTSHP0d,%CTSHP0E,%CTSHP0l,%CTSHP0n,%CTSHP0R,%CTSHP0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTSHP0c=100 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(Schedule)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TSCH(%mmmsqld(3)))
 e  g %0CBdun
 s %mmmsqld(10)=$g(^TSCH(%mmmsqld(3)))
 s PC=$p(%mmmsqld(10),"\",2)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TSCH($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TSCH($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TSCH(%mmmsqld(3)))
 e  g %0CCdun
 s %mmmsqld(13)=$g(^TSCH(%mmmsqld(3)))
 s PC=$p(%mmmsqld(13),"\",2)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(8)=$g(PCTo)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(7)=%mmmsqld(8)
 i %mmmsqld(7)'="",$d(^TTAB("BI",%mmmsqld(7)))
 e  g %0EBdun
 s %mmmsqld(16)=$g(^TTAB("BI",%mmmsqld(7)))
 s Schedule=$p(%mmmsqld(16),"\",21) s F1=$p(%mmmsqld(16),"\",2) s F2=$p(%mmmsqld(16),"\",3)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTAB("BI",$p(%mmmsqld(7),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("BI",$p(%mmmsqld(7),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PaymentCode for RowID value: "_%mmmsqld(7) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(7)'="",$d(^TTAB("BI",%mmmsqld(7)))
 e  g %0ECdun
 s %mmmsqld(21)=$g(^TTAB("BI",%mmmsqld(7)))
 s Schedule=$p(%mmmsqld(21),"\",21) s F1=$p(%mmmsqld(21),"\",2) s F2=$p(%mmmsqld(21),"\",3)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(PCFrom)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0GBdun
 s %mmmsqld(12)=$g(^TTAB("BI",%mmmsqld(3)))
 s Schedule=$p(%mmmsqld(12),"\",21)
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TTAB("BI",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BI",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PaymentCode for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0GCdun
 s %mmmsqld(17)=$g(^TTAB("BI",%mmmsqld(3)))
 s Schedule=$p(%mmmsqld(17),"\",21)
%0GBuncommitted ;
 s SQLCODE=0 g %0Gc
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(pc)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("BI",%mmmsqld(5)))
 e  g %0IBdun
 s %mmmsqld(14)=$g(^TTAB("BI",%mmmsqld(5)))
 s xx1=$p(%mmmsqld(14),"\",2) s xx2=$p(%mmmsqld(14),"\",3)
 g:$zu(115,2)=0 %0IBuncommitted i $zu(115,2)=1 l +^TTAB("BI",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("BI",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PaymentCode for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("BI",%mmmsqld(5)))
 e  g %0ICdun
 s %mmmsqld(19)=$g(^TTAB("BI",%mmmsqld(5)))
 s xx1=$p(%mmmsqld(19),"\",2) s xx2=$p(%mmmsqld(19),"\",3)
%0IBuncommitted ;
 s SQLCODE=0 g %0Ic
%0ICdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ic
%0Lo d %CTSHP0f q:SQLCODE'=0
 s PLIST(0)=%CTSHP0d(1),PLIST(1)=%CTSHP0d(2),PLIST(2)=%CTSHP0d(3),PLIST(3)=%CTSHP0d(4),PLIST(4)=%CTSHP0d(5),PLIST(5)=%CTSHP0d(6)
 q
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(8)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(8)
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(10)'="",PLIST(2)'="",PLIST(3)'="",$d(^TSCH(%mmmsqld(10),"AMOUNT",PLIST(2),PLIST(3)))
 e  g %0NBdun
 s %mmmsqld(19)=$g(^TSCH(%mmmsqld(10),"AMOUNT",PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(19),"\",1) s PLIST(5)=$p(%mmmsqld(19),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TSCH($p(PLIST(1),"||",1),"AMOUNT",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TSCH($p(PLIST(1),"||",1),"AMOUNT",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule_PaymentCode for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(10)'="",PLIST(2)'="",PLIST(3)'="",$d(^TSCH(%mmmsqld(10),"AMOUNT",PLIST(2),PLIST(3)))
 e  g %0NCdun
 s %mmmsqld(26)=$g(^TSCH(%mmmsqld(10),"AMOUNT",PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(26),"\",1) s PLIST(5)=$p(%mmmsqld(26),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
%0Po n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTSchedulePaymentCode.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Po
%0Ro n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Rerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TSCH(%mmmsqld(4),"AMOUNT",%mmmsqld(5),%mmmsqld(6)))
 e  g %0RBdun
 s %mmmsqld(15)=$$%getlock^User.CTSchedulePaymentCode.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Rc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TSCH(%mmmsqld(4),"AMOUNT",%mmmsqld(5),%mmmsqld(6)))
 e  g %0RCdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTSchedulePaymentCode.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTSchedulePaymentCode.T1(%mmmsqld(2)) g %0Rc
%0RCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTSchedulePaymentCode.T1(%mmmsqld(2)) g:SQLCODE<0 %0Rc
%0RBdun 
%0RAdun 
%0Rc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Rerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTSchedulePaymentCode.T1(%mmmsqld(2)) g %0Rc
%0To n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Terr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TSCH(%mmmsqld(3),"AMOUNT",%mmmsqld(4),%mmmsqld(5)))
 e  g %0TBdun
 s %mmmsqld(14)=$$%getlock^User.CTSchedulePaymentCode.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Tc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TSCH(%mmmsqld(3),"AMOUNT",%mmmsqld(4),%mmmsqld(5)))
 e  g %0TCdun
 d %delete^User.CTSchedulePaymentCode.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTSchedulePaymentCode.T1(%mmmsqld(1)) g %0Tc
%0TCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTSchedulePaymentCode.T1(%mmmsqld(1)) g:SQLCODE<0 %0Tc
%0TBdun 
%0TAdun 
%0Tc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Terr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTSchedulePaymentCode.T1(%mmmsqld(1)) g %0Tc
%0Vo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Verr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(PayCode)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0VBdun
 s %mmmsqld(12)=$g(^TTAB("BI",%mmmsqld(3)))
 s Schedule=$p(%mmmsqld(12),"\",21)
 g:$zu(115,2)=0 %0VBuncommitted i $zu(115,2)=1 l +^TTAB("BI",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BI",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PaymentCode for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0VCdun
 s %mmmsqld(17)=$g(^TTAB("BI",%mmmsqld(3)))
 s Schedule=$p(%mmmsqld(17),"\",21)
%0VBuncommitted ;
 s SQLCODE=0 g %0Vc
%0VCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0VBdun 
%0VAdun 
%0Vc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Verr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Vc
]]></Routine>
</Export>
