<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSSVBE" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSSVBE ; IG 11/9/96 ; MVB Control code access for SS_VBExecutables
 ;
 ; supported calls:
 ;
 ; $$select^MVBSSVBE(ROWID,skip)
 ; $$open^MVBSSVBE(skip,name,desc,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSSVBE(skip,name,desc,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSSVBE(skip,name,desc,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSSVBE(skip,name,desc,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSSVBE()
 ; $$insert^MVBSSVBE()
 ; $$update^MVBSSVBE(ROWID)
 ; $$delete^MVBSSVBE(ROWID)
 ;
  ;---&SQL(DECLARE SSVBE CURSOR FOR SELECT * FROM SS_VBExecutables
   ;---         WHERE ((%ALPHAUP(SSVBE_Code) %STARTSWITH %ALPHAUP(:name)) OR (:name is NULL))
   ;---         AND ((%ALPHAUP(SSVBE_Description) %STARTSWITH %ALPHAUP(:desc)) OR (:desc IS NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, desc, name
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
 i $d(^SS("SSVBE",0)) s ^SS("SSVBE",0)=$o(^SS("SSVBE",""),-1)
  ;---&SQL(insert INTO SS_VBExecutables VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID) k PLIST(1)
  ;---&SQL(UPDATE SS_VBExecutables VALUES :PLIST() WHERE SSVBE_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID)  ;---&SQL(DELETE FROM SS_VBExecutables WHERE SSVBE_RowID=:ROWID)
  ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Open the cursor
open(skip,name,desc,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),name=$g(name),desc=$g(desc)
  ;---&SQL(OPEN SSVBE)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSVBE0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,name,desc,p3,p4,p5,p6,p7,p8,p9) K PLIST s skip=$g(skip),name=$g(name),desc=$g(desc)
  ;---&SQL(FETCH SSVBE INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,name,desc,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j) s skip=$g(skip),name=$g(name),desc=$g(desc)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(skip,name,desc) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,name,desc,p3,p4,p5,p6,p7,p8,p9) N (skip,name,desc,PLIST) K ^TMP($zn,$j) s skip=$g(skip),name=$g(name),desc=$g(desc)
 i $$open(skip,name,desc)
 f cnt=1:1 Q:$$fetch(skip,name,desc)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE SSVBE) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSVBE0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) k PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM SS_VBExecutables WHERE SSVBE_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
selcode(ROWID) k PLIST s ROWID=$$ALPHAUP^SSUTIL4(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM SS_VBExecutables WHERE %ALPHAUP(SSVBE_Code)=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
 ;
getall() n (PLIST) k ^TMP($zn,$j)
 i $$open("Y")
 f cnt=1:1 q:$$fetch("Y")  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%SSVBE0o s $zt="%SSVBE0E" s SQLCODE=$s($g(%SSVBE0c):-101,1:0) q:SQLCODE'=0  s %SSVBE0d(19)=0 s %SSVBE0d(20)=0,%SSVBE0d(21)=""
 s %SSVBE0d(9)=$g(name),%SSVBE0d(11)=$g(name),%SSVBE0d(13)=$g(desc),%SSVBE0d(15)=$g(desc)
 s %SSVBE0d(14)=$zu(28,%SSVBE0d(13),6)
 s %SSVBE0d(10)=$zu(28,%SSVBE0d(9),6)
 s %SSVBE0c=1 q
%SSVBE0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SSVBE0c,%SSVBE0d,%SSVBE0E,%SSVBE0l,%SSVBE0n,%SSVBE0R,%SSVBE0Z q
%0Afirst 
 ; asl MOD# 2
 s %SSVBE0d(1)=""
%0ABk1 s %SSVBE0d(1)=$o(^SS("SSVBE",%SSVBE0d(1)))
 i %SSVBE0d(1)="" g %0ABdun
 i 1]]%SSVBE0d(1) g %0ABk1
 s %SSVBE0d(26)=$g(^SS("SSVBE",%SSVBE0d(1)))
 s %SSVBE0d(2)=$p(%SSVBE0d(26),"^",1) s %SSVBE0d(3)=$p(%SSVBE0d(26),"^",2) s %SSVBE0d(4)=$p(%SSVBE0d(26),"^",3) s %SSVBE0d(5)=$p(%SSVBE0d(26),"^",4) s %SSVBE0d(6)=$p(%SSVBE0d(26),"^",5) s %SSVBE0d(7)=$p(%SSVBE0d(26),"^",6)
 s %SSVBE0d(8)=$zu(28,%SSVBE0d(2),6) s %SSVBE0d(12)=$zu(28,%SSVBE0d(3),6)
 g:'((($c(0)[%SSVBE0d(10))||(%SSVBE0d(10)=$c(32,0)&&($e(%SSVBE0d(8))=$c(32)))||(%SSVBE0d(10)=$e(%SSVBE0d(8),1,$l(%SSVBE0d(10)))))||(%SSVBE0d(11)="")) %0ABk1
 g:'((($c(0)[%SSVBE0d(14))||(%SSVBE0d(14)=$c(32,0)&&($e(%SSVBE0d(12))=$c(32)))||(%SSVBE0d(14)=$e(%SSVBE0d(12),1,$l(%SSVBE0d(14)))))||(%SSVBE0d(15)="")) %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(%SSVBE0d(1),"||",1))#"S":$zu(115,4) i $t { s %SSVBE0d(20)=1,%SSVBE0d(21)=$name(^SS("SSVBE",$p(%SSVBE0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBExecutables for RowID value: "_%SSVBE0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SSVBE0d(17)=$lb(""_%SSVBE0d(12),""_%SSVBE0d(8))
 i %SSVBE0d(1)'="",$d(^SS("SSVBE",%SSVBE0d(1)))
 i '$t
 e  i 1]]%SSVBE0d(1)
 i  g %0ACdun
 s %SSVBE0d(31)=$g(^SS("SSVBE",%SSVBE0d(1)))
 s %SSVBE0d(2)=$p(%SSVBE0d(31),"^",1) s %SSVBE0d(3)=$p(%SSVBE0d(31),"^",2) s %SSVBE0d(4)=$p(%SSVBE0d(31),"^",3) s %SSVBE0d(5)=$p(%SSVBE0d(31),"^",4) s %SSVBE0d(6)=$p(%SSVBE0d(31),"^",5) s %SSVBE0d(7)=$p(%SSVBE0d(31),"^",6)
 s %SSVBE0d(8)=$zu(28,%SSVBE0d(2),6) s %SSVBE0d(12)=$zu(28,%SSVBE0d(3),6)
 s %SSVBE0d(18)=$lb(""_%SSVBE0d(12),""_%SSVBE0d(8))
 g:%SSVBE0d(17)'=%SSVBE0d(18) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SSVBE0d(19)=%SSVBE0d(19)+1,%ROWCOUNT=%SSVBE0d(19),%ROWID=%SSVBE0d(1),%SSVBE0c=10 q
%SSVBE0f i '$g(%SSVBE0c) { s SQLCODE=-102 q  } i %SSVBE0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SSVBE0d(19))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SSVBE0d(19),%SSVBE0c=100 q  } g %0Afirst:%SSVBE0c=1
%0ACdun i $zu(115,2)=1,$g(%SSVBE0d(20))=1 { l -@%SSVBE0d(21) s %SSVBE0d(20)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SSVBE0d(19),SQLCODE=100,%SSVBE0c=100 q
%SSVBE0c i '$g(%SSVBE0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SSVBE0d(19)),1:0)
 i $zu(115,2)=1,$g(%SSVBE0d(20))=1 { l -@%SSVBE0d(21) } k %SSVBE0c,%SSVBE0d,%SSVBE0E,%SSVBE0l,%SSVBE0n,%SSVBE0R,%SSVBE0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SSVBE0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:7 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSVBExecutables.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^SS("SSVBE",%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.SSVBExecutables.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^SS("SSVBE",%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  g %0ECdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.SSVBExecutables.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.SSVBExecutables.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.SSVBExecutables.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.SSVBExecutables.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^SS("SSVBE",%mmmsqld(1)))
 i '$t
 e  i 1]]%mmmsqld(1)
 i  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.SSVBExecutables.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^SS("SSVBE",%mmmsqld(1)))
 i '$t
 e  i 1]]%mmmsqld(1)
 i  g %0GCdun
 d %delete^User.SSVBExecutables.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.SSVBExecutables.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.SSVBExecutables.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.SSVBExecutables.T1(%mmmsqld(1)) g %0Gc
%0Jo d %SSVBE0f q:SQLCODE'=0
 s PLIST(1)=%SSVBE0d(1),PLIST(2)=%SSVBE0d(2),PLIST(3)=%SSVBE0d(3),PLIST(4)=%SSVBE0d(4),PLIST(5)=%SSVBE0d(5),PLIST(6)=%SSVBE0d(6),PLIST(7)=%SSVBE0d(7)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(9)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 i PLIST(1)'="",$d(^SS("SSVBE",PLIST(1)))
 i '$t
 e  i 1]]PLIST(1)
 i  g %0LBdun
 s %mmmsqld(17)=$g(^SS("SSVBE",PLIST(1)))
 s PLIST(2)=$p(%mmmsqld(17),"^",1) s PLIST(3)=$p(%mmmsqld(17),"^",2) s PLIST(4)=$p(%mmmsqld(17),"^",3) s PLIST(5)=$p(%mmmsqld(17),"^",4) s PLIST(6)=$p(%mmmsqld(17),"^",5) s PLIST(7)=$p(%mmmsqld(17),"^",6)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(PLIST(1),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^SS("SSVBE",$p(PLIST(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBExecutables for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(1)'="",$d(^SS("SSVBE",PLIST(1)))
 i '$t
 e  i 1]]PLIST(1)
 i  g %0LCdun
 s %mmmsqld(22)=$g(^SS("SSVBE",PLIST(1)))
 s PLIST(2)=$p(%mmmsqld(22),"^",1) s PLIST(3)=$p(%mmmsqld(22),"^",2) s PLIST(4)=$p(%mmmsqld(22),"^",3) s PLIST(5)=$p(%mmmsqld(22),"^",4) s PLIST(6)=$p(%mmmsqld(22),"^",5) s PLIST(7)=$p(%mmmsqld(22),"^",6)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(10)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=""
%0NBk1 s PLIST(1)=$o(^SS("SSVBE",PLIST(1)))
 i PLIST(1)="" g %0NBdun
 i 1]]PLIST(1) g %0NBk1
 s %mmmsqld(20)=$g(^SS("SSVBE",PLIST(1)))
 s PLIST(2)=$p(%mmmsqld(20),"^",1) s PLIST(3)=$p(%mmmsqld(20),"^",2) s PLIST(4)=$p(%mmmsqld(20),"^",3) s PLIST(5)=$p(%mmmsqld(20),"^",4) s PLIST(6)=$p(%mmmsqld(20),"^",5) s PLIST(7)=$p(%mmmsqld(20),"^",6)
 s %mmmsqld(9)=$zu(28,PLIST(2),6)
 g:'(%mmmsqld(9)=%mmmsqld(10)) %0NBk1
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(PLIST(1),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^SS("SSVBE",$p(PLIST(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBExecutables for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(12)=$lb(""_%mmmsqld(9))
 i PLIST(1)'="",$d(^SS("SSVBE",PLIST(1)))
 i '$t
 e  i 1]]PLIST(1)
 i  g %0NCdun
 s %mmmsqld(25)=$g(^SS("SSVBE",PLIST(1)))
 s PLIST(2)=$p(%mmmsqld(25),"^",1) s PLIST(3)=$p(%mmmsqld(25),"^",2) s PLIST(4)=$p(%mmmsqld(25),"^",3) s PLIST(5)=$p(%mmmsqld(25),"^",4) s PLIST(6)=$p(%mmmsqld(25),"^",5) s PLIST(7)=$p(%mmmsqld(25),"^",6)
 s %mmmsqld(9)=$zu(28,PLIST(2),6)
 s %mmmsqld(13)=$lb(""_%mmmsqld(9))
 g:%mmmsqld(12)'=%mmmsqld(13) %0NCdun
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
 g %0NBk1
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
]]></Routine>
</Export>
