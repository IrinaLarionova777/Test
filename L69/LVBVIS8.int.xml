<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIS8" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIS8 ; IG 6/5/98 ; MVB Control data access for EP_Visit
 ;
 ; supported calls:
 ;
 ; $$open^LVBVIS7(type,episodes,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVIS7(type,episodes,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVIS7(type,episodes,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVIS7()
 ; $$getall^LVBVIS7(type,episodes)
 ;
 ; type : C-Credit
 ;        J-Journal
 ;        I-Invoice
open(type,episodes,p2,p3,p4,p5,p6,p7,p8,p9) n (type,episodes) k ^TMP($zn,$j) s type=$g(type),episodes=$g(episodes)
 ; create full list of episodes
 k epis f j1=1:1:$l(episodes,",") s epis=$p(episodes,",",j1) d
 .s (master,list)=""
 .  ;---&sql(SELECT EPVIS_PricingEpisodeMaster,EPVIS_PricingEpisodes INTO :master,:list FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, epis, list, master
 . Do %0Ao
 .s master=$p(master,$c(1)),list=$p(list,$c(1)) i '$l(master) s master=epis
 .i $l(master) s epis(master)=master
 .i $l(list) f j2=1:1:$l(list,",") s ep=$p(list,",",j2) i $l(ep) s epis(ep)=master
 i type="C" d
 .s epis="" f  s epis=$o(epis(epis)) q:epis=""  s master=epis(epis) d
 ..s (mrn,date)=""
 ..  ;---&sql(SELECT EPVIS_DebtorNumber_DR,EPVIS_DateOfCollection INTO :mrn,:date FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, date, epis, mrn
 .. Do %0Co
 ..s mrn=$p(mrn,$c(1)),date=$p(date,$c(1)) i $l(mrn),$l(date) d
 ...s x1="" f  s x1=$o(^TDEB(mrn,date,0,epis,"CREDIT",x1)) q:x1=""  s x2=$p(^(x1),"\",2) i $l(x2) s ^TMP($zn,$j,"LIST",master_" "_epis_" "_x2_" "_x1)=""
 i type="J" d
 .s epis="" f  s epis=$o(epis(epis)) q:epis=""  s master=epis(epis) d
 ..s (mrn,date)=""
 ..  ;---&sql(SELECT EPVIS_DebtorNumber_DR,EPVIS_DateOfCollection INTO :mrn,:date FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, date, epis, mrn
 .. Do %0Eo
 ..s mrn=$p(mrn,$c(1)),date=$p(date,$c(1)) i $l(mrn),$l(date) d
 ...s x1="" f  s x1=$o(^TDEB(mrn,date,0,epis,"JOURNAL",x1)) q:x1=""  s x2=$p(^(x1),"\",2) i $l(x2) s ^TMP($zn,$j,"LIST",master_" "_epis_" "_x2_" "_x1)=""
 i type="I" d
 .s epis="" f  s epis=$o(epis(epis)) q:epis=""  d
 ..s (invoice)=""
 ..  ;---&sql(SELECT EPVIS_InvoiceBatch_DR INTO :invoice FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, epis, invoice
 .. Do %0Go
 ..s invoice=$p(invoice,$c(1)) i $l(invoice) d
 ...s x1="" f  s x1=$o(^TEPI(epis,7,x1)) q:x1=""  s ^TMP($zn,$j,"LIST",epis_"  "_epis_"||"_x1)=""
 s ^TMP($zn,$j,"LIST")=""
 q 0
fetch(type,episodes,p2,p3,p4,p5,p6,p7,p8,p9) n (type,episodes,PLIST) s SQLCODE=100 k ^TMP($zn,$j,"fetch")
 s line=$g(^TMP($zn,$j,"LIST")),line=$o(^TMP($zn,$j,"LIST",line)),^TMP($zn,$j,"LIST")=line
 i $l(line) s SQLCODE=0 d
 .i type="C" d
 ..s master=$p(line," ",1),epis=$p(line," ",2),date=$p(line," ",3),rowid=$p(line," ",4)
 ..i $l(rowid,"||")=2,'$$select^LVBCRBL(rowid) d
 ...s ^TMP($zn,$j,"fetch",1)=master
 ...s ^TMP($zn,$j,"fetch",2)=epis
 ...s ^TMP($zn,$j,"fetch",3)=date
 ...s ^TMP($zn,$j,"fetch",4)=$p(rowid,"||",1,2)
 ...s ^TMP($zn,$j,"fetch",5)=PLIST(7)
 ..i $l(rowid,"||")=3,'$$select^LVBCRBLB(rowid) d
 ...s ^TMP($zn,$j,"fetch",1)=master
 ...s ^TMP($zn,$j,"fetch",2)=epis
 ...s ^TMP($zn,$j,"fetch",3)=date
 ...s ^TMP($zn,$j,"fetch",4)=$p(rowid,"||",1,2)
 ...s ^TMP($zn,$j,"fetch",5)=PLIST(3)
 .i type="J" d
 ..s master=$p(line," ",1),epis=$p(line," ",2),date=$p(line," ",3),rowid=$p(line," ",4)
 ..i '$$select^LVBJOU(rowid) d
 ...s ^TMP($zn,$j,"fetch",1)=master
 ...s ^TMP($zn,$j,"fetch",2)=epis
 ...s ^TMP($zn,$j,"fetch",3)=date
 ...s ^TMP($zn,$j,"fetch",4)=PLIST(3)
 ...s ^TMP($zn,$j,"fetch",5)=PLIST(9)
 ...s ^TMP($zn,$j,"fetch",6)=PLIST(15)
 ...s ^TMP($zn,$j,"fetch",7)=PLIST(17)
 ...s ^TMP($zn,$j,"fetch",8)=PLIST(18)
 .i type="I" d
 ..s epis=$p(line," ",1),rowid=$p(line," ",3)
 ..i '$$select^LVBVISBI(rowid) m ^TMP($zn,$j,"fetch")=PLIST
 k PLIST m PLIST=^TMP($zn,$j,"fetch")
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ; Fetch all data
fetchbuffer(type,episodes,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j,10) s type=$g(type),episodes=$g(episodes)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(type,episodes) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,10,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,10,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,10) k ^TMP($zn,$j,10)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
close() k ^TMP($zn,$j)
 q 0
getall(TYPE,episodes) n (TYPE,episodes,PLIST) s TYPE=$g(TYPE),episodes=$g(episodes) k ^TMP($zn,$j,"getall")
 i '$l(TYPE) s TYPE="I,C,J"
 f j1=1:1:$l(TYPE,",") s type=$p(TYPE,",",j1) d
 .i $$open(type,episodes)
 .f  q:$$fetch(type,episodes)  d
 ..s x=$o(^TMP($zn,$j,"getall",""),-1)+1
 ..f j2=1:1:PLIST s $p(^TMP($zn,$j,"getall",x),$c(2),j2)=PLIST(j2)
 .i $$close()
 m PLIST=^TMP($zn,$j,"getall")
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,"getall")
 q 0
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ABdun
 s %mmmsqld(12)=$g(^TEPI(%mmmsqld(5),7))
 s master=$p(%mmmsqld(12),"\",7) s list=$p(%mmmsqld(12),"\",2)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ACdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5),7))
 s master=$p(%mmmsqld(15),"\",7) s list=$p(%mmmsqld(15),"\",2)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0CBdun
 s %mmmsqld(12)=$g(^TEPI(%mmmsqld(5)))
 s mrn=$p(%mmmsqld(12),"\",18) s date=$p(%mmmsqld(12),"\",10)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0CCdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5)))
 s mrn=$p(%mmmsqld(15),"\",18) s date=$p(%mmmsqld(15),"\",10)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(12)=$g(^TEPI(%mmmsqld(5)))
 s mrn=$p(%mmmsqld(12),"\",18) s date=$p(%mmmsqld(12),"\",10)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ECdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5)))
 s mrn=$p(%mmmsqld(15),"\",18) s date=$p(%mmmsqld(15),"\",10)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0GBdun
 s %mmmsqld(10)=$g(^TEPI(%mmmsqld(3),7))
 s invoice=$p(%mmmsqld(10),"\",4)
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TEPI($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0GCdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(3),7))
 s invoice=$p(%mmmsqld(13),"\",4)
%0GBuncommitted ;
 s SQLCODE=0 g %0Gc
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
]]></Routine>
</Export>
