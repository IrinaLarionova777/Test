<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt5481" type="INT" languagemode="0"><![CDATA[
mt5481  ; Compiled April 23, 2007 10:19:07 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt5481(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0C^mt5481
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt5481(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$p($g(%data(2)),$c(1))'="" d
 . s %data(1)=$p($g(%data(2)),$c(1))
 . d insertnw^mt5481(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt5481 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0A^mt5481
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:13 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt5481(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:13 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt5481(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt5481 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt5481
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TTAB("TS-ACTION",$p(%ROWID,$c(1))):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TTAB("TS-ACTION",$p(%ROWID,$c(1)))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TTAB("TS-ACTION",$p(%edit(2),$c(1),1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",1)=$p($g(%data(3)),$c(1))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",2)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",3)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",4)=$p($g(%data(6)),$c(1))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",5)=$g(%data(7))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",6)=$p($g(%data(8)),$c(1))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",7)=$g(%data(9))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",8)=$p($g(%data(10)),$c(1))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",9)=$g(%data(11))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",10)=$g(%data(12))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^TTAB("TS-ACTION",$p(%data(2),$c(1),1))) s $p(tempn,"\",11)=$g(%data(13))
 s:$d(tempn)#2 ^TTAB("TS-ACTION",$p(%data(2),$c(1),1))=tempn
maps q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(548)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(548)
 q
 d %0Do
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
  d %0Do^mt5481  s %didit=1
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(548)
 q
 d %0Eo
getold(%dataold) g %0Eo
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CT_TestSetComActions"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="CT_TestSetComActions Row ID" d %mdiag(%oper,-106,"Fld Int","Req","CTTSU_RowID","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field CTTSU_Order
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field CTTSU_Order
 d fde2^mt5481 q:'%ok
ini2 ; internal validation code and uniqueness, also int-ext
 d fdv2^mt5481 q:'%ok
 s %data(2)=%val
 d fdi2^mt5481 s $p(%data(2),$c(1),2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CT_TestSetComActions
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt5481 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt5481
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde10 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="4045",irn=548,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,548,2,4045,36,"get",%val))
 n found s found=0
 i 'found,$f("|Before|After|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("B|A","|",$l($p("|Before|After|","|"_%val_"|"),"|"))
 q
fde2 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde3 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="4038",irn=548,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,548,2,4038,36,"get",%val))
 n found,v s found=0,v=%val
 i 'found,$f("|Info with OK|Info with YN|Error with OK|Error with YN|Verification Queue without prompt|Verification Queue with OK|","|"_%val_"|") s found=1
 i 'found,$f("|Verification Queue with YN|Test Add without prompt|Test Add with OK|Test Add with YN|Superset Add without prompt|","|"_%val_"|") s found=1
 i 'found,$f("|Superset Add with OK|Superset Add with YN|Set field|Set data|Test Replace without prompt|Test Replace with OK|","|"_%val_"|") s found=1
 i 'found,$f("|Test Replace with YN|Add CopyTo without prompt|Add CopyTo with OK|Add CopyTo with YN|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("I1|I2|E1|E2|VQ0|VQ1||~","|",$l($p("|Info with OK|Info with YN|Error with OK|Error with YN|Verification Queue without prompt|Verification Queue with OK|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("VQ2|TA0|TA1|TA2|SA0||~","|",$l($p("|Verification Queue with YN|Test Add without prompt|Test Add with OK|Test Add with YN|Superset Add without prompt|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("SA1|SA2|SF|SD|TR0|TR1||~","|",$l($p("|Superset Add with OK|Superset Add with YN|Set field|Set data|Test Replace without prompt|Test Replace with OK|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("TR2|ACT0|ACT1|ACT2","|",$l($p("|Test Replace with YN|Add CopyTo without prompt|Add CopyTo with OK|Add CopyTo with YN|","|"_v_"|"),"|"))
 q
fde6 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde8 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="4043",irn=548,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,548,2,4043,36,"get",%val))
 n found s found=0
 i 'found,$f("|Update|DeAuthorize|Authorize|Load|Update/Autorize|Test Add|Test Delete|Test Received|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("U|DA|A|L|UA|TA|TD|TR","|",$l($p("|Update|DeAuthorize|Authorize|Load|Update/Autorize|Test Add|Test Delete|Test Received|","|"_%val_"|"),"|"))
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=2 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTTSU_Order","",$g(%msg))
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=3 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTTSU_ActionType","",$g(%msg))
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=6 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTTSU_StaffNotes","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTTSU_EventType","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=10 d etiok
 . s %msg="" d fde10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTTSU_EventTime","",$g(%msg))
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) s %data(11)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv2 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
fdv3 ; DO validation and additional validation code
 i %val="|~~|NULL|~~|" s %ok=0 q
 q
fdv6 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Io q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="CTTSU_RowID"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","CTTSU_RowID","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTTSU_RowID","",$g(%msg))
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTTSU_Order","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTTSU_ActionType","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTTSU_StaffNotes","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTTSU_EventType","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTTSU_EventTime","",$g(%msg))
 q
fdi10 s %val=$p("Before|After","|",$l($p("|B|A|","|"_%val_"|"),"|"))
 q
fdi2 s %val=$s(%val'=+%val:"",1:$fn(%val,""))
 q
fdi3 n v s v=%val
 s %val=$p("Info with OK|Info with YN|Error with OK|Error with YN|Verification Queue without prompt|Verification Queue with OK||~","|",$l($p("|I1|I2|E1|E2|VQ0|VQ1|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Verification Queue with YN|Test Add without prompt|Test Add with OK|Test Add with YN|Superset Add without prompt||~","|",$l($p("|VQ2|TA0|TA1|TA2|SA0|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Superset Add with OK|Superset Add with YN|Set field|Set data|Test Replace without prompt|Test Replace with OK||~","|",$l($p("|SA1|SA2|SF|SD|TR0|TR1|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Test Replace with YN|Add CopyTo without prompt|Add CopyTo with OK|Add CopyTo with YN","|",$l($p("|TR2|ACT0|ACT1|ACT2|","|"_v_"|"),"|"))
 q
fdi6 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi8 s %val=$p("Update|DeAuthorize|Authorize|Load|Update/Autorize|Test Add|Test Delete|Test Received","|",$l($p("|U|DA|A|L|UA|TA|TD|TR|","|"_%val_"|"),"|"))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),$p(%data(2),$c(1))'="" s %val=$p(%data(2),$c(1)) d fdi2 s $p(%data(2),$c(1),2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))'="" s %val=$p(%data(3),$c(1)) d fdi3 s $p(%data(3),$c(1),2)=%val
 i $d(%data(4)),%data(4)[$c(1) s %data(4)=$s($p(%data(4),$c(1))'="":$p(%data(4),$c(1)),1:$p(%data(4),$c(1),2))
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),$p(%data(6),$c(1))'="" s %val=$p(%data(6),$c(1)) d fdi6 s $p(%data(6),$c(1),2)=%val
 i $d(%data(7)),%data(7)[$c(1) s %data(7)=$s($p(%data(7),$c(1))'="":$p(%data(7),$c(1)),1:$p(%data(7),$c(1),2))
 i $d(%data(8)),$p(%data(8),$c(1))'="" s %val=$p(%data(8),$c(1)) d fdi8 s $p(%data(8),$c(1),2)=%val
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),$p(%data(10),$c(1))'="" s %val=$p(%data(10),$c(1)) d fdi10 s $p(%data(10),$c(1),2)=%val
 i $d(%data(11)),%data(11)[$c(1) s %data(11)=$s($p(%data(11),$c(1))'="":$p(%data(11),$c(1)),1:$p(%data(11),$c(1),2))
 i $d(%data(12)),%data(12)[$c(1) s %data(12)=$s($p(%data(12),$c(1))'="":$p(%data(12),$c(1)),1:$p(%data(12),$c(1),2))
 i $d(%data(13)),%data(13)[$c(1) s %data(13)=$s($p(%data(13),$c(1))'="":$p(%data(13),$c(1)),1:$p(%data(13),$c(1),2))
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt5481 q:'%ok
 q
 g ^mt5482
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^TTAB("TS-ACTION",%mmmsqld(1),%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 i %mmmsqld(4)'=+%mmmsqld(4) g %0DBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt5491(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0EBs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0EBs2 n v s v=%val
 s %val=$p("Info with OK|Info with YN|Error with OK|Error with YN|Verification Queue without prompt|Verification Queue with OK||~","|",$l($p("|I1|I2|E1|E2|VQ0|VQ1|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Verification Queue with YN|Test Add without prompt|Test Add with OK|Test Add with YN|Superset Add without prompt||~","|",$l($p("|VQ2|TA0|TA1|TA2|SA0|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Superset Add with OK|Superset Add with YN|Set field|Set data|Test Replace without prompt|Test Replace with OK||~","|",$l($p("|SA1|SA2|SF|SD|TR0|TR1|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Test Replace with YN|Add CopyTo without prompt|Add CopyTo with OK|Add CopyTo with YN","|",$l($p("|TR2|ACT0|ACT1|ACT2|","|"_v_"|"),"|")) q
%0EBs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0EBs4 s %val=$p("Update|DeAuthorize|Authorize|Load|Update/Autorize|Test Add|Test Delete|Test Received","|",$l($p("|U|DA|A|L|UA|TA|TD|TR|","|"_%val_"|"),"|")) q
%0EBs5 s %val=$p("Before|After","|",$l($p("|B|A|","|"_%val_"|"),"|")) q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s $P(%dataold(2),$C(1))=$p($g(%dataold(1)),"||",1,1)
 i $P(%dataold(2),$C(1))'="",$d(^TTAB("TS-ACTION",$P(%dataold(2),$C(1))))
 e  g %0EBdun
 s %mmmsqln=$g(^TTAB("TS-ACTION",$P(%dataold(2),$C(1))))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(6)=$p(%mmmsqln,"\",4) s %dataold(7)=$p(%mmmsqln,"\",5) s %dataold(8)=$p(%mmmsqln,"\",6) s %dataold(9)=$p(%mmmsqln,"\",7) s %dataold(10)=$p(%mmmsqln,"\",8) s %dataold(11)=$p(%mmmsqln,"\",9)
 s %dataold(12)=$p(%mmmsqln,"\",10) s %dataold(13)=$p(%mmmsqln,"\",11)
 
 s %val=$P(%dataold(2),$C(1)) d %0EBs1:%val'="" s $P(%dataold(2),$C(1),2)=%val
 s %val=$P(%dataold(3),$C(1)) d %0EBs2:%val'="" s $P(%dataold(3),$C(1),2)=%val
 s %val=$P(%dataold(6),$C(1)) d %0EBs3:%val'="" s $P(%dataold(6),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0EBs4:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s %val=$P(%dataold(10),$C(1)) d %0EBs5:%val'="" s $P(%dataold(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(5)'="",$d(^TTAB("TS-ACTION",%mmmsqld(5)))
 e  g %0IBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
