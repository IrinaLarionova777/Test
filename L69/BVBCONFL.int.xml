<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCONFL" type="INT" languagemode="0"><![CDATA[
BVBCONFL        ; MVB Control data access for BB_ControlFailure  ; Compiled May 22, 2000 13:23:09 for Cache for Windows
 ; SP 9/11/95 
 ; 
 ; supported calls: 
 ; 
 ; $$select^BVBCONFL(ROWID) 
 ; $$open^BVBCONFL(par) 
 ; $$fetch^BVBCONFL(par) 
 ; $$close^BVBCONFL() 
 ; 
 ; 
 ; 
 ; 
 ;
 ;
 ;
 q 
 ; GET ALL BB_ControlFailure 
open(lab,ts,user,date) 
 s lab=$g(lab),ts=$g(ts),user=$g(user),date=$g(date)
 d
 .i lab'="" d %CON100o q
 .i user'="" d %CON200o q
 .i ts'="" d %CON300o q
 .i date'="" d %CON500o q
 . d %CON400o
 q 0
 ;
fetch(lab,ts,user,date) k PLIST
 s lab=$g(lab),ts=$g(ts),user=$g(user),date=$g(date)
nx d
 .i lab'="" d %0Mo q
 .i user'="" d %0No q
 .i ts'="" d %0Oo q
 .i date'="" d %0Po q
 . d %0Qo q
 i 'SQLCODE,$$val(PLIST(1),lab,ts,user,date) g nx
 q SQLCODE
 ; 
 ; 
close() ;
 d %CON100c 
 d %CON200c 
 d %CON300c 
 d %CON400c 
 d %CON500c 
 q 0 
 ;        
 ;        
 ; 
insert()        ; 
 K PLIST(1) 
 d %0Wo 
 i 'SQLCODE q $$select(%ROWID) 
 q SQLCODE 
 ; 
update(RowID)        ; 
 k PLIST(1) 
 d %0Xo 
 q SQLCODE 
 ; 
delete(row) 
 d %0Yo
 q 0 
 ; 
 ; Adjust certain fields 
adjust n desref 
 q 
 ;
select(ROWID)  k PLIST 
 d %0Zo 
 s PLIST=$O(PLIST(""),-1) 
 q SQLCODE 
 ; 
 ; 
val(row,lab,ts,user,date) ;validate request, 0-valid,1-invalid 
 n (row,lab,ts,user,date) 
 d %00o
 q SQLCODE
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q
%0ABs3 s %val=$$timeext^%qarzdt(%val,1) q
%CON100o s SQLCODE=$s($g(%CON100c):-101,1:0) q:SQLCODE'=0
 s %CON100c=1 k %CON100m
 s %CON100E=$zt,%CON100f=0,%CON100e=0,%CON100L=""
 s %CON100d(2)=$P(lab,$C(1))
 s:%CON100d(2)="" %CON100d(2)=$E(lab,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CON100d(1)=$g(%CON100d(2))
 i %CON100d(1)="" g %0ABdun
 s $P(%CON100d(4),$C(1))=" "
%0ABk1 s $P(%CON100d(4),$C(1))=$zp(^BBCF(0,"Lab",%CON100d(1),$P(%CON100d(4),$C(1))))
 i $P(%CON100d(4),$C(1))="" g %0ABdun
 i $P(%CON100d(4),$C(1))'=+$P(%CON100d(4),$C(1)) g %0ABdun
 s %val=$P(%CON100d(4),$C(1)) d %0ABs1:%val'="" s $P(%CON100d(4),$C(1),2)=%val
 i $P(%CON100d(4),$C(1))'="",$d(^BBCF($P(%CON100d(4),$C(1))))
 i '$t
 e  i 1>$P(%CON100d(4),$C(1)),$P(%CON100d(4),$C(1))=+$P(%CON100d(4),$C(1))
 i  g %0ABk1
 s %CON100n=$g(^BBCF($P(%CON100d(4),$C(1))))
 s %CON100d(5)=$p(%CON100n,"^",2) s %CON100d(6)=$p(%CON100n,"^",3) s %CON100d(7)=$p(%CON100n,"^",4) s %CON100d(8)=$p(%CON100n,"^",5)
 s %val=$P(%CON100d(5),$C(1)) d %0ABs2:%val'="" s $P(%CON100d(5),$C(1),2)=%val
 s %val=$P(%CON100d(6),$C(1)) d %0ABs3:%val'="" s $P(%CON100d(6),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CON100f=%CON100f+1 s %CON100c=10 q
%CON100f i '$g(%CON100c) s SQLCODE=-102 q
 i %CON100c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CON100c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CON100c=100 q
%CON100c i '$g(%CON100c) s SQLCODE=-102 q
 k %CON100c,%CON100d,%CON100e,%CON100E,%CON100f,%CON100l,%CON100L,%CON100n,%CON100r,%CON100R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CON100E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%CON200o s SQLCODE=$s($g(%CON200c):-101,1:0) q:SQLCODE'=0
 s %CON200c=1 k %CON200m
 s %CON200E=$zt,%CON200f=0,%CON200e=0,%CON200L=""
 s %CON200d(2)=$P(user,$C(1))
 s:%CON200d(2)="" %CON200d(2)=$E(user,2,999)
 q
%0Dfirst   ;  init
 ; asl MOD# 2
 s %CON200d(1)=$g(%CON200d(2))
 i %CON200d(1)="" g %0DBdun
 s $P(%CON200d(4),$C(1))=" "
%0DBk1 s $P(%CON200d(4),$C(1))=$zp(^BBCF(0,"User",%CON200d(1),$P(%CON200d(4),$C(1))))
 i $P(%CON200d(4),$C(1))="" g %0DBdun
 i $P(%CON200d(4),$C(1))'=+$P(%CON200d(4),$C(1)) g %0DBdun
 s %val=$P(%CON200d(4),$C(1)) d %0ABs1:%val'="" s $P(%CON200d(4),$C(1),2)=%val
 i $P(%CON200d(4),$C(1))'="",$d(^BBCF($P(%CON200d(4),$C(1))))
 i '$t
 e  i 1>$P(%CON200d(4),$C(1)),$P(%CON200d(4),$C(1))=+$P(%CON200d(4),$C(1))
 i  g %0DBk1
 s %CON200n=$g(^BBCF($P(%CON200d(4),$C(1))))
 s %CON200d(5)=$p(%CON200n,"^",1) s %CON200d(6)=$p(%CON200n,"^",2) s %CON200d(7)=$p(%CON200n,"^",3) s %CON200d(8)=$p(%CON200n,"^",5)
 s %val=$P(%CON200d(6),$C(1)) d %0ABs2:%val'="" s $P(%CON200d(6),$C(1),2)=%val
 s %val=$P(%CON200d(7),$C(1)) d %0ABs3:%val'="" s $P(%CON200d(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CON200f=%CON200f+1 s %CON200c=10 q
%CON200f i '$g(%CON200c) s SQLCODE=-102 q
 i %CON200c=100 s SQLCODE=100 q
 s $zt="%0Derr^"_$zn s $ze="" n %val g %0Dfirst:%CON200c=1
 g %0DBk1
%0DBdun 
%0DAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CON200c=100 q
%CON200c i '$g(%CON200c) s SQLCODE=-102 q
 k %CON200c,%CON200d,%CON200e,%CON200E,%CON200f,%CON200l,%CON200L,%CON200n,%CON200r,%CON200R s SQLCODE=0 q
%0Derr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CON200E),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%CON300o s SQLCODE=$s($g(%CON300c):-101,1:0) q:SQLCODE'=0
 s %CON300c=1 k %CON300m
 s %CON300E=$zt,%CON300f=0,%CON300e=0,%CON300L=""
 s %CON300d(2)=$P(ts,$C(1))
 s:%CON300d(2)="" %CON300d(2)=$E(ts,2,999)
 q
%0Efirst   ;  init
 ; asl MOD# 2
 s %CON300d(1)=$g(%CON300d(2))
 i %CON300d(1)="" g %0EBdun
 s $P(%CON300d(4),$C(1))=" "
%0EBk1 s $P(%CON300d(4),$C(1))=$zp(^BBCF(0,"TS",%CON300d(1),$P(%CON300d(4),$C(1))))
 i $P(%CON300d(4),$C(1))="" g %0EBdun
 i $P(%CON300d(4),$C(1))'=+$P(%CON300d(4),$C(1)) g %0EBdun
 s %val=$P(%CON300d(4),$C(1)) d %0ABs1:%val'="" s $P(%CON300d(4),$C(1),2)=%val
 i $P(%CON300d(4),$C(1))'="",$d(^BBCF($P(%CON300d(4),$C(1))))
 i '$t
 e  i 1>$P(%CON300d(4),$C(1)),$P(%CON300d(4),$C(1))=+$P(%CON300d(4),$C(1))
 i  g %0EBk1
 s %CON300n=$g(^BBCF($P(%CON300d(4),$C(1))))
 s %CON300d(5)=$p(%CON300n,"^",1) s %CON300d(6)=$p(%CON300n,"^",2) s %CON300d(7)=$p(%CON300n,"^",3) s %CON300d(8)=$p(%CON300n,"^",4)
 s %val=$P(%CON300d(6),$C(1)) d %0ABs2:%val'="" s $P(%CON300d(6),$C(1),2)=%val
 s %val=$P(%CON300d(7),$C(1)) d %0ABs3:%val'="" s $P(%CON300d(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CON300f=%CON300f+1 s %CON300c=10 q
%CON300f i '$g(%CON300c) s SQLCODE=-102 q
 i %CON300c=100 s SQLCODE=100 q
 s $zt="%0Eerr^"_$zn s $ze="" n %val g %0Efirst:%CON300c=1
 g %0EBk1
%0EBdun 
%0EAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CON300c=100 q
%CON300c i '$g(%CON300c) s SQLCODE=-102 q
 k %CON300c,%CON300d,%CON300e,%CON300E,%CON300f,%CON300l,%CON300L,%CON300n,%CON300r,%CON300R s SQLCODE=0 q
%0Eerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CON300E),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%CON400o s SQLCODE=$s($g(%CON400c):-101,1:0) q:SQLCODE'=0
 s %CON400c=1 k %CON400m
 s %CON400E=$zt,%CON400f=0,%CON400e=0,%CON400L=""
 q
%0Ffirst   ;  init
 ; asl MOD# 2
 s $P(%CON400d(2),$C(1))=""
%0FBk1 s $P(%CON400d(2),$C(1))=$o(^BBCF($P(%CON400d(2),$C(1))))
 i $P(%CON400d(2),$C(1))="" g %0FBdun
 i 1>$P(%CON400d(2),$C(1)),$P(%CON400d(2),$C(1))=+$P(%CON400d(2),$C(1)) g %0FBk1
 i $P(%CON400d(2),$C(1))'=+$P(%CON400d(2),$C(1)) g %0FBdun
 s %CON400n=$g(^BBCF($P(%CON400d(2),$C(1))))
 s %CON400d(3)=$p(%CON400n,"^",1) s %CON400d(4)=$p(%CON400n,"^",2) s %CON400d(5)=$p(%CON400n,"^",3) s %CON400d(6)=$p(%CON400n,"^",4) s %CON400d(7)=$p(%CON400n,"^",5)
 s %val=$P(%CON400d(2),$C(1)) d %0ABs1:%val'="" s $P(%CON400d(2),$C(1),2)=%val
 s %val=$P(%CON400d(4),$C(1)) d %0ABs2:%val'="" s $P(%CON400d(4),$C(1),2)=%val
 s %val=$P(%CON400d(5),$C(1)) d %0ABs3:%val'="" s $P(%CON400d(5),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CON400f=%CON400f+1 s %CON400c=10 q
%CON400f i '$g(%CON400c) s SQLCODE=-102 q
 i %CON400c=100 s SQLCODE=100 q
 s $zt="%0Ferr^"_$zn s $ze="" n %val g %0Ffirst:%CON400c=1
 g %0FBk1
%0FBdun 
%0FAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CON400c=100 q
%CON400c i '$g(%CON400c) s SQLCODE=-102 q
 k %CON400c,%CON400d,%CON400e,%CON400E,%CON400f,%CON400l,%CON400L,%CON400n,%CON400r,%CON400R s SQLCODE=0 q
%0Ferr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CON400E),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0GAr1 s %val=$$dateint^%qarzdt(%val,1,"") s:%val<0 %ok=0
 q  
%CON500o s SQLCODE=$s($g(%CON500c):-101,1:0) q:SQLCODE'=0
 s %CON500c=1 k %CON500m
 s %CON500E=$zt,%CON500f=0,%CON500e=0,%CON500L=""
 s %CON500d(2)=$P(date,$C(1))
 i %CON500d(2)="",$L(date)>1 s %val=$E(date,2,999) d %0GAr1 s %CON500d(2)=%val
 q
%0Gfirst   ;  init
 ; asl MOD# 2
 s $P(%CON500d(1),$C(1))=$g(%CON500d(2))
 i $P(%CON500d(1),$C(1))="" g %0GBdun
 s $P(%CON500d(4),$C(1))=""
%0GBk1 s $P(%CON500d(4),$C(1))=$o(^BBCF(0,"Date",$P(%CON500d(1),$C(1)),$P(%CON500d(4),$C(1))))
 i $P(%CON500d(4),$C(1))="" g %0GBdun
 i $P(%CON500d(4),$C(1))'=+$P(%CON500d(4),$C(1)) g %0GBdun
 s %val=$P(%CON500d(1),$C(1)) d %0ABs2:%val'="" s $P(%CON500d(1),$C(1),2)=%val
 s %val=$P(%CON500d(4),$C(1)) d %0ABs1:%val'="" s $P(%CON500d(4),$C(1),2)=%val
 i $P(%CON500d(4),$C(1))'="",$d(^BBCF($P(%CON500d(4),$C(1))))
 i '$t
 e  i 1>$P(%CON500d(4),$C(1)),$P(%CON500d(4),$C(1))=+$P(%CON500d(4),$C(1))
 i  g %0GBk1
 s %CON500n=$g(^BBCF($P(%CON500d(4),$C(1))))
 s %CON500d(5)=$p(%CON500n,"^",1) s %CON500d(6)=$p(%CON500n,"^",3) s %CON500d(7)=$p(%CON500n,"^",4) s %CON500d(8)=$p(%CON500n,"^",5)
 s %val=$P(%CON500d(6),$C(1)) d %0ABs3:%val'="" s $P(%CON500d(6),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CON500f=%CON500f+1 s %CON500c=10 q
%CON500f i '$g(%CON500c) s SQLCODE=-102 q
 i %CON500c=100 s SQLCODE=100 q
 s $zt="%0Gerr^"_$zn s $ze="" n %val g %0Gfirst:%CON500c=1
 g %0GBk1
%0GBdun 
%0GAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CON500c=100 q
%CON500c i '$g(%CON500c) s SQLCODE=-102 q
 k %CON500c,%CON500d,%CON500e,%CON500E,%CON500f,%CON500l,%CON500L,%CON500n,%CON500r,%CON500R s SQLCODE=0 q
%0Gerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CON500E),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Mo d %CON100f q:SQLCODE'=0
 s PLIST(1)=%CON100d(4),PLIST(2)=%CON100d(1),PLIST(3)=%CON100d(5),PLIST(4)=%CON100d(6),PLIST(5)=%CON100d(7),PLIST(6)=%CON100d(8)
 q
%0No d %CON200f q:SQLCODE'=0
 s PLIST(1)=%CON200d(4),PLIST(2)=%CON200d(5),PLIST(3)=%CON200d(6),PLIST(4)=%CON200d(7),PLIST(5)=%CON200d(1),PLIST(6)=%CON200d(8)
 q
%0Oo d %CON300f q:SQLCODE'=0
 s PLIST(1)=%CON300d(4),PLIST(2)=%CON300d(5),PLIST(3)=%CON300d(6),PLIST(4)=%CON300d(7),PLIST(5)=%CON300d(8),PLIST(6)=%CON300d(1)
 q
%0Po d %CON500f q:SQLCODE'=0
 s PLIST(1)=%CON500d(4),PLIST(2)=%CON500d(5),PLIST(3)=%CON500d(1),PLIST(4)=%CON500d(6),PLIST(5)=%CON500d(7),PLIST(6)=%CON500d(8)
 q
%0Qo d %CON400f q:SQLCODE'=0
 s PLIST(1)=%CON400d(2),PLIST(2)=%CON400d(3),PLIST(3)=%CON400d(4),PLIST(4)=%CON400d(5),PLIST(5)=%CON400d(6),PLIST(6)=%CON400d(7)
 q
%0Wo n %insert,icol,ir
 f icol=0:1:6 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt2511("1")
 q
%0XAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Xo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Xerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 i %mmmsqld(3)="",$L(RowID)>1 s %val=$E(RowID,2,999) d %0XAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^BBCF($P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0XBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:6 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt2511(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0XBdun 
%0XAdun 
 q
%0Xerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0XAdun
%0Yo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Yerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(row,$C(1))
 i %mmmsqld(2)="",$L(row)>1 s %val=$E(row,2,999) d %0XAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^BBCF(%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0YBdun
 d delete^mt2511(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0YBdun 
%0YAdun 
 q
%0Yerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0YAdun
%0Zo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Zerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0XAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^BBCF($P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0ZBdun
 s %mmmsqln=$g(^BBCF($P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(3),$C(1)) d %0ABs2:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs3:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Zc
%0ZBdun 
%0ZAdun 
%0Zc q
%0Zerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0ZAdun
%00o n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%00err^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(row,$C(1)),%mmmsqld(5)=$P(lab,$C(1)),%mmmsqld(6)=$P(lab,$C(1)),%mmmsqld(8)=$P(user,$C(1)),%mmmsqld(9)=$P(user,$C(1)),%mmmsqld(11)=$P(ts,$C(1)),%mmmsqld(12)=$P(ts,$C(1)),%mmmsqld(14)=$P(date,$C(1)),%mmmsqld(15)=$P(date,$C(1))
 i %mmmsqld(3)="",$L(row)>1 s %val=$E(row,2,999) d %0XAr1 s %mmmsqld(3)=%val
 s:%mmmsqld(5)="" %mmmsqld(5)=$E(lab,2,999)
 s:%mmmsqld(8)="" %mmmsqld(8)=$E(user,2,999)
 s:%mmmsqld(11)="" %mmmsqld(11)=$E(ts,2,999)
 i %mmmsqld(14)="",$L(date)>1 s %val=$E(date,2,999) d %0GAr1 s %mmmsqld(14)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^BBCF($P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %00Bdun
 s %mmmsqln=$g(^BBCF($P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1)
 g:'(((PLIST(2))=(%mmmsqld(5)))!(%mmmsqld(6)="")) %00Bdun
 s PLIST(5)=$p(%mmmsqln,"^",4)
 g:'(((PLIST(5))=(%mmmsqld(8)))!(%mmmsqld(9)="")) %00Bdun
 s PLIST(6)=$p(%mmmsqln,"^",5)
 g:'(((PLIST(6))=(%mmmsqld(11)))!(%mmmsqld(12)="")) %00Bdun
 s PLIST(3)=$p(%mmmsqln,"^",2)
 g:'((($P(PLIST(3),$C(1)))=(%mmmsqld(14)))!(%mmmsqld(15)="")) %00Bdun
 s PLIST(4)=$p(%mmmsqln,"^",3)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(3),$C(1)) d %0ABs2:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs3:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %00c
%00Bdun 
%00Adun 
%00c q
%00err ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %00Adun
]]></Routine>
</Export>
