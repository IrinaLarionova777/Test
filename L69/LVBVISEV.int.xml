<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISEV" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISEV ; IG 6/5/98 ; LVB Control data access for VISEV EP_VisitEvents
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISEV(par)
 ; $$update^LVBVISEV(ROWID)
 ; $$select^LVBVISEV(ROWID)
 ; $$delete^LVBVISEV(ROWID)
 ; $$open^LVBVISEV(par,filter,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVISEV(par,filter,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVISEV(par,filter,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBVISEV(par,filter,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVISEV()
 ; $$view^LVBVISEV(vts,user,pc)
 ;
  ;---&sql(DECLARE VISEV CURSOR FOR SELECT * FROM EP_VisitEvents
   ;---         WHERE VISEV_ParRef = :par ORDER BY VISEV_Sequence DESC)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ; view Result event
view(vts,user,pc) n (vts,user,pc) s vts=$g(vts),user=$g(user),pc=$g(pc),ts=$p(vts,"||",2)
  ;---s view="" &SQL(SELECT SSUSR_Group->SSGRP_AuditForResultEnquiry INTO :view FROM SS_User WHERE SSUSR_RowId=:user)
   ;--- ** SQL PUBLIC Variables: SQLCODE, user, view
 s view="" Do %0Co
 s view=$p(view,$c(1))
 i view="Y" d
 .s status=$$status^LVBVIS1(vts)
 . ;---s syn="" &SQL(SELECT CTTS_Synonym INTO :syn FROM CT_TestSet WHERE CTTS_RowID=:ts)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, syn, ts
 .s syn="" Do %0Eo
 .s syn=$p(syn,$c(1))
 .i $l(syn) d
 ..i status="A" s message="Test Set <"_syn_$s($p(vts,"||",3)>1:"-"_$p(vts,"||",3),1:"")_"> reviewed by "_user_$s($l(pc):" on "_pc,1:"")
 ..e  s message="Test Set <"_syn_$s($p(vts,"||",3)>1:"-"_$p(vts,"||",3),1:"")_" (not authorised)> reviewed by "_user_$s($l(pc):" on "_pc,1:"")
 ..d events^LVBCOM01($p(vts,"||"),"VW",message)
 q 0
 ;
open(par,filter,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),filter=$g(filter)
  ;---&SQL(OPEN VISEV)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISEV0o
 q 0
 ;
fetch(par,filter,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),filter=$g(filter)
  ;---f  &SQL(FETCH VISEV INTO :PLIST()) q:SQLCODE  q:'$l(filter)  q:(","_filter_",")[(","_$p(PLIST(3),$c(1))_",") 
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 f  Do %0Ho q:SQLCODE  q:'$l(filter)  q:(","_filter_",")[(","_$p(PLIST(3),$c(1))_",") 
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,filter,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),filter=$g(filter) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,filter) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,filter,p2,p3,p4,p5,p6,p7,p8,p9) N (par,filter,PLIST) s par=$g(par),filter=$g(filter) K ^TMP($zn,$j)
 i $$open(par,filter)
 f cnt=1:1 Q:$$fetch(par,filter)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE VISEV)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISEV0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitEvents WHERE VISEV_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
 s PLIST(2)=$o(^TEPI(par,6,""),-1)+1
  ;---&sql(INSERT INTO EP_VisitEvents VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Lo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE EP_VisitEvents VALUES :PLIST() WHERE VISEV_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0No
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM EP_VisitEvents WHERE VISEV_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Po
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
 ;
 q
%VISEV0o s $zt="%VISEV0E" s SQLCODE=$s($g(%VISEV0c):-101,1:0) q:SQLCODE'=0  s %VISEV0d(11)=0 s %VISEV0d(12)=0,%VISEV0d(13)=""
 s %VISEV0d(8)=$g(par)
 s %VISEV0c=1 q
%VISEV0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISEV0c,%VISEV0d,%VISEV0E,%VISEV0l,%VISEV0n,%VISEV0R,%VISEV0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISEV0d(1)=%VISEV0d(8)
 i %VISEV0d(1)="" g %0ABdun
 s %VISEV0d(3)=""
%0ABk1 s %VISEV0d(3)=$zp(^TEPI(%VISEV0d(1),6,%VISEV0d(3)))
 i %VISEV0d(3)="" g %0ABdun
 s %VISEV0d(19)=$g(^TEPI(%VISEV0d(1),6,%VISEV0d(3)))
 s %VISEV0d(4)=$p(%VISEV0d(19),"\",1) s %VISEV0d(5)=$p(%VISEV0d(19),"\",4) s %VISEV0d(6)=$p(%VISEV0d(19),"\",2) s %VISEV0d(7)=$p(%VISEV0d(19),"\",3)
 s %VISEV0d(2)=(%VISEV0d(1))_"||"_(%VISEV0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISEV0d(2),"||",1),6,$p(%VISEV0d(2),"||",2))#"S":$zu(115,4) i $t { s %VISEV0d(12)=1,%VISEV0d(13)=$name(^TEPI($p(%VISEV0d(2),"||",1),6,$p(%VISEV0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitEvents for RowID value: "_%VISEV0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISEV0d(10)=$p(%VISEV0d(2),"||"),%VISEV0d(3)=$p(%VISEV0d(2),"||",2)
 i %VISEV0d(10)'="",%VISEV0d(3)'="",$d(^TEPI(%VISEV0d(10),6,%VISEV0d(3)))
 e  g %0ACdun
 s %VISEV0d(25)=$g(^TEPI(%VISEV0d(10),6,%VISEV0d(3)))
 s %VISEV0d(4)=$p(%VISEV0d(25),"\",1) s %VISEV0d(5)=$p(%VISEV0d(25),"\",4) s %VISEV0d(6)=$p(%VISEV0d(25),"\",2) s %VISEV0d(7)=$p(%VISEV0d(25),"\",3)
 s %VISEV0d(1)=$p(%VISEV0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISEV0d(11)=%VISEV0d(11)+1,%ROWCOUNT=%VISEV0d(11),%ROWID=%VISEV0d(2),%VISEV0c=10 q
%VISEV0f i '$g(%VISEV0c) { s SQLCODE=-102 q  } i %VISEV0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISEV0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISEV0d(11),%VISEV0c=100 q  } g %0Afirst:%VISEV0c=1
%0ACdun i $zu(115,2)=1,$g(%VISEV0d(12))=1 { l -@%VISEV0d(13) s %VISEV0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISEV0d(11),SQLCODE=100,%VISEV0c=100 q
%VISEV0c i '$g(%VISEV0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISEV0d(11)),1:0)
 i $zu(115,2)=1,$g(%VISEV0d(12))=1 { l -@%VISEV0d(13) } k %VISEV0c,%VISEV0d,%VISEV0E,%VISEV0l,%VISEV0n,%VISEV0R,%VISEV0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISEV0c=100 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(user)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^SSU("SSUSR",1,%mmmsqld(5)))
 e  g %0CBdun
 s %mmmsqld(18)=$g(^SSU("SSUSR",1,%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(18),"^",4)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^SSU("SSUSR",1,$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^SSU("SSUSR",1,%mmmsqld(5)))
 e  g %0CCdun
 s %mmmsqld(25)=$g(^SSU("SSUSR",1,%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(25),"^",4)
%0CBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^SSU("SSGRP",%mmmsqld(2)))
 e  s view="",%mmmsqld(2)="" g %0CCp4
 s %mmmsqld(30)=$g(^SSU("SSGRP",%mmmsqld(2)))
 s view=$p(%mmmsqld(30),"^",2)
%0CCp4 
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^SSU("SSGRP",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_Group for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^SSU("SSGRP",%mmmsqld(2)))
 e  s view="",%mmmsqld(2)="" g %0CDp1
 s %mmmsqld(35)=$g(^SSU("SSGRP",%mmmsqld(2)))
 s view=$p(%mmmsqld(35),"^",2)
%0CDp1 
%0CCuncommitted ;
 s SQLCODE=0 g %0Cc
%0CDdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(ts)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  g %0EBdun
 s %mmmsqld(12)=$g(^TTAB("TS",%mmmsqld(3)))
 s syn=$p(%mmmsqld(12),"\",2)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("TS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  g %0ECdun
 s %mmmsqld(17)=$g(^TTAB("TS",%mmmsqld(3)))
 s syn=$p(%mmmsqld(17),"\",2)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Ho d %VISEV0f q:SQLCODE'=0
 s PLIST(0)=%VISEV0d(1),PLIST(1)=%VISEV0d(2),PLIST(2)=%VISEV0d(3),PLIST(3)=%VISEV0d(4),PLIST(4)=%VISEV0d(5),PLIST(5)=%VISEV0d(6),PLIST(6)=%VISEV0d(7)
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(11),6,PLIST(2)))
 e  g %0JBdun
 s %mmmsqld(19)=$g(^TEPI(%mmmsqld(11),6,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(19),"\",1) s PLIST(4)=$p(%mmmsqld(19),"\",4) s PLIST(5)=$p(%mmmsqld(19),"\",2) s PLIST(6)=$p(%mmmsqld(19),"\",3)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0JBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),6,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TEPI($p(PLIST(1),"||",1),6,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitEvents for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(11),6,PLIST(2)))
 e  g %0JCdun
 s %mmmsqld(25)=$g(^TEPI(%mmmsqld(11),6,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",4) s PLIST(5)=$p(%mmmsqld(25),"\",2) s PLIST(6)=$p(%mmmsqld(25),"\",3)
 s PLIST(0)=$p(PLIST(1),"||")
%0JBuncommitted ;
 s SQLCODE=0 g %0Jc
%0JCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Jc
%0Lo n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitEvents.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Lo
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),6,%mmmsqld(5)))
 e  g %0NBdun
 s %mmmsqld(13)=$$%getlock^User.EPVisitEvents.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),6,%mmmsqld(5)))
 e  g %0NCdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitEvents.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitEvents.T1(%mmmsqld(2)) g %0Nc
%0NCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitEvents.T1(%mmmsqld(2)) g:SQLCODE<0 %0Nc
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.EPVisitEvents.T1(%mmmsqld(2)) g %0Nc
%0Po n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Perr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),6,%mmmsqld(4)))
 e  g %0PBdun
 s %mmmsqld(12)=$$%getlock^User.EPVisitEvents.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Pc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),6,%mmmsqld(4)))
 e  g %0PCdun
 d %delete^User.EPVisitEvents.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitEvents.T1(%mmmsqld(1)) g %0Pc
%0PCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitEvents.T1(%mmmsqld(1)) g:SQLCODE<0 %0Pc
%0PBdun 
%0PAdun 
%0Pc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Perr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.EPVisitEvents.T1(%mmmsqld(1)) g %0Pc
]]></Routine>
</Export>
