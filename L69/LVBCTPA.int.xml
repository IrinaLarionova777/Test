<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTPA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTPA ; IG 30/4/98 ;MVB Control code access for CT_PatientCategory
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTPA(ROWID,skip)
 ; $$open^LVBCTPA(descr,content,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTPA(descr,content,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTPA(descr,content,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTPA(descr,content,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTPA()
 ; $$insert^LVBCTPA()
 ; $$update^LVBCTPA(ROWID)
 ; $$delete^LVBCTPA(ROWID)
 ; $$getall^LVBCTPA(descr,content)
 ;
  ;---&SQL(DECLARE CTPA1 CURSOR FOR SELECT * FROM CT_PatientCategory
   ;---         WHERE (%ALPHAUP(CTPA_Description) %STARTSWITH %ALPHAUP(:descr)) OR (:descr IS NULL))
   ;--- ** SQL PUBLIC Variables: SQLCODE, descr
  ;---&SQL(DECLARE CTPA2 CURSOR FOR SELECT * FROM CT_PatientCategory
   ;---         WHERE (%ALPHAUP(CTPA_Description) [ %ALPHAUP(:descr)) OR (:descr IS NULL))
   ;--- ** SQL PUBLIC Variables: SQLCODE, descr
 ;
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_PatientCategory VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CT_PatientCategory VALUES :PLIST() WHERE CTPA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_PatientCategory WHERE CTPA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Io
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(descr,content,p2,p3,p4,p5,p6,p7,p8,p9) s descr=$g(descr),content=$g(content)
  ;---i '$l(content) &SQL(OPEN CTPA1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i '$l(content) Do %CTPA10o
  ;---i $l(content) &SQL(OPEN CTPA2)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i $l(content) Do %CTPA20o
 q 0
 ; fetch the data
fetch(descr,content,p2,p3,p4,p5,p6,p7,p8,p9) s descr=$g(descr),content=$g(content) k PLIST
  ;---i '$l(content) &SQL(FETCH CTPA1 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i '$l(content) Do %0Mo
  ;---i $l(content) &SQL(FETCH CTPA2 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i $l(content) Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(descr,content,p2,p3,p4,p5,p6,p7,p8,p9) s descr=$g(descr),content=$g(content) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(descr,content) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(descr,content,p2,p3,p4,p5,p6,p7,p8,p9) N (descr,content,PLIST) s descr=$g(descr),content=$g(content) k ^TMP($zn,$j)
 i $$open(descr,content)
 f cnt=1:1 q:$$fetch(descr,content)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE CTPA1)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTPA10c
  ;---&SQL(CLOSE CTPA2) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTPA20c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) k PLIST s ROWID=$g(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_PatientCategory WHERE CTPA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Qo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$UPPER^SSUTIL4(PLIST(2))
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
 ;
getall(descr,content) n (descr,content,PLIST) k ^TMP($zn,$j) s descr=$g(descr),content=$g(content)
 i $$open(descr,content)
 f cnt=1:1 q:$$fetch(descr,content)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTPA10o s $zt="%CTPA10E" s SQLCODE=$s($g(%CTPA10c):-101,1:0) q:SQLCODE'=0  s %CTPA10d(11)=0 s %CTPA10d(12)=0,%CTPA10d(13)=""
 s %CTPA10d(5)=$g(descr),%CTPA10d(7)=$g(descr)
 s %CTPA10d(6)=$zu(28,%CTPA10d(5),6)
 s %CTPA10c=1 q
%CTPA10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTPA10c,%CTPA10d,%CTPA10E,%CTPA10l,%CTPA10n,%CTPA10R,%CTPA10Z q
%0Afirst 
 ; asl MOD# 2
 s %CTPA10d(1)=""
%0ABk1 s %CTPA10d(1)=$o(^TTAB("CTPA",%CTPA10d(1)))
 i %CTPA10d(1)="" g %0ABdun
 s %CTPA10d(18)=$g(^TTAB("CTPA",%CTPA10d(1)))
 s %CTPA10d(2)=$p(%CTPA10d(18),"\",1) s %CTPA10d(3)=$p(%CTPA10d(18),"\",2)
 s %CTPA10d(4)=$zu(28,%CTPA10d(2),6)
 g:'(((%CTPA10d(4)'="")&&(($c(0)[%CTPA10d(6))||(%CTPA10d(6)=$c(32,0)&&($e(%CTPA10d(4))=$c(32)))||(%CTPA10d(6)=$e(%CTPA10d(4),1,$l(%CTPA10d(6))))))||(%CTPA10d(7)="")) %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("CTPA",$p(%CTPA10d(1),"||",1))#"S":$zu(115,4) i $t { s %CTPA10d(12)=1,%CTPA10d(13)=$name(^TTAB("CTPA",$p(%CTPA10d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PatientCategory for RowID value: "_%CTPA10d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTPA10d(9)=$lb(""_%CTPA10d(4))
 i %CTPA10d(1)'="",$d(^TTAB("CTPA",%CTPA10d(1)))
 e  g %0ACdun
 s %CTPA10d(23)=$g(^TTAB("CTPA",%CTPA10d(1)))
 s %CTPA10d(2)=$p(%CTPA10d(23),"\",1) s %CTPA10d(3)=$p(%CTPA10d(23),"\",2)
 s %CTPA10d(4)=$zu(28,%CTPA10d(2),6)
 s %CTPA10d(10)=$lb(""_%CTPA10d(4))
 g:%CTPA10d(9)'=%CTPA10d(10) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTPA10d(11)=%CTPA10d(11)+1,%ROWCOUNT=%CTPA10d(11),%ROWID=%CTPA10d(1),%CTPA10c=10 q
%CTPA10f i '$g(%CTPA10c) { s SQLCODE=-102 q  } i %CTPA10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTPA10d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTPA10d(11),%CTPA10c=100 q  } g %0Afirst:%CTPA10c=1
%0ACdun i $zu(115,2)=1,$g(%CTPA10d(12))=1 { l -@%CTPA10d(13) s %CTPA10d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTPA10d(11),SQLCODE=100,%CTPA10c=100 q
%CTPA10c i '$g(%CTPA10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTPA10d(11)),1:0)
 i $zu(115,2)=1,$g(%CTPA10d(12))=1 { l -@%CTPA10d(13) } k %CTPA10c,%CTPA10d,%CTPA10E,%CTPA10l,%CTPA10n,%CTPA10R,%CTPA10Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTPA10c=100 q
%CTPA20o s $zt="%CTPA20E" s SQLCODE=$s($g(%CTPA20c):-101,1:0) q:SQLCODE'=0  s %CTPA20d(11)=0 s %CTPA20d(12)=0,%CTPA20d(13)=""
 s %CTPA20d(5)=$g(descr),%CTPA20d(7)=$g(descr)
 s %CTPA20d(6)=$zu(28,%CTPA20d(5),6)
 s %CTPA20c=1 q
%CTPA20E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTPA20c,%CTPA20d,%CTPA20E,%CTPA20l,%CTPA20n,%CTPA20R,%CTPA20Z q
%0Cfirst 
 ; asl MOD# 2
 s %CTPA20d(1)=""
%0CBk1 s %CTPA20d(1)=$o(^TTAB("CTPA",%CTPA20d(1)))
 i %CTPA20d(1)="" g %0CBdun
 s %CTPA20d(18)=$g(^TTAB("CTPA",%CTPA20d(1)))
 s %CTPA20d(2)=$p(%CTPA20d(18),"\",1) s %CTPA20d(3)=$p(%CTPA20d(18),"\",2)
 s %CTPA20d(4)=$zu(28,%CTPA20d(2),6)
 g:'(((%CTPA20d(5)'="")&&((%CTPA20d(4)'="")&&(%CTPA20d(4)[%CTPA20d(6))))||(%CTPA20d(7)="")) %0CBk1
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("CTPA",$p(%CTPA20d(1),"||",1))#"S":$zu(115,4) i $t { s %CTPA20d(12)=1,%CTPA20d(13)=$name(^TTAB("CTPA",$p(%CTPA20d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PatientCategory for RowID value: "_%CTPA20d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTPA20d(9)=$lb(""_%CTPA20d(4))
 i %CTPA20d(1)'="",$d(^TTAB("CTPA",%CTPA20d(1)))
 e  g %0CCdun
 s %CTPA20d(23)=$g(^TTAB("CTPA",%CTPA20d(1)))
 s %CTPA20d(2)=$p(%CTPA20d(23),"\",1) s %CTPA20d(3)=$p(%CTPA20d(23),"\",2)
 s %CTPA20d(4)=$zu(28,%CTPA20d(2),6)
 s %CTPA20d(10)=$lb(""_%CTPA20d(4))
 g:%CTPA20d(9)'=%CTPA20d(10) %0CCdun
%0CBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTPA20d(11)=%CTPA20d(11)+1,%ROWCOUNT=%CTPA20d(11),%ROWID=%CTPA20d(1),%CTPA20c=10 q
%CTPA20f i '$g(%CTPA20c) { s SQLCODE=-102 q  } i %CTPA20c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%CTPA20d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTPA20d(11),%CTPA20c=100 q  } g %0Cfirst:%CTPA20c=1
%0CCdun i $zu(115,2)=1,$g(%CTPA20d(12))=1 { l -@%CTPA20d(13) s %CTPA20d(12)=0 }
 g %0CBk1
%0CBdun 
%0CAdun 
 s %ROWCOUNT=%CTPA20d(11),SQLCODE=100,%CTPA20c=100 q
%CTPA20c i '$g(%CTPA20c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTPA20d(11)),1:0)
 i $zu(115,2)=1,$g(%CTPA20d(12))=1 { l -@%CTPA20d(13) } k %CTPA20c,%CTPA20d,%CTPA20E,%CTPA20l,%CTPA20n,%CTPA20R,%CTPA20Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTPA20c=100 q
%0Eo n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTPatientCategory.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("CTPA",%mmmsqld(2)))
 e  g %0GBdun
 s %mmmsqld(10)=$$%getlock^User.CTPatientCategory.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("CTPA",%mmmsqld(2)))
 e  g %0GCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTPatientCategory.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTPatientCategory.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTPatientCategory.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTPatientCategory.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("CTPA",%mmmsqld(1)))
 e  g %0IBdun
 s %mmmsqld(9)=$$%getlock^User.CTPatientCategory.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("CTPA",%mmmsqld(1)))
 e  g %0ICdun
 d %delete^User.CTPatientCategory.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTPatientCategory.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTPatientCategory.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTPatientCategory.T1(%mmmsqld(1)) g %0Ic
%0Mo d %CTPA10f q:SQLCODE'=0
 s PLIST(1)=%CTPA10d(1),PLIST(2)=%CTPA10d(1),PLIST(3)=%CTPA10d(2),PLIST(4)=%CTPA10d(3)
 q
%0No d %CTPA20f q:SQLCODE'=0
 s PLIST(1)=%CTPA20d(1),PLIST(2)=%CTPA20d(1),PLIST(3)=%CTPA20d(2),PLIST(4)=%CTPA20d(3)
 q
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(5)
 i PLIST(2)'="",$d(^TTAB("CTPA",PLIST(2)))
 e  g %0QBdun
 s %mmmsqld(13)=$g(^TTAB("CTPA",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(13),"\",1) s PLIST(4)=$p(%mmmsqld(13),"\",2)
 g:$zu(115,2)=0 %0QBuncommitted i $zu(115,2)=1 l +^TTAB("CTPA",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TTAB("CTPA",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PatientCategory for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("CTPA",PLIST(2)))
 e  g %0QCdun
 s %mmmsqld(18)=$g(^TTAB("CTPA",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",1) s PLIST(4)=$p(%mmmsqld(18),"\",2)
%0QBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Qc
%0QCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Qc
]]></Routine>
</Export>
