<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIST4" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIST4 ; IG 6/5/98 ;MVB Control data access for EP_Visit Test Set
 ;
 ; supported calls:
 ;
 ; $$open^LVBVIST4(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVIST4(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVIST4(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBVIST4(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVIST4()
 ; $$check^LVBVIST4(MRN)
 ;
 ;
 ; check for previous results
check(MRN) n (MRN,PLIST) k buffer m buffer=PLIST
 s xx="" f  s xx=$o(buffer(xx)) q:xx=""  s ti=buffer(xx) i $l(ti) d
 .i $$open(MRN,ti,"Y")
 .i '$$fetch(MRN,ti,"Y") s $p(buffer(xx),$c(1),2)="Y"
 .i $$close()
 k PLIST m PLIST=buffer
 q 0
open(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9) s MRN=$g(MRN),testcode=$g(testcode),check=$g(check),epis=$g(epis) k ^TMP($zn,$j)
 s date=+$h i $l(epis) d
 .  ;---&sql(SELECT EPVIS_DateOfCollection INTO :date FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, date, epis
 . Do %0Ao
 .s date=$p(date,$c(1))
  ;---s lt="" &SQL(SELECT CTTC_LengthTimePrevResult INTO :lt FROM CT_TestCode WHERE CTTC_RowID=:testcode)
   ;--- ** SQL PUBLIC Variables: SQLCODE, lt, testcode
 s lt="" Do %0Co
 i 'lt s lt=365
 i $l(MRN) s DATE=date+1 f  s DATE=$o(^TDEB(MRN,DATE),-1) q:DATE=""  q:DATE<(date-lt)  d  i check="Y",$d(^TMP($zn,$j,"xxx")) q
 .s VIS="" f  s VIS=$o(^TDEB(MRN,DATE,0,VIS)) q:VIS=""  d  i check="Y",$d(^TMP($zn,$j,"xxx")) q
 ..i '$d(^TEPI(VIS)) k ^TDEB(MRN,DATE,0,VIS) q
 ..s D1=$p(^TEPI(VIS),"\",10),T1=$P(^TEPI(VIS),"\",11)*60
 ..s TS="" f  s TS=$o(^TEPI(VIS,1,TS)) q:TS=""  d  i check="Y",$d(^TMP($zn,$j,"xxx")) q
 ...S ORDER="" F  S ORDER=$o(^TEPI(VIS,1,TS,ORDER)) q:ORDER=""  d  i check="Y",$d(^TMP($zn,$j,"xxx")) q
 ....i $d(^TEPI(VIS,1,TS,ORDER))#10=0 q
 ....i $d(^TEPI(VIS,1,TS,ORDER,"DATA",testcode))#10 d
 .....s Dentry=$p(^TEPI(VIS,1,TS,ORDER),"\",1)
 .....s Dauth=$p(^TEPI(VIS,1,TS,ORDER),"\",4)
 .....s status=$p(^TEPI(VIS,1,TS,ORDER),"\",20)
 .....i status="P",$l(Dentry),$l(Dauth) s status="P" q
 .....e  i $l(Dentry),$l(Dauth) s status="A"
 .....e  i $l(Dentry) s status="E"
 .....e  s status="W"
 .....i  s ^TMP($zn,$j,"xxx",0,D1,+T1,VIS,TS,ORDER)=status_"^"_$g(^TEPI(VIS,1,TS,ORDER,"DATA",testcode))
 s D1="" f  s D1=$o(^TMP($zn,$j,"xxx",0,D1),-1) q:D1=""  d
 .s T1="" f  s T1=$o(^TMP($zn,$j,"xxx",0,D1,T1),-1) q:T1=""  d
 ..s VIS="" f  s VIS=$o(^TMP($zn,$j,"xxx",0,D1,T1,VIS)) q:VIS=""  d
 ... ;---s (x1,x2)="" &sql(SELECT EPVIS_Fasting,EPVIS_ClinicalConditions_DR->CTCLC_Description INTO :x1,:x2 FROM EP_VisitNumber WHERE EPVIS_RowID=:VIS)
  ... ;--- ** SQL PUBLIC Variables: SQLCODE, VIS, x1, x2
 ...s (x1,x2)="" Do %0Eo
 ...s x1=$p(x1,$c(1)),x2=$p(x2,$c(1))
 ...s TS="" f  s TS=$o(^TMP($zn,$j,"xxx",0,D1,T1,VIS,TS)) q:TS=""  d
 ....s ORDER="" f  s ORDER=$o(^TMP($zn,$j,"xxx",0,D1,T1,VIS,TS,ORDER)) Q:ORDER=""  d
 .....s STATUS=$p(^(ORDER),"^",1),RESULT=$p(^(ORDER),"^",2)
 .....s L=$o(^TMP($zn,$j,"xxx",1,""),-1)+1
 .....s ^TMP($zn,$j,"xxx",1,L)=D1_$c(1)_T1_$c(1)_VIS_$c(1)_TS_$c(1)_ORDER_$c(1)_STATUS_$c(1)_$p(RESULT,"\")_$c(1)_x1_$c(1)_x2
 s xLINE=""
 q 0
fetch(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9) s MRN=$g(MRN),testcode=$g(testcode),check=$g(check),epis=$g(epis) k PLIST
 s xLINE=$g(xLINE)
 s xLINE=$o(^TMP($zn,$j,"xxx",1,xLINE))
 i xLINE="" s SQLCODE=100
 e  s SQLCODE=0 f j=1:1:9 s PLIST(j)=$p(^TMP($zn,$j,"xxx",1,xLINE),$c(1),j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ; Fetch all data
fetchbuffer(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9) s MRN=$g(MRN),testcode=$g(testcode),check=$g(check),epis=$g(epis) k ^TMP($zn,$j,"XXX")
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(MRN,testcode,check,epis) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,"XXX",""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,"XXX",cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,"XXX") k ^TMP($zn,$j,"XXX")
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(MRN,testcode,check,epis,p4,p5,p6,p7,p8,p9) n (MRN,testcode,check,epis,PLIST) s MRN=$g(MRN),testcode=$g(testcode),check=$g(check),epis=$g(epis) k ^TMP($zn,$j,"XXX")
 i $$open(MRN,testcode,check,epis)
 f cnt=1:1 Q:$$fetch(MRN,testcode,check,epis)  s ^TMP($zn,$j,"XXX",cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,"XXX",cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j,"XXX")
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,"XXX")
 q 0
close() k ^TMP($zn,$j)
 q 0
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(10)=$g(^TEPI(%mmmsqld(3)))
 s date=$p(%mmmsqld(10),"\",10)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TEPI($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0ACdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(3)))
 s date=$p(%mmmsqld(13),"\",10)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(testcode)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("TC",%mmmsqld(3)))
 e  g %0CBdun
 s %mmmsqld(12)=$g(^TTAB("TC",%mmmsqld(3)))
 s lt=$p(%mmmsqld(12),"\",14)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("TC",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("TC",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestCode for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("TC",%mmmsqld(3)))
 e  g %0CCdun
 s %mmmsqld(17)=$g(^TTAB("TC",%mmmsqld(3)))
 s lt=$p(%mmmsqld(17),"\",14)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(10)=0,%mmmsqld(11)="",%mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(8)=$g(VIS)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(7)=%mmmsqld(8)
 i %mmmsqld(7)'="",$d(^TEPI(%mmmsqld(7)))
 e  g %0EBdun
 s %mmmsqld(16)=$g(^TEPI(%mmmsqld(7),0))
 s %mmmsqld(2)=$p(%mmmsqld(16),"\",17)
 s %mmmsqld(16)=$g(^TEPI(%mmmsqld(7)))
 s x1=$p(%mmmsqld(16),"\",17)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(7),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TEPI($p(%mmmsqld(7),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(7) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(7)'="",$d(^TEPI(%mmmsqld(7)))
 e  g %0ECdun
 s %mmmsqld(19)=$g(^TEPI(%mmmsqld(7),0))
 s %mmmsqld(2)=$p(%mmmsqld(19),"\",17)
 s %mmmsqld(19)=$g(^TEPI(%mmmsqld(7)))
 s x1=$p(%mmmsqld(19),"\",17)
%0EBuncommitted ;
 s %mmmsqld(3)=%mmmsqld(2)
 i %mmmsqld(3)'="",$d(^TTAB("CLC",%mmmsqld(3)))
 e  s x2="",%mmmsqld(3)="" g %0ECp4
 s x2=$g(^TTAB("CLC",%mmmsqld(3)))
%0ECp4 
 g:$zu(115,2)=0 %0ECuncommitted i $zu(115,2)=1 l +^TTAB("CLC",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("CLC",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ClinicalConditions for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(3)'="",$d(^TTAB("CLC",%mmmsqld(3)))
 e  s x2="",%mmmsqld(3)="" g %0EDp1
 s x2=$g(^TTAB("CLC",%mmmsqld(3)))
%0EDp1 
%0ECuncommitted ;
 s SQLCODE=0 g %0Ec
%0EDdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
]]></Routine>
</Export>
