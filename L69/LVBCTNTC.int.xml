<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTNTC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTNTC ; IG 30/4/98 ;MVB Control code access for CT_NationalTestCodes
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTNTC(ROWID,skip)
 ; $$open^LVBCTNTC(short,long,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTNTC(short,long,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTNTC(short,long,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTNTC(short,long,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTNTC()
 ; $$insert^LVBCTNTC()
 ; $$update^LVBCTNTC(ROWID)
 ; $$delete^LVBCTNTC(ROWID,Comments)
 ; $$getall^LVBCTNTC(short,long,Continue)
 ;
  ;---&SQL(DECLARE CTNTC CURSOR FOR SELECT * FROM CT_NationalTestCodes
   ;---         WHERE (%ALPHAUP(CTNTC_LongName) %STARTSWITH :long)
   ;---         AND (%ALPHAUP(CTNTC_ShortName) %STARTSWITH :short))
   ;--- ** SQL PUBLIC Variables: SQLCODE, long, short
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_NationalTestCodes VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CT_NationalTestCodes VALUES :PLIST() WHERE CTNTC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_NationalTestCodes WHERE CTNTC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(short,long,p2,p3,p4,p5,p6,p7,p8,p9) s short=$$ALPHAUP^SSUTIL4($g(short)),long=$$ALPHAUP^SSUTIL4($g(long))
  ;---&SQL(OPEN CTNTC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTNTC0o
 Q 0
 ; Fetch the data
fetch(short,long,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s short=$$ALPHAUP^SSUTIL4($g(short)),long=$$ALPHAUP^SSUTIL4($g(long))
  ;---&SQL(FETCH CTNTC INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
 ; Fetch all data
fetchbuffer(short,long,p2,p3,p4,p5,p6,p7,p8,p9) s short=$g(short),long=$g(long) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(short,long) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(short,long,p2,p3,p4,p5,p6,p7,p8,p9) N (short,long,PLIST) s short=$g(short),long=$g(long) K ^TMP($zn,$j)
 i $$open(short,long)
 f cnt=1:1 Q:$$fetch(short,long)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTNTC) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTNTC0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST s ROWID=$G(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_NationalTestCodes WHERE CTNTC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$UPPER^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
 ;
getall(short,long,Continue) n (short,long,Continue,PLIST) s short=$g(short),long=$g(long),Continue=$g(Continue)
 i Continue'="Y" d
 .k ^TMP($zn,$j)
 .i $$open(short,long)
 .f cnt=1:1 q:$$fetch(short,long)  d
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 .i $$close()
 k PLIST s (sum,x)="" f j=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(j)=^(x),sum=sum+$l(^(x)) k ^TMP($zn,$j,x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
%CTNTC0o s $zt="%CTNTC0E" s SQLCODE=$s($g(%CTNTC0c):-101,1:0) q:SQLCODE'=0  s %CTNTC0d(11)=0 s %CTNTC0d(12)=0,%CTNTC0d(13)=""
 s %CTNTC0d(5)=$g(long),%CTNTC0d(7)=$g(short)
 s %CTNTC0c=1 q
%CTNTC0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTNTC0c,%CTNTC0d,%CTNTC0E,%CTNTC0l,%CTNTC0n,%CTNTC0R,%CTNTC0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTNTC0d(1)=""
%0ABk1 s %CTNTC0d(1)=$o(^TTAB("CTNTC",%CTNTC0d(1)))
 i %CTNTC0d(1)="" g %0ABdun
 s %CTNTC0d(18)=$g(^TTAB("CTNTC",%CTNTC0d(1)))
 s %CTNTC0d(2)=$p(%CTNTC0d(18),"\",2) s %CTNTC0d(3)=$p(%CTNTC0d(18),"\",1)
 s %CTNTC0d(4)=$zu(28,%CTNTC0d(2),6) s %CTNTC0d(6)=$zu(28,%CTNTC0d(3),6)
 g:'(($c(0)[%CTNTC0d(5))||(%CTNTC0d(5)=$c(32,0)&&($e(%CTNTC0d(4))=$c(32)))||(%CTNTC0d(5)=$e(%CTNTC0d(4),1,$l(%CTNTC0d(5))))) %0ABk1
 g:'(($c(0)[%CTNTC0d(7))||(%CTNTC0d(7)=$c(32,0)&&($e(%CTNTC0d(6))=$c(32)))||(%CTNTC0d(7)=$e(%CTNTC0d(6),1,$l(%CTNTC0d(7))))) %0ABk1
 g:'(%CTNTC0d(4)'="") %0ABk1
 g:'(%CTNTC0d(6)'="") %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("CTNTC",$p(%CTNTC0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTNTC0d(12)=1,%CTNTC0d(13)=$name(^TTAB("CTNTC",$p(%CTNTC0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_NationalTestCodes for RowID value: "_%CTNTC0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTNTC0d(9)=$lb(""_%CTNTC0d(4),""_%CTNTC0d(6))
 i %CTNTC0d(1)'="",$d(^TTAB("CTNTC",%CTNTC0d(1)))
 e  g %0ACdun
 s %CTNTC0d(23)=$g(^TTAB("CTNTC",%CTNTC0d(1)))
 s %CTNTC0d(2)=$p(%CTNTC0d(23),"\",2) s %CTNTC0d(3)=$p(%CTNTC0d(23),"\",1)
 s %CTNTC0d(4)=$zu(28,%CTNTC0d(2),6) s %CTNTC0d(6)=$zu(28,%CTNTC0d(3),6)
 s %CTNTC0d(10)=$lb(""_%CTNTC0d(4),""_%CTNTC0d(6))
 g:%CTNTC0d(9)'=%CTNTC0d(10) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTNTC0d(11)=%CTNTC0d(11)+1,%ROWCOUNT=%CTNTC0d(11),%ROWID=%CTNTC0d(1),%CTNTC0c=10 q
%CTNTC0f i '$g(%CTNTC0c) { s SQLCODE=-102 q  } i %CTNTC0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTNTC0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTNTC0d(11),%CTNTC0c=100 q  } g %0Afirst:%CTNTC0c=1
%0ACdun i $zu(115,2)=1,$g(%CTNTC0d(12))=1 { l -@%CTNTC0d(13) s %CTNTC0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTNTC0d(11),SQLCODE=100,%CTNTC0c=100 q
%CTNTC0c i '$g(%CTNTC0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTNTC0d(11)),1:0)
 i $zu(115,2)=1,$g(%CTNTC0d(12))=1 { l -@%CTNTC0d(13) } k %CTNTC0c,%CTNTC0d,%CTNTC0E,%CTNTC0l,%CTNTC0n,%CTNTC0R,%CTNTC0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTNTC0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTNationalTestCodes.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("CTNTC",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTNationalTestCodes.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("CTNTC",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTNationalTestCodes.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTNationalTestCodes.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTNationalTestCodes.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTNationalTestCodes.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("CTNTC",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTNationalTestCodes.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("CTNTC",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTNationalTestCodes.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTNationalTestCodes.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTNationalTestCodes.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTNationalTestCodes.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTNTC0f q:SQLCODE'=0
 s PLIST(1)=%CTNTC0d(1),PLIST(2)=%CTNTC0d(1),PLIST(3)=%CTNTC0d(2),PLIST(4)=%CTNTC0d(3)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(5)
 i PLIST(2)'="",$d(^TTAB("CTNTC",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(13)=$g(^TTAB("CTNTC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(13),"\",2) s PLIST(4)=$p(%mmmsqld(13),"\",1)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("CTNTC",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TTAB("CTNTC",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_NationalTestCodes for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("CTNTC",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(18)=$g(^TTAB("CTNTC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",2) s PLIST(4)=$p(%mmmsqld(18),"\",1)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
