<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBMIMPL" type="INT" languagemode="0" generated="1"><![CDATA[
LVBMIMPL ; IG 6/5/98 ; LVB Control data access for MIMPL MIF_MachinePatientList
 ;
 ; supported calls:
 ;
 ; $$insert^LVBMIMPL(par)
 ; $$update^LVBMIMPL(ROWID)
 ; $$select^LVBMIMPL(ROWID)
 ; $$delete^LVBMIMPL(ROWID,Comments)
 ; $$delall^LVBMIMPL(par,Comments)
 ; $$open^LVBMIMPL(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBMIMPL(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBMIMPL(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBMIMPL(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBMIMPL()
 ; $$getall^LVBMIMPL(par,Continue)
 ; $$populate^LVBMIMPL(mi,start,end,episode)
 ;
  ;---&sql(DECLARE MIMPL CURSOR FOR SELECT * FROM MIF_MachinePatientList
   ;---         WHERE MIMPL_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN MIMPL)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MIMPL0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH MIMPL INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE MIMPL)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MIMPL0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM MIF_MachinePatientList WHERE MIMPL_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO MIF_MachinePatientList VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE MIF_MachinePatientList VALUES :PLIST() WHERE MIMPL_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM MIF_MachinePatientList WHERE MIMPL_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
delall(par,Comments) s par=$g(par),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM MIF_MachinePatientList WHERE MIMPL_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 Do %0No
 k ^TMP("Comments",$j)
 q SQLCODE
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X,XX d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBEPVIS(plist(2),"Y")
 .S X=PLIST(2) I 'SQLCODE S X=PLIST(2)_$c(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .s X="" f J=1:1:$l(plist(3),",") s xx=$p($p(plist(3),",",J),"||",2) i '$$selskip^LVBCTTS(xx) S X=X_$s($l(X):",",1:"")_PLIST(4)
 .K PLIST M PLIST=plist S PLIST(3)=plist(3)_$c(1)_X K plist
 ;
 q
getall(par,Continue) n (par,Continue,PLIST) s par=$g(par),Continue=$g(Continue)
 i Continue="" d
 .k ^TMP($zn,$j)
 .i $$open(par)
 .f cnt=1:1 q:$$fetch(par)  d
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1),2)_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 .i $$close()
 k PLIST s (sum,x)="" f cnt=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(cnt)=^(x),sum=sum+$l(PLIST(cnt)) k ^(x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
populate(mi,start,end,episode) n (mi,start,end,episode) s mi=$g(mi),start=$g(start),end=$g(end),episode=$g(episode)
 i $l(episode) d
 .s ts="" f  s ts=$o(^TEPI(episode,1,ts)) q:ts=""  d
 ..s tscnt="" f  s tscnt=$o(^TEPI(episode,1,ts,tscnt)) q:tscnt=""  d
 ...i $$status^LVBVIS1(episode_"||"_ts_"||"_tscnt)'="A" d TTRQ^at46(episode,ts,tscnt,mi)
 i '$l(episode) f date=start:1:end f type=0,1 d
 .s epis="" f  s epis=$o(^TDAY(1,date,type,epis)) q:epis=""  d
 ..s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 ...s tscnt="" f  s tscnt=$o(^TEPI(epis,1,ts,tscnt)) q:tscnt=""  d
 ....i $$status^LVBVIS1(epis_"||"_ts_"||"_tscnt)'="A" d TTRQ^at46(epis,ts,tscnt,mi)
 q 0
%MIMPL0o s $zt="%MIMPL0E" s SQLCODE=$s($g(%MIMPL0c):-101,1:0) q:SQLCODE'=0  s %MIMPL0d(11)=0 s %MIMPL0d(12)=0,%MIMPL0d(13)=""
 s %MIMPL0d(8)=$g(par)
 s %MIMPL0c=1 q
%MIMPL0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %MIMPL0c,%MIMPL0d,%MIMPL0E,%MIMPL0l,%MIMPL0n,%MIMPL0R,%MIMPL0Z q
%0Afirst 
 ; asl MOD# 2
 s %MIMPL0d(1)=%MIMPL0d(8)
 i %MIMPL0d(1)="" g %0ABdun
 s %MIMPL0d(3)=""
%0ABk1 s %MIMPL0d(3)=$o(^TMIF(%MIMPL0d(1),20,%MIMPL0d(3)))
 i %MIMPL0d(3)="" g %0ABdun
 s %MIMPL0d(19)=$g(^TMIF(%MIMPL0d(1),20,%MIMPL0d(3)))
 s %MIMPL0d(5)=$p(%MIMPL0d(19),"\",1) s %MIMPL0d(6)=$p(%MIMPL0d(19),"\",2) s %MIMPL0d(7)=$p(%MIMPL0d(19),"\",3)
 s %MIMPL0d(2)=(%MIMPL0d(1))_"||"_(%MIMPL0d(3))
 s %MIMPL0d(1)=$p(%MIMPL0d(2),"||")
 s %MIMPL0d(4)=$$CT003^at625($g(%MIMPL0d(1)),$g(%MIMPL0d(3)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TMIF($p(%MIMPL0d(2),"||",1),20,$p(%MIMPL0d(2),"||",2))#"S":$zu(115,4) i $t { s %MIMPL0d(12)=1,%MIMPL0d(13)=$name(^TMIF($p(%MIMPL0d(2),"||",1),20,$p(%MIMPL0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachinePatientList for RowID value: "_%MIMPL0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %MIMPL0d(10)=$p(%MIMPL0d(2),"||"),%MIMPL0d(3)=$p(%MIMPL0d(2),"||",2)
 i %MIMPL0d(10)'="",%MIMPL0d(3)'="",$d(^TMIF(%MIMPL0d(10),20,%MIMPL0d(3)))
 e  g %0ACdun
 s %MIMPL0d(25)=$g(^TMIF(%MIMPL0d(10),20,%MIMPL0d(3)))
 s %MIMPL0d(5)=$p(%MIMPL0d(25),"\",1) s %MIMPL0d(6)=$p(%MIMPL0d(25),"\",2) s %MIMPL0d(7)=$p(%MIMPL0d(25),"\",3)
 s %MIMPL0d(1)=$p(%MIMPL0d(2),"||")
 s %MIMPL0d(4)=$$CT003^at625($g(%MIMPL0d(1)),$g(%MIMPL0d(3)))
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %MIMPL0d(11)=%MIMPL0d(11)+1,%ROWCOUNT=%MIMPL0d(11),%ROWID=%MIMPL0d(2),%MIMPL0c=10 q
%MIMPL0f i '$g(%MIMPL0c) { s SQLCODE=-102 q  } i %MIMPL0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%MIMPL0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%MIMPL0d(11),%MIMPL0c=100 q  } g %0Afirst:%MIMPL0c=1
%0ACdun i $zu(115,2)=1,$g(%MIMPL0d(12))=1 { l -@%MIMPL0d(13) s %MIMPL0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%MIMPL0d(11),SQLCODE=100,%MIMPL0c=100 q
%MIMPL0c i '$g(%MIMPL0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%MIMPL0d(11)),1:0)
 i $zu(115,2)=1,$g(%MIMPL0d(12))=1 { l -@%MIMPL0d(13) } k %MIMPL0c,%MIMPL0d,%MIMPL0E,%MIMPL0l,%MIMPL0n,%MIMPL0R,%MIMPL0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %MIMPL0c=100 q
%0Do d %MIMPL0f q:SQLCODE'=0
 s PLIST(0)=%MIMPL0d(1),PLIST(1)=%MIMPL0d(2),PLIST(2)=%MIMPL0d(3),PLIST(3)=%MIMPL0d(4),PLIST(4)=%MIMPL0d(5),PLIST(5)=%MIMPL0d(6),PLIST(6)=%MIMPL0d(7)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(11),20,PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(19)=$g(^TMIF(%mmmsqld(11),20,PLIST(2)))
 s PLIST(4)=$p(%mmmsqld(19),"\",1) s PLIST(5)=$p(%mmmsqld(19),"\",2) s PLIST(6)=$p(%mmmsqld(19),"\",3)
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(3)=$$CT003^at625($g(PLIST(0)),$g(PLIST(2)))
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TMIF($p(PLIST(1),"||",1),20,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TMIF($p(PLIST(1),"||",1),20,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachinePatientList for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(11),20,PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(25)=$g(^TMIF(%mmmsqld(11),20,PLIST(2)))
 s PLIST(4)=$p(%mmmsqld(25),"\",1) s PLIST(5)=$p(%mmmsqld(25),"\",2) s PLIST(6)=$p(%mmmsqld(25),"\",3)
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(3)=$$CT003^at625($g(PLIST(0)),$g(PLIST(2)))
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.MIFMachinePatientList.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(4),20,%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(13)=$$%getlock^User.MIFMachinePatientList.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(4),20,%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.MIFMachinePatientList.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TMIF(%mmmsqld(3),20,%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(12)=$$%getlock^User.MIFMachinePatientList.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TMIF(%mmmsqld(3),20,%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.MIFMachinePatientList.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(1)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(par)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)="" g %0NBdun
 s %mmmsqld(4)=""
%0NBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),20,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0NBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 s %mmmsqld(13)=$$%getlock^User.MIFMachinePatientList.T1(%mmmsqld(3)) i '%mmmsqld(13) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(4)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(5)'="",%mmmsqld(4)'="",$d(^TMIF(%mmmsqld(5),20,%mmmsqld(4)))
 e  g %0NCdun
 s %mmmsqld(1)=$p(%mmmsqld(3),"||")
 d %delete^User.MIFMachinePatientList.T1(%mmmsqld(3),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(3)) g %0Nc
%0NCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(3)) g:SQLCODE<0 %0Nc
 g %0NBk1
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.MIFMachinePatientList.T1(%mmmsqld(3)) g %0Nc
]]></Routine>
</Export>
