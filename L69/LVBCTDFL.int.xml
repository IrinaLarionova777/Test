<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTDFL" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTDFL ; IG 30/4/98 ; MVB Control code access for CT_DynamicFunctionLayout
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTDFL(ROWID,skip)
 ; $$open^LVBCTDFL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTDFL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTDFL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTDFL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTDFL()
 ; $$save^LVBCTDFL(par)
 ; $$getall^LVBCTDFL(par)
 ;
  ;---&SQL(DECLARE CTDFL CURSOR FOR SELECT * FROM CT_DynamicFunctionLayout
   ;---         WHERE CTDFL_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ; Insert the data
save(par) s par=$g(par) k ^TMP($zn,$j) m ^TMP($zn,$j,0)=PLIST
  ;---&SQL(DELETE FROM CT_DynamicFunctionLayout WHERE CTDFL_ParRef=:par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 Do %0Co
 s x="" f  s x=$o(^TMP($zn,$j,0,x)) q:x=""  d
 .s x1=+$p(^(x),$c(2),8),x2=+$p(^(x),$c(2),9)
 .s ^TMP($zn,$j,1,x1,x2,x)=^(x)
 s (x,x1)="" f  s x1=$o(^TMP($zn,$j,1,x1)) q:x1=""  d
 .s x2="" f  s x2=$o(^TMP($zn,$j,1,x1,x2)) q:x2=""  d
 ..s x3="" f  s x3=$o(^TMP($zn,$j,1,x1,x2,x3)) q:x3=""  d
 ...k PLIST
 ...f j=1:1:$l(^(x3),$c(2)) s PLIST(j)=$p(^(x3),$c(2),j)
 ...k PLIST(1) s PLIST(0)=par,(x,PLIST(2))=x+1
 ...  ;---&SQL(insert INTO CT_DynamicFunctionLayout VALUES :PLIST())
  ...  ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 ... Do %0Eo
 k ^TMP($zn,$j)
 q 0
 ; Open the cursor
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTDFL)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDFL0o
 Q 0
 ;
 ; Fetch the data
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTDFL INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor
close()  ;---&SQL(CLOSE CTDFL) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDFL0c 
 q 0
 ;
 ; select data by code
select(RowID,skip) s RowID=$g(RowID),skip=$g(skip) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_DynamicFunctionLayout WHERE CTDFL_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTTC(plist(3),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)_$c(1)_PLIST(5)
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 q
 ;
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1),2)_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 q
%CTDFL0o s $zt="%CTDFL0E" s SQLCODE=$s($g(%CTDFL0c):-101,1:0) q:SQLCODE'=0  s %CTDFL0d(19)=0 s %CTDFL0d(20)=0,%CTDFL0d(21)=""
 s %CTDFL0d(16)=$g(par)
 s %CTDFL0c=1 q
%CTDFL0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTDFL0c,%CTDFL0d,%CTDFL0E,%CTDFL0l,%CTDFL0n,%CTDFL0R,%CTDFL0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTDFL0d(1)=%CTDFL0d(16)
 i %CTDFL0d(1)="" g %0ABdun
 s %CTDFL0d(3)=""
%0ABk1 s %CTDFL0d(3)=$o(^TTAB("DF",%CTDFL0d(1),"LAYOUT",%CTDFL0d(3)))
 i %CTDFL0d(3)="" g %0ABdun
 s %CTDFL0d(29)=$g(^TTAB("DF",%CTDFL0d(1),"LAYOUT",%CTDFL0d(3)))
 s %CTDFL0d(4)=$p(%CTDFL0d(29),"\",2) s %CTDFL0d(5)=$p(%CTDFL0d(29),"\",1) s %CTDFL0d(6)=$p(%CTDFL0d(29),"\",6) s %CTDFL0d(7)=$p(%CTDFL0d(29),"\",7) s %CTDFL0d(8)=$p(%CTDFL0d(29),"\",8) s %CTDFL0d(9)=$p(%CTDFL0d(29),"\",4) s %CTDFL0d(10)=$p(%CTDFL0d(29),"\",3) s %CTDFL0d(11)=$p(%CTDFL0d(29),"\",5) s %CTDFL0d(12)=$p(%CTDFL0d(29),"\",9) s %CTDFL0d(13)=$p(%CTDFL0d(29),"\",10) s %CTDFL0d(14)=$p(%CTDFL0d(29),"\",12) s %CTDFL0d(15)=$p(%CTDFL0d(29),"\",11)
 s %CTDFL0d(2)=(%CTDFL0d(1))_"||"_(%CTDFL0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("DF",$p(%CTDFL0d(2),"||",1),"LAYOUT",$p(%CTDFL0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTDFL0d(20)=1,%CTDFL0d(21)=$name(^TTAB("DF",$p(%CTDFL0d(2),"||",1),"LAYOUT",$p(%CTDFL0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DynamicFunctionLayout for RowID value: "_%CTDFL0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTDFL0d(18)=$p(%CTDFL0d(2),"||"),%CTDFL0d(3)=$p(%CTDFL0d(2),"||",2)
 i %CTDFL0d(18)'="",%CTDFL0d(3)'="",$d(^TTAB("DF",%CTDFL0d(18),"LAYOUT",%CTDFL0d(3)))
 e  g %0ACdun
 s %CTDFL0d(37)=$g(^TTAB("DF",%CTDFL0d(18),"LAYOUT",%CTDFL0d(3)))
 s %CTDFL0d(4)=$p(%CTDFL0d(37),"\",2) s %CTDFL0d(5)=$p(%CTDFL0d(37),"\",1) s %CTDFL0d(6)=$p(%CTDFL0d(37),"\",6) s %CTDFL0d(7)=$p(%CTDFL0d(37),"\",7) s %CTDFL0d(8)=$p(%CTDFL0d(37),"\",8) s %CTDFL0d(9)=$p(%CTDFL0d(37),"\",4) s %CTDFL0d(10)=$p(%CTDFL0d(37),"\",3) s %CTDFL0d(11)=$p(%CTDFL0d(37),"\",5) s %CTDFL0d(12)=$p(%CTDFL0d(37),"\",9) s %CTDFL0d(13)=$p(%CTDFL0d(37),"\",10) s %CTDFL0d(14)=$p(%CTDFL0d(37),"\",12) s %CTDFL0d(15)=$p(%CTDFL0d(37),"\",11)
 s %CTDFL0d(1)=$p(%CTDFL0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTDFL0d(19)=%CTDFL0d(19)+1,%ROWCOUNT=%CTDFL0d(19),%ROWID=%CTDFL0d(2),%CTDFL0c=10 q
%CTDFL0f i '$g(%CTDFL0c) { s SQLCODE=-102 q  } i %CTDFL0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTDFL0d(19))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTDFL0d(19),%CTDFL0c=100 q  } g %0Afirst:%CTDFL0c=1
%0ACdun i $zu(115,2)=1,$g(%CTDFL0d(20))=1 { l -@%CTDFL0d(21) s %CTDFL0d(20)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTDFL0d(19),SQLCODE=100,%CTDFL0c=100 q
%CTDFL0c i '$g(%CTDFL0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTDFL0d(19)),1:0)
 i $zu(115,2)=1,$g(%CTDFL0d(20))=1 { l -@%CTDFL0d(21) } k %CTDFL0c,%CTDFL0d,%CTDFL0E,%CTDFL0l,%CTDFL0n,%CTDFL0R,%CTDFL0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTDFL0c=100 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(par)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)="" g %0CBdun
 s %mmmsqld(4)=""
%0CBk1 s %mmmsqld(4)=$o(^TTAB("DF",%mmmsqld(1),"LAYOUT",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0CBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 s %mmmsqld(15)=$$%getlock^User.CTDynamicFunctionLayout.T1(%mmmsqld(3)) i '%mmmsqld(15) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(4)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(5)'="",%mmmsqld(4)'="",$d(^TTAB("DF",%mmmsqld(5),"LAYOUT",%mmmsqld(4)))
 e  g %0CCdun
 s %mmmsqld(1)=$p(%mmmsqld(3),"||")
 d %delete^User.CTDynamicFunctionLayout.T1(%mmmsqld(3),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTDynamicFunctionLayout.T1(%mmmsqld(3)) g %0Cc
%0CCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTDynamicFunctionLayout.T1(%mmmsqld(3)) g:SQLCODE<0 %0Cc
 g %0CBk1
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTDynamicFunctionLayout.T1(%mmmsqld(3)) g %0Cc
%0Eo n %i,icol,ir
 f icol=0:1:14 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTDynamicFunctionLayout.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Ho d %CTDFL0f q:SQLCODE'=0
 s PLIST(0)=%CTDFL0d(1),PLIST(1)=%CTDFL0d(2),PLIST(2)=%CTDFL0d(3),PLIST(3)=%CTDFL0d(4),PLIST(4)=%CTDFL0d(5),PLIST(5)=%CTDFL0d(6),PLIST(6)=%CTDFL0d(7),PLIST(7)=%CTDFL0d(8),PLIST(8)=%CTDFL0d(9),PLIST(9)=%CTDFL0d(10),PLIST(10)=%CTDFL0d(11),PLIST(11)=%CTDFL0d(12),PLIST(12)=%CTDFL0d(13),PLIST(13)=%CTDFL0d(14),PLIST(14)=%CTDFL0d(15)
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(20)=0,%mmmsqld(21)=""
 s %mmmsqld(17)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(17)
 s %mmmsqld(19)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(19)'="",PLIST(2)'="",$d(^TTAB("DF",%mmmsqld(19),"LAYOUT",PLIST(2)))
 e  g %0JBdun
 s %mmmsqld(29)=$g(^TTAB("DF",%mmmsqld(19),"LAYOUT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"\",2) s PLIST(4)=$p(%mmmsqld(29),"\",1) s PLIST(5)=$p(%mmmsqld(29),"\",6) s PLIST(6)=$p(%mmmsqld(29),"\",7) s PLIST(7)=$p(%mmmsqld(29),"\",8) s PLIST(8)=$p(%mmmsqld(29),"\",4) s PLIST(9)=$p(%mmmsqld(29),"\",3) s PLIST(10)=$p(%mmmsqld(29),"\",5) s PLIST(11)=$p(%mmmsqld(29),"\",9) s PLIST(12)=$p(%mmmsqld(29),"\",10) s PLIST(13)=$p(%mmmsqld(29),"\",12) s PLIST(14)=$p(%mmmsqld(29),"\",11)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0JBuncommitted i $zu(115,2)=1 l +^TTAB("DF",$p(PLIST(1),"||",1),"LAYOUT",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^TTAB("DF",$p(PLIST(1),"||",1),"LAYOUT",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DynamicFunctionLayout for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(19)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(19)'="",PLIST(2)'="",$d(^TTAB("DF",%mmmsqld(19),"LAYOUT",PLIST(2)))
 e  g %0JCdun
 s %mmmsqld(37)=$g(^TTAB("DF",%mmmsqld(19),"LAYOUT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(37),"\",2) s PLIST(4)=$p(%mmmsqld(37),"\",1) s PLIST(5)=$p(%mmmsqld(37),"\",6) s PLIST(6)=$p(%mmmsqld(37),"\",7) s PLIST(7)=$p(%mmmsqld(37),"\",8) s PLIST(8)=$p(%mmmsqld(37),"\",4) s PLIST(9)=$p(%mmmsqld(37),"\",3) s PLIST(10)=$p(%mmmsqld(37),"\",5) s PLIST(11)=$p(%mmmsqld(37),"\",9) s PLIST(12)=$p(%mmmsqld(37),"\",10) s PLIST(13)=$p(%mmmsqld(37),"\",12) s PLIST(14)=$p(%mmmsqld(37),"\",11)
 s PLIST(0)=$p(PLIST(1),"||")
%0JBuncommitted ;
 s SQLCODE=0 g %0Jc
%0JCdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Jc
]]></Routine>
</Export>
