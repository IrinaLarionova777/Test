<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTDBD" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTDBD ; IG 29/4/98 ; LVB Control data access for CTDBD CT_DBLabBlockTypeProced
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTDBD(par)
 ; $$update^LVBCTDBD(ROWID)
 ; $$select^LVBCTDBD(ROWID,skip)
 ; $$delete^LVBCTDBD(ROWID,Comments)
 ; $$open^LVBCTDBD(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTDBD(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTDBD(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTDBD(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTDBD()
 ; $$getall^LVBCTDBD(par)
 ;
  ;---&sql(DECLARE CTDBD CURSOR FOR SELECT * FROM CT_DBLabBlockTypeProced
   ;---         WHERE CTDBD_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTDBD)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDBD0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k PLIST 
  ;---&SQL(FETCH CTDBD INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTDBD)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDBD0c
 q 0
 ;
select(RowID,skip) s RowID=$g(RowID),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM CT_DBLabBlockTypeProced WHERE CTDBD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO CT_DBLabBlockTypeProced VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") S RowID=$g(RowID)
  ;---&sql(UPDATE CT_DBLabBlockTypeProced VALUES :PLIST() WHERE CTDBD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_DBLabBlockTypeProced WHERE CTDBD_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDBP($p(plist(1),"||",1)_"||"_plist(3),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 ;
 i $g(PLIST(4))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDBS($p(plist(1),"||",1)_"||"_plist(4),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(4)=X k plist
 ;
 q
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 q
%CTDBD0o s $zt="%CTDBD0E" s SQLCODE=$s($g(%CTDBD0c):-101,1:0) q:SQLCODE'=0  s %CTDBD0d(12)=0 s %CTDBD0d(13)=0,%CTDBD0d(14)=""
 s %CTDBD0d(8)=$g(par)
 s %CTDBD0c=1 q
%CTDBD0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTDBD0c,%CTDBD0d,%CTDBD0E,%CTDBD0l,%CTDBD0n,%CTDBD0R,%CTDBD0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTDBD0d(1)=%CTDBD0d(8)
 s %CTDBD0d(10)=$p(%CTDBD0d(1),"||"),%CTDBD0d(11)=$p(%CTDBD0d(1),"||",2)
 i %CTDBD0d(10)="" g %0ABdun
 i %CTDBD0d(11)="" g %0ABdun
 s %CTDBD0d(3)=""
%0ABk1 s %CTDBD0d(3)=$o(^TTAB("LA",%CTDBD0d(10),"DB-BLOCK",%CTDBD0d(11),%CTDBD0d(3)))
 i %CTDBD0d(3)="" g %0ABdun
 s %CTDBD0d(23)=$g(^TTAB("LA",%CTDBD0d(10),"DB-BLOCK",%CTDBD0d(11),%CTDBD0d(3)))
 s %CTDBD0d(4)=$p(%CTDBD0d(23),"\",1) s %CTDBD0d(5)=$p(%CTDBD0d(23),"\",2) s %CTDBD0d(6)=$p(%CTDBD0d(23),"\",3) s %CTDBD0d(7)=$p(%CTDBD0d(23),"\",4)
 s %CTDBD0d(2)=(%CTDBD0d(10))_"||"_(%CTDBD0d(11))_"||"_(%CTDBD0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("LA",$p(%CTDBD0d(2),"||",1),"DB-BLOCK",$p(%CTDBD0d(2),"||",2),$p(%CTDBD0d(2),"||",3))#"S":$zu(115,4) i $t { s %CTDBD0d(13)=1,%CTDBD0d(14)=$name(^TTAB("LA",$p(%CTDBD0d(2),"||",1),"DB-BLOCK",$p(%CTDBD0d(2),"||",2),$p(%CTDBD0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DBLabBlockTypeProced for RowID value: "_%CTDBD0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTDBD0d(10)=$p(%CTDBD0d(2),"||"),%CTDBD0d(11)=$p(%CTDBD0d(2),"||",2),%CTDBD0d(3)=$p(%CTDBD0d(2),"||",3)
 i %CTDBD0d(10)'="",%CTDBD0d(11)'="",%CTDBD0d(3)'="",$d(^TTAB("LA",%CTDBD0d(10),"DB-BLOCK",%CTDBD0d(11),%CTDBD0d(3)))
 e  g %0ACdun
 s %CTDBD0d(32)=$g(^TTAB("LA",%CTDBD0d(10),"DB-BLOCK",%CTDBD0d(11),%CTDBD0d(3)))
 s %CTDBD0d(4)=$p(%CTDBD0d(32),"\",1) s %CTDBD0d(5)=$p(%CTDBD0d(32),"\",2) s %CTDBD0d(6)=$p(%CTDBD0d(32),"\",3) s %CTDBD0d(7)=$p(%CTDBD0d(32),"\",4)
 s %CTDBD0d(1)=$p(%CTDBD0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTDBD0d(12)=%CTDBD0d(12)+1,%ROWCOUNT=%CTDBD0d(12),%ROWID=%CTDBD0d(2),%CTDBD0c=10 q
%CTDBD0f i '$g(%CTDBD0c) { s SQLCODE=-102 q  } i %CTDBD0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTDBD0d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTDBD0d(12),%CTDBD0c=100 q  } g %0Afirst:%CTDBD0c=1
%0ACdun i $zu(115,2)=1,$g(%CTDBD0d(13))=1 { l -@%CTDBD0d(14) s %CTDBD0d(13)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTDBD0d(12),SQLCODE=100,%CTDBD0c=100 q
%CTDBD0c i '$g(%CTDBD0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTDBD0d(12)),1:0)
 i $zu(115,2)=1,$g(%CTDBD0d(13))=1 { l -@%CTDBD0d(14) } k %CTDBD0c,%CTDBD0d,%CTDBD0E,%CTDBD0l,%CTDBD0n,%CTDBD0R,%CTDBD0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTDBD0c=100 q
%0Do d %CTDBD0f q:SQLCODE'=0
 s PLIST(0)=%CTDBD0d(1),PLIST(1)=%CTDBD0d(2),PLIST(2)=%CTDBD0d(3),PLIST(3)=%CTDBD0d(4),PLIST(4)=%CTDBD0d(5),PLIST(5)=%CTDBD0d(6),PLIST(6)=%CTDBD0d(7)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(9)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),%mmmsqld(12)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TTAB("LA",%mmmsqld(11),"DB-BLOCK",%mmmsqld(12),PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(23)=$g(^TTAB("LA",%mmmsqld(11),"DB-BLOCK",%mmmsqld(12),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("LA",$p(PLIST(1),"||",1),"DB-BLOCK",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TTAB("LA",$p(PLIST(1),"||",1),"DB-BLOCK",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DBLabBlockTypeProced for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),%mmmsqld(12)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TTAB("LA",%mmmsqld(11),"DB-BLOCK",%mmmsqld(12),PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(32)=$g(^TTAB("LA",%mmmsqld(11),"DB-BLOCK",%mmmsqld(12),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"\",1) s PLIST(4)=$p(%mmmsqld(32),"\",2) s PLIST(5)=$p(%mmmsqld(32),"\",3) s PLIST(6)=$p(%mmmsqld(32),"\",4)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTDBLabBlockTypeProced.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("LA",%mmmsqld(4),"DB-BLOCK",%mmmsqld(5),%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("LA",%mmmsqld(4),"DB-BLOCK",%mmmsqld(5),%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTDBLabBlockTypeProced.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("LA",%mmmsqld(3),"DB-BLOCK",%mmmsqld(4),%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("LA",%mmmsqld(3),"DB-BLOCK",%mmmsqld(4),%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.CTDBLabBlockTypeProced.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.CTDBLabBlockTypeProced.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
