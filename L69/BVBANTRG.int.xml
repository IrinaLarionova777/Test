<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBANTRG" type="INT" languagemode="0"><![CDATA[
BVBANTRG ; IG 4/12/98 ; MVB Control data access for BB_AntibodyRegister  ; Compiled May 22, 2000 13:22:47 for Cache for Windows
 ; 
 ; supported calls: 
 ; 
 ; $$select^BVBANTRG(ROWID) 
 ; $$update^BVBANTRG(ROWID) 
 ; $$delete^BVBANTRG(ROWID) 
 ; $$insert^BVBANTRG() 
 ; $$open^BVBANTRG(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetch^BVBANTRG(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchbuffer^BVBANTRG(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchall^BVBANTRG(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$close^BVBANTRG() 
 ; 
 ; 
 ;
 ;
 ;
open(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) s lab=$g(lab),pat=$g(pat)
 d
 .i lab'="" d %ANTRG1o q
 .i pat'="" d %ANTRG2o q
 . d %ANTRG3o
 q 0
 ;
fetch(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s lab=$g(lab),pat=$g(pat)
 d
 .i lab'="" d %0Io q
 .i pat'="" d %0Jo q
 . d %0Ko q
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; 
 ; Fetch all data
fetchbuffer(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) s lab=$g(lab),pat=$g(pat) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(lab,pat) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(lab,pat,p2,p3,p4,p5,p6,p7,p8,p9) N (lab,pat,PLIST) s lab=$g(lab),pat=$g(pat) K ^TMP($zn,$j)
 i $$open(lab,pat)
 f cnt=1:1 Q:$$fetch(lab,pat)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
close() 
 d %ANTRG1c 
 d %ANTRG2c 
 d %ANTRG3c 
 q 0 
 ;        
 ;        
 ; 
insert() K PLIST(1) 
 d %0Oo 
 i 'SQLCODE q $$select(%ROWID) 
 q SQLCODE 
 ; 
update(RowID) k PLIST(1) s RowID=$g(RowID)
 d %0Po 
 q SQLCODE 
 ; 
delete(RowID) s RowID=$g(RowID)
 d %0Qo
 q 0 
 ; 
 ; Adjust certain fields 
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTCT(plist(5)_"||"_plist(6))
 .S X=plist(6) I 'SQLCODE S X=$TR(PLIST(3),"|"," ")
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 ;
 q 
 ;
select(RowID) s RowID=$g(RowID) k PLIST 
 d %0Ro 
 s PLIST=$O(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
 ; 
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q
%0ABs3 s %val=$$timeext^%qarzdt(%val,1) q
%ANTRG1o s SQLCODE=$s($g(%ANTRG1c):-101,1:0) q:SQLCODE'=0
 s %ANTRG1c=1 k %ANTRG1m
 s %ANTRG1E=$zt,%ANTRG1f=0,%ANTRG1e=0,%ANTRG1L=""
 s %ANTRG1d(2)=$P(lab,$C(1))
 s:%ANTRG1d(2)="" %ANTRG1d(2)=$E(lab,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %ANTRG1d(1)=$g(%ANTRG1d(2))
 i %ANTRG1d(1)="" g %0ABdun
 s $P(%ANTRG1d(4),$C(1))=" "
%0ABk1 s $P(%ANTRG1d(4),$C(1))=$zp(^BBAR(0,"Lab",%ANTRG1d(1),$P(%ANTRG1d(4),$C(1))))
 i $P(%ANTRG1d(4),$C(1))="" g %0ABdun
 i $P(%ANTRG1d(4),$C(1))'=+$P(%ANTRG1d(4),$C(1)) g %0ABdun
 s %val=$P(%ANTRG1d(4),$C(1)) d %0ABs1:%val'="" s $P(%ANTRG1d(4),$C(1),2)=%val
 i $P(%ANTRG1d(4),$C(1))'="",$d(^BBAR($P(%ANTRG1d(4),$C(1))))
 i '$t
 e  i 1>$P(%ANTRG1d(4),$C(1)),$P(%ANTRG1d(4),$C(1))=+$P(%ANTRG1d(4),$C(1))
 i  g %0ABk1
 s %ANTRG1n=$g(^BBAR($P(%ANTRG1d(4),$C(1))))
 s %ANTRG1d(5)=$p(%ANTRG1n,"^",1) s %ANTRG1d(6)=$p(%ANTRG1n,"^",3) s %ANTRG1d(7)=$p(%ANTRG1n,"^",4) s %ANTRG1d(8)=$p(%ANTRG1n,"^",5) s %ANTRG1d(9)=$p(%ANTRG1n,"^",6) s %ANTRG1d(10)=$p(%ANTRG1n,"^",7) s %ANTRG1d(11)=$p(%ANTRG1n,"^",8) s %ANTRG1d(12)=$p(%ANTRG1n,"^",9)
 s %val=$P(%ANTRG1d(9),$C(1)) d %0ABs2:%val'="" s $P(%ANTRG1d(9),$C(1),2)=%val
 s %val=$P(%ANTRG1d(10),$C(1)) d %0ABs3:%val'="" s $P(%ANTRG1d(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %ANTRG1f=%ANTRG1f+1 s %ANTRG1c=10 q
%ANTRG1f i '$g(%ANTRG1c) s SQLCODE=-102 q
 i %ANTRG1c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%ANTRG1c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %ANTRG1c=100 q
%ANTRG1c i '$g(%ANTRG1c) s SQLCODE=-102 q
 k %ANTRG1c,%ANTRG1d,%ANTRG1e,%ANTRG1E,%ANTRG1f,%ANTRG1l,%ANTRG1L,%ANTRG1n,%ANTRG1r,%ANTRG1R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%ANTRG1E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%ANTRG2o s SQLCODE=$s($g(%ANTRG2c):-101,1:0) q:SQLCODE'=0
 s %ANTRG2c=1 k %ANTRG2m
 s %ANTRG2E=$zt,%ANTRG2f=0,%ANTRG2e=0,%ANTRG2L=""
 s %ANTRG2d(2)=$P(pat,$C(1))
 s:%ANTRG2d(2)="" %ANTRG2d(2)=$E(pat,2,999)
 l +^mtemp s %ANTRG2t(1)=$zp(^mtemp(" "))+1,^(%ANTRG2t(1))="" l -^mtemp
 q
%0Dfirst  s %ANTRG2d(18)=""
 k ^mtemp(%ANTRG2t(1),0)
 d %0DBMod
 ; asl MOD# 4
 s %ANTRG2s(4)=""
%0DDk1 s %ANTRG2s(4)=$zp(^mtemp(%ANTRG2t(1),0,%ANTRG2s(4)))
 i %ANTRG2s(4)="" g %0DDdun
 s $P(%ANTRG2d(4),$C(1))=$s(%ANTRG2s(4)=-99999999999999999:"",1:%ANTRG2s(4))
 s %ANTRG2s(18)=""
%0DDk2 s %ANTRG2s(18)=$o(^mtemp(%ANTRG2t(1),0,%ANTRG2s(4),%ANTRG2s(18)))
 i %ANTRG2s(18)="" g %0DDk1
 s %ANTRG2d(18)=$s(%ANTRG2s(18)=" ":"",1:%ANTRG2s(18))
 s %ANTRG2n=$g(^mtemp(%ANTRG2t(1),0,%ANTRG2s(4),%ANTRG2d(18)))
 s %ANTRG2d(5)=$p(%ANTRG2n,"|~|",1) s %ANTRG2d(6)=$p(%ANTRG2n,"|~|",2) s %ANTRG2d(7)=$p(%ANTRG2n,"|~|",3) s %ANTRG2d(8)=$p(%ANTRG2n,"|~|",4) s %ANTRG2d(9)=$p(%ANTRG2n,"|~|",5) s %ANTRG2d(10)=$p(%ANTRG2n,"|~|",6) s %ANTRG2d(11)=$p(%ANTRG2n,"|~|",7) s %ANTRG2d(12)=$p(%ANTRG2n,"|~|",8) s %ANTRG2d(13)=$p(%ANTRG2n,"|~|",9)
 s %val=$P(%ANTRG2d(4),$C(1)) d %0ABs1:%val'="" s $P(%ANTRG2d(4),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %ANTRG2f=%ANTRG2f+1 s %ANTRG2c=10 q
%ANTRG2f i '$g(%ANTRG2c) s SQLCODE=-102 q
 i %ANTRG2c=100 s SQLCODE=100 q
 s $zt="%0Derr^"_$zn s $ze="" n %val g %0Dfirst:%ANTRG2c=1
 g %0DDk2
%0DDdun 
%0DAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %ANTRG2c=100 q
%ANTRG2c i '$g(%ANTRG2c) s SQLCODE=-102 q
 f %ANTRG2t=1:1:1 k ^mtemp(%ANTRG2t(%ANTRG2t))
 k %ANTRG2c,%ANTRG2d,%ANTRG2e,%ANTRG2E,%ANTRG2f,%ANTRG2l,%ANTRG2L,%ANTRG2n,%ANTRG2r,%ANTRG2R,%ANTRG2s,%ANTRG2t s SQLCODE=0 q
%0Derr ; Cursor-Based Error Trap Module...
 s $zt=$g(%ANTRG2E),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0DBMod ; asl MOD# 2
 n %ANTRG2n  ; Nested NEWing for Subquery...
 s %ANTRG2d(1)=$g(%ANTRG2d(2))
 i %ANTRG2d(1)="" g %0DBdun
 s %ANTRG2d(15)=""
%0DBk1 s %ANTRG2d(15)=$o(^TDEBi(%ANTRG2d(1),"DATE",%ANTRG2d(15)))
 i %ANTRG2d(15)="" g %0DBdun
 i %ANTRG2d(15)'=+%ANTRG2d(15) g %0DBdun
 s %ANTRG2d(16)=""
%0DBk2 s %ANTRG2d(16)=$o(^TDEBi(%ANTRG2d(1),"DATE",%ANTRG2d(15),%ANTRG2d(16)))
 i %ANTRG2d(16)="" g %0DBk1
 s %ANTRG2d(17)=""
%0DBk3 s %ANTRG2d(17)=$o(^TDEBi(%ANTRG2d(1),"DATE",%ANTRG2d(15),%ANTRG2d(16),%ANTRG2d(17)))
 i %ANTRG2d(17)="" g %0DBk2
 s %ANTRG2d(14)=(%ANTRG2d(17))
 ; asl MOD# 3
 s %ANTRG2d(6)=$g(%ANTRG2d(14))
 i %ANTRG2d(6)="" g %0DCdun
 s $P(%ANTRG2d(4),$C(1))=""
%0DCk1 s $P(%ANTRG2d(4),$C(1))=$o(^BBAR(0,"Lab",%ANTRG2d(6),$P(%ANTRG2d(4),$C(1))))
 i $P(%ANTRG2d(4),$C(1))="" g %0DCdun
 i $P(%ANTRG2d(4),$C(1))'=+$P(%ANTRG2d(4),$C(1)) g %0DCdun
 s %val=$P(%ANTRG2d(4),$C(1)) d %0ABs1:%val'="" s $P(%ANTRG2d(4),$C(1),2)=%val
 i $P(%ANTRG2d(4),$C(1))'="",$d(^BBAR($P(%ANTRG2d(4),$C(1))))
 i '$t
 e  i 1>$P(%ANTRG2d(4),$C(1)),$P(%ANTRG2d(4),$C(1))=+$P(%ANTRG2d(4),$C(1))
 i  g %0DCk1
 s %ANTRG2n=$g(^BBAR($P(%ANTRG2d(4),$C(1))))
 s %ANTRG2d(5)=$p(%ANTRG2n,"^",1) s %ANTRG2d(7)=$p(%ANTRG2n,"^",3) s %ANTRG2d(8)=$p(%ANTRG2n,"^",4) s %ANTRG2d(9)=$p(%ANTRG2n,"^",5) s %ANTRG2d(10)=$p(%ANTRG2n,"^",6) s %ANTRG2d(11)=$p(%ANTRG2n,"^",7) s %ANTRG2d(12)=$p(%ANTRG2n,"^",8) s %ANTRG2d(13)=$p(%ANTRG2n,"^",9)
 s %val=$P(%ANTRG2d(10),$C(1)) d %0ABs2:%val'="" s $P(%ANTRG2d(10),$C(1),2)=%val
 s %val=$P(%ANTRG2d(11),$C(1)) d %0ABs3:%val'="" s $P(%ANTRG2d(11),$C(1),2)=%val
 s %ANTRG2s(4)=$s($P(%ANTRG2d(4),$C(1))'="":$P(%ANTRG2d(4),$C(1)),1:-99999999999999999),%ANTRG2d(18)=%ANTRG2d(18)+1,%ANTRG2n="",$p(%ANTRG2n,"|~|",1)=%ANTRG2d(5),$p(%ANTRG2n,"|~|",2)=%ANTRG2d(6),$p(%ANTRG2n,"|~|",3)=%ANTRG2d(7),$p(%ANTRG2n,"|~|",4)=%ANTRG2d(8),$p(%ANTRG2n,"|~|",5)=%ANTRG2d(9),$p(%ANTRG2n,"|~|",6)=%ANTRG2d(10),$p(%ANTRG2n,"|~|",7)=%ANTRG2d(11),$p(%ANTRG2n,"|~|",8)=%ANTRG2d(12),$p(%ANTRG2n,"|~|",9)=%ANTRG2d(13)
 s ^mtemp(%ANTRG2t(1),0,%ANTRG2s(4),%ANTRG2d(18))=%ANTRG2n
 g %0DCk1
%0DCdun 
 g %0DBk3
%0DBdun 
 q
%ANTRG3o s SQLCODE=$s($g(%ANTRG3c):-101,1:0) q:SQLCODE'=0
 s %ANTRG3c=1 k %ANTRG3m
 s %ANTRG3E=$zt,%ANTRG3f=0,%ANTRG3e=0,%ANTRG3L=""
 q
%0Efirst   ;  init
 ; asl MOD# 2
 s $P(%ANTRG3d(2),$C(1))=" "
%0EBk1 s $P(%ANTRG3d(2),$C(1))=$zp(^BBAR($P(%ANTRG3d(2),$C(1))))
 i $P(%ANTRG3d(2),$C(1))="" g %0EBdun
 i 1>$P(%ANTRG3d(2),$C(1)),$P(%ANTRG3d(2),$C(1))=+$P(%ANTRG3d(2),$C(1)) g %0EBk1
 i $P(%ANTRG3d(2),$C(1))'=+$P(%ANTRG3d(2),$C(1)) g %0EBdun
 s %ANTRG3n=$g(^BBAR($P(%ANTRG3d(2),$C(1))))
 s %ANTRG3d(3)=$p(%ANTRG3n,"^",1) s %ANTRG3d(4)=$p(%ANTRG3n,"^",2) s %ANTRG3d(5)=$p(%ANTRG3n,"^",3) s %ANTRG3d(6)=$p(%ANTRG3n,"^",4) s %ANTRG3d(7)=$p(%ANTRG3n,"^",5) s %ANTRG3d(8)=$p(%ANTRG3n,"^",6) s %ANTRG3d(9)=$p(%ANTRG3n,"^",7) s %ANTRG3d(10)=$p(%ANTRG3n,"^",8) s %ANTRG3d(11)=$p(%ANTRG3n,"^",9)
 s %val=$P(%ANTRG3d(2),$C(1)) d %0ABs1:%val'="" s $P(%ANTRG3d(2),$C(1),2)=%val
 s %val=$P(%ANTRG3d(8),$C(1)) d %0ABs2:%val'="" s $P(%ANTRG3d(8),$C(1),2)=%val
 s %val=$P(%ANTRG3d(9),$C(1)) d %0ABs3:%val'="" s $P(%ANTRG3d(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %ANTRG3f=%ANTRG3f+1 s %ANTRG3c=10 q
%ANTRG3f i '$g(%ANTRG3c) s SQLCODE=-102 q
 i %ANTRG3c=100 s SQLCODE=100 q
 s $zt="%0Eerr^"_$zn s $ze="" n %val g %0Efirst:%ANTRG3c=1
 g %0EBk1
%0EBdun 
%0EAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %ANTRG3c=100 q
%ANTRG3c i '$g(%ANTRG3c) s SQLCODE=-102 q
 k %ANTRG3c,%ANTRG3d,%ANTRG3e,%ANTRG3E,%ANTRG3f,%ANTRG3l,%ANTRG3L,%ANTRG3n,%ANTRG3r,%ANTRG3R s SQLCODE=0 q
%0Eerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%ANTRG3E),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Io d %ANTRG1f q:SQLCODE'=0
 s PLIST(1)=%ANTRG1d(4),PLIST(2)=%ANTRG1d(5),PLIST(3)=%ANTRG1d(1),PLIST(4)=%ANTRG1d(6),PLIST(5)=%ANTRG1d(7),PLIST(6)=%ANTRG1d(8),PLIST(7)=%ANTRG1d(9),PLIST(8)=%ANTRG1d(10),PLIST(9)=%ANTRG1d(11),PLIST(10)=%ANTRG1d(12)
 q
%0Jo d %ANTRG2f q:SQLCODE'=0
 s PLIST(1)=%ANTRG2d(4),PLIST(2)=%ANTRG2d(5),PLIST(3)=%ANTRG2d(6),PLIST(4)=%ANTRG2d(7),PLIST(5)=%ANTRG2d(8),PLIST(6)=%ANTRG2d(9),PLIST(7)=%ANTRG2d(10),PLIST(8)=%ANTRG2d(11),PLIST(9)=%ANTRG2d(12),PLIST(10)=%ANTRG2d(13)
 q
%0Ko d %ANTRG3f q:SQLCODE'=0
 s PLIST(1)=%ANTRG3d(2),PLIST(2)=%ANTRG3d(3),PLIST(3)=%ANTRG3d(4),PLIST(4)=%ANTRG3d(5),PLIST(5)=%ANTRG3d(6),PLIST(6)=%ANTRG3d(7),PLIST(7)=%ANTRG3d(8),PLIST(8)=%ANTRG3d(9),PLIST(9)=%ANTRG3d(10),PLIST(10)=%ANTRG3d(11)
 q
%0Oo n %insert,icol,ir
 f icol=0:1:10 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt2531("1")
 q
%0PAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Po n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Perr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 i %mmmsqld(3)="",$L(RowID)>1 s %val=$E(RowID,2,999) d %0PAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^BBAR($P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0PBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:10 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt2531(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0PBdun 
%0PAdun 
 q
%0Perr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0PAdun
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Qerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 i %mmmsqld(2)="",$L(RowID)>1 s %val=$E(RowID,2,999) d %0PAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^BBAR(%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0QBdun
 d delete^mt2531(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0QBdun 
%0QAdun 
 q
%0Qerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0QAdun
%0Ro n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Rerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 i %mmmsqld(3)="",$L(RowID)>1 s %val=$E(RowID,2,999) d %0PAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^BBAR($P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0RBdun
 s %mmmsqln=$g(^BBAR($P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5) s PLIST(7)=$p(%mmmsqln,"^",6) s PLIST(8)=$p(%mmmsqln,"^",7) s PLIST(9)=$p(%mmmsqln,"^",8) s PLIST(10)=$p(%mmmsqln,"^",9)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(8),$C(1)) d %0ABs3:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Rc
%0RBdun 
%0RAdun 
%0Rc q
%0Rerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0RAdun
]]></Routine>
</Export>
