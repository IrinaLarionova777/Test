<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBANT" type="INT" languagemode="0"><![CDATA[
BVBANT ; IG 10/12/98 ; MVB Control data access for BB_AntibodyScreen  ; Compiled July 7, 2000 10:21:46 for Cache for Windows
 ; 
 ; supported calls: 
 ; 
 ; $$select^BVBANT(ROWID) 
 ; $$open^BVBANT(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetch^BVBANT(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchbuffer^BVBANT(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchall^BVBANT(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) 
 ; $$close^BVBANT() 
 ; $$insert^BVBANT() 
 ; $$update^BVBANT(ROWID) 
 ; $$delete^BVBANT(ROWID) 
 ; $$clear^BVBANT(row) 
 ; $$copy^BVBANT(req) 
 ; $$copy1^BVBANT(antib,req) 
 ; $$result^BVBANT(vists,req) 
 ; 
 
 
 ;
 
 ;
 q 
 ; GET ALL BB_AntibodyScreen 
open(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) s epis=$g(epis),ts=$g(ts),pat=$g(pat)
 d
 .i epis'="" d %ANT100o q
 .i pat'="" d %ANT200o q
 . d %ANT300o
 q 0
 ;
fetch(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) k PLIST s epis=$g(epis),ts=$g(ts),pat=$g(pat)
 d
 .i epis'="" d %0Io q
 .i pat'="" d %0Jo q
 . d %0Ko q
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ; Fetch all data
fetchbuffer(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) s epis=$g(epis),ts=$g(ts),pat=$g(pat) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(epis,ts,pat) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(epis,ts,pat,p3,p4,p5,p6,p7,p8,p9) N (epis,ts,pat,PLIST) s epis=$g(epis),ts=$g(ts),pat=$g(pat) K ^TMP($zn,$j)
 i $$open(epis,ts,pat)
 f cnt=1:1 Q:$$fetch(epis,ts,pat)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
close() N SQLCODE
 d %ANT100c 
 d %ANT200c 
 d %ANT300c 
 q 0 
 ;
insert() K PLIST(1) 
 d %0Oo 
 i 'SQLCODE q $$select(%ROWID) 
 q SQLCODE 
 ; 
update(ROWID) s ROWID=$g(ROWID) k PLIST(1) 
 i $d(addr) k PLIST(9) m PLIST(9)=addr
 d %0Po 
 q SQLCODE 
 ; 
delete(ROWID) s ROWID=$g(ROWID)
 d %0Qo
 q 0 
 ; 
 ; Adjust certain fields 
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBEPVIS(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3))
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(6))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 q
 ;
select(ROWID) s ROWID=$g(ROWID) k PLIST 
 d %0Ro 
 s PLIST=$O(PLIST(""),-1) 
 q SQLCODE 
clear(row) ;clear antibody screen
 n (row)
 s err=$$select(row) q:err err
 s (PLIST(4),PLIST(5),PLIST(6),PLIST(7))="",err=$$update(row)
 s err=$$open^BVBANTRS(row)
 f  s err=$$fetch^BVBANTRS(row) q:err  d
 .s PLIST(5)="",PLIST(4)="",err1=$$update^BVBANTRS(PLIST(1))
 s err=$$close^BVBANTRS()        
 q 0
copy(req) ;copy results from request to antibody screen
 n (req,PLIST) s req=$p(req,$c(1))
 s err=$$select^BVBREQ(req) q:err 0
 i $d(PLIST) m BBREQ=PLIST
 s vists=$g(BBREQ(9)),epis=$g(BBREQ(2)),pat=$g(BBREQ(3))
 s err=$$select^LVBVISTS(vists,"Y"),date=$g(PLIST(7)),time=$g(PLIST(8)),user=$g(PLIST(9))
 s result=$$result(vists,req)
 k PLIST s PLIST(2)=epis,PLIST(3)=pat,PLIST(4)=result,PLIST(5)="A",PLIST(6)=user,PLIST(7)=date,PLIST(8)=time
 s err=$$insert() q:err err
 s antib=$p($g(%ROWID),$c(1))
 i $$open^BVBRQRES(req)
 f  q:$$fetch^BVBRQRES(req)  d
 .s type=$g(PLIST(3)),sal=$g(PLIST(5)),icd=$g(PLIST(6)),reqch=PLIST(2)
 .k PLIST s PLIST(3)=type,PLIST(4)=sal,PLIST(5)=icd
 .i '$$insert^BVBANTRS(antib) d
 .. ; copy child tables
 ..s antch=$p(PLIST(1),"||",2)
 ..m ^BBANT(antib,"RES",antch,"TABLE")=^BB("RQ",req,"RES",reqch,"TABLE")
 i $$close^BVBRQRES()
 k PLIST s PLIST(1)=antib
 s PLIST=$o(PLIST(""),-1)
 q 0
 ;copy results from antibody screen to request 
copy1(antib,req) s antib=$p(antib,$c(1),1),req=$p(req,$c(1),1)
 i $$open^BVBANTRS(antib)
 f  q:$$fetch^BVBANTRS(antib)  d
 .s type=$g(PLIST(3)),sal=$g(PLIST(4)),icd=$g(PLIST(5)),antch=PLIST(2)
 .k PLIST s PLIST(3)=type,PLIST(5)=sal,PLIST(6)=icd
 .i '$$insert^BVBRQRES(req) d
 .. ; copy child tables
 ..s reqch=$p(PLIST(1),"||",2)
 ..m ^BB("RQ",req,"RES",reqch,"TABLE")=^BBANT(antib,"RES",antch,"TABLE")
 i $$close^BVBRQRES()
 q 0
 ;get result
result(vists,req) n (vists,req) s vists=$p(vists,$c(1))
 s epis=$p(vists,"||"),tset=$p(vists,"||",2),cnt=$p(vists,"||",3)
 q:epis="" ""
 q:tset="" ""
 q:cnt="" ""
 ;try to find comparison table UUPR and display grid Yes
 s found=0,comp=0 f  s comp=$o(^CT("COMP",comp)) q:comp=""  q:found  s s=^(comp) d
 .q:$p(s,"^",2)'="UUPR"  q:$p(s,"^",3)'="Y"  s found=comp
 q:'found ""
 s comp=found
 s found=0
 s ts=0 f  s ts=$o(^CT("COMP",comp,"TS",ts)) q:ts=""  q:found  s s=^(ts) d
 .q:$p(s,"^")'=tset  s found=1,pass=$p($p(s,"^",6),"||",2),fail=$p($p(s,"^",7),"||",2)
 q:'found ""
 q:$g(pass)="" ""
 q:$g(fail)="" ""
 i $p($g(^BB("RQ",+req)),"^",11)=pass q "NotDetected"
 i $p($g(^BB("RQ",+req)),"^",11)=fail q "Detected"
 q ""
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q
%0ABs3 s %val=$$timeext^%qarzdt(%val,1) q
%ANT100o s SQLCODE=$s($g(%ANT100c):-101,1:0) q:SQLCODE'=0
 s %ANT100c=1 k %ANT100m
 s %ANT100E=$zt,%ANT100f=0,%ANT100e=0,%ANT100L=""
 s %ANT100d(2)=$P(epis,$C(1))
 s:%ANT100d(2)="" %ANT100d(2)=$E(epis,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %ANT100d(1)=$g(%ANT100d(2))
 i %ANT100d(1)="" g %0ABdun
 s $P(%ANT100d(4),$C(1))=""
%0ABk1 s $P(%ANT100d(4),$C(1))=$o(^BBANT(0,"Lab",%ANT100d(1),$P(%ANT100d(4),$C(1))))
 i $P(%ANT100d(4),$C(1))="" g %0ABdun
 i $P(%ANT100d(4),$C(1))'=+$P(%ANT100d(4),$C(1)) g %0ABdun
 
 s %val=$P(%ANT100d(4),$C(1)) d %0ABs1:%val'="" s $P(%ANT100d(4),$C(1),2)=%val
 i $P(%ANT100d(4),$C(1))'="",$d(^BBANT($P(%ANT100d(4),$C(1))))
 i '$t
 e  i 1>$P(%ANT100d(4),$C(1)),$P(%ANT100d(4),$C(1))=+$P(%ANT100d(4),$C(1))
 i  g %0ABk1
 s %ANT100n=$g(^BBANT($P(%ANT100d(4),$C(1))))
 s %ANT100d(5)=$p(%ANT100n,"^",2) s %ANT100d(6)=$p(%ANT100n,"^",3) s %ANT100d(7)=$p(%ANT100n,"^",4) s %ANT100d(8)=$p(%ANT100n,"^",5) s %ANT100d(9)=$p(%ANT100n,"^",6) s %ANT100d(10)=$p(%ANT100n,"^",7)
 
 s %val=$P(%ANT100d(9),$C(1)) d %0ABs2:%val'="" s $P(%ANT100d(9),$C(1),2)=%val
 s %val=$P(%ANT100d(10),$C(1)) d %0ABs3:%val'="" s $P(%ANT100d(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %ANT100f=%ANT100f+1 s %ANT100c=10 q
%ANT100f i '$g(%ANT100c) s SQLCODE=-102 q
 i %ANT100c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%ANT100c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %ANT100c=100 q
%ANT100c i '$g(%ANT100c) s SQLCODE=-102 q
 k %ANT100c,%ANT100d,%ANT100e,%ANT100E,%ANT100f,%ANT100l,%ANT100L,%ANT100n,%ANT100r,%ANT100R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%ANT100E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%ANT200o s SQLCODE=$s($g(%ANT200c):-101,1:0) q:SQLCODE'=0
 s %ANT200c=1 k %ANT200m
 s %ANT200E=$zt,%ANT200f=0,%ANT200e=0,%ANT200L=""
 s %ANT200d(2)=$P(pat,$C(1))
 s:%ANT200d(2)="" %ANT200d(2)=$E(pat,2,999)
 q
%0Dfirst   ;  init
 ; asl MOD# 2
 s %ANT200d(1)=$g(%ANT200d(2))
 i %ANT200d(1)="" g %0DBdun
 s %ANT200d(13)=""
%0DBk1 s %ANT200d(13)=$o(^TDEBi(%ANT200d(1),"DATE",%ANT200d(13)))
 i %ANT200d(13)="" g %0DBdun
 i %ANT200d(13)'=+%ANT200d(13) g %0DBdun
 s %ANT200d(14)=""
%0DBk2 s %ANT200d(14)=$o(^TDEBi(%ANT200d(1),"DATE",%ANT200d(13),%ANT200d(14)))
 i %ANT200d(14)="" g %0DBk1
 s %ANT200d(15)=""
%0DBk3 s %ANT200d(15)=$o(^TDEBi(%ANT200d(1),"DATE",%ANT200d(13),%ANT200d(14),%ANT200d(15)))
 i %ANT200d(15)="" g %0DBk2
 s %ANT200d(12)=(%ANT200d(15))
 ; asl MOD# 3
 s %ANT200d(5)=$g(%ANT200d(12))
 i %ANT200d(5)="" g %0DCdun
 s $P(%ANT200d(4),$C(1))=""
%0DCk1 s $P(%ANT200d(4),$C(1))=$o(^BBANT(0,"Lab",%ANT200d(5),$P(%ANT200d(4),$C(1))))
 i $P(%ANT200d(4),$C(1))="" g %0DCdun
 i $P(%ANT200d(4),$C(1))'=+$P(%ANT200d(4),$C(1)) g %0DCdun
 
 s %val=$P(%ANT200d(4),$C(1)) d %0ABs1:%val'="" s $P(%ANT200d(4),$C(1),2)=%val
 i $P(%ANT200d(4),$C(1))'="",$d(^BBANT($P(%ANT200d(4),$C(1))))
 i '$t
 e  i 1>$P(%ANT200d(4),$C(1)),$P(%ANT200d(4),$C(1))=+$P(%ANT200d(4),$C(1))
 i  g %0DCk1
 s %ANT200n=$g(^BBANT($P(%ANT200d(4),$C(1))))
 s %ANT200d(6)=$p(%ANT200n,"^",2) s %ANT200d(7)=$p(%ANT200n,"^",3) s %ANT200d(8)=$p(%ANT200n,"^",4) s %ANT200d(9)=$p(%ANT200n,"^",5) s %ANT200d(10)=$p(%ANT200n,"^",6) s %ANT200d(11)=$p(%ANT200n,"^",7)
 
 s %val=$P(%ANT200d(10),$C(1)) d %0ABs2:%val'="" s $P(%ANT200d(10),$C(1),2)=%val
 s %val=$P(%ANT200d(11),$C(1)) d %0ABs3:%val'="" s $P(%ANT200d(11),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %ANT200f=%ANT200f+1 s %ANT200c=10 q
%ANT200f i '$g(%ANT200c) s SQLCODE=-102 q
 i %ANT200c=100 s SQLCODE=100 q
 s $zt="%0Derr^"_$zn s $ze="" n %val g %0Dfirst:%ANT200c=1
 g %0DCk1
%0DCdun 
 g %0DBk3
%0DBdun 
%0DAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %ANT200c=100 q
%ANT200c i '$g(%ANT200c) s SQLCODE=-102 q
 k %ANT200c,%ANT200d,%ANT200e,%ANT200E,%ANT200f,%ANT200l,%ANT200L,%ANT200n,%ANT200r,%ANT200R s SQLCODE=0 q
%0Derr ; Cursor-Based Error Trap Module...
 s $zt=$g(%ANT200E),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%ANT300o s SQLCODE=$s($g(%ANT300c):-101,1:0) q:SQLCODE'=0
 s %ANT300c=1 k %ANT300m
 s %ANT300E=$zt,%ANT300f=0,%ANT300e=0,%ANT300L=""
 q
%0Efirst   ;  init
 ; asl MOD# 2
 s $P(%ANT300d(2),$C(1))=""
%0EBk1 s $P(%ANT300d(2),$C(1))=$o(^BBANT($P(%ANT300d(2),$C(1))))
 i $P(%ANT300d(2),$C(1))="" g %0EBdun
 i 1>$P(%ANT300d(2),$C(1)),$P(%ANT300d(2),$C(1))=+$P(%ANT300d(2),$C(1)) g %0EBk1
 i $P(%ANT300d(2),$C(1))'=+$P(%ANT300d(2),$C(1)) g %0EBdun
 s %ANT300n=$g(^BBANT($P(%ANT300d(2),$C(1))))
 s %ANT300d(3)=$p(%ANT300n,"^",1) s %ANT300d(4)=$p(%ANT300n,"^",2) s %ANT300d(5)=$p(%ANT300n,"^",3) s %ANT300d(6)=$p(%ANT300n,"^",4) s %ANT300d(7)=$p(%ANT300n,"^",5) s %ANT300d(8)=$p(%ANT300n,"^",6) s %ANT300d(9)=$p(%ANT300n,"^",7)
 
 s %val=$P(%ANT300d(2),$C(1)) d %0ABs1:%val'="" s $P(%ANT300d(2),$C(1),2)=%val
 s %val=$P(%ANT300d(8),$C(1)) d %0ABs2:%val'="" s $P(%ANT300d(8),$C(1),2)=%val
 s %val=$P(%ANT300d(9),$C(1)) d %0ABs3:%val'="" s $P(%ANT300d(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %ANT300f=%ANT300f+1 s %ANT300c=10 q
%ANT300f i '$g(%ANT300c) s SQLCODE=-102 q
 i %ANT300c=100 s SQLCODE=100 q
 s $zt="%0Eerr^"_$zn s $ze="" n %val g %0Efirst:%ANT300c=1
 g %0EBk1
%0EBdun 
%0EAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %ANT300c=100 q
%ANT300c i '$g(%ANT300c) s SQLCODE=-102 q
 k %ANT300c,%ANT300d,%ANT300e,%ANT300E,%ANT300f,%ANT300l,%ANT300L,%ANT300n,%ANT300r,%ANT300R s SQLCODE=0 q
%0Eerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%ANT300E),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Io d %ANT100f q:SQLCODE'=0
 s PLIST(1)=%ANT100d(4),PLIST(2)=%ANT100d(1),PLIST(3)=%ANT100d(5),PLIST(4)=%ANT100d(6),PLIST(5)=%ANT100d(7),PLIST(6)=%ANT100d(8),PLIST(7)=%ANT100d(9),PLIST(8)=%ANT100d(10)
 q
%0Jo d %ANT200f q:SQLCODE'=0
 s PLIST(1)=%ANT200d(4),PLIST(2)=%ANT200d(5),PLIST(3)=%ANT200d(6),PLIST(4)=%ANT200d(7),PLIST(5)=%ANT200d(8),PLIST(6)=%ANT200d(9),PLIST(7)=%ANT200d(10),PLIST(8)=%ANT200d(11)
 q
%0Ko d %ANT300f q:SQLCODE'=0
 s PLIST(1)=%ANT300d(2),PLIST(2)=%ANT300d(3),PLIST(3)=%ANT300d(4),PLIST(4)=%ANT300d(5),PLIST(5)=%ANT300d(6),PLIST(6)=%ANT300d(7),PLIST(7)=%ANT300d(8),PLIST(8)=%ANT300d(9)
 q
%0Oo n %insert,icol,ir
 f icol=0:1:8 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt2451("1")
 q
%0PAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Po n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Perr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0PAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^BBANT($P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0PBdun
 
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:8 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt2451(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0PBdun 
%0PAdun 
 q
%0Perr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0PAdun
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Qerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0PAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^BBANT(%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0QBdun
 d delete^mt2451(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0QBdun 
%0QAdun 
 q
%0Qerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0QAdun
%0Ro n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Rerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0PAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^BBANT($P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0RBdun
 s %mmmsqln=$g(^BBANT($P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5) s PLIST(7)=$p(%mmmsqln,"^",6) s PLIST(8)=$p(%mmmsqln,"^",7)
 
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(8),$C(1)) d %0ABs3:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Rc
%0RBdun 
%0RAdun 
%0Rc q
%0Rerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0RAdun
]]></Routine>
</Export>
