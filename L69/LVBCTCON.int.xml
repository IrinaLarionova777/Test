<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTCON" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTCON ; IG 29/4/98 ; MVB Control code access for CT_Container
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTCON(ROWID,skip)
 ; $$open^LVBCTCON(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTCON(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTCON(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTCON(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTCON()
 ; $$insert^LVBCTCON()
 ; $$update^LVBCTCON(ROWID)
 ; $$delete^LVBCTCON(ROWID,Comments)
 ; $$getall^LVBCTCON()
 ; FIX^LVBCTCON
 ;
  ;---&SQL(DECLARE CTCON CURSOR FOR SELECT * FROM CT_Container)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_Container VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y")
  ;---&SQL(UPDATE CT_Container VALUES :PLIST() WHERE CTCON_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_Container WHERE CTCON_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip)
  ;---&SQL(OPEN CTCON)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTCON0o
 q 0
 ; fetch the data
fetch(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip) k PLIST
  ;---&SQL(FETCH CTCON INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (skip,PLIST) s skip=$g(skip) k ^TMP($zn,$j)
 i $$open(skip)
 f cnt=1:1 q:$$fetch(skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor
close()  ;---&SQL(CLOSE CTCON)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTCON0c
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s ROWID=$g(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_Container WHERE CTCON_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("5","111")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ; post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("5")
 f J=6 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTLB(plist(J))
 .S X="" I 'SQLCODE S X=PLIST(2)_$c(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 f J=7 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTCM(plist(J))
 .S X="" I 'SQLCODE S X=PLIST(2)_$c(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 q
getall() n (PLIST) k ^TMP($zn,$j)
 i $$open()
 f cnt=1:1 q:$$fetch()  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTCON0o s $zt="%CTCON0E" s SQLCODE=$s($g(%CTCON0c):-101,1:0) q:SQLCODE'=0  s %CTCON0d(8)=0 s %CTCON0d(9)=0,%CTCON0d(10)=""
 s %CTCON0c=1 q
%CTCON0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTCON0c,%CTCON0d,%CTCON0E,%CTCON0l,%CTCON0n,%CTCON0R,%CTCON0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTCON0d(1)=""
%0ABk1 s %CTCON0d(1)=$o(^TTAB("CON",%CTCON0d(1)))
 i %CTCON0d(1)="" g %0ABdun
 s %CTCON0d(15)=$g(^TTAB("CON",%CTCON0d(1)))
 s %CTCON0d(2)=$p(%CTCON0d(15),"\",1) s %CTCON0d(3)=$p(%CTCON0d(15),"\",3) s %CTCON0d(5)=$p(%CTCON0d(15),"\",2) s %CTCON0d(6)=$p(%CTCON0d(15),"\",4)
 s %CTCON0d(4)="" f %irep=1:1:$g(^TTAB("CON",%CTCON0d(1),"REM",0)) s $li(%CTCON0d(4),%irep)=$g(^(%irep))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("CON",$p(%CTCON0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTCON0d(9)=1,%CTCON0d(10)=$name(^TTAB("CON",$p(%CTCON0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Container for RowID value: "_%CTCON0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 i %CTCON0d(1)'="",$d(^TTAB("CON",%CTCON0d(1)))
 e  g %0ACdun
 s %CTCON0d(20)=$g(^TTAB("CON",%CTCON0d(1)))
 s %CTCON0d(2)=$p(%CTCON0d(20),"\",1) s %CTCON0d(3)=$p(%CTCON0d(20),"\",3) s %CTCON0d(5)=$p(%CTCON0d(20),"\",2) s %CTCON0d(6)=$p(%CTCON0d(20),"\",4)
 s %CTCON0d(4)="" f %irep=1:1:$g(^TTAB("CON",%CTCON0d(1),"REM",0)) s $li(%CTCON0d(4),%irep)=$g(^(%irep))
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTCON0d(8)=%CTCON0d(8)+1,%ROWCOUNT=%CTCON0d(8),%ROWID=%CTCON0d(1),%CTCON0c=10 q
%CTCON0f i '$g(%CTCON0c) { s SQLCODE=-102 q  } i %CTCON0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTCON0d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTCON0d(8),%CTCON0c=100 q  } g %0Afirst:%CTCON0c=1
%0ACdun i $zu(115,2)=1,$g(%CTCON0d(9))=1 { l -@%CTCON0d(10) s %CTCON0d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTCON0d(8),SQLCODE=100,%CTCON0c=100 q
%CTCON0c i '$g(%CTCON0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTCON0d(8)),1:0)
 i $zu(115,2)=1,$g(%CTCON0d(9))=1 { l -@%CTCON0d(10) } k %CTCON0c,%CTCON0d,%CTCON0E,%CTCON0l,%CTCON0n,%CTCON0R,%CTCON0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTCON0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:7 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTContainer.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("CON",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTContainer.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("CON",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTContainer.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTContainer.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTContainer.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTContainer.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("CON",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTContainer.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("CON",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTContainer.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTContainer.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTContainer.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTContainer.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTCON0f q:SQLCODE'=0
 s PLIST(1)=%CTCON0d(1),PLIST(2)=%CTCON0d(1),PLIST(3)=%CTCON0d(2),PLIST(4)=%CTCON0d(3),PLIST(5)=%CTCON0d(4),PLIST(6)=%CTCON0d(5),PLIST(7)=%CTCON0d(6)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(8)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(8)
 i PLIST(2)'="",$d(^TTAB("CON",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(16)=$g(^TTAB("CON",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(16),"\",1) s PLIST(4)=$p(%mmmsqld(16),"\",3) s PLIST(6)=$p(%mmmsqld(16),"\",2) s PLIST(7)=$p(%mmmsqld(16),"\",4)
 s PLIST(5)="" f %irep=1:1:$g(^TTAB("CON",PLIST(2),"REM",0)) s $li(PLIST(5),%irep)=$g(^(%irep))
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("CON",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("CON",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Container for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("CON",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(21)=$g(^TTAB("CON",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(21),"\",1) s PLIST(4)=$p(%mmmsqld(21),"\",3) s PLIST(6)=$p(%mmmsqld(21),"\",2) s PLIST(7)=$p(%mmmsqld(21),"\",4)
 s PLIST(5)="" f %irep=1:1:$g(^TTAB("CON",PLIST(2),"REM",0)) s $li(PLIST(5),%irep)=$g(^(%irep))
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
