<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt4871" type="INT" languagemode="0"><![CDATA[
mt4871  ; Compiled May 8, 2007 15:09:08 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt4871(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0D^mt4871
 d file
 d trig0A^mt4871
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt4871(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(0))'="",$p($g(%data(2)),$c(1))'="",$p($g(%data(8)),$c(1))'="" d
 . s %data(1)=$g(%data(0))_"||"_$p($g(%data(2)),$c(1))_"||"_$p($g(%data(8)),$c(1))
 . d insertnw^mt4871(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt4871 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt4871
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:11 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt4871(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:11 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt4871(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt4871 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0C^mt4871
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TTQC($p(%ROWID,"||",1,1),"LOT",$p(%ROWID,"||",2,2),"TYPE",$p(%ROWID,"||",3,3),$p(%ROWID,"||",4,4),"TEST",$p(%ROWID,"||",5,5),"DATA",$p(%ROWID,"||",6,6),$p(%ROWID,"||",7,7),$p(%ROWID,"||",8,8)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TTQC($p(%ROWID,"||",1,1),"LOT",$p(%ROWID,"||",2,2),"TYPE",$p(%ROWID,"||",3,3),$p(%ROWID,"||",4,4),"TEST",$p(%ROWID,"||",5,5),"DATA",$p(%ROWID,"||",6,6),$p(%ROWID,"||",7,7),$p(%ROWID,"||",8,8))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0,subs(3349)=$p(%data(1),"||",1,1),subs(3358)=$p(%data(1),"||",2,2),subs(3374)=$p(%data(1),"||",3,3),subs(3375)=$p(%data(1),"||",4,4),subs(3386)=$p(%data(1),"||",5,5),subs(3390)=$p(%data(1),"||",6,6)
 i $g(tupkill) k ^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%edit(2),$c(1),1),$p(%edit(8),$c(1),1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1))) s $p(tempn,"\",1)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1))) s $p(tempn,"\",2)=$p($g(%data(5)),$c(1))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1))) s $p(tempn,"\",3)=$g(%data(6))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1))) s $p(tempn,"\",4)=$p($g(%data(3)),$c(1))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1))) s $p(tempn,"\",5)=$g(%data(7))
 i $d(%edit(10)) s x=$g(%data(10)),^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1),"REM",0)=x d  
 . s irep=%edit(10) s:irep<x irep=x f irep=1:1:irep s:irep'>x ^(irep)=$g(%data(10,irep)) k:irep>x ^(irep)
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1))) s $p(tempn,"\",6)=$p($g(%data(11)),$c(1))
 s:$d(tempn)#2 ^TTQC(subs(3349),"LOT",subs(3358),"TYPE",subs(3374),subs(3375),"TEST",subs(3386),"DATA",subs(3390),$p(%data(2),$c(1),1),$p(%data(8),$c(1),1))=tempn
maps q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d POFILDEL^at487 s %didit=1 i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d POFILINS^at487 s %didit=1 i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d POFILUPD^at487 s %didit=1 i $d(%skip) g trgdoneC
 d trigB0C i $d(%skip) g trgdoneC
trgdoneC q  ;  trigger done
trigB0C s %didit=1
 i $$update^SSAUDIT(487)
 q
trig0D n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d PREFDEL^at487 s %didit=1 i $d(%skip) g trgdoneD
trgdoneD q  ;  trigger done
%0EBr5 s $P(%dataold(9),$C(1))=$$CT009^at487($g(%dataold(0)),$P($g(%dataold(2)),$C(1))) q  ;  Code for update (get old values) of table: QC_MLTTestCodeLevelData
%0EBs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0EBs2 s %val=$$timeext^%qarzdt(%val,2) q
%0EBs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0EBs4 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %mmmsqld(16)=$p($g(%dataold(1)),"||",1,1),%mmmsqld(17)=$p($g(%dataold(1)),"||",2,2),%mmmsqld(18)=$p($g(%dataold(1)),"||",3,3),%mmmsqld(19)=$p($g(%dataold(1)),"||",4,4),%mmmsqld(20)=$p($g(%dataold(1)),"||",5,5),%mmmsqld(21)=$p($g(%dataold(1)),"||",6,6),$P(%dataold(2),$C(1))=$p($g(%dataold(1)),"||",7,7),$P(%dataold(8),$C(1))=$p($g(%dataold(1)),"||",8,8)
 i %mmmsqld(16)'="",%mmmsqld(17)'="",%mmmsqld(18)'="",%mmmsqld(19)'="",%mmmsqld(20)'="",%mmmsqld(21)'="",$P(%dataold(2),$C(1))'="",$P(%dataold(8),$C(1))'="",$d(^TTQC(%mmmsqld(16),"LOT",%mmmsqld(17),"TYPE",%mmmsqld(18),%mmmsqld(19),"TEST",%mmmsqld(20),"DATA",%mmmsqld(21),$P(%dataold(2),$C(1)),$P(%dataold(8),$C(1))))
 e  g %0EBdun
 s %mmmsqln=$g(^TTQC(%mmmsqld(16),"LOT",%mmmsqld(17),"TYPE",%mmmsqld(18),%mmmsqld(19),"TEST",%mmmsqld(20),"DATA",%mmmsqld(21),$P(%dataold(2),$C(1)),$P(%dataold(8),$C(1))))
 s %dataold(3)=$p(%mmmsqln,"\",4) s %dataold(4)=$p(%mmmsqln,"\",1) s %dataold(5)=$p(%mmmsqln,"\",2) s %dataold(6)=$p(%mmmsqln,"\",3) s %dataold(7)=$p(%mmmsqln,"\",5) s %dataold(11)=$p(%mmmsqln,"\",6)
 k %dataold(10) s %dataold(10)=$g(^TTQC(%mmmsqld(16),"LOT",%mmmsqld(17),"TYPE",%mmmsqld(18),%mmmsqld(19),"TEST",%mmmsqld(20),"DATA",%mmmsqld(21),$P(%dataold(2),$C(1)),$P(%dataold(8),$C(1)),"REM",0)) s:'%dataold(10) %dataold(10)="" f %irep=1:1:%dataold(10) s %dataold(10,%irep)=$g(^(%irep))
 s %dataold(0)=$p(%dataold(1),"||",1,6)
 
 s %val=$P(%dataold(2),$C(1)) d %0EBs1:%val'="" s $P(%dataold(2),$C(1),2)=%val
 s %val=$P(%dataold(3),$C(1)) d %0EBs2:%val'="" s $P(%dataold(3),$C(1),2)=%val
 s %val=$P(%dataold(5),$C(1)) d %0EBs3:%val'="" s $P(%dataold(5),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0EBs4:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s %val=$P(%dataold(11),$C(1)) d %0EBs3:%val'="" s $P(%dataold(11),$C(1),2)=%val
 d %0EBr5
 s %val=$P(%dataold(9),$C(1)) d %0EBs3:%val'="" s $P(%dataold(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
getold(%dataold) g %0Eo
code9 ; compute code of field QCMTD_Active
 s $p(%data(9),$c(1))=""
 s $p(%data(9),$c(1))=$$CT009^at487($g(%data(0)),$p($g(%data(2)),$c(1)))
 q
comp9 ; entry point to do computed field QCMTD_Active
 n %oldval q:(","_$g(trak)_",")[(",9,")
 s %oldval=$g(%data(9)) d code9 s %ok=1 i $g(%data(9))=%oldval q
 s %val=%data(9)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde5 s $p(%data(9),$c(1))=%val
 s %val=$p($g(%data(9)),$c(1)) d:%val'="" fdv5^mt4871 s:'%ok %data(9)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","QCMTD_Active","",%msg) q
 s %val=$p(%data(9),$c(1))
 d:%val'="" fdi5 s $p(%data(9),$c(1),2)=%val
 i $g(%data(9))="",%oldval="" q
 s:'$d(%edit(9)) %edit(9)=%oldval k:$g(%data(9))=$g(%edit(9)) %edit(9)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"QC_MLTTestCodeLevelData"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="QC_MLTTestCodeLevelData Row ID" d %mdiag(%oper,-106,"Fld Int","Req","QCMTD_RowID","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(0)) s %ok="QC_MLTTestCodeLevel Parent Reference" d %mdiag(%oper,-106,"Fld Int","Req","QCMTD_ParRef","",%ok) s %msg=%ok,%ok=0
 q
inf0 ; get value for field QCMTD_ParRef
 i $c(1)'[$g(%data(0)),$p(%data(0),$c(1))="" s %val=$p(%data(0),$c(1),2) g ine0
 i $c(1)'[$g(%data(0)) s %val=$p(%data(0),$c(1)) g ini0
 i $c(1)'[$g(%insert(0)),$p(%insert(0),$c(1))="" s %val=$p(%insert(0),$c(1),2) g ine0
 i $c(1)'[$g(%insert(0)) s %val=$p(%insert(0),$c(1)) g ini0
 s %val=$g(da482)
ine0 ; external to internal conversion code for field QCMTD_ParRef
ini0 ; internal validation code and uniqueness, also int-ext
 d fdv0^mt4871 q:'%ok
 s %data(0)=%val
 s:$c(1)[%data(0) %ok=0 s:%ok %edit(0)=""
 q
inf2 ; get value for field QCMTD_Date
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field QCMTD_Date
 d fde2^mt4871 q:'%ok
ini2 ; internal validation code and uniqueness, also int-ext
 d fdv2^mt4871 q:'%ok
 s %data(2)=%val
 d fdi2^mt4871 s $p(%data(2),$c(1),2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
inf8 ; get value for field QCMTD_QCRun
 i $c(1)'[$g(%data(8)),$p(%data(8),$c(1))="" s %val=$p(%data(8),$c(1),2) g ine8
 i $c(1)'[$g(%data(8)) s %val=$p(%data(8),$c(1)) g ini8
 i $c(1)'[$g(%insert(8)),$p(%insert(8),$c(1))="" s %val=$p(%insert(8),$c(1),2) g ine8
 i $c(1)'[$g(%insert(8)) s %val=$p(%insert(8),$c(1)) g ini8
 s %ok=0 q
ine8 ; external to internal conversion code for field QCMTD_QCRun
 d fde8^mt4871 q:'%ok
ini8 ; internal validation code and uniqueness, also int-ext
 d fdv8^mt4871 q:'%ok
 s %data(8)=%val
 d fdi8^mt4871 s $p(%data(8),$c(1),2)=%val
 s:$c(1)[%data(8) %ok=0 s:%ok %edit(8)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table QC_MLTTestCodeLevelData
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf0 i '%ok g:'iform rowiderr s rowerr=1
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 d inf8 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(0),$c(1))_"||"_$p(%data(2),$c(1))_"||"_$p(%data(8),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt4871 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1,6) g:%val="" rowiderr d ini0 g:'%ok rowiderr
 s %val=$p(%data(1),"||",7) g:%val="" rowiderr d ini2 g:'%ok rowiderr
 s %val=$p(%data(1),"||",8) g:%val="" rowiderr d ini8 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,0,2,8,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt4871
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,0,2,8,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp9^mt4871
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde2 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde3 ; external to internal conversion code
 s %ok=1 s %val=$$timeint^%qarzdt(%val,2) s:%val<0 %ok=0
 q
fde5 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde8 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(0)),$p(%data(0),$c(1))="",$p(%data(0),$c(1),2)'="" s %val=$p(%data(0),$c(1),2) s %data(0)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=2 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","QCMTD_Date","",$g(%msg))
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=3 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","QCMTD_Time","",$g(%msg))
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=5 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","QCMTD_ExludeFlag","",$g(%msg))
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","QCMTD_QCRun","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=9 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","QCMTD_Active","",$g(%msg))
 f %irep=1:1:$g(%data(10)) i $d(%data(10,%irep)),$p(%data(10,%irep),$c(1))="",$p(%data(10,%irep),$c(1),2)'="" s %val=$p(%data(10,%irep),$c(1),2) s %data(10,%irep)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=11 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","QCMTD_Editable","",$g(%msg))
 q
fdv0 ; DO validation and additional validation code
 n nval s nval=%val d %0Io
  i SQLCODE'=0 s %ok=0
 q
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(1)),"||",2,2),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",3,3),%mmmsqld(7)=$p($g(%mmmsqld(1)),"||",4,4),%mmmsqld(8)=$p($g(%mmmsqld(1)),"||",5,5),%mmmsqld(9)=$p($g(%mmmsqld(1)),"||",6,6)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5),"TYPE",%mmmsqld(6),%mmmsqld(7),"TEST",%mmmsqld(8),"DATA",%mmmsqld(9)))
 e  g %0IBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv2 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv3 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTTimIn")
 q
fdv5 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv6 ; DO validation and additional validation code
 n nval s nval=%val d %0Jo
  i SQLCODE'=0 s %ok=0
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^SSU("SSUSR",1,%mmmsqld(4)))
 e  g %0JBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
fdv7 ; DO validation and additional validation code
 n nval s nval=%val d %0Ko
  i SQLCODE'=0 s %ok=0
 q
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("QC-RULE",%mmmsqld(4)))
 e  g %0KBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Kc
%0KBdun 
%0KAdun 
%0Kc q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
fdv8 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Ho q SQLCODE=100
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2),%mmmsqld(7)=$p($g(%mmmsqld(1)),"||",3,3),%mmmsqld(8)=$p($g(%mmmsqld(1)),"||",4,4),%mmmsqld(9)=$p($g(%mmmsqld(1)),"||",5,5),%mmmsqld(10)=$p($g(%mmmsqld(1)),"||",6,6),%mmmsqld(11)=$p($g(%mmmsqld(1)),"||",7,7),%mmmsqld(12)=$p($g(%mmmsqld(1)),"||",8,8)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",%mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",$d(^TTQC(%mmmsqld(5),"LOT",%mmmsqld(6),"TYPE",%mmmsqld(7),%mmmsqld(8),"TEST",%mmmsqld(9),"DATA",%mmmsqld(10),%mmmsqld(11),%mmmsqld(12)))
 e  g %0HBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="QCMTD_RowID"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","QCMTD_RowID","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_RowID","",$g(%msg))
 i $d(%edit(0)),%data(0)'=%edit(0) s %icol=0 s %val=$p(%data(0),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv0 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_ParRef","",$g(%msg))
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_Date","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_Time","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_ExludeFlag","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_User_DR","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_Rule_DR","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_QCRun","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_Active","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","QCMTD_Editable","",$g(%msg))
 q
fdi2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4)
 q
fdi3 s %val=$$timeext^%qarzdt(%val,2)
 q
fdi5 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi8 s %val=$s(%val'=+%val:"",1:$fn(%val,""))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(0)),%data(0)[$c(1) s %data(0)=$s($p(%data(0),$c(1))'="":$p(%data(0),$c(1)),1:$p(%data(0),$c(1),2))
 i $d(%data(2)),$p(%data(2),$c(1))'="" s %val=$p(%data(2),$c(1)) d fdi2 s $p(%data(2),$c(1),2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))'="" s %val=$p(%data(3),$c(1)) d fdi3 s $p(%data(3),$c(1),2)=%val
 i $d(%data(4)),%data(4)[$c(1) s %data(4)=$s($p(%data(4),$c(1))'="":$p(%data(4),$c(1)),1:$p(%data(4),$c(1),2))
 i $d(%data(5)),$p(%data(5),$c(1))'="" s %val=$p(%data(5),$c(1)) d fdi5 s $p(%data(5),$c(1),2)=%val
 i $d(%data(6)),%data(6)[$c(1) s %data(6)=$s($p(%data(6),$c(1))'="":$p(%data(6),$c(1)),1:$p(%data(6),$c(1),2))
 i $d(%data(7)),%data(7)[$c(1) s %data(7)=$s($p(%data(7),$c(1))'="":$p(%data(7),$c(1)),1:$p(%data(7),$c(1),2))
 i $d(%data(8)),$p(%data(8),$c(1))'="" s %val=$p(%data(8),$c(1)) d fdi8 s $p(%data(8),$c(1),2)=%val
 i $d(%data(9)),$p(%data(9),$c(1))'="" s %val=$p(%data(9),$c(1)) d fdi5 s $p(%data(9),$c(1),2)=%val
 f %irep=1:1:$g(%data(10)) i $d(%data(10,%irep)),%data(10,%irep)[$c(1) s %data(10,%irep)=$s($p(%data(10,%irep),$c(1))'="":$p(%data(10,%irep),$c(1)),1:$p(%data(10,%irep),$c(1),2))
 i $d(%data(11)),$p(%data(11),$c(1))'="" s %val=$p(%data(11),$c(1)) d fdi5 s $p(%data(11),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt4871 q:'%ok
 d comp9^mt4871
 q
 g ^mt4872
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
