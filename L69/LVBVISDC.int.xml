<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISDC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISDC ; IG 6/5/98 ; LVB Control data access for VISDC EP_VisitDoctor
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISDC(par)
 ; $$save^LVBVISDC(par,app,group)
 ; $$update^LVBVISDC(ROWID,app,group)
 ; $$select^LVBVISDC(ROWID)
 ; $$seldata^LVBVISDC(ROWID,data)
 ; $$delete^LVBVISDC(ROWID,app,group)
 ; $$open^LVBVISDC(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVISDC(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVISDC(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBVISDC(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVISDC()
 ; $$getall^LVBVISDC(par,skip)
 ;
  ;---&sql(DECLARE VISDC CURSOR FOR SELECT * FROM EP_VisitDoctor
   ;---         WHERE VISDC_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN VISDC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISDC0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH VISDC INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) n (par,skip,PLIST) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE VISDC)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISDC0c
 q 0
 ;
select(RowID,skip) s RowID=$g(RowID),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitDoctor WHERE VISDC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .f j=1,2 s x(j)=$p(ROWID,"||",j)
 .i $l(x(1)),$l(x(2)),data=3 s result=$p($g(^TEPI(x(1),5,x(2))),"\",1) q
 .i $l(x(1)),$l(x(2)),data=17 s result=$p($g(^TEPI(x(1),5,x(2))),"\",15) q
 .i '$$select(ROWID) s result=$g(PLIST(data))
 q result
save(epis,app,group) s epis=$g(epis) k ^TMP($zn,$j)
 s EpisList=epis i $d(^TMP("SaveEPVIS",$j,epis)) s EpisList=EpisList_","_^TMP("SaveEPVIS",$j,epis)
 m ^TMP($zn,$j,"PLIST")=PLIST
 f count=1:1:$l(EpisList,",") d
 .s epis=$p(EpisList,",",count) k PLIST m PLIST=^TMP($zn,$j,"PLIST")
 .s j="" f  s j=$o(PLIST(j)) q:j=""  s x=$p(PLIST(j),$c(28),2) i $l(x) s ^TMP($zn,$j,"NEW",x)=PLIST(j) k PLIST(j)
 .s j="" f  s j=$o(PLIST(j)) q:j=""  s x=$o(^TMP($zn,$j,"NEW",""),-1)+1,x=$s(x<1000:1000,1:x),^TMP($zn,$j,"NEW",x)=PLIST(j) k PLIST(j)
 .i '$$getall(epis,"Y") f j=1:1:PLIST s x=$p($p(PLIST(j),$c(2),4),$c(28),2),^TMP($zn,$j,"OLD",x)=$p(PLIST(j),$c(2),4)
 .s x1="" f  s x1=$o(^TMP($zn,$j,"NEW",x1)) q:x1=""  s xx1=^(x1) d
 ..s ok=0 f j=1:1:$l(xx1,$c(28)) i $l($p(xx1,$c(28),j)) s ok=1 q
 ..i 'ok k ^TMP($zn,$j,"NEW",x1)
 .s x1="" f  s x1=$o(^TMP($zn,$j,"NEW",x1)) q:x1=""  s xx1=^(x1) d
 ..s (stop,x2)="" f  s x2=$o(^TMP($zn,$j,"OLD",x2)) q:x2=""  s xx2=^(x2) d  q:stop
 ...i $p(xx1,$c(28),3,17)=$p(xx2,$c(28),3,17) s stop=1 k ^TMP($zn,$j,"NEW",x1),^TMP($zn,$j,"OLD",x2)
 . ; delete
 .s x="" f  s x=$o(^TMP($zn,$j,"OLD",x)) q:x=""  s xx=^(x) i '$d(^TMP($zn,$j,"NEW",x)) d
 ..s rid=$p(xx,$c(28),1),$p(rid,"||")=epis
 ..i '$$delete(rid,app,group) k ^TMP($zn,$j,"OLD",x)
 . ; update
 .s x="" f  s x=$o(^TMP($zn,$j,"OLD",x)) q:x=""  s xx=^(x) i $d(^TMP($zn,$j,"NEW",x)) s xx=^(x) d
 ..k PLIST f j=1:1:$l(xx,$c(28)) s PLIST(j)=$p(xx,$c(28),j)
 ..s rid=$p(xx,$c(28),1),$p(rid,"||")=epis
 ..s PLIST=$o(PLIST(""),-1) i '$$update(rid) k ^TMP($zn,$j,"OLD",x),^TMP($zn,$j,"NEW",x)
 . ; insert
 .s x="" f  s x=$o(^TMP($zn,$j,"NEW",x)) q:x=""  s xx=^(x) d
 ..k PLIST f j=1:1:$l(xx,$c(28)) s PLIST(j)=$p(xx,$c(28),j)
 ..s PLIST=$o(PLIST(""),-1) i $$insert(epis)
 .k ^TMP($zn,$j)
 .
 .k %d m %d=^TEPI(epis,5)
 .d SetAll^LVBCOM50(epis,50_"S",.%d)
 q 0
insert(par) s PLIST(0)=$g(par) k PLIST(1) d pre("N") k PLIST(2)
  ;---&sql(INSERT INTO EP_VisitDoctor VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID,app,group) s RowID=$g(RowID),app=$g(app),group=$g(group) d pre("Y")
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(UPDATE EP_VisitDoctor VALUES :PLIST() WHERE VISDC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 k ^TMP("FUNCTION",$j)
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID,app,group) s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(DELETE FROM EP_VisitDoctor WHERE VISDC_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("FUNCTION",$j)
 q SQLCODE
pre(xUpdate) d PreSQL^SSUTIL4("","")
 n j,X s j="" f  s j=$o(PLIST(j)) q:j=""  d
 .s X=PLIST(j)
 .F  Q:$L(X)=0  Q:$E(X,$L(X))'=" "  S X=$E(X,1,$L(X)-1)
 .s PLIST(j)=X
 i $l($g(PLIST(3))) d
 .f j=4:1:9,13,15:1:17 s PLIST(j)=""
 .f j=10,11,12,14 s PLIST(j)=$g(PLIST(j))
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDR(plist(3),"Y") i 'SQLCODE d
 ..i '$l(plist(11)) s plist(11)=PLIST(8)
 ..i '$l(plist(12)) s plist(12)=$s(PLIST(24)="Y":"N",1:"Y")
 ..i '$l(plist(14)) s plist(14)=PLIST(14)
 .k PLIST m PLIST=plist k plist
 i $l($g(PLIST(17))) d
 .f j=3:1:9,13,15,16 s PLIST(j)=""
 .f j=10,11,12,14 s PLIST(j)=$g(PLIST(j))
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTHOS(plist(17),"Y") i 'SQLCODE d
 ..i '$l(plist(11)) s plist(11)=PLIST(13)
 ..i '$l(plist(12)) s plist(12)=$s(PLIST(21)="Y":"N",1:"Y")
 ..i '$l(plist(14)) s plist(14)=PLIST(11)
 .k PLIST m PLIST=plist k plist
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 i $g(skip)="Y" q
 i $l($g(PLIST(3))) d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDR(plist(3),"Y") i 'SQLCODE d
 ..s plist(3)=plist(3)
 ..s plist(4)=$$NameFormat^LVBCOM03("DR",PLIST(26),PLIST(4),PLIST(3),PLIST(49),PLIST(50),PLIST(51))
 ..s plist(5)=PLIST(9)
 ..s plist(6)=PLIST(10)
 ..s plist(7)=PLIST(11)
 ..s plist(8)=PLIST(12)
 ..s plist(9)=PLIST(13)
 ..i '$l(plist(10)) s plist(10)=PLIST(16)
 ..i '$l(plist(11)) s plist(11)=PLIST(8)
 ..i '$l(plist(12)) s plist(12)=$s(PLIST(24)="Y":"N",1:"Y")
 ..s plist(13)=$s($l(PLIST(5)):PLIST(5),$l(PLIST(6)):PLIST(6),1:PLIST(7))
 ..i '$l(plist(14)) s plist(14)=PLIST(14)
 ..s plist(15)=PLIST(15)
 ..s plist(16)=PLIST(30)
 ..s plist(17)=""
 .. ; floating active flag - needs to be last field number of EP_VisitDoctor+1
 ..s plist(18)=PLIST(25)
 ..s plist=$o(plist(""),-1)
 .k PLIST m PLIST=plist k plist
 i $l($g(PLIST(17))) d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTHOS(plist(17),"Y") i 'SQLCODE d
 ..s plist(3)=""
 ..s plist(4)=PLIST(3)
 ..s plist(5)=PLIST(4)
 ..s plist(6)=PLIST(5)
 ..s plist(7)=PLIST(6)
 ..s plist(8)=PLIST(7)
 ..s plist(9)=PLIST(8)
 ..i '$l(plist(10)) s plist(10)=PLIST(14)
 ..i '$l(plist(11)) s plist(11)=PLIST(13)
 ..i '$l(plist(12)) s plist(12)=$s(PLIST(21)="Y":"N",1:"Y")
 ..s plist(13)=PLIST(9)
 ..i '$l(plist(14)) s plist(14)=PLIST(11)
 ..s plist(15)=PLIST(28)
 ..s plist(16)=PLIST(23)
 ..s plist(17)=plist(17)
 .. ; floating active flag - needs to be last field number of EP_VisitDoctor+1
 ..s plist(18)=PLIST(25)
 ..s plist=$o(plist(""),-1)
 .k PLIST m PLIST=plist k plist
 i $l($g(PLIST(10))) d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTCR(plist(10),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$C(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(10)=X k plist
 i $l($g(PLIST(15))) d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTCLN(plist(15),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$C(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(15)=X k plist
 q
getall(par,skip) n (par,skip,PLIST) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j,"getall")
 i $$open(par,skip)
 f cnt=1:1 q:$$fetch(par,skip)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=$g(PLIST(j))
 .s ^TMP($zn,$j,"getall",cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j,"getall")
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,"getall")
 q 0
%VISDC0o s $zt="%VISDC0E" s SQLCODE=$s($g(%VISDC0c):-101,1:0) q:SQLCODE'=0  s %VISDC0d(22)=0 s %VISDC0d(23)=0,%VISDC0d(24)=""
 s %VISDC0d(19)=$g(par)
 s %VISDC0c=1 q
%VISDC0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISDC0c,%VISDC0d,%VISDC0E,%VISDC0l,%VISDC0n,%VISDC0R,%VISDC0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISDC0d(1)=%VISDC0d(19)
 i %VISDC0d(1)="" g %0ABdun
 s %VISDC0d(3)=""
%0ABk1 s %VISDC0d(3)=$o(^TEPI(%VISDC0d(1),5,%VISDC0d(3)))
 i %VISDC0d(3)="" g %0ABdun
 i 1]]%VISDC0d(3) g %0ABk1
 s %VISDC0d(30)=$g(^TEPI(%VISDC0d(1),5,%VISDC0d(3)))
 s %VISDC0d(4)=$p(%VISDC0d(30),"\",1) s %VISDC0d(5)=$p(%VISDC0d(30),"\",2) s %VISDC0d(6)=$p(%VISDC0d(30),"\",3) s %VISDC0d(7)=$p(%VISDC0d(30),"\",4) s %VISDC0d(8)=$p(%VISDC0d(30),"\",5) s %VISDC0d(9)=$p(%VISDC0d(30),"\",6) s %VISDC0d(10)=$p(%VISDC0d(30),"\",7) s %VISDC0d(11)=$p(%VISDC0d(30),"\",8) s %VISDC0d(12)=$p(%VISDC0d(30),"\",9) s %VISDC0d(13)=$p(%VISDC0d(30),"\",10) s %VISDC0d(14)=$p(%VISDC0d(30),"\",11) s %VISDC0d(15)=$p(%VISDC0d(30),"\",12) s %VISDC0d(16)=$p(%VISDC0d(30),"\",13) s %VISDC0d(17)=$p(%VISDC0d(30),"\",14) s %VISDC0d(18)=$p(%VISDC0d(30),"\",15)
 s %VISDC0d(2)=(%VISDC0d(1))_"||"_(%VISDC0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISDC0d(2),"||",1),5,$p(%VISDC0d(2),"||",2))#"S":$zu(115,4) i $t { s %VISDC0d(23)=1,%VISDC0d(24)=$name(^TEPI($p(%VISDC0d(2),"||",1),5,$p(%VISDC0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitDoctor for RowID value: "_%VISDC0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISDC0d(21)=$p(%VISDC0d(2),"||"),%VISDC0d(3)=$p(%VISDC0d(2),"||",2)
 i %VISDC0d(21)'="",%VISDC0d(3)'="",$d(^TEPI(%VISDC0d(21),5,%VISDC0d(3)))
 i '$t
 e  i 1]]%VISDC0d(3)
 i  g %0ACdun
 s %VISDC0d(36)=$g(^TEPI(%VISDC0d(21),5,%VISDC0d(3)))
 s %VISDC0d(4)=$p(%VISDC0d(36),"\",1) s %VISDC0d(5)=$p(%VISDC0d(36),"\",2) s %VISDC0d(6)=$p(%VISDC0d(36),"\",3) s %VISDC0d(7)=$p(%VISDC0d(36),"\",4) s %VISDC0d(8)=$p(%VISDC0d(36),"\",5) s %VISDC0d(9)=$p(%VISDC0d(36),"\",6) s %VISDC0d(10)=$p(%VISDC0d(36),"\",7) s %VISDC0d(11)=$p(%VISDC0d(36),"\",8) s %VISDC0d(12)=$p(%VISDC0d(36),"\",9) s %VISDC0d(13)=$p(%VISDC0d(36),"\",10) s %VISDC0d(14)=$p(%VISDC0d(36),"\",11) s %VISDC0d(15)=$p(%VISDC0d(36),"\",12) s %VISDC0d(16)=$p(%VISDC0d(36),"\",13) s %VISDC0d(17)=$p(%VISDC0d(36),"\",14) s %VISDC0d(18)=$p(%VISDC0d(36),"\",15)
 s %VISDC0d(1)=$p(%VISDC0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISDC0d(22)=%VISDC0d(22)+1,%ROWCOUNT=%VISDC0d(22),%ROWID=%VISDC0d(2),%VISDC0c=10 q
%VISDC0f i '$g(%VISDC0c) { s SQLCODE=-102 q  } i %VISDC0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISDC0d(22))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISDC0d(22),%VISDC0c=100 q  } g %0Afirst:%VISDC0c=1
%0ACdun i $zu(115,2)=1,$g(%VISDC0d(23))=1 { l -@%VISDC0d(24) s %VISDC0d(23)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISDC0d(22),SQLCODE=100,%VISDC0c=100 q
%VISDC0c i '$g(%VISDC0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISDC0d(22)),1:0)
 i $zu(115,2)=1,$g(%VISDC0d(23))=1 { l -@%VISDC0d(24) } k %VISDC0c,%VISDC0d,%VISDC0E,%VISDC0l,%VISDC0n,%VISDC0R,%VISDC0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISDC0c=100 q
%0Do d %VISDC0f q:SQLCODE'=0
 s PLIST(0)=%VISDC0d(1),PLIST(1)=%VISDC0d(2),PLIST(2)=%VISDC0d(3),PLIST(3)=%VISDC0d(4),PLIST(4)=%VISDC0d(5),PLIST(5)=%VISDC0d(6),PLIST(6)=%VISDC0d(7),PLIST(7)=%VISDC0d(8),PLIST(8)=%VISDC0d(9),PLIST(9)=%VISDC0d(10),PLIST(10)=%VISDC0d(11),PLIST(11)=%VISDC0d(12),PLIST(12)=%VISDC0d(13),PLIST(13)=%VISDC0d(14),PLIST(14)=%VISDC0d(15),PLIST(15)=%VISDC0d(16),PLIST(16)=%VISDC0d(17),PLIST(17)=%VISDC0d(18)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(23)=0,%mmmsqld(24)=""
 s %mmmsqld(20)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(20)
 s %mmmsqld(22)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(22)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(22),5,PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0FBdun
 s %mmmsqld(30)=$g(^TEPI(%mmmsqld(22),5,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(30),"\",1) s PLIST(4)=$p(%mmmsqld(30),"\",2) s PLIST(5)=$p(%mmmsqld(30),"\",3) s PLIST(6)=$p(%mmmsqld(30),"\",4) s PLIST(7)=$p(%mmmsqld(30),"\",5) s PLIST(8)=$p(%mmmsqld(30),"\",6) s PLIST(9)=$p(%mmmsqld(30),"\",7) s PLIST(10)=$p(%mmmsqld(30),"\",8) s PLIST(11)=$p(%mmmsqld(30),"\",9) s PLIST(12)=$p(%mmmsqld(30),"\",10) s PLIST(13)=$p(%mmmsqld(30),"\",11) s PLIST(14)=$p(%mmmsqld(30),"\",12) s PLIST(15)=$p(%mmmsqld(30),"\",13) s PLIST(16)=$p(%mmmsqld(30),"\",14) s PLIST(17)=$p(%mmmsqld(30),"\",15)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),5,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(23)=1,%mmmsqld(24)=$name(^TEPI($p(PLIST(1),"||",1),5,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitDoctor for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(22)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(22)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(22),5,PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0FCdun
 s %mmmsqld(36)=$g(^TEPI(%mmmsqld(22),5,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(36),"\",1) s PLIST(4)=$p(%mmmsqld(36),"\",2) s PLIST(5)=$p(%mmmsqld(36),"\",3) s PLIST(6)=$p(%mmmsqld(36),"\",4) s PLIST(7)=$p(%mmmsqld(36),"\",5) s PLIST(8)=$p(%mmmsqld(36),"\",6) s PLIST(9)=$p(%mmmsqld(36),"\",7) s PLIST(10)=$p(%mmmsqld(36),"\",8) s PLIST(11)=$p(%mmmsqld(36),"\",9) s PLIST(12)=$p(%mmmsqld(36),"\",10) s PLIST(13)=$p(%mmmsqld(36),"\",11) s PLIST(14)=$p(%mmmsqld(36),"\",12) s PLIST(15)=$p(%mmmsqld(36),"\",13) s PLIST(16)=$p(%mmmsqld(36),"\",14) s PLIST(17)=$p(%mmmsqld(36),"\",15)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(23))=1 { l -@%mmmsqld(24) s %mmmsqld(23)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(23))=1 { l -@%mmmsqld(24) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:17 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitDoctor.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),5,%mmmsqld(5)))
 i '$t
 e  i 1]]%mmmsqld(5)
 i  g %0JBdun
 s %mmmsqld(13)=$$%getlock^User.EPVisitDoctor.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),5,%mmmsqld(5)))
 i '$t
 e  i 1]]%mmmsqld(5)
 i  g %0JCdun
 k %data
 f icol=0:1:17 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitDoctor.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitDoctor.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitDoctor.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.EPVisitDoctor.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),5,%mmmsqld(4)))
 i '$t
 e  i 1]]%mmmsqld(4)
 i  g %0LBdun
 s %mmmsqld(12)=$$%getlock^User.EPVisitDoctor.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),5,%mmmsqld(4)))
 i '$t
 e  i 1]]%mmmsqld(4)
 i  g %0LCdun
 d %delete^User.EPVisitDoctor.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitDoctor.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitDoctor.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.EPVisitDoctor.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
