<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISMT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISMT ; IG 6/5/98 ; LVB Control data access for VISMT EP_VisitMovementsTests
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISMT(par)
 ; $$update^LVBVISMT(ROWID)
 ; $$delete^LVBVISMT(ROWID)
 ; $$delvts^LVBVISMT(vts)
 ; $$open^LVBVISMT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVISMT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVISMT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBVISMT(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVISMT()
 ; $$getall^LVBVISMT(par)
 ;
  ;---&sql(DECLARE VISMT CURSOR FOR SELECT * FROM EP_VisitMovementsTests
   ;---         WHERE VISMT_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN VISMT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISMT0o
 q 0
 ;
fetch(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH VISMT INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j) s par=$g(par)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) K ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE VISMT)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISMT0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql(SELECT * INTO :PLIST() FROM EP_VisitMovementsTests WHERE VISMT_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&sql(INSERT INTO EP_VisitMovementsTests VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE d  q $$select(%ROWID)
 . ; delete vts from another movement
 .s rowid=%ROWID,epis=$p(par,"||",1) n %ROWID
 .s x="" f  s x=$o(^TEPI(epis,9,x)) q:x=""  i x'=$p(par,"||",2),$d(^TEPI(epis,9,x,"VTS",$p(rowid,"||",3,5))),$$delete(epis_"||"_x_"||"_$p(rowid,"||",3,5))
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE EP_VisitMovementsTests VALUES :PLIST() WHERE VISMT_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 i 'SQLCODE s rowid=%ROWID d  s %ROWID=rowid q $$select(%ROWID)
 .k VISMT m VISMT=PLIST
 . ; update movement status
 .k VISMV i '$$select^LVBVISMV($p(rowid,"||",1,2)) m VISMV=PLIST i $$update^LVBVISMV($p(rowid,"||",1,2))
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM EP_VisitMovementsTests WHERE (VISMT_RowID = :RowID))
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 i '$d(^TEPI($p(RowID,"||",1),9,$p(RowID,"||",2),"VTS")) i $$delete^LVBVISMV($p(RowID,"||",1,2))
 i $l($p($g(^CF("SM",1)),"^",28)),$l($t(@("delete^"_$zn_$p(^CF("SM",1),"^",28)))) k %quit d @("delete^"_$zn_$p(^CF("SM",1),"^",28)) q:$d(%quit) %quit
 q 0
delvts(vts) s vts=$g(vts),epis=$p(vts,"||")
 s x="" f  s x=$o(^TEPI(epis,9,x)) q:x=""  i $d(^TEPI(epis,9,x,"VTS",vts)) d
 .s RowID=epis_"||"_x_"||"_vts
 .  ;---&sql(DELETE FROM EP_VisitMovementsTests WHERE VISMT_RowID = :RowID)
  .  ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 . Do %0No
 .i '$d(^TEPI($p(RowID,"||",1),9,$p(RowID,"||",2),"VTS")) i $$delete^LVBVISMV($p(RowID,"||",1,2))
 .i $d(^TEPI($p(RowID,"||",1),9,$p(RowID,"||",2),"VTS")) i '$$select^LVBVISMV($p(RowID,"||",1,2)),$$update^LVBVISMV($p(RowID,"||",1,2))
 q 0
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 Q
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 i $$close()
 k ^TMP($zn,$j)
 q 0
 ;
 q
%VISMT0o s $zt="%VISMT0E" s SQLCODE=$s($g(%VISMT0c):-101,1:0) q:SQLCODE'=0  s %VISMT0d(9)=0 s %VISMT0d(10)=0,%VISMT0d(11)=""
 s %VISMT0d(5)=$g(par)
 s %VISMT0c=1 q
%VISMT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISMT0c,%VISMT0d,%VISMT0E,%VISMT0l,%VISMT0n,%VISMT0R,%VISMT0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISMT0d(1)=%VISMT0d(5)
 s %VISMT0d(7)=$p(%VISMT0d(1),"||"),%VISMT0d(8)=$p(%VISMT0d(1),"||",2)
 i %VISMT0d(7)="" g %0ABdun
 i %VISMT0d(8)="" g %0ABdun
 s %VISMT0d(3)=""
%0ABk1 s %VISMT0d(3)=$o(^TEPI(%VISMT0d(7),9,%VISMT0d(8),"VTS",%VISMT0d(3)))
 i %VISMT0d(3)="" g %0ABdun
 s %VISMT0d(20)=$g(^TEPI(%VISMT0d(7),9,%VISMT0d(8),"VTS",%VISMT0d(3)))
 s %VISMT0d(4)=$p(%VISMT0d(20),"\",1)
 s %VISMT0d(2)=(%VISMT0d(7))_"||"_(%VISMT0d(8))_"||"_(%VISMT0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISMT0d(2),"||",1),9,$p(%VISMT0d(2),"||",2),"VTS",$p(%VISMT0d(2),"||",3,5))#"S":$zu(115,4) i $t { s %VISMT0d(10)=1,%VISMT0d(11)=$name(^TEPI($p(%VISMT0d(2),"||",1),9,$p(%VISMT0d(2),"||",2),"VTS",$p(%VISMT0d(2),"||",3,5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitMovementsTests for RowID value: "_%VISMT0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISMT0d(7)=$p(%VISMT0d(2),"||"),%VISMT0d(8)=$p(%VISMT0d(2),"||",2),%VISMT0d(3)=$p(%VISMT0d(2),"||",3,5)
 i %VISMT0d(7)'="",%VISMT0d(8)'="",%VISMT0d(3)'="",$d(^TEPI(%VISMT0d(7),9,%VISMT0d(8),"VTS",%VISMT0d(3)))
 e  g %0ACdun
 s %VISMT0d(29)=$g(^TEPI(%VISMT0d(7),9,%VISMT0d(8),"VTS",%VISMT0d(3)))
 s %VISMT0d(4)=$p(%VISMT0d(29),"\",1)
 s %VISMT0d(1)=$p(%VISMT0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISMT0d(9)=%VISMT0d(9)+1,%ROWCOUNT=%VISMT0d(9),%ROWID=%VISMT0d(2),%VISMT0c=10 q
%VISMT0f i '$g(%VISMT0c) { s SQLCODE=-102 q  } i %VISMT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISMT0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISMT0d(9),%VISMT0c=100 q  } g %0Afirst:%VISMT0c=1
%0ACdun i $zu(115,2)=1,$g(%VISMT0d(10))=1 { l -@%VISMT0d(11) s %VISMT0d(10)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISMT0d(9),SQLCODE=100,%VISMT0c=100 q
%VISMT0c i '$g(%VISMT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISMT0d(9)),1:0)
 i $zu(115,2)=1,$g(%VISMT0d(10))=1 { l -@%VISMT0d(11) } k %VISMT0c,%VISMT0d,%VISMT0E,%VISMT0l,%VISMT0n,%VISMT0R,%VISMT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISMT0c=100 q
%0Do d %VISMT0f q:SQLCODE'=0
 s PLIST(0)=%VISMT0d(1),PLIST(1)=%VISMT0d(2),PLIST(2)=%VISMT0d(3),PLIST(3)=%VISMT0d(4)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3,5)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(8),9,%mmmsqld(9),"VTS",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(20)=$g(^TEPI(%mmmsqld(8),9,%mmmsqld(9),"VTS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),9,$p(PLIST(1),"||",2),"VTS",$p(PLIST(1),"||",3,5))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TEPI($p(PLIST(1),"||",1),9,$p(PLIST(1),"||",2),"VTS",$p(PLIST(1),"||",3,5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitMovementsTests for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3,5)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(8),9,%mmmsqld(9),"VTS",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(29)=$g(^TEPI(%mmmsqld(8),9,%mmmsqld(9),"VTS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"\",1)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitMovementsTests.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3,5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(4),9,%mmmsqld(5),"VTS",%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.EPVisitMovementsTests.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3,5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(4),9,%mmmsqld(5),"VTS",%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitMovementsTests.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3,5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(3),9,%mmmsqld(4),"VTS",%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3,5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(3),9,%mmmsqld(4),"VTS",%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.EPVisitMovementsTests.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3,5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(3),9,%mmmsqld(4),"VTS",%mmmsqld(5)))
 e  g %0NBdun
 s %mmmsqld(16)=$$%getlock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3,5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(3),9,%mmmsqld(4),"VTS",%mmmsqld(5)))
 e  g %0NCdun
 d %delete^User.EPVisitMovementsTests.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) g %0Nc
%0NCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) g:SQLCODE<0 %0Nc
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.EPVisitMovementsTests.T1(%mmmsqld(1)) g %0Nc
]]></Routine>
</Export>
