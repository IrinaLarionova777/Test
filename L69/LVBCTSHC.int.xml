<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTSHC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTSHC ; IG 29/4/98 ; LVB Control data access for CTSHC CT_Schedule_Rule_Coning
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTSHC(par)
 ; $$update^LVBCTSHC(ROWID)
 ; $$select^LVBCTSHC(ROWID,skip)
 ; $$delete^LVBCTSHC(ROWID,Comments)
 ; $$open^LVBCTSHC(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTSHC(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTSHC(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTSHC(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTSHC()
 ; $$date^LVBCTSHC(par)
 ; $$copy^LVBCTSHC(par,DateFrom,DateTo)
 ;
  ;---&sql(DECLARE CTSHC CURSOR FOR SELECT * FROM CT_Schedule_Rule_Coning
   ;---         WHERE CTSHC_ParRef = :par
   ;---         AND ((CTSHC_Date = :date) OR (:date IS NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, date, par
 ;
copy(par,DateFrom,DateTo) s par=$g(par),DateFrom=$g(DateFrom),DateTo=$g(DateTo)
 m ^TSCH(par,"RULE-3",DateTo)=^TSCH(par,"RULE-3",DateFrom)
 q 0
date(par) s par=$g(par),date="" k PLIST
 f cnt=1:1 s date=$o(^TSCH(par,"RULE-3",date),-1) q:date=""  s PLIST(cnt)=date
 s PLIST=$o(PLIST(""),-1)
 q 0
open(par,date,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),date=$g(date),skip=$g(skip)
  ;---&SQL(OPEN CTSHC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSHC0o
 q 0
 ;
fetch(par,date,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),date=$g(date),skip=$g(skip) k PLIST
  ;---&SQL(FETCH CTSHC INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,date,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),date=$g(date),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,date,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,date,skip,p3,p4,p5,p6,p7,p8,p9) N (par,date,skip,PLIST) s par=$g(par),date=$g(date),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,date,skip)
 f cnt=1:1 Q:$$fetch(par,date,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() n SQLCODE
  ;---&SQL(CLOSE CTSHC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSHC0c
 q 0
 ;
select(ROWID,skip) s ROWId=$g(ROWId),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM CT_Schedule_Rule_Coning WHERE CTSHC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) K PLIST(1) d pre("N")
  ;---&sql(INSERT INTO CT_Schedule_Rule_Coning VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&sql(UPDATE CT_Schedule_Rule_Coning VALUES :PLIST() WHERE CTSHC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_Schedule_Rule_Coning WHERE CTSHC_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
pre(xUpdate) d PreSQL^SSUTIL4("","")
 f j=2,5 S PLIST(j)=$$ALPHAUP^SSUTIL4(PLIST(j))
 Q
 ; Adjust certain fields
adjust d PostSQL^SSUTIL4("")
 q         
%CTSHC0o s $zt="%CTSHC0E" s SQLCODE=$s($g(%CTSHC0c):-101,1:0) q:SQLCODE'=0  s %CTSHC0d(13)=0 s %CTSHC0d(14)=0,%CTSHC0d(15)=""
 s %CTSHC0d(8)=$g(par),%CTSHC0d(9)=$g(date),%CTSHC0d(10)=$g(date)
 s %CTSHC0c=1 q
%CTSHC0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTSHC0c,%CTSHC0d,%CTSHC0E,%CTSHC0l,%CTSHC0n,%CTSHC0R,%CTSHC0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTSHC0d(1)=%CTSHC0d(8)
 i %CTSHC0d(1)="" g %0ABdun
 s %CTSHC0d(7)=""
%0ABk1 s %CTSHC0d(7)=$o(^TSCH(%CTSHC0d(1),"RULE-3",%CTSHC0d(7)))
 i %CTSHC0d(7)="" g %0ABdun
 i '((%CTSHC0d(7)=%CTSHC0d(9))||(%CTSHC0d(10)="")) g %0ABk1
 s %CTSHC0d(3)=""
%0ABk2 s %CTSHC0d(3)=$o(^TSCH(%CTSHC0d(1),"RULE-3",%CTSHC0d(7),%CTSHC0d(3)))
 i %CTSHC0d(3)="" g %0ABk1
 s %CTSHC0d(4)=""
%0ABk3 s %CTSHC0d(4)=$o(^TSCH(%CTSHC0d(1),"RULE-3",%CTSHC0d(7),%CTSHC0d(3),%CTSHC0d(4)))
 i %CTSHC0d(4)="" g %0ABk2
 s %CTSHC0d(23)=$g(^TSCH(%CTSHC0d(1),"RULE-3",%CTSHC0d(7),%CTSHC0d(3),%CTSHC0d(4)))
 s %CTSHC0d(5)=$p(%CTSHC0d(23),"\",1) s %CTSHC0d(6)=$p(%CTSHC0d(23),"\",2)
 s %CTSHC0d(2)=(%CTSHC0d(1))_"||"_(%CTSHC0d(7))_"||"_(%CTSHC0d(3))_"||"_(%CTSHC0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TSCH($p(%CTSHC0d(2),"||",1),"RULE-3",$p(%CTSHC0d(2),"||",2),$p(%CTSHC0d(2),"||",3),$p(%CTSHC0d(2),"||",4))#"S":$zu(115,4) i $t { s %CTSHC0d(14)=1,%CTSHC0d(15)=$name(^TSCH($p(%CTSHC0d(2),"||",1),"RULE-3",$p(%CTSHC0d(2),"||",2),$p(%CTSHC0d(2),"||",3),$p(%CTSHC0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule_Rule_Coning for RowID value: "_%CTSHC0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTSHC0d(12)=$p(%CTSHC0d(2),"||"),%CTSHC0d(7)=$p(%CTSHC0d(2),"||",2),%CTSHC0d(3)=$p(%CTSHC0d(2),"||",3),%CTSHC0d(4)=$p(%CTSHC0d(2),"||",4)
 i %CTSHC0d(12)'="",%CTSHC0d(7)'="",%CTSHC0d(3)'="",%CTSHC0d(4)'="",$d(^TSCH(%CTSHC0d(12),"RULE-3",%CTSHC0d(7),%CTSHC0d(3),%CTSHC0d(4)))
 e  g %0ACdun
 s %CTSHC0d(31)=$g(^TSCH(%CTSHC0d(12),"RULE-3",%CTSHC0d(7),%CTSHC0d(3),%CTSHC0d(4)))
 s %CTSHC0d(5)=$p(%CTSHC0d(31),"\",1) s %CTSHC0d(6)=$p(%CTSHC0d(31),"\",2)
 s %CTSHC0d(1)=$p(%CTSHC0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTSHC0d(13)=%CTSHC0d(13)+1,%ROWCOUNT=%CTSHC0d(13),%ROWID=%CTSHC0d(2),%CTSHC0c=10 q
%CTSHC0f i '$g(%CTSHC0c) { s SQLCODE=-102 q  } i %CTSHC0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTSHC0d(13))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTSHC0d(13),%CTSHC0c=100 q  } g %0Afirst:%CTSHC0c=1
%0ACdun i $zu(115,2)=1,$g(%CTSHC0d(14))=1 { l -@%CTSHC0d(15) s %CTSHC0d(14)=0 }
 g %0ABk3
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTSHC0d(13),SQLCODE=100,%CTSHC0c=100 q
%CTSHC0c i '$g(%CTSHC0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTSHC0d(13)),1:0)
 i $zu(115,2)=1,$g(%CTSHC0d(14))=1 { l -@%CTSHC0d(15) } k %CTSHC0c,%CTSHC0d,%CTSHC0E,%CTSHC0l,%CTSHC0n,%CTSHC0R,%CTSHC0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTSHC0c=100 q
%0Do d %CTSHC0f q:SQLCODE'=0
 s PLIST(0)=%CTSHC0d(1),PLIST(1)=%CTSHC0d(2),PLIST(2)=%CTSHC0d(3),PLIST(3)=%CTSHC0d(4),PLIST(4)=%CTSHC0d(5),PLIST(5)=%CTSHC0d(6),PLIST(6)=%CTSHC0d(7)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(6)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3),PLIST(3)=$p(PLIST(1),"||",4)
 i %mmmsqld(11)'="",PLIST(6)'="",PLIST(2)'="",PLIST(3)'="",$d(^TSCH(%mmmsqld(11),"RULE-3",PLIST(6),PLIST(2),PLIST(3)))
 e  g %0FBdun
 s %mmmsqld(21)=$g(^TSCH(%mmmsqld(11),"RULE-3",PLIST(6),PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(21),"\",1) s PLIST(5)=$p(%mmmsqld(21),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TSCH($p(PLIST(1),"||",1),"RULE-3",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TSCH($p(PLIST(1),"||",1),"RULE-3",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule_Rule_Coning for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(6)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3),PLIST(3)=$p(PLIST(1),"||",4)
 i %mmmsqld(11)'="",PLIST(6)'="",PLIST(2)'="",PLIST(3)'="",$d(^TSCH(%mmmsqld(11),"RULE-3",PLIST(6),PLIST(2),PLIST(3)))
 e  g %0FCdun
 s %mmmsqld(29)=$g(^TSCH(%mmmsqld(11),"RULE-3",PLIST(6),PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(29),"\",1) s PLIST(5)=$p(%mmmsqld(29),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTScheduleRuleConing.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TSCH(%mmmsqld(4),"RULE-3",%mmmsqld(5),%mmmsqld(6),%mmmsqld(7)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.CTScheduleRuleConing.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TSCH(%mmmsqld(4),"RULE-3",%mmmsqld(5),%mmmsqld(6),%mmmsqld(7)))
 e  g %0JCdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTScheduleRuleConing.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.CTScheduleRuleConing.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.CTScheduleRuleConing.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.CTScheduleRuleConing.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TSCH(%mmmsqld(3),"RULE-3",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.CTScheduleRuleConing.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TSCH(%mmmsqld(3),"RULE-3",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0LCdun
 d %delete^User.CTScheduleRuleConing.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.CTScheduleRuleConing.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.CTScheduleRuleConing.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.CTScheduleRuleConing.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
