<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="SSPRINQ1" type="INT" languagemode="0" generated="1"><![CDATA[
SSPRINQ1 ; PRINT MANAGER - print for single print destination
 ;
 ; supported calls:
 ;
 ; $$nextWord^SSPRINQ1()
 ; process all reports ready to print for this destination
START(dest) n (dest)
start s dest=$g(dest) i $l(dest) d
 .l +^PR("SSPRINQ1",dest):0 e  q
 .k ^TMP($zn,$j) m ^TMP($zn,$j)=^PRi("STATUS-DEST","R",dest)
 .s rep="" f  s rep=$o(^TMP($zn,$j,rep)) q:rep=""  d PROCESS(rep,dest)
 .k ^TMP($zn,$j)
 .l -^PR("SSPRINQ1",dest)
 q
 ; process single report for particular destination
PROCESS(rROWID,dest) n (rROWID,dest) s rROWID=$g(rROWID),dest=$g(dest),$zt="PROCERR^"_$zn
 i $d(^PRi("STATUS-DEST","I",dest)) q
 i $l(rROWID),$l(dest) d
 .s chl=$o(^PRi("STATUS-DEST","R",dest,rROWID,"")) q:chl="" 
 .l +^PR(rROWID):0 e  q
 .i $p($g(^PR(rROWID)),"^",8)'="W" d
 ..s dROWID=rROWID_"||"_chl
 ..i '$$select^LVBPRPRD(dROWID) d
 ... ; print to a printer
 ...s DEST=$$find^LVBCTPDA(dest)
 ... ; do not print to printer which is not active
 ...k plist m plist=PLIST
 ...i $$select^LVBCTPD(DEST,"Y") q
 ...i PLIST(13)="N" q
 ...k PLIST m PLIST=plist
 ...s dTYPE=$p(PLIST(3),$c(1),3) d update(dROWID,3)
 ...i dTYPE'="F" s value=$$print^SSPRINT(rROWID,DEST)
 ... ; send to a fax
 ...i dTYPE="F",$l(PLIST(8)),$l(PLIST(9)) d
 ....s REPORT=$p(PLIST(1),"||",1),fax=PLIST(8)_$c(1)_PLIST(9)
 ....i $$get^LVBPRINT(REPORT,"FAX",fax,dROWID)
 ...i $d(dROWID),$d(value) d update(dROWID,value)
 ...l -^PR(rROWID)
 q
 ; 1 -Type : C/U/F
 ; 2 -Courier run/User
 ; 3 -Receiver type : H - Hospital
 ;                    D - Doctor
 ; 4 -Receiver
 ; 5 -vtsRID
 ; 6 -Printer
 ; 7 -Bin
 ; 8 -No of Copies
 ; 9 -Destination
 ; 10-dROWID
 ; 11-NameSpace
 ; 12-CR Template
 ; 13-DefTemplate
 ; 14-path to CFSM_PathtoDocumentServer
 ; 15-path to CFSM_PathToTemplateServer
 ; 16-path to CFSM_PathToReportsFax
 ; 17-destroy word object
select(dROWID) n (dROWID,PLIST) s dROWID=$g(dROWID),rROWID=$p(dROWID,"||")
 i dROWID'["||" s x=$o(^PR(dROWID,1,"DEST","")) s dROWID=dROWID_"||"_x
 i '$$select^LVBPRPRD(dROWID) d
 .f j=1:1:7 s @("x"_j)=$p($g(^PR(rROWID,"WORD")),"\",j)
 .f j=1:1:17 s @("p"_j)=""
 .s p1=x1,p2=x2,p3=x3,p4=$tr(x4,"^",$c(16)),p5=x5_"||"_x6_"||"_x7
 .i x1="C" s p7=$p($p($g(^TTAB("CR",x2)),"\",2),"-",3)
 .s p9=$p(PLIST(3),$c(1)) i x1="F" s p9=$p(x2,"-",3,4)
 .i $l(p9) s p9=$$find^LVBCTPDA(p9)
 .i $l(p9) s p6=$p($g(^TTAB("CTDS",p9,1)),"|PRN|",2)
 .i '$l(p6) s p6=$g(^TTAB("CTDS",p9,1)) i $l(p6) s p6=$p($p(^%IS(p6,1),"|PRN|",2),"^")
 .i '$l(p6) s p6=$g(^TTAB("CTDS",p9,1))
 .s p8=PLIST(4) ;d copies(x3,x4,x1,.copies) i copies>p8 s p8=copies
 .s p10=dROWID,p11=$zu(5),p2=$p(p2,"-")
 .s p12=$s(p1="C":$$seldata^LVBCTCR(p2,8),p1="F":$$seldata^LVBCTCR(p2,10),1:"")
 .s p13=$s(p1="F":$$seldata^MVBCFLAB(1,13),1:$$seldata^MVBCFLAB(1,15))
 .s p14=$$seldata^MVBCFSM(1,5)
 .s p15=$$seldata^MVBCFSM(1,15)
 .s p16=$$seldata^MVBCFSM(1,31)
 .s p17=$$seldata^MVBCFLAB(1,102)
 .k PLIST f j=1:1:17 s PLIST(j)=@("p"_j)
 s PLIST=$o(PLIST(""),-1)
 q 0
 ; error process
PROCERR d BACK^%ETN
 i $l($g(rROWID)),$d(^PR(rROWID)) d
 .  ;---&SQL(UPDATE PR_Report (PRPR_Status) VALUES ('R') WHERE PRPR_RowID=:rROWID)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, rROWID
 . Do %0Ao
 .l -^PR(rROWID)
 h 1
 g start
copies(xDH1,xDH2,xDH3,copies) n (xDH1,xDH2,xDH3,copies)
 i $p(xDH2,"-",1)="xxx" s copies=$p($p(xDH2,"-",3,99),"^",7)
 i $p(xDH2,"-",1)'="xxx" d
 .i xDH1="D",'$$select^LVBCTDR(xDH2) s copies=$s(xDH3="F":PLIST(39),1:PLIST(14))
 .i xDH1="H",'$$select^LVBCTHOS(xDH2) s copies=$s(xDH3="F":PLIST(20),1:PLIST(11))
 q
update(dROWID,value) d pre("Y") n (dROWID,value) s dROWID=$g(dROWID),value=$g(value),rROWID=$p(dROWID,"||")
 i $l(value),$l(dROWID) d
 .s status=$s(value=3:"I",value=4:"R",value=5:"R",value=0:"P",1:"ED")
 .  ;---&SQL(UPDATE PR_ReportDestination (PRPRD_Status) VALUES (:status) WHERE PRPRD_RowID=:dROWID)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, dROWID, status
 . Do %0Co
 .i status="P" d
 .. ; update report record
 ..i '$$select^LVBPRPR(rROWID),'$l(PLIST(4)),'$l(PLIST(5)) s PLIST(4)=+$h,PLIST(5)=$p($h,",",2) i $$update^LVBPRPR(rROWID)
 .. ; update report/destination record
 ..i '$$select^LVBPRPRD(dROWID) s PLIST(6)=+$h,PLIST(7)=$p($h,",",2) i $$update^LVBPRPRD(dROWID)
 .i status="I" d
 ..i '$$select^LVBPRPRD(dROWID) s PLIST(5)="I" i $$update^LVBPRPRD(dROWID)
 q
 ;
updStat(dROWID,value)  ;
 D update(dROWID,value)
 q 0
nextWord(report) n (report,PLIST) s report=$g(report),chl="" k PLIST
 i $l(report) s chl=$p(report,"||",2),report=$p(report,"||",1),chl=$o(^PRi("Word",report,chl))
 i '$l(chl) s report=$o(^PRi("Word",report)) i $l(report) s chl=$o(^PRi("Word",report,""))
 s ok=100 i $l(report),$l(chl) s PLIST(1)=report_"||"_chl,PLIST(2)=$zu(5),PLIST(3)=$j,ok=0
 s PLIST=$o(PLIST(""),-1)
 q ok
pre(xUpdate) d PreSQL^SSUTIL4()
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)="R",%mmmsqld(4)=$g(rROWID)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^PR(%mmmsqld(3)))
 i '$t
 e  i 1]]%mmmsqld(3)
 i  g %0ABdun
 s %mmmsqld(9)=$$%getlock^User.PRReport.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ac
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^PR(%mmmsqld(3)))
 i '$t
 e  i 1]]%mmmsqld(3)
 i  g %0ACdun
 k %data
 s %data(6)=%mmmsqld(2)
 d %update^User.PRReport.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(3)) g %0Ac
%0ACdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(3)) g:SQLCODE<0 %0Ac
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(3)) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(status),%mmmsqld(4)=$g(dROWID)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(6)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",$d(^PR(%mmmsqld(5),1,"DEST",%mmmsqld(6)))
 i '$t
 e  i 1]]%mmmsqld(6)
 i  g %0CBdun
 s %mmmsqld(16)=$$%getlock^User.PRReportDestination.T1(%mmmsqld(3)) i '%mmmsqld(16) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(6)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",$d(^PR(%mmmsqld(5),1,"DEST",%mmmsqld(6)))
 i '$t
 e  i 1]]%mmmsqld(6)
 i  g %0CCdun
 k %data
 s %data(5)=$g(%mmmsqld(2))
 d %update^User.PRReportDestination.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.PRReportDestination.T1(%mmmsqld(3)) g %0Cc
%0CCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.PRReportDestination.T1(%mmmsqld(3)) g:SQLCODE<0 %0Cc
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.PRReportDestination.T1(%mmmsqld(3)) g %0Cc
]]></Routine>
</Export>
