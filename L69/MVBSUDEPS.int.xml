<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSUDEPS" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSUDEPS ; ML 29/12/2000 ; LVB Control data access for SS_User_DeptSupervisor
 ;
 ; supported calls:
 ;
 ; $$insert^MVBSUDEPS(par)
 ; $$update^MVBSUDEPS(ROWID)
 ; $$select^MVBSUDEPS(ROWID)
 ; $$delete^MVBSUDEPS(ROWID)
 ; $$open^MVBSUDEPS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSUDEPS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSUDEPS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSUDEPS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSUDEPS()
 ; $$getall^MVBSUDEPS(par)
 ;
  ;---&sql(DECLARE SUDEPS CURSOR FOR SELECT * FROM SS_User_DeptSupervisor
   ;---         WHERE SUDEPS_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ; open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN SUDEPS)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SUDEPS0o
 q 0
 ; fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH SUDEPS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE SUDEPS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SUDEPS0c
 q 0
 ; select data by code
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM SS_User_DeptSupervisor WHERE SUDEPS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; insert the data
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&sql(INSERT INTO SS_User_DeptSupervisor VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE SS_User_DeptSupervisor VALUES :PLIST() WHERE SUDEPS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM SS_User_DeptSupervisor WHERE SUDEPS_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ; post-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 i $g(PLIST(2))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDEP(plist(2),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(2)=X k plist
 ;
 q
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1),2)_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($ZN,$J)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%SUDEPS0o s $zt="%SUDEPS0E" s SQLCODE=$s($g(%SUDEPS0c):-101,1:0) q:SQLCODE'=0  s %SUDEPS0d(7)=0 s %SUDEPS0d(8)=0,%SUDEPS0d(9)=""
 s %SUDEPS0d(4)=$g(par)
 s %SUDEPS0c=1 q
%SUDEPS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SUDEPS0c,%SUDEPS0d,%SUDEPS0E,%SUDEPS0l,%SUDEPS0n,%SUDEPS0R,%SUDEPS0Z q
%0Afirst 
 ; asl MOD# 2
 s %SUDEPS0d(1)=%SUDEPS0d(4)
 i %SUDEPS0d(1)="" g %0ABdun
 s %SUDEPS0d(3)=""
%0ABk1 s %SUDEPS0d(3)=$o(^TTAB("UA",%SUDEPS0d(1),"5",%SUDEPS0d(3)))
 i %SUDEPS0d(3)="" g %0ABdun
 s %SUDEPS0d(2)=(%SUDEPS0d(1))_"||"_(%SUDEPS0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("UA",$p(%SUDEPS0d(2),"||",1),"5",$p(%SUDEPS0d(2),"||",2))#"S":$zu(115,4) i $t { s %SUDEPS0d(8)=1,%SUDEPS0d(9)=$name(^TTAB("UA",$p(%SUDEPS0d(2),"||",1),"5",$p(%SUDEPS0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User_DeptSupervisor for RowID value: "_%SUDEPS0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SUDEPS0d(6)=$p(%SUDEPS0d(2),"||"),%SUDEPS0d(3)=$p(%SUDEPS0d(2),"||",2)
 i %SUDEPS0d(6)'="",%SUDEPS0d(3)'="",$d(^TTAB("UA",%SUDEPS0d(6),"5",%SUDEPS0d(3)))
 e  g %0ACdun
 s %SUDEPS0d(1)=$p(%SUDEPS0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SUDEPS0d(7)=%SUDEPS0d(7)+1,%ROWCOUNT=%SUDEPS0d(7),%ROWID=%SUDEPS0d(2),%SUDEPS0c=10 q
%SUDEPS0f i '$g(%SUDEPS0c) { s SQLCODE=-102 q  } i %SUDEPS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SUDEPS0d(7))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SUDEPS0d(7),%SUDEPS0c=100 q  } g %0Afirst:%SUDEPS0c=1
%0ACdun i $zu(115,2)=1,$g(%SUDEPS0d(8))=1 { l -@%SUDEPS0d(9) s %SUDEPS0d(8)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SUDEPS0d(7),SQLCODE=100,%SUDEPS0c=100 q
%SUDEPS0c i '$g(%SUDEPS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SUDEPS0d(7)),1:0)
 i $zu(115,2)=1,$g(%SUDEPS0d(8))=1 { l -@%SUDEPS0d(9) } k %SUDEPS0c,%SUDEPS0d,%SUDEPS0E,%SUDEPS0l,%SUDEPS0n,%SUDEPS0R,%SUDEPS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SUDEPS0c=100 q
%0Do d %SUDEPS0f q:SQLCODE'=0
 s PLIST(0)=%SUDEPS0d(1),PLIST(1)=%SUDEPS0d(2),PLIST(2)=%SUDEPS0d(3)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(5)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(5)
 s %mmmsqld(7)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(7)'="",PLIST(2)'="",$d(^TTAB("UA",%mmmsqld(7),"5",PLIST(2)))
 e  g %0FBdun
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("UA",$p(PLIST(1),"||",1),"5",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("UA",$p(PLIST(1),"||",1),"5",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User_DeptSupervisor for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(7)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(7)'="",PLIST(2)'="",$d(^TTAB("UA",%mmmsqld(7),"5",PLIST(2)))
 e  g %0FCdun
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:2 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSUserDeptSupervisor.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("UA",%mmmsqld(4),"5",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(15)=$$%getlock^User.SSUserDeptSupervisor.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("UA",%mmmsqld(4),"5",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:2 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.SSUserDeptSupervisor.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.SSUserDeptSupervisor.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.SSUserDeptSupervisor.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.SSUserDeptSupervisor.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("UA",%mmmsqld(3),"5",%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(14)=$$%getlock^User.SSUserDeptSupervisor.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("UA",%mmmsqld(3),"5",%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.SSUserDeptSupervisor.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.SSUserDeptSupervisor.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.SSUserDeptSupervisor.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.SSUserDeptSupervisor.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
