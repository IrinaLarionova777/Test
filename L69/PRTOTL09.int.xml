<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTOTL09" type="INT" languagemode="0"><![CDATA[
PRTOTL09 ; IG 27/05/98 ;Overdue Test list  ; Compiled May 3, 2007 15:16:17 for Cache for Windows
 q
 ; Parameters :  1.Department
 ;               2.Test Set (may be synonym)
 ;               3.Test Group
 ;               4.Site
 ;               5.Report type : OTL - Overdue test list
 ;                               RESP - Result Pending list
 ;                               RESNA - Results Entered Not Authorized list
 ;               6.Sort Order  : PR - Priority (urgents first)
 ;                               EP - Episode
 ;                               DC - Date of Collection
 ;               7.Patient type : Y  - InPatient
 ;                                N  - OutPatient
 ;                                GP - GP
 ;               8.Priority
 ;               9.Patient location
 ;              11.Received before time
 ;              12.Received before date
 ;              13.Patient location type : Y  - InPatient
 ;                                         N  - OutPatient
 ;                                         GP - GP
 ; Fields :      1-Lab No
 ;               2-Name
 ;               3-Req Date
 ;               4-Coll Date
 ;               5-Coll Time
 ;               6-Doctor
 ;               7-MRN#
 ;               8-Location
 ;               9-Test Items
CREATE(REPID,PAR,USER,%msql) ; Create report
 n (REPID,PAR,USER,%msql) k ^TMP($zn,$j)
 k xHEADER d INIT s line=0
 i PAR5="OTL" s line=line+1,xHEADER(line)="Overdue Test list"
 i PAR5="RESP" s line=line+1,xHEADER(line)="Result Pending list"
 i PAR5="RESNA" s line=line+1,xHEADER(line)="Results Entered Not Authorized list"
 s line=line+1,xHEADER(line)=""
 i $l(SITE1) s line=line+1,xHEADER(line)="Site : "_SITE1_" - "_SITE2
 i $l(DEP1) s line=line+1,xHEADER(line)="Department : "_DEP1_" - "_DEP2
 i $l(GROUP1) s line=line+1,xHEADER(line)="Group : "_DEP1_" - "_DEP2
 i $l(PAR7) s line=line+1,xHEADER(line)="Patient Type : "_$s(PAR7="Y":"Inpatient",PAR7="N":"Outpatient",1:"GP")
 i $l(PAR13) s line=line+1,xHEADER(line)="Patient Location Type : "_$s(PAR13="Y":"Inpatient",PAR13="N":"Outpatient",1:"GP")
 i $l(PRIO1) s line=line+1,xHEADER(line)="Priority : "_PRIO1_" - "_PRIO2
 i $l(PLOC1) s line=line+1,xHEADER(line)="Patient Location : "_PLOC1_" - "_PLOC2
 i $l(PAR11)!$l(PAR12) s line=line+1,xHEADER(line)="Received before "_$$extdate^SSUTIL4(PAR12)_" "_$$exttime^SSUTIL4(PAR11)
 s line=line+1,xHEADER(line)=""
 s line=line+1,xHEADER(line)="Sorted by "_$s(PAR6="PR":"Priority - Urgents First",PAR6="EP":"Episode",1:"Date of Collection")
 d HEADER^PRTREP00(.xHEADER),BODY,PRINT
CREND i '$$select^LVBPRPR(REPID) s PLIST(12)=PAR5 i $$update^LVBPRPR(REPID)
 k ^TMP($zn,$j),^TMP("PRTREP00",$j)
 q
 ; initialize parameters
INIT f J=1:1:$l(PAR,$c(1)) s @("PAR"_J)=$p(PAR,$c(1),J)
 i $l(PAR11),'$l(PAR12) s PAR12=+$h
 k xSORT d H^PRTREP00(PAR10,$zn)
 s X=xLINE(2),MAX=$l(X),$p(SPACE," ",MAX)="",$p(LINE,"-",MAX)=""
 ; additional parameters
 s (SITE1,SITE2,DEP1,DEP2,GROUP1,GROUP2,PRIO1,PRIO2,PLOC1,PLOC2)=""
 ; find test set by synonym
 i $l(PAR2),'$d(^TTAB("TS",PAR2)) s PAR2=$$select^LVBCTSY(PAR2,"TS")
 ; find site
 i $l(PAR4),'$$select^LVBCTUSL(PAR4,"Y") s SITE1=$p(PLIST(2),"\"),SITE2=$p(PLIST(3),"\")
 ; find test group
 i $l(PAR3),'$$select^LVBCTTWG(PAR3,"Y") s GROUP1=$p(PLIST(2),"\"),GROUP2=$p(PLIST(3),"\"),PAR1=$p(PLIST(4),$c(1))
 ; find department
 d
 .i $l(PAR1),'$$select^LVBCTDEP(PAR1,"Y") s DEP1=$p(PLIST(2),"\"),DEP2=$p(PLIST(3),"\") q
 .i $l(PAR2),'$$select^LVBCTDEP($E(PAR2),"Y") s DEP1=$p(PLIST(2),"\"),DEP2=$p(PLIST(3),"\") q
 ; set order - episode as default
 i '$l(PAR6) s PAR6="EP"
 ; find priority
 i $l(PAR8),'$$select^LVBCTPR(PAR8,"Y") s PRIO1=$p(PLIST(2),"\"),PRIO2=$p(PLIST(3),"\")
 ; find location
 i $l(PAR9),'$$select^LVBCTHOS(PAR9,"Y") s PLOC1=$p(PLIST(2),"\"),PLOC2=$p(PLIST(3),"\")
 q
 ; create temporary printing file
BODY ; test set
 i $l(PAR2) d  q
 .s TEST=PAR2 d BODY1
 ; test group
 i $l(PAR3) d  q
 .i '$$getall^LVBCTTWT(PAR3) m ^TMP($zn,$j,"TEST")=PLIST
 .s CNT="" f  s CNT=$o(^TMP($zn,$j,"TEST",CNT)) q:CNT=""  s TEST=$p(^(CNT),$c(2),3) d BODY1
 ; department
 i $l(PAR1) d  q
 .s TEST=PAR1 f  s TEST=$o(^TTAB("TS",TEST)) q:TEST=""  q:$e(TEST)'=PAR1  d BODY1
 ; nothing selected
 s TEST="" f  s TEST=$o(^TEPIi("STATUS-TEST","C",TEST)) q:TEST=""  d BODY1
 q
BODY1 i PAR5="OTL" d BODY2("C"),BODY2("E"),BODY2("P") q
 i PAR5="RESP" d BODY2("C") q
 i PAR5="RESNA" d BODY2("C"),BODY2("E"),BODY2("P") q
 q
BODY2(TYPE) s TYPE=$g(TYPE) i '$l(TEST) q
 s EPIS="" f  s EPIS=$o(^TEPIi("STATUS-TEST",TYPE,TEST,EPIS)) q:EPIS=""  d
 .i $$select^LVBEPVIS(EPIS,"Y") q
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .k VISIT m VISIT=PLIST
 .i VISIT(86)>1 q
 .i $l(PAR7),PAR7'=VISIT(93) q
 .i $l(PAR8),PAR8'=VISIT(17) q
 .i $l(PAR9),PAR9'=VISIT(22) q
 .i $l(PAR12),VISIT(61)'<PAR12 q
 .i $l(PAR11),VISIT(61)=PAR12,VISIT(62)'<PAR11 q
 . ; get sort parameter
 .s SORT="" d
 ..i PAR6="EP" s SORT=EPIS q
 ..i PAR6="DC" s SORT=$s(VISIT(12)="":" ",1:VISIT(12)) q
 ..i PAR6="PR" d
 ...s SORT=" " i VISIT(17)="" q
 ...i '$$select^LVBCTPR(VISIT(17)),PLIST(4)="Y" s SORT=1
 .s TESTCNT="" f  s TESTCNT=$o(^TEPIi("STATUS-TEST",TYPE,TEST,EPIS,TESTCNT)) q:TESTCNT=""  d
 ..i $$select^LVBCTTS(TEST,"Y") q
 ..f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ..k TESTSET m TESTSET=PLIST
 ..; check test location
 ..i $l(PAR4),PAR4'=$$site^LVBVISTS(EPIS_"||"_TEST_"||"_TESTCNT) q
 .. ; check completion time for OTL report
 ..i TESTSET(11)#1=0 s xx=0 d  q:xx
 ...i PAR5="OTL",$l(VISIT(61)),VISIT(61)+TESTSET(11)'<$h s xx=1 q
 ...i PAR5="OTL",'$l(VISIT(61)),$l(VISIT(12)),VISIT(12)+TESTSET(11)'<$h s xx=1 q
 ..i TESTSET(11)#1'=0 s xx=0 d  q:xx
 ...i PAR5="OTL",$l(VISIT(61)),((VISIT(61)*24*3600+VISIT(62))+(TESTSET(11)*24*3600))'<($h*24*3600+$p($h,",",2)) s xx=1 q
 ...i PAR5="OTL",'$l(VISIT(61)),$l(VISIT(12)),((VISIT(12)*24*3600+VISIT(13))+(TESTSET(11)*24*3600))'<($h*24*3600+$p($h,",",2)) s xx=1 q
 .. ; check if result exests
 ..i PAR5="RESNA",$d(^TEPI(EPIS,1,TEST,TESTCNT))<10 q
 ..s:SORT="" SORT=" " s ^TMP($zn,$j,"REPORT",$e(TEST),TEST,SORT,EPIS,TESTCNT)=""
 q
 ; Fields :      1-Lab No
 ;               2-Name
 ;               3-Req Date
 ;               4-Coll Date
 ;               5-Coll Time
 ;               6-Doctor
 ;               7-MRN#
 ;               8-Location
 ;               9-Test Items
PRINT s DEP="" f  s DEP=$o(^TMP($zn,$j,"REPORT",DEP)) q:DEP=""  d
 .s TEST="" f  s TEST=$o(^TMP($zn,$j,"REPORT",DEP,TEST)) q:TEST=""  d
 ..k TI i '$$getit^LVBCTTSF(TEST) f j=1:1:PLIST s ti=$p(PLIST(j),$c(2),10) i $l(ti),$l($p(PLIST(j),$c(2),8)) s TI(ti)=$p(PLIST(j),$c(2),25)
 ..s TESTNAME="" i '$$select^LVBCTTS(TEST,"Y") s TESTNAME=PLIST(3)
 ..d ADDLINE^PRTREP00(REPID,"PRT","!")
 ..d ADDLINE^PRTREP00(REPID,"PRT","~BOLD")
 ..d ADDLINE^PRTREP00(REPID,"PRT","~ITALIC")
 ..d ADDLINE^PRTREP00(REPID,"PRT","?5  "_TEST)
 ..d ADDLINE^PRTREP00(REPID,"PRT","?15 "_TESTNAME)
 ..d ADDLINE^PRTREP00(REPID,"PRT","~NORMAL")
 ..d ADDLINE^PRTREP00(REPID,"PRT","!")
 ..s SORT="" f  s SORT=$o(^TMP($zn,$j,"REPORT",DEP,TEST,SORT)) q:SORT=""  d
 ...s EPIS="" f  s EPIS=$o(^TMP($zn,$j,"REPORT",DEP,TEST,SORT,EPIS)) q:EPIS=""  d
 ....s TESTCNT="" f  s TESTCNT=$o(^TMP($zn,$j,"REPORT",DEP,TEST,SORT,EPIS,TESTCNT)) q:TESTCNT=""  d
 .....k xxx s xxx(1)=EPIS_$s(PAR6="PR":$s(SORT=1:"*",1:""),1:"")
 .....i '$$select^LVBEPVIS(EPIS) d
 ......s:$p(PLIST(86),$c(1))=0 xxx(2)=$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 ......s:$p(PLIST(86),$c(1))>0 xxx(2)="Pre-Entered"
 ......s xxx(3)="" i $l(PLIST(61)) s xxx(3)=PLIST(61)_$c(1)_$$extdate2^SSUTIL4(PLIST(61))
 ......s xxx(4)=PLIST(12)_$c(1)_$$extdate2^SSUTIL4(PLIST(12))
 ......i $l(PLIST(13)) s xxx(5)=PLIST(13)_$c(1)_$$exttime^SSUTIL4(+PLIST(13))
 ......s xxx(6)=PLIST(15),xxx(7)=PLIST(20),xxx(8)=PLIST(22)
 ......s (xxx(9),ti)="" f  s ti=$o(TI(ti)) q:ti=""  i '$d(^TEPI(EPIS,1,TEST,TESTCNT,"DATA",ti)) s xxx(9)=xxx(9)_$s($l(xxx(9)):",",1:"")_$s($l(TI(ti)):TI(ti),1:ti)
 .....d PRINT^PRTREP00(.PLIST,.N)
 ..d ADDLINE^PRTREP00(REPID,"PRT","!")
 ..d ADDLINE^PRTREP00(REPID,"PRT",xLINE(1))
 ..d ADDLINE^PRTREP00(REPID,"PRT","!")
 s report="OTL"
 s EndLine=$$seldata^LVBCTCLR(report,9)
 i EndLine="Y" d PRINTEND^PRTREP00(xLINE(1))
 q
]]></Routine>
</Export>
