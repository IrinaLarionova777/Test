<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCOM95" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCOM95 ; IG 10/12/99 ; Common routines
 ;
 ; supported calls:
 ;
 ; step1^LVBCOM95
 ; step2^LVBCOM95
 ;
 ; check pricing
step1 k ^TMP("STEP-1")
 s date="" f  s date=$o(^TDAY(1,date)) q:date=""  w !,date d
 .s epis="" f  s epis=$o(^TDAY(1,date,epis)) q:epis=""  d
 ..s ok=$$PriceAble^LVBCOM02(epis) i 'ok q
 ..i $p(ok,$c(1),1)'=$p(ok,$c(1),2) q
 ..i $p(^TEPI(epis,7),"\",4)'="" q
 .. ; check if patient was priced with another patient
 ..s (stop,ok,cnt)="" f  s cnt=$o(^TEPI(epis,6,cnt),-1) q:cnt=""  d  i ok!stop q
 ...i ($p(^(cnt),"\",1)="IN")!($p(^(cnt),"\",1)="RB") s stop=1 q
 ...i $p(^(cnt),"\",1)="AP" s stop=1 s xep=$p($p(^(cnt),"\",4)," on ",2) i $l(xep) s ok=1
 ..i ok q
 .. ; check if patient still on TBIL(9)
 ..i $d(^TBIL(9,epis)) q
 .. ; check if patient still on TBIL(2)
 ..s x1="" f  s x1=$o(^TBIL(2,x1)) q:x1=""  d  i ok q
 ...s x2="" f  s x2=$o(^TBIL(2,x1,x2)) q:x2=""  i $d(^TBIL(2,x1,x2,epis)) s ok=1 q
 ..i ok q
 .. ; check VA code
 ..s va=$tr($p(^TEPI(epis),"\",24)," ") i $l(va),$p($g(^TTAB("VA",va)),"\",2)="Y" q
 .. ; check DA code
 ..s mrn=$tr($p(^TEPI(epis),"\",18)," ") i $l(mrn) s da=$p($g(^TDEB(mrn,date,0,epis)),"\",5) i $l(da),$p($g(^TTAB("DA",da)),"\",2)="Y" q
 ..s ^TMP("STEP-1",date,epis)=""
 Q
step2 k ^TMP($zn,$j)
 s COMMON="" i '$$select^MVBCFLAB(1) s COMMON=$p(PLIST(17),$c(1))
 ; sort episodes
 s date="" f  s date=$o(^TMP("STEP-1",date)) q:date=""  d
 .s epis="" f  s epis=$o(^TMP("STEP-1",date,epis)) q:epis=""  d
 ..  ;---&sql(SELECT EPVIS_DateOfCollection,EPVIS_DateOfRequest,EPVIS_DebtorNumber_DR INTO :VISIT() FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, VISIT, epis
 .. Do %0Ao
 ..s VISIT(20)=$p(VISIT(20),$c(1)) f j=12,14 s VISIT(j)=+VISIT(j)
 ..i '$l(VISIT(20)) d log(epis,"Patient does not have MRN") q
 ..i '$l(VISIT(12)) d log(epis,"Patient does not have Date_of_Collection") q
 ..i '$l(VISIT(14)) d log(epis,"Patient does not have Date_of_Request") q
 ..i VISIT(12)>VISIT(14),VISIT(12)-VISIT(14)>364 d log(epis,"Check Date_of_Request or Date_of_Collection") q
 ..i VISIT(14)>VISIT(12) d log(epis,"Check Date_of_Request or Date_of_Collection") q
 ..s ^TMP($zn,$j,10,VISIT(20),VISIT(12),epis)=""
 ; price all outstanding patients
 s deb="" f  s deb=$o(^TMP($zn,$j,10,deb)) q:deb=""  d
 .s date="" f  s date=$o(^TMP($zn,$j,10,deb,date)) q:date=""  d
 .. ; check all episodes
 ..s (EpisodeList,DelayedList,InvoicedList,epis)="" f  s epis=$o(^TDEB(deb,date,0,epis)) q:epis=""  d
 ...i '$d(^TMP($zn,$j,10,deb,date,epis)) d
 ....i $d(^TBIL(9,epis)) s DelayedList=DelayedList_$s($l(DelayedList):" ",1:"")_epis q
 ....  ;---&sql(SELECT EPVIS_DateOfInvoice INTO :inv FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ....  ;--- ** SQL PUBLIC Variables: SQLCODE, epis, inv
 .... Do %0Co
 ....s inv=$p(inv,$c(1)) i '$l(inv) d  q
 .....s (stop,event)="" f  s event=$o(^TEPI(epis,6,event),-1)  q:event=""  d  i $l(stop) q
 ......i $p(^(event),"\")="RB" s stop=0 q
 ......i $p(^(event),"\")="AP" s stop=1 i '$l($p($p(^(event),"\",4)," on ",2)) s stop=0
 .....i 'stop s EpisodeList=EpisodeList_$s($l(EpisodeList):" ",1:"")_epis
 ....s InvoicedList=InvoicedList_$s($l(InvoicedList):" ",1:"")_epis q
 .. ; check if all episodes ready to be priced
 ..i $l(EpisodeList)!$l(DelayedList)!$l(InvoicedList) d  q
 ...s epis="" f  s epis=$o(^TMP($zn,$j,10,deb,date,epis)) q:epis=""  d
 ....i $l(EpisodeList) d log(epis,"Waiting for episode(s) <"_EpisodeList_">")
 ....i $l(DelayedList) d log(epis,"Episode(s) <"_DelayedList_"> delayed for pricing")
 ....i $l(InvoicedList) d log(epis,"Episode(s) <"_InvoicedList_"> already invoiced. Please ReBill. Look at all requests.")
 .. ; check all episodes information
 ..s ok=1,epis="" f  s epis=$o(^TMP($zn,$j,10,deb,date,epis)) q:epis=""  d
 ...s flag=^(epis)
 ...  ;---&sql(SELECT EPVIS_PaymentCode_DR,EPVIS_DoctorCode_DR,EPVIS_VisitAction_DR,EPVIS_BillLocation_DR INTO :VISIT() FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ...  ;--- ** SQL PUBLIC Variables: SQLCODE, VISIT, epis
 ... Do %0Eo
 ...f j=9,15,25,74 s VISIT(j)=$p(VISIT(j),$c(1))
 ...i '$l(VISIT(9)) d log(epis,"Patient does not have a payment code") q
 ...i $$select^LVBCTPC(VISIT(9),"Y") d log(epis,"Payment code <"_VISIT(9)_"> does not exist") q
 ...i '$l(VISIT(15)) d log(epis,"Patient does not have a doctor") q
 ...i $$select^LVBCTDR(VISIT(15),"Y") d log(epis,"Doctor <"_VISIT(15)_"> does not exist") q
 ...i '$l(PLIST(18)) d log(epis,"Doctor <"_VISIT(15)_"> does not have provider number") q
 ...i $d(^TTAB("BILL-LOC")),'$l(VISIT(74)) d log(epis,"Patient does not have Billing location") q
 ...i $l(VISIT(25)) s supress="" d  i $p(supress,$c(1))="Y" d log(epis,"Billing Supressed by Visit/Action") q
 ....  ;---&sql(SELECT CTVA_SuppressBilling INTO :supress FROM CT_VisitAction WHERE CTVA_RowID=:VISIT(25))
  ....  ;--- ** SQL PUBLIC Variables: SQLCODE, VISIT, supress
 .... Do %0Go
 ...s supress="" d  i $p(supress,$c(1))="Y" d log(epis,"Billing Supressed by Debtor/Action") q
 ....s rowid=deb_"||"_date_"||"_epis
 ....  ;---&sql(SELECT DEBVI_DebtorAction_DR->CTDA_SuppressBilling INTO :supress FROM DEB_DebtorVisits WHERE DEBVI_RowID=:rowid)
  ....  ;--- ** SQL PUBLIC Variables: SQLCODE, rowid, supress
 .... Do %0Io
 ...s comp=$$epcomp^LVBVIS1(epis)
 ...i '$l(comp) d log(epis,"Doctor <"_VISIT(15)_"> does not have a company") q
 ... ;---s type="" &sql(SELECT CTPC_Type INTO :type FROM CT_PaymentCode WHERE CTPC_RowID=:VISIT(9))
  ... ;--- ** SQL PUBLIC Variables: SQLCODE, VISIT, type
 ...s type="" Do %0Ko
 ...i ($p(type,$c(1))="M")!($p(type,$c(1))="V") d  i '$l(provider) d log(epis,"Doctor <"_VISIT(15)_"> Provider No is null") q
 .... ;---s provider="" &sql(SELECT CTDR_ProviderNumber INTO :provider FROM CT_Doctor WHERE CTDR_RowID=:VISIT(15))
  .... ;--- ** SQL PUBLIC Variables: SQLCODE, VISIT, provider
 ....s provider="" Do %0Mo
 ...s ^TMP($zn,$j,0,deb,date,comp,VISIT(9),epis)=flag
 ..i 'ok k ^TMP($zn,$j,0,deb,date)
 ; create list of items
 s deb="" f  s deb=$o(^TMP($zn,$j,0,deb)) q:deb=""  d
 .s date="" f  s date=$o(^TMP($zn,$j,0,deb,date)) q:date=""  d
 ..s Company="" f  s Company=$o(^TMP($zn,$j,0,deb,date,Company)) q:Company=""  d
 ...s pc="" f  s pc=$o(^TMP($zn,$j,0,deb,date,Company,pc)) q:pc=""  d
 ....k ^TMP($zn,$j,2) s ok=1,(Master,MasterFlag)=""
 ....k PAYCODE i '$$select^LVBCTPC(pc,"Y") m PAYCODE=PLIST
 ....s epis="" f  s epis=$o(^TMP($zn,$j,0,deb,date,Company,pc,epis)) q:epis=""  d
 .....s flag=^(epis) i MasterFlag'="P" s MasterFlag=flag
 .....i '$l(Master) s Master=epis
 .....s test="" f  s test=$o(^TEPI(epis,1,test)) q:test=""  d
 ......s tscnt="" f  s tscnt=$o(^TEPI(epis,1,test,tscnt)) q:tscnt=""  d
 .......s rowid=epis_"||"_test_"||"_tscnt
 .......  ;---&sql(SELECT VISTS_HISTO_BillingItem,VISTS_TestSet_DR->CTTS_BillType,VISTS_TestSet_DR->CTTS_Synonym,VISTS_SupressBilling INTO :HistoCyto,:type,:synonym,:supress FROM EP_VisitTestSet WHERE VISTS_RowID=:rowid)
  .......  ;--- ** SQL PUBLIC Variables: HistoCyto, SQLCODE, rowid, supress, synonym, type
 ....... Do %0Oo
 .......s HISTO=0 f j=1:1:$l(HistoCyto,",") i $l($p(HistoCyto,",",j)) s HISTO=1
 ....... ; no charge test set
 .......i $p(type,$c(1))="N",PAYCODE(17)'="Y" q
 ....... ; supress billing
 .......i $p(supress,$c(1))="Y" q
 ....... ; manual pricing
 .......i $p(type,$c(1))="M" s ^TMP($zn,$j,2,Master)="Manual"
 .......i PAYCODE(4)="M",PAYCODE(2)'=COMMON s ^TMP($zn,$j,2,Master)="Manual"
 .......s date1=$o(^TTAB("TS",test,3,date+1),-1)
 .......i 'HISTO d  q
 ........i '$l(date1),$p(type,$c(1))'="M" d log(epis,"Test Set <"_test_"> No item effective date before "_$$extdate2^SSUTIL4(date)) q
 ........i $l(date1) s item="" f  s item=$o(^TTAB("TS",test,3,date1,item)) q:item=""  d
 .........s xx=$g(^TTAB("TS",test,3,date1,item))
 .........i "*"'[$p(xx,"\",3),$p(xx,"\",4)="",$g(^TEPI(epis,1,test,tscnt,"DATA",$p(xx,"\",3)))="" q
 .........i "*"'[$p(xx,"\",3),$p(xx,"\",3)'="",'$$CheckRes0(epis_"||"_test_"||"_tscnt,$p(xx,"\",3),$p(xx,"\",4),$p(xx,"\",5)) q
 .........i $p(xx,"\",3)="*",'$$CheckRes1(epis_"||"_test_"||"_tscnt,date1,item) q
 .........s $p(^TMP($zn,$j,2,Master,0,item),"\",1)=$p($g(^TMP($zn,$j,2,Master,0,item)),"\",1)+$p(xx,"\",1)
 .........s $p(^TMP($zn,$j,2,Master,0,item),"\",2)=$p($g(^TMP($zn,$j,2,Master,0,item)),"\",2)_";"_$p(xx,"\",2)
 .......i HISTO d  q
 ........f j=1:1:$l(HistoCyto,",") s item=$p(HistoCyto,",",j) i $l(item) d
 .........s $p(^TMP($zn,$j,2,Master,0,item),"\",1)=$p($g(^TMP($zn,$j,2,Master,0,item)),"\",1)+1
 .........s $p(^TMP($zn,$j,2,Master,0,item),"\",2)=$p($g(^TMP($zn,$j,2,Master,0,item)),"\",2)_";"_synonym
 ....i 'ok k ^TMP($zn,$j,0,deb,date,Company,pc) q
 ....m ^TMP($zn,$j,4,Master)=^TMP($zn,$j,2,Master) k High
 ....s epis="" f  s epis=$o(^TMP($zn,$j,0,deb,date,Company,pc,epis)) q:epis=""  s ^TMP($zn,$j,4,Master,1,epis)=""
 .... ; find Initiation item
 ....s epis="" f  s epis=$o(^TMP($zn,$j,4,Master,1,epis)) q:epis=""  d InitCode(epis)
 ....i 'ok k ^TMP($zn,$j,4,Master) q
 ....s (text,amt)="" f  s amt=$o(High(amt),-1) q:amt=""  d  i $l(text) q
 .....s epis="" f  s epis=$o(High(amt,epis)) q:epis=""  d  i $l(text) q
 ......i $d(^TMP($zn,$j,4,Master,1,epis)) s text=High(amt,epis)_"\"_amt q
 ....s ^TMP($zn,$j,2,Master,0)=text
 .... ; check items
 ....k Items,Result m Items=^TMP($zn,$j,4,Master,0)
 ....d ItmCheck(PAYCODE(23))
 ....d ItmLimit(Master,PAYCODE(7))
 ....d ItmCalc(PAYCODE(2),date)
 .... ; check Medicare conning
 ....i PAYCODE(22)="Y" d
 .....  ;---&sql(SELECT EPVIS_HospitalCode_DR->CTHOS_LocationType,EPVIS_InitiationCode_DR->CTIC_Inpatient,EPVIS_DoctorCode_DR->CTDR_Specialty_DR->CTSPL_MedicareConing INTO :inpat1,:inpat2,:conn2 FROM EP_VisitNumber WHERE EPVIS_RowID=:Master)
  .....  ;--- ** SQL PUBLIC Variables: Master, SQLCODE, conn2, inpat1, inpat2
 ..... Do %0Qo
 ..... ; Doctor's Speciality
 .....i $p(conn2,$c(1))'="Y" q
 ..... ; InPatient
 .....i ($p(inpat1,$c(1))="Y")!($p(inpat2,$c(1))="Y") q
 .....d ItmConning()
 .... ; check Initiation Item exclusion
 ....s check="Y",item="" f  s item=$o(Items(item)) q:item=""  d  q:check="N"
 .....i '$$select^LVBCTBI(item,"Y"),PLIST(10)'="Y" s check="N"
 ....i check="Y" s ^TMP($zn,$j,2,Master,0)=""
 ....i $g(^TMP($zn,$j,4,Master))'="Manual" d
 ..... ; update Master record
 .....s Total=0
 .....i $l($p(^TMP($zn,$j,2,Master,0),"\",1)) s Total=+$p(^TMP($zn,$j,2,Master,0),"\",2)
 .....s item="" f  s item=$o(Result(item)) q:item=""  s Total=Total+Result(item)
 .....i Total s ^TMP("STEP-2",Master)=+$h_"\Y"_Total
 q
 ; medicare conning
ItmConning(epis) n (epis,Result) s epis=$g(epis)
 s item="" f cnt=0:1 s item=$o(Result(item)) q:item=""
 i cnt>3 d
 .m OldResult=Result k Result
 .s item="" f  s item=$o(OldResult(item)) q:item=""  d
 ..  ;---&sql(SELECT CTBI_ExcludeFromConing INTO :exclude FROM CT_BillingItem WHERE CTBI_RowID=:item)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, exclude, item
 .. Do %0So
 ..i $p(exclude,$c(1))="Y" s Result(item)=OldResult(item) q
 ..s descr=$p(OldResult(item),"\",2) i descr'[" x " s Item(+OldResult(item),item)="" q
 ..s cnt=$p(descr," x ",2) f j=1:1:cnt s Item(OldResult(item)/cnt,item_"."_j)=""
 .s (cnt,amt)="" f  s amt=$o(Item(amt),-1) q:amt=""  d  i cnt=3 q
 ..s xitem="" f  s xitem=$o(Item(amt,xitem)) q:xitem=""  s item=$p(xitem,".") d  i cnt=3 q
 ...s cnt=cnt+1
 ...i xitem'["." s Result(item)=OldResult(item) q
 ...s $p(Result(item),"\",1)=$p($g(Result(item)),"\",1)+amt
 ...s $p(Result(item),"\",2)=$p($p(OldResult(item),"\",2)," x ",1)_" x "_($p($p($g(Result(item)),"\",2)," x ",2)+1)
 .s item="" f  s item=$o(Result(item)) q:item=""  s $p(Result(item),"\",1)=$j(Result(item),0,2)
 q
InitCode(epis) n (epis,High,Master,ok,PAYCODE) s epis=$g(epis),(pc,init,date)=""
  ;---&sql(SELECT EPVIS_PaymentCode_DR,EPVIS_InitiationCode_DR,EPVIS_DateOfCollection INTO :pc,:init,:date FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
   ;--- ** SQL PUBLIC Variables: SQLCODE, date, epis, init, pc
 Do %0Uo
 s pc=$p(pc,$c(1)),init=$p(init,$c(1)),date=$p(date,$c(1))
 i $l(init) d
 .s date1=$o(^TTAB("IC",init,date),-1)
 .i '$l(date1) d log(Master,"No Initiation item before "_$$extdate2^SSUTIL4(date)) q
 .s item=$p($g(^TTAB("IC",init,date1)),"\",1)
 .i '$l(item) d log(Master,"Invalid Iniitiation item <"_item_"> before "_$$extdate2^SSUTIL4(date)) q
 .s z=$$amount(item,pc,date)
 .i 'z="" d log(Master,"No fee for pay code "_pc_" item "_item_" before "_$$extdate2^SSUTIL4(date)) q
 .s High(+z,epis)=item
 q
 ; check items limits and item description
ItmLimit(Master,MedCode) n (Master,MedCode,Items) s Master=$g(Master),MedCode=$g(MedCode)
 s item="" f  s item=$o(Items(item)) q:item=""  d
 .k descr s descr=$p(Items(item),"\",2)
 .f j=1:1:$l(descr,";") s x=$p(descr,";",j) i $l(x) s descr(x)=$g(descr(x))+1
 .s (x,descr)="" f  s x=$o(descr(x)) q:x=""  s descr=descr_$s($l(descr):";",1:"")_x i Items(item)>1,descr(x)>1 s descr=descr_" x "_descr(x)
 .s $p(Items(item),"\",2)=descr
 .i $$select^LVBCTBI(item,"Y") q
 .k ITEM m ITEM=PLIST
 . ; no number limit
 .i 'ITEM(5) q
 . ; second item exists
 .i Items(item)>1 d
 ..i '$l(ITEM(7)) s ITEM(7)=item
 ..i ITEM(7)=item s x1=$s(ITEM(5)<Items(item):ITEM(5),1:+Items(item)),$p(Items(item),"\",1)=x1 q
 ..s x1=$s(ITEM(5)-1<Items(item):ITEM(5)-1,1:Items(item)-1),$p(Items(ITEM(7)),"\",1)=x1
 ..s $p(Items(item),"\",1)=1
 . ; Medicare conning
 .i $l(Master),MedCode="Y" d
 ..  ;---&sql(SELECT EPVIS_DateOfCollection,EPVIS_DebtorNumber_DR INTO :VISIT() FROM EP_VisitNumber WHERE EPVIS_RowID=:Master)
  ..  ;--- ** SQL PUBLIC Variables: Master, SQLCODE, VISIT
 .. Do %0Wo
 ..f j=12,20 s VISIT(j)=$p(VISIT(j),$c(1))
 ..s date=VISIT(12)-ITEM(6),(cnt,Next)=""
 ..f  s date=$o(^TDEB(VISIT(20),date)) q:date=""  q:date>VISIT(12)  i $d(^TDEB(VISIT(20),date,0)) d
 ...i Next="" s Next=date
 ...s epis="" f  s epis=$o(^TDEB(VISIT(20),date,0,epis)) q:epis=""  d
 ....i epis'=Master,$d(^TEPI(epis,7,item)) s cnt=cnt+1
 ..i cnt,cnt'<ITEM(5) d log(Master,"Item <"_item_"> ** LIMIT EXCEEDED - NOT PRICED ** , Next allowed after "_$$extdate2^SSUTIL4(Next+ITEM(6))) k Items(item) q
 ..i cnt,ITEM(5)-cnt=1,(Next+ITEM(6))>$h d log(Master,"Item <"_item_"> Warning - limit reached, No more until "_$$extdate2^SSUTIL4(Next+ITEM(6)))
 q
 ; calculating amount by items
ItmCalc(PayCode,date) n (PayCode,date,Items,Result,PAYCODE) s PayCode=$g(PayCode),date=$g(date)
 s item="" f  s item=$o(Items(item)) q:item=""  d
 .s amt=$$amount(item,PayCode,$s($l(date):date,1:+$h))
 .s $p(Result(item),"\",1)=$p(Items(item),"\",1)*amt
 .s $p(Result(item),"\",2)=$p(Items(item),"\",2)
 q
ItmCheck(sched) n (sched,Items) s sched=$g(sched)
 i $l(sched) d
 .s item="" f  s item=$o(Items(item)) q:item=""  d check1(item)
 .s item="" f  s item=$o(Items(item)) q:item=""  d check2(item)
 .s item="" f  s item=$o(Items(item)) q:item=""  d check3(item)
 .s item="" f  s item=$o(Items(item)) q:item=""  d check3(item)
 .s item="" f  s item=$o(Items(item)) q:item=""  d check2(item)
 .i $d(Items(65003)),$d(Items(65005)) d
 ..s zz="" f j=65007,65003,65005 s zz=zz_$p($g(Items(j)),"\",2)
 ..s Items(65007)=1_"\"_zz f j=65003,65005 k Items(j)
 q
 ; check item grouping
check1(item) n (item,sched,Items) s item=$g(item),quantity=$p(Items(item),"\",1)
 i quantity<1 k Items(item) q
 s xx=$o(^TSCH(sched,item,1,quantity-1)) i $l(xx) d
 .s newitem=$p($g(^TSCH(sched,item,1,xx)),"\") i $l(newitem) d
 ..i newitem=item s $p(Items(newitem),"\",1)=1 q
 ..s Items(newitem)=1_"\"_$p(Items(item),"\",2) k Items(item)
 q
 ; check item Xover
check2(item) n (item,sched,Items) s item=$g(item)
 s xitem="" f  s xitem=$o(^TSCH(sched,item,2,xitem)) q:xitem=""  i $d(Items(xitem)) d
 .s $p(Items(item),"\",2)=$p(Items(item),"\",2)_$p(Items(xitem),"\",2) k Items(xitem)
 q
 ; check item coning
check3(item) n (item,sched,Items) s item=$g(item),newitem=""
 s xitem="" f  s xitem=$o(^TSCH(sched,item,3,xitem)) q:xitem=""  i $d(Items(xitem)) d  i $l(newitem) q
 .s newitem=$p($g(^TSCH(sched,item,3,xitem)),"\") i $l(newitem) d
 ..s Items(newitem)=1_"\"_$p(Items(item),"\",2)_$p(Items(xitem),"\",2)
 ..f j=item,xitem k Items(j)
 q
 ; create log file
log(epis,text) n (epis,text,ok) s epis=$g(epis),text=$g(text),ok=0
  ;---&sql(SELECT EPVIS_DateOfCollection INTO :date FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
   ;--- ** SQL PUBLIC Variables: SQLCODE, date, epis
 Do %0Yo
 s ^TMP("STEP-1",date,epis)=text
 q
 ; check result
CheckRes0(vtsRID,ti,operand,result) n (vtsRID,ti,operand,result)
 s epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2),tscnt=$p(vtsRID,"||",3)
 s xx=$g(^TEPI(epis,1,test,tscnt,"DATA",ti))
 i operand="-",xx'<$p(result,","),xx'>$p(result,",",2) q 1
 i @(""""_xx_""""_operand_""""_result_"""") q 1
 q 0
CheckRes1(vtsRID,date1,item) n (vtsRID,date1,item) s vtsRID=$g(vtsRID),date1=$g(date1),item=$g(item)
 s epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2),tscnt=$p(vtsRID,"||",3)
 s (check,check1,order)="" f  s order=$o(^TTAB("TS",test,3,date1,item,order)) q:order=""  s xx=^(order) d
 .f j=1:1:5 s @("xx"_j)=$p(xx,"\",j)
 .i $o(^(order))="" s xx5=""
 .i $d(^TEPI(epis,1,xx2,tscnt)) s check1=1
 .s check=check_$$CheckRes0(epis_"||"_xx2_"||"_tscnt,xx1,xx3,xx4)
 .i $e(check,$l(check)-1)="&" s @("check="_check)
 .i xx5="AND" s check=check_"&"
 .i xx5="OR" s check=check_"!"
 i 'check1 q 1
 s @("check="_check)
 q check
amount(item,PayCode,date) n (item,PayCode,date,PAYCODE) s item=$g(item),PayCode=$g(PayCode),date=$g(date),result=""
 s:'$l(date) date=+$h s date=100000-date
 s date1=$o(^TTAB("IB",item,0,PayCode,date-1)),xx=PAYCODE(4)
 i date1="" s PayCode=$p($g(^CF("LAB",1)),"^",20),date1=$o(^TTAB("IB",item,0,PayCode,date-1))
 e  s xx="M"
 i $l(date1) d
 .s result=$p($g(^TTAB("IB",item,0,PayCode,date1)),"\")
 .i result,xx="C",PAYCODE(5)-100 s result=$j(result*PAYCODE(5)/100,0,2),x=result#.1*100,result=$s((x>0)&(x<5):result\.1/10+.05,x>5:result\.1/10+.1,1:result)
 q result
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ABdun
 s %mmmsqld(12)=$g(^TEPI(%mmmsqld(5)))
 s VISIT(12)=$p(%mmmsqld(12),"\",10) s VISIT(14)=$p(%mmmsqld(12),"\",12) s VISIT(20)=$p(%mmmsqld(12),"\",18)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ACdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5)))
 s VISIT(12)=$p(%mmmsqld(15),"\",10) s VISIT(14)=$p(%mmmsqld(15),"\",12) s VISIT(20)=$p(%mmmsqld(15),"\",18)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0CBdun
 s %mmmsqld(10)=$g(^TEPI(%mmmsqld(3),7))
 s inv=$p(%mmmsqld(10),"\",3)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TEPI($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0CCdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(3),7))
 s inv=$p(%mmmsqld(13),"\",3)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(7)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(6)=%mmmsqld(7)
 i %mmmsqld(6)'="",$d(^TEPI(%mmmsqld(6)))
 e  g %0EBdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(6)))
 s VISIT(9)=$p(%mmmsqld(13),"\",7) s VISIT(15)=$p(%mmmsqld(13),"\",13) s VISIT(25)=$p(%mmmsqld(13),"\",24) s VISIT(74)=$p(%mmmsqld(13),"\",22)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(6),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TEPI($p(%mmmsqld(6),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(6) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(6)'="",$d(^TEPI(%mmmsqld(6)))
 e  g %0ECdun
 s %mmmsqld(16)=$g(^TEPI(%mmmsqld(6)))
 s VISIT(9)=$p(%mmmsqld(16),"\",7) s VISIT(15)=$p(%mmmsqld(16),"\",13) s VISIT(25)=$p(%mmmsqld(16),"\",24) s VISIT(74)=$p(%mmmsqld(16),"\",22)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(VISIT(25))
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("VA",%mmmsqld(3)))
 e  g %0GBdun
 s %mmmsqld(12)=$g(^TTAB("VA",%mmmsqld(3)))
 s supress=$p(%mmmsqld(12),"\",2)
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TTAB("VA",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("VA",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_VisitAction for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("VA",%mmmsqld(3)))
 e  g %0GCdun
 s %mmmsqld(17)=$g(^TTAB("VA",%mmmsqld(3)))
 s supress=$p(%mmmsqld(17),"\",2)
%0GBuncommitted ;
 s SQLCODE=0 g %0Gc
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(11)=0,%mmmsqld(12)="",%mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(6)=$g(rowid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 s %mmmsqld(8)=$p(%mmmsqld(5),"||"),%mmmsqld(9)=$p(%mmmsqld(5),"||",2),%mmmsqld(10)=$p(%mmmsqld(5),"||",3)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",%mmmsqld(10)'="",$d(^TDEB(%mmmsqld(8),%mmmsqld(9),0,%mmmsqld(10)))
 e  g %0IBdun
 s %mmmsqld(21)=$g(^TDEB(%mmmsqld(8),%mmmsqld(9),0,%mmmsqld(10)))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",5)
 g:$zu(115,2)=0 %0IBuncommitted i $zu(115,2)=1 l +^TDEB($p(%mmmsqld(5),"||",1),$p(%mmmsqld(5),"||",2),0,$p(%mmmsqld(5),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TDEB($p(%mmmsqld(5),"||",1),$p(%mmmsqld(5),"||",2),0,$p(%mmmsqld(5),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DEB_DebtorVisits for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(%mmmsqld(5),"||"),%mmmsqld(9)=$p(%mmmsqld(5),"||",2),%mmmsqld(10)=$p(%mmmsqld(5),"||",3)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",%mmmsqld(10)'="",$d(^TDEB(%mmmsqld(8),%mmmsqld(9),0,%mmmsqld(10)))
 e  g %0ICdun
 s %mmmsqld(28)=$g(^TDEB(%mmmsqld(8),%mmmsqld(9),0,%mmmsqld(10)))
 s %mmmsqld(1)=$p(%mmmsqld(28),"\",5)
%0IBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("DA",%mmmsqld(2)))
 e  s %mmmsqld(2)="",supress="" g %0ICp5
 s %mmmsqld(33)=$g(^TTAB("DA",%mmmsqld(2)))
 s supress=$p(%mmmsqld(33),"\",2)
%0ICp5 
 g:$zu(115,2)=0 %0ICuncommitted i $zu(115,2)=1 l +^TTAB("DA",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TTAB("DA",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DebtorAction for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("DA",%mmmsqld(2)))
 e  s %mmmsqld(2)="",supress="" g %0IDp1
 s %mmmsqld(38)=$g(^TTAB("DA",%mmmsqld(2)))
 s supress=$p(%mmmsqld(38),"\",2)
%0IDp1 
%0ICuncommitted ;
 s SQLCODE=0 g %0Ic
%0IDdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0ICdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ic
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Kerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(VISIT(9))
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0KBdun
 s %mmmsqld(12)=$g(^TTAB("BI",%mmmsqld(3)))
 s type=$p(%mmmsqld(12),"\",26)
 g:$zu(115,2)=0 %0KBuncommitted i $zu(115,2)=1 l +^TTAB("BI",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BI",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PaymentCode for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0KCdun
 s %mmmsqld(17)=$g(^TTAB("BI",%mmmsqld(3)))
 s type=$p(%mmmsqld(17),"\",26)
%0KBuncommitted ;
 s SQLCODE=0 g %0Kc
%0KCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0KBdun 
%0KAdun 
%0Kc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Kerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Kc
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Merr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(VISIT(15))
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("DR",%mmmsqld(3)))
 e  g %0MBdun
 s %mmmsqld(12)=$g(^TTAB("DR",%mmmsqld(3),0))
 s provider=$p(%mmmsqld(12),"\",3)
 g:$zu(115,2)=0 %0MBuncommitted i $zu(115,2)=1 l +^TTAB("DR",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("DR",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Doctor for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("DR",%mmmsqld(3)))
 e  g %0MCdun
 s %mmmsqld(17)=$g(^TTAB("DR",%mmmsqld(3),0))
 s provider=$p(%mmmsqld(17),"\",3)
%0MBuncommitted ;
 s SQLCODE=0 g %0Mc
%0MCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0MBdun 
%0MAdun 
%0Mc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Merr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Mc
%0Oo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Oerr" s %mmmsqld(16)=0,%mmmsqld(17)="",%mmmsqld(18)=0,%mmmsqld(19)=""
 s %mmmsqld(12)=$g(rowid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(11)=%mmmsqld(12)
 s %mmmsqld(14)=$p(%mmmsqld(11),"||"),%mmmsqld(2)=$p(%mmmsqld(11),"||",2),%mmmsqld(15)=$p(%mmmsqld(11),"||",3)
 i %mmmsqld(14)'="",%mmmsqld(2)'="",%mmmsqld(15)'="",$d(^TEPI(%mmmsqld(14),1,%mmmsqld(2),%mmmsqld(15)))
 e  g %0OBdun
 s %mmmsqld(26)=$g(^TEPI(%mmmsqld(14),1,%mmmsqld(2),%mmmsqld(15)))
 s HistoCyto=$p(%mmmsqld(26),"\",33) s supress=$p(%mmmsqld(26),"\",34)
 g:$zu(115,2)=0 %0OBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(11),"||",1),1,$p(%mmmsqld(11),"||",2),$p(%mmmsqld(11),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TEPI($p(%mmmsqld(11),"||",1),1,$p(%mmmsqld(11),"||",2),$p(%mmmsqld(11),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitTestSet for RowID value: "_%mmmsqld(11) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(14)=$p(%mmmsqld(11),"||"),%mmmsqld(2)=$p(%mmmsqld(11),"||",2),%mmmsqld(15)=$p(%mmmsqld(11),"||",3)
 i %mmmsqld(14)'="",%mmmsqld(2)'="",%mmmsqld(15)'="",$d(^TEPI(%mmmsqld(14),1,%mmmsqld(2),%mmmsqld(15)))
 e  g %0OCdun
 s %mmmsqld(33)=$g(^TEPI(%mmmsqld(14),1,%mmmsqld(2),%mmmsqld(15)))
 s HistoCyto=$p(%mmmsqld(33),"\",33) s supress=$p(%mmmsqld(33),"\",34)
%0OBuncommitted ;
 s %mmmsqld(3)=%mmmsqld(2)
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  s type="",%mmmsqld(3)="",synonym="" g %0OCp5
 s %mmmsqld(38)=$g(^TTAB("TS",%mmmsqld(3)))
 s type=$p(%mmmsqld(38),"\",13) s synonym=$p(%mmmsqld(38),"\",2)
%0OCp5 
 g:$zu(115,2)=0 %0OCuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TTAB("TS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  s type="",%mmmsqld(3)="",synonym="" g %0ODp1
 s %mmmsqld(43)=$g(^TTAB("TS",%mmmsqld(3)))
 s type=$p(%mmmsqld(43),"\",13) s synonym=$p(%mmmsqld(43),"\",2)
%0ODp1 
%0OCuncommitted ;
 s SQLCODE=0 g %0Oc
%0ODdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0OCdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0OBdun 
%0OAdun 
%0Oc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } q
%0Oerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Oc
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(18)=0,%mmmsqld(19)="",%mmmsqld(20)=0,%mmmsqld(21)="",%mmmsqld(22)=0,%mmmsqld(23)="",%mmmsqld(24)=0,%mmmsqld(25)="",%mmmsqld(26)=0,%mmmsqld(27)=""
 s %mmmsqld(16)=$g(Master)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(15)=%mmmsqld(16)
 i %mmmsqld(15)'="",$d(^TEPI(%mmmsqld(15)))
 e  g %0QBdun
 s %mmmsqld(30)=$g(^TEPI(%mmmsqld(15)))
 s %mmmsqld(1)=$p(%mmmsqld(30),"\",20) s %mmmsqld(4)=$p(%mmmsqld(30),"\",16) s %mmmsqld(7)=$p(%mmmsqld(30),"\",13)
 g:$zu(115,2)=0 %0QBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(15),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TEPI($p(%mmmsqld(15),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(15) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(15)'="",$d(^TEPI(%mmmsqld(15)))
 e  g %0QCdun
 s %mmmsqld(33)=$g(^TEPI(%mmmsqld(15)))
 s %mmmsqld(1)=$p(%mmmsqld(33),"\",20) s %mmmsqld(4)=$p(%mmmsqld(33),"\",16) s %mmmsqld(7)=$p(%mmmsqld(33),"\",13)
%0QBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("RH",%mmmsqld(2)))
 e  s inpat1="",%mmmsqld(2)="" g %0QCp4
 s %mmmsqld(38)=$g(^TTAB("RH",%mmmsqld(2)))
 s inpat1=$p(%mmmsqld(38),"\",16)
%0QCp4 
 g:$zu(115,2)=0 %0QCuncommitted i $zu(115,2)=1 l +^TTAB("RH",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^TTAB("RH",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Hospital for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("RH",%mmmsqld(2)))
 e  s inpat1="",%mmmsqld(2)="" g %0QDp1
 s %mmmsqld(43)=$g(^TTAB("RH",%mmmsqld(2)))
 s inpat1=$p(%mmmsqld(43),"\",16)
%0QDp1 
%0QCuncommitted ;
 s %mmmsqld(5)=%mmmsqld(4)
 i %mmmsqld(5)'="",$d(^TTAB("IC",%mmmsqld(5)))
 e  s inpat2="",%mmmsqld(5)="" g %0QDp4
 s %mmmsqld(48)=$g(^TTAB("IC",%mmmsqld(5)))
 s inpat2=$p(%mmmsqld(48),"\",2)
%0QDp4 
 g:$zu(115,2)=0 %0QDuncommitted i $zu(115,2)=1 l +^TTAB("IC",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(22)=1,%mmmsqld(23)=$name(^TTAB("IC",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_InitiationCode for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 5
 i %mmmsqld(5)'="",$d(^TTAB("IC",%mmmsqld(5)))
 e  s inpat2="",%mmmsqld(5)="" g %0QEp1
 s %mmmsqld(53)=$g(^TTAB("IC",%mmmsqld(5)))
 s inpat2=$p(%mmmsqld(53),"\",2)
%0QEp1 
%0QDuncommitted ;
 s %mmmsqld(8)=%mmmsqld(7)
 i %mmmsqld(8)'="",$d(^TTAB("DR",%mmmsqld(8)))
 e  s %mmmsqld(8)="",%mmmsqld(9)="" g %0QEp4
 s %mmmsqld(58)=$g(^TTAB("DR",%mmmsqld(8),0))
 s %mmmsqld(9)=$p(%mmmsqld(58),"\",7)
%0QEp4 
 g:$zu(115,2)=0 %0QEuncommitted i $zu(115,2)=1 l +^TTAB("DR",$p(%mmmsqld(8),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(24)=1,%mmmsqld(25)=$name(^TTAB("DR",$p(%mmmsqld(8),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Doctor for RowID value: "_%mmmsqld(8) ztrap "LOCK"  }
 ; asl MOD# 6
 i %mmmsqld(8)'="",$d(^TTAB("DR",%mmmsqld(8)))
 e  s %mmmsqld(8)="",%mmmsqld(9)="" g %0QFp1
 s %mmmsqld(63)=$g(^TTAB("DR",%mmmsqld(8),0))
 s %mmmsqld(9)=$p(%mmmsqld(63),"\",7)
%0QFp1 
%0QEuncommitted ;
 s %mmmsqld(10)=%mmmsqld(9)
 i %mmmsqld(10)'="",$d(^TTAB("SPC",%mmmsqld(10)))
 e  s conn2="",%mmmsqld(10)="" g %0QFp4
 s %mmmsqld(68)=$g(^TTAB("SPC",%mmmsqld(10)))
 s conn2=$p(%mmmsqld(68),"\",2)
%0QFp4 
 g:$zu(115,2)=0 %0QFuncommitted i $zu(115,2)=1 l +^TTAB("SPC",$p(%mmmsqld(10),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(26)=1,%mmmsqld(27)=$name(^TTAB("SPC",$p(%mmmsqld(10),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Specialty for RowID value: "_%mmmsqld(10) ztrap "LOCK"  }
 ; asl MOD# 7
 i %mmmsqld(10)'="",$d(^TTAB("SPC",%mmmsqld(10)))
 e  s conn2="",%mmmsqld(10)="" g %0QGp1
 s %mmmsqld(73)=$g(^TTAB("SPC",%mmmsqld(10)))
 s conn2=$p(%mmmsqld(73),"\",2)
%0QGp1 
%0QFuncommitted ;
 s SQLCODE=0 g %0Qc
%0QGdun i $zu(115,2)=1,$g(%mmmsqld(26))=1 { l -@%mmmsqld(27) s %mmmsqld(26)=0 }
%0QFdun i $zu(115,2)=1,$g(%mmmsqld(24))=1 { l -@%mmmsqld(25) s %mmmsqld(24)=0 }
%0QEdun i $zu(115,2)=1,$g(%mmmsqld(22))=1 { l -@%mmmsqld(23) s %mmmsqld(22)=0 }
%0QDdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
%0QCdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } i $zu(115,2)=1,$g(%mmmsqld(22))=1 { l -@%mmmsqld(23) } i $zu(115,2)=1,$g(%mmmsqld(24))=1 { l -@%mmmsqld(25) } i $zu(115,2)=1,$g(%mmmsqld(26))=1 { l -@%mmmsqld(27) } q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Qc
%0So n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Serr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(item)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("IB",%mmmsqld(3)))
 e  g %0SBdun
 s %mmmsqld(12)=$g(^TTAB("IB",%mmmsqld(3)))
 s exclude=$p(%mmmsqld(12),"\",6)
 g:$zu(115,2)=0 %0SBuncommitted i $zu(115,2)=1 l +^TTAB("IB",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("IB",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_BillingItem for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("IB",%mmmsqld(3)))
 e  g %0SCdun
 s %mmmsqld(17)=$g(^TTAB("IB",%mmmsqld(3)))
 s exclude=$p(%mmmsqld(17),"\",6)
%0SBuncommitted ;
 s SQLCODE=0 g %0Sc
%0SCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0SBdun 
%0SAdun 
%0Sc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Serr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Sc
%0Uo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Uerr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(8)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(7)=%mmmsqld(8)
 i %mmmsqld(7)'="",$d(^TEPI(%mmmsqld(7)))
 e  g %0UBdun
 s %mmmsqld(14)=$g(^TEPI(%mmmsqld(7)))
 s pc=$p(%mmmsqld(14),"\",7) s init=$p(%mmmsqld(14),"\",16) s date=$p(%mmmsqld(14),"\",10)
 g:$zu(115,2)=0 %0UBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(7),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TEPI($p(%mmmsqld(7),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(7) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(7)'="",$d(^TEPI(%mmmsqld(7)))
 e  g %0UCdun
 s %mmmsqld(17)=$g(^TEPI(%mmmsqld(7)))
 s pc=$p(%mmmsqld(17),"\",7) s init=$p(%mmmsqld(17),"\",16) s date=$p(%mmmsqld(17),"\",10)
%0UBuncommitted ;
 s SQLCODE=0 g %0Uc
%0UCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0UBdun 
%0UAdun 
%0Uc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Uerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Uc
%0Wo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Werr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(Master)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(4)=%mmmsqld(5)
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0WBdun
 s %mmmsqld(11)=$g(^TEPI(%mmmsqld(4)))
 s VISIT(12)=$p(%mmmsqld(11),"\",10) s VISIT(20)=$p(%mmmsqld(11),"\",18)
 g:$zu(115,2)=0 %0WBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(4),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TEPI($p(%mmmsqld(4),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(4) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0WCdun
 s %mmmsqld(14)=$g(^TEPI(%mmmsqld(4)))
 s VISIT(12)=$p(%mmmsqld(14),"\",10) s VISIT(20)=$p(%mmmsqld(14),"\",18)
%0WBuncommitted ;
 s SQLCODE=0 g %0Wc
%0WCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0WBdun 
%0WAdun 
%0Wc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Werr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Wc
%0Yo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Yerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0YBdun
 s %mmmsqld(10)=$g(^TEPI(%mmmsqld(3)))
 s date=$p(%mmmsqld(10),"\",10)
 g:$zu(115,2)=0 %0YBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TEPI($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0YCdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(3)))
 s date=$p(%mmmsqld(13),"\",10)
%0YBuncommitted ;
 s SQLCODE=0 g %0Yc
%0YCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0YBdun 
%0YAdun 
%0Yc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Yerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Yc
]]></Routine>
</Export>
