<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBPKRES" type="INT" languagemode="0"><![CDATA[
BVBPKRES        ; MVB Control data access for BB_PackResults   ; Compiled May 22, 2000 13:24:37 for Cache for Windows
 ; SP 9/11/95 
 ; 
 ; supported calls: 
 ; 
 ; $$open^BVBPKRES(parentID) 
 ; $$fetch^BVBPKRES(parentID) 
 ; $$close^BVBPKRES() 
 ; 
 ; $$select^BVBPKRES(RowID) 
 ; $$insert^BVBPKRES(parentID) 
 ; $$update^BVBPKRES(RowID) 
 ; $$delete^BVBPKRES(RowID) 
 ; 
declare  
 q 0 
 ; 
open(parentID)        d %PKRES0o 
 q 0 
 ; 
fetch(parentID)       n j 
 K PLIST 
 d %0Eo 
 s PLIST=$o(PLIST(""),-1) 
 ; 
 ; Adjust fields 
 i 'SQLCODE d adjust 
 ; 
 q SQLCODE 
 ; 
close() d %PKRES0c 
 q 0 
 ; 
select(RowID)   ; 
 k PLIST 
 d %0Go 
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust 
 q SQLCODE 
 ; 
selcode(RowID,tc)   ; 
 k PLIST 
 d %0Ho
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust 
 q SQLCODE 
 ; 
insert(parentID)        ; 
 S PLIST(0)=parentID 
 S PLIST(1)="" 
 ; Remove Childsub as a new one will be created 
 K PLIST(2) 
 d %0Io 
 ; 
 ; Now retrieve everything back to return to client 
 ; %ROWID is returned from INSERT 
 I 'SQLCODE q $$select(%ROWID) 
 ; 
 q SQLCODE 
 ; 
 ; 
update(RowID)   ; 
 d %0Jo 
 q SQLCODE 
 ; 
 ; 
delete(RowID)   ; 
 d %0Ko 
 q SQLCODE 
 ; 
 ; Adjust certain fields 
adjust n desref 
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q
%0ABs3 s %val=$$timeext^%qarzdt(%val,1) q
%0ABs4 s %val=$p("Pathologist|Authorise|Entered","|",$l($p("|P|A|E|","|"_%val_"|"),"|")) q
%PKRES0o s SQLCODE=$s($g(%PKRES0c):-101,1:0) q:SQLCODE'=0
 s %PKRES0c=1 k %PKRES0m
 s %PKRES0E=$zt,%PKRES0f=0,%PKRES0e=0,%PKRES0L=""
 s %PKRES0d(2)=$P(parentID,$C(1))
 s:%PKRES0d(2)="" %PKRES0d(2)=$E(parentID,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %PKRES0d(1)=$g(%PKRES0d(2))
 i %PKRES0d(1)="" g %0ABdun
 s $P(%PKRES0d(5),$C(1))=""
%0ABk1 s $P(%PKRES0d(5),$C(1))=$o(^BB("PK",%PKRES0d(1),"RES",$P(%PKRES0d(5),$C(1))))
 i $P(%PKRES0d(5),$C(1))="" g %0ABdun
 i 1>$P(%PKRES0d(5),$C(1)),$P(%PKRES0d(5),$C(1))=+$P(%PKRES0d(5),$C(1)) g %0ABk1
 i $P(%PKRES0d(5),$C(1))'=+$P(%PKRES0d(5),$C(1)) g %0ABdun
 s %PKRES0n=$g(^BB("PK",%PKRES0d(1),"RES",$P(%PKRES0d(5),$C(1))))
 s %PKRES0d(6)=$p(%PKRES0n,"^",1) s %PKRES0d(7)=$p(%PKRES0n,"^",2) s %PKRES0d(8)=$p(%PKRES0n,"^",3) s %PKRES0d(9)=$p(%PKRES0n,"^",4) s %PKRES0d(10)=$p(%PKRES0n,"^",5) s %PKRES0d(11)=$p(%PKRES0n,"^",6) s %PKRES0d(12)=$p(%PKRES0n,"^",7) s %PKRES0d(13)=$p(%PKRES0n,"^",8) s %PKRES0d(14)=$p(%PKRES0n,"^",9)
 s %PKRES0d(4)=(%PKRES0d(1))_"||"_($P(%PKRES0d(5),$C(1)))
 s %val=$P(%PKRES0d(5),$C(1)) d %0ABs1:%val'="" s $P(%PKRES0d(5),$C(1),2)=%val
 s %val=$P(%PKRES0d(6),$C(1)) d %0ABs2:%val'="" s $P(%PKRES0d(6),$C(1),2)=%val
 s %val=$P(%PKRES0d(7),$C(1)) d %0ABs3:%val'="" s $P(%PKRES0d(7),$C(1),2)=%val
 s %val=$P(%PKRES0d(9),$C(1)) d %0ABs2:%val'="" s $P(%PKRES0d(9),$C(1),2)=%val
 s %val=$P(%PKRES0d(10),$C(1)) d %0ABs3:%val'="" s $P(%PKRES0d(10),$C(1),2)=%val
 s %val=$P(%PKRES0d(14),$C(1)) d %0ABs4:%val'="" s $P(%PKRES0d(14),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %PKRES0f=%PKRES0f+1 s %PKRES0c=10 q
%PKRES0f i '$g(%PKRES0c) s SQLCODE=-102 q
 i %PKRES0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%PKRES0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %PKRES0c=100 q
%PKRES0c i '$g(%PKRES0c) s SQLCODE=-102 q
 k %PKRES0c,%PKRES0d,%PKRES0e,%PKRES0E,%PKRES0f,%PKRES0l,%PKRES0L,%PKRES0n,%PKRES0r,%PKRES0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%PKRES0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Eo d %PKRES0f q:SQLCODE'=0
 s PLIST(0)=%PKRES0d(1),PLIST(1)=%PKRES0d(4),PLIST(2)=%PKRES0d(5),PLIST(3)=%PKRES0d(6),PLIST(4)=%PKRES0d(7),PLIST(5)=%PKRES0d(8),PLIST(6)=%PKRES0d(9),PLIST(7)=%PKRES0d(10),PLIST(8)=%PKRES0d(11),PLIST(9)=%PKRES0d(12),PLIST(10)=%PKRES0d(13),PLIST(11)=%PKRES0d(14)
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(16)=$p($g(%mmmsqld(3)),"||",1,1),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(16)'="",$P(PLIST(2),$C(1))'="",$d(^BB("PK",%mmmsqld(16),"RES",$P(PLIST(2),$C(1))))
 i '$t
 e  i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1))
 i  g %0GBdun
 s %mmmsqln=$g(^BB("PK",%mmmsqld(16),"RES",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1) s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s PLIST(8)=$p(%mmmsqln,"^",6) s PLIST(9)=$p(%mmmsqln,"^",7) s PLIST(10)=$p(%mmmsqln,"^",8) s PLIST(11)=$p(%mmmsqln,"^",9)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(3),$C(1)) d %0ABs2:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs3:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(6),$C(1)) d %0ABs2:%val'="" s $P(PLIST(6),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs3:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(11),$C(1)) d %0ABs4:%val'="" s $P(PLIST(11),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1)),%mmmsqld(5)=$P(tc,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s:%mmmsqld(5)="" %mmmsqld(5)=$E(tc,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(0)=$g(%mmmsqld(3))
 i PLIST(0)="" g %0HBdun
 s $P(PLIST(2),$C(1))=""
%0HBk1 s $P(PLIST(2),$C(1))=$o(^BB("PK",PLIST(0),"RES",$P(PLIST(2),$C(1))))
 i $P(PLIST(2),$C(1))="" g %0HBdun
 i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1)) g %0HBk1
 i $P(PLIST(2),$C(1))'=+$P(PLIST(2),$C(1)) g %0HBdun
 s %mmmsqln=$g(^BB("PK",PLIST(0),"RES",$P(PLIST(2),$C(1))))
 s PLIST(9)=$p(%mmmsqln,"^",7)
 g:'((PLIST(9))=(%mmmsqld(5))) %0HBk1
 s PLIST(3)=$p(%mmmsqln,"^",1) s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s PLIST(8)=$p(%mmmsqln,"^",6) s PLIST(10)=$p(%mmmsqln,"^",8) s PLIST(11)=$p(%mmmsqln,"^",9)
 s PLIST(1)=(PLIST(0))_"||"_($P(PLIST(2),$C(1)))
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(3),$C(1)) d %0ABs2:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs3:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(6),$C(1)) d %0ABs2:%val'="" s $P(PLIST(6),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs3:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(11),$C(1)) d %0ABs4:%val'="" s $P(PLIST(11),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
 g %0HBk1
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %insert,icol,ir
 f icol=0:1:11 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt2621("1")
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^BB("PK",%mmmsqld(4),"RES",$P(%mmmsqld(5),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(5),$C(1)),$P(%mmmsqld(5),$C(1))=+$P(%mmmsqld(5),$C(1))
 i  g %0JBdun
 k %data,%edit
 f icol=0:1:11 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt2621(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0JBdun 
%0JAdun 
 q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),$P(%mmmsqld(4),$C(1))=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",$P(%mmmsqld(4),$C(1))'="",$d(^BB("PK",%mmmsqld(3),"RES",$P(%mmmsqld(4),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(4),$C(1)),$P(%mmmsqld(4),$C(1))=+$P(%mmmsqld(4),$C(1))
 i  g %0KBdun
 d delete^mt2621(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0KBdun 
%0KAdun 
 q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
]]></Routine>
</Export>
