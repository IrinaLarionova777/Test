<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTCC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTCC ; IG 1/5/98 ; LVB Control data access for CTTCC CT_TestCodeFieldCalc
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTTCC(par)
 ; $$delete^LVBCTTCC(ROWID,Comments)
 ; $$update^LVBCTTCC(ROWID)
 ; $$select^LVBCTTCC(ROWID,skip)
 ; $$open^LVBCTTCC(par,skip)
 ; $$fetch^LVBCTTCC(par,skip)
 ; $$fetchall^LVBCTTCC(par,skip)
 ; $$close^LVBCTTCC()
 ; $$compute^LVBCTTCC(param,data,formula,required,vtsRID)
 ; $$listall^LVBCTTCC(ts)
 ;
  ;---&sql(DECLARE CTTCC CURSOR FOR SELECT * FROM CT_TestCodeFieldCalc
   ;---         WHERE CTTCC_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTTCC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTCC0o
 q 0
 ;
fetch(par,skip) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTTCC INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
fetchall(par,skip) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 f xxx=1:1:100 s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE CTTCC)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTCC0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestCodeFieldCalc WHERE CTTCC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO CT_TestCodeFieldCalc VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_TestCodeFieldCalc VALUES :PLIST() WHERE CTTCC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_TestCodeFieldCalc WHERE CTTCC_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s PLIST(3)=$tr(PLIST(3)," ")
 i $e(PLIST(3))="=" s PLIST(3)=$e(PLIST(3),2,$l(PLIST(3)))
 q
 ; Adjust certain fields
adjust d PostSQL^SSUTIL4("")
 q
compute(param,data,formula,required,vtsRID,source) n (PLIST,param,data,formula,required,vtsRID,source) k PLIST
 s param=$g(param),data=$g(data),formula=$g(formula),required=$g(required),vtsRID=$g(vtsRID),source=$g(source),(ok,err)="",$zt="err^"_$zn
 ; change all variables in formula
 f j=1:1:$l(param,"^") s var1=$p(param,"^",j),(var2,var2Old)=$p(data,"^",j) i $l(var1) d  i ok q
 .s format=$$seldata^LVBCTTC(var1,5)
 .s sFormat=$$seldata^LVBCTTC(source,5),sDecimal=$e(sFormat,2,$l(sFormat))
 .i " M N "[(" "_$e(format)_" "),$l(var2),'$$select^LVBCTRC(var2,"Y") s var2=""
 .i $e(var2)=">" s var2=$e(var2,2,99)+0.0000001
 .i $e(var2)="<" s var2=$e(var2,2,99)-0.0000001
 .i required="Y",var2="" s ok=1 q
 .i $e(formula,1,2)'="$$",var2="" s:" M N "[(" "_$e(format)_" ") var2=+var2
 .i $e(formula,1,2)'="$$" s x=0 f  s x=$f(formula,"{"_var1_"}",x) q:'x  s formula=$e(formula,1,x-$l("{"_var1_"}")-1)_""""_var2Old_""""_$e(formula,x,$l(formula)),x=x-$l("{"_var1_"}")+$l(""""_var2Old_"""")
 .i $e(formula,1,2)'="$$" s x=0 f  s x=$f(formula,var1,x) q:'x  s formula=$e(formula,1,x-$l(var1)-1)_""""_var2_""""_$e(formula,x,$l(formula)),x=x-$l(var1)+$l(""""_var2_"""")
 .i $e(formula,1,2)="$$" s x=0 f  s x=$f(formula,"{"_var1_"}",x) q:'x  s formula=$e(formula,1,x-$l("{"_var1_"}")-1)_var2Old_$e(formula,x,$l(formula)),x=x-$l("{"_var1_"}")+$l(var2Old)
 .i $e(formula,1,2)="$$" s x=0 f  s x=$f(formula,var1,x) q:'x  s formula=$e(formula,1,x-$l(var1)-1)_var2_$e(formula,x,$l(formula)),x=x-$l(var1)+$l(var2)
 i $e(formula,1,2)="$$" s formula=$tr(formula,"_","^")
 i 'ok x "s err="_formula i " M N "[(" "_$e(sFormat)_" "),$l(err),$l(sDecimal),$e(err)'=">",$e(err)'="<",$$select^LVBCTRC(err,"Y") s err=$j(err,0,sDecimal)
err k PLIST s PLIST(1)=err
 s PLIST=$o(PLIST(""),-1)
 q 0
listall(ts) N (ts,PLIST) K ^TMP($zn,$j) s ts=$g(ts)
 i $$getall1^LVBCTTC(ts)
 m ^TMP($zn,$j,1)=PLIST
 s xx="" f  s xx=$o(^TMP($zn,$j,1,xx)) q:xx=""  s ti=$p(^(xx),$c(2),1) d
 .i '$$select(ti_"||"_ts) d
 ..s cnt=$o(^TMP($zn,$j,2,""),-1)+1
 ..s ^TMP($zn,$j,2,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,2,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST M PLIST=^TMP($zn,$j,2)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTTCC0o s $zt="%CTTCC0E" s SQLCODE=$s($g(%CTTCC0c):-101,1:0) q:SQLCODE'=0  s %CTTCC0d(10)=0 s %CTTCC0d(11)=0,%CTTCC0d(12)=""
 s %CTTCC0d(7)=$g(par)
 s %CTTCC0c=1 q
%CTTCC0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTCC0c,%CTTCC0d,%CTTCC0E,%CTTCC0l,%CTTCC0n,%CTTCC0R,%CTTCC0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTTCC0d(1)=%CTTCC0d(7)
 i %CTTCC0d(1)="" g %0ABdun
 s %CTTCC0d(3)=""
%0ABk1 s %CTTCC0d(3)=$o(^TTAB("TC",%CTTCC0d(1),3,%CTTCC0d(3)))
 i %CTTCC0d(3)="" g %0ABdun
 s %CTTCC0d(4)=$g(^TTAB("TC",%CTTCC0d(1),3,%CTTCC0d(3)))
 s %CTTCC0d(20)=$g(^TTAB("TC",%CTTCC0d(1),3,%CTTCC0d(3),"EXTRA"))
 s %CTTCC0d(5)=$p(%CTTCC0d(20),"\",1) s %CTTCC0d(6)=$p(%CTTCC0d(20),"\",2)
 s %CTTCC0d(2)=(%CTTCC0d(1))_"||"_(%CTTCC0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TC",$p(%CTTCC0d(2),"||",1),3,$p(%CTTCC0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTTCC0d(11)=1,%CTTCC0d(12)=$name(^TTAB("TC",$p(%CTTCC0d(2),"||",1),3,$p(%CTTCC0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestCodeFieldCalc for RowID value: "_%CTTCC0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTCC0d(9)=$p(%CTTCC0d(2),"||"),%CTTCC0d(3)=$p(%CTTCC0d(2),"||",2)
 i %CTTCC0d(9)'="",%CTTCC0d(3)'="",$d(^TTAB("TC",%CTTCC0d(9),3,%CTTCC0d(3)))
 e  g %0ACdun
 s %CTTCC0d(4)=$g(^TTAB("TC",%CTTCC0d(9),3,%CTTCC0d(3)))
 s %CTTCC0d(28)=$g(^TTAB("TC",%CTTCC0d(9),3,%CTTCC0d(3),"EXTRA"))
 s %CTTCC0d(5)=$p(%CTTCC0d(28),"\",1) s %CTTCC0d(6)=$p(%CTTCC0d(28),"\",2)
 s %CTTCC0d(1)=$p(%CTTCC0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTCC0d(10)=%CTTCC0d(10)+1,%ROWCOUNT=%CTTCC0d(10),%ROWID=%CTTCC0d(2),%CTTCC0c=10 q
%CTTCC0f i '$g(%CTTCC0c) { s SQLCODE=-102 q  } i %CTTCC0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTCC0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTCC0d(10),%CTTCC0c=100 q  } g %0Afirst:%CTTCC0c=1
%0ACdun i $zu(115,2)=1,$g(%CTTCC0d(11))=1 { l -@%CTTCC0d(12) s %CTTCC0d(11)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTTCC0d(10),SQLCODE=100,%CTTCC0c=100 q
%CTTCC0c i '$g(%CTTCC0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTCC0d(10)),1:0)
 i $zu(115,2)=1,$g(%CTTCC0d(11))=1 { l -@%CTTCC0d(12) } k %CTTCC0c,%CTTCC0d,%CTTCC0E,%CTTCC0l,%CTTCC0n,%CTTCC0R,%CTTCC0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTCC0c=100 q
%0Do d %CTTCC0f q:SQLCODE'=0
 s PLIST(0)=%CTTCC0d(1),PLIST(1)=%CTTCC0d(2),PLIST(2)=%CTTCC0d(3),PLIST(3)=%CTTCC0d(4),PLIST(4)=%CTTCC0d(5),PLIST(5)=%CTTCC0d(6)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(8)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(8)
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^TTAB("TC",%mmmsqld(10),3,PLIST(2)))
 e  g %0FBdun
 s PLIST(3)=$g(^TTAB("TC",%mmmsqld(10),3,PLIST(2)))
 s %mmmsqld(20)=$g(^TTAB("TC",%mmmsqld(10),3,PLIST(2),"EXTRA"))
 s PLIST(4)=$p(%mmmsqld(20),"\",1) s PLIST(5)=$p(%mmmsqld(20),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("TC",$p(PLIST(1),"||",1),3,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TTAB("TC",$p(PLIST(1),"||",1),3,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestCodeFieldCalc for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^TTAB("TC",%mmmsqld(10),3,PLIST(2)))
 e  g %0FCdun
 s PLIST(3)=$g(^TTAB("TC",%mmmsqld(10),3,PLIST(2)))
 s %mmmsqld(28)=$g(^TTAB("TC",%mmmsqld(10),3,PLIST(2),"EXTRA"))
 s PLIST(4)=$p(%mmmsqld(28),"\",1) s PLIST(5)=$p(%mmmsqld(28),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestCodeFieldCalc.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TC",%mmmsqld(4),3,%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(15)=$$%getlock^User.CTTestCodeFieldCalc.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TC",%mmmsqld(4),3,%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestCodeFieldCalc.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestCodeFieldCalc.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestCodeFieldCalc.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTTestCodeFieldCalc.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("TC",%mmmsqld(3),3,%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(14)=$$%getlock^User.CTTestCodeFieldCalc.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("TC",%mmmsqld(3),3,%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.CTTestCodeFieldCalc.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTTestCodeFieldCalc.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTTestCodeFieldCalc.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTTestCodeFieldCalc.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
