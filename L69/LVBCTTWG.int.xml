<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTWG" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTWG ; IG 1/5/98 ;MVB Control code access for CT_TestSet_WorkGroup
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTTWG(ROWID,skip)
 ; $$seldata^LVBCTTWG(ROWID,data)
 ; $$open^LVBCTTWG(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTTWG(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTTWG(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTTWG(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTTWG()
 ; $$insert^LVBCTTWG()
 ; $$update^LVBCTTWG(ROWID)
 ; $$delete^LVBCTTWG(ROWID,Comments)
 ; $$getall^LVBCTTWG(cum)
 ;
  ;---&SQL(DECLARE CTTWG0 CURSOR FOR SELECT * FROM CT_TestSet_WorkGroup)
   ;--- ** SQL PUBLIC Variables: SQLCODE
  ;---&SQL(DECLARE CTTWG1 CURSOR FOR SELECT * FROM CT_TestSet_WorkGroup
   ;---         WHERE CTTWG_CumulativeGroup = 'Y')
   ;--- ** SQL PUBLIC Variables: SQLCODE
 ;
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_TestSet_WorkGroup VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 i 'SQLCODE,$p($g(PLIST(5)),$c(1))="Y" d post(.PLIST)
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CT_TestSet_WorkGroup VALUES :PLIST() WHERE CTTWG_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 i 'SQLCODE,$p($g(PLIST(5)),$c(1))="Y" d post(.PLIST)
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_TestSet_WorkGroup WHERE CTTWG_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Io
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),cum=$g(cum)
  ;---i cum'="Y" &SQL(OPEN CTTWG0)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i cum'="Y" Do %CTTWG00o
  ;---i cum="Y" &SQL(OPEN CTTWG1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i cum="Y" Do %CTTWG10o
 q 0
 ; fetch the data
fetch(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s skip=$g(skip),cum=$g(cum)
  ;---i cum'="Y" &SQL(FETCH CTTWG0 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i cum'="Y" Do %0Mo
  ;---i cum="Y" &SQL(FETCH CTTWG1 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i cum="Y" Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),cum=$g(cum) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,cum) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,cum,p2,p3,p4,p5,p6,p7,p8,p9) n (skip,cum,PLIST) s skip=$g(skip),cum=$g(cum) k ^TMP($zn,$j)
 i $$open(skip,cum)
 f cnt=1:1 q:$$fetch(skip,cum)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE CTTWG0)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTWG00c
  ;---&SQL(CLOSE CTTWG1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTWG10c
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s ROWID=$g(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_TestSet_WorkGroup WHERE CTTWG_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Qo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=14 s result=$p($g(^TTAB("GR",ROWID)),"\",10) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("11,12","")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ; post-filing adjustments
post(plist) n (plist)
 s par=$p($p($g(plist(1)),$c(1)),"||")
 i $l(par) s ts="" f  s ts=$o(^TTAB("GR",par,"TS",ts)) q:ts=""  i '$$select^LVBCTTS(ts,"Y") d
 .s PLIST(7)=$g(plist(6))
 .s PLIST(18)=$g(plist(9))
 .s PLIST(21)=$g(plist(7))
 .s PLIST(43)=$g(plist(8))
 .i $$update^LVBCTTS(ts)
 q
 ; post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("11,12")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(4))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDEP(plist(4),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(4)=X k plist
 i $g(PLIST(7))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTRG(plist(7),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(7)=X k plist
 i $g(PLIST(8))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTRG(plist(8),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(8)=X k plist
 i $g(PLIST(13))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDS(plist(13),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(13)=X k plist
 q
getall(cum) n (cum,PLIST) k ^TMP($zn,$j) s cum=$g(cum)
 i $$open("Y",cum)
 f cnt=1:1 q:$$fetch("Y",cum)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=$g(PLIST(j))
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTTWG00o s $zt="%CTTWG00E" s SQLCODE=$s($g(%CTTWG00c):-101,1:0) q:SQLCODE'=0  s %CTTWG00d(15)=0 s %CTTWG00d(16)=0,%CTTWG00d(17)=""
 s %CTTWG00c=1 q
%CTTWG00E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTWG00c,%CTTWG00d,%CTTWG00E,%CTTWG00l,%CTTWG00n,%CTTWG00R,%CTTWG00Z q
%0Afirst 
 ; asl MOD# 2
 s %CTTWG00d(1)=""
%0ABk1 s %CTTWG00d(1)=$o(^TTAB("GR",%CTTWG00d(1)))
 i %CTTWG00d(1)="" g %0ABdun
 s %CTTWG00d(22)=$g(^TTAB("GR",%CTTWG00d(1)))
 s %CTTWG00d(2)=$p(%CTTWG00d(22),"\",1) s %CTTWG00d(4)=$p(%CTTWG00d(22),"\",3) s %CTTWG00d(5)=$p(%CTTWG00d(22),"\",4) s %CTTWG00d(6)=$p(%CTTWG00d(22),"\",6) s %CTTWG00d(7)=$p(%CTTWG00d(22),"\",7) s %CTTWG00d(8)=$p(%CTTWG00d(22),"\",5) s %CTTWG00d(9)=$p(%CTTWG00d(22),"\",8) s %CTTWG00d(13)=$p(%CTTWG00d(22),"\",10)
 s %CTTWG00d(11)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG00d(1),"END",0)) s $li(%CTTWG00d(11),%irep)=$g(^(%irep))
 s %CTTWG00d(10)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG00d(1),"START",0)) s $li(%CTTWG00d(10),%irep)=$g(^(%irep))
 s %CTTWG00d(3)=$$CT004^at238($g(%CTTWG00d(1))) s %CTTWG00d(12)=$$CT013^at238($g(%CTTWG00d(1)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("GR",$p(%CTTWG00d(1),"||",1))#"S":$zu(115,4) i $t { s %CTTWG00d(16)=1,%CTTWG00d(17)=$name(^TTAB("GR",$p(%CTTWG00d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet_WorkGroup for RowID value: "_%CTTWG00d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 i %CTTWG00d(1)'="",$d(^TTAB("GR",%CTTWG00d(1)))
 e  g %0ACdun
 s %CTTWG00d(27)=$g(^TTAB("GR",%CTTWG00d(1)))
 s %CTTWG00d(2)=$p(%CTTWG00d(27),"\",1) s %CTTWG00d(4)=$p(%CTTWG00d(27),"\",3) s %CTTWG00d(5)=$p(%CTTWG00d(27),"\",4) s %CTTWG00d(6)=$p(%CTTWG00d(27),"\",6) s %CTTWG00d(7)=$p(%CTTWG00d(27),"\",7) s %CTTWG00d(8)=$p(%CTTWG00d(27),"\",5) s %CTTWG00d(9)=$p(%CTTWG00d(27),"\",8) s %CTTWG00d(13)=$p(%CTTWG00d(27),"\",10)
 s %CTTWG00d(11)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG00d(1),"END",0)) s $li(%CTTWG00d(11),%irep)=$g(^(%irep))
 s %CTTWG00d(10)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG00d(1),"START",0)) s $li(%CTTWG00d(10),%irep)=$g(^(%irep))
 s %CTTWG00d(3)=$$CT004^at238($g(%CTTWG00d(1))) s %CTTWG00d(12)=$$CT013^at238($g(%CTTWG00d(1)))
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTWG00d(15)=%CTTWG00d(15)+1,%ROWCOUNT=%CTTWG00d(15),%ROWID=%CTTWG00d(1),%CTTWG00c=10 q
%CTTWG00f i '$g(%CTTWG00c) { s SQLCODE=-102 q  } i %CTTWG00c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTWG00d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTWG00d(15),%CTTWG00c=100 q  } g %0Afirst:%CTTWG00c=1
%0ACdun i $zu(115,2)=1,$g(%CTTWG00d(16))=1 { l -@%CTTWG00d(17) s %CTTWG00d(16)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTTWG00d(15),SQLCODE=100,%CTTWG00c=100 q
%CTTWG00c i '$g(%CTTWG00c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTWG00d(15)),1:0)
 i $zu(115,2)=1,$g(%CTTWG00d(16))=1 { l -@%CTTWG00d(17) } k %CTTWG00c,%CTTWG00d,%CTTWG00E,%CTTWG00l,%CTTWG00n,%CTTWG00R,%CTTWG00Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTWG00c=100 q
%CTTWG10o s $zt="%CTTWG10E" s SQLCODE=$s($g(%CTTWG10c):-101,1:0) q:SQLCODE'=0  s %CTTWG10d(20)=0 s %CTTWG10d(21)=0,%CTTWG10d(22)=""
 s %CTTWG10d(14)="Y"
 s %CTTWG10d(17)=$zu(28,%CTTWG10d(14),7)
 s %CTTWG10c=1 q
%CTTWG10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTWG10c,%CTTWG10d,%CTTWG10E,%CTTWG10l,%CTTWG10n,%CTTWG10R,%CTTWG10Z q
%0Cfirst 
 ; asl MOD# 2
 s %CTTWG10d(1)=""
%0CBk1 s %CTTWG10d(1)=$o(^TTAB("GR",%CTTWG10d(1)))
 i %CTTWG10d(1)="" g %0CBdun
 s %CTTWG10d(27)=$g(^TTAB("GR",%CTTWG10d(1)))
 s %CTTWG10d(2)=$p(%CTTWG10d(27),"\",1) s %CTTWG10d(4)=$p(%CTTWG10d(27),"\",3) s %CTTWG10d(5)=$p(%CTTWG10d(27),"\",4) s %CTTWG10d(6)=$p(%CTTWG10d(27),"\",6) s %CTTWG10d(7)=$p(%CTTWG10d(27),"\",7) s %CTTWG10d(8)=$p(%CTTWG10d(27),"\",5) s %CTTWG10d(9)=$p(%CTTWG10d(27),"\",8) s %CTTWG10d(13)=$p(%CTTWG10d(27),"\",10)
 s %CTTWG10d(11)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG10d(1),"END",0)) s $li(%CTTWG10d(11),%irep)=$g(^(%irep))
 s %CTTWG10d(10)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG10d(1),"START",0)) s $li(%CTTWG10d(10),%irep)=$g(^(%irep))
 s %CTTWG10d(3)=$$CT004^at238($g(%CTTWG10d(1))) s %CTTWG10d(12)=$$CT013^at238($g(%CTTWG10d(1))) s %CTTWG10d(16)=$zu(28,%CTTWG10d(4),7)
 g:'(%CTTWG10d(16)=%CTTWG10d(17)) %0CBk1
 g:'(%CTTWG10d(16)'=" ") %0CBk1
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("GR",$p(%CTTWG10d(1),"||",1))#"S":$zu(115,4) i $t { s %CTTWG10d(21)=1,%CTTWG10d(22)=$name(^TTAB("GR",$p(%CTTWG10d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet_WorkGroup for RowID value: "_%CTTWG10d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTWG10d(18)=$lb(""_%CTTWG10d(16))
 i %CTTWG10d(1)'="",$d(^TTAB("GR",%CTTWG10d(1)))
 e  g %0CCdun
 s %CTTWG10d(32)=$g(^TTAB("GR",%CTTWG10d(1)))
 s %CTTWG10d(2)=$p(%CTTWG10d(32),"\",1) s %CTTWG10d(4)=$p(%CTTWG10d(32),"\",3) s %CTTWG10d(5)=$p(%CTTWG10d(32),"\",4) s %CTTWG10d(6)=$p(%CTTWG10d(32),"\",6) s %CTTWG10d(7)=$p(%CTTWG10d(32),"\",7) s %CTTWG10d(8)=$p(%CTTWG10d(32),"\",5) s %CTTWG10d(9)=$p(%CTTWG10d(32),"\",8) s %CTTWG10d(13)=$p(%CTTWG10d(32),"\",10)
 s %CTTWG10d(11)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG10d(1),"END",0)) s $li(%CTTWG10d(11),%irep)=$g(^(%irep))
 s %CTTWG10d(10)="" f %irep=1:1:$g(^TTAB("GR",%CTTWG10d(1),"START",0)) s $li(%CTTWG10d(10),%irep)=$g(^(%irep))
 s %CTTWG10d(3)=$$CT004^at238($g(%CTTWG10d(1))) s %CTTWG10d(12)=$$CT013^at238($g(%CTTWG10d(1))) s %CTTWG10d(16)=$zu(28,%CTTWG10d(4),7)
 s %CTTWG10d(19)=$lb(""_%CTTWG10d(16))
 g:%CTTWG10d(18)'=%CTTWG10d(19) %0CCdun
%0CBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTWG10d(20)=%CTTWG10d(20)+1,%ROWCOUNT=%CTTWG10d(20),%ROWID=%CTTWG10d(1),%CTTWG10c=10 q
%CTTWG10f i '$g(%CTTWG10c) { s SQLCODE=-102 q  } i %CTTWG10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%CTTWG10d(20))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTWG10d(20),%CTTWG10c=100 q  } g %0Cfirst:%CTTWG10c=1
%0CCdun i $zu(115,2)=1,$g(%CTTWG10d(21))=1 { l -@%CTTWG10d(22) s %CTTWG10d(21)=0 }
 g %0CBk1
%0CBdun 
%0CAdun 
 s %ROWCOUNT=%CTTWG10d(20),SQLCODE=100,%CTTWG10c=100 q
%CTTWG10c i '$g(%CTTWG10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTWG10d(20)),1:0)
 i $zu(115,2)=1,$g(%CTTWG10d(21))=1 { l -@%CTTWG10d(22) } k %CTTWG10c,%CTTWG10d,%CTTWG10E,%CTTWG10l,%CTTWG10n,%CTTWG10R,%CTTWG10Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTWG10c=100 q
%0Eo n %i,icol,ir
 f icol=0:1:14 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestSetWorkGroup.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("GR",%mmmsqld(2)))
 e  g %0GBdun
 s %mmmsqld(10)=$$%getlock^User.CTTestSetWorkGroup.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("GR",%mmmsqld(2)))
 e  g %0GCdun
 k %data
 f icol=0:1:14 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestSetWorkGroup.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTTestSetWorkGroup.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTTestSetWorkGroup.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTTestSetWorkGroup.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("GR",%mmmsqld(1)))
 e  g %0IBdun
 s %mmmsqld(9)=$$%getlock^User.CTTestSetWorkGroup.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("GR",%mmmsqld(1)))
 e  g %0ICdun
 d %delete^User.CTTestSetWorkGroup.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTTestSetWorkGroup.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTTestSetWorkGroup.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTTestSetWorkGroup.T1(%mmmsqld(1)) g %0Ic
%0Mo d %CTTWG00f q:SQLCODE'=0
 s PLIST(1)=%CTTWG00d(1),PLIST(2)=%CTTWG00d(1),PLIST(3)=%CTTWG00d(2),PLIST(4)=%CTTWG00d(3),PLIST(5)=%CTTWG00d(4),PLIST(6)=%CTTWG00d(5),PLIST(7)=%CTTWG00d(6),PLIST(8)=%CTTWG00d(7),PLIST(9)=%CTTWG00d(8),PLIST(10)=%CTTWG00d(9),PLIST(11)=%CTTWG00d(10),PLIST(12)=%CTTWG00d(11),PLIST(13)=%CTTWG00d(12),PLIST(14)=%CTTWG00d(13)
 q
%0No d %CTTWG10f q:SQLCODE'=0
 s PLIST(1)=%CTTWG10d(1),PLIST(2)=%CTTWG10d(1),PLIST(3)=%CTTWG10d(2),PLIST(4)=%CTTWG10d(3),PLIST(5)=%CTTWG10d(4),PLIST(6)=%CTTWG10d(5),PLIST(7)=%CTTWG10d(6),PLIST(8)=%CTTWG10d(7),PLIST(9)=%CTTWG10d(8),PLIST(10)=%CTTWG10d(9),PLIST(11)=%CTTWG10d(10),PLIST(12)=%CTTWG10d(11),PLIST(13)=%CTTWG10d(12),PLIST(14)=%CTTWG10d(13)
 q
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(17)=0,%mmmsqld(18)=""
 s %mmmsqld(15)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(15)
 i PLIST(2)'="",$d(^TTAB("GR",PLIST(2)))
 e  g %0QBdun
 s %mmmsqld(23)=$g(^TTAB("GR",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4) s PLIST(7)=$p(%mmmsqld(23),"\",6) s PLIST(8)=$p(%mmmsqld(23),"\",7) s PLIST(9)=$p(%mmmsqld(23),"\",5) s PLIST(10)=$p(%mmmsqld(23),"\",8) s PLIST(14)=$p(%mmmsqld(23),"\",10)
 s PLIST(12)="" f %irep=1:1:$g(^TTAB("GR",PLIST(2),"END",0)) s $li(PLIST(12),%irep)=$g(^(%irep))
 s PLIST(11)="" f %irep=1:1:$g(^TTAB("GR",PLIST(2),"START",0)) s $li(PLIST(11),%irep)=$g(^(%irep))
 s PLIST(4)=$$CT004^at238($g(PLIST(2))) s PLIST(13)=$$CT013^at238($g(PLIST(2)))
 g:$zu(115,2)=0 %0QBuncommitted i $zu(115,2)=1 l +^TTAB("GR",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(17)=1,%mmmsqld(18)=$name(^TTAB("GR",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet_WorkGroup for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("GR",PLIST(2)))
 e  g %0QCdun
 s %mmmsqld(28)=$g(^TTAB("GR",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",1) s PLIST(5)=$p(%mmmsqld(28),"\",3) s PLIST(6)=$p(%mmmsqld(28),"\",4) s PLIST(7)=$p(%mmmsqld(28),"\",6) s PLIST(8)=$p(%mmmsqld(28),"\",7) s PLIST(9)=$p(%mmmsqld(28),"\",5) s PLIST(10)=$p(%mmmsqld(28),"\",8) s PLIST(14)=$p(%mmmsqld(28),"\",10)
 s PLIST(12)="" f %irep=1:1:$g(^TTAB("GR",PLIST(2),"END",0)) s $li(PLIST(12),%irep)=$g(^(%irep))
 s PLIST(11)="" f %irep=1:1:$g(^TTAB("GR",PLIST(2),"START",0)) s $li(PLIST(11),%irep)=$g(^(%irep))
 s PLIST(4)=$$CT004^at238($g(PLIST(2))) s PLIST(13)=$$CT013^at238($g(PLIST(2)))
%0QBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Qc
%0QCdun i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) s %mmmsqld(17)=0 }
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) } q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Qc
]]></Routine>
</Export>
