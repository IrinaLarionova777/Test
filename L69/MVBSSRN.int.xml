<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSSRN" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSSRN ; IG 29/4/98 ; MVB Control code access for SS_Report_HeaderNonStand
 ;
 ; supported calls:
 ;
 ; $$select^MVBSSRN(ROWID,skip)
 ; $$open^MVBSSRN(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSSRN(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSSRN(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSSRN(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSSRN()
 ; $$insert^MVBSSRN()
 ; $$update^MVBSSRN(ROWID)
 ; $$delete^MVBSSRN(ROWID,Comments)
 ; $$getall^MVBSSRN()
 ;
  ;---&SQL(DECLARE SSRN CURSOR FOR SELECT * FROM SS_Report_HeaderNonStand
   ;---         WHERE (SSRN_ROUTINE = :routine) OR (:routine IS NULL))
   ;--- ** SQL PUBLIC Variables: SQLCODE, routine
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO SS_Report_HeaderNonStand VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) s ROWID=$g(ROWID) d pre("Y") 
  ;---&SQL(UPDATE SS_Report_HeaderNonStand VALUES :PLIST() WHERE SSRN_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM SS_Report_HeaderNonStand WHERE SSRN_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),routine=$g(routine)
  ;---&SQL(OPEN SSRN)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSRN0o
 Q 0
 ; Fetch the data
fetch(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s skip=$g(skip),routine=$g(routine)
  ;---&SQL(FETCH SSRN INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),routine=$g(routine) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(routine,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(routine,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (routine,skip,PLIST) s skip=$g(skip),routine=$g(routine) K ^TMP($zn,$j)
 i $$open(routine,skip)
 f cnt=1:1 Q:$$fetch(routine,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor 
close()  ;---&SQL(CLOSE SSRN) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSRN0c 
 q 0
 ; select data by code
select(ROWID,skip) K PLIST s ROWID=$g(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM SS_Report_HeaderNonStand WHERE SSRN_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
 ;
getall() N (PLIST) K ^TMP($ZN,$J)
 I $$open(,"Y")
 F cnt=1:1 Q:$$fetch(,"Y")  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%SSRN0o s $zt="%SSRN0E" s SQLCODE=$s($g(%SSRN0c):-101,1:0) q:SQLCODE'=0  s %SSRN0d(12)=0 s %SSRN0d(13)=0,%SSRN0d(14)=""
 s %SSRN0d(9)=$g(routine),%SSRN0d(10)=$g(routine)
 s %SSRN0c=1 q
%SSRN0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SSRN0c,%SSRN0d,%SSRN0E,%SSRN0l,%SSRN0n,%SSRN0R,%SSRN0Z q
%0Afirst 
 ; asl MOD# 2
 s %SSRN0d(7)=""
%0ABk1 s %SSRN0d(7)=$o(^SS("REPORT-HEADER-NON",%SSRN0d(7)))
 i %SSRN0d(7)="" g %0ABdun
 i '((%SSRN0d(7)=%SSRN0d(9))||(%SSRN0d(10)="")) g %0ABk1
 s %SSRN0d(2)=""
%0ABk2 s %SSRN0d(2)=$o(^SS("REPORT-HEADER-NON",%SSRN0d(7),%SSRN0d(2)))
 i %SSRN0d(2)="" g %0ABk1
 s %SSRN0d(20)=$g(^SS("REPORT-HEADER-NON",%SSRN0d(7),%SSRN0d(2)))
 s %SSRN0d(3)=$p(%SSRN0d(20),"^",1) s %SSRN0d(4)=$p(%SSRN0d(20),"^",2) s %SSRN0d(5)=$p(%SSRN0d(20),"^",3) s %SSRN0d(6)=$p(%SSRN0d(20),"^",4) s %SSRN0d(8)=$p(%SSRN0d(20),"^",5)
 s %SSRN0d(1)=(%SSRN0d(7))_"||"_(%SSRN0d(2))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SS("REPORT-HEADER-NON",$p(%SSRN0d(1),"||",1),$p(%SSRN0d(1),"||",2))#"S":$zu(115,4) i $t { s %SSRN0d(13)=1,%SSRN0d(14)=$name(^SS("REPORT-HEADER-NON",$p(%SSRN0d(1),"||",1),$p(%SSRN0d(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_Report_HeaderNonStand for RowID value: "_%SSRN0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SSRN0d(7)=$p(%SSRN0d(1),"||"),%SSRN0d(2)=$p(%SSRN0d(1),"||",2)
 i %SSRN0d(7)'="",%SSRN0d(2)'="",$d(^SS("REPORT-HEADER-NON",%SSRN0d(7),%SSRN0d(2)))
 e  g %0ACdun
 s %SSRN0d(26)=$g(^SS("REPORT-HEADER-NON",%SSRN0d(7),%SSRN0d(2)))
 s %SSRN0d(3)=$p(%SSRN0d(26),"^",1) s %SSRN0d(4)=$p(%SSRN0d(26),"^",2) s %SSRN0d(5)=$p(%SSRN0d(26),"^",3) s %SSRN0d(6)=$p(%SSRN0d(26),"^",4) s %SSRN0d(8)=$p(%SSRN0d(26),"^",5)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SSRN0d(12)=%SSRN0d(12)+1,%ROWCOUNT=%SSRN0d(12),%ROWID=%SSRN0d(1),%SSRN0c=10 q
%SSRN0f i '$g(%SSRN0c) { s SQLCODE=-102 q  } i %SSRN0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SSRN0d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SSRN0d(12),%SSRN0c=100 q  } g %0Afirst:%SSRN0c=1
%0ACdun i $zu(115,2)=1,$g(%SSRN0d(13))=1 { l -@%SSRN0d(14) s %SSRN0d(13)=0 }
 g %0ABk2
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SSRN0d(12),SQLCODE=100,%SSRN0c=100 q
%SSRN0c i '$g(%SSRN0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SSRN0d(12)),1:0)
 i $zu(115,2)=1,$g(%SSRN0d(13))=1 { l -@%SSRN0d(14) } k %SSRN0c,%SSRN0d,%SSRN0E,%SSRN0l,%SSRN0n,%SSRN0R,%SSRN0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SSRN0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:8 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSReportHeaderNonStand.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SS("REPORT-HEADER-NON",%mmmsqld(4),%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(13)=$$%getlock^User.SSReportHeaderNonStand.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SS("REPORT-HEADER-NON",%mmmsqld(4),%mmmsqld(5)))
 e  g %0ECdun
 k %data
 f icol=0:1:8 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.SSReportHeaderNonStand.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.SSReportHeaderNonStand.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.SSReportHeaderNonStand.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.SSReportHeaderNonStand.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SS("REPORT-HEADER-NON",%mmmsqld(3),%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(12)=$$%getlock^User.SSReportHeaderNonStand.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SS("REPORT-HEADER-NON",%mmmsqld(3),%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.SSReportHeaderNonStand.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.SSReportHeaderNonStand.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.SSReportHeaderNonStand.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.SSReportHeaderNonStand.T1(%mmmsqld(1)) g %0Gc
%0Jo d %SSRN0f q:SQLCODE'=0
 s PLIST(1)=%SSRN0d(1),PLIST(2)=%SSRN0d(2),PLIST(3)=%SSRN0d(3),PLIST(4)=%SSRN0d(4),PLIST(5)=%SSRN0d(5),PLIST(6)=%SSRN0d(6),PLIST(7)=%SSRN0d(7),PLIST(8)=%SSRN0d(8)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(10)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(10)
 s PLIST(7)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i PLIST(7)'="",PLIST(2)'="",$d(^SS("REPORT-HEADER-NON",PLIST(7),PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(19)=$g(^SS("REPORT-HEADER-NON",PLIST(7),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(19),"^",1) s PLIST(4)=$p(%mmmsqld(19),"^",2) s PLIST(5)=$p(%mmmsqld(19),"^",3) s PLIST(6)=$p(%mmmsqld(19),"^",4) s PLIST(8)=$p(%mmmsqld(19),"^",5)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^SS("REPORT-HEADER-NON",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^SS("REPORT-HEADER-NON",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_Report_HeaderNonStand for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(7)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i PLIST(7)'="",PLIST(2)'="",$d(^SS("REPORT-HEADER-NON",PLIST(7),PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(25)=$g(^SS("REPORT-HEADER-NON",PLIST(7),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"^",1) s PLIST(4)=$p(%mmmsqld(25),"^",2) s PLIST(5)=$p(%mmmsqld(25),"^",3) s PLIST(6)=$p(%mmmsqld(25),"^",4) s PLIST(8)=$p(%mmmsqld(25),"^",5)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
