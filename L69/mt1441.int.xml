<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1441" type="INT" languagemode="0"><![CDATA[
mt1441  ; Compiled May 22, 2000 12:47:56 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1441(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1441(+%check=1) i '%ok s SQLCODE=-104 q
winsert s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1441 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:3 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1441(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:3 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1441(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1441 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^CT("SITE",$p(%ROWID,$c(1))):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^CT("SITE",$p(%ROWID,$c(1)))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^CT("SITE",$p(%edit(1),$c(1),1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(2)) s:'($d(tempn)#2) tempn=$g(^CT("SITE",$p(%data(1),$c(1),1))) s $p(tempn,"^",1)=$g(%data(2))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^CT("SITE",$p(%data(1),$c(1),1))) s $p(tempn,"^",2)=$g(%data(3))
 s:$d(tempn)#2 ^CT("SITE",$p(%data(1),$c(1),1))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$$ALPHAUP($s($d(%edit(2)):%edit(2),1:$g(%data(2)))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^CT("SITE",0,"Code",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^CT("SITE",0,"Code",sn(1),sn(2)) k ^CT("SITE",0,"Code",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$$ALPHAUP($g(%data(2))) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map1dun
 s ^CT("SITE",0,"Code",sn(1),sn(2))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$$ALPHAUP($s($d(%edit(3)):%edit(3),1:$g(%data(3)))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^CT("SITE",0,"Desc",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^CT("SITE",0,"Desc",sn(1),sn(2)) k ^CT("SITE",0,"Desc",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$$ALPHAUP($g(%data(3))) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map2dun
 s ^CT("SITE",0,"Desc",sn(1),sn(2))=tempn
map2dun q
 d %0Ao
getold(%dataold) g %0Ao
lookupB d %RSBcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",6),1,6)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupB
 
lookupC d %RSCcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",6),1,6)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupC
 
lookupD d %RSDcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",6),1,6)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupD
 
selitmD  ; entry point to select the Row Selection Item
 i $c(1)'[$g(%data(2)) s item=2 q
 i $c(1)'[$g(%data(3)) s item=3 q
 s item=0 f  s item=$o(%data(item)) q:item=""  i $c(1)'[%data(item) s item=1 q
 s item=$s(item=1:"",1:1) q
 s item="" q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CT_SiteCodes"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(2)) s %ok="Code" d %mdiag(%oper,-106,"Fld Int","Req","SITE_Code","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(3)) s %ok="Description" d %mdiag(%oper,-106,"Fld Int","Req","SITE_Desc","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(1)) s %ok="CT_SiteCodes Row ID" d %mdiag(%oper,-106,"Fld Int","Req","SITE_RowId","",%ok) s %msg=%ok,%ok=0
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CT_SiteCodes
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %val=$i(^CT("SITE",0)) g inrwide
 g rowiderr
inrwide ; external to internal conversion for rowid
 i 'rowerr d fde1^mt1441 i '%ok g:'iform rowiderr s rowerr=1
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1441 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i 'rowerr d fdi1^mt1441 s %data(1)=%data(1)_$c(1)_%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 g insarr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt1441
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde1 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=1 d etiok
 . s %msg="" d fde1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SITE_RowId","",$g(%msg))
 q
fda1 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 d fda1 q:'%ok  s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv2 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq2($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv3 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq3($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Go q SQLCODE=100
uniq2(%rowid,%unique) n SQLCODE,%val d %0Eo q SQLCODE=100
uniq3(%rowid,%unique) n SQLCODE,%val d %0Fo q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="SITE_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","SITE_RowId","",%ok)
 i %ok,$c(1)'[$g(%data(2)),'$$uniq2($g(%data(1)),$g(%data(2))) s %ok="SITE_Code"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","SITE_Code","",%ok)
 i %ok,$c(1)'[$g(%data(3)),'$$uniq3($g(%data(1)),$g(%data(3))) s %ok="SITE_Desc"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","SITE_Desc","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","SITE_Code","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","SITE_Desc","",$g(%msg))
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","SITE_RowId","",$g(%msg))
 q
fdi1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(1)),$p(%data(1),$c(1))'="" s %val=$p(%data(1),$c(1)) d fdi1 s $p(%data(1),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt1441 q:'%ok
 q
 g ^mt1442
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0AAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 i %mmmsqld(3)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0AAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%dataold(1),$C(1))=%mmmsqld(3)
 i $P(%dataold(1),$C(1))'="",$d(^CT("SITE",$P(%dataold(1),$C(1))))
 i '$t
 e  i 1>$P(%dataold(1),$C(1)),$P(%dataold(1),$C(1))=+$P(%dataold(1),$C(1))
 i  g %0ABdun
 s %mmmsqln=$g(^CT("SITE",$P(%dataold(1),$C(1))))
 s %dataold(2)=$p(%mmmsqln,"^",1) s %dataold(3)=$p(%mmmsqln,"^",2)
 
 s %val=$P(%dataold(1),$C(1)) d %0ABs1:%val'="" s $P(%dataold(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%RSBcuro s SQLCODE=$s($g(%RSBcurc):-101,1:0) q:SQLCODE'=0
 s %RSBcurc=1 k %RSBcurm
 s %RSBcurE=$zt,%RSBcurf=0,%RSBcure=0,%RSBcurL=""
 q
%0Bfirst   ;  init
 ; asl MOD# 2
 s %RSBcurd(8)=""
%0BBk1 s %RSBcurd(8)=$o(^CT("SITE",0,"Code",%RSBcurd(8)))
 i %RSBcurd(8)="" g %0BBdun
 s $P(%datars(1),$C(1))=""
%0BBk2 s $P(%datars(1),$C(1))=$o(^CT("SITE",0,"Code",%RSBcurd(8),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0BBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0BBk1
 
 s %val=$P(%datars(1),$C(1)) d %0ABs1:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("SITE",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0BBk2
 s %RSBcurn=$g(^CT("SITE",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSBcurn,"^",1) s %datars(3)=$p(%RSBcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSBcurf=%RSBcurf+1 s %RSBcurc=10 q
%RSBcurf i '$g(%RSBcurc) s SQLCODE=-102 q
 i %RSBcurc=100 s SQLCODE=100 q
 s $zt="%0Berr^"_$zn s $ze="" n %val g %0Bfirst:%RSBcurc=1
 g %0BBk2
%0BBdun 
%0BAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSBcurc=100 q
%RSBcurc i '$g(%RSBcurc) s SQLCODE=-102 q
 k %RSBcurc,%RSBcurd,%RSBcure,%RSBcurE,%RSBcurf,%RSBcurl,%RSBcurL,%RSBcurn,%RSBcurr,%RSBcurR s SQLCODE=0 q
%0Berr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSBcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%RSCcuro s SQLCODE=$s($g(%RSCcurc):-101,1:0) q:SQLCODE'=0
 s %RSCcurc=1 k %RSCcurm
 s %RSCcurE=$zt,%RSCcurf=0,%RSCcure=0,%RSCcurL=""
 s %RSCcurd(8)=$P(%data(2),$C(1))
 q
%0Cfirst   ;  init
 s %RSCcurd(9)=$$ALPHAUP(%RSCcurd(8))
 ; asl MOD# 2
 s %RSCcurd(7)=%RSCcurd(9)
 i %RSCcurd(7)'="",$d(^CT("SITE",0,"Code",%RSCcurd(7))) g %0CBg1
%0CBk1 s %RSCcurd(7)=$o(^CT("SITE",0,"Code",%RSCcurd(7)))
 i %RSCcurd(7)="" g %0CBdun
%0CBg1 i (%RSCcurd(9)?1n.n),":"']%RSCcurd(7) g %0CBdun
 i '(%RSCcurd(9)=$e(%RSCcurd(7),1,$l(%RSCcurd(9)))) g:(%RSCcurd(9)?1n.n) %0CBk1 g %0CBdun
 s $P(%datars(1),$C(1))=""
%0CBk2 s $P(%datars(1),$C(1))=$o(^CT("SITE",0,"Code",%RSCcurd(7),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0CBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0CBk1
 
 s %val=$P(%datars(1),$C(1)) d %0ABs1:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("SITE",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0CBk2
 s %RSCcurn=$g(^CT("SITE",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSCcurn,"^",1) s %datars(3)=$p(%RSCcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSCcurf=%RSCcurf+1 s %RSCcurc=10 q
%RSCcurf i '$g(%RSCcurc) s SQLCODE=-102 q
 i %RSCcurc=100 s SQLCODE=100 q
 s $zt="%0Cerr^"_$zn s $ze="" n %val g %0Cfirst:%RSCcurc=1
 g %0CBk2
%0CBdun 
%0CAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSCcurc=100 q
%RSCcurc i '$g(%RSCcurc) s SQLCODE=-102 q
 k %RSCcurc,%RSCcurd,%RSCcure,%RSCcurE,%RSCcurf,%RSCcurl,%RSCcurL,%RSCcurn,%RSCcurr,%RSCcurR s SQLCODE=0 q
%0Cerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSCcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%RSDcuro s SQLCODE=$s($g(%RSDcurc):-101,1:0) q:SQLCODE'=0
 s %RSDcurc=1 k %RSDcurm
 s %RSDcurE=$zt,%RSDcurf=0,%RSDcure=0,%RSDcurL=""
 s %RSDcurd(8)=$P(%data(3),$C(1))
 q
%0Dfirst   ;  init
 s %RSDcurd(9)=$$ALPHAUP(%RSDcurd(8))
 ; asl MOD# 2
 s %RSDcurd(7)=%RSDcurd(9)
 i %RSDcurd(7)'="",$d(^CT("SITE",0,"Desc",%RSDcurd(7))) g %0DBg1
%0DBk1 s %RSDcurd(7)=$o(^CT("SITE",0,"Desc",%RSDcurd(7)))
 i %RSDcurd(7)="" g %0DBdun
%0DBg1 i (%RSDcurd(9)?1n.n),":"']%RSDcurd(7) g %0DBdun
 i '(%RSDcurd(9)=$e(%RSDcurd(7),1,$l(%RSDcurd(9)))) g:(%RSDcurd(9)?1n.n) %0DBk1 g %0DBdun
 s $P(%datars(1),$C(1))=""
%0DBk2 s $P(%datars(1),$C(1))=$o(^CT("SITE",0,"Desc",%RSDcurd(7),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0DBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0DBk1
 
 s %val=$P(%datars(1),$C(1)) d %0ABs1:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("SITE",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0DBk2
 s %RSDcurn=$g(^CT("SITE",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSDcurn,"^",1) s %datars(3)=$p(%RSDcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSDcurf=%RSDcurf+1 s %RSDcurc=10 q
%RSDcurf i '$g(%RSDcurc) s SQLCODE=-102 q
 i %RSDcurc=100 s SQLCODE=100 q
 s $zt="%0Derr^"_$zn s $ze="" n %val g %0Dfirst:%RSDcurc=1
 g %0DBk2
%0DBdun 
%0DAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSDcurc=100 q
%RSDcurc i '$g(%RSDcurc) s SQLCODE=-102 q
 k %RSDcurc,%RSDcurd,%RSDcure,%RSDcurE,%RSDcurf,%RSDcurl,%RSDcurL,%RSDcurn,%RSDcurr,%RSDcurR s SQLCODE=0 q
%0Derr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSDcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 i %mmmsqld(3)="",$L(%unique)>1 s %val=$E(%unique,2,999) d %0AAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 i %mmmsqld(1)'="",$d(^CT("SITE",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0GBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(%unique,$C(1)),%mmmsqld(5)=$P(%rowid,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$e(%unique,2,99999)
 i %mmmsqld(5)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0AAr1 s %mmmsqld(5)=%val
 s SQLCODE=100
   ;  init
 s %mmmsqld(8)=$$ALPHAUP(%mmmsqld(4))
 ; asl MOD# 2
 s %mmmsqld(7)=$g(%mmmsqld(8))
 i %mmmsqld(7)="" g %0EBdun
 s %mmmsqld(1)=""
%0EBk1 s %mmmsqld(1)=$o(^CT("SITE",0,"Code",%mmmsqld(7),%mmmsqld(1)))
 i %mmmsqld(1)="" g %0EBdun
 i %mmmsqld(1)'=+%mmmsqld(1) g %0EBdun
 i '((%mmmsqld(1))'=(%mmmsqld(5))) g %0EBk1
 i %mmmsqld(1)'="",$d(^CT("SITE",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0EBk1
 s %mmmsqln=$g(^CT("SITE",%mmmsqld(1)))
 s %mmmsqld(3)=$p(%mmmsqln,"^",1)
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
 g %0EBk1
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(%unique,$C(1)),%mmmsqld(5)=$P(%rowid,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$e(%unique,2,99999)
 i %mmmsqld(5)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0AAr1 s %mmmsqld(5)=%val
 s SQLCODE=100
   ;  init
 s %mmmsqld(8)=$$ALPHAUP(%mmmsqld(4))
 ; asl MOD# 2
 s %mmmsqld(7)=$g(%mmmsqld(8))
 i %mmmsqld(7)="" g %0FBdun
 s %mmmsqld(1)=""
%0FBk1 s %mmmsqld(1)=$o(^CT("SITE",0,"Desc",%mmmsqld(7),%mmmsqld(1)))
 i %mmmsqld(1)="" g %0FBdun
 i %mmmsqld(1)'=+%mmmsqld(1) g %0FBdun
 i '((%mmmsqld(1))'=(%mmmsqld(5))) g %0FBk1
 i %mmmsqld(1)'="",$d(^CT("SITE",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0FBk1
 s %mmmsqln=$g(^CT("SITE",%mmmsqld(1)))
 s %mmmsqld(3)=$p(%mmmsqln,"^",2)
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
 g %0FBk1
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
]]></Routine>
</Export>
