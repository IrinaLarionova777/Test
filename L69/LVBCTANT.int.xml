<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTANT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTANT ; IG 29/4/98 ; MVB Control code access for CT_Antibiotics
 ;
 ; supported calls:
 ;
 ; $$check^LVBCTANT(list)
 ; $$select^LVBCTANT(ROWID,skip)
 ; $$seldata^LVBCTANT(ROWID,data)
 ; $$open^LVBCTANT(code,desc,skip,active,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTANT(code,desc,skip,active,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTANT(code,desc,skip,active,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTANT(code,desc,skip,active,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTANT()
 ; $$insert^LVBCTANT()
 ; $$update^LVBCTANT(ROWID)
 ; $$delete^LVBCTANT(ROWID,Comments)
 ; $$getall^LVBCTANT(active,code,desc)
 ;
  ;---&SQL(DECLARE CTANT CURSOR FOR SELECT * FROM CT_Antibiotics
   ;---         WHERE (%ALPHAUP(CTANT_Code) %STARTSWITH %ALPHAUP(:code))
   ;---         AND (%ALPHAUP(CTANT_Name) %STARTSWITH %ALPHAUP(:desc))
   ;---         AND ((CTANT_ActiveFlag = :active) OR (:active IS NULL))
   ;---         ORDER BY CTANT_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, active, code, desc
FIX k ^TTABi("ANT") s a="" f  s a=$o(^TTAB("ANT",a)) q:a=""  d
 .i '$$select(a,"Y") s PLIST(6)="Y",PLIST(4)=99999,err=$$update(a) i err w !,a," ",err
 d ##class(User.CTAntibiotics).%BuildIndices()
 q
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_Antibiotics VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE d post Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE CT_Antibiotics VALUES :PLIST() WHERE CTANT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE d post Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_Antibiotics WHERE CTANT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(code,desc,skip,active,p4,p5,p6,p7,p8,p9) s code=$g(code),desc=$g(desc),skip=$g(skip),active=$g(active)
  ;---&SQL(OPEN CTANT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTANT0o
 Q 0
 ;
 ; Fetch the data
fetch(code,desc,skip,active,p4,p5,p6,p7,p8,p9) s code=$g(code),desc=$g(desc),skip=$g(skip),active=$g(active)
  ;---K PLIST &SQL(FETCH CTANT INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 K PLIST Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(code,desc,skip,active,p4,p5,p6,p7,p8,p9) s code=$g(code),desc=$g(desc),skip=$g(skip),active=$g(active) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(code,desc,skip,active) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(code,desc,skip,active,p4,p5,p6,p7,p8,p9) N (code,desc,skip,active,PLIST) s code=$g(code),desc=$g(desc),skip=$g(skip),active=$g(active) K ^TMP($zn,$j)
 i $$open(code,desc,skip,active)
 f cnt=1:1 Q:$$fetch(code,desc,skip,active)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTANT) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTANT0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_Antibiotics WHERE CTANT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=3 s result=$p($g(^TTAB("ANT",ROWID)),"\",1) q
 .i data=4 s result=$p($g(^TTAB("ANT",ROWID)),"\",2) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
post i $l($g(PLIST(5))) d
 .s ant=$p(PLIST(2),$c(1))
 .s x="" f  s x=$o(^TTAB("ANT",ant,x)) q:x=""  k ^(x)
 .s x="" f  s x=$o(^TTAB("SENS",x)) q:x=""  d
 ..i $p(^(x),"\",2)="R" s ^TTAB("ANT",ant,x)="<\"_PLIST(5)_"\"
 ..i $p(^(x),"\",2)="S" s ^TTAB("ANT",ant,x)="'<\"_PLIST(5)_"\"
 q
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 i '$g(PLIST(4)) s PLIST(4)=99999
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 i $g(skip)="Y" q
 I $G(PLIST(7))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTA(plist(7),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(7)=X K plist
 ;
 Q
getall(active,code,desc) N (active,code,desc,PLIST) K ^TMP($zn,$j) s active=$g(active),code=$g(code),desc=$g(desc)
 I $$open(code,desc,"Y",active)
 F cnt=1:1 Q:$$fetch(code,desc,"Y",active)  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
check(list) n (list) s list=$tr($g(list)," "),result="" k ^TMP($zn,$j,"check")
 f j=1:1:$l(list,",") s x=$p(list,",",j) i $l(x) s ^TMP($zn,$j,"check",x)=""
 s ant="" f  s ant=$o(^TMP($zn,$j,"check",ant)) q:ant=""  i '$$select(ant,"Y") s ^TMP($zn,$j,"check",ant)="Y"
 s ant="" f  s ant=$o(^TMP($zn,$j,"check",ant)) q:ant=""  d
 .i ^(ant)="Y" s result=result_$s($l(result):" , ",1:"")_ant
 .e  s result=result_$s($l(result):" , ",1:"")_"<"_ant_">"
 k ^TMP($zn,$j,"check")
 q result
 ;
 q
%CTANT0o s $zt="%CTANT0E" s SQLCODE=$s($g(%CTANT0c):-101,1:0) q:SQLCODE'=0  s %CTANT0d(20)=0 s %CTANT0d(21)=0,%CTANT0d(22)=""
 s %CTANT0d(10)=$g(code),%CTANT0d(13)=$g(desc),%CTANT0d(15)=$g(active),%CTANT0d(16)=$g(active)
 s %CTANT0t(1)=$i(^||%sql.temp)
 s %CTANT0d(19)=$zu(28,%CTANT0d(15),7)
 s %CTANT0d(11)=$zu(28,%CTANT0d(10),6)
 s %CTANT0d(14)=$zu(28,%CTANT0d(13),6)
 s %CTANT0c=1 q
%CTANT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTANT0c,%CTANT0d,%CTANT0E,%CTANT0l,%CTANT0n,%CTANT0R,%CTANT0s,%CTANT0t,%CTANT0Z q
%0Afirst 
 k ^||%sql.temp(%CTANT0t(1),0) s ^||%sql.temp(%CTANT0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTANT0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTANT0t(1),0))
 s %CTANT0s(3)=""
%0ACk1 s %CTANT0s(3)=$o(^||%sql.temp(%CTANT0t(1),0,%CTANT0s(3)))
 i %CTANT0s(3)="" g %0ACdun
 s %CTANT0d(3)=$s(%CTANT0s(3)=-1E14:"",1:%CTANT0s(3))
 s %CTANT0s(1)=""
%0ACk2 s %CTANT0s(1)=$o(^||%sql.temp(%CTANT0t(1),0,%CTANT0s(3),%CTANT0s(1)))
 i %CTANT0s(1)="" g %0ACk1
 s %CTANT0d(1)=$s(%CTANT0s(1)=-1E14:"",1:%CTANT0s(1))
 s %CTANT0d(30)=$g(^||%sql.temp(%CTANT0t(1),0,%CTANT0s(3),%CTANT0s(1)))
 s %CTANT0d(2)=$lg(%CTANT0d(30),3) s %CTANT0d(4)=$lg(%CTANT0d(30),4) s %CTANT0d(5)=$lg(%CTANT0d(30),1) s %CTANT0d(6)=$lg(%CTANT0d(30),2) s %CTANT0d(7)=$lg(%CTANT0d(30),5) s %CTANT0d(8)=$lg(%CTANT0d(30),6)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("ANT",$p(%CTANT0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTANT0d(21)=1,%CTANT0d(22)=$name(^TTAB("ANT",$p(%CTANT0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Antibiotics for RowID value: "_%CTANT0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTANT0d(1)'="",$d(^TTAB("ANT",%CTANT0d(1)))
 e  g %0ADdun
 s %CTANT0d(35)=$g(^TTAB("ANT",%CTANT0d(1)))
 s %CTANT0d(2)=$p(%CTANT0d(35),"\",1) s %CTANT0d(3)=$p(%CTANT0d(35),"\",2) s %CTANT0d(4)=$p(%CTANT0d(35),"\",3) s %CTANT0d(5)=$p(%CTANT0d(35),"\",4) s %CTANT0d(6)=$p(%CTANT0d(35),"\",5) s %CTANT0d(7)=$p(%CTANT0d(35),"\",6) s %CTANT0d(8)=$p(%CTANT0d(35),"\",7)
 s %CTANT0d(18)=$zu(28,%CTANT0d(5),7) s %CTANT0d(12)=$zu(28,%CTANT0d(2),6) s %CTANT0d(9)=$zu(28,%CTANT0d(1),6)
 g:'(($c(0)[%CTANT0d(14))||(%CTANT0d(14)=$c(32,0)&&($e(%CTANT0d(12))=$c(32)))||(%CTANT0d(14)=$e(%CTANT0d(12),1,$l(%CTANT0d(14))))) %0ADdun
 g:'(($c(0)[%CTANT0d(11))||(%CTANT0d(11)=$c(32,0)&&($e(%CTANT0d(9))=$c(32)))||(%CTANT0d(11)=$e(%CTANT0d(9),1,$l(%CTANT0d(11))))) %0ADdun
 g:'(((%CTANT0d(18)'=" ")&&(%CTANT0d(18)=%CTANT0d(19)))||(%CTANT0d(16)="")) %0ADdun
 g:'(%CTANT0d(12)'="") %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTANT0d(20)=%CTANT0d(20)+1,%ROWCOUNT=%CTANT0d(20),%ROWID=%CTANT0d(1),%CTANT0c=10 q
%CTANT0f i '$g(%CTANT0c) { s SQLCODE=-102 q  } i %CTANT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTANT0d(20))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTANT0d(20),%CTANT0c=100 q  } g %0Afirst:%CTANT0c=1
%0ADdun i $zu(115,2)=1,$g(%CTANT0d(21))=1 { l -@%CTANT0d(22) s %CTANT0d(21)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTANT0d(20),SQLCODE=100,%CTANT0c=100 q
%CTANT0c i '$g(%CTANT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTANT0d(20)),1:0) f %CTANT0d(23)=1 { i $sortend(^||%sql.temp(%CTANT0t(%CTANT0d(23)),0),0) } k ^||%sql.temp(%CTANT0t(1))
 i $zu(115,2)=1,$g(%CTANT0d(21))=1 { l -@%CTANT0d(22) } k %CTANT0c,%CTANT0d,%CTANT0E,%CTANT0l,%CTANT0n,%CTANT0R,%CTANT0s,%CTANT0t,%CTANT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTANT0c=100
 f %CTANT0d(23)=1 i $sortend(^||%sql.temp(%CTANT0t(%CTANT0d(23)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTANT0d(1)=""
%0ABk1 s %CTANT0d(1)=$o(^TTAB("ANT",%CTANT0d(1)))
 i %CTANT0d(1)="" g %0ABdun
 s %CTANT0d(28)=$g(^TTAB("ANT",%CTANT0d(1)))
 s %CTANT0d(2)=$p(%CTANT0d(28),"\",1) s %CTANT0d(3)=$p(%CTANT0d(28),"\",2) s %CTANT0d(4)=$p(%CTANT0d(28),"\",3) s %CTANT0d(5)=$p(%CTANT0d(28),"\",4) s %CTANT0d(6)=$p(%CTANT0d(28),"\",5) s %CTANT0d(7)=$p(%CTANT0d(28),"\",6) s %CTANT0d(8)=$p(%CTANT0d(28),"\",7)
 s %CTANT0d(18)=$zu(28,%CTANT0d(5),7) s %CTANT0d(12)=$zu(28,%CTANT0d(2),6) s %CTANT0d(9)=$zu(28,%CTANT0d(1),6)
 g:'(($c(0)[%CTANT0d(14))||(%CTANT0d(14)=$c(32,0)&&($e(%CTANT0d(12))=$c(32)))||(%CTANT0d(14)=$e(%CTANT0d(12),1,$l(%CTANT0d(14))))) %0ABk1
 g:'(($c(0)[%CTANT0d(11))||(%CTANT0d(11)=$c(32,0)&&($e(%CTANT0d(9))=$c(32)))||(%CTANT0d(11)=$e(%CTANT0d(9),1,$l(%CTANT0d(11))))) %0ABk1
 g:'(((%CTANT0d(18)'=" ")&&(%CTANT0d(18)=%CTANT0d(19)))||(%CTANT0d(16)="")) %0ABk1
 g:'(%CTANT0d(12)'="") %0ABk1
 s %CTANT0s(3)=$s(%CTANT0d(3)'="":%CTANT0d(3),1:-1E14),%CTANT0s(1)=$s(%CTANT0d(1)'="":%CTANT0d(1),1:-1E14),%CTANT0d(29)="",$li(%CTANT0d(29),3)=%CTANT0d(2),$li(%CTANT0d(29),4)=%CTANT0d(4),$li(%CTANT0d(29),1)=%CTANT0d(5),$li(%CTANT0d(29),2)=%CTANT0d(6),$li(%CTANT0d(29),5)=%CTANT0d(7),$li(%CTANT0d(29),6)=%CTANT0d(8),^||%sql.temp(%CTANT0t(1),0,%CTANT0s(3),%CTANT0s(1))=%CTANT0d(29)
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTAntibiotics.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("ANT",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTAntibiotics.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("ANT",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTAntibiotics.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTAntibiotics.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTAntibiotics.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTAntibiotics.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("ANT",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTAntibiotics.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("ANT",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTAntibiotics.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTAntibiotics.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTAntibiotics.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTAntibiotics.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTANT0f q:SQLCODE'=0
 s PLIST(1)=%CTANT0d(1),PLIST(2)=%CTANT0d(1),PLIST(3)=%CTANT0d(2),PLIST(4)=%CTANT0d(3),PLIST(5)=%CTANT0d(4),PLIST(6)=%CTANT0d(5),PLIST(7)=%CTANT0d(6),PLIST(8)=%CTANT0d(7),PLIST(9)=%CTANT0d(8)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(10)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(10)
 i PLIST(2)'="",$d(^TTAB("ANT",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(18)=$g(^TTAB("ANT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",1) s PLIST(4)=$p(%mmmsqld(18),"\",2) s PLIST(5)=$p(%mmmsqld(18),"\",3) s PLIST(6)=$p(%mmmsqld(18),"\",4) s PLIST(7)=$p(%mmmsqld(18),"\",5) s PLIST(8)=$p(%mmmsqld(18),"\",6) s PLIST(9)=$p(%mmmsqld(18),"\",7)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("ANT",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("ANT",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Antibiotics for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("ANT",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(23)=$g(^TTAB("ANT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4) s PLIST(7)=$p(%mmmsqld(23),"\",5) s PLIST(8)=$p(%mmmsqld(23),"\",6) s PLIST(9)=$p(%mmmsqld(23),"\",7)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
