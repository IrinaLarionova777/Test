<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTDR3GRE01" type="INT" languagemode="0" generated="1"><![CDATA[
PRTDR3GRE01 ;IG 27/05/98 ;Doctors Reports printing (cumulative) - Greece Euroclinic
 ;
 ; supported calls :
 ;
 ; $$print^PRTDR3GRE01(vtsRID,type,EpisodeList,DH)
 ;
 ; type          : P - print
 ;                 V - view from Enquiry
 ;                   - view from Entry
print(vtsRID,type,EpisodeList,DH,group,cOrder) n (vtsRID,type,EpisodeList,DH,group,cOrder,tsLM,tsWD,GroupName) 
 s vtsRID=$g(vtsRID),type=$g(type),EpisodeList=$g(EpisodeList),DH=$g(DH),group=$g(group),cOrder=$g(cOrder)
 s epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2),max=6,ColWidth=9,ColLeft=17,FullYear="N",tsLM=$g(tsLM),tsWD=$g(tsWD)
 K ^TMP($zn,$j,"CUM"),^TMP($zn,$j,"CUM-TC"),^TMP($zn,$j,"CUM-EXIST"),^TMP($zn,$j,"CUM-TC-ORDER")
 i '$$select^LVBEPVIS(epis,"Y") d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .k VISIT m VISIT=PLIST
 i '$$select^LVBCTTS(test,"Y") d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .k TEST m TEST=PLIST s tsLM=TEST(41),dep=PLIST(26)
 i 'tsLM,'$$select^LVBCTDEP(dep,"Y"),PLIST(13) s tsLM=PLIST(13)
 s range1="(",range2=")",(flaglow,flaghigh,Reportable)="" i '$$select^MVBCFLAB(1) d
 .i $l(PLIST(18)) s flaglow=PLIST(18)
 .i $l(PLIST(19)) s flaghigh=PLIST(19)
 .i $l(PLIST(20)) s range1=PLIST(20)
 .i $l(PLIST(21)) s range2=PLIST(21)
 .i $l(PLIST(14)) s max=PLIST(14)
 .i 'tsLM,PLIST(43) s tsLM=PLIST(43)
 .i 'tsWD,PLIST(42) s tsWD=PLIST(42)
 .i PLIST(37)="Y" s ColWidth=11,FullYear="Y"
 .i $l(PLIST(68)) s Reportable=PLIST(68)
 k FORMAT,TS
 i '$$getit^LVBCTTSF(,vtsRID,"Y") d
 .f j=1:1:PLIST s ti=$p(PLIST(j),$c(2),10) i $l(ti) s:'$d(FORMAT(ti)) FORMAT(ti)=PLIST(j) s TS($p(vtsRID,"||",2),ti)=""
 i $l(group),group'=" " d
 .s ts="" f  s ts=$o(^TTAB("GR",group,"TS",ts)) q:ts=""  i '$d(TS(ts)) d
 ..s tscnt="" f  s tscnt=$o(^TEPI(epis,1,ts,tscnt)) q:tscnt=""  d
 ...i '$$getit^LVBCTTSF(,epis_"||"_ts_"||"_tscnt,"Y") d
 ....f j=1:1:PLIST s ti=$p(PLIST(j),$c(2),10) i $l(ti) s:'$d(FORMAT(ti)) FORMAT(ti)=PLIST(j) s TS(ts,ti)=""
 .s ts="" f  s ts=$o(^TTAB("GR",group,"TS",ts)) q:ts=""  i '$d(TS(ts)) d
 ..i '$$getit^LVBCTTSF(ts,,"Y") d
 ...f j=1:1:PLIST s ti=$p(PLIST(j),$c(2),10) i $l(ti) s:'$d(FORMAT(ti)) FORMAT(ti)=PLIST(j) s TS(ts,ti)=""
 .s ti="" f cnt=1:1 s ti=$o(FORMAT(ti)) q:ti=""  d
 ..i $g(^TTAB("GR",group,"TI",ti)) s $p(FORMAT(ti),$c(2),27)=^(ti)
 ..e  s $p(FORMAT(ti),$c(2),27)=cnt
 ; create list of episodes and results
 k EPTS i $l(EpisodeList) d
 .f col=1:1:$l(EpisodeList,",") s ep=$p(EpisodeList,",",col) i $l(ep) d
 ..  ;---&sql(SELECT EPVIS_DateOfCollection,EPVIS_TimeOfCollection INTO :date,:time FROM EP_VisitNumber WHERE EPVIS_RowID=:ep)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, date, ep, time
 .. Do %0Ao
 ..s date=$p(date,$c(1)),time=$tr($p(time,$c(1))," ")
 ..s ^TMP($zn,$j,"CUM",col)=ep_$c(1)_date_$c(1)_time
 ..i $l(group),group'=" " d
 ...s ts="" f  s ts=$o(TS(ts)) q:ts=""  d
 ....s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  s rowid=ep_"||"_ts_"||"_cnt i '$d(EPTS(rowid)) s EPTS(rowid)="" d TestItems(col,rowid) q
 ..i '$l(group)!(group=" ") d
 ...i ep'=epis s cnt="" f  s cnt=$o(^TEPI(ep,1,test,cnt)) q:cnt=""  s rowid=ep_"||"_test_"||"_cnt i '$d(EPTS(rowid)) s EPTS(rowid)="" d TestItems(col,rowid) q
 ...i ep=epis d
 ....i '$d(EPTS(vtsRID)) s EPTS(vtsRID)="" d TestItems(col,vtsRID) q
 ....s cnt="" f  s cnt=$o(^TEPI(ep,1,test,cnt)) q:cnt=""  s rowid=ep_"||"_test_"||"_cnt i '$d(EPTS(rowid)) s EPTS(rowid)="" d TestItems(col,rowid) q
 k EPTS i '$l(EpisodeList) d
 .s visit="" f j=1:1:VISIT s $p(visit,$c(28),j)=VISIT(j)
 .s TestList=test i $l(group),group'=" " s ts="" f  s ts=$o(TS(ts)) q:ts=""  s TestList=TestList_","_ts
 .d CumList^PRTDR00(TestList,epis,visit,cOrder)
 .f col=1:1:PLIST d
 ..s ep=PLIST(col),(date,time)=""
 ..  ;---&sql(SELECT EPVIS_DateOfCollection,EPVIS_TimeOfCollection INTO :date,:time FROM EP_VisitNumber WHERE EPVIS_RowID=:ep)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, date, ep, time
 .. Do %0Co
 ..s date=$p(date,$c(1)),time=$tr($p(time,$c(1))," ")
 ..s ^TMP($zn,$j,"CUM",col)=ep_$c(1)_date_$c(1)_time
 ..i $l(group),group'=" " d
 ...s ts="" f  s ts=$o(TS(ts)) q:ts=""  d
 ....s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  s rowid=ep_"||"_ts_"||"_cnt i '$d(EPTS(rowid)) s EPTS(rowid)="" d TestItems(col,rowid) q
 ..i '$l(group)!(group=" ") d
 ...i ep'=epis s cnt="" f  s cnt=$o(^TEPI(ep,1,test,cnt)) q:cnt=""  s rowid=ep_"||"_test_"||"_cnt i '$d(EPTS(rowid)) s EPTS(rowid)="" d TestItems(col,rowid) q
 ...i ep=epis d
 ....i '$d(EPTS(vtsRID)) s EPTS(vtsRID)="" d TestItems(col,vtsRID) q
 ....s cnt="" f  s cnt=$o(^TEPI(ep,1,test,cnt)) q:cnt=""  s rowid=ep_"||"_test_"||"_cnt i '$d(EPTS(rowid)) s EPTS(rowid)="" d TestItems(col,rowid) q
 i '$d(^TMP($zn,$j,"CUM-TC")) d  q 100_$c(1)_EpisodeList
 .k ^TMP($zn,$j,"CUM"),^TMP($zn,$j,"CUM-TC"),^TMP($zn,$j,"CUM-TC-ORDER"),^TMP($zn,$j,"CUM-EXIST")
 i type'="P" d ADD^PRTDR00(,"~FONTNAME=Courier New Greek")
 i type="P" d ADD^PRTDR00(,"~NORMAL")
 ; print cumulative header
 d ADD^PRTDR00(,"~BOLD","Y")
 d LN^PRTDR00("Y")
 d ADD^PRTDR00(tsLM,$e("Date Collected"_$j("",tsWD),1,ColLeft-3)_" :","Y")
 s maxcol=$o(^TMP($zn,$j,"CUM",""),-1) s:maxcol>max maxcol=max
 f col=1:1:maxcol i $d(^TMP($zn,$j,"CUM",col)) d
 .s xx=$p(^TMP($zn,$j,"CUM",col),$c(1),2)
 .i xx s xx=$$extdate2^SSUTIL4(xx) i FullYear="N" s $p(xx,"/",3)=$e($p(xx,"/",3),3,4)
 .d ADD^PRTDR00(tsLM+ColLeft+(col-1*ColWidth),xx,"Y")
 d LN^PRTDR00("Y")
 d ADD^PRTDR00(tsLM,$e("Time Collected"_$j("",tsWD),1,ColLeft-3)_" :","Y")
 f col=1:1:maxcol i $d(^TMP($zn,$j,"CUM",col)) d
 .s ep=$p(^TMP($zn,$j,"CUM",col),$c(1),1)
 . ;---s xx="" &sql(SELECT EPVIS_TimeOfCollection INTO :xx FROM EP_VisitNumber WHERE EPVIS_RowID=:ep)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, ep, xx
 .s xx="" Do %0Eo
 .s xx=$tr($p(xx,$c(1))," "),xx=$s($l(xx):$$exttime^SSUTIL4(xx*60),1:"N/S")
 .d ADD^PRTDR00(tsLM+ColLeft+(col-1*ColWidth),xx,"Y")
 d LN^PRTDR00("Y")
 d ADD^PRTDR00(tsLM,$e("Episode"_$j("",tsWD),1,ColLeft-3)_" :","Y")
 f col=1:1:maxcol i $d(^TMP($zn,$j,"CUM",col)) d
 .s xx=$p(^TMP($zn,$j,"CUM",col),$c(1),1)
 .d ADD^PRTDR00(tsLM+ColLeft+(col-1*ColWidth),xx,"Y")
 d LN^PRTDR00("Y")
 d ADD^PRTDR00(tsLM,"==============","Y") s delim="",$p(delim,"=",ColWidth)=""
 f col=1:1:maxcol i $d(^TMP($zn,$j,"CUM",col)) d ADD^PRTDR00(tsLM+ColLeft+(col-1*ColWidth),delim,"Y")
 d LN^PRTDR00("Y")
 d ADD^PRTDR00(,"~NORMAL","Y")
 ; print test set header only for Cum report page
 i $l(EpisodeList) d
 .i ('$l(group)!(group=" ")),$l(TEST(17)) d LN^PRTDR00(),ADD^PRTDR00(tsLM,$s(TEST(17)="*":TEST(3),1:TEST(17))),LN^PRTDR00()
 .i $l(group),group'=" ",$l(GroupName) d LN^PRTDR00(),ADD^PRTDR00(tsLM,GroupName),LN^PRTDR00() s GroupName=""
 ; print results
 s order="" f  s order=$o(^TMP($zn,$j,"CUM-TC-ORDER",order)) q:order=""  d
 .s tc=^(order)
 .d ADD^PRTDR00(tsLM,$e($tr($p(FORMAT(tc),$c(2),3),":")_$j("",tsWD),1,ColLeft-3)_" :")
 .f col=1:1:maxcol i $d(^TMP($zn,$j,"CUM",col)) d
 ..s result=$p($g(^TMP($zn,$j,"CUM",col,tc)),$c(1),1),flag=$p($g(^TMP($zn,$j,"CUM",col,tc)),$c(1),2)
 ..i result="" d
 ...i $d(^TMP($zn,$j,"CUM-EXIST",col,tc)) d  q
 ....i $p(FORMAT(tc),$c(2),8)="M" s result="TF"
 ....e  s result=""
 ...s result="-"
 .. ; print extra info
 ..i flag="L" d
 ...i "MN"[$e($p(FORMAT(tc),$c(2),18)),$l(flaglow) s result=result_" "_flaglow
 ...d ADD^PRTDR00(,"~BOLD")
 ..i flag="H" d
 ...i "MN"[$e($p(FORMAT(tc),$c(2),18)),$l(flaghigh) s result=result_" "_flaghigh
 ...d ADD^PRTDR00(,"~BOLD")
 ..d ADD^PRTDR00(tsLM+ColLeft+(col-1*ColWidth),result)
 ..i (flag="L")!(flag="H") d ADD^PRTDR00(,"~NORMAL")
 .d LN^PRTDR00()
 k ^TMP($zn,$j,"CUM"),^TMP($zn,$j,"CUM-TC"),^TMP($zn,$j,"CUM-TC-ORDER"),^TMP($zn,$j,"CUM-EXIST")
 q 0
 ; collect Test Items information
TestItems(col,rowid) n (col,rowid,type,FORMAT,vtsRID,Reportable) s col=$g(col),rowid=$g(rowid)
 i '$$select^LVBVISTS(rowid,"Y") d
 .m ^TMP($zn,$j,"CUM-EXIST",col)=TS($p(rowid,"||",2))
 .s status=$$status^LVBVIS1(rowid)
 .s Result=0 i status="A" s Result=1
 .e  i vtsRID=rowid s Result=1
 .e  i $l(type),status="E",Reportable["ENTERED" s Result=1
 .e  i $l(type),status="P",Reportable["PATHOLOGIST" s Result=1
 .i '$$results^LVBVISTS(rowid) f j=1:1:PLIST d
 ..s tc=$p(PLIST(j),$c(1),2),(result,flag)=""
 ..i Result s result=$p(PLIST(j),$c(1),3),flag=$p(PLIST(j),$c(1),5)
 ..i '$d(FORMAT(tc)) q
 .. ; not included in cumulative
 ..i $p(FORMAT(tc),$c(2),20)'="Y" q
 ..i $l(tc),$l(result) d
 ... ; non reportable test item
 ...i $l(type),$p(FORMAT(tc),$c(2),15)'="Y" q
 ...i $e($p(FORMAT(tc),$c(2),18))="N" d IN
 ...i $e($p(FORMAT(tc),$c(2),18))="D" d ID^PRTDR00
 ...i $e($p(FORMAT(tc),$c(2),18))="T" d IT^PRTDR00
 ...i $e($p(FORMAT(tc),$c(2),18))="Y" d IY^PRTDR00
 ...s ^TMP($zn,$j,"CUM",col,tc)=result_$c(1)_flag
 ...i '$d(^TMP($zn,$j,"CUM-TC",tc)) d
 ....s order=$p(FORMAT(tc),$c(2),27) i '$l(order) s order=$p(FORMAT(tc),$c(2),2)
 ....s ^TMP($zn,$j,"CUM-TC-ORDER",order)=tc,^TMP($zn,$j,"CUM-TC",tc)=""
 q
IN ; Numeric
 i $l(result),$d(^TTAB("RC",result)) q
 s Flag="" f  q:'$l(result)  q:"<>+-"'[$e(result)  s Flag=Flag_$e(result),result=$e(result,2,$l(result))
 s result=Flag_$j(result,0,$e($p(FORMAT(tc),$c(2),18),2,9))
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(ep)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ABdun
 s %mmmsqld(12)=$g(^TEPI(%mmmsqld(5)))
 s date=$p(%mmmsqld(12),"\",10) s time=$p(%mmmsqld(12),"\",11)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ACdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5)))
 s date=$p(%mmmsqld(15),"\",10) s time=$p(%mmmsqld(15),"\",11)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(ep)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0CBdun
 s %mmmsqld(12)=$g(^TEPI(%mmmsqld(5)))
 s date=$p(%mmmsqld(12),"\",10) s time=$p(%mmmsqld(12),"\",11)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0CCdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5)))
 s date=$p(%mmmsqld(15),"\",10) s time=$p(%mmmsqld(15),"\",11)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(ep)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0EBdun
 s %mmmsqld(10)=$g(^TEPI(%mmmsqld(3)))
 s xx=$p(%mmmsqld(10),"\",11)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TEPI($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0ECdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(3)))
 s xx=$p(%mmmsqld(13),"\",11)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
]]></Routine>
</Export>
