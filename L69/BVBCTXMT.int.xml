<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTXMT" type="INT" languagemode="0"><![CDATA[
BVBCTXMT        ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:59 for Cache for Windows
 ; SP 18/12/95 
 ; 
 ; supported calls: 
 ; $$getall^BVBCTXMT() 
 ; 
 ; DECLARE CT_XMatchTestSet 
decCTXMT  
 q 
 ; GET ALL CT_XMatchTestSet 
getall()        n cnt,rowid,desc,code 
 K PLIST 
 d %CTXMT0o 
 ; 
 f cnt=1:1 d  q:SQLCODE 
 . d %0Co 
 . i 'SQLCODE s PLIST(cnt)=$p(rowid,$c(1))_$c(2)_desc
 s PLIST=$o(PLIST(""),-1) 
 ; 
 ; 
 d %CTXMT0c 
 q 0 
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTXMT0o s SQLCODE=$s($g(%CTXMT0c):-101,1:0) q:SQLCODE'=0
 s %CTXMT0c=1 k %CTXMT0m
 s %CTXMT0E=$zt,%CTXMT0f=0,%CTXMT0e=0,%CTXMT0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTXMT0d(1),$C(1))=""
%0ABk1 s $P(%CTXMT0d(1),$C(1))=$o(^CT("XM",$P(%CTXMT0d(1),$C(1))))
 i $P(%CTXMT0d(1),$C(1))="" g %0ABdun
 i 1>$P(%CTXMT0d(1),$C(1)),$P(%CTXMT0d(1),$C(1))=+$P(%CTXMT0d(1),$C(1)) g %0ABk1
 i $P(%CTXMT0d(1),$C(1))'=+$P(%CTXMT0d(1),$C(1)) g %0ABdun
 s %CTXMT0n=$g(^CT("XM",$P(%CTXMT0d(1),$C(1))))
 s %CTXMT0d(2)=$p(%CTXMT0n,"^",1)
 s %val=$P(%CTXMT0d(1),$C(1)) d %0ABs1:%val'="" s $P(%CTXMT0d(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTXMT0f=%CTXMT0f+1 s %CTXMT0c=10 q
%CTXMT0f i '$g(%CTXMT0c) s SQLCODE=-102 q
 i %CTXMT0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTXMT0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTXMT0c=100 q
%CTXMT0c i '$g(%CTXMT0c) s SQLCODE=-102 q
 k %CTXMT0c,%CTXMT0d,%CTXMT0e,%CTXMT0E,%CTXMT0f,%CTXMT0l,%CTXMT0L,%CTXMT0n,%CTXMT0r,%CTXMT0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTXMT0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTXMT0f q:SQLCODE'=0
 s rowid=%CTXMT0d(1),desc=%CTXMT0d(2)
 q
]]></Routine>
</Export>
