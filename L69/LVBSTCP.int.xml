<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBSTCP" type="INT" languagemode="0" generated="1"><![CDATA[
LVBSTCP ; IG 30/4/98 ;MVB Control code access for ST_StorageContainerPos
 ;
 ; supported calls:
 ;
 ; $$select^LVBSTCP(ROWID,skip)
 ; $$open^LVBSTCP(par,epis,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBSTCP(par,epis,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBSTCP(par,epis,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBSTCP(par,epis,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBSTCP()
 ; $$insert^LVBSTCP(par)
 ; $$update^LVBSTCP(ROWID)
 ; $$delete^LVBSTCP(ROWID,Comments)
 ; $$getall^LVBSTCP(par,epis)
 ;
  ;---&SQL(DECLARE STCP0 CURSOR FOR SELECT * FROM ST_StorageContainerPos
   ;---         WHERE STCP_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
  ;---&SQL(DECLARE STCP1 CURSOR FOR SELECT * FROM ST_StorageContainerPos
   ;---         WHERE STCP_Episode_DR = :epis)
   ;--- ** SQL PUBLIC Variables: SQLCODE, epis
 ; Insert the data
insert(par) s PLIST(0)=$g(par) K PLIST(1) d pre("N") 
 i $l(par) s ^TTST(par)=$g(^TTST(par))
  ;---&SQL(insert INTO ST_StorageContainerPos VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 I 'SQLCODE d  Q $$select(%ROWID)
 .s xRowID=%ROWID
 .n (xRowID) s stc=$p(xRowID,"||",1)
 .i '$$select^LVBSTC(stc,"Y") d
 ..f j=8,13 s x(j)=$$seldata^LVBCTSTC(stc,j)
 ..i x(13)="F" s PLIST(4)=PLIST(3)+x(8)
 ..i x(13)'="F" s PLIST(4)=$h+x(8)
 ..s PLIST(3)=$g(PLIST(3)) i '$l(PLIST(3)) s PLIST(3)=+$h
 ..i $$update^LVBSTC(stc)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE ST_StorageContainerPos VALUES :PLIST() WHERE STCP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM ST_StorageContainerPos WHERE STCP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Io
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(par,epis,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),epis=$g(epis),skip=$g(skip)
  ;---i '$l(epis) &SQL(OPEN STCP0)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i '$l(epis) Do %STCP00o
  ;---i $l(epis) &SQL(OPEN STCP1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i $l(epis) Do %STCP10o
 Q 0
 ; Fetch the data
fetch(par,epis,skip,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par),epis=$g(epis),skip=$g(skip)
  ;---i '$l(epis) &SQL(FETCH STCP0 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i '$l(epis) Do %0Mo
  ;---i $l(epis) &SQL(FETCH STCP1 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i $l(epis) Do %0No
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,epis,skip,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j) s par=$g(par),epis=$g(epis),skip=$g(skip)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,epis,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,epis,skip,p3,p4,p5,p6,p7,p8,p9) N (par,epis,skip,PLIST) s par=$g(par),epis=$g(epis),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,epis,skip)
 f cnt=1:1 Q:$$fetch(par,epis,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE STCP0) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %STCP00c 
  ;---&SQL(CLOSE STCP1) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %STCP10c 
 q 0
 ; select data by code
select(ROWID,skip) K PLIST S ROWID=$G(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM ST_StorageContainerPos WHERE STCP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Qo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("6","")
 S PLIST(2)=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("6")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(3))'="",$p($g(^TEPI($p(PLIST(2),$c(1)))),"\",44)'=9 d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBEPVIS(plist(3),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))_$c(1)_PLIST(86)
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 I $G(PLIST(7))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSPE(plist(7),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(7)=X K plist
 Q
getall(par,epis) N (par,epis,PLIST) K ^TMP($ZN,$J) s par=$g(par),epis=$g(epis)
 I $$open(par,epis,"Y")
 F cnt=1:1 Q:$$fetch(par,epis,"Y")  D
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%STCP00o s $zt="%STCP00E" s SQLCODE=$s($g(%STCP00c):-101,1:0) q:SQLCODE'=0  s %STCP00d(12)=0 s %STCP00d(13)=0,%STCP00d(14)=""
 s %STCP00d(9)=$g(par)
 s %STCP00c=1 q
%STCP00E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %STCP00c,%STCP00d,%STCP00E,%STCP00l,%STCP00n,%STCP00R,%STCP00Z q
%0Afirst 
 ; asl MOD# 2
 s %STCP00d(1)=%STCP00d(9)
 i %STCP00d(1)="" g %0ABdun
 s %STCP00d(3)=""
%0ABk1 s %STCP00d(3)=$o(^TTST(%STCP00d(1),"POS",%STCP00d(3)))
 i %STCP00d(3)="" g %0ABdun
 s %STCP00d(20)=$g(^TTST(%STCP00d(1),"POS",%STCP00d(3)))
 s %STCP00d(4)=$p(%STCP00d(20),"\",1) s %STCP00d(5)=$p(%STCP00d(20),"\",2) s %STCP00d(6)=$p(%STCP00d(20),"\",3) s %STCP00d(8)=$p(%STCP00d(20),"\",4)
 s %STCP00d(7)="" f %irep=1:1:$g(^TTST(%STCP00d(1),"POS",%STCP00d(3),"REM",0)) s $li(%STCP00d(7),%irep)=$g(^(%irep))
 s %STCP00d(2)=(%STCP00d(1))_"||"_(%STCP00d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTST($p(%STCP00d(2),"||",1),"POS",$p(%STCP00d(2),"||",2))#"S":$zu(115,4) i $t { s %STCP00d(13)=1,%STCP00d(14)=$name(^TTST($p(%STCP00d(2),"||",1),"POS",$p(%STCP00d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainerPos for RowID value: "_%STCP00d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %STCP00d(11)=$p(%STCP00d(2),"||"),%STCP00d(3)=$p(%STCP00d(2),"||",2)
 i %STCP00d(11)'="",%STCP00d(3)'="",$d(^TTST(%STCP00d(11),"POS",%STCP00d(3)))
 e  g %0ACdun
 s %STCP00d(26)=$g(^TTST(%STCP00d(11),"POS",%STCP00d(3)))
 s %STCP00d(4)=$p(%STCP00d(26),"\",1) s %STCP00d(5)=$p(%STCP00d(26),"\",2) s %STCP00d(6)=$p(%STCP00d(26),"\",3) s %STCP00d(8)=$p(%STCP00d(26),"\",4)
 s %STCP00d(7)="" f %irep=1:1:$g(^TTST(%STCP00d(11),"POS",%STCP00d(3),"REM",0)) s $li(%STCP00d(7),%irep)=$g(^(%irep))
 s %STCP00d(1)=$p(%STCP00d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %STCP00d(12)=%STCP00d(12)+1,%ROWCOUNT=%STCP00d(12),%ROWID=%STCP00d(2),%STCP00c=10 q
%STCP00f i '$g(%STCP00c) { s SQLCODE=-102 q  } i %STCP00c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%STCP00d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%STCP00d(12),%STCP00c=100 q  } g %0Afirst:%STCP00c=1
%0ACdun i $zu(115,2)=1,$g(%STCP00d(13))=1 { l -@%STCP00d(14) s %STCP00d(13)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%STCP00d(12),SQLCODE=100,%STCP00c=100 q
%STCP00c i '$g(%STCP00c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%STCP00d(12)),1:0)
 i $zu(115,2)=1,$g(%STCP00d(13))=1 { l -@%STCP00d(14) } k %STCP00c,%STCP00d,%STCP00E,%STCP00l,%STCP00n,%STCP00R,%STCP00Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %STCP00c=100 q
%STCP10o s $zt="%STCP10E" s SQLCODE=$s($g(%STCP10c):-101,1:0) q:SQLCODE'=0  s %STCP10d(14)=0 s %STCP10d(15)=0,%STCP10d(16)=""
 s %STCP10d(9)=$g(epis)
 s %STCP10c=1 q
%STCP10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %STCP10c,%STCP10d,%STCP10E,%STCP10l,%STCP10n,%STCP10R,%STCP10Z q
%0Cfirst 
 ; asl MOD# 2
 s %STCP10d(4)=%STCP10d(9)
 i %STCP10d(4)="" g %0CBdun
 i '(%STCP10d(4)'="") g %0CBdun
 s %STCP10d(1)=""
%0CBk1 s %STCP10d(1)=$o(^TTSTi("Episode",%STCP10d(4),%STCP10d(1)))
 i %STCP10d(1)="" g %0CBdun
 s %STCP10d(3)=""
%0CBk2 s %STCP10d(3)=$o(^TTSTi("Episode",%STCP10d(4),%STCP10d(1),%STCP10d(3)))
 i %STCP10d(3)="" g %0CBk1
 s %STCP10d(2)=(%STCP10d(1))_"||"_(%STCP10d(3))
 s %STCP10d(11)=$p(%STCP10d(2),"||"),%STCP10d(3)=$p(%STCP10d(2),"||",2)
 i %STCP10d(11)'="",%STCP10d(3)'="",$d(^TTST(%STCP10d(11),"POS",%STCP10d(3)))
 e  g %0CBk2
 s %STCP10d(28)=$g(^TTST(%STCP10d(11),"POS",%STCP10d(3)))
 s %STCP10d(5)=$p(%STCP10d(28),"\",2) s %STCP10d(6)=$p(%STCP10d(28),"\",3) s %STCP10d(8)=$p(%STCP10d(28),"\",4)
 s %STCP10d(7)="" f %irep=1:1:$g(^TTST(%STCP10d(11),"POS",%STCP10d(3),"REM",0)) s $li(%STCP10d(7),%irep)=$g(^(%irep))
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTST($p(%STCP10d(2),"||",1),"POS",$p(%STCP10d(2),"||",2))#"S":$zu(115,4) i $t { s %STCP10d(15)=1,%STCP10d(16)=$name(^TTST($p(%STCP10d(2),"||",1),"POS",$p(%STCP10d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainerPos for RowID value: "_%STCP10d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %STCP10d(12)=$lb(""_%STCP10d(4))
 s %STCP10d(11)=$p(%STCP10d(2),"||"),%STCP10d(3)=$p(%STCP10d(2),"||",2)
 i %STCP10d(11)'="",%STCP10d(3)'="",$d(^TTST(%STCP10d(11),"POS",%STCP10d(3)))
 e  g %0CCdun
 s %STCP10d(34)=$g(^TTST(%STCP10d(11),"POS",%STCP10d(3)))
 s %STCP10d(4)=$p(%STCP10d(34),"\",1) s %STCP10d(5)=$p(%STCP10d(34),"\",2) s %STCP10d(6)=$p(%STCP10d(34),"\",3) s %STCP10d(8)=$p(%STCP10d(34),"\",4)
 s %STCP10d(7)="" f %irep=1:1:$g(^TTST(%STCP10d(11),"POS",%STCP10d(3),"REM",0)) s $li(%STCP10d(7),%irep)=$g(^(%irep))
 s %STCP10d(1)=$p(%STCP10d(2),"||")
 s %STCP10d(13)=$lb(""_%STCP10d(4))
 g:%STCP10d(12)'=%STCP10d(13) %0CCdun
%0CBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %STCP10d(14)=%STCP10d(14)+1,%ROWCOUNT=%STCP10d(14),%ROWID=%STCP10d(2),%STCP10c=10 q
%STCP10f i '$g(%STCP10c) { s SQLCODE=-102 q  } i %STCP10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%STCP10d(14))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%STCP10d(14),%STCP10c=100 q  } g %0Cfirst:%STCP10c=1
%0CCdun i $zu(115,2)=1,$g(%STCP10d(15))=1 { l -@%STCP10d(16) s %STCP10d(15)=0 }
 g %0CBk2
%0CBdun 
%0CAdun 
 s %ROWCOUNT=%STCP10d(14),SQLCODE=100,%STCP10c=100 q
%STCP10c i '$g(%STCP10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%STCP10d(14)),1:0)
 i $zu(115,2)=1,$g(%STCP10d(15))=1 { l -@%STCP10d(16) } k %STCP10c,%STCP10d,%STCP10E,%STCP10l,%STCP10n,%STCP10R,%STCP10Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %STCP10c=100 q
%0Eo n %i,icol,ir
 f icol=0:1:7 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.STStorageContainerPos.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTST(%mmmsqld(4),"POS",%mmmsqld(5)))
 e  g %0GBdun
 s %mmmsqld(13)=$$%getlock^User.STStorageContainerPos.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTST(%mmmsqld(4),"POS",%mmmsqld(5)))
 e  g %0GCdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.STStorageContainerPos.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.STStorageContainerPos.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.STStorageContainerPos.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.STStorageContainerPos.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTST(%mmmsqld(3),"POS",%mmmsqld(4)))
 e  g %0IBdun
 s %mmmsqld(12)=$$%getlock^User.STStorageContainerPos.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTST(%mmmsqld(3),"POS",%mmmsqld(4)))
 e  g %0ICdun
 d %delete^User.STStorageContainerPos.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.STStorageContainerPos.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.STStorageContainerPos.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.STStorageContainerPos.T1(%mmmsqld(1)) g %0Ic
%0Mo d %STCP00f q:SQLCODE'=0
 s PLIST(0)=%STCP00d(1),PLIST(1)=%STCP00d(2),PLIST(2)=%STCP00d(3),PLIST(3)=%STCP00d(4),PLIST(4)=%STCP00d(5),PLIST(5)=%STCP00d(6),PLIST(6)=%STCP00d(7),PLIST(7)=%STCP00d(8)
 q
%0No d %STCP10f q:SQLCODE'=0
 s PLIST(0)=%STCP10d(1),PLIST(1)=%STCP10d(2),PLIST(2)=%STCP10d(3),PLIST(3)=%STCP10d(4),PLIST(4)=%STCP10d(5),PLIST(5)=%STCP10d(6),PLIST(6)=%STCP10d(7),PLIST(7)=%STCP10d(8)
 q
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(10)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(10)
 s %mmmsqld(12)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(12)'="",PLIST(2)'="",$d(^TTST(%mmmsqld(12),"POS",PLIST(2)))
 e  g %0QBdun
 s %mmmsqld(20)=$g(^TTST(%mmmsqld(12),"POS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",2) s PLIST(5)=$p(%mmmsqld(20),"\",3) s PLIST(7)=$p(%mmmsqld(20),"\",4)
 s PLIST(6)="" f %irep=1:1:$g(^TTST(%mmmsqld(12),"POS",PLIST(2),"REM",0)) s $li(PLIST(6),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0QBuncommitted i $zu(115,2)=1 l +^TTST($p(PLIST(1),"||",1),"POS",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TTST($p(PLIST(1),"||",1),"POS",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainerPos for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(12)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(12)'="",PLIST(2)'="",$d(^TTST(%mmmsqld(12),"POS",PLIST(2)))
 e  g %0QCdun
 s %mmmsqld(26)=$g(^TTST(%mmmsqld(12),"POS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(26),"\",1) s PLIST(4)=$p(%mmmsqld(26),"\",2) s PLIST(5)=$p(%mmmsqld(26),"\",3) s PLIST(7)=$p(%mmmsqld(26),"\",4)
 s PLIST(6)="" f %irep=1:1:$g(^TTST(%mmmsqld(12),"POS",PLIST(2),"REM",0)) s $li(PLIST(6),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||")
%0QBuncommitted ;
 s SQLCODE=0 g %0Qc
%0QCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Qc
]]></Routine>
</Export>
