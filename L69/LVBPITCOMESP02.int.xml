<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBPITCOMESP02" type="INT" languagemode="0" generated="1"><![CDATA[
LVBPITCOMESP02 ; CREATE PIT FORMAT FILE - BADALONA
 ; ---------------------------------
 ; CREATE PIT FORMAT FILE - BADALONA
 ; June 2003, by Mc_Fly
 ; Trakhealth BCN
 ;
 ; supported calls:
 ;
 ; create^LVBPITCOMESP02
 ; ---------------------------------
create 
 n
 s $zt="err^"_$zn
 l +^TEDI("OUT-DATA","PIT")
 i $$select^MVBCFSM(1) q
 s dir=PLIST(35)
 f j="\","/" i dir[j,$e(dir,$l(dir))'=j s dir=dir_j
 s client=""
 f  s client=$o(^TEDI("OUT-DATA","PIT",client)) q:client=""  d
 . s email="" i '$$select^LVBCTCLN(client) s email=PLIST(4)
 . s fileno=""
 . f  s fileno=$o(^TEDI("OUT-DATA","PIT",client,fileno)) q:fileno=""  d
 .. s file=$p(^(fileno),"^",2)
 .. s wfile=dir_file
 .. o wfile:"WNS":5 e  q
 .. u wfile
 .. s seq=""
 .. s swcrlf=0
 .. f  s seq=$o(^TEDI("OUT-DATA","PIT",client,fileno,"SEQ",seq)) q:seq=""  d
 ... i swcrlf w !
 ... w ^(seq) s swcrlf=1
 .. 
 .. c wfile
 .. s $p(^TEDI("OUT-DATA","PIT",client,fileno),"^",1)=$h
 .. 
 .. ; create history on episodes for sent tests
 .. s epis=""
 .. f  s epis=$o(^TEDI("OUT-DATA","PIT",client,fileno,"EPIS",epis)) q:epis=""  d
 ... s (ListSent,ts)=""
 ... f  s ts=$o(^TEDI("OUT-DATA","PIT",client,fileno,"EPIS",epis,ts)) q:ts=""  d
 ....  ;---&SQL(SELECT CTTS_Synonym INTO :PLIST() FROM CT_TestSet WHERE CTTS_RowID=:ts)
  ....  ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, ts
 .... Do %0Ao
 .... s ListSent=ListSent_$s($l(ListSent):",",1:"")_PLIST(4)
 ... i $l(ListSent) d events^LVBCOM01(epis,"ER","Electronic Report <"_file_"> "_ListSent)
 .. m ^TEDI("SENT-DATA","PIT",client,fileno)=^TEDI("OUT-DATA","PIT",client,fileno)
 .. k ^TEDI("OUT-DATA","PIT",client,fileno)
 .. i $l(email) d email^LVBEDI00(file,email)
 l -^TEDI("OUT-DATA","PIT")
 q
err D BACK^%ETN
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(ts)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(12)=$g(^TTAB("TS",%mmmsqld(3)))
 s PLIST(4)=$p(%mmmsqld(12),"\",2)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("TS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  g %0ACdun
 s %mmmsqld(17)=$g(^TTAB("TS",%mmmsqld(3)))
 s PLIST(4)=$p(%mmmsqld(17),"\",2)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
]]></Routine>
</Export>
