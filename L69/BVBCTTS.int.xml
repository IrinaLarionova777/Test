<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTTS" type="INT" languagemode="0"><![CDATA[
BVBCTTS ; IG 11/5/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:58 for Cache for Windows
 ; 
 ; supported calls: 
 ; $$open^BVBCTTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetch^BVBCTTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchbuffer^BVBCTTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchall^BVBCTTS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$close^BVBCTTS() 
 ; $$select^BVBCTTS(ROWID)
 ; $$selcode^BVBCTTS(testset)
 ; $$insert^BVBCTTS()
 ; $$update^BVBCTTS(ROWID)
 ; $$delete^BVBCTTS(ROWID,Comments)
 ; $$getall^BVBCTTS(param)
 ; 
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTTS00o 
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
 d %0Co
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
 ; 
close() d %CTTS00c 
 q 0 
 ;
select(ROWID)  k PLIST S ROWID=$G(ROWID)
 d %0Eo 
 s PLIST=$O(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
 ;        
selcode(testset) k PLIST S testset=$G(testset)
 d %0Fo 
 s PLIST=$O(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
 ;        
insert() K PLIST(1)
 d %0Go
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) k PLIST(1) S ROWID=$G(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(ROWID)
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Io
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
getall(param) N (param,PLIST) K ^TMP($ZN,$J) s param=$g(param),grid=$p(param,"|",3),chkgrp=$p(param,"|",4),par=""
 I $$open()
 s cnt=0 F  Q:$$fetch()  d
 .s PLIST(2)=$p(PLIST(2),$c(1))
 .i $p(param,"|")["UUPR",$$bbtest^BVBCTCTS(PLIST(2),grid)="N" q
 .i $p(param,"|",2)["UUPR",$$bbtest^BVBCTCTS(PLIST(2),grid)="Y" q
 .s cnt=cnt+1,^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$s(PLIST(2)="":"",1:$p($g(^TTAB("TS",PLIST(2))),"\",2))_$c(2)_$P(PLIST(2),$c(1))
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 I $$close()
 K ^TMP($ZN,$J)
 Q 0
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 n plist,SQLCODE
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTS(plist(2))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 ;
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%CTTS00o s SQLCODE=$s($g(%CTTS00c):-101,1:0) q:SQLCODE'=0
 s %CTTS00c=1 k %CTTS00m
 s %CTTS00E=$zt,%CTTS00f=0,%CTTS00e=0,%CTTS00L=""
 s %CTTS00d(3)=$P(par,$C(1))
 s %CTTS00d(4)=$$ALPHAUP(%CTTS00d(3))
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTTS00d(6),$C(1))=""
%0ABk1 s $P(%CTTS00d(6),$C(1))=$o(^CT("BBTS",$P(%CTTS00d(6),$C(1))))
 i $P(%CTTS00d(6),$C(1))="" g %0ABdun
 i 1>$P(%CTTS00d(6),$C(1)),$P(%CTTS00d(6),$C(1))=+$P(%CTTS00d(6),$C(1)) g %0ABk1
 i $P(%CTTS00d(6),$C(1))'=+$P(%CTTS00d(6),$C(1)) g %0ABdun
 s %CTTS00n=$g(^CT("BBTS",$P(%CTTS00d(6),$C(1))))
 s %CTTS00d(1)=$p(%CTTS00n,"^",1)
 s %val=$P(%CTTS00d(6),$C(1)) d %0ABs1:%val'="" s $P(%CTTS00d(6),$C(1),2)=%val
 s %CTTS00d(2)=$$ALPHAUP(%CTTS00d(1))
 g:'((%CTTS00d(4))=$E((%CTTS00d(2)),1,$L((%CTTS00d(4))))) %0ABk1
 s SQLCODE=0 s:SQLCODE=0 %CTTS00f=%CTTS00f+1 s %CTTS00c=10 q
%CTTS00f i '$g(%CTTS00c) s SQLCODE=-102 q
 i %CTTS00c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTTS00c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTTS00c=100 q
%CTTS00c i '$g(%CTTS00c) s SQLCODE=-102 q
 k %CTTS00c,%CTTS00d,%CTTS00e,%CTTS00E,%CTTS00f,%CTTS00l,%CTTS00L,%CTTS00n,%CTTS00r,%CTTS00R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTTS00E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTTS00f q:SQLCODE'=0
 s PLIST(1)=%CTTS00d(6),PLIST(2)=%CTTS00d(1)
 q
%0EAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("BBTS",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0EBdun
 s %mmmsqln=$g(^CT("BBTS",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(testset,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(testset,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(2)=$g(%mmmsqld(3))
 i PLIST(2)="" g %0FBdun
 s $P(PLIST(1),$C(1))=""
%0FBk1 s $P(PLIST(1),$C(1))=$o(^CT("BBTS",0,"TS",PLIST(2),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0FBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0FBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
 g %0FBk1
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %insert,icol,ir
 f icol=0:1:2 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt2541("1")
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("BBTS",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0HBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:2 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt2541(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("BBTS",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0IBdun
 d delete^mt2541(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
