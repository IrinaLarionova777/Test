<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1931" type="INT" languagemode="0"><![CDATA[
mt1931  ; Compiled April 20, 2007 16:49:24 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1931(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0D^mt1931
 d file
 d trig0A^mt1931
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1931(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(0))'="",$g(%data(2))'="" d
 . s %data(1)=$g(%data(0))_"||"_$g(%data(2))
 . d insertnw^mt1931(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1931 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt1931
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:20 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1931(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:20 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1931(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1931 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0C^mt1931
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^THIR($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^THIR($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0,subs(1437)=$p(%data(1),"||",1,1)
 i $g(tupkill) k ^THIR(subs(1437),%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",1)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",2)=$p($g(%data(4)),$c(1))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",3)=$g(%data(5))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",5)=$g(%data(7))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",6)=$g(%data(12))
 i $d(%edit(11)) s x=$g(%data(11)),^THIR(subs(1437),%data(2),"REM",0)=x d  
 . s irep=%edit(11) s:irep<x irep=x f irep=1:1:irep s:irep'>x ^(irep)=$g(%data(11,irep)) k:irep>x ^(irep)
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",7)=$p($g(%data(13)),$c(1))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",8)=$g(%data(15))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",9)=$p($g(%data(16)),$c(1))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",10)=$g(%data(17))
 i $d(%edit(18)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",4)=$p($g(%data(18)),$c(1))
 i $d(%edit(19)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",11)=$g(%data(19))
 i $d(%edit(20)) s:'($d(tempn)#2) tempn=$g(^THIR(subs(1437),%data(2))) s $p(tempn,"\",12)=$g(%data(20))
 s:$d(tempn)#2 ^THIR(subs(1437),%data(2))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(1)'="" s sn(2)=$g(subs(1437)) i sn(2)'=""
 i  i $d(^THIRi("Accession",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^THIRi("Accession",sn(1),sn(2)) k ^THIRi("Accession",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(2)) i sn(1)'="" s sn(2)=$g(subs(1437)) i sn(2)'=""
 e  g map1dun
 s ^THIRi("Accession",sn(1),sn(2))=tempn
map1dun s node=1,tempn=""
 i $p($s($d(%edit(13)):%edit(13),1:$g(%data(13))),$c(1))="TD"
 i  i '$g(%edit) s sn(1)=$g(subs(1437)) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'=""
 i  i $d(^THIRi("Discard",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^THIRi("Discard",sn(1),sn(2)) k ^THIRi("Discard",sn(1),sn(2))
 i $p($g(%data(13)),$c(1))="TD"
 i  i '$g(tupkill) s sn(1)=$g(subs(1437)) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'=""
 e  g map2dun
 s ^THIRi("Discard",sn(1),sn(2))=tempn
map2dun s node=1,tempn=""
 i $p($s($d(%edit(13)):%edit(13),1:$g(%data(13))),$c(1))="Y"
 i  i '$g(%edit) s sn(1)=$g(subs(1437)) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'=""
 i  i $d(^THIRi("Retain",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^THIRi("Retain",sn(1),sn(2)) k ^THIRi("Retain",sn(1),sn(2))
 i $p($g(%data(13)),$c(1))="Y"
 i  i '$g(tupkill) s sn(1)=$g(subs(1437)) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'=""
 e  g map3dun
 s ^THIRi("Retain",sn(1),sn(2))=tempn
map3dun s node=1,tempn=""
 i $p($s($d(%edit(18)):%edit(18),1:$g(%data(18))),$c(1))="Y"
 i  i '$g(%edit) s sn(1)=$g(subs(1437)) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'=""
 i  i $d(^THIRi("Review",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^THIRi("Review",sn(1),sn(2)) k ^THIRi("Review",sn(1),sn(2))
 i $p($g(%data(18)),$c(1))="Y"
 i  i '$g(tupkill) s sn(1)=$g(subs(1437)) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'=""
 e  g map4dun
 s ^THIRi("Review",sn(1),sn(2))=tempn
map4dun q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d POFILDEL^at193 s %didit=1 i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d POFILINS^at193 s %didit=1 i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d POFILUPD^at193 s %didit=1 i $d(%skip) g trgdoneC
 d trigB0C i $d(%skip) g trgdoneC
trgdoneC q  ;  trigger done
trigB0C s %didit=1
 i $$check^LVBCOM02($g(%data(1)),193)
 q
 d %0Eo
 d %0Fo
trig0D n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d PREFDEL^at193 s %didit=1 i $d(%skip) g trgdoneD
 d trigB0D i $d(%skip) g trgdoneD
  d %0Eo^mt1931  s %didit=1
  d %0Fo^mt1931  s %didit=1
trgdoneD q  ;  trigger done
trigB0D s %didit=1
 i $$delete^LVBCOM02($g(%edit(1)),193,"2")
 q
 d %0Go
getold(%dataold) g %0Go
code8 ; compute code of field HIVAC_CalcLabCode_DR
 s %data(8)=""
 s %data(8)=$$CT008^at193($g(%data(2)))
 q
comp8 ; entry point to do computed field HIVAC_CalcLabCode_DR
 n %oldval q:(","_$g(trak)_",")[(",8,")
 s %oldval=$g(%data(8)) d code8 s %ok=1 i $g(%data(8))=%oldval q
 s %val=$p($g(%data(8)),$c(1)) d:%val'="" fdv8^mt1931 s:'%ok %data(8)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","HIVAC_CalcLabCode_DR","",%msg) q
 i $g(%data(8))="",%oldval="" q
 q
code9 ; compute code of field HIVAC_CalcYear
 s %data(9)=""
 s %data(9)=$$CT009^at193($g(%data(2)))
 q
comp9 ; entry point to do computed field HIVAC_CalcYear
 n %oldval q:(","_$g(trak)_",")[(",9,")
 s %oldval=$g(%data(9)) d code9 s %ok=1 i $g(%data(9))=%oldval q
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","HIVAC_CalcYear","",%msg) q
 i $g(%data(9))="",%oldval="" q
 q
code10 ; compute code of field HIVAC_CalcAccession
 s %data(10)=""
 s %data(10)=$$CT010^at193($g(%data(2)))
 q
comp10 ; entry point to do computed field HIVAC_CalcAccession
 n %oldval q:(","_$g(trak)_",")[(",10,")
 s %oldval=$g(%data(10)) d code10 s %ok=1 i $g(%data(10))=%oldval q
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","HIVAC_CalcAccession","",%msg) q
 i $g(%data(10))="",%oldval="" q
 q
code14 ; compute code of field HIVAC_CalcSite
 s %data(14)=""
 S %data(14)=$$CT014^at193($g(%data(2)))
 q
comp14 ; entry point to do computed field HIVAC_CalcSite
 n %oldval q:(","_$g(trak)_",")[(",14,")
 s %oldval=$g(%data(14)) d code14 s %ok=1 i $g(%data(14))=%oldval q
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","HIVAC_CalcSite","",%msg) q
 i $g(%data(14))="",%oldval="" q
 q
code6 ; compute code of field HIVAC_CalcTestSets
 s %data(6)=""
 s %data(6)=$$CT006^at193($g(%data(0)),$g(%data(2)))
 q
comp6 ; entry point to do computed field HIVAC_CalcTestSets
 n %oldval q:(","_$g(trak)_",")[(",6,")
 s %oldval=$g(%data(6)) d code6 s %ok=1 i $g(%data(6))=%oldval q
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","HIVAC_CalcTestSets","",%msg) q
 i $g(%data(6))="",%oldval="" q
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"HI_HistDayBookVisAcc"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="HI_HistDayBookVisitAccession Row ID" d %mdiag(%oper,-106,"Fld Int","Req","HIVAC_RowId","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(0)) s %ok="HI_HistDayBookVisit Parent Reference" d %mdiag(%oper,-106,"Fld Int","Req","HIVAC_ParRef","",%ok) s %msg=%ok,%ok=0
 q
inf0 ; get value for field HIVAC_ParRef
 i $c(1)'[$g(%data(0)),$p(%data(0),$c(1))="" s %val=$p(%data(0),$c(1),2) g ine0
 i $c(1)'[$g(%data(0)) s %val=$p(%data(0),$c(1)) g ini0
 i $c(1)'[$g(%insert(0)),$p(%insert(0),$c(1))="" s %val=$p(%insert(0),$c(1),2) g ine0
 i $c(1)'[$g(%insert(0)) s %val=$p(%insert(0),$c(1)) g ini0
 s %val=$g(da192)
ine0 ; external to internal conversion code for field HIVAC_ParRef
ini0 ; internal validation code and uniqueness, also int-ext
 d fdv0^mt1931 q:'%ok
 s %data(0)=%val
 s:$c(1)[%data(0) %ok=0 s:%ok %edit(0)=""
 q
inf2 ; get value for field HIVAC_AccessionNo
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field HIVAC_AccessionNo
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table HI_HistDayBookVisAcc
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf0 i '%ok g:'iform rowiderr s rowerr=1
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(0),$c(1))_"||"_$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1931 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini0 g:'%ok rowiderr
 s %val=$p(%data(1),"||",2) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,0,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt1931
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,0,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp8^mt1931 d comp9^mt1931 d comp10^mt1931 d comp14^mt1931 d comp6^mt1931
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde13 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="2206",irn=193,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,193,2,2206,36,"get",%val))
 n found s found=0
 i 'found,$f("|Retain Specimen|To be Discard|Discarded|Complete|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("Y|TD|D|C","|",$l($p("|Retain Specimen|To be Discard|Discarded|Complete|","|"_%val_"|"),"|"))
 q
fde4 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(0)),$p(%data(0),$c(1))="",$p(%data(0),$c(1),2)'="" s %val=$p(%data(0),$c(1),2) s %data(0)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=4 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","HIVAC_ConsentToCCR","",$g(%msg))
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) s %data(8)=%val
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 f %irep=1:1:$g(%data(11)) i $d(%data(11,%irep)),$p(%data(11,%irep),$c(1))="",$p(%data(11,%irep),$c(1),2)'="" s %val=$p(%data(11,%irep),$c(1),2) s %data(11,%irep)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=13 d etiok
 . s %msg="" d fde13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","HIVAC_RetainSample","",$g(%msg))
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) s %data(14)=%val
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) s %data(15)=%val
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=16 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","HIVAC_SpecimenUnlabelled","",$g(%msg))
 i $d(%data(17)),$p(%data(17),$c(1))="",$p(%data(17),$c(1),2)'="" s %val=$p(%data(17),$c(1),2) s %data(17)=%val
 i $d(%data(18)),$p(%data(18),$c(1))="",$p(%data(18),$c(1),2)'="" s %val=$p(%data(18),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=18 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","HIVAC_Review","",$g(%msg))
 i $d(%data(19)),$p(%data(19),$c(1))="",$p(%data(19),$c(1),2)'="" s %val=$p(%data(19),$c(1),2) s %data(19)=%val
 i $d(%data(20)),$p(%data(20),$c(1))="",$p(%data(20),$c(1),2)'="" s %val=$p(%data(20),$c(1),2) s %data(20)=%val
 q
fdv0 ; DO validation and additional validation code
 n nval s nval=%val d %0Jo
  i SQLCODE'=0 s %ok=0
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv12 ; DO validation and additional validation code
 n nval s nval=%val d %0Mo
  i SQLCODE'=0 s %ok=0
 q
fdv13 ; DO validation and additional validation code
 i %val="|~~|NULL|~~|" s %ok=0 q
 q
fdv15 ; DO validation and additional validation code
 n nval s nval=%val d %0No
  i SQLCODE'=0 s %ok=0
 q
fdv4 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv5 ; DO validation and additional validation code
 n nval s nval=%val d %0Ko
  i SQLCODE'=0 s %ok=0
 q
fdv8 ; DO validation and additional validation code
 n nval s nval=%val d %0Lo
  i SQLCODE'=0 s %ok=0
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Io q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="HIVAC_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","HIVAC_RowId","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_RowId","",$g(%msg))
 i $d(%edit(0)),%data(0)'=%edit(0) s %icol=0 s %val=$p(%data(0),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv0 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_ParRef","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_ConsentToCCR","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_TCode_DR","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_CalcLabCode_DR","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_PathologistMicro_DR","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_RetainSample","",$g(%msg))
 i $d(%edit(15)),%data(15)'=%edit(15) s %icol=15 s %val=$p(%data(15),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv15 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_Site_DR","",$g(%msg))
 i $d(%edit(16)),%data(16)'=%edit(16) s %icol=16 s %val=$p(%data(16),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_SpecimenUnlabelled","",$g(%msg))
 i $d(%edit(18)),%data(18)'=%edit(18) s %icol=18 s %val=$p(%data(18),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","HIVAC_Review","",$g(%msg))
 q
fdi13 s %val=$p("Retain Specimen|To be Discard|Discarded|Complete","|",$l($p("|Y|TD|D|C|","|"_%val_"|"),"|"))
 q
fdi4 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(0)),%data(0)[$c(1) s %data(0)=$s($p(%data(0),$c(1))'="":$p(%data(0),$c(1)),1:$p(%data(0),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),$p(%data(4),$c(1))'="" s %val=$p(%data(4),$c(1)) d fdi4 s $p(%data(4),$c(1),2)=%val
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),%data(6)[$c(1) s %data(6)=$s($p(%data(6),$c(1))'="":$p(%data(6),$c(1)),1:$p(%data(6),$c(1),2))
 i $d(%data(7)),%data(7)[$c(1) s %data(7)=$s($p(%data(7),$c(1))'="":$p(%data(7),$c(1)),1:$p(%data(7),$c(1),2))
 i $d(%data(8)),%data(8)[$c(1) s %data(8)=$s($p(%data(8),$c(1))'="":$p(%data(8),$c(1)),1:$p(%data(8),$c(1),2))
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),%data(10)[$c(1) s %data(10)=$s($p(%data(10),$c(1))'="":$p(%data(10),$c(1)),1:$p(%data(10),$c(1),2))
 f %irep=1:1:$g(%data(11)) i $d(%data(11,%irep)),%data(11,%irep)[$c(1) s %data(11,%irep)=$s($p(%data(11,%irep),$c(1))'="":$p(%data(11,%irep),$c(1)),1:$p(%data(11,%irep),$c(1),2))
 i $d(%data(12)),%data(12)[$c(1) s %data(12)=$s($p(%data(12),$c(1))'="":$p(%data(12),$c(1)),1:$p(%data(12),$c(1),2))
 i $d(%data(13)),$p(%data(13),$c(1))'="" s %val=$p(%data(13),$c(1)) d fdi13 s $p(%data(13),$c(1),2)=%val
 i $d(%data(14)),%data(14)[$c(1) s %data(14)=$s($p(%data(14),$c(1))'="":$p(%data(14),$c(1)),1:$p(%data(14),$c(1),2))
 i $d(%data(15)),%data(15)[$c(1) s %data(15)=$s($p(%data(15),$c(1))'="":$p(%data(15),$c(1)),1:$p(%data(15),$c(1),2))
 i $d(%data(16)),$p(%data(16),$c(1))'="" s %val=$p(%data(16),$c(1)) d fdi4 s $p(%data(16),$c(1),2)=%val
 i $d(%data(17)),%data(17)[$c(1) s %data(17)=$s($p(%data(17),$c(1))'="":$p(%data(17),$c(1)),1:$p(%data(17),$c(1),2))
 i $d(%data(18)),$p(%data(18),$c(1))'="" s %val=$p(%data(18),$c(1)) d fdi4 s $p(%data(18),$c(1),2)=%val
 i $d(%data(19)),%data(19)[$c(1) s %data(19)=$s($p(%data(19),$c(1))'="":$p(%data(19),$c(1)),1:$p(%data(19),$c(1),2))
 i $d(%data(20)),%data(20)[$c(1) s %data(20)=$s($p(%data(20),$c(1))'="":$p(%data(20),$c(1)),1:$p(%data(20),$c(1),2))
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt1931 q:'%ok
 d comp8^mt1931 d comp9^mt1931 d comp10^mt1931 d comp14^mt1931 d comp6^mt1931
 q
 g ^mt1932
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0EBdun
 i %mmmsqld(6)="" g %0EBdun
 s %mmmsqld(4)=""
%0EBk1 s %mmmsqld(4)=$o(^THIR(%mmmsqld(5),%mmmsqld(6),"BLOCK",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0EBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt1941(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0EBk1
%0EBdun 
%0EAdun 
 q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0FBdun
 i %mmmsqld(6)="" g %0FBdun
 s %mmmsqld(4)=""
%0FBk1 s %mmmsqld(4)=$o(^THIR(%mmmsqld(5),%mmmsqld(6),"TEST",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0FBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt2711(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0FBk1
%0FBdun 
%0FAdun 
 q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0GBr3 s %dataold(6)=$$CT006^at193($g(%dataold(0)),$g(%dataold(2))) q
%0GBr4 s %dataold(8)=$$CT008^at193($g(%dataold(2))) q
%0GBr5 s %dataold(9)=$$CT009^at193($g(%dataold(2))) q
%0GBr6 s %dataold(10)=$$CT010^at193($g(%dataold(2))) q
%0GBr7 S %dataold(14)=$$CT014^at193($g(%dataold(2))) q
%0GBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0GBs2 s %val=$p("Retain Specimen|To be Discard|Discarded|Complete","|",$l($p("|Y|TD|D|C|","|"_%val_"|"),"|")) q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %mmmsqld(25)=$p($g(%dataold(1)),"||",1,1),%dataold(2)=$p($g(%dataold(1)),"||",2,2)
 i %mmmsqld(25)'="",%dataold(2)'="",$d(^THIR(%mmmsqld(25),%dataold(2)))
 e  g %0GBdun
 s %mmmsqln=$g(^THIR(%mmmsqld(25),%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(7)=$p(%mmmsqln,"\",5) s %dataold(12)=$p(%mmmsqln,"\",6) s %dataold(13)=$p(%mmmsqln,"\",7) s %dataold(15)=$p(%mmmsqln,"\",8) s %dataold(16)=$p(%mmmsqln,"\",9) s %dataold(17)=$p(%mmmsqln,"\",10)
 s %dataold(18)=$p(%mmmsqln,"\",4) s %dataold(19)=$p(%mmmsqln,"\",11) s %dataold(20)=$p(%mmmsqln,"\",12)
 k %dataold(11) s %dataold(11)=$g(^THIR(%mmmsqld(25),%dataold(2),"REM",0)) s:'%dataold(11) %dataold(11)="" f %irep=1:1:%dataold(11) s %dataold(11,%irep)=$g(^(%irep))
 s %dataold(0)=$p(%dataold(1),"||",1,1)
 
 s %val=$P(%dataold(4),$C(1)) d %0GBs1:%val'="" s $P(%dataold(4),$C(1),2)=%val
 s %val=$P(%dataold(13),$C(1)) d %0GBs2:%val'="" s $P(%dataold(13),$C(1),2)=%val
 s %val=$P(%dataold(16),$C(1)) d %0GBs1:%val'="" s $P(%dataold(16),$C(1),2)=%val
 s %val=$P(%dataold(18),$C(1)) d %0GBs1:%val'="" s $P(%dataold(18),$C(1),2)=%val
 d %0GBr3
 d %0GBr4
 d %0GBr5
 d %0GBr6
 d %0GBr7
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^THIR(%mmmsqld(4)))
 e  g %0JBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Merr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^SSU("SSUSR",1,%mmmsqld(4)))
 e  g %0MBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Mc
%0MBdun 
%0MAdun 
%0Mc q
%0Merr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0MAdun
%0No n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Nerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("USLOC",%mmmsqld(4)))
 e  g %0NBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Nc
%0NBdun 
%0NAdun 
%0Nc q
%0Nerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0NAdun
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TSNO(%mmmsqld(4)))
 e  g %0KBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Kc
%0KBdun 
%0KAdun 
%0Kc q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Lerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("LA",%mmmsqld(4)))
 e  g %0LBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Lc
%0LBdun 
%0LAdun 
%0Lc q
%0Lerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0LAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",$d(^THIR(%mmmsqld(5),%mmmsqld(6)))
 e  g %0IBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
