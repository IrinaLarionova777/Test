<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt2531" type="INT" languagemode="0"><![CDATA[
mt2531  ; Compiled December 17, 2007 12:14:25 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt2531(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt2531(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$p($g(%data(13)),$c(1))'="",$g(%data(14))'="" d
 . s %data(1)=$p($g(%data(13)),$c(1))_"||"_$g(%data(14))
 . d insertnw^mt2531(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt2531 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:16 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt2531(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:16 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt2531(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt2531 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^BBR($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^BBR($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^BBR($p(%edit(13),$c(1),1),%edit(14))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(2)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",1)=$g(%data(2))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",2)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",3)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",4)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",5)=$g(%data(6))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",6)=$p($g(%data(7)),$c(1))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",7)=$p($g(%data(8)),$c(1))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",8)=$g(%data(9))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",9)=$g(%data(10))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",10)=$p($g(%data(11)),$c(1))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",11)=$g(%data(12))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",12)=$p($g(%data(15)),$c(1))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^BBR($p(%data(13),$c(1),1),%data(14))) s $p(tempn,"\",13)=$g(%data(16))
 s:$d(tempn)#2 ^BBR($p(%data(13),$c(1),1),%data(14))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(13)):$p(%edit(13),$c(1),1),1:$p($g(%data(13)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(2)'="" s sn(3)=$s($d(%edit(14)):%edit(14),1:$g(%data(14))) i sn(3)'=""
 i  i $d(^BBRi(sn(1),sn(2),sn(3))) s:'$g(tupkill) node=0,tempn=^BBRi(sn(1),sn(2),sn(3)) k ^BBRi(sn(1),sn(2),sn(3))
 i '$g(tupkill) s sn(1)=$p($g(%data(13)),$c(1),1) i sn(1)'="" s sn(2)=$g(%data(3)) i sn(2)'="" s sn(3)=$g(%data(14)) i sn(3)'=""
 e  g map1dun
 s ^BBRi(sn(1),sn(2),sn(3))=tempn
map1dun q
%0ABs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q  ;  Code for update (get old values) of table: BB_AntibodyRegister
%0ABs2 s %val=$$timeext^%qarzdt(%val,1) q
%0ABs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs4 s %val=$p("Antibody Register|Antigen_Register|Transfusion Reaction Register","|",$l($p("|AR|ATR|TRR|","|"_%val_"|"),"|")) q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s $P(%dataold(13),$C(1))=$p($g(%dataold(1)),"||",1,1),%dataold(14)=$p($g(%dataold(1)),"||",2,2)
 i $P(%dataold(13),$C(1))'="",$d(^BBR($P(%dataold(13),$C(1))))
 i '$t
 e  i 1>$P(%dataold(13),$C(1)),$P(%dataold(13),$C(1))=+$P(%dataold(13),$C(1))
 i '$t,%dataold(14)'="",$d(^BBR($P(%dataold(13),$C(1)),%dataold(14)))
 e  g %0ABdun
 s %mmmsqln=$g(^BBR($P(%dataold(13),$C(1)),%dataold(14)))
 s %dataold(2)=$p(%mmmsqln,"\",1) s %dataold(3)=$p(%mmmsqln,"\",2) s %dataold(4)=$p(%mmmsqln,"\",3) s %dataold(5)=$p(%mmmsqln,"\",4) s %dataold(6)=$p(%mmmsqln,"\",5) s %dataold(7)=$p(%mmmsqln,"\",6) s %dataold(8)=$p(%mmmsqln,"\",7) s %dataold(9)=$p(%mmmsqln,"\",8) s %dataold(10)=$p(%mmmsqln,"\",9)
 s %dataold(11)=$p(%mmmsqln,"\",10) s %dataold(12)=$p(%mmmsqln,"\",11) s %dataold(15)=$p(%mmmsqln,"\",12) s %dataold(16)=$p(%mmmsqln,"\",13)
 
 s %val=$P(%dataold(7),$C(1)) d %0ABs1:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0ABs2:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s %val=$P(%dataold(11),$C(1)) d %0ABs3:%val'="" s $P(%dataold(11),$C(1),2)=%val
 s %val=$P(%dataold(13),$C(1)) d %0ABs4:%val'="" s $P(%dataold(13),$C(1),2)=%val
 s %val=$P(%dataold(15),$C(1)) d %0ABs3:%val'="" s $P(%dataold(15),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
getold(%dataold) g %0Ao
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"BB_AntibodyRegister"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="BB_AntibodyRegister Row ID" d %mdiag(%oper,-106,"Fld Int","Req","ANTRG_RowId","",%ok) s %msg=%ok,%ok=0
 q
inf13 ; get value for field ANTRG_Type
 i $c(1)'[$g(%data(13)),$p(%data(13),$c(1))="" s %val=$p(%data(13),$c(1),2) g ine13
 i $c(1)'[$g(%data(13)) s %val=$p(%data(13),$c(1)) g ini13
 i $c(1)'[$g(%insert(13)),$p(%insert(13),$c(1))="" s %val=$p(%insert(13),$c(1),2) g ine13
 i $c(1)'[$g(%insert(13)) s %val=$p(%insert(13),$c(1)) g ini13
 s %ok=0 q
ine13 ; external to internal conversion code for field ANTRG_Type
 d fde13^mt2531 q:'%ok
ini13 ; internal validation code and uniqueness, also int-ext
 d fdv13^mt2531 q:'%ok
 s %data(13)=%val
 d fdi13^mt2531 s $p(%data(13),$c(1),2)=%val
 s:$c(1)[%data(13) %ok=0 s:%ok %edit(13)=""
 q
inf14 ; get value for field ANTRG_Sequence
 i $c(1)'[$g(%data(14)),$p(%data(14),$c(1))="" s %val=$p(%data(14),$c(1),2) g ine14
 i $c(1)'[$g(%data(14)) s %val=$p(%data(14),$c(1)) g ini14
 i $c(1)'[$g(%insert(14)),$p(%insert(14),$c(1))="" s %val=$p(%insert(14),$c(1),2) g ine14
 i $c(1)'[$g(%insert(14)) s %val=$p(%insert(14),$c(1)) g ini14
 s %ok=0 q
ine14 ; external to internal conversion code for field ANTRG_Sequence
ini14 ; internal validation code and uniqueness, also int-ext
 s %data(14)=%val
 s:$c(1)[%data(14) %ok=0 s:%ok %edit(14)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table BB_AntibodyRegister
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf13 i '%ok g:'iform rowiderr s rowerr=1
 d inf14 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(13),$c(1))_"||"_$p(%data(14),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt2531 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini13 g:'%ok rowiderr
 s %val=$p(%data(1),"||",2) g:%val="" rowiderr d ini14 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,13,14,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt2531
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,13,14,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde11 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde13 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="5197",irn=253,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,253,2,5197,36,"get",%val))
 n found s found=0
 i 'found,$f("|Antibody Register|Antigen_Register|Transfusion Reaction Register|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("AR|ATR|TRR","|",$l($p("|Antibody Register|Antigen_Register|Transfusion Reaction Register|","|"_%val_"|"),"|"))
 q
fde7 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,1,"") s:%val<0 %ok=0
 q
fde8 ; external to internal conversion code
 s %ok=1 s %val=$$timeint^%qarzdt(%val,1) s:%val<0 %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","ANTRG_Date","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","ANTRG_Time","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=11 d etiok
 . s %msg="" d fde11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","ANTRG_ClinicallySignificant","",$g(%msg))
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=13 d etiok
 . s %msg="" d fde13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","ANTRG_Type","",$g(%msg))
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) s %data(14)=%val
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=15 d etiok
 . s %msg="" d fde11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","ANTRG_AntigenDetected","",$g(%msg))
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) s %data(16)=%val
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv10 ; DO validation and additional validation code
 n nval s nval=%val d %0Jo
  i SQLCODE'=0 s %ok=0
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(1)),"||",2,2),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",3,3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6)))
 e  g %0JBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
fdv11 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv13 ; DO validation and additional validation code
 i %val="|~~|NULL|~~|" s %ok=0 q
 q
fdv3 ; DO validation and additional validation code
 n nval s nval=%val d %0Fo
  i SQLCODE'=0 s %ok=0
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0FBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
fdv4 ; DO validation and additional validation code
 n nval s nval=%val d %0Go
  i SQLCODE'=0 s %ok=0
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(4)))
 e  g %0GBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
fdv5 ; DO validation and additional validation code
 n nval s nval=%val d %0Ho
  i SQLCODE'=0 s %ok=0
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("TC",%mmmsqld(4)))
 e  g %0HBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
fdv7 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv8 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTTimIn")
 q
fdv9 ; DO validation and additional validation code
 n nval s nval=%val d %0Io
  i SQLCODE'=0 s %ok=0
 q
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^SSU("SSUSR",1,%mmmsqld(4)))
 e  g %0IBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
uniq1(%rowid,%unique) n SQLCODE,%val d %0Eo q SQLCODE=100
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)'="",$d(^BBR(%mmmsqld(5)))
 i '$t
 e  i 1>%mmmsqld(5),%mmmsqld(5)=+%mmmsqld(5)
 i '$t,%mmmsqld(6)'="",$d(^BBR(%mmmsqld(5),%mmmsqld(6)))
 e  g %0EBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="ANTRG_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","ANTRG_RowId","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_RowId","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_Episode_DR","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_TestSet_DR","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_TestItem_Result_DR","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_Date","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_Time","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv9 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_User_DR","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_VisitTest_DR","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_ClinicallySignificant","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_Type","",$g(%msg))
 i $d(%edit(15)),%data(15)'=%edit(15) s %icol=15 s %val=$p(%data(15),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","ANTRG_AntigenDetected","",$g(%msg))
 q
fdi11 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi13 s %val=$p("Antibody Register|Antigen_Register|Transfusion Reaction Register","|",$l($p("|AR|ATR|TRR|","|"_%val_"|"),"|"))
 q
fdi7 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2)
 q
fdi8 s %val=$$timeext^%qarzdt(%val,1)
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),%data(4)[$c(1) s %data(4)=$s($p(%data(4),$c(1))'="":$p(%data(4),$c(1)),1:$p(%data(4),$c(1),2))
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),%data(6)[$c(1) s %data(6)=$s($p(%data(6),$c(1))'="":$p(%data(6),$c(1)),1:$p(%data(6),$c(1),2))
 i $d(%data(7)),$p(%data(7),$c(1))'="" s %val=$p(%data(7),$c(1)) d fdi7 s $p(%data(7),$c(1),2)=%val
 i $d(%data(8)),$p(%data(8),$c(1))'="" s %val=$p(%data(8),$c(1)) d fdi8 s $p(%data(8),$c(1),2)=%val
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),%data(10)[$c(1) s %data(10)=$s($p(%data(10),$c(1))'="":$p(%data(10),$c(1)),1:$p(%data(10),$c(1),2))
 i $d(%data(11)),$p(%data(11),$c(1))'="" s %val=$p(%data(11),$c(1)) d fdi11 s $p(%data(11),$c(1),2)=%val
 i $d(%data(12)),%data(12)[$c(1) s %data(12)=$s($p(%data(12),$c(1))'="":$p(%data(12),$c(1)),1:$p(%data(12),$c(1),2))
 i $d(%data(13)),$p(%data(13),$c(1))'="" s %val=$p(%data(13),$c(1)) d fdi13 s $p(%data(13),$c(1),2)=%val
 i $d(%data(14)),%data(14)[$c(1) s %data(14)=$s($p(%data(14),$c(1))'="":$p(%data(14),$c(1)),1:$p(%data(14),$c(1),2))
 i $d(%data(15)),$p(%data(15),$c(1))'="" s %val=$p(%data(15),$c(1)) d fdi11 s $p(%data(15),$c(1),2)=%val
 i $d(%data(16)),%data(16)[$c(1) s %data(16)=$s($p(%data(16),$c(1))'="":$p(%data(16),$c(1)),1:$p(%data(16),$c(1),2))
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt2531 q:'%ok
 q
 g ^mt2532
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
