<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBBBAR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBBBAR ; IG 29/4/98 ;MVB Control code access for CTBB_AntiBodyRegister
 ;
 ; supported calls:
 ;
 ; $$select^LVBBBAR(ROWID,skip)
 ; $$open^LVBBBAR(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBBBAR(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBBBAR(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBBBAR(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBBBAR()
 ; $$insert^LVBBBAR()
 ; $$update^LVBBBAR(ROWID)
 ; $$delete^LVBBBAR(ROWID,Comments)
 ; $$check^LVBBBAR(mrn,eXM)
 ;
  ;---&SQL(DECLARE BBAR CURSOR FOR SELECT * FROM CTBB_AntiBodyRegister
   ;---         ORDER BY BBAR_Type Asc)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 ;
check(mrn,eXM,packRID) n (mrn,eXM,packRID) s mrn=$g(mrn),eXM=$g(eXM),packRID=$g(packRID),result=""
 i eXM="Y" d
 .s x1="" f  s x1=$o(^TDEB(mrn,x1)) q:x1=""  d  q:$l(result)
 ..s x2="" f  s x2=$o(^TDEB(mrn,x1,0,x2)) q:x2=""  i $d(^BBRi("AR",x2)) s result="Y" q
 i eXM'="Y",$d(packRID) d
 . ; find pack antigens
 .k ANTIG i '$$getall^LVBBBPC(packRID) m ANTIG=PLIST
 . ; check pack antigens against patients antibodies
 .s x1="" f  s x1=$o(^TDEB(mrn,x1)) q:x1=""  d  q:$l(result)
 ..s x2="" f  s x2=$o(^TDEB(mrn,x1,0,x2)) q:x2=""  i $d(^BBRi("AR",x2)) d
 ...s x3="" f  s x3=$o(^BBRi("AR",x2,x3)) q:x3=""  d  q:result["Y"
 ....s result="" i $p($g(^BBR("AR",x3)),"\",10)="Y" d
 .....f j=1:1:ANTIG i $p($g(^BBR("AR",x3)),"\",11)=$p($p($p(ANTIG(j),$c(2),4),$c(28),2),$c(1)) d  q
 ......i $p($p(ANTIG(j),$c(2),4),$c(28),3)="Y" s result="Y" q
 ......i $p($p(ANTIG(j),$c(2),4),$c(28),3)="N" s result="N" q
 .....i '$l(result) s result="YQ"
 q result
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CTBB_AntiBodyRegister VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CTBB_AntiBodyRegister VALUES :PLIST() WHERE BBAR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CTBB_AntiBodyRegister WHERE BBAR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)  ;---s skip=$g(skip) &SQL(OPEN BBAR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 s skip=$g(skip) Do %BBAR0o
 Q 0
 ; Fetch the data
fetch(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip) K PLIST
  ;---&SQL(FETCH BBAR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (skip,PLIST) s skip=$g(skip) K ^TMP($zn,$j)
 i $$open(skip)
 f cnt=1:1 Q:$$fetch(skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor 
close()  ;---&SQL(CLOSE BBAR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBAR0c
 q 0
 ; select data by code
select(ROWID,skip) K PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CTBB_AntiBodyRegister WHERE BBAR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTTS(plist(2))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 F J=3,4,6 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTTC(plist(J))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 Q
getall() N (PLIST) K ^TMP($ZN,$J)
 I $$open("Y")
 F cnt=1:1 Q:$$fetch("Y")  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
%BBAR0o s $zt="%BBAR0E" s SQLCODE=$s($g(%BBAR0c):-101,1:0) q:SQLCODE'=0  s %BBAR0d(9)=0 s %BBAR0d(10)=0,%BBAR0d(11)=""
 s %BBAR0c=1 q
%BBAR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %BBAR0c,%BBAR0d,%BBAR0E,%BBAR0l,%BBAR0n,%BBAR0R,%BBAR0Z q
%0Afirst 
 ; asl MOD# 2
 s %BBAR0d(5)=""
%0ABk1 s %BBAR0d(5)=$o(^TTAB("BB-Register",%BBAR0d(5)))
 i %BBAR0d(5)="" g %0ABdun
 s %BBAR0d(2)=""
%0ABk2 s %BBAR0d(2)=$o(^TTAB("BB-Register",%BBAR0d(5),%BBAR0d(2)))
 i %BBAR0d(2)="" g %0ABk1
 s %BBAR0d(3)=""
%0ABk3 s %BBAR0d(3)=$o(^TTAB("BB-Register",%BBAR0d(5),%BBAR0d(2),%BBAR0d(3)))
 i %BBAR0d(3)="" g %0ABk2
 s %BBAR0d(18)=$g(^TTAB("BB-Register",%BBAR0d(5),%BBAR0d(2),%BBAR0d(3)))
 s %BBAR0d(4)=$p(%BBAR0d(18),"\",1) s %BBAR0d(6)=$p(%BBAR0d(18),"\",2) s %BBAR0d(7)=$p(%BBAR0d(18),"\",3)
 s %BBAR0d(1)=(%BBAR0d(5))_"||"_(%BBAR0d(2))_"||"_(%BBAR0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("BB-Register",$p(%BBAR0d(1),"||",1),$p(%BBAR0d(1),"||",2),$p(%BBAR0d(1),"||",3))#"S":$zu(115,4) i $t { s %BBAR0d(10)=1,%BBAR0d(11)=$name(^TTAB("BB-Register",$p(%BBAR0d(1),"||",1),$p(%BBAR0d(1),"||",2),$p(%BBAR0d(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_AntiBodyRegister for RowID value: "_%BBAR0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %BBAR0d(5)=$p(%BBAR0d(1),"||"),%BBAR0d(2)=$p(%BBAR0d(1),"||",2),%BBAR0d(3)=$p(%BBAR0d(1),"||",3)
 i %BBAR0d(5)'="",%BBAR0d(2)'="",%BBAR0d(3)'="",$d(^TTAB("BB-Register",%BBAR0d(5),%BBAR0d(2),%BBAR0d(3)))
 e  g %0ACdun
 s %BBAR0d(25)=$g(^TTAB("BB-Register",%BBAR0d(5),%BBAR0d(2),%BBAR0d(3)))
 s %BBAR0d(4)=$p(%BBAR0d(25),"\",1) s %BBAR0d(6)=$p(%BBAR0d(25),"\",2) s %BBAR0d(7)=$p(%BBAR0d(25),"\",3)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %BBAR0d(9)=%BBAR0d(9)+1,%ROWCOUNT=%BBAR0d(9),%ROWID=%BBAR0d(1),%BBAR0c=10 q
%BBAR0f i '$g(%BBAR0c) { s SQLCODE=-102 q  } i %BBAR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%BBAR0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%BBAR0d(9),%BBAR0c=100 q  } g %0Afirst:%BBAR0c=1
%0ACdun i $zu(115,2)=1,$g(%BBAR0d(10))=1 { l -@%BBAR0d(11) s %BBAR0d(10)=0 }
 g %0ABk3
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%BBAR0d(9),SQLCODE=100,%BBAR0c=100 q
%BBAR0c i '$g(%BBAR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%BBAR0d(9)),1:0)
 i $zu(115,2)=1,$g(%BBAR0d(10))=1 { l -@%BBAR0d(11) } k %BBAR0c,%BBAR0d,%BBAR0E,%BBAR0l,%BBAR0n,%BBAR0R,%BBAR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %BBAR0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:7 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTBBAntiBodyRegister.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("BB-Register",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0EBdun
 s %mmmsqld(15)=$$%getlock^User.CTBBAntiBodyRegister.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("BB-Register",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0ECdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTBBAntiBodyRegister.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTBBAntiBodyRegister.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTBBAntiBodyRegister.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTBBAntiBodyRegister.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("BB-Register",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5)))
 e  g %0GBdun
 s %mmmsqld(14)=$$%getlock^User.CTBBAntiBodyRegister.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("BB-Register",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5)))
 e  g %0GCdun
 d %delete^User.CTBBAntiBodyRegister.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTBBAntiBodyRegister.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTBBAntiBodyRegister.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTBBAntiBodyRegister.T1(%mmmsqld(1)) g %0Gc
%0Jo d %BBAR0f q:SQLCODE'=0
 s PLIST(1)=%BBAR0d(1),PLIST(2)=%BBAR0d(2),PLIST(3)=%BBAR0d(3),PLIST(4)=%BBAR0d(4),PLIST(5)=%BBAR0d(5),PLIST(6)=%BBAR0d(6),PLIST(7)=%BBAR0d(7)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(9)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s PLIST(5)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i PLIST(5)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTAB("BB-Register",PLIST(5),PLIST(2),PLIST(3)))
 e  g %0LBdun
 s %mmmsqld(19)=$g(^TTAB("BB-Register",PLIST(5),PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(19),"\",1) s PLIST(6)=$p(%mmmsqld(19),"\",2) s PLIST(7)=$p(%mmmsqld(19),"\",3)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("BB-Register",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TTAB("BB-Register",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_AntiBodyRegister for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(5)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i PLIST(5)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTAB("BB-Register",PLIST(5),PLIST(2),PLIST(3)))
 e  g %0LCdun
 s %mmmsqld(26)=$g(^TTAB("BB-Register",PLIST(5),PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(26),"\",1) s PLIST(6)=$p(%mmmsqld(26),"\",2) s PLIST(7)=$p(%mmmsqld(26),"\",3)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
