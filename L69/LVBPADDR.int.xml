<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBPADDR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBPADDR  ; IG 29/4/98 ; MVB Control code access for PAD_DoctorsRequestPadsDoc
 ;
 ; supported calls:
 ;
 ; $$select^LVBPADDR(ROWID)
 ; $$open^LVBPADDR(par)
 ; $$fetch^LVBPADDR(par)
 ; $$close^LVBPADDR()
 ; $$insert^LVBPADDR(par)
 ; $$update^LVBPADDR(ROWID)
 ; $$delete^LVBPADDR(ROWID)
 ; $$getall^LVBPADDR(par)
 ;
  ;---&SQL(DECLARE PADDR CURSOR FOR SELECT * FROM PAD_DoctorsRequestPadsDoc
   ;---         WHERE PADDR_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
 ; Insert the data
insert(par) s PLIST(0)=$g(par) K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO PAD_DoctorsRequestPadsDoc VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) s ROWID=$g(ROWID) d pre("Y") 
  ;---&SQL(UPDATE PAD_DoctorsRequestPadsDoc VALUES :PLIST() WHERE PADDR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID) s ROWID=$g(ROWID)
  ;---&SQL(DELETE FROM PAD_DoctorsRequestPadsDoc WHERE PADDR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ;
 ; Open the cursor
open(par) s par=$g(par)
  ;---&SQL(OPEN PADDR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %PADDR0o
 Q 0
 ;
 ; Fetch the data
fetch(par) s par=$g(par) K PLIST
  ;---&SQL(FETCH PADDR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE PADDR) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %PADDR0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM PAD_DoctorsRequestPadsDoc WHERE PADDR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDR(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("DR",PLIST(26),PLIST(4),PLIST(3),PLIST(49),PLIST(50),PLIST(51))
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 Q
 ;
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%PADDR0o s $zt="%PADDR0E" s SQLCODE=$s($g(%PADDR0c):-101,1:0) q:SQLCODE'=0  s %PADDR0d(8)=0 s %PADDR0d(9)=0,%PADDR0d(10)=""
 s %PADDR0d(5)=$g(par)
 s %PADDR0c=1 q
%PADDR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %PADDR0c,%PADDR0d,%PADDR0E,%PADDR0l,%PADDR0n,%PADDR0R,%PADDR0Z q
%0Afirst 
 ; asl MOD# 2
 s %PADDR0d(1)=%PADDR0d(5)
 i %PADDR0d(1)="" g %0ABdun
 s %PADDR0d(4)=""
%0ABk1 s %PADDR0d(4)=$o(^TPAD(%PADDR0d(1),"DOCTOR",%PADDR0d(4)))
 i %PADDR0d(4)="" g %0ABdun
 s %PADDR0d(16)=$g(^TPAD(%PADDR0d(1),"DOCTOR",%PADDR0d(4)))
 s %PADDR0d(3)=$p(%PADDR0d(16),"\",1)
 s %PADDR0d(2)=(%PADDR0d(1))_"||"_(%PADDR0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TPAD($p(%PADDR0d(2),"||",1),"DOCTOR",$p(%PADDR0d(2),"||",2))#"S":$zu(115,4) i $t { s %PADDR0d(9)=1,%PADDR0d(10)=$name(^TPAD($p(%PADDR0d(2),"||",1),"DOCTOR",$p(%PADDR0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.PAD_DoctorsRequestPadsDoc for RowID value: "_%PADDR0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %PADDR0d(7)=$p(%PADDR0d(2),"||"),%PADDR0d(4)=$p(%PADDR0d(2),"||",2)
 i %PADDR0d(7)'="",%PADDR0d(4)'="",$d(^TPAD(%PADDR0d(7),"DOCTOR",%PADDR0d(4)))
 e  g %0ACdun
 s %PADDR0d(22)=$g(^TPAD(%PADDR0d(7),"DOCTOR",%PADDR0d(4)))
 s %PADDR0d(3)=$p(%PADDR0d(22),"\",1)
 s %PADDR0d(1)=$p(%PADDR0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %PADDR0d(8)=%PADDR0d(8)+1,%ROWCOUNT=%PADDR0d(8),%ROWID=%PADDR0d(2),%PADDR0c=10 q
%PADDR0f i '$g(%PADDR0c) { s SQLCODE=-102 q  } i %PADDR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%PADDR0d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%PADDR0d(8),%PADDR0c=100 q  } g %0Afirst:%PADDR0c=1
%0ACdun i $zu(115,2)=1,$g(%PADDR0d(9))=1 { l -@%PADDR0d(10) s %PADDR0d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%PADDR0d(8),SQLCODE=100,%PADDR0c=100 q
%PADDR0c i '$g(%PADDR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%PADDR0d(8)),1:0)
 i $zu(115,2)=1,$g(%PADDR0d(9))=1 { l -@%PADDR0d(10) } k %PADDR0c,%PADDR0d,%PADDR0E,%PADDR0l,%PADDR0n,%PADDR0R,%PADDR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %PADDR0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.PADDoctorsRequestPadsDoc.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TPAD(%mmmsqld(4),"DOCTOR",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(13)=$$%getlock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TPAD(%mmmsqld(4),"DOCTOR",%mmmsqld(5)))
 e  g %0ECdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TPAD(%mmmsqld(3),"DOCTOR",%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(12)=$$%getlock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TPAD(%mmmsqld(3),"DOCTOR",%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.PADDoctorsRequestPadsDoc.T1(%mmmsqld(1)) g %0Gc
%0Jo d %PADDR0f q:SQLCODE'=0
 s PLIST(0)=%PADDR0d(1),PLIST(1)=%PADDR0d(2),PLIST(2)=%PADDR0d(3),PLIST(3)=%PADDR0d(4)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(6)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(3)'="",$d(^TPAD(%mmmsqld(8),"DOCTOR",PLIST(3)))
 e  g %0LBdun
 s %mmmsqld(16)=$g(^TPAD(%mmmsqld(8),"DOCTOR",PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(16),"\",1)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TPAD($p(PLIST(1),"||",1),"DOCTOR",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TPAD($p(PLIST(1),"||",1),"DOCTOR",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.PAD_DoctorsRequestPadsDoc for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(3)'="",$d(^TPAD(%mmmsqld(8),"DOCTOR",PLIST(3)))
 e  g %0LCdun
 s %mmmsqld(22)=$g(^TPAD(%mmmsqld(8),"DOCTOR",PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(22),"\",1)
 s PLIST(0)=$p(PLIST(1),"||")
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
