<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTSPF" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTSPF ; ML 5/7/2000 ; LVB Control data access for CTSPF CT_SpecimenTranslation
 ;
 ; supported calls:
 ;
 ; $$save^LVBCTSPF(ROWID)
 ; $$insert^LVBCTSPF(par)
 ; $$update^LVBCTSPF(ROWID)
 ; $$delete^LVBCTSPF(ROWID,Comments)
 ; $$select^LVBCTSPF(ROWID,skip)
 ; $$open^LVBCTSPF(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTSPF(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTSPF(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTSPF(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTSPF()
 ; $$getall^LVBCTSPF(par)
 ;
  ;---&sql(DECLARE CTSPF CURSOR FOR SELECT * FROM CT_SpecimenTranslation
   ;---         WHERE (CTSPF_ParRef =:par))
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
 ; insert data
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&sql(INSERT INTO CT_SpecimenTranslation VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update data
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_SpecimenTranslation VALUES :PLIST() WHERE CTSPF_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete data
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_SpecimenTranslation WHERE CTSPF_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; select data for a code
select(RowID,skip) s RowID=$g(RowID),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM CT_SpecimenTranslation WHERE CTSPF_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Io
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN CTSPF)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSPF0o
 q 0
 ; fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH CTSPF INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close cursor
close()  ;---&SQL(CLOSE CTSPF)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSPF0c
 q 0
save(RowID) d pre s PLIST(0)=$p(RowID,"||",1)
 f j=1,2 s @("x"_j)=$p(RowID,"||",j)
 s SQLCODE=100 i $l(x1),$l(x2) d
 . ;---i $d(^TTAB("SPEC",x1,"LAN",x2)) &sql(UPDATE CT_SpecimenTranslation VALUES :PLIST() WHERE CTSPF_RowID=:RowID)
  . ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 .i $d(^TTAB("SPEC",x1,"LAN",x2)) Do %0No
 . ;---i '$d(^TTAB("SPEC",x1,"LAN",x2)) k PLIST(1) &sql(INSERT INTO CT_SpecimenTranslation VALUES :PLIST())
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .i '$d(^TTAB("SPEC",x1,"LAN",x2)) k PLIST(1) Do %0Po
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ; adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 n plist,I,J,j,SQLCODE,X f J=2:1:PLIST i $d(PLIST(J)) s PLIST(J)=$p(PLIST(J),$c(1),1)
 i $g(skip)="Y" q
 f J=2 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^MVBSSLAN(plist(J),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 q
getall(par) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTSPF0o s $zt="%CTSPF0E" s SQLCODE=$s($g(%CTSPF0c):-101,1:0) q:SQLCODE'=0  s %CTSPF0d(8)=0 s %CTSPF0d(9)=0,%CTSPF0d(10)=""
 s %CTSPF0d(5)=$g(par)
 s %CTSPF0c=1 q
%CTSPF0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTSPF0c,%CTSPF0d,%CTSPF0E,%CTSPF0l,%CTSPF0n,%CTSPF0R,%CTSPF0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTSPF0d(1)=%CTSPF0d(5)
 i %CTSPF0d(1)="" g %0ABdun
 s %CTSPF0d(3)=""
%0ABk1 s %CTSPF0d(3)=$o(^TTAB("SPEC",%CTSPF0d(1),"LAN",%CTSPF0d(3)))
 i %CTSPF0d(3)="" g %0ABdun
 s %CTSPF0d(18)=$g(^TTAB("SPEC",%CTSPF0d(1),"LAN",%CTSPF0d(3)))
 s %CTSPF0d(4)=$p(%CTSPF0d(18),"\",1)
 s %CTSPF0d(2)=(%CTSPF0d(1))_"||"_(%CTSPF0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("SPEC",$p(%CTSPF0d(2),"||",1),"LAN",$p(%CTSPF0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTSPF0d(9)=1,%CTSPF0d(10)=$name(^TTAB("SPEC",$p(%CTSPF0d(2),"||",1),"LAN",$p(%CTSPF0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_SpecimenTranslation for RowID value: "_%CTSPF0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTSPF0d(7)=$p(%CTSPF0d(2),"||"),%CTSPF0d(3)=$p(%CTSPF0d(2),"||",2)
 i %CTSPF0d(7)'="",%CTSPF0d(3)'="",$d(^TTAB("SPEC",%CTSPF0d(7),"LAN",%CTSPF0d(3)))
 e  g %0ACdun
 s %CTSPF0d(26)=$g(^TTAB("SPEC",%CTSPF0d(7),"LAN",%CTSPF0d(3)))
 s %CTSPF0d(4)=$p(%CTSPF0d(26),"\",1)
 s %CTSPF0d(1)=$p(%CTSPF0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTSPF0d(8)=%CTSPF0d(8)+1,%ROWCOUNT=%CTSPF0d(8),%ROWID=%CTSPF0d(2),%CTSPF0c=10 q
%CTSPF0f i '$g(%CTSPF0c) { s SQLCODE=-102 q  } i %CTSPF0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTSPF0d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTSPF0d(8),%CTSPF0c=100 q  } g %0Afirst:%CTSPF0c=1
%0ACdun i $zu(115,2)=1,$g(%CTSPF0d(9))=1 { l -@%CTSPF0d(10) s %CTSPF0d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTSPF0d(8),SQLCODE=100,%CTSPF0c=100 q
%CTSPF0c i '$g(%CTSPF0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTSPF0d(8)),1:0)
 i $zu(115,2)=1,$g(%CTSPF0d(9))=1 { l -@%CTSPF0d(10) } k %CTSPF0c,%CTSPF0d,%CTSPF0E,%CTSPF0l,%CTSPF0n,%CTSPF0R,%CTSPF0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTSPF0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTSpecimenTranslation.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("SPEC",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(15)=$$%getlock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("SPEC",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0ECdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTSpecimenTranslation.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("SPEC",%mmmsqld(3),"LAN",%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(14)=$$%getlock^User.CTSpecimenTranslation.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("SPEC",%mmmsqld(3),"LAN",%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.CTSpecimenTranslation.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(1)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(6)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("SPEC",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0IBdun
 s %mmmsqld(18)=$g(^TTAB("SPEC",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",1)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0IBuncommitted i $zu(115,2)=1 l +^TTAB("SPEC",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("SPEC",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_SpecimenTranslation for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("SPEC",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0ICdun
 s %mmmsqld(26)=$g(^TTAB("SPEC",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(26),"\",1)
 s PLIST(0)=$p(PLIST(1),"||")
%0IBuncommitted ;
 s SQLCODE=0 g %0Ic
%0ICdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ic
%0Lo d %CTSPF0f q:SQLCODE'=0
 s PLIST(0)=%CTSPF0d(1),PLIST(1)=%CTSPF0d(2),PLIST(2)=%CTSPF0d(3),PLIST(3)=%CTSPF0d(4)
 q
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("SPEC",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0NBdun
 s %mmmsqld(15)=$$%getlock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("SPEC",%mmmsqld(4),"LAN",%mmmsqld(5)))
 e  g %0NCdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTSpecimenTranslation.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) g %0Nc
%0NCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) g:SQLCODE<0 %0Nc
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTSpecimenTranslation.T1(%mmmsqld(2)) g %0Nc
%0Po n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTSpecimenTranslation.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Po
]]></Routine>
</Export>
