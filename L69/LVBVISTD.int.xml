<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISTD" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISTD ; IG 6/5/98 ; LVB Control data access for VISTD EP_VisitTestSetData
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISTD(par)
 ; $$update^LVBVISTD(ROWID,app,group)
 ; $$select^LVBVISTD(ROWID,valid)
 ; $$delete^LVBVISTD(ROWID,app,group)
 ; $$delall^LVBVISTD(par,app,group)
 ; $$checkres^LVBVISTD(par)
 ; $$open^LVBVISTD(par)
 ; $$fetch^LVBVISTD(par)
 ; $$close^LVBVISTD()
 ; $$validres^LVBVISTD(epis,tc,res)
 ; $$getFL^LVBVISTD(vtsRID)
 ;
  ;---&sql(DECLARE VISTD CURSOR FOR SELECT * FROM EP_VisitTestSetData
   ;---         WHERE VISTD_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
setRepeat(RowID,yn,hold) n (RowID,yn,hold) s RowID=$g(RowID),yn=$g(yn),hold=$g(hold)
  ;---&sql(UPDATE EP_VisitTestSetData SET VISTD_RepeatRequired = :yn WHERE VISTD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE, yn
 Do %0Co
 s vts=$p(RowID,"||",1,3) i '$$select^LVBVISTS(vts,"Y") s PLIST(45)=hold i $$update^LVBVISTS(vts)
 q 0
getFL(vts) n (vts) s vts=$g(vts),result=""
 i $$open(vts)
 f  q:$$fetch(vts)  s ti=PLIST(2),xx=PLIST(3) i '$$select^LVBCTTC(ti,"Y"),PLIST(5)="Z22" s result=xx q
 i $$close()
 q result
 ; check if result for a visit exists
checkres(par) s par=$g(par),ok=100
 i $$open(par)
 f  q:$$fetch(par)  i $l(PLIST(3)) s ok=0 q
 i $$close()
 q ok
open(par) s par=$g(par)
  ;---&SQL(OPEN VISTD)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISTD0o
 q 0
fetch(par) k PLIST s par=$g(par)
  ;---&SQL(FETCH VISTD INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
close()  ;---&SQL(CLOSE VISTD)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISTD0c
 q 0
select(RowID,valid) k PLIST s valid=$g(valid),RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitTestSetData WHERE VISTD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
 ; if result blank do nothing
 i $g(PLIST(4))="",$g(PLIST(3))="" q 0
  ;---&sql(INSERT INTO EP_VisitTestSetData VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 I 'SQLCODE d check q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
update(RowID,app,group) d pre("Y") s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(UPDATE EP_VisitTestSetData VALUES :PLIST() WHERE VISTD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Lo
 k ^TMP("FUNCTION",$j)
 i 'SQLCODE d check q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
delete(RowID,app,group) s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(DELETE FROM EP_VisitTestSetData WHERE VISTD_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0No
 k ^TMP("FUNCTION",$j)
 q SQLCODE
delall(par,app,group) s par=$g(par),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(DELETE FROM EP_VisitTestSetData WHERE VISTD_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 Do %0Po
 k ^TMP("FUNCTION",$j)
 q SQLCODE
 ; check comments and delete an empty ones
check s x1=$p(%ROWID,"||",1),x2=$p(%ROWID,"||",2),x3=$p(%ROWID,"||",3),x4=$p(%ROWID,"||",4)
 i $l(x1),$l(x2),$l(x3),$l(x4),'$g(^TEPI(x1,1,x2,x3,"DATA",x4,"REM",0)) k ^TEPI(x1,1,x2,x3,"DATA",x4,"REM",0)
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("4")
 q
pre(xUpdate) d PreSQL^SSUTIL4("4","1")
 q
 ;
 q
%VISTD0o s $zt="%VISTD0E" s SQLCODE=$s($g(%VISTD0c):-101,1:0) q:SQLCODE'=0  s %VISTD0d(24)=0 s %VISTD0d(25)=0,%VISTD0d(26)=""
 s %VISTD0d(19)=$g(par)
 s %VISTD0c=1 q
%VISTD0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISTD0c,%VISTD0d,%VISTD0E,%VISTD0l,%VISTD0n,%VISTD0R,%VISTD0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISTD0d(1)=%VISTD0d(19)
 s %VISTD0d(21)=$p(%VISTD0d(1),"||"),%VISTD0d(22)=$p(%VISTD0d(1),"||",2),%VISTD0d(23)=$p(%VISTD0d(1),"||",3)
 i %VISTD0d(21)="" g %0ABdun
 i %VISTD0d(22)="" g %0ABdun
 i %VISTD0d(23)="" g %0ABdun
 s %VISTD0d(3)=""
%0ABk1 s %VISTD0d(3)=$o(^TEPI(%VISTD0d(21),1,%VISTD0d(22),%VISTD0d(23),"DATA",%VISTD0d(3)))
 i %VISTD0d(3)="" g %0ABdun
 s %VISTD0d(36)=$g(^TEPI(%VISTD0d(21),1,%VISTD0d(22),%VISTD0d(23),"DATA",%VISTD0d(3)))
 s %VISTD0d(4)=$p(%VISTD0d(36),"\",1) s %VISTD0d(6)=$p(%VISTD0d(36),"\",2) s %VISTD0d(7)=$p(%VISTD0d(36),"\",3) s %VISTD0d(8)=$p(%VISTD0d(36),"\",4) s %VISTD0d(9)=$p(%VISTD0d(36),"\",5) s %VISTD0d(10)=$p(%VISTD0d(36),"\",6) s %VISTD0d(11)=$p(%VISTD0d(36),"\",7) s %VISTD0d(12)=$p(%VISTD0d(36),"\",8) s %VISTD0d(13)=$p(%VISTD0d(36),"\",9) s %VISTD0d(14)=$p(%VISTD0d(36),"\",10) s %VISTD0d(15)=$p(%VISTD0d(36),"\",11) s %VISTD0d(16)=$p(%VISTD0d(36),"\",12) s %VISTD0d(17)=$p(%VISTD0d(36),"\",13) s %VISTD0d(18)=$p(%VISTD0d(36),"\",14)
 s %VISTD0d(5)="" f %irep=1:1:$g(^TEPI(%VISTD0d(21),1,%VISTD0d(22),%VISTD0d(23),"DATA",%VISTD0d(3),"REM",0)) s $li(%VISTD0d(5),%irep)=$g(^(%irep))
 s %VISTD0d(2)=(%VISTD0d(21))_"||"_(%VISTD0d(22))_"||"_(%VISTD0d(23))_"||"_(%VISTD0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISTD0d(2),"||",1),1,$p(%VISTD0d(2),"||",2),$p(%VISTD0d(2),"||",3),"DATA",$p(%VISTD0d(2),"||",4))#"S":$zu(115,4) i $t { s %VISTD0d(25)=1,%VISTD0d(26)=$name(^TEPI($p(%VISTD0d(2),"||",1),1,$p(%VISTD0d(2),"||",2),$p(%VISTD0d(2),"||",3),"DATA",$p(%VISTD0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitTestSetData for RowID value: "_%VISTD0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISTD0d(21)=$p(%VISTD0d(2),"||"),%VISTD0d(22)=$p(%VISTD0d(2),"||",2),%VISTD0d(23)=$p(%VISTD0d(2),"||",3),%VISTD0d(3)=$p(%VISTD0d(2),"||",4)
 i %VISTD0d(21)'="",%VISTD0d(22)'="",%VISTD0d(23)'="",%VISTD0d(3)'="",$d(^TEPI(%VISTD0d(21),1,%VISTD0d(22),%VISTD0d(23),"DATA",%VISTD0d(3)))
 e  g %0ACdun
 s %VISTD0d(46)=$g(^TEPI(%VISTD0d(21),1,%VISTD0d(22),%VISTD0d(23),"DATA",%VISTD0d(3)))
 s %VISTD0d(4)=$p(%VISTD0d(46),"\",1) s %VISTD0d(6)=$p(%VISTD0d(46),"\",2) s %VISTD0d(7)=$p(%VISTD0d(46),"\",3) s %VISTD0d(8)=$p(%VISTD0d(46),"\",4) s %VISTD0d(9)=$p(%VISTD0d(46),"\",5) s %VISTD0d(10)=$p(%VISTD0d(46),"\",6) s %VISTD0d(11)=$p(%VISTD0d(46),"\",7) s %VISTD0d(12)=$p(%VISTD0d(46),"\",8) s %VISTD0d(13)=$p(%VISTD0d(46),"\",9) s %VISTD0d(14)=$p(%VISTD0d(46),"\",10) s %VISTD0d(15)=$p(%VISTD0d(46),"\",11) s %VISTD0d(16)=$p(%VISTD0d(46),"\",12) s %VISTD0d(17)=$p(%VISTD0d(46),"\",13) s %VISTD0d(18)=$p(%VISTD0d(46),"\",14)
 s %VISTD0d(5)="" f %irep=1:1:$g(^TEPI(%VISTD0d(21),1,%VISTD0d(22),%VISTD0d(23),"DATA",%VISTD0d(3),"REM",0)) s $li(%VISTD0d(5),%irep)=$g(^(%irep))
 s %VISTD0d(1)=$p(%VISTD0d(2),"||",1,3)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISTD0d(24)=%VISTD0d(24)+1,%ROWCOUNT=%VISTD0d(24),%ROWID=%VISTD0d(2),%VISTD0c=10 q
%VISTD0f i '$g(%VISTD0c) { s SQLCODE=-102 q  } i %VISTD0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISTD0d(24))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISTD0d(24),%VISTD0c=100 q  } g %0Afirst:%VISTD0c=1
%0ACdun i $zu(115,2)=1,$g(%VISTD0d(25))=1 { l -@%VISTD0d(26) s %VISTD0d(25)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISTD0d(24),SQLCODE=100,%VISTD0c=100 q
%VISTD0c i '$g(%VISTD0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISTD0d(24)),1:0)
 i $zu(115,2)=1,$g(%VISTD0d(25))=1 { l -@%VISTD0d(26) } k %VISTD0c,%VISTD0d,%VISTD0E,%VISTD0l,%VISTD0n,%VISTD0R,%VISTD0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISTD0c=100 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(9)=0 s %mmmsqld(10)=""
 s %mmmsqld(2)=$g(yn),%mmmsqld(4)=$g(RowID)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(6)=$p(%mmmsqld(3),"||",2),%mmmsqld(7)=$p(%mmmsqld(3),"||",3),%mmmsqld(8)=$p(%mmmsqld(3),"||",4)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TEPI(%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7),"DATA",%mmmsqld(8)))
 e  g %0CBdun
 s %mmmsqld(20)=$$%getlock^User.EPVisitTestSetData.T1(%mmmsqld(3)) i '%mmmsqld(20) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(6)=$p(%mmmsqld(3),"||",2),%mmmsqld(7)=$p(%mmmsqld(3),"||",3),%mmmsqld(8)=$p(%mmmsqld(3),"||",4)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TEPI(%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7),"DATA",%mmmsqld(8)))
 e  g %0CCdun
 k %data
 s %data(13)=$g(%mmmsqld(2))
 d %update^User.EPVisitTestSetData.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(9))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(20)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(3)) g %0Cc
%0CCdun 
 d:%mmmsqld(20)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(3)) g:SQLCODE<0 %0Cc
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(9)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(20))=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(3)) g %0Cc
%0Fo d %VISTD0f q:SQLCODE'=0
 s PLIST(0)=%VISTD0d(1),PLIST(1)=%VISTD0d(2),PLIST(2)=%VISTD0d(3),PLIST(3)=%VISTD0d(4),PLIST(4)=%VISTD0d(5),PLIST(5)=%VISTD0d(6),PLIST(6)=%VISTD0d(7),PLIST(7)=%VISTD0d(8),PLIST(8)=%VISTD0d(9),PLIST(9)=%VISTD0d(10),PLIST(10)=%VISTD0d(11),PLIST(11)=%VISTD0d(12),PLIST(12)=%VISTD0d(13),PLIST(13)=%VISTD0d(14),PLIST(14)=%VISTD0d(15),PLIST(15)=%VISTD0d(16),PLIST(16)=%VISTD0d(17),PLIST(17)=%VISTD0d(18)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(25)=0,%mmmsqld(26)=""
 s %mmmsqld(20)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(20)
 s %mmmsqld(22)=$p(PLIST(1),"||"),%mmmsqld(23)=$p(PLIST(1),"||",2),%mmmsqld(24)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(22)'="",%mmmsqld(23)'="",%mmmsqld(24)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(22),1,%mmmsqld(23),%mmmsqld(24),"DATA",PLIST(2)))
 e  g %0HBdun
 s %mmmsqld(36)=$g(^TEPI(%mmmsqld(22),1,%mmmsqld(23),%mmmsqld(24),"DATA",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(36),"\",1) s PLIST(5)=$p(%mmmsqld(36),"\",2) s PLIST(6)=$p(%mmmsqld(36),"\",3) s PLIST(7)=$p(%mmmsqld(36),"\",4) s PLIST(8)=$p(%mmmsqld(36),"\",5) s PLIST(9)=$p(%mmmsqld(36),"\",6) s PLIST(10)=$p(%mmmsqld(36),"\",7) s PLIST(11)=$p(%mmmsqld(36),"\",8) s PLIST(12)=$p(%mmmsqld(36),"\",9) s PLIST(13)=$p(%mmmsqld(36),"\",10) s PLIST(14)=$p(%mmmsqld(36),"\",11) s PLIST(15)=$p(%mmmsqld(36),"\",12) s PLIST(16)=$p(%mmmsqld(36),"\",13) s PLIST(17)=$p(%mmmsqld(36),"\",14)
 s PLIST(4)="" f %irep=1:1:$g(^TEPI(%mmmsqld(22),1,%mmmsqld(23),%mmmsqld(24),"DATA",PLIST(2),"REM",0)) s $li(PLIST(4),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 g:$zu(115,2)=0 %0HBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),1,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"DATA",$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(25)=1,%mmmsqld(26)=$name(^TEPI($p(PLIST(1),"||",1),1,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"DATA",$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitTestSetData for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(22)=$p(PLIST(1),"||"),%mmmsqld(23)=$p(PLIST(1),"||",2),%mmmsqld(24)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(22)'="",%mmmsqld(23)'="",%mmmsqld(24)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(22),1,%mmmsqld(23),%mmmsqld(24),"DATA",PLIST(2)))
 e  g %0HCdun
 s %mmmsqld(46)=$g(^TEPI(%mmmsqld(22),1,%mmmsqld(23),%mmmsqld(24),"DATA",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(46),"\",1) s PLIST(5)=$p(%mmmsqld(46),"\",2) s PLIST(6)=$p(%mmmsqld(46),"\",3) s PLIST(7)=$p(%mmmsqld(46),"\",4) s PLIST(8)=$p(%mmmsqld(46),"\",5) s PLIST(9)=$p(%mmmsqld(46),"\",6) s PLIST(10)=$p(%mmmsqld(46),"\",7) s PLIST(11)=$p(%mmmsqld(46),"\",8) s PLIST(12)=$p(%mmmsqld(46),"\",9) s PLIST(13)=$p(%mmmsqld(46),"\",10) s PLIST(14)=$p(%mmmsqld(46),"\",11) s PLIST(15)=$p(%mmmsqld(46),"\",12) s PLIST(16)=$p(%mmmsqld(46),"\",13) s PLIST(17)=$p(%mmmsqld(46),"\",14)
 s PLIST(4)="" f %irep=1:1:$g(^TEPI(%mmmsqld(22),1,%mmmsqld(23),%mmmsqld(24),"DATA",PLIST(2),"REM",0)) s $li(PLIST(4),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||",1,3)
%0HBuncommitted ;
 s SQLCODE=0 g %0Hc
%0HCdun i $zu(115,2)=1,$g(%mmmsqld(25))=1 { l -@%mmmsqld(26) s %mmmsqld(25)=0 }
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(25))=1 { l -@%mmmsqld(26) } q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:17 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitTestSetData.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6),"DATA",%mmmsqld(7)))
 e  g %0LBdun
 s %mmmsqld(19)=$$%getlock^User.EPVisitTestSetData.T1(%mmmsqld(2)) i '%mmmsqld(19) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6),"DATA",%mmmsqld(7)))
 e  g %0LCdun
 k %data
 f icol=0:1:17 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitTestSetData.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(19)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(2)) g %0Lc
%0LCdun 
 d:%mmmsqld(19)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(2)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(19))=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(2)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(3),1,%mmmsqld(4),%mmmsqld(5),"DATA",%mmmsqld(6)))
 e  g %0NBdun
 s %mmmsqld(18)=$$%getlock^User.EPVisitTestSetData.T1(%mmmsqld(1)) i '%mmmsqld(18) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(3),1,%mmmsqld(4),%mmmsqld(5),"DATA",%mmmsqld(6)))
 e  g %0NCdun
 d %delete^User.EPVisitTestSetData.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(18)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(1)) g %0Nc
%0NCdun 
 d:%mmmsqld(18)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(1)) g:SQLCODE<0 %0Nc
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(18))=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(1)) g %0Nc
%0Po n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Perr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(par)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(5)=$p(%mmmsqld(1),"||"),%mmmsqld(6)=$p(%mmmsqld(1),"||",2),%mmmsqld(7)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(5)="" g %0PBdun
 i %mmmsqld(6)="" g %0PBdun
 i %mmmsqld(7)="" g %0PBdun
 s %mmmsqld(4)=""
%0PBk1 s %mmmsqld(4)=$o(^TEPI(%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7),"DATA",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0PBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(7))_"||"_(%mmmsqld(4))
 s %mmmsqld(19)=$$%getlock^User.EPVisitTestSetData.T1(%mmmsqld(3)) i '%mmmsqld(19) s SQLCODE=-110 g %0Pc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(6)=$p(%mmmsqld(3),"||",2),%mmmsqld(7)=$p(%mmmsqld(3),"||",3),%mmmsqld(4)=$p(%mmmsqld(3),"||",4)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7),"DATA",%mmmsqld(4)))
 e  g %0PCdun
 s %mmmsqld(1)=$p(%mmmsqld(3),"||",1,3)
 d %delete^User.EPVisitTestSetData.T1(%mmmsqld(3),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(19)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(3)) g %0Pc
%0PCdun 
 d:%mmmsqld(19)=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(3)) g:SQLCODE<0 %0Pc
 g %0PBk1
%0PBdun 
%0PAdun 
%0Pc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Perr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(19))=1 %ReleaseLock^User.EPVisitTestSetData.T1(%mmmsqld(3)) g %0Pc
]]></Routine>
</Export>
