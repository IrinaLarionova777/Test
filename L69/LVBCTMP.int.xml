<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTMP" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTMP ; IG 29/4/98 ; MVB Control code access for CT_MicrobiologyPanel
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTMP(ROWID,skip,type)
 ; $$open^LVBCTMP(name,skip,bug,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTMP(name,skip,bug,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTMP(name,skip,bug,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTMP(name,skip,bug,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTMP()
 ; $$insert^LVBCTMP()
 ; $$update^LVBCTMP(ROWID)
 ; $$delete^LVBCTMP(ROWID,Comments)
 ; $$getall^LVBCTMP(bug)
 ;
  ;---&SQL(DECLARE CTMP CURSOR FOR SELECT * FROM CT_MicrobiologyPanel
   ;---         WHERE %ALPHAUP(CTMP_Description) %STARTSWITH :name)
   ;--- ** SQL PUBLIC Variables: SQLCODE, name
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_MicrobiologyPanel VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y")
  ;---&SQL(UPDATE CT_MicrobiologyPanel VALUES :PLIST() WHERE CTMP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_MicrobiologyPanel WHERE CTMP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(name,skip,bug,p3,p4,p5,p6,p7,p8,p9) s name=$$ALPHAUP^SSUTIL4($g(name)),skip=$g(skip),bug=$g(bug)
  ;---&SQL(OPEN CTMP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTMP0o
 q 0
 ; fetch the data
fetch(name,skip,bug,p3,p4,p5,p6,p7,p8,p9) s name=$$ALPHAUP^SSUTIL4($g(name)),skip=$g(skip),bug=$g(bug) k PLIST
  ;---&SQL(FETCH CTMP INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE,$l(bug) s found=0 d  i 'found g fetch+1
 .s rowid=PLIST(1) n PLIST,%ROWID
 .i 'found d
 ..i $$getall^LVBCTBUP(bug)
 ..s x="" f  s x=$o(PLIST(x)) q:x=""  i $p($p($p(PLIST(x),$c(2),4),$c(28),5),$c(1))=$p(rowid,$c(1)) s found=1 q
 .i 'found d
 .. ;---s group="" &SQL(SELECT CTBUG_PathogenGroup_DR INTO :group FROM CT_Bugs WHERE CTBUG_RowID=:bug)
  .. ;--- ** SQL PUBLIC Variables: SQLCODE, bug, group
 ..s group="" Do %0Ko
 ..s group=$p(group,$c(1))
 ..i $$getall^LVBCTBGE(group)
 ..s x="" f  s x=$o(PLIST(x)) q:x=""  i $p($p($p(PLIST(x),$c(2),4),$c(28),5),$c(1))=$p(rowid,$c(1)) s found=1 q
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(name,skip,bug,p3,p4,p5,p6,p7,p8,p9) s name=$g(name),skip=$g(skip),bug=$g(bug) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(name,skip,bug) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(name,skip,bug,p3,p4,p5,p6,p7,p8,p9) n (name,skip,bug,PLIST) s name=$g(name),skip=$g(skip),bug=$g(bug) k ^TMP($zn,$j)
 i $$open(name,skip,bug)
 f cnt=1:1 q:$$fetch(name,skip,bug)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor
close()  ;---&SQL(CLOSE CTMP)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTMP0c
 q 0
 ; select data by code
select(ROWID,skip,type) k PLIST s ROWID=$g(ROWID),skip=$g(skip),type=$g(type)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_MicrobiologyPanel WHERE CTMP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust d
 .i type=1,'$d(^TTAB("MP",ROWID,"ANT")) s SQLCODE=100
 .i type=2,$d(^TTAB("MP",ROWID,"ANT")) s SQLCODE=100
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ; post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 i $g(skip)="Y" q
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTA(plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 q
getall(bug) n (bug,PLIST) s bug=$g(bug) k ^TMP($zn,$j)
 i $$open(,,bug)
 f cnt=1:1 q:$$fetch(,,bug)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTMP0o s $zt="%CTMP0E" s SQLCODE=$s($g(%CTMP0c):-101,1:0) q:SQLCODE'=0  s %CTMP0d(9)=0 s %CTMP0d(10)=0,%CTMP0d(11)=""
 s %CTMP0d(5)=$g(name)
 s %CTMP0c=1 q
%CTMP0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTMP0c,%CTMP0d,%CTMP0E,%CTMP0l,%CTMP0n,%CTMP0R,%CTMP0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTMP0d(1)=""
%0ABk1 s %CTMP0d(1)=$o(^TTAB("MP",%CTMP0d(1)))
 i %CTMP0d(1)="" g %0ABdun
 s %CTMP0d(16)=$g(^TTAB("MP",%CTMP0d(1)))
 s %CTMP0d(2)=$p(%CTMP0d(16),"\",1) s %CTMP0d(3)=$p(%CTMP0d(16),"\",2)
 s %CTMP0d(4)=$zu(28,%CTMP0d(2),6)
 g:'(($c(0)[%CTMP0d(5))||(%CTMP0d(5)=$c(32,0)&&($e(%CTMP0d(4))=$c(32)))||(%CTMP0d(5)=$e(%CTMP0d(4),1,$l(%CTMP0d(5))))) %0ABk1
 g:'(%CTMP0d(4)'="") %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("MP",$p(%CTMP0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTMP0d(10)=1,%CTMP0d(11)=$name(^TTAB("MP",$p(%CTMP0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_MicrobiologyPanel for RowID value: "_%CTMP0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTMP0d(7)=$lb(""_%CTMP0d(4))
 i %CTMP0d(1)'="",$d(^TTAB("MP",%CTMP0d(1)))
 e  g %0ACdun
 s %CTMP0d(21)=$g(^TTAB("MP",%CTMP0d(1)))
 s %CTMP0d(2)=$p(%CTMP0d(21),"\",1) s %CTMP0d(3)=$p(%CTMP0d(21),"\",2)
 s %CTMP0d(4)=$zu(28,%CTMP0d(2),6)
 s %CTMP0d(8)=$lb(""_%CTMP0d(4))
 g:%CTMP0d(7)'=%CTMP0d(8) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTMP0d(9)=%CTMP0d(9)+1,%ROWCOUNT=%CTMP0d(9),%ROWID=%CTMP0d(1),%CTMP0c=10 q
%CTMP0f i '$g(%CTMP0c) { s SQLCODE=-102 q  } i %CTMP0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTMP0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTMP0d(9),%CTMP0c=100 q  } g %0Afirst:%CTMP0c=1
%0ACdun i $zu(115,2)=1,$g(%CTMP0d(10))=1 { l -@%CTMP0d(11) s %CTMP0d(10)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTMP0d(9),SQLCODE=100,%CTMP0c=100 q
%CTMP0c i '$g(%CTMP0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTMP0d(9)),1:0)
 i $zu(115,2)=1,$g(%CTMP0d(10))=1 { l -@%CTMP0d(11) } k %CTMP0c,%CTMP0d,%CTMP0E,%CTMP0l,%CTMP0n,%CTMP0R,%CTMP0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTMP0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTMicrobiologyPanel.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("MP",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTMicrobiologyPanel.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("MP",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTMicrobiologyPanel.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTMicrobiologyPanel.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTMicrobiologyPanel.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTMicrobiologyPanel.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("MP",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTMicrobiologyPanel.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("MP",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTMicrobiologyPanel.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTMicrobiologyPanel.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTMicrobiologyPanel.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTMicrobiologyPanel.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTMP0f q:SQLCODE'=0
 s PLIST(1)=%CTMP0d(1),PLIST(2)=%CTMP0d(1),PLIST(3)=%CTMP0d(2),PLIST(4)=%CTMP0d(3)
 q
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Kerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(bug)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BUG",%mmmsqld(3)))
 e  g %0KBdun
 s %mmmsqld(12)=$g(^TTAB("BUG",%mmmsqld(3)))
 s group=$p(%mmmsqld(12),"\",7)
 g:$zu(115,2)=0 %0KBuncommitted i $zu(115,2)=1 l +^TTAB("BUG",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BUG",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Bugs for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BUG",%mmmsqld(3)))
 e  g %0KCdun
 s %mmmsqld(17)=$g(^TTAB("BUG",%mmmsqld(3)))
 s group=$p(%mmmsqld(17),"\",7)
%0KBuncommitted ;
 s SQLCODE=0 g %0Kc
%0KCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0KBdun 
%0KAdun 
%0Kc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Kerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Kc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(5)
 i PLIST(2)'="",$d(^TTAB("MP",PLIST(2)))
 e  g %0NBdun
 s %mmmsqld(13)=$g(^TTAB("MP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(13),"\",1) s PLIST(4)=$p(%mmmsqld(13),"\",2)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TTAB("MP",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TTAB("MP",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_MicrobiologyPanel for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("MP",PLIST(2)))
 e  g %0NCdun
 s %mmmsqld(18)=$g(^TTAB("MP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",1) s PLIST(4)=$p(%mmmsqld(18),"\",2)
%0NBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
]]></Routine>
</Export>
