<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBTEST1" type="INT" languagemode="0" generated="1"><![CDATA[
laborder() 
 n (PLIST)
 ;structure of PLIST
 ;PLIST(1)= SURNAME
 ;PLIST(2)= GIVEN NAME
 ;PLIST(3)= SPECIES
 ;PLIST(4)= MEDICARE NUMBER
 ;PLIST(5)= TITLE
 ;PLIST(6)= MEDICARE NUMBER
 ;PLIST(7)= PAYMENT CODE
 ;PLIST(8)= DATE OF ENTRY
 ;PLIST(9)= TIME OF ENTRY
 ;PLIST(10)= DATE OF COLLECTION
 ;PLIST(11)= TIME OF COLLECTION
 ;PLIST(12)= DATE OF REQUEST
 ;PLIST(13)= DOCTOR CODE
 ;PLIST(14)= DOCTOR REFERENCE
 ;PLIST(15)= PRIORITY CODE
 ;PLIST(16)= INITIATION CODE
 ;PLIST(17)= FASTING
 ;PLIST(18)= DEBTOR NUMBER
 ;PLIST(19)= DATE OF BILLING
 ;PLIST(20)= HOSPITAL
 ;PLIST(21)= PAY CODE REFERENCE
 ;PLIST(22) - blank
 ;PLIST(23)= URGENT COMMENT
 ;PLIST(24)= VISIT ACTION
 ;PLIST(25)= AGE
 ;PLIST(26)= CENTRE CODE
 ;PLIST(27)= uid
 ;PLIST(28)= STATUS
 ;PLIST(29)= CUMULATIVE PRINT
 ;PLIST(30)= ENTRY ID
 ;PLIST(31)-PLIST(70)  - blank, not in use
 ;PLIST(71)= S4B3
 ;PLIST(72)= S4B3 REF
 ;PLIST(73)= DATE OF ADMISSION
 ;PLIST(74)= PRECAUTIONS
 ;PLIST(75)= CCR PERMISSION
 ;PLIST(76)= PATIENT ADDRESS 1
 ;PLIST(77)= PATIENT ADDRESS 2
 ;PLIST(78)= PATIENT ADDRESS 3
 ;PLIST(79)= PATIENT SUBURB
 ;PLIST(80)= PATIENT POSTCODE
 ;PLIST(81)= BILLING ADDRESS 1
 ;PLIST(82)= BILLING ADDRESS 2
 ;PLIST(83)= BILLING ADDRESS 3
 ;PLIST(84)= BILLING SUBURB
 ;PLIST(85)= BILLING POSTCODE
 ;PLIST(86)= BILLING NAME
 ;PLIST(87)= HPHONE
 ;PLIST(88)= WPHONE
 ;PLIST(89)-PLIST(126)  - blank, not in use
 ;PLIST(127)= "\"
 ;PLIST(128)= USER
 ;PLIST(129)= EPISODE NUMBER
 ;PLIST(130)-PLIST(139) - not in use
 ;PLIST(140)= LIST OF TEST SETS
 ;PLIST(141)= DOCTOR NAME
 ;PLIST(142)-PLIST(162) = LIST OF SPECIMEN
 ;PLIST(163)-not in use
 ;PLIST(164) - NOTES FOR PROCESSING DEPARTMENT
 ;PLIST(165) - test rows
 ;PLIST(166)-list of snomed codes
 ;PLIST(167)-user location
 ;PLIST(168)-external UR number
 ;PLIST(169)-pay code
 ;PLIST(170)-pat type
 ;PLIST(171)-room
 ;PLIST(172)-bed
 ;PLIST(173)-alert
 ;PLIST(174)-order doctors
 ;PLIST(175)-vip flag
 ;PLIST(176)-user
 ;PLIST(177)= TIME OF ADMISSION
 ;PLIST(178)= Request Time
 ;PLIST(179)= pregnant
 ;PLIST(180)= receive date
 ;PLIST(181)= receive time
 ;
 ;check if person MED defined
 i '$d(^TTAB("PER","MED")) d
 . k LIST m LIST=PLIST
 . k PLIST
 . s PLIST(2)="MED",PLIST(3)="MedTrak",PLIST(23)="Y",PLIST(24)="",err=$$insert^LVBCTPER()
 . k PLIST m PLIST=LIST
 ;Set Up PLIST
 k LIST m LIST=PLIST
 F I=1:1:70 S @("EPA"_I)=$g(LIST(I))
 F I=71:1:75 S @("EPZ"_(I-70))=$g(LIST(I)) 
 F I=76:1:126 S @("EPAA"_(I-75))=$g(LIST(I)) 
 s %=$g(LIST(127)),%IN=$g(LIST(128)),EP01A=$g(LIST(129)),EP02A=$g(LIST(130))
 s EPA=$g(LIST(131)),EPAA=$g(LIST(132)),EPZ=$g(LIST(133)),%TT=$g(LIST(134))
 s A01=$g(LIST(135)),C01=$g(LIST(136)),A03=$g(LIST(137)),A02=$g(LIST(138))
 s TTO12=$g(LIST(139)),tsetcod1=$g(LIST(140)),drname=$g(LIST(141)),drcode=EPA13,PRE=$g(LIST(163)),notes=$g(LIST(164)),tsetrows=$g(LIST(165))
 s snomed=$g(LIST(166))
 s pattype=$g(LIST(170))
 s room=$g(LIST(171))
 s bed=$g(LIST(172))
 s alert=$g(LIST(173))
 s admtime=$g(LIST(177))
 s requesttime=$g(LIST(178))
 s preg=$g(LIST(179))
 ; episode receive date time - JJH
 s eprecdate=$g(LIST(180))
 s eprectime=$g(LIST(181))
 s snom1=0
 f j=1:1:$l(snomed,"&") s str1=$p(snomed,"&",j) d
 .s ts=$p(str1,","),str1=$p(str1,",",2,99) f j1=1:1:$l(str1,",") s snom=$p(str1,",",j1) i ts'="",snom'="" s snom1=snom1+1,snomed1(ts,snom)=snom1
 f jj=1:1:$l(tsetrows,",") d
 .s ts1=$p(tsetrows,",",jj),oeitm=$p(ts1,"&"),ts2=$p(ts1,"&",2)
 .i ts2'="",oeitm s tsetrow1(ts2,oeitm)=""
 ;setup dummy doctor
 ;get medtrak-labtrak defaults
 s cfdoc=$g(^CF("ML",1,"DOC"))
 s cfpat=$g(^CF("ML",1,"PAT"))
 s loc1=$g(LIST(167)),loccode=$p(loc1,","),locdesc=$p(loc1,",",2)
 i loccode'="",'$d(^TTAB("USLOC",loccode)) s ^TTAB("USLOC",loccode)=locdesc
 i drcode="",cfdoc="" s (drcode,EPA13)="A0010"
 i drcode="",cfdoc'="" s (drcode,EPA13)=$p(cfdoc,"^")
 ;Set up Dr
 ; You must ensure that the indicated items are entered into
 ; the relevent code table for proper functioning of the 
 ; med->lab interface
 ;                      ian
 i $l(drcode),'$d(^TTAB("DR",drcode)) D  
 . s add="MEDTRAK"
 .s startdate=+$h
 .s active="Y"
 .s sendletter="N"
 .s receiveletter="N"
 .S forename=""
 .s haps="N"
 .s provider="MEDTRAK"
 .i cfdoc="" d
 .. s numcopies=1
 .. s company=1          ;<====
 .. s courier=1          ;<====
 .. s printformat="IF"   ;<====
 .. s paymentcode="N"    ;<====
 .. s priority="R"       ;<====
 .. ;
 .i cfdoc'="" d
 .. s numcopies=$p(cfdoc,"^",3)
 .. s company=$p(cfdoc,"^",2)          ;<====
 .. s courier=$p(cfdoc,"^",4)          ;<====
 .. s printformat=$p(cfdoc,"^",6)   ;<====
 .. s paymentcode=$p(cfdoc,"^",5)    ;<====
 .. s priority=$p(cfdoc,"^",7)       ;<====
 .. ;
 . s t1=drname_"\"_forename_"\\\\\"_add_"\\\\\"_numcopies_"\\"_sendletter
 . s t2=courier_"\"_paymentcode_"\"_provider_"\"_printformat_"\"_company_"\"_startdate_"\\\\"_active_"\\"_receiveletter_"\"_priority_"\"_haps
 . ;
 . S ^TTAB("DR",drcode)=t1
 . S ^TTAB("DR",drcode,0)=t2
 .s err=$$seldr(drcode) q:err
 .s err=$$upddr(drcode)
 ;
 ;
 ;
 ;create debtor
 i '$d(^TDEB(EPA18)) d
 .k PLIST
 .s PLIST(2)=EPA18
 .S err=$$insdeb()
 i EPA18'="",$d(^TDEB(EPA18)),alert'="" d
 .i '$d(^TTAB("PW","MAE")) s ^TTAB("PW","MAE")="Patient has alerts - see Clinical History"
 .s $p(^TDEB(EPA18),"\",3)="MAE"
 .f jjj=1:1:$l(alert,"|") d
 ..s ind0=$i(^TDEB(EPA18,"HIS",0)),^TDEB(EPA18,"HIS",ind0)=$p(alert,"|",jjj) 
 ;create episode
 ;check sex of patient is in code table
 i $l(EPA3),'$d(^TTAB("SP",EPA3)) s ^TTAB("SP",EPA3)=EPA3
 ;
 ;use configuration to setup defaults
 i cfpat'="" d
 .;if priority U passed from Medtrak, use it if it exists on code table
 .d
 ..i $g(EPA15)="U",$d(^TTAB("PC",EPA15)) q 
 ..s EPA15=$p(cfpat,"^",5) ;priority code         
 .s EPA16=$p(cfpat,"^",3) ;initiation code         
 .s EPA17=$p(cfpat,"^",2) ;fasting code         
 .s EPA7=$p(cfpat,"^",4) ;payment code         
 .s EPA27=$p(cfpat,"^",1) ;collected by
 .s EPA30=$p(cfpat,"^",6) ;user id
 ;set pay code
 s EPA94=""
 i $g(LIST(169))'="" d
 .s pcode=$p(LIST(169),$c(2)),pdesc=$p(LIST(169),$c(2),2)
 .q:pcode=""
 .i '$d(^TTAB("BI",pcode)) d
 ..k PLIST s PLIST(2)=pcode,PLIST(3)=pdesc,PLIST(30)="Y",PLIST(31)=99999,err=$$inspaycode()
 .s EPA7=pcode
 .i pcode'="",$d(^TTAB("CTPA",pcode)) s EPA94=pcode
 i %IN'="",$d(^TTAB("PER",%IN)) s EPA27=%IN
 i %IN'="",$d(^SSU("SSUSR",1,%IN)) s EPA30=%IN
 s title=$p(EPA5,",")
 s titledesc=$p(EPA5,",",2)
 i title'="",'$d(^TTAB("TTL",title)) s ^TTAB("TTL",title)=titledesc
 k PLIST 
 s PLIST(2)=EP01A ;VISIT NUMBER
 S PLIST(3)=EPA1 ;SURNAME
 S PLIST(4)=EPA2 ;GIVEN NAME
 S PLIST(5)=EPA3 ;SPECIES
 S PLIST(6)=EPA4 ;DATE OF BIRTH
 S PLIST(7)=title
 S PLIST(8)=EPA6 ;MEDICARE NUMBER
 S PLIST(9)=EPA7 ;PAYMENT CODE
 s PLIST(10)=EPA8 ;DATE OF ENTRY
 S PLIST(11)=EPA9 ;TIME OF ENTRY
 S PLIST(12)=EPA10 ;DATE OF COLLECTION
 S PLIST(13)=EPA11 ;TIME OF COLLECTION
 S PLIST(14)=EPA12 ;DATE OF REQUEST
 S PLIST(15)=EPA13 ;DOCTOR CODE
 S PLIST(16)=EPA14 ;DOCTOR REFERENCE
 S PLIST(17)=EPA15 ;PRIORITY CODE
 S PLIST(18)=EPA16 ;INITIATION CODE
 S PLIST(19)=EPA17 ;FASTING
 S PLIST(20)=EPA18 ;DEBTOR NUMBER
 s PLIST(21)=EPA19 ;DATE OF BILLING
 S PLIST(22)="" ;EPA20 ;HOSPITAL
 i EPA20'="",$d(^TTAB("RH",EPA20)) s PLIST(22)=EPA20
 S PLIST(23)=EPA21 ;PAY CODE REFERENCE
 S PLIST(24)=EPA23 ;URGENT COMMENT
 S PLIST(25)=EPA24 ;VISIT ACTION
 i 'EPA25,EPA4 s EPA25=$$age(EPA4)
 S PLIST(26)=EPA25 ;AGE
 S PLIST(27)=EPA26 ;CENTRE CODE
 S PLIST(28)=EPA27 ;uid
 S PLIST(29)=EPA28 ;STATUS
 S PLIST(30)=EPA29 ;CUMULATIVE PRINT
 S PLIST(31)=EPA30 ;ENTRY ID
 S PLIST(32)=EPAA1 ;PATIENT ADDRESS 1
 S PLIST(33)=EPAA2 ;PATIENT ADDRESS 2
 S PLIST(34)=EPAA3 ;PATIENT ADDRESS 3
 S PLIST(35)=EPAA4 ;PATIENT SUBURB
 S PLIST(36)=EPAA5 ;PATIENT POSTCODE
 S PLIST(37)=EPAA6 ;BILLING ADDRESS 1
 S PLIST(38)=EPAA7 ;BILLING ADDRESS 2
 S PLIST(39)=EPAA8 ;BILLING ADDRESS 3
 S PLIST(40)=EPAA9 ;BILLING SUBURB
 S PLIST(41)=EPAA10 ;BILLING POSTCODE
 S PLIST(42)=EPAA11 ;BILLING NAME
 S PLIST(43)=EPAA12 ;HPHONE
 S PLIST(44)=EPAA13 ;WPHONE
 S PLIST(45)=EPZ1 ;S4B3
 S PLIST(46)=EPZ2 ;S4B3 REF
 S PLIST(47)=EPZ3 ;DATE OF ADMISSION
 S PLIST(48)=EPZ4 ;PRECAUTIONS
 S PLIST(49)=EPZ5 ;CCR PERMISSION
 S PLIST(50)=$g(EPZ6) ;PPO
 S PLIST(51)=$g(EPZ7) ;SPECIAL INTEREST
 s PLIST(53)=notes ;patient history
 i pattype-2 d
 .s PLIST(61)=+$h ;date of receiving
 .s PLIST(62)=$p($h,",",2) ;time of receiving
 e  d
 .; Update episode rec date and time - JJH  
 .s PLIST(61)=eprecdate ;date of receiving
 .s PLIST(62)=eprectime ;time of receiving  
 .;s PLIST(62)="" ;time of receiving
 .;s PLIST(61)="" ;date of receiving
 s PLIST(65)=$g(LIST(168)) ;ext UR number
 s PLIST(66)=loccode ;patient location
 s PLIST(84)=$g(LIST(175))
 s PLIST(86)=$s(pattype'="":pattype,1:0) ;patient status
 s PLIST(94)=EPA94
 s PLIST(112)=room ;room
 s PLIST(113)=bed ;bed
 s PLIST(124)=admtime ;admission time
 s PLIST(111)=requesttime ;request time
 s PLIST(63)=preg ;pregnant
 f jj=52:1:66 s PLIST(jj)=$g(PLIST(jj))
 i PLIST(17)="" f jjj=1:1:$l(tsetcod1,",") i $l($p(tsetcod1,",",jjj)) d  q:$l(PLIST(17))
 .s testset=$p($p(tsetcod1,",",jjj),".")
 .s prior=$p(testset,$c(2),6)
 .i prior'="",'$d(^TTAB("PC",prior)) s prior=$p(cfpat,"^",5)
 .s PLIST(17)=prior
 ;do not update existing episode
 ;i $l(EP01A),$d(^TEPI(EP01A)) S err=$$update^LVBEPVIS(EP01A)
 i $l(EP01A),'$d(^TEPI(EP01A)) S err=$$insepis()
 q:$g(err) $$code^SSUTILSQ(err)
 ;create test sets
 f jjj=1:1:$l(tsetcod1,",") i $l($p(tsetcod1,",",jjj)) d
 .s testset=$p($p(tsetcod1,",",jjj),".")
 .s labts=$p(testset,$c(2),2)
 .s durat=$p(testset,$c(2),3)
 .s labvolume=$p(testset,$c(2),4)
 .s user=$p(testset,$c(2),5)
 .i user'="",'$d(^SSU("SSUSR",1,user)) s user=""
 .i user'="" s ^TMP("USER",$j)=user
 .s prior=$p(testset,$c(2),6)
 .s collflag=$p(testset,$c(2),7)
 .; get collection date and time - JJH
 .s colldate=$p(testset,$c(2),8)
 .s colltime=$p(testset,$c(2),9)
 .s recdate=$p(testset,$c(2),10)
 .s rectime=$p(testset,$c(2),11)
 .i prior'="",'$d(^TTAB("PC",prior)) s prior=$p(cfpat,"^",5)
 .s testset=$p(testset,$c(2))
 .i labts="" d
 ..k PLIST
 ..s PLIST(3)=$$ALPHAUP^SSUTIL4(testset),PLIST(17)=labvolume,PLIST(18)=durat,PLIST(39)=user,PLIST(13)=prior
 ..; set collection receive date time - JJH  
 ..s PLIST(49)=colldate,PLIST(50)=colltime
 ..s PLIST(62)=recdate,PLIST(63)=rectime
 ..i collflag="Y" s PLIST(51)=%IN
 ..s err=$$insts(EP01A),tsrow=$g(%ROWID)
 .k ^TMP("USER",$j)
 .i labts'="" s tsrow=labts 
 .s found=0,oeitm="" f  s oeitm=$o(tsetrow1(testset,oeitm)) q:oeitm=""  q:found  d
 ..i tsetrow1(testset,oeitm)="" s tsetrow1(testset,oeitm)=tsrow,found=oeitm
 .;insert snomed codes
 .s snom="" f  s snom=$o(snomed1(found,snom)) q:snom=""  s snom1=snomed1(found,snom) d
 ..k PLIST s PLIST(4)=snom1,PLIST(3)=snom,err=$$inssn(tsrow)
 ;create specimen
 f j=142:1:162 i $g(LIST(j))'="" d
 .s spec=LIST(j)
 .k PLIST
 .s PLIST(2)=spec,PLIST(3)=1
 .s err=$$inssp(EP01A)
 ;create visit doctors
 s LIST(174)=$g(LIST(174))
 f j=1:1:$l(LIST(174),"|") d
 .s doc1=$p(LIST(174),"|",j)
 .q:$tr(doc1,$c(1))=""
 .s doccode=$p(doc1,$c(1)),docdesc=$p(doc1,$c(1),2)
 .k PLIST
 .i doccode'="",$d(^TTAB("DR",doccode)) s PLIST(3)=doccode
 .e  s PLIST(4)=docdesc
 .s err=$$insert^LVBVISDC(EP01A)
 ;print lablabels
 i ($p(^CF("LAB",1),"^",46)="Y"),(pattype'=2) s ^TMP("Label",EP01A)=$p($h,",",2) ;i $$START^PRTREP00("","",EP01A,"EPL")
 ;set up return buffer
 k PLIST
 s ind=0,ts="" f  s ts=$o(tsetrow1(ts)) q:ts=""  d
 .s oeitm="" f  s oeitm=$o(tsetrow1(ts,oeitm)) q:oeitm=""  s tsrow=tsetrow1(ts,oeitm) d
 ..s ind=ind+1,PLIST(ind)=oeitm_"&"_tsrow
 s PLIST=$o(PLIST(""),-1)
 q 0 
age(dob) ;get age in days
 n days
 s days=$h-dob i days>365 q days\365
 q days/1000
 ;
seldr(ROWID) k PLIST s ROWID=$g(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_Doctor WHERE CTDR_ROWID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Ao
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ;        
upddr(ROWID) S ROWID=$G(ROWID)
  ;---&SQL(UPDATE CT_Doctor VALUES :PLIST() WHERE CTDR_ROWID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 Q SQLCODE
insdeb() K PLIST(1)
  ;---&sql(INSERT INTO DEB_Debtor VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Fo
 q SQLCODE
insepis() K PLIST(1) d preepis
 s SQLCODE=$$insert^LVBEPVIS()
 q SQLCODE
preepis 
 ;f j=11,13,62 i $g(PLIST(j)) s PLIST(j)=PLIST(j)\60
 i $l($g(PLIST(26))) s PLIST(26)=+PLIST(26)
 ;S CNT=$L($g(PLIST(53)),"|")
 ;F J=1:1:CNT S TEMP(J)=$P(PLIST(53),"|",J)
 ;K PLIST(53) M PLIST(53)=TEMP S PLIST(53)=$O(PLIST(53,""),-1)
 q
insts(par) s PLIST(0)=$g(par) s PLIST(2)=$$testset(par,PLIST(3))
 s PLIST(24)=+$H,PLIST(25)=$p($h,",",2) d prets
 s epis=$p(PLIST(0),$c(1))
 ; check Actions
 /*
 k xPLIST m xPLIST=PLIST k PLIST
 s epis=$p(xPLIST(0),$c(1)),ts=$p(xPLIST(3),$c(1)),tscnt=$p(xPLIST(2),$c(1))
 k PLIST s PLIST=0 i $$TScheck^LVBVIS7(epis_"||"_ts_"||"_tscnt,"TA","","B")
 s x="" f  s x=$o(PLIST(x)) q:x=""  i $p(PLIST(x),$c(1))="SF" s field=$p(PLIST(x),$c(1),6) i $l(field) s xPLIST(field)=$p(PLIST(x),$c(1),2)
 k PLIST s PLIST=0 i $$TScheck^LVBVIS7(epis_"||"_ts_"||"_tscnt,"TA","","A")
 s x="" f  s x=$o(PLIST(x)) q:x=""  i $p(PLIST(x),$c(1))="SF" s field=$p(PLIST(x),$c(1),6) i $l(field) s xPLIST(field)=$p(PLIST(x),$c(1),2)
 k PLIST m PLIST=xPLIST k xPLIST
 */
 s PLIST(1)=$p(PLIST(0),$c(1))_"||"_$p(PLIST(3),$c(1))_"||"_$p(PLIST(2),$c(1)),SQLCODE=$$insert^LVBVISTS(epis)
 q SQLCODE
 ;
prets i $l($g(PLIST(20))) s PLIST(20)=$tr(PLIST(20),"\","&")
 s PLIST(13)=""
 s test=$g(PLIST(3)) i test'="" s PLIST(13)=$p($g(^TTAB("TS",test)),"\",10)
 i PLIST(13)="" s PLIST(13)=EPA15
 ;f jj=8,5,22,25 i $g(PLIST(jj)) s PLIST(jj)=PLIST(jj)\60
 ; set test location as default test set location
 i '$l($g(PLIST(29))) d  s PLIST(29)=location
 .s test=PLIST(3),location=""
 .i test'="" s location=$p($g(^TTAB("TS",test)),"\",36)
 ; set test location as patient location
 i '$l($g(PLIST(29))) d
 .s pat="" i $l($g(PLIST(0))) s pat=PLIST(0)
 .e  s pat=$p($g(PLIST(1)),"||")
 .i $l(pat) s PLIST(29)=$p($g(^TEPI(pat)),"\",36)
 ;
 q
testset(epis,testset) s epis=$g(epis),testset=$p(testset,$c(1))
 q $o(^TEPI(epis,1,testset,""),-1)+1
 ;
inssp(par) s PLIST(0)=$g(par) k PLIST(1)
  ;---&sql(INSERT INTO EP_VisitSpecimen VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 q SQLCODE
inspaycode()  k PLIST(1)
  ;---&sql(INSERT INTO CT_PaymentCode VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 q SQLCODE
 ;
inssn(par) s PLIST(0)=$g(par) K PLIST(1),PLIST(2)
 s x1=$p(PLIST(0),"||",1),x2=$p(PLIST(0),"||",2),x3=$p(PLIST(0),"||",3)
 i $l(x1),$l(x2),$l(x3) s PLIST(2)=$o(^TEPI(x1,1,x2,x3,"SNOMED",""),-1)+1
  ;---&sql(INSERT INTO EP_VisitTestSetSnomedRes VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Lo
 q SQLCODE
updrec(vists,datecoll,timecoll,daterec,timerec,prior,user) ;update date/time/priority
 n (vists,datecoll,timecoll,daterec,timerec,prior,user)
 s user=$g(user)
 i user'="" s ^TMP("USER",$j)=user
 s epis=$p(vists,"||")
 s timecoll1=timecoll*60
 s timerec1=timerec*60
 k PLIST
 s err=$$select^LVBVISTS(vists)
 ; don't update collection date/time here - it's done within collection
 ;s PLIST(49)=datecoll,PLIST(50)=timecoll1
 s PLIST(62)=daterec,PLIST(63)=timerec1,PLIST(39)=user,PLIST(13)=prior
 ;s PLIST(24)=daterec,PLIST(25)=timerec1,PLIST(39)=user,PLIST(13)=prior
 ; Log 38048 - AI - 10-12-2003 : Include the "app" and "group" parameters in the calls to LabTrak.
 s app="MedTrak - Update Receive Visit Test Set - TestID="_vists_": from updrec in LVBTest1"
 s group=$$newgroup^LVBCOM02(epis)
 s err=$$update^LVBVISTS(vists,app,group)
 ;&SQL(UPDATE EP_VisitTestSet
 ;SET VISTS_Priority_DR = :prior, 
 ;VISTS_DateOfCollection = :datecoll, 
 ;VISTS_TimeOfCollection = :timecoll1, 
 ;VISTS_DateOfCreation = :daterec,
 ;VISTS_TimeOfCreation = :timerec,
 ;VISTS_UserCreated_DR = :user
 ;WHERE VISTS_RowId = :vists)
 ;q:SQLCODE SQLCODE
 q:err err
 k PLIST
 s err=$$select^LVBEPVIS(epis)
 ; don't update collection date/time here - it's done within collection
 ;s PLIST(12)=datecoll,PLIST(13)=timecoll1
 ; 61827 YC - Only update patient entry receive date/time the first time
 i (PLIST(61)="")!(PLIST(62)="") s PLIST(61)=daterec,PLIST(62)=timerec1
 ;s PLIST(61)=daterec,PLIST(62)=timerec1
 ; Log 38048 - AI - 10-12-2003 : Include the "app" and "group" parameters in the calls to LabTrak.
 s app="MedTrak - Update Receive Visit Number - TestID="_vists_": from updrec in LVBTest1"
 s group=$$newgroup^LVBCOM02(epis)
 s err=$$update^LVBEPVIS(epis,app,group)
 ; Log 38048 - AI - 10-12-2003 : Include the "app" and "group" parameters in the calls to LabTrak.
 s app="MedTrak - Save Priority - TestID="_vists_": from updrec in LVBTest1"
 s group=$$newgroup^LVBCOM02(epis)
 s err=$$prioritysave^LVBVISTS(epis,app,group)
 k ^TMP("USER",$j)
 q err
 ;&SQL(UPDATE EP_VisitNumber
 ;SET EPVIS_DateOfCollection = :datecoll, 
 ;EPVIS_TimeOfCollection = :timecoll, 
 ;EPVIS_DateOfReceiving = :daterec,
 ;EPVIS_TimeOfReceiving = :timerec
 ;WHERE EPVIS_RowId = :epis)
 ;q SQLCODE
 q
%0ABr1 n cnt s cnt=0
 i $g(PLIST(9))'="" s cnt=cnt+1,$p(PLIST(33),"|",cnt)=$g(PLIST(9))
 i $g(PLIST(10))'="" s cnt=cnt+1,$p(PLIST(33),"|",cnt)=$g(PLIST(10))
 i $g(PLIST(11))'="" s cnt=cnt+1,$p(PLIST(33),"|",cnt)=$g(PLIST(11))
 i $g(PLIST(12))'="" s cnt=cnt+1,$p(PLIST(33),"|",cnt)=$g(PLIST(12))
 i $g(PLIST(13))'="" s cnt=cnt+1,$p(PLIST(33),"|",cnt)=$g(PLIST(13))
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(56)=0,%mmmsqld(57)=""
 s %mmmsqld(54)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(54)
 i PLIST(2)'="",$d(^TTAB("DR",PLIST(2)))
 e  g %0ABdun
 s %mmmsqld(62)=$g(^TTAB("DR",PLIST(2),0))
 s PLIST(16)=$p(%mmmsqld(62),"\",1) s PLIST(17)=$p(%mmmsqld(62),"\",2) s PLIST(18)=$p(%mmmsqld(62),"\",3) s PLIST(19)=$p(%mmmsqld(62),"\",4) s PLIST(20)=$p(%mmmsqld(62),"\",5) s PLIST(21)=$p(%mmmsqld(62),"\",6) s PLIST(22)=$p(%mmmsqld(62),"\",7) s PLIST(24)=$p(%mmmsqld(62),"\",9) s PLIST(25)=$p(%mmmsqld(62),"\",10) s PLIST(26)=$p(%mmmsqld(62),"\",11) s PLIST(27)=$p(%mmmsqld(62),"\",12) s PLIST(28)=$p(%mmmsqld(62),"\",13) s PLIST(29)=$p(%mmmsqld(62),"\",14) s PLIST(30)=$p(%mmmsqld(62),"\",15) s PLIST(35)=$p(%mmmsqld(62),"\",16) s PLIST(40)=$p(%mmmsqld(62),"\",17) s PLIST(44)=$p(%mmmsqld(62),"\",18)
 s %mmmsqld(62)=$g(^TTAB("DR",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(62),"\",1) s PLIST(4)=$p(%mmmsqld(62),"\",2) s PLIST(5)=$p(%mmmsqld(62),"\",3) s PLIST(6)=$p(%mmmsqld(62),"\",4) s PLIST(7)=$p(%mmmsqld(62),"\",5) s PLIST(8)=$p(%mmmsqld(62),"\",6) s PLIST(9)=$p(%mmmsqld(62),"\",7) s PLIST(10)=$p(%mmmsqld(62),"\",8) s PLIST(11)=$p(%mmmsqld(62),"\",9) s PLIST(12)=$p(%mmmsqld(62),"\",10) s PLIST(13)=$p(%mmmsqld(62),"\",11) s PLIST(14)=$p(%mmmsqld(62),"\",12) s PLIST(15)=$p(%mmmsqld(62),"\",13) s PLIST(31)=$p(%mmmsqld(62),"\",14) s PLIST(32)=$p(%mmmsqld(62),"\",15) s PLIST(34)=$p(%mmmsqld(62),"\",16) s PLIST(36)=$p(%mmmsqld(62),"\",18) s PLIST(37)=$p(%mmmsqld(62),"\",19) s PLIST(38)=$p(%mmmsqld(62),"\",20) s PLIST(39)=$p(%mmmsqld(62),"\",21) s PLIST(41)=$p(%mmmsqld(62),"\",17) s PLIST(42)=$p(%mmmsqld(62),"\",22) s PLIST(43)=$p(%mmmsqld(62),"\",23) s PLIST(45)=$p(%mmmsqld(62),"\",24) s PLIST(46)=$p(%mmmsqld(62),"\",25) s PLIST(47)=$p(%mmmsqld(62),"\",27) s PLIST(48)=$p(%mmmsqld(62),"\",26) s PLIST(49)=$p(%mmmsqld(62),"\",28) s PLIST(50)=$p(%mmmsqld(62),"\",29) s PLIST(51)=$p(%mmmsqld(62),"\",30) s PLIST(52)=$p(%mmmsqld(62),"\",31) s PLIST(53)=$p(%mmmsqld(62),"\",32)
 s PLIST(23)="" f %irep=1:1:$g(^TTAB("DR",PLIST(2),1,0)) s $li(PLIST(23),%irep)=$g(^(%irep))
 d %0ABr1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("DR",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(56)=1,%mmmsqld(57)=$name(^TTAB("DR",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Doctor for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("DR",PLIST(2)))
 e  g %0ACdun
 s %mmmsqld(67)=$g(^TTAB("DR",PLIST(2),0))
 s PLIST(16)=$p(%mmmsqld(67),"\",1) s PLIST(17)=$p(%mmmsqld(67),"\",2) s PLIST(18)=$p(%mmmsqld(67),"\",3) s PLIST(19)=$p(%mmmsqld(67),"\",4) s PLIST(20)=$p(%mmmsqld(67),"\",5) s PLIST(21)=$p(%mmmsqld(67),"\",6) s PLIST(22)=$p(%mmmsqld(67),"\",7) s PLIST(24)=$p(%mmmsqld(67),"\",9) s PLIST(25)=$p(%mmmsqld(67),"\",10) s PLIST(26)=$p(%mmmsqld(67),"\",11) s PLIST(27)=$p(%mmmsqld(67),"\",12) s PLIST(28)=$p(%mmmsqld(67),"\",13) s PLIST(29)=$p(%mmmsqld(67),"\",14) s PLIST(30)=$p(%mmmsqld(67),"\",15) s PLIST(35)=$p(%mmmsqld(67),"\",16) s PLIST(40)=$p(%mmmsqld(67),"\",17) s PLIST(44)=$p(%mmmsqld(67),"\",18)
 s %mmmsqld(67)=$g(^TTAB("DR",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(67),"\",1) s PLIST(4)=$p(%mmmsqld(67),"\",2) s PLIST(5)=$p(%mmmsqld(67),"\",3) s PLIST(6)=$p(%mmmsqld(67),"\",4) s PLIST(7)=$p(%mmmsqld(67),"\",5) s PLIST(8)=$p(%mmmsqld(67),"\",6) s PLIST(9)=$p(%mmmsqld(67),"\",7) s PLIST(10)=$p(%mmmsqld(67),"\",8) s PLIST(11)=$p(%mmmsqld(67),"\",9) s PLIST(12)=$p(%mmmsqld(67),"\",10) s PLIST(13)=$p(%mmmsqld(67),"\",11) s PLIST(14)=$p(%mmmsqld(67),"\",12) s PLIST(15)=$p(%mmmsqld(67),"\",13) s PLIST(31)=$p(%mmmsqld(67),"\",14) s PLIST(32)=$p(%mmmsqld(67),"\",15) s PLIST(34)=$p(%mmmsqld(67),"\",16) s PLIST(36)=$p(%mmmsqld(67),"\",18) s PLIST(37)=$p(%mmmsqld(67),"\",19) s PLIST(38)=$p(%mmmsqld(67),"\",20) s PLIST(39)=$p(%mmmsqld(67),"\",21) s PLIST(41)=$p(%mmmsqld(67),"\",17) s PLIST(42)=$p(%mmmsqld(67),"\",22) s PLIST(43)=$p(%mmmsqld(67),"\",23) s PLIST(45)=$p(%mmmsqld(67),"\",24) s PLIST(46)=$p(%mmmsqld(67),"\",25) s PLIST(47)=$p(%mmmsqld(67),"\",27) s PLIST(48)=$p(%mmmsqld(67),"\",26) s PLIST(49)=$p(%mmmsqld(67),"\",28) s PLIST(50)=$p(%mmmsqld(67),"\",29) s PLIST(51)=$p(%mmmsqld(67),"\",30) s PLIST(52)=$p(%mmmsqld(67),"\",31) s PLIST(53)=$p(%mmmsqld(67),"\",32)
 s PLIST(23)="" f %irep=1:1:$g(^TTAB("DR",PLIST(2),1,0)) s $li(PLIST(23),%irep)=$g(^(%irep))
 d %0ABr1
%0ABuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(56))=1 { l -@%mmmsqld(57) s %mmmsqld(56)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(56))=1 { l -@%mmmsqld(57) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Do n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Derr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("DR",%mmmsqld(2)))
 e  g %0DBdun
 s %mmmsqld(10)=$$%getlock^User.CTDoctor.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Dc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("DR",%mmmsqld(2)))
 e  g %0DCdun
 k %data
 f icol=0:1:53 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTDoctor.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTDoctor.T1(%mmmsqld(2)) g %0Dc
%0DCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTDoctor.T1(%mmmsqld(2)) g:SQLCODE<0 %0Dc
%0DBdun 
%0DAdun 
%0Dc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Derr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTDoctor.T1(%mmmsqld(2)) g %0Dc
%0Fo n %i,icol,ir
 f icol=0:1:18 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DEBDebtor.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Fo
%0Ho n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitSpecimen.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %i,icol,ir
 f icol=0:1:85 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTPaymentCode.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
%0Lo n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitTestSetSnomedRes.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Lo
]]></Routine>
</Export>
