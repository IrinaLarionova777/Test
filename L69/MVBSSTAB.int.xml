<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSSTAB" type="INT" languagemode="0"><![CDATA[
MVBSSTAB  ; MVB Control code access for SS_Table
 ;
 ; supported calls:
 ;
 ; $$select^MVBSSTAB(ROWID,skip)
 ; $$open^MVBSSTAB(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSSTAB(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSSTAB(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSSTAB(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSSTAB()
 ;
  
 ;
 ;
 ; Open the cursor
open(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
 d %SSTAB0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)  K PLIST s par=$g(par),skip=$g(skip)
 d %0Co
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (skip,PLIST) s skip=$g(skip) K ^TMP($zn,$j)
 i $$open(skip)
 f cnt=1:1 Q:$$fetch(skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %SSTAB0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST s skip=$g(skip)
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 ;
 Q
getall() N (PLIST) K ^TMP($zn,$j) s par=$g(par)
 I $$open("Y")
 F cnt=1:1 Q:$$fetch("Y")  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 ;
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%SSTAB0o s SQLCODE=$s($g(%SSTAB0c):-101,1:0) q:SQLCODE'=0
 s %SSTAB0c=1 k %SSTAB0m
 s %SSTAB0E=$zt,%SSTAB0f=0,%SSTAB0e=0,%SSTAB0L=""
 s %SSTAB0d(3)=$P(par,$C(1))
 s %SSTAB0d(4)=$$ALPHAUP(%SSTAB0d(3))
 q
%0Afirst   ;  init
 
 
 
 
 
 
 
 
 
 ; asl MOD# 2
 s $P(%SSTAB0d(6),$C(1))=""
%0ABk1 s $P(%SSTAB0d(6),$C(1))=$o(^mdd(1,$P(%SSTAB0d(6),$C(1))))
 i $P(%SSTAB0d(6),$C(1))="" g %0ABdun
 i $P(%SSTAB0d(6),$C(1))'=+$P(%SSTAB0d(6),$C(1)) g %0ABdun
 i '$d(^mdd(1,$P(%SSTAB0d(6),$C(1)),1)) g %0ABk1
 s %SSTAB0n=$g(^mdd(1,$P(%SSTAB0d(6),$C(1)),1))
 s %SSTAB0d(1)=$p(%SSTAB0n,$c(1),1)
 
 s %val=$P(%SSTAB0d(6),$C(1)) d %0ABs1:%val'="" s $P(%SSTAB0d(6),$C(1),2)=%val
 s %SSTAB0d(2)=$$ALPHAUP(%SSTAB0d(1))
 g:'((%SSTAB0d(4))=$E((%SSTAB0d(2)),1,$L((%SSTAB0d(4))))) %0ABk1
 s SQLCODE=0 s:SQLCODE=0 %SSTAB0f=%SSTAB0f+1 s %SSTAB0c=10 q
%SSTAB0f i '$g(%SSTAB0c) s SQLCODE=-102 q
 i %SSTAB0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%SSTAB0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %SSTAB0c=100 q
%SSTAB0c i '$g(%SSTAB0c) s SQLCODE=-102 q
 k %SSTAB0c,%SSTAB0d,%SSTAB0e,%SSTAB0E,%SSTAB0f,%SSTAB0l,%SSTAB0L,%SSTAB0n,%SSTAB0r,%SSTAB0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%SSTAB0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %SSTAB0f q:SQLCODE'=0
 s PLIST(1)=%SSTAB0d(6),PLIST(2)=%SSTAB0d(1)
 q
%0EAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=%mmmsqld(3)
 i $P(PLIST(1),$C(1))'="",$d(^mdd(1,$P(PLIST(1),$C(1)),1))
 e  g %0EBdun
 s %mmmsqln=$g(^mdd(1,$P(PLIST(1),$C(1)),1))
 s PLIST(2)=$p(%mmmsqln,$c(1),1)
 
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
]]></Routine>
</Export>
