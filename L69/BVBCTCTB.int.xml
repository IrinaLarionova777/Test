<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTCTB" type="INT" languagemode="0"><![CDATA[
BVBCTCTB ; IG 30/07/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:23 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$select^BVBCTCTB(ROWID)
 ; $$open^BVBCTCTB(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTCTB(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTCTB(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTCTB(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTCTB()
 ; $$insert^BVBCTCTB(par)
 ; $$update^BVBCTCTB(ROWID)
 ; $$delete^BVBCTCTB(ROWID,Comments)
 ; $$getall^BVBCTCTB(par)
 ; 
  
 ;
 q 
 ; Insert the data
insert(par) K PLIST(1) s PLIST(0)=par
 s PLIST(2)=$o(^CT("COMP",$p(PLIST(0),"||",1),"TS",$p(PLIST(0),"||",2),"SCREEN",$p(PLIST(0),"||",3),"PHASES",""),-1)+1
 d %0Bo
 I 'SQLCODE d  Q $$select(%ROWID)
 .d:$g(PLIST(5))["Y" post(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) D pre s ROWID=$g(ROWID)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE d  D adjust
 .d:$g(PLIST(5))["Y" post(ROWID)
 Q SQLCODE
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTCTB0o
 Q 0
 ;
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par)
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %CTCTB0c 
 q 0
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^BVBCTCTP(plist(3))
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 ;
 Q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(0),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(4),$c(1))_$c(1)_$p($g(PLIST(5)),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
post(RowID) n (RowID) s RowID=$g(RowID),par=$p(RowID,"||",1,3)
 i $$open(par)
 f  q:$$fetch(par)  d:PLIST(1)'=RowID
 .i $g(PLIST(5))["Y" s PLIST(5)="N" i $$update(PLIST(1))
 i $$close()
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0ABs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%CTCTB0o s SQLCODE=$s($g(%CTCTB0c):-101,1:0) q:SQLCODE'=0
 s %CTCTB0c=1 k %CTCTB0m
 s %CTCTB0E=$zt,%CTCTB0f=0,%CTCTB0e=0,%CTCTB0L=""
 s %CTCTB0d(2)=$P(par,$C(1))
 s:%CTCTB0d(2)="" %CTCTB0d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTCTB0d(1)=$g(%CTCTB0d(2))
 s %CTCTB0d(9)=$p($g(%CTCTB0d(1)),"||",1,1),%CTCTB0d(10)=$p($g(%CTCTB0d(1)),"||",2,2),%CTCTB0d(11)=$p($g(%CTCTB0d(1)),"||",3,3)
 i %CTCTB0d(9)="" g %0ABdun
 i %CTCTB0d(10)="" g %0ABdun
 i %CTCTB0d(11)="" g %0ABdun
 s $P(%CTCTB0d(5),$C(1))=""
%0ABk1 s $P(%CTCTB0d(5),$C(1))=$o(^CT("COMP",%CTCTB0d(9),"TS",%CTCTB0d(10),"SCREEN",%CTCTB0d(11),"PHASES",$P(%CTCTB0d(5),$C(1))))
 i $P(%CTCTB0d(5),$C(1))="" g %0ABdun
 i $P(%CTCTB0d(5),$C(1))'=+$P(%CTCTB0d(5),$C(1)) g %0ABdun
 s %CTCTB0n=$g(^CT("COMP",%CTCTB0d(9),"TS",%CTCTB0d(10),"SCREEN",%CTCTB0d(11),"PHASES",$P(%CTCTB0d(5),$C(1))))
 s %CTCTB0d(6)=$p(%CTCTB0n,"\",1) s %CTCTB0d(7)=$p(%CTCTB0n,"\",2) s %CTCTB0d(8)=$p(%CTCTB0n,"\",3)
 s %CTCTB0d(4)=(%CTCTB0d(9))_"||"_(%CTCTB0d(10))_"||"_(%CTCTB0d(11))_"||"_($P(%CTCTB0d(5),$C(1)))
 s %val=$P(%CTCTB0d(5),$C(1)) d %0ABs1:%val'="" s $P(%CTCTB0d(5),$C(1),2)=%val
 s %val=$P(%CTCTB0d(7),$C(1)) d %0ABs2:%val'="" s $P(%CTCTB0d(7),$C(1),2)=%val
 s %val=$P(%CTCTB0d(8),$C(1)) d %0ABs2:%val'="" s $P(%CTCTB0d(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCTB0f=%CTCTB0f+1 s %CTCTB0c=10 q
%CTCTB0f i '$g(%CTCTB0c) s SQLCODE=-102 q
 i %CTCTB0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTCTB0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCTB0c=100 q
%CTCTB0c i '$g(%CTCTB0c) s SQLCODE=-102 q
 k %CTCTB0c,%CTCTB0d,%CTCTB0e,%CTCTB0E,%CTCTB0f,%CTCTB0l,%CTCTB0L,%CTCTB0n,%CTCTB0r,%CTCTB0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCTB0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:5 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt3361("1")
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2),%mmmsqld(6)=$p($g(%mmmsqld(3)),"||",3,3),$P(%mmmsqld(7),$C(1))=$p($g(%mmmsqld(3)),"||",4,4)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$P(%mmmsqld(7),$C(1))'="",$d(^CT("COMP",%mmmsqld(4),"TS",%mmmsqld(5),"SCREEN",%mmmsqld(6),"PHASES",$P(%mmmsqld(7),$C(1))))
 e  g %0CBdun
 k %data,%edit
 f icol=0:1:5 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt3361(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2),%mmmsqld(5)=$p($g(%mmmsqld(2)),"||",3,3),$P(%mmmsqld(6),$C(1))=$p($g(%mmmsqld(2)),"||",4,4)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$P(%mmmsqld(6),$C(1))'="",$d(^CT("COMP",%mmmsqld(3),"TS",%mmmsqld(4),"SCREEN",%mmmsqld(5),"PHASES",$P(%mmmsqld(6),$C(1))))
 e  g %0DBdun
 d delete^mt3361(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTCTB0f q:SQLCODE'=0
 s PLIST(0)=%CTCTB0d(1),PLIST(1)=%CTCTB0d(4),PLIST(2)=%CTCTB0d(5),PLIST(3)=%CTCTB0d(6),PLIST(4)=%CTCTB0d(7),PLIST(5)=%CTCTB0d(8)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(10)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(11)=$p($g(%mmmsqld(3)),"||",2,2),%mmmsqld(12)=$p($g(%mmmsqld(3)),"||",3,3),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",4,4)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",$P(PLIST(2),$C(1))'="",$d(^CT("COMP",%mmmsqld(10),"TS",%mmmsqld(11),"SCREEN",%mmmsqld(12),"PHASES",$P(PLIST(2),$C(1))))
 e  g %0HBdun
 s %mmmsqln=$g(^CT("COMP",%mmmsqld(10),"TS",%mmmsqld(11),"SCREEN",%mmmsqld(12),"PHASES",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"\",1) s PLIST(4)=$p(%mmmsqln,"\",2) s PLIST(5)=$p(%mmmsqln,"\",3)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs2:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(5),$C(1)) d %0ABs2:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
