<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTSA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTSA ; IG 1/5/98 ; LVB Control data access for CTTSA CT_TestSetFrames
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTTSA(par)
 ; $$delete^LVBCTTSA(ROWID,Comments)
 ; $$update^LVBCTTSA(ROWID)
 ; $$select^LVBCTTSA(ROWID,skip)
 ; $$open^LVBCTTSA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTTSA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTTSA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTTSA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTTSA()
 ; $$getall^LVBCTTSA(par)
 ;
  ;---&sql(DECLARE CTTSA CURSOR FOR SELECT * FROM CT_TestSetFrames
   ;---         WHERE CTTSA_ParRef = :par
   ;---         ORDER BY CTTSA_Sequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTTSA)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSA0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTTSA INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTTSA)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSA0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetFrames WHERE CTTSA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO CT_TestSetFrames VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_TestSetFrames VALUES :PLIST() WHERE CTTSA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_TestSetFrames WHERE CTTSA_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par,"Y")
 f cnt=1:1 q:$$fetch(par,"Y")  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; save frames layout
save(ts) n (ts,PLIST) s ts=$g(ts) k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST
 k ^TTAB("TS",ts,"FRAME") s ok1=ts
 i $l(ok1) s x1="" f  s x1=$o(^TMP($zn,$j,x1)) q:x1=""  s xx1=^(x1) d
 .s ok2="" f x2=1:1:$L(xx1,$c(2)) s xx2=$p(xx1,$c(2),x2) d
 ..i x2=1 d
 ...k PLIST f j=1:1:$l(xx2,$c(28)) s PLIST(j)=$p(xx2,$c(28),j)
 ...s PLIST=$o(PLIST(""),-1)
 ...i '$$insert(ok1) s ok2=PLIST(1)
 ..i x2>1,$l(ok2) d
 ...s ok3="" f x3=1:1:$l(xx2,$c(4)) s xx3=$p(xx2,$c(4),x3) d
 ....i x3=1 d
 .....k PLIST f j=1:1:$l(xx3,$c(28)) s PLIST(j)=$p(xx3,$c(28),j)
 .....s PLIST=$o(PLIST(""),-1)
 .....i '$$insert^LVBCTTSB(ok2) s ok3=PLIST(1)
 ....i x3>1,$l(ok3) d
 .....k PLIST f j=1:1:$l(xx3,$c(28)) s PLIST(j)=$p(xx3,$c(28),j)
 .....s PLIST=$o(PLIST(""),-1)
 .....i $$insert^LVBCTTSI(ok3)
 k ^TMP($zn,$j)
 q 0
%CTTSA0o s $zt="%CTTSA0E" s SQLCODE=$s($g(%CTTSA0c):-101,1:0) q:SQLCODE'=0  s %CTTSA0d(11)=0 s %CTTSA0d(12)=0,%CTTSA0d(13)=""
 s %CTTSA0d(7)=$g(par)
 s %CTTSA0t(1)=$i(^||%sql.temp)
 s %CTTSA0c=1 q
%CTTSA0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTSA0c,%CTTSA0d,%CTTSA0E,%CTTSA0l,%CTTSA0n,%CTTSA0R,%CTTSA0s,%CTTSA0t,%CTTSA0Z q
%0Afirst s %CTTSA0d(10)=""
 k ^||%sql.temp(%CTTSA0t(1),0) s ^||%sql.temp(%CTTSA0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTTSA0t(1),0))
 d %0ABMod
 ; asl MOD# 4
 i $sortend(^||%sql.temp(%CTTSA0t(1),0))
 s %CTTSA0s(6)=""
%0ADk1 s %CTTSA0s(6)=$o(^||%sql.temp(%CTTSA0t(1),0,%CTTSA0s(6)))
 i %CTTSA0s(6)="" g %0ADdun
 s %CTTSA0d(6)=$s(%CTTSA0s(6)=-1E14:"",1:%CTTSA0s(6))
 s %CTTSA0s(10)=""
%0ADk2 s %CTTSA0s(10)=$o(^||%sql.temp(%CTTSA0t(1),0,%CTTSA0s(6),%CTTSA0s(10)))
 i %CTTSA0s(10)="" g %0ADk1
 s %CTTSA0d(10)=$s(%CTTSA0s(10)=-1E14:"",1:%CTTSA0s(10))
 s %CTTSA0d(32)=$g(^||%sql.temp(%CTTSA0t(1),0,%CTTSA0s(6),%CTTSA0d(10)))
 s %CTTSA0d(1)=$lg(%CTTSA0d(32),3) s %CTTSA0d(2)=$lg(%CTTSA0d(32),4) s %CTTSA0d(3)=$lg(%CTTSA0d(32),1) s %CTTSA0d(4)=$lg(%CTTSA0d(32),2) s %CTTSA0d(5)=$lg(%CTTSA0d(32),5)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTSA0d(11)=%CTTSA0d(11)+1,%ROWCOUNT=%CTTSA0d(11),%ROWID=%CTTSA0d(2),%CTTSA0c=10 q
%CTTSA0f i '$g(%CTTSA0c) { s SQLCODE=-102 q  } i %CTTSA0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTSA0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTSA0d(11),%CTTSA0c=100 q  } g %0Afirst:%CTTSA0c=1
 g %0ADk2
%0ADdun 
%0AAdun 
 s %ROWCOUNT=%CTTSA0d(11),SQLCODE=100,%CTTSA0c=100 q
%CTTSA0c i '$g(%CTTSA0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTSA0d(11)),1:0) f %CTTSA0d(14)=1 { i $sortend(^||%sql.temp(%CTTSA0t(%CTTSA0d(14)),0),0) } k ^||%sql.temp(%CTTSA0t(1))
 i $zu(115,2)=1,$g(%CTTSA0d(12))=1 { l -@%CTTSA0d(13) } k %CTTSA0c,%CTTSA0d,%CTTSA0E,%CTTSA0l,%CTTSA0n,%CTTSA0R,%CTTSA0s,%CTTSA0t,%CTTSA0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTSA0c=100
 f %CTTSA0d(14)=1 i $sortend(^||%sql.temp(%CTTSA0t(%CTTSA0d(14)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTTSA0d(1)=%CTTSA0d(7)
 i %CTTSA0d(1)="" g %0ABdun
 s %CTTSA0d(3)=""
%0ABk1 s %CTTSA0d(3)=$o(^TTAB("TS",%CTTSA0d(1),"FRAME",%CTTSA0d(3)))
 i %CTTSA0d(3)="" g %0ABdun
 s %CTTSA0d(22)=$g(^TTAB("TS",%CTTSA0d(1),"FRAME",%CTTSA0d(3)))
 s %CTTSA0d(4)=$p(%CTTSA0d(22),"\",1) s %CTTSA0d(5)=$p(%CTTSA0d(22),"\",3) s %CTTSA0d(6)=$p(%CTTSA0d(22),"\",2)
 s %CTTSA0d(2)=(%CTTSA0d(1))_"||"_(%CTTSA0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%CTTSA0d(2),"||",1),"FRAME",$p(%CTTSA0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTTSA0d(12)=1,%CTTSA0d(13)=$name(^TTAB("TS",$p(%CTTSA0d(2),"||",1),"FRAME",$p(%CTTSA0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFrames for RowID value: "_%CTTSA0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTSA0d(9)=$p(%CTTSA0d(2),"||"),%CTTSA0d(3)=$p(%CTTSA0d(2),"||",2)
 i %CTTSA0d(9)'="",%CTTSA0d(3)'="",$d(^TTAB("TS",%CTTSA0d(9),"FRAME",%CTTSA0d(3)))
 e  g %0ACdun
 s %CTTSA0d(30)=$g(^TTAB("TS",%CTTSA0d(9),"FRAME",%CTTSA0d(3)))
 s %CTTSA0d(4)=$p(%CTTSA0d(30),"\",1) s %CTTSA0d(5)=$p(%CTTSA0d(30),"\",3) s %CTTSA0d(6)=$p(%CTTSA0d(30),"\",2)
 s %CTTSA0d(1)=$p(%CTTSA0d(2),"||")
%0ABuncommitted ;
 s %CTTSA0s(6)=$s(%CTTSA0d(6)'="":%CTTSA0d(6),1:-1E14),%CTTSA0d(10)=%CTTSA0d(10)+1,%CTTSA0d(31)="",$li(%CTTSA0d(31),3)=%CTTSA0d(1),$li(%CTTSA0d(31),4)=%CTTSA0d(2),$li(%CTTSA0d(31),1)=%CTTSA0d(3),$li(%CTTSA0d(31),2)=%CTTSA0d(4),$li(%CTTSA0d(31),5)=%CTTSA0d(5),^||%sql.temp(%CTTSA0t(1),0,%CTTSA0s(6),%CTTSA0d(10))=%CTTSA0d(31)
%0ACdun i $zu(115,2)=1,$g(%CTTSA0d(12))=1 { l -@%CTTSA0d(13) s %CTTSA0d(12)=0 }
 g %0ABk1
%0ABdun 
 q
%0Do d %CTTSA0f q:SQLCODE'=0
 s PLIST(0)=%CTTSA0d(1),PLIST(1)=%CTTSA0d(2),PLIST(2)=%CTTSA0d(3),PLIST(3)=%CTTSA0d(4),PLIST(4)=%CTTSA0d(5),PLIST(5)=%CTTSA0d(6)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(8)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(8)
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(10),"FRAME",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(20)=$g(^TTAB("TS",%mmmsqld(10),"FRAME",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",3) s PLIST(5)=$p(%mmmsqld(20),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),"FRAME",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TTAB("TS",$p(PLIST(1),"||",1),"FRAME",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetFrames for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(10)'="",PLIST(2)'="",$d(^TTAB("TS",%mmmsqld(10),"FRAME",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(28)=$g(^TTAB("TS",%mmmsqld(10),"FRAME",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",1) s PLIST(4)=$p(%mmmsqld(28),"\",3) s PLIST(5)=$p(%mmmsqld(28),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestSetFrames.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(4),"FRAME",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(15)=$$%getlock^User.CTTestSetFrames.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(4),"FRAME",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestSetFrames.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestSetFrames.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTTestSetFrames.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTTestSetFrames.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(3),"FRAME",%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(14)=$$%getlock^User.CTTestSetFrames.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(3),"FRAME",%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.CTTestSetFrames.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTTestSetFrames.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTTestSetFrames.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTTestSetFrames.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
