<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt371" type="INT" languagemode="0"><![CDATA[
mt371  ; Compiled May 9, 2007 14:32:14 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt371(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0C^mt371
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt371(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(2))'="" d
 . s %data(1)=$g(%data(2))
 . d insertnw^mt371(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt371 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0A^mt371
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:10 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt371(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:10 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt371(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt371 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt371
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TTAB("IC",%ROWID):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TTAB("IC",%ROWID)
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TTAB("IC",%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",1)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",2)=$p($g(%data(4)),$c(1))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",3)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",4)=$p($g(%data(6)),$c(1))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",5)=$p($g(%data(7)),$c(1))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",6)=$p($g(%data(8)),$c(1))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",7)=$g(%data(9))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TTAB("IC",%data(2))) s $p(tempn,"\",8)=$p($g(%data(10)),$c(1))
 s:$d(tempn)#2 ^TTAB("IC",%data(2))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(8)):$p(%edit(8),$c(1),1),1:$p($g(%data(8)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'=""
 i  i $d(^TTABi("IC",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^TTABi("IC",sn(1),sn(2)) k ^TTABi("IC",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$p($g(%data(8)),$c(1),1) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'=""
 e  g map1dun
 s ^TTABi("IC",sn(1),sn(2))=tempn
map1dun q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(37)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(37)
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^TTAB("IC",%mmmsqld(1),%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1911(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
  d %0Do^mt371  s %didit=1
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(37)
 q
%0EBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q  ;  Code for update (get old values) of table: CT_InitiationCode
%0EBs2 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0EBs3 s %val=$p("Initiation Code|Billing Activity","|",$l($p("|IC|BA|","|"_%val_"|"),"|")) q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %dataold(2)=$p($g(%dataold(1)),"||",1,1)
 i %dataold(2)'="",$d(^TTAB("IC",%dataold(2)))
 e  g %0EBdun
 s %mmmsqln=$g(^TTAB("IC",%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(6)=$p(%mmmsqln,"\",4) s %dataold(7)=$p(%mmmsqln,"\",5) s %dataold(8)=$p(%mmmsqln,"\",6) s:%dataold(8)'="" %dataold(8)=+%dataold(8) s %dataold(9)=$p(%mmmsqln,"\",7) s %dataold(10)=$p(%mmmsqln,"\",8)
 
 s %val=$P(%dataold(4),$C(1)) d %0EBs1:%val'="" s $P(%dataold(4),$C(1),2)=%val
 s %val=$P(%dataold(6),$C(1)) d %0EBs1:%val'="" s $P(%dataold(6),$C(1),2)=%val
 s %val=$P(%dataold(7),$C(1)) d %0EBs1:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0EBs2:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s %val=$P(%dataold(10),$C(1)) d %0EBs3:%val'="" s $P(%dataold(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
getold(%dataold) g %0Eo
lookupF d %RSFcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",4),1,4)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupF
%RSFcuro s SQLCODE=$s($g(%RSFcurc):-101,1:0) q:SQLCODE'=0
 s %RSFcurc=1 k %RSFcurm
 s %RSFcurE=$zt,%RSFcurf=0,%RSFcure=0,%RSFcurL=""
 q
%0Ffirst   ;  init
 ; asl MOD# 2
 s %datars(2)=""
%0FBk1 s %datars(2)=$o(^TTAB("IC",%datars(2)))
 i %datars(2)="" g %0FBdun
 s %RSFcurn=$g(^TTAB("IC",%datars(2)))
 s %datars(3)=$p(%RSFcurn,"\",1)
 s %datars(1)=(%datars(2))
 s SQLCODE=0 s:SQLCODE=0 %RSFcurf=%RSFcurf+1 s %RSFcurc=10 q
%RSFcurf i '$g(%RSFcurc) s SQLCODE=-102 q
 i %RSFcurc=100 s SQLCODE=100 q
 s $zt="%0Ferr^"_$zn s $ze="" n %val g %0Ffirst:%RSFcurc=1
 g %0FBk1
%0FBdun 
%0FAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSFcurc=100 q
%RSFcurc i '$g(%RSFcurc) s SQLCODE=-102 q
 k %RSFcurc,%RSFcurd,%RSFcure,%RSFcurE,%RSFcurf,%RSFcurl,%RSFcurL,%RSFcurn,%RSFcurr,%RSFcurR s SQLCODE=0 q
%0Ferr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSFcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
lookupG d %RSGcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",4),1,4)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupG
%RSGcuro s SQLCODE=$s($g(%RSGcurc):-101,1:0) q:SQLCODE'=0
 s %RSGcurc=1 k %RSGcurm
 s %RSGcurE=$zt,%RSGcurf=0,%RSGcure=0,%RSGcurL=""
 s %RSGcurd(7)=$P(%data(2),$C(1))
 s:%RSGcurd(7)="" %RSGcurd(7)=$e(%data(2),2,99999)
 q
%0Gfirst   ;  init
 ; asl MOD# 2
 s %datars(2)=%RSGcurd(7)
 i %datars(2)'="",$d(^TTAB("IC",%datars(2))) g %0GBg1
%0GBk1 s %datars(2)=$o(^TTAB("IC",%datars(2)))
 i %datars(2)="" g %0GBdun
%0GBg1 i (%RSGcurd(7)?1n.n),":"']%datars(2) g %0GBdun
 i '(%RSGcurd(7)=$e(%datars(2),1,$l(%RSGcurd(7)))) g:(%RSGcurd(7)?1n.n) %0GBk1 g %0GBdun
 s %RSGcurn=$g(^TTAB("IC",%datars(2)))
 s %datars(3)=$p(%RSGcurn,"\",1)
 s %datars(1)=(%datars(2))
 s SQLCODE=0 s:SQLCODE=0 %RSGcurf=%RSGcurf+1 s %RSGcurc=10 q
%RSGcurf i '$g(%RSGcurc) s SQLCODE=-102 q
 i %RSGcurc=100 s SQLCODE=100 q
 s $zt="%0Gerr^"_$zn s $ze="" n %val g %0Gfirst:%RSGcurc=1
 g %0GBk1
%0GBdun 
%0GAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSGcurc=100 q
%RSGcurc i '$g(%RSGcurc) s SQLCODE=-102 q
 k %RSGcurc,%RSGcurd,%RSGcure,%RSGcurE,%RSGcurf,%RSGcurl,%RSGcurL,%RSGcurn,%RSGcurr,%RSGcurR s SQLCODE=0 q
%0Gerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSGcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
lookupH d %RSHcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",4),1,4)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupH
%RSHcuro s SQLCODE=$s($g(%RSHcurc):-101,1:0) q:SQLCODE'=0
 s %RSHcurc=1 k %RSHcurm
 s %RSHcurE=$zt,%RSHcurf=0,%RSHcure=0,%RSHcurL=""
 s %RSHcurd(8)=$P(%data(3),$C(1))
 l +^mtemp s %RSHcurt(1)=$zp(^mtemp(" "))+1,^(%RSHcurt(1))="" l -^mtemp
 s %RSHcurd(9)=$$ALPHAUP(%RSHcurd(8))
 q
%0Hfirst   ;  init
 k ^mtemp(%RSHcurt(1),0)
 ; asl MOD# 3
 d %0HBMod
 s %RSHcurs(7)=""
%0HCk1 s %RSHcurs(7)=$o(^mtemp(%RSHcurt(1),0,%RSHcurs(7)))
 i %RSHcurs(7)="" g %0HCdun
 s %RSHcurd(7)=$s(%RSHcurs(7)=" ":"",1:%RSHcurs(7))
 s %RSHcurs(1)=""
%0HCk2 s %RSHcurs(1)=$o(^mtemp(%RSHcurt(1),0,%RSHcurs(7),%RSHcurs(1)))
 i %RSHcurs(1)="" g %0HCk1
 s %datars(1)=$s(%RSHcurs(1)=" ":"",1:%RSHcurs(1))
 s %RSHcurn=$g(^mtemp(%RSHcurt(1),0,%RSHcurs(7),%RSHcurs(1)))
 s %datars(2)=$p(%RSHcurn,"|~|",1) s %datars(3)=$p(%RSHcurn,"|~|",2)
 s SQLCODE=0 s:SQLCODE=0 %RSHcurf=%RSHcurf+1 s %RSHcurc=10 q
%RSHcurf i '$g(%RSHcurc) s SQLCODE=-102 q
 i %RSHcurc=100 s SQLCODE=100 q
 s $zt="%0Herr^"_$zn s $ze="" n %val g %0Hfirst:%RSHcurc=1
 g %0HCk2
%0HCdun 
%0HAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSHcurc=100 q
%RSHcurc i '$g(%RSHcurc) s SQLCODE=-102 q
 f %RSHcurt=1:1:1 k ^mtemp(%RSHcurt(%RSHcurt))
 k %RSHcurc,%RSHcurd,%RSHcure,%RSHcurE,%RSHcurf,%RSHcurl,%RSHcurL,%RSHcurn,%RSHcurr,%RSHcurR,%RSHcurs,%RSHcurt s SQLCODE=0 q
%0Herr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSHcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0HBMod ; asl MOD# 2
 n %RSHcurn  ; Nested NEWing for Subquery...
 s %datars(2)=""
%0HBk1 s %datars(2)=$o(^TTAB("IC",%datars(2)))
 i %datars(2)="" g %0HBdun
 s %RSHcurn=$g(^TTAB("IC",%datars(2)))
 s %datars(3)=$p(%RSHcurn,"\",1)
 s %datars(1)=(%datars(2))
 s %RSHcurd(7)=$$ALPHAUP(%datars(3))
 g:'((%RSHcurd(9))=$E((%RSHcurd(7)),1,$L((%RSHcurd(9))))) %0HBk1
 s %RSHcurs(7)=$s(%RSHcurd(7)'="":%RSHcurd(7),1:" "),%RSHcurs(1)=$s(%datars(1)'="":%datars(1),1:" "),%RSHcurn="",$p(%RSHcurn,"|~|",1)=%datars(2),$p(%RSHcurn,"|~|",2)=%datars(3),^mtemp(%RSHcurt(1),0,%RSHcurs(7),%RSHcurs(1))=%RSHcurn
 g %0HBk1
%0HBdun 
 q
selitmH  ; entry point to select the Row Selection Item
 i $c(1)'[$g(%data(2)) s item=2 q
 i $c(1)'[$g(%data(3)) s item=3 q
 s item=0 f  s item=$o(%data(item)) q:item=""  i $c(1)'[%data(item) s item=1 q
 s item=$s(item=1:"",1:1) q
 s item="" q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CT_InitiationCode"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="CT_InitiationCode Row ID" d %mdiag(%oper,-106,"Fld Int","Req","CTIC_RowId","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field CTIC_Code
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field CTIC_Code
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CT_InitiationCode
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt371 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt371
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde10 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="4876",irn=37,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,37,2,4876,36,"get",%val))
 n found s found=0
 i 'found,$f("|Initiation Code|Billing Activity|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("IC|BA","|",$l($p("|Initiation Code|Billing Activity|","|"_%val_"|"),"|"))
 q
fde4 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde8 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,0,"",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=4 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTIC_Inpatient","",$g(%msg))
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=6 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTIC_ActiveFlag","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTIC_License","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTIC_DisplaySequence","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=10 d etiok
 . s %msg="" d fde10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTIC_Type","",$g(%msg))
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv10 ; DO validation and additional validation code
 i %val="|~~|NULL|~~|" s %ok=0 q
 q
fdv4 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv8 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q:'%ok
 i $l($p(%val,".",2))>0 s %ok=0,%msg=$$setmsg^%qarzst("DTNNDEC")
 q
fdv9 ; DO validation and additional validation code
 n nval s nval=%val d %0Ko
  i SQLCODE'=0 s %ok=0
 q
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("SCP-TYPE",%mmmsqld(4)))
 e  g %0KBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Kc
%0KBdun 
%0KAdun 
%0Kc q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
uniq1(%rowid,%unique) n SQLCODE,%val d %0Jo q SQLCODE=100
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(5)'="",$d(^TTAB("IC",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="CTIC_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","CTIC_RowId","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTIC_RowId","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTIC_Inpatient","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTIC_ActiveFlag","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTIC_License","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTIC_DisplaySequence","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv9 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTIC_SCPType_DR","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTIC_Type","",$g(%msg))
 q
fdi10 s %val=$p("Initiation Code|Billing Activity","|",$l($p("|IC|BA|","|"_%val_"|"),"|"))
 q
fdi4 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi8 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),$p(%data(4),$c(1))'="" s %val=$p(%data(4),$c(1)) d fdi4 s $p(%data(4),$c(1),2)=%val
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),$p(%data(6),$c(1))'="" s %val=$p(%data(6),$c(1)) d fdi4 s $p(%data(6),$c(1),2)=%val
 i $d(%data(7)),$p(%data(7),$c(1))'="" s %val=$p(%data(7),$c(1)) d fdi4 s $p(%data(7),$c(1),2)=%val
 i $d(%data(8)),$p(%data(8),$c(1))'="" s %val=$p(%data(8),$c(1)) d fdi8 s $p(%data(8),$c(1),2)=%val
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),$p(%data(10),$c(1))'="" s %val=$p(%data(10),$c(1)) d fdi10 s $p(%data(10),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt371 q:'%ok
 q
 g ^mt372
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
