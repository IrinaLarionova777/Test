<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTDBG" type="INT" languagemode="0"><![CDATA[
LVBCTDBC ; ML 5/7/2000 ; LVB Control data access for CTDBC CT_DBSpecimenLab  ; Compiled August 18, 2000 17:08:02 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTDBG(par)
 ; $$update^LVBCTDBG(ROWID)
 ; $$delete^LVBCTDBG(ROWID,Comments)
 ; $$select^LVBCTDBG(ROWID,skip)
 ; $$open^LVBCTDBG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTDBG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTDBG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTDBG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTDBG()
 ; $$getall^LVBCTDBG(lab,code)
 ;
 ;
 ; insert data
insert(par) s PLIST(0)=$g(par) k PLIST(1)
 d %0Bo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ; update data
update(RowID) s RowID=$g(RowID)
 d %0Co
 i 'SQLCODE d adjust
 q SQLCODE
 ; delete data
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 q SQLCODE
 ; select data for a code
select(RowID,skip) s RowID=$g(RowID),skip=$g(skip) k PLIST
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; insert and delete
save(par) n (par,PLIST) s par=$g(par) m plist=PLIST n PLIST k PLIST
 f i=1:1:$l(plist(5),",") d
 .s PLIST(2)=$p(plist(5),",",i) i $$insert^LVBCTDBG(par)
 s lab="" f  s lab=$o(^TTAB("DB-SPEC",par,"LA",lab)) q:lab=""  d
 .i (","_plist(5)_",")[lab q
 .i $$delete(par_"||"_lab)
 q 0
 ; open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTDBG0o
 q 0
 ; fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
 d %0Go
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close cursor
close() d %CTDBG0c
 q 0
 ; adjust certain fields
adjust n plist,I,J,SQLCODE,X f J=1:1:PLIST i $d(PLIST(J)) s PLIST(J)=$p(PLIST(J),$c(1),1)
 q
getall(par) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 q
%CTDBG0o s SQLCODE=$s($g(%CTDBG0c):-101,1:0) q:SQLCODE'=0
 s %CTDBG0c=1 k %CTDBG0m
 s %CTDBG0E=$zt,%CTDBG0f=0,%CTDBG0e=0,%CTDBG0L=""
 s %CTDBG0d(2)=$P(par,$C(1))
 s:%CTDBG0d(2)="" %CTDBG0d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTDBG0d(1)=$g(%CTDBG0d(2))
 i %CTDBG0d(1)="" g %0ABdun
 s %CTDBG0d(5)=""
%0ABk1 s %CTDBG0d(5)=$o(^TTAB("DB-SPEC",%CTDBG0d(1),"LA",%CTDBG0d(5)))
 i %CTDBG0d(5)="" g %0ABdun
 s %CTDBG0d(4)=(%CTDBG0d(1))_"||"_(%CTDBG0d(5))
 s SQLCODE=0 s:SQLCODE=0 %CTDBG0f=%CTDBG0f+1 s %CTDBG0c=10 q
%CTDBG0f i '$g(%CTDBG0c) s SQLCODE=-102 q
 i %CTDBG0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTDBG0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTDBG0c=100 q
%CTDBG0c i '$g(%CTDBG0c) s SQLCODE=-102 q
 k %CTDBG0c,%CTDBG0d,%CTDBG0e,%CTDBG0E,%CTDBG0f,%CTDBG0l,%CTDBG0L,%CTDBG0n,%CTDBG0r,%CTDBG0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTDBG0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:2 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt4971("1")
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("DB-SPEC",%mmmsqld(4),"LA",%mmmsqld(5)))
 e  g %0CBdun
 k %data,%edit
 f icol=0:1:2 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt4971(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("DB-SPEC",%mmmsqld(3),"LA",%mmmsqld(4)))
 e  g %0DBdun
 d delete^mt4971(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(7)=$p($g(%mmmsqld(3)),"||",1,1),PLIST(2)=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(7)'="",PLIST(2)'="",$d(^TTAB("DB-SPEC",%mmmsqld(7),"LA",PLIST(2)))
 e  g %0EBdun
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Go d %CTDBG0f q:SQLCODE'=0
 s PLIST(0)=%CTDBG0d(1),PLIST(1)=%CTDBG0d(4),PLIST(2)=%CTDBG0d(5)
 q
]]></Routine>
</Export>
