<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTSHA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTSHA ; IG 29/4/98 ; LVB Control data access for CTSHA CT_SchedulePayCodeItems
 ;
 ; supported calls:
 ;
 ; $$update^LVBCTSHA(ROWID)
 ; $$select^LVBCTSHA(ROWID)
 ; $$caption^LVBCTSHA(schedule,type,par)
 ; $$consolidate^LVBCTSHA(schedule)
 ; $$open^LVBCTSHA(schedule,type,par,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTSHA(schedule,type,par,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTSHA(schedule,type,par,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTSHA(schedule,type,par,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTSHA()
 ;
consolidate(schedule) k ^TMP($zn,$j) s schedule=$g(schedule)
 ; check paycodes
 s sch="" f  s sch=$o(^TSCH(sch)) q:sch=""  d
 .s pc="" f  s pc=$o(^TSCH(sch,"AMOUNT",pc)) q:pc=""  d
 ..s schPC=$$seldata^LVBCTPC(pc,23) i $l(sch),$l(schPC),sch'=schPC m ^TSCH(schPC,"AMOUNT",pc)=^TSCH(sch,"AMOUNT",pc) k ^TSCH(sch,"AMOUNT",pc)
 ; add new Items
 s it="" f  s it=$o(^TTAB("IB",it)) q:it=""  d
 .s pc="" f  s pc=$o(^TSCH(schedule,"AMOUNT",pc)) q:pc=""  d
 ..s dt="" f  s dt=$o(^TSCH(schedule,"AMOUNT",pc,dt)) q:dt=""  d
 ...i '$d(^TSCH(schedule,"AMOUNT",pc,dt,it)) s ^TSCH(schedule,"AMOUNT",pc,dt,it)=""
 ; delete old items
 s pc="" f  s pc=$o(^TSCH(schedule,"AMOUNT",pc)) q:pc=""  d
 .i '$d(^TTAB("BI",pc)) k ^TSCH(schedule,"AMOUNT",pc) q
 .s dt="" f  s dt=$o(^TSCH(schedule,"AMOUNT",pc,dt)) q:dt=""  d
 ..s it="" f  s it=$o(^TSCH(schedule,"AMOUNT",pc,dt,it)) q:it=""  d
 ...i '$d(^TTAB("IB",it)) k ^TSCH(schedule,"AMOUNT",pc,dt,it)
 q 0
 ; type :IN-Item Numbers
 ;       PC-Payment Code
 ;       DT-Date
caption(schedule,type,par) k ^TMP($zn,$j) s schedule=$g(schedule),type=$g(type),par=$g(par)
 s BasePC=""
  ;---&sql(SELECT CTSH_BasePaymentCode_DR INTO :BasePC FROM CT_Schedule WHERE CTSH_RowID=:schedule)
   ;--- ** SQL PUBLIC Variables: BasePC, SQLCODE, schedule
 Do %0Ao
 s BasePC=$p(BasePC,$c(1))
 i $g(type)="IN" d
 .s pc="" f  s pc=$o(^TSCH(schedule,"AMOUNT",pc)) q:pc=""  d
 ..s dt="" f  s dt=$o(^TSCH(schedule,"AMOUNT",pc,dt)) q:dt=""  d
 ...i $d(^TSCH(schedule,"AMOUNT",pc,dt,par)) d
 ....s ^TMP($zn,$j,"AMOUNT",pc,dt)=^(par)
 ....s ^TMP($zn,$j,"COL-ID",dt)=""
 .s dt="" f cnt=1:1 s dt=$o(^TMP($zn,$j,"COL-ID",dt),-1) q:dt=""  d
 ..s ^TMP($zn,$j,"COL",cnt)=dt
 ..s $p(^TMP($zn,$j,"COL-ID",dt),$c(1),1)=cnt
 .s pc="" f  s pc=$o(^TMP($zn,$j,"AMOUNT",pc)) q:pc=""  d
 ..s dt="" f  s dt=$o(^TMP($zn,$j,"AMOUNT",pc,dt),-1) q:dt=""  s xx=^(dt) d
 ...s cnt=$p(^TMP($zn,$j,"COL-ID",dt),$c(1),1)
 ...s rowid=schedule_"||"_pc_"||"_dt_"||"_par
 ...s $p(^TMP($zn,$j,"LIST",pc),$c(1),cnt)=rowid_$c(2)_xx
 i $g(type)="PC" d
 .s dt="" f  s dt=$o(^TSCH(schedule,"AMOUNT",par,dt)) q:dt=""  d
 ..s it="" f  s it=$o(^TSCH(schedule,"AMOUNT",par,dt,it)) q:it=""  d
 ...s ^TMP($zn,$j,"AMOUNT",it,dt)=^(it)
 ...s $p(^TMP($zn,$j,"COL-ID",dt),$c(1),2)=$g(^TSCH(schedule,"AMOUNT",par,dt))
 .s dt="" f cnt=1:1 s dt=$o(^TMP($zn,$j,"COL-ID",dt),-1) q:dt=""  d
 ..s ^TMP($zn,$j,"COL",cnt)=dt
 ..s $p(^TMP($zn,$j,"COL-ID",dt),$c(1),1)=cnt
 .s it="" f  s it=$o(^TMP($zn,$j,"AMOUNT",it)) q:it=""  d
 ..s dt="" f  s dt=$o(^TMP($zn,$j,"AMOUNT",it,dt)) q:dt=""  s xx=^(dt) d
 ...s cnt=$p(^TMP($zn,$j,"COL-ID",dt),$c(1),1)
 ...s rowid=schedule_"||"_par_"||"_dt_"||"_it
 ...s $p(^TMP($zn,$j,"LIST",it),$c(1),cnt)=rowid_$c(2)_xx
 i $g(type)="DT" d
 .s pc="" f  s pc=$o(^TSCH(schedule,"AMOUNT",pc)) q:pc=""  d
 ..s it="" f  s it=$o(^TSCH(schedule,"AMOUNT",pc,par,it)) q:it=""  d
 ...s ^TMP($zn,$j,"AMOUNT",it,pc)=^(it)
 ...s $p(^TMP($zn,$j,"COL-ID",pc),$c(1),2)=$g(^TSCH(schedule,"AMOUNT",pc,par))
 .s pc="" f cnt=1:1 s pc=$o(^TMP($zn,$j,"COL-ID",pc)) q:pc=""  d
 ..  ;---&SQL(SELECT CTPC_Desc INTO :name FROM CT_PaymentCode WHERE CTPC_RowID=:pc)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, name, pc
 .. Do %0Co
 ..s ^TMP($zn,$j,"COL",cnt)=pc_$c(1)_name
 ..s $p(^TMP($zn,$j,"COL-ID",pc),$c(1),1)=cnt
 .s it="" f  s it=$o(^TMP($zn,$j,"AMOUNT",it)) q:it=""  d
 ..s pc="" f  s pc=$o(^TMP($zn,$j,"AMOUNT",it,pc)) q:pc=""  s xx=^(pc) d
 ...s cnt=$p(^TMP($zn,$j,"COL-ID",pc),$c(1),1)
 ...s rowid=schedule_"||"_pc_"||"_par_"||"_it
 ...s $p(^TMP($zn,$j,"LIST",it),$c(1),cnt)=rowid_$c(2)_xx
 k PLIST m PLIST=^TMP($zn,$j,"COL") s PLIST=$o(PLIST(""),-1)
 s col=PLIST,x="" f row=0:1 s x=$o(^TMP($zn,$j,"LIST",x)) q:x=""
 q col_$c(1)_row
open(schedule,type,par,p3,p4,p5,p6,p7,p8,p9) s ^TMP($zn,$j,"LIST")=""
 q 0
 ;
 ; PLIST - 1.Type: for IN - Paycode
 ;                     PC - Item
 ;                     DT - Item
 ;         2...Amounts
fetch(schedule,type,par,p3,p4,p5,p6,p7,p8,p9) s SQLCODE=100,schedule=$g(schedule),type=$g(type),par=$g(par)
 k PLIST s x=$g(^TMP($zn,$j,"LIST")),x=$o(^TMP($zn,$j,"LIST",x))
 i $l(x) d
 .i type="IN" d
 .. ;---s name=x &SQL(SELECT CTPC_Desc INTO :name FROM CT_PaymentCode WHERE CTPC_RowID=:x)
  .. ;--- ** SQL PUBLIC Variables: SQLCODE, name, x
 ..s name=x Do %0Eo
 ..s PLIST(1)=x_$c(2)_$p(name,$c(1))
 .i (type="PC")!(type="DT") s PLIST(1)=x_$c(2)_x_$c(2)_$p($g(^TTAB("IB",x)),"\",4)
 .s SQLCODE=0,xx=^TMP($zn,$j,"LIST",x) f j=1:1:$l(xx,$c(1)) s PLIST(j+1)=$p(xx,$c(1),j)
 s ^TMP($zn,$j,"LIST")=x
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ; Fetch all data
fetchbuffer(schedule,type,par,p3,p4,p5,p6,p7,p8,p9) s schedule=$g(schedule),type=$g(type),par=$g(par) k ^TMP($zn,$j,"xxx")
 s max=5
 f xxx=1:1:max s SQLCODE=$$fetch(schedule,type,par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,"xxx",""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,"xxx",cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,"xxx") k ^TMP($zn,$j,"xxx")
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(schedule,type,par,p3,p4,p5,p6,p7,p8,p9) N (schedule,type,par,PLIST) s schedule=$g(schedule),type=$g(type),par=$g(par) K ^TMP($zn,$j,"xxx")
 i $$open(schedule,type,par)
 f cnt=1:1 Q:$$fetch(schedule,type,par)  s ^TMP($zn,$j,"xxx",cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,"xxx",cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j,"xxx")
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,"xxx")
 q 0
 ;
close() K ^TMP($zn,$j)
 q 0
 ;
select(ROWID) K PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM CT_SchedulePayCodeItems WHERE CTSHA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
update(ROWID) s ROWID=$g(ROWID) d pre("Y") 
  ;---&sql(UPDATE CT_SchedulePayCodeItems VALUES :PLIST() WHERE CTSHA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Io
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 f j=3,6,7 i $l($g(PLIST(j))) s PLIST(j)=+PLIST(j)
 Q
 ; Adjust certain fields
adjust d PostSQL^SSUTIL4("")
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(schedule)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TSCH(%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(10)=$g(^TSCH(%mmmsqld(3)))
 s BasePC=$p(%mmmsqld(10),"\",2)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TSCH($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TSCH($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TSCH(%mmmsqld(3)))
 e  g %0ACdun
 s %mmmsqld(13)=$g(^TSCH(%mmmsqld(3)))
 s BasePC=$p(%mmmsqld(13),"\",2)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(pc)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0CBdun
 s %mmmsqld(12)=$g(^TTAB("BI",%mmmsqld(3)))
 s name=$p(%mmmsqld(12),"\",1)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("BI",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BI",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PaymentCode for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0CCdun
 s %mmmsqld(17)=$g(^TTAB("BI",%mmmsqld(3)))
 s name=$p(%mmmsqld(17),"\",1)
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(x)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0EBdun
 s %mmmsqld(12)=$g(^TTAB("BI",%mmmsqld(3)))
 s name=$p(%mmmsqld(12),"\",1)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTAB("BI",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BI",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PaymentCode for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BI",%mmmsqld(3)))
 e  g %0ECdun
 s %mmmsqld(17)=$g(^TTAB("BI",%mmmsqld(3)))
 s name=$p(%mmmsqld(17),"\",1)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(15)=0,%mmmsqld(16)=""
 s %mmmsqld(10)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(10)
 s %mmmsqld(12)=$p(PLIST(1),"||"),%mmmsqld(13)=$p(PLIST(1),"||",2),%mmmsqld(14)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(12)'="",%mmmsqld(13)'="",%mmmsqld(14)'="",PLIST(2)'="",$d(^TSCH(%mmmsqld(12),"AMOUNT",%mmmsqld(13),%mmmsqld(14),PLIST(2)))
 e  g %0GBdun
 s %mmmsqld(24)=$g(^TSCH(%mmmsqld(12),"AMOUNT",%mmmsqld(13),%mmmsqld(14),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(24),"\",1) s PLIST(4)=$p(%mmmsqld(24),"\",2) s PLIST(5)=$p(%mmmsqld(24),"\",3) s PLIST(6)=$p(%mmmsqld(24),"\",4) s PLIST(7)=$p(%mmmsqld(24),"\",5)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TSCH($p(PLIST(1),"||",1),"AMOUNT",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(15)=1,%mmmsqld(16)=$name(^TSCH($p(PLIST(1),"||",1),"AMOUNT",$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_SchedulePayCodeItems for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(12)=$p(PLIST(1),"||"),%mmmsqld(13)=$p(PLIST(1),"||",2),%mmmsqld(14)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(12)'="",%mmmsqld(13)'="",%mmmsqld(14)'="",PLIST(2)'="",$d(^TSCH(%mmmsqld(12),"AMOUNT",%mmmsqld(13),%mmmsqld(14),PLIST(2)))
 e  g %0GCdun
 s %mmmsqld(32)=$g(^TSCH(%mmmsqld(12),"AMOUNT",%mmmsqld(13),%mmmsqld(14),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"\",1) s PLIST(4)=$p(%mmmsqld(32),"\",2) s PLIST(5)=$p(%mmmsqld(32),"\",3) s PLIST(6)=$p(%mmmsqld(32),"\",4) s PLIST(7)=$p(%mmmsqld(32),"\",5)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
%0GBuncommitted ;
 s SQLCODE=0 g %0Gc
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) s %mmmsqld(15)=0 }
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TSCH(%mmmsqld(4),"AMOUNT",%mmmsqld(5),%mmmsqld(6),%mmmsqld(7)))
 e  g %0IBdun
 s %mmmsqld(17)=$$%getlock^User.CTSchedulePayCodeItems.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TSCH(%mmmsqld(4),"AMOUNT",%mmmsqld(5),%mmmsqld(6),%mmmsqld(7)))
 e  g %0ICdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTSchedulePayCodeItems.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.CTSchedulePayCodeItems.T1(%mmmsqld(2)) g %0Ic
%0ICdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.CTSchedulePayCodeItems.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.CTSchedulePayCodeItems.T1(%mmmsqld(2)) g %0Ic
]]></Routine>
</Export>
