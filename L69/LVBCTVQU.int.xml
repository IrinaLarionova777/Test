<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTVQU" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTVQU ; IG 29/4/98 ;MVB Control code access for CT_VerificationQueue_User
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTVQU(ROWID,skip)
 ; $$open^LVBCTVQU(par,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTVQU(par,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTVQU(par,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTVQU(par,skip,user,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTVQU()
 ; $$insert^LVBCTVQU(par)
 ; $$update^LVBCTVQU(ROWID)
 ; $$delete^LVBCTVQU(ROWID,Comments)
 ; $$getall^LVBCTVQU(par)
 ; $$getall2^LVBCTVQU(user)
 ;
  ;---&SQL(DECLARE CTVQU CURSOR FOR SELECT * FROM CT_VerificationQueue_User
   ;---         WHERE CTVQU_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
  ;---&SQL(DECLARE CTVQU1 CURSOR FOR SELECT * FROM CT_VerificationQueue_User
   ;---         WHERE CTVQU_User_DR = :user)
   ;--- ** SQL PUBLIC Variables: SQLCODE, user
FIX d ##class(User.CTVerificationQueueUser).%BuildIndices()
 q       
 ; insert the data
insert(par) s PLIST(0)=$g(par) d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_VerificationQueue_User VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CT_VerificationQueue_User VALUES :PLIST() WHERE CTVQU_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_VerificationQueue_User WHERE CTVQU_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Io
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(par,skip,user,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---i $l(par) &SQL(OPEN CTVQU)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i $l(par) Do %CTVQU0o
  ;---i '$l(par),$l(user) &SQL(OPEN CTVQU1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i '$l(par),$l(user) Do %CTVQU10o
 q 0
 ; fetch the data
fetch(par,skip,user,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k PLIST
  ;---i $l(par) &SQL(FETCH CTVQU INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i $l(par) Do %0Mo
  ;---i '$l(par),$l(user) &SQL(FETCH CTVQU1 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i '$l(par),$l(user) Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,skip,user,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip,user) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,user,p3,p4,p5,p6,p7,p8,p9) n (par,skip,PLIST) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 i $$open(par,skip,user)
 f cnt=1:1 q:$$fetch(par,skip,user)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE CTVQU) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTVQU0c 
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_VerificationQueue_User WHERE CTVQU_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Po
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 q
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par,"Y")
 f cnt=1:1 q:$$fetch(par,"Y")  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
getall2(user) n (user,PLIST) k ^TMP($zn,$j) s user=$g(user)
 i $$open("","Y",user)
 f cnt=1:1 q:$$fetch("","Y",user)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .m VQU=PLIST i '$$select^LVBCTVQ(VQU(0)) s ^TMP($zn,$j,cnt)=VQU(0)_$c(2)_PLIST(3)_$c(2)_VQU(0)_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTVQU0o s $zt="%CTVQU0E" s SQLCODE=$s($g(%CTVQU0c):-101,1:0) q:SQLCODE'=0  s %CTVQU0d(9)=0 s %CTVQU0d(10)=0,%CTVQU0d(11)=""
 s %CTVQU0d(6)=$g(par)
 s %CTVQU0c=1 q
%CTVQU0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTVQU0c,%CTVQU0d,%CTVQU0E,%CTVQU0l,%CTVQU0n,%CTVQU0R,%CTVQU0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTVQU0d(1)=%CTVQU0d(6)
 i %CTVQU0d(1)="" g %0ABdun
 s %CTVQU0d(3)=""
%0ABk1 s %CTVQU0d(3)=$o(^TTAB("VQ",%CTVQU0d(1),"USER",%CTVQU0d(3)))
 i %CTVQU0d(3)="" g %0ABdun
 s %CTVQU0d(19)=$g(^TTAB("VQ",%CTVQU0d(1),"USER",%CTVQU0d(3)))
 s %CTVQU0d(4)=$p(%CTVQU0d(19),"\",1) s %CTVQU0d(5)=$p(%CTVQU0d(19),"\",2)
 s %CTVQU0d(2)=(%CTVQU0d(1))_"||"_(%CTVQU0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("VQ",$p(%CTVQU0d(2),"||",1),"USER",$p(%CTVQU0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTVQU0d(10)=1,%CTVQU0d(11)=$name(^TTAB("VQ",$p(%CTVQU0d(2),"||",1),"USER",$p(%CTVQU0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_VerificationQueue_User for RowID value: "_%CTVQU0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTVQU0d(8)=$p(%CTVQU0d(2),"||"),%CTVQU0d(3)=$p(%CTVQU0d(2),"||",2)
 i %CTVQU0d(8)'="",%CTVQU0d(3)'="",$d(^TTAB("VQ",%CTVQU0d(8),"USER",%CTVQU0d(3)))
 e  g %0ACdun
 s %CTVQU0d(27)=$g(^TTAB("VQ",%CTVQU0d(8),"USER",%CTVQU0d(3)))
 s %CTVQU0d(4)=$p(%CTVQU0d(27),"\",1) s %CTVQU0d(5)=$p(%CTVQU0d(27),"\",2)
 s %CTVQU0d(1)=$p(%CTVQU0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTVQU0d(9)=%CTVQU0d(9)+1,%ROWCOUNT=%CTVQU0d(9),%ROWID=%CTVQU0d(2),%CTVQU0c=10 q
%CTVQU0f i '$g(%CTVQU0c) { s SQLCODE=-102 q  } i %CTVQU0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTVQU0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTVQU0d(9),%CTVQU0c=100 q  } g %0Afirst:%CTVQU0c=1
%0ACdun i $zu(115,2)=1,$g(%CTVQU0d(10))=1 { l -@%CTVQU0d(11) s %CTVQU0d(10)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTVQU0d(9),SQLCODE=100,%CTVQU0c=100 q
%CTVQU0c i '$g(%CTVQU0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTVQU0d(9)),1:0)
 i $zu(115,2)=1,$g(%CTVQU0d(10))=1 { l -@%CTVQU0d(11) } k %CTVQU0c,%CTVQU0d,%CTVQU0E,%CTVQU0l,%CTVQU0n,%CTVQU0R,%CTVQU0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTVQU0c=100 q
%CTVQU10o s $zt="%CTVQU10E" s SQLCODE=$s($g(%CTVQU10c):-101,1:0) q:SQLCODE'=0  s %CTVQU10d(9)=0 s %CTVQU10d(10)=0,%CTVQU10d(11)=""
 s %CTVQU10d(6)=$g(user)
 s %CTVQU10c=1 q
%CTVQU10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTVQU10c,%CTVQU10d,%CTVQU10E,%CTVQU10l,%CTVQU10n,%CTVQU10R,%CTVQU10Z q
%0Cfirst 
 ; asl MOD# 2
 s %CTVQU10d(3)=%CTVQU10d(6)
 i %CTVQU10d(3)="" g %0CBdun
 s %CTVQU10d(1)=""
%0CBk1 s %CTVQU10d(1)=$o(^SSU("SSUSR",1,%CTVQU10d(3),"VQ",%CTVQU10d(1)))
 i %CTVQU10d(1)="" g %0CBdun
 s %CTVQU10d(21)=$g(^SSU("SSUSR",1,%CTVQU10d(3),"VQ",%CTVQU10d(1)))
 s %CTVQU10d(4)=$p(%CTVQU10d(21),"^",1) s %CTVQU10d(5)=$p(%CTVQU10d(21),"^",2)
 s %CTVQU10d(2)=(%CTVQU10d(1))_"||"_(%CTVQU10d(3))
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("VQ",$p(%CTVQU10d(2),"||",1),"USER",$p(%CTVQU10d(2),"||",2))#"S":$zu(115,4) i $t { s %CTVQU10d(10)=1,%CTVQU10d(11)=$name(^TTAB("VQ",$p(%CTVQU10d(2),"||",1),"USER",$p(%CTVQU10d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_VerificationQueue_User for RowID value: "_%CTVQU10d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTVQU10d(8)=$p(%CTVQU10d(2),"||"),%CTVQU10d(3)=$p(%CTVQU10d(2),"||",2)
 i %CTVQU10d(8)'="",%CTVQU10d(3)'="",$d(^TTAB("VQ",%CTVQU10d(8),"USER",%CTVQU10d(3)))
 e  g %0CCdun
 s %CTVQU10d(29)=$g(^TTAB("VQ",%CTVQU10d(8),"USER",%CTVQU10d(3)))
 s %CTVQU10d(4)=$p(%CTVQU10d(29),"\",1) s %CTVQU10d(5)=$p(%CTVQU10d(29),"\",2)
 s %CTVQU10d(1)=$p(%CTVQU10d(2),"||")
%0CBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTVQU10d(9)=%CTVQU10d(9)+1,%ROWCOUNT=%CTVQU10d(9),%ROWID=%CTVQU10d(2),%CTVQU10c=10 q
%CTVQU10f i '$g(%CTVQU10c) { s SQLCODE=-102 q  } i %CTVQU10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%CTVQU10d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTVQU10d(9),%CTVQU10c=100 q  } g %0Cfirst:%CTVQU10c=1
%0CCdun i $zu(115,2)=1,$g(%CTVQU10d(10))=1 { l -@%CTVQU10d(11) s %CTVQU10d(10)=0 }
 g %0CBk1
%0CBdun 
%0CAdun 
 s %ROWCOUNT=%CTVQU10d(9),SQLCODE=100,%CTVQU10c=100 q
%CTVQU10c i '$g(%CTVQU10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTVQU10d(9)),1:0)
 i $zu(115,2)=1,$g(%CTVQU10d(10))=1 { l -@%CTVQU10d(11) } k %CTVQU10c,%CTVQU10d,%CTVQU10E,%CTVQU10l,%CTVQU10n,%CTVQU10R,%CTVQU10Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTVQU10c=100 q
%0Eo n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTVerificationQueueUser.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("VQ",%mmmsqld(4),"USER",%mmmsqld(5)))
 e  g %0GBdun
 s %mmmsqld(15)=$$%getlock^User.CTVerificationQueueUser.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("VQ",%mmmsqld(4),"USER",%mmmsqld(5)))
 e  g %0GCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTVerificationQueueUser.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTVerificationQueueUser.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTVerificationQueueUser.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTVerificationQueueUser.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("VQ",%mmmsqld(3),"USER",%mmmsqld(4)))
 e  g %0IBdun
 s %mmmsqld(14)=$$%getlock^User.CTVerificationQueueUser.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("VQ",%mmmsqld(3),"USER",%mmmsqld(4)))
 e  g %0ICdun
 d %delete^User.CTVerificationQueueUser.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTVerificationQueueUser.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTVerificationQueueUser.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTVerificationQueueUser.T1(%mmmsqld(1)) g %0Ic
%0Mo d %CTVQU0f q:SQLCODE'=0
 s PLIST(0)=%CTVQU0d(1),PLIST(1)=%CTVQU0d(2),PLIST(2)=%CTVQU0d(3),PLIST(3)=%CTVQU0d(4),PLIST(4)=%CTVQU0d(5)
 q
%0No d %CTVQU10f q:SQLCODE'=0
 s PLIST(0)=%CTVQU10d(1),PLIST(1)=%CTVQU10d(2),PLIST(2)=%CTVQU10d(3),PLIST(3)=%CTVQU10d(4),PLIST(4)=%CTVQU10d(5)
 q
%0Po n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Perr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(7)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(9)'="",PLIST(2)'="",$d(^TTAB("VQ",%mmmsqld(9),"USER",PLIST(2)))
 e  g %0PBdun
 s %mmmsqld(19)=$g(^TTAB("VQ",%mmmsqld(9),"USER",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(19),"\",1) s PLIST(4)=$p(%mmmsqld(19),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0PBuncommitted i $zu(115,2)=1 l +^TTAB("VQ",$p(PLIST(1),"||",1),"USER",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("VQ",$p(PLIST(1),"||",1),"USER",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_VerificationQueue_User for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(9)'="",PLIST(2)'="",$d(^TTAB("VQ",%mmmsqld(9),"USER",PLIST(2)))
 e  g %0PCdun
 s %mmmsqld(27)=$g(^TTAB("VQ",%mmmsqld(9),"USER",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(27),"\",1) s PLIST(4)=$p(%mmmsqld(27),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
%0PBuncommitted ;
 s SQLCODE=0 g %0Pc
%0PCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0PBdun 
%0PAdun 
%0Pc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Perr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Pc
]]></Routine>
</Export>
