<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBQCML" type="INT" languagemode="0" generated="1"><![CDATA[
LVBQCML ; ML 14/6/2000 ; MVB Control code access for QC_MaterialLot
 ;
 ; supported calls:
 ;
 ; $$insert^LVBQCML(par)
 ; $$check^LVBQCML(ROWID)
 ; $$update^LVBQCML(ROWID)
 ; $$delete^LVBQCML(ROWID,Comments)
 ; $$open^LVBQCML(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBQCML(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBQCML(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBQCML(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBQCML()
 ; $$select^LVBQCML(ROWID)
 ; $$getall^LVBQCML(par)
 ; $$copy^LVBQCML(material,lotfrom,lot)
 ;
  ;---&SQL(DECLARE QCML CURSOR FOR SELECT * FROM QC_MaterialLot
   ;---         WHERE QCML_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ; 1-Expiry date
 ; 2-Extended days
 ; 3-Margin to expiry
check(ROWID) s ROWID=$g(ROWID) k ^TMP($zn,$j)
 i $$open^LVBQCMLL(ROWID)
 f  q:$$fetch^LVBQCMLL(ROWID)  s ^TMP($zn,$j,PLIST(2))="" i $l(PLIST(4)) s ^TMP($zn,$j,PLIST(2))=PLIST(4)_$c(2)_PLIST(5)_$c(2)_$g(PLIST(7))
 i $$close^LVBQCMLL()
 i '$$select(ROWID) f j=1:1:3 i $d(^TMP($zn,$j,j)),'$l(^TMP($zn,$j,j)) s ^TMP($zn,$j,j)=PLIST(5)_$c(2)_PLIST(6)_$c(2)_$g(PLIST(11))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q 0
 ; insert the data
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&SQL(insert INTO QC_MaterialLot VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE d  q $$select(%ROWID)
 .i $p(PLIST(9),$c(1))="Y" d
 ..s par=$p(%ROWID,"||")
 ..s x="" f  s x=$o(^TTQC(par,"LOT",x)) q:x=""  i x'=$p(%ROWID,"||",2) s $p(^(x),"\",6)="N"
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE QC_MaterialLot VALUES :PLIST() WHERE QCML_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 i 'SQLCODE d  q $$select(%ROWID)
 .i $p(PLIST(9),$c(1))="Y" d
 ..s par=$p(%ROWID,"||")
 ..s x="" f  s x=$o(^TTQC(par,"LOT",x)) q:x=""  i x'=$p(%ROWID,"||",2) s $p(^(x),"\",6)="N"
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM QC_MaterialLot WHERE QCML_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN QCML)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCML0o
 q 0
 ; fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH QCML INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE QCML) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCML0c 
 q 0
 ; select data by code
select(ROWID) k PLIST s ROWID=$g(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM QC_MaterialLot WHERE QCML_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("8","")
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("8")
 q
getall(par) n (PLIST,par) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; copy lot number across materials
copy(material,lotfrom,lot) n (material,lotfrom,lot)
 s material=$g(material),lotfrom=$g(lotfrom),lot=$g(lot)
 s type="" f  s type=$o(^TTQC(material,"LOT",lotfrom,"TYPE",type)) q:type=""  d
 .s wsmach="" f  s wsmach=$o(^TTQC(material,"LOT",lotfrom,"TYPE",type,wsmach)) q:wsmach=""  d
 ..s PLIST(0)=material_"||"_lot,PLIST(2)=type,PLIST(3)=wsmach q:$$insert^LVBQCMLT(PLIST(0))
 ..s tc="" f  s tc=$o(^TTQC(material,"LOT",lotfrom,"TYPE",type,wsmach,"TEST",tc)) q:tc=""  s x=^(tc) d
 ...s PLIST(0)=material_"||"_lot_"||"_type_"||"_wsmach,PLIST(2)=tc,PLIST(3)=$p(x,"\",1),PLIST(4)=$p(x,"\",2) q:$$insert^LVBQCMTT(PLIST(0))
 ...s lev="" f  s lev=$o(^TTQC(material,"LOT",lotfrom,"TYPE",type,wsmach,"TEST",tc,"DATA",lev)) q:lev=""  s x=^(lev) d
 ....i '$d(^TTQC(material,"LOT",lot,"TYPE",type,wsmach,"TEST",tc,"DATA",lev)) q
 ....s PLIST(0)=material_"||"_lot_"||"_type_"||"_wsmach_"||"_tc,PLIST(1)=material_"||"_lot_"||"_type_"||"_wsmach_"||"_tc_"||"_lev
 ....s PLIST(2)=lev,PLIST(3)=$p(x,"\",1),PLIST(4)=$p(x,"\",2),PLIST(7)=$p(x,"\",5) i $$update^LVBQCMTL(PLIST(1))
 q 0
%QCML0o s $zt="%QCML0E" s SQLCODE=$s($g(%QCML0c):-101,1:0) q:SQLCODE'=0  s %QCML0d(16)=0 s %QCML0d(17)=0,%QCML0d(18)=""
 s %QCML0d(13)=$g(par)
 s %QCML0c=1 q
%QCML0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %QCML0c,%QCML0d,%QCML0E,%QCML0l,%QCML0n,%QCML0R,%QCML0Z q
%0Afirst 
 ; asl MOD# 2
 s %QCML0d(1)=%QCML0d(13)
 i %QCML0d(1)="" g %0ABdun
 s %QCML0d(3)=""
%0ABk1 s %QCML0d(3)=$o(^TTQC(%QCML0d(1),"LOT",%QCML0d(3)))
 i %QCML0d(3)="" g %0ABdun
 s %QCML0d(24)=$g(^TTQC(%QCML0d(1),"LOT",%QCML0d(3)))
 s %QCML0d(4)=$p(%QCML0d(24),"\",1) s %QCML0d(5)=$p(%QCML0d(24),"\",2) s %QCML0d(6)=$p(%QCML0d(24),"\",3) s %QCML0d(7)=$p(%QCML0d(24),"\",4) s %QCML0d(8)=$p(%QCML0d(24),"\",5) s %QCML0d(10)=$p(%QCML0d(24),"\",6) s %QCML0d(11)=$p(%QCML0d(24),"\",7) s %QCML0d(12)=$p(%QCML0d(24),"\",8)
 s %QCML0d(9)="" f %irep=1:1:$g(^TTQC(%QCML0d(1),"LOT",%QCML0d(3),"REM",0)) s $li(%QCML0d(9),%irep)=$g(^(%irep))
 s %QCML0d(2)=(%QCML0d(1))_"||"_(%QCML0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTQC($p(%QCML0d(2),"||",1),"LOT",$p(%QCML0d(2),"||",2))#"S":$zu(115,4) i $t { s %QCML0d(17)=1,%QCML0d(18)=$name(^TTQC($p(%QCML0d(2),"||",1),"LOT",$p(%QCML0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MaterialLot for RowID value: "_%QCML0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %QCML0d(15)=$p(%QCML0d(2),"||"),%QCML0d(3)=$p(%QCML0d(2),"||",2)
 i %QCML0d(15)'="",%QCML0d(3)'="",$d(^TTQC(%QCML0d(15),"LOT",%QCML0d(3)))
 e  g %0ACdun
 s %QCML0d(30)=$g(^TTQC(%QCML0d(15),"LOT",%QCML0d(3)))
 s %QCML0d(4)=$p(%QCML0d(30),"\",1) s %QCML0d(5)=$p(%QCML0d(30),"\",2) s %QCML0d(6)=$p(%QCML0d(30),"\",3) s %QCML0d(7)=$p(%QCML0d(30),"\",4) s %QCML0d(8)=$p(%QCML0d(30),"\",5) s %QCML0d(10)=$p(%QCML0d(30),"\",6) s %QCML0d(11)=$p(%QCML0d(30),"\",7) s %QCML0d(12)=$p(%QCML0d(30),"\",8)
 s %QCML0d(9)="" f %irep=1:1:$g(^TTQC(%QCML0d(15),"LOT",%QCML0d(3),"REM",0)) s $li(%QCML0d(9),%irep)=$g(^(%irep))
 s %QCML0d(1)=$p(%QCML0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %QCML0d(16)=%QCML0d(16)+1,%ROWCOUNT=%QCML0d(16),%ROWID=%QCML0d(2),%QCML0c=10 q
%QCML0f i '$g(%QCML0c) { s SQLCODE=-102 q  } i %QCML0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%QCML0d(16))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%QCML0d(16),%QCML0c=100 q  } g %0Afirst:%QCML0c=1
%0ACdun i $zu(115,2)=1,$g(%QCML0d(17))=1 { l -@%QCML0d(18) s %QCML0d(17)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%QCML0d(16),SQLCODE=100,%QCML0c=100 q
%QCML0c i '$g(%QCML0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%QCML0d(16)),1:0)
 i $zu(115,2)=1,$g(%QCML0d(17))=1 { l -@%QCML0d(18) } k %QCML0c,%QCML0d,%QCML0E,%QCML0l,%QCML0n,%QCML0R,%QCML0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %QCML0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:11 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.QCMaterialLot.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(13)=$$%getlock^User.QCMaterialLot.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5)))
 e  g %0ECdun
 k %data
 f icol=0:1:11 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.QCMaterialLot.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.QCMaterialLot.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.QCMaterialLot.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.QCMaterialLot.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(12)=$$%getlock^User.QCMaterialLot.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.QCMaterialLot.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.QCMaterialLot.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.QCMaterialLot.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.QCMaterialLot.T1(%mmmsqld(1)) g %0Gc
%0Jo d %QCML0f q:SQLCODE'=0
 s PLIST(0)=%QCML0d(1),PLIST(1)=%QCML0d(2),PLIST(2)=%QCML0d(3),PLIST(3)=%QCML0d(4),PLIST(4)=%QCML0d(5),PLIST(5)=%QCML0d(6),PLIST(6)=%QCML0d(7),PLIST(7)=%QCML0d(8),PLIST(8)=%QCML0d(9),PLIST(9)=%QCML0d(10),PLIST(10)=%QCML0d(11),PLIST(11)=%QCML0d(12)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(17)=0,%mmmsqld(18)=""
 s %mmmsqld(14)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(14)
 s %mmmsqld(16)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(16)'="",PLIST(2)'="",$d(^TTQC(%mmmsqld(16),"LOT",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(24)=$g(^TTQC(%mmmsqld(16),"LOT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(24),"\",1) s PLIST(4)=$p(%mmmsqld(24),"\",2) s PLIST(5)=$p(%mmmsqld(24),"\",3) s PLIST(6)=$p(%mmmsqld(24),"\",4) s PLIST(7)=$p(%mmmsqld(24),"\",5) s PLIST(9)=$p(%mmmsqld(24),"\",6) s PLIST(10)=$p(%mmmsqld(24),"\",7) s PLIST(11)=$p(%mmmsqld(24),"\",8)
 s PLIST(8)="" f %irep=1:1:$g(^TTQC(%mmmsqld(16),"LOT",PLIST(2),"REM",0)) s $li(PLIST(8),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(17)=1,%mmmsqld(18)=$name(^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MaterialLot for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(16)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(16)'="",PLIST(2)'="",$d(^TTQC(%mmmsqld(16),"LOT",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(30)=$g(^TTQC(%mmmsqld(16),"LOT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(30),"\",1) s PLIST(4)=$p(%mmmsqld(30),"\",2) s PLIST(5)=$p(%mmmsqld(30),"\",3) s PLIST(6)=$p(%mmmsqld(30),"\",4) s PLIST(7)=$p(%mmmsqld(30),"\",5) s PLIST(9)=$p(%mmmsqld(30),"\",6) s PLIST(10)=$p(%mmmsqld(30),"\",7) s PLIST(11)=$p(%mmmsqld(30),"\",8)
 s PLIST(8)="" f %irep=1:1:$g(^TTQC(%mmmsqld(16),"LOT",PLIST(2),"REM",0)) s $li(PLIST(8),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||")
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) s %mmmsqld(17)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
