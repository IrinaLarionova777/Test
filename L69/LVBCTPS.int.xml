<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTPS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTPS ; IG 30/4/98 ;MVB Control code access for CT_PrintStationery
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTPS(ROWID,skip)
 ; $$open^LVBCTPS(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTPS(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTPS(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTPS(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTPS()
 ; $$insert^LVBCTPS()
 ; $$update^LVBCTPS(ROWID)
 ; $$delete^LVBCTPS(ROWID,Comments)
 ;
  ;---&SQL(DECLARE CTPS CURSOR FOR SELECT * FROM CT_PrintStationery)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_PrintStationery VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CT_PrintStationery VALUES :PLIST() WHERE CTPS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_PrintStationery WHERE CTPS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)  ;---s skip=$g(skip) &SQL(OPEN CTPS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 s skip=$g(skip) Do %CTPS0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s skip=$g(skip)
  ;---&SQL(FETCH CTPS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j) s skip=$g(skip)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (skip,PLIST) s skip=$g(skip) K ^TMP($zn,$j)
 i $$open(skip)
 f cnt=1:1 Q:$$fetch(skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTPS) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTPS0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST S ROWID=$G(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_PrintStationery WHERE CTPS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
 ;
getall() N (PLIST) K ^TMP($ZN,$J)
 I $$open("Y")
 F cnt=1:1 Q:$$fetch("Y")  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%CTPS0o s $zt="%CTPS0E" s SQLCODE=$s($g(%CTPS0c):-101,1:0) q:SQLCODE'=0  s %CTPS0d(5)=0 s %CTPS0d(6)=0,%CTPS0d(7)=""
 s %CTPS0c=1 q
%CTPS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTPS0c,%CTPS0d,%CTPS0E,%CTPS0l,%CTPS0n,%CTPS0R,%CTPS0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTPS0d(1)=""
%0ABk1 s %CTPS0d(1)=$o(^TTAB("PRINT","STAT",%CTPS0d(1)))
 i %CTPS0d(1)="" g %0ABdun
 s %CTPS0d(14)=$g(^TTAB("PRINT","STAT",%CTPS0d(1)))
 s %CTPS0d(2)=$p(%CTPS0d(14),"\",1) s %CTPS0d(3)=$p(%CTPS0d(14),"\",2)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("PRINT","STAT",$p(%CTPS0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTPS0d(6)=1,%CTPS0d(7)=$name(^TTAB("PRINT","STAT",$p(%CTPS0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintStationery for RowID value: "_%CTPS0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 i %CTPS0d(1)'="",$d(^TTAB("PRINT","STAT",%CTPS0d(1)))
 e  g %0ACdun
 s %CTPS0d(21)=$g(^TTAB("PRINT","STAT",%CTPS0d(1)))
 s %CTPS0d(2)=$p(%CTPS0d(21),"\",1) s %CTPS0d(3)=$p(%CTPS0d(21),"\",2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTPS0d(5)=%CTPS0d(5)+1,%ROWCOUNT=%CTPS0d(5),%ROWID=%CTPS0d(1),%CTPS0c=10 q
%CTPS0f i '$g(%CTPS0c) { s SQLCODE=-102 q  } i %CTPS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTPS0d(5))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTPS0d(5),%CTPS0c=100 q  } g %0Afirst:%CTPS0c=1
%0ACdun i $zu(115,2)=1,$g(%CTPS0d(6))=1 { l -@%CTPS0d(7) s %CTPS0d(6)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTPS0d(5),SQLCODE=100,%CTPS0c=100 q
%CTPS0c i '$g(%CTPS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTPS0d(5)),1:0)
 i $zu(115,2)=1,$g(%CTPS0d(6))=1 { l -@%CTPS0d(7) } k %CTPS0c,%CTPS0d,%CTPS0E,%CTPS0l,%CTPS0n,%CTPS0R,%CTPS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTPS0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTPrintStationery.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("PRINT","STAT",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(12)=$$%getlock^User.CTPrintStationery.T1(%mmmsqld(2)) i '%mmmsqld(12) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("PRINT","STAT",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTPrintStationery.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.CTPrintStationery.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.CTPrintStationery.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.CTPrintStationery.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("PRINT","STAT",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(11)=$$%getlock^User.CTPrintStationery.T1(%mmmsqld(1)) i '%mmmsqld(11) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("PRINT","STAT",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTPrintStationery.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(11)=1 %ReleaseLock^User.CTPrintStationery.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(11)=1 %ReleaseLock^User.CTPrintStationery.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(11))=1 %ReleaseLock^User.CTPrintStationery.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTPS0f q:SQLCODE'=0
 s PLIST(1)=%CTPS0d(1),PLIST(2)=%CTPS0d(1),PLIST(3)=%CTPS0d(2),PLIST(4)=%CTPS0d(3)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(5)
 i PLIST(2)'="",$d(^TTAB("PRINT","STAT",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(15)=$g(^TTAB("PRINT","STAT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(15),"\",1) s PLIST(4)=$p(%mmmsqld(15),"\",2)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("PRINT","STAT",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TTAB("PRINT","STAT",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintStationery for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("PRINT","STAT",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(22)=$g(^TTAB("PRINT","STAT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(22),"\",1) s PLIST(4)=$p(%mmmsqld(22),"\",2)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
