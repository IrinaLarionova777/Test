<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIS21" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIS21 ; IG 7/5/98 ; Visit routines
 ;
 ; supported calls :
 ;
 ; $$open^LVBVIS21(HospMRN,HospEpis,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVIS21(HospMRN,HospEpis,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVIS21(HospMRN,HospEpis,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBVIS21(HospMRN,HospEpis,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVIS21()
 ; $$DDS^LVBVIS21(HospMRN,HospEpis,mrn,df,dt,loc,epis,hospOnly,EDI)
 ;
DDS(HospMRN,HospEpis,mrn,df,dt,loc,epis,hospOnly,EDI) n (HospMRN,HospEpis,mrn,df,dt,loc,epis,hospOnly,EDI) k ^TMP($zn,$j)
 s HospMRN=$g(HospMRN),HospEpis=$g(HospEpis),mrn=$g(mrn),df=$g(df),dt=$g(dt),loc=$g(loc),epis=$g(epis),hospOnly=$g(hospOnly),EDI=$g(EDI)
 i $l(mrn) s (dh1,dh2,Master)="" d
 .s date="" f  s date=$o(^TDEB(mrn,date)) q:date=""  i date d
 ..i $l(df),date<df q
 ..i $l(dt),date>dt q
 ..s ep="" f  s ep=$o(^TDEB(mrn,date,0,ep)) q:ep=""  d
 ...i $l(epis),epis'=ep q
 ...i $l(loc),loc'=$p($g(^TEPI(ep)),"\",20) q
 ...i hospOnly="Y",'$l($p($g(^TEPI(ep)),"\",20)) q
 ...i '$l(Master) s Master=ep
 ...i $l($p(^TEPI(ep),"\",20)) s dh1="H",dh2=$p(^TEPI(ep),"\",20)
 .i $l(dh2) d
 ..s date="" f  s date=$o(^TDEB(mrn,date)) q:date=""  i date d
 ...i $l(df),date<df q
 ...i $l(dt),date>dt q
 ...s ep="" f  s ep=$o(^TDEB(mrn,date,0,ep)) q:ep=""  d
 ....i $l(epis),epis'=ep q
 ....i $l(loc),loc'=$p($g(^TEPI(ep)),"\",20) q
 ....i hospOnly="Y",'$l($p($g(^TEPI(ep)),"\",20)) q
 ....i '$$select^LVBEPVIS(ep,"Y"),'$l(PLIST(165)) s PLIST(165)=+$h i $$update^LVBEPVIS(ep)
 ....s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  d
 .....s tscnt="" f  s tscnt=$o(^TEPI(ep,1,ts,tscnt)) q:tscnt=""  d
 ......i $$status^LVBVIS1(ep_"||"_ts_"||"_tscnt)="A",$$printable^LVBCTTS(ts,ep_"||"_ts_"||"_tscnt) d
 .......i EDI'="Y" s ^TRPT("D",Master,dh1,dh2,ep,ts,tscnt)="",^TMP($zn,$j,ep)=""
 .......i EDI="Y" d OUT^LVBEDI00(ep,46,ep_"||"_ts_"||"_tscnt,1,ep_"||"_ts_"||"_tscnt,"Print")
 i $l(HospMRN),$l(HospEpis) s (dh1,dh2,Master)="" d
 .s ep="" f  s ep=$o(^TIND(5,HospMRN,HospEpis,ep)) q:ep=""  d
 ..i $l(epis),epis'=ep q
 ..i '$l(Master) s Master=ep
 ..i $l($p(^TEPI(ep),"\",20)) s dh1="H",dh2=$p(^TEPI(ep),"\",20)
 .i $l(dh2) d
 ..s ep="" f  s ep=$o(^TIND(5,HospMRN,HospEpis,ep)) q:ep=""  d
 ...i $l(epis),epis'=ep q
 ...i '$$select^LVBEPVIS(ep,"Y"),'$l(PLIST(165)) s PLIST(165)=+$h i $$update^LVBEPVIS(ep)
 ...s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  d
 ....s tscnt="" f  s tscnt=$o(^TEPI(ep,1,ts,tscnt)) q:tscnt=""  d
 .....i $$status^LVBVIS1(ep_"||"_ts_"||"_tscnt)="A",$$printable^LVBCTTS(ts,ep_"||"_ts_"||"_tscnt) d
 ......i EDI'="Y" s ^TRPT("D",Master,dh1,dh2,ep,ts,tscnt)="",^TMP($zn,$j,ep)=""
 ......i EDI="Y" d OUT^LVBEDI00(ep,46,ep_"||"_ts_"||"_tscnt,1,ep_"||"_ts_"||"_tscnt,"Print")
 ..s ^TIND(5,HospMRN,HospEpis)=$tr($h,",","\")
 s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1) i $l(%routine) s LineRoutine="DDS^"_%routine i $l($t(@LineRoutine)) x "d DDS^"_%routine
 k ^TMP($zn,$j)
 q 0
 ; PLIST : 1 - HospMRN
 ;         2 - HospEpis
 ;         3 - Patient name
 ;         4 - Patient Location
 ;         5 - Date/Time printed
open(HospMRN,HospEpis,mrn,from,to,loc,p6,p7,p8,p9) n (HospMRN,HospEpis,mrn,from,to,loc) k ^TMP($zn,$j,"xxx"),^TMP($zn,$j,"open")
 s HospMRN=$g(HospMRN),HospEpis=$g(HospEpis),mrn=$g(mrn),from=$g(from),to=$g(to),loc=$g(loc)
 d:$l(HospMRN)  i '$l(HospMRN) f  s HospMRN=$o(^TIND(5,HospMRN)) q:HospMRN=""  d
 .s x="" f  s x=$o(^TIND(5,HospMRN,x)) q:x=""  d
 ..i $l(HospEpis),HospEpis'=x q
 ..s ep="" f  s ep=$o(^TIND(5,HospMRN,x,ep),-1) q:ep=""  i $d(^TEPI(ep,1)) q
 ..i $l(ep) d
 ...i $l(mrn),mrn'=$$seldata^LVBEPVIS(ep,20) q
 ...i $l(loc),loc'=$$seldata^LVBEPVIS(ep,22) q
 ...i $l(from),$$seldata^LVBEPVIS(ep,12)<from q
 ...i $l(to),$$seldata^LVBEPVIS(ep,12)>to q
 ...s dt=$tr($g(^TIND(5,HospMRN,x)),"\",".") i '$l(dt) s dt=" "
 ...i dt["." s $p(dt,".",2)=$e($p(dt,".",2)+100000,2,6)
 ...s ^TMP($zn,$j,"xxx",dt,HospMRN,x)=""
 s x1="" f  s x1=$o(^TMP($zn,$j,"xxx",x1),-1) q:x1=""  d
 .s x2="" f  s x2=$o(^TMP($zn,$j,"xxx",x1,x2)) q:x2=""  d
 ..s x3="" f  s x3=$o(^TMP($zn,$j,"xxx",x1,x2,x3)) q:x3=""  d
 ...s xx=$o(^TMP($zn,$j,"open",""),-1)+1
 ...s ^TMP($zn,$j,"open",xx)=x1_"\"_x2_"\"_x3
 k ^TMP($zn,$j,"xxx")
 q 0
fetch(HospMRN,HospEpis,mrn,from,to,loc,p6,p7,p8,p9) n (HospMRN,HospEpis,PLIST) s SQLCODE=100 k PLIST
 s HospMRN=$g(HospMRN),HospEpis=$g(HospEpis),mrn=$g(mrn),from=$g(from),to=$g(to),loc=$g(loc)
 s line=$g(^TMP($zn,$j,"open")),line=$o(^TMP($zn,$j,"open",line)) i line d
 .s ^TMP($zn,$j,"open")=line
 .s PLIST(1)=$p(^TMP($zn,$j,"open",line),"\",2)
 .s PLIST(2)=$p(^TMP($zn,$j,"open",line),"\",3)
 .s PLIST(5)=$p(^TMP($zn,$j,"open",line),"\",1)
 .s (PLIST(4),ep)="" f  s ep=$o(^TIND(5,PLIST(1),PLIST(2),ep),-1) q:ep=""  i '$l(PLIST(4)) s PLIST(4)=$p(^TEPI(ep),"\",20)
 .s ep=$o(^TIND(5,PLIST(1),PLIST(2),""),-1) i $l(ep) d
 ..f j=1:1:6 s @("x"_j)=""
 ..  ;---&sql(SELECT EPVIS_Title_DR->CTTL_Desc,EPVIS_GivenName,EPVIS_Surname,EPVIS_Name_1,EPVIS_Name_2,EPVIS_Name_3 INTO :x1,:x2,:x3,:x4,:x5,:x6 FROM EP_VisitNumber WHERE EPVIS_RowID=:ep)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, ep, x1, x2, x3, x4, x5, x6
 .. Do %0Ao
 ..f j=1:1:6 s @("x"_j)=$p(@("x"_j),$c(1))
 ..s PLIST(3)=$$NameFormat^LVBCOM03("PT",x1,x2,x3,x4,x5,x6)
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(HospMRN,HospEpis,mrn,from,to,loc,p6,p7,p8,p9) k ^TMP($zn,$j,1)
 s HospMRN=$g(HospMRN),HospEpis=$g(HospEpis),mrn=$g(mrn),from=$g(from),to=$g(to),loc=$g(loc)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(HospMRN,HospEpis,mrn,from,to,loc) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(HospMRN,HospEpis,mrn,from,to,loc,p6,p7,p8,p9) n (HospMRN,HospEpis,mrn,from,to,loc,PLIST) k ^TMP($zn,$j,1)
 s HospMRN=$g(HospMRN),HospEpis=$g(HospEpis),mrn=$g(mrn),from=$g(from),to=$g(to),loc=$g(loc)
 i $$open(HospMRN,HospEpis,mrn,from,to,loc)
 f cnt=1:1 q:$$fetch(HospMRN,HospEpis,mrn,from,to,loc)  s ^TMP($zn,$j,1,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,1)
 q 0
close() k ^TMP($zn,$j,"open")
 q 0
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 I $g(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTHOS(plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(18)=0,%mmmsqld(19)="",%mmmsqld(20)=0,%mmmsqld(21)=""
 s %mmmsqld(16)=$g(ep)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(15)=%mmmsqld(16)
 i %mmmsqld(15)'="",$d(^TEPI(%mmmsqld(15)))
 e  g %0ABdun
 s %mmmsqld(24)=$g(^TEPI(%mmmsqld(15),0))
 s x4=$p(%mmmsqld(24),"\",23) s x5=$p(%mmmsqld(24),"\",24) s x6=$p(%mmmsqld(24),"\",25)
 s %mmmsqld(24)=$g(^TEPI(%mmmsqld(15)))
 s %mmmsqld(1)=$p(%mmmsqld(24),"\",5) s x2=$p(%mmmsqld(24),"\",2) s x3=$p(%mmmsqld(24),"\",1)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(15),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TEPI($p(%mmmsqld(15),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(15) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(15)'="",$d(^TEPI(%mmmsqld(15)))
 e  g %0ACdun
 s %mmmsqld(27)=$g(^TEPI(%mmmsqld(15),0))
 s x4=$p(%mmmsqld(27),"\",23) s x5=$p(%mmmsqld(27),"\",24) s x6=$p(%mmmsqld(27),"\",25)
 s %mmmsqld(27)=$g(^TEPI(%mmmsqld(15)))
 s %mmmsqld(1)=$p(%mmmsqld(27),"\",5) s x2=$p(%mmmsqld(27),"\",2) s x3=$p(%mmmsqld(27),"\",1)
%0ABuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("TTL",%mmmsqld(2)))
 e  s x1="",%mmmsqld(2)="" g %0ACp4
 s %mmmsqld(32)=$g(^TTAB("TTL",%mmmsqld(2)))
 s x1=$p(%mmmsqld(32),"\",1)
%0ACp4 
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("TTL",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^TTAB("TTL",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Title for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("TTL",%mmmsqld(2)))
 e  s x1="",%mmmsqld(2)="" g %0ADp1
 s %mmmsqld(37)=$g(^TTAB("TTL",%mmmsqld(2)))
 s x1=$p(%mmmsqld(37),"\",1)
%0ADp1 
%0ACuncommitted ;
 s SQLCODE=0 g %0Ac
%0ADdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
]]></Routine>
</Export>
