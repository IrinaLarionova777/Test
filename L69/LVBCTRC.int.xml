<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTRC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTRC ; IG 30/4/98 ;MVB Control code access for CT_NumericCodedResults
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTRC(ROWID,skip,lan)
 ; $$open^LVBCTRC(code,skip,lan,active,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTRC(code,skip,lan,active,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTRC(code,skip,lan,active,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTRC(code,skip,lan,active,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTRC()
 ; $$insert^LVBCTRC()
 ; $$update^LVBCTRC()
 ; $$delete^LVBCTRC(ROWID,Comments)
 ; $$getall^LVBCTRC(active)
 ;
  ;---&SQL(DECLARE CTRC CURSOR FOR SELECT * FROM CT_NumericCodedResults
   ;--- 		WHERE ((CTRC_Code %STARTSWITH :code) OR (:code IS NULL))
   ;---        AND ((CTRC_ActiveFlag = :active) OR (:active IS NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, active, code
FIX s a="" f  s a=$o(^TTAB("RC",a)) q:a=""  i '$$select(a,"Y") s err=$$update(a) i err w !,a," ",err
 q
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_NumericCodedResults VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CT_NumericCodedResults VALUES :PLIST() WHERE CTRC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_NumericCodedResults WHERE CTRC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; Open the cursor
open(code,skip,lan,active,p4,p5,p6,p7,p8,p9) s code=$g(code),skip=$g(skip),lan=$g(lan),active=$g(active)
  ;---&SQL(OPEN CTRC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTRC0o
 q 0
 ; Fetch the data
fetch(code,skip,lan,active,p4,p5,p6,p7,p8,p9) K PLIST s code=$g(code),skip=$g(skip),lan=$g(lan),active=$g(active)
  ;---&SQL(FETCH CTRC INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE,$l(lan) q $$select(PLIST(2),skip,lan)
 i 'SQLCODE d adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(code,skip,lan,active,p4,p5,p6,p7,p8,p9) s code=$g(code),skip=$g(skip),lan=$g(lan),active=$g(active) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(code,skip,lan,active) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(code,skip,lan,active,p4,p5,p6,p7,p8,p9) N (code,skip,lan,active,PLIST) s code=$g(code),skip=$g(skip),lan=$g(lan),active=$g(active) K ^TMP($zn,$j)
 i $$open(code,skip,lan,active)
 f cnt=1:1 Q:$$fetch(code,skip,lan,active)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTRC) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTRC0c 
 q 0
 ; select data by code
select(ROWID,skip,lan) K PLIST S ROWID=$G(ROWID),skip=$g(skip),lan=$g(lan),SQLCODE=100
 i SQLCODE,$l(lan) d
 .s ROWID=ROWID_"||"_lan
 .  ;---&SQL(SELECT * INTO :PLIST() FROM CT_NumericCodedResTransl WHERE CTRCA_RowID=:ROWID)
  .  ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 . Do %0Lo
 .s (PLIST(1),PLIST(2))=$p(ROWID,"||",1)
 i SQLCODE d
 .s ROWID=$p(ROWID,"||")
 .  ;---&SQL(SELECT * INTO :PLIST() FROM CT_NumericCodedResults WHERE CTRC_RowID=:ROWID)
  .  ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 . Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$UPPER^SSUTIL4(PLIST(2))
 i $g(PLIST(4))'="N" s PLIST(4)="Y"
 q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(26))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTAC(plist(26),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(26)=X K plist
 ;
 Q
 ;
getall(active) N (active,PLIST) K ^TMP($ZN,$J)
 I $$open(,"Y",,active)
 F cnt=1:1 Q:$$fetch(,"Y",,active)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%CTRC0o s $zt="%CTRC0E" s SQLCODE=$s($g(%CTRC0c):-101,1:0) q:SQLCODE'=0  s %CTRC0d(13)=0 s %CTRC0d(14)=0,%CTRC0d(15)=""
 s %CTRC0d(4)=$g(code),%CTRC0d(5)=$g(code),%CTRC0d(6)=$g(active),%CTRC0d(7)=$g(active)
 s %CTRC0d(10)=$zu(28,%CTRC0d(6),7)
 s %CTRC0c=1 q
%CTRC0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTRC0c,%CTRC0d,%CTRC0E,%CTRC0l,%CTRC0n,%CTRC0R,%CTRC0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTRC0d(1)=""
%0ABk1 s %CTRC0d(1)=$o(^TTAB("RC",%CTRC0d(1)))
 i %CTRC0d(1)="" g %0ABdun
 i '((($c(0)[%CTRC0d(4))||(%CTRC0d(4)=$c(32,0)&&($e(%CTRC0d(1))=$c(32)))||(%CTRC0d(4)=$e(%CTRC0d(1),1,$l(%CTRC0d(4)))))||(%CTRC0d(5)="")) g %0ABk1
 s %CTRC0d(20)=$g(^TTAB("RC",%CTRC0d(1)))
 s %CTRC0d(2)=$p(%CTRC0d(20),"\",1) s %CTRC0d(3)=$p(%CTRC0d(20),"\",2)
 s %CTRC0d(9)=$zu(28,%CTRC0d(3),7)
 g:'(((%CTRC0d(9)'=" ")&&(%CTRC0d(9)=%CTRC0d(10)))||(%CTRC0d(7)="")) %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("RC",$p(%CTRC0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTRC0d(14)=1,%CTRC0d(15)=$name(^TTAB("RC",$p(%CTRC0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_NumericCodedResults for RowID value: "_%CTRC0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTRC0d(11)=$lb(""_%CTRC0d(9))
 i %CTRC0d(1)'="",$d(^TTAB("RC",%CTRC0d(1)))
 e  g %0ACdun
 s %CTRC0d(25)=$g(^TTAB("RC",%CTRC0d(1)))
 s %CTRC0d(2)=$p(%CTRC0d(25),"\",1) s %CTRC0d(3)=$p(%CTRC0d(25),"\",2)
 s %CTRC0d(9)=$zu(28,%CTRC0d(3),7)
 s %CTRC0d(12)=$lb(""_%CTRC0d(9))
 g:%CTRC0d(11)'=%CTRC0d(12) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTRC0d(13)=%CTRC0d(13)+1,%ROWCOUNT=%CTRC0d(13),%ROWID=%CTRC0d(1),%CTRC0c=10 q
%CTRC0f i '$g(%CTRC0c) { s SQLCODE=-102 q  } i %CTRC0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTRC0d(13))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTRC0d(13),%CTRC0c=100 q  } g %0Afirst:%CTRC0c=1
%0ACdun i $zu(115,2)=1,$g(%CTRC0d(14))=1 { l -@%CTRC0d(15) s %CTRC0d(14)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTRC0d(13),SQLCODE=100,%CTRC0c=100 q
%CTRC0c i '$g(%CTRC0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTRC0d(13)),1:0)
 i $zu(115,2)=1,$g(%CTRC0d(14))=1 { l -@%CTRC0d(15) } k %CTRC0c,%CTRC0d,%CTRC0E,%CTRC0l,%CTRC0n,%CTRC0R,%CTRC0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTRC0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTNumericCodedResults.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("RC",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTNumericCodedResults.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("RC",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTNumericCodedResults.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTNumericCodedResults.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTNumericCodedResults.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTNumericCodedResults.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("RC",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTNumericCodedResults.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("RC",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTNumericCodedResults.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTNumericCodedResults.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTNumericCodedResults.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTNumericCodedResults.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTRC0f q:SQLCODE'=0
 s PLIST(1)=%CTRC0d(1),PLIST(2)=%CTRC0d(1),PLIST(3)=%CTRC0d(2),PLIST(4)=%CTRC0d(3)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(6)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0LBdun
 s PLIST(3)=$g(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("RC",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("RC",$p(PLIST(1),"||",1),"LAN",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_NumericCodedResTransl for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 e  g %0LCdun
 s PLIST(3)=$g(^TTAB("RC",%mmmsqld(8),"LAN",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||")
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(5)
 i PLIST(2)'="",$d(^TTAB("RC",PLIST(2)))
 e  g %0NBdun
 s %mmmsqld(13)=$g(^TTAB("RC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(13),"\",1) s PLIST(4)=$p(%mmmsqld(13),"\",2)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TTAB("RC",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TTAB("RC",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_NumericCodedResults for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("RC",PLIST(2)))
 e  g %0NCdun
 s %mmmsqld(18)=$g(^TTAB("RC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",1) s PLIST(4)=$p(%mmmsqld(18),"\",2)
%0NBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
]]></Routine>
</Export>
