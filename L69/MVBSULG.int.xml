<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSULG" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSULG ; SP 9/11/95 ; LVB Control data access for SS_User_Logs
 ;
 ; supported calls:
 ;
 ; $$insert^MVBSULG(par)
 ; $$select^MVBSULG(ROWID)
 ; $$open^MVBSULG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSULG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSULG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSULG(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSULG()
 ; $$getall^MVBSULG(par,Continue)
 ;
  ;---&sql(DECLARE SULG CURSOR FOR SELECT * FROM SS_User_Logs
   ;---         WHERE SULG_ParRef = :par
   ;---         ORDER BY SULG_Order Desc)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN SULG)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SULG0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH SULG INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE SULG)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SULG0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM SS_User_Logs WHERE SULG_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; select most recent entry in log
selrecent(ParRef) k PLIST s ParRef=$g(ParRef)
 s row=$o(^SSU("SSUSR",1,ParRef,"LOG",""),-1)
 s RowId=ParRef_"||"_row s SQLCODE=$$select(RowId)
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) d pre("N") K PLIST(1)
  ;---&sql(INSERT INTO SS_User_Logs VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s PLIST(2)=$o(^SSU("SSUSR",1,PLIST(0),"LOG",""),-1)+1
 s PLIST(3)=+$h,PLIST(4)=$p($h,",",2)
 q
 ; Adjust certain fields
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
getall(par,Continue) n (par,Continue,PLIST) s par=$g(par),Continue=$g(Continue)
 i Continue'="Y" d
 .k ^TMP($zn,$j) 
 .i $$open(par)
 .f cnt=1:1 q:$$fetch(par)  d
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s ^TMP($zn,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 .i $$close()
 k PLIST s (sum,x)="" f j=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(j)=^(x),sum=sum+$l(^(x)) k ^TMP($zn,$j,x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
%SULG0o s $zt="%SULG0E" s SQLCODE=$s($g(%SULG0c):-101,1:0) q:SQLCODE'=0  s %SULG0d(11)=0 s %SULG0d(12)=0,%SULG0d(13)=""
 s %SULG0d(8)=$g(par)
 s %SULG0c=1 q
%SULG0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SULG0c,%SULG0d,%SULG0E,%SULG0l,%SULG0n,%SULG0R,%SULG0Z q
%0Afirst 
 ; asl MOD# 2
 s %SULG0d(1)=%SULG0d(8)
 i %SULG0d(1)="" g %0ABdun
 s %SULG0d(3)=" "
%0ABk1 s %SULG0d(3)=$zp(^SSU("SSUSR",1,%SULG0d(1),"LOG",%SULG0d(3)))
 i %SULG0d(3)="" g %0ABdun
 s %SULG0d(23)=$g(^SSU("SSUSR",1,%SULG0d(1),"LOG",%SULG0d(3)))
 s %SULG0d(4)=$p(%SULG0d(23),"\",1) s %SULG0d(5)=$p(%SULG0d(23),"\",2) s %SULG0d(6)=$p(%SULG0d(23),"\",3) s %SULG0d(7)=$p(%SULG0d(23),"\",4)
 s %SULG0d(2)=(%SULG0d(1))_"||"_(%SULG0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(%SULG0d(2),"||",1),"LOG",$p(%SULG0d(2),"||",2))#"S":$zu(115,4) i $t { s %SULG0d(12)=1,%SULG0d(13)=$name(^SSU("SSUSR",1,$p(%SULG0d(2),"||",1),"LOG",$p(%SULG0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User_Logs for RowID value: "_%SULG0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SULG0d(10)=$p(%SULG0d(2),"||"),%SULG0d(3)=$p(%SULG0d(2),"||",2)
 i %SULG0d(10)'="",%SULG0d(3)'="",$d(^SSU("SSUSR",1,%SULG0d(10),"LOG",%SULG0d(3)))
 e  g %0ACdun
 s %SULG0d(33)=$g(^SSU("SSUSR",1,%SULG0d(10),"LOG",%SULG0d(3)))
 s %SULG0d(4)=$p(%SULG0d(33),"\",1) s %SULG0d(5)=$p(%SULG0d(33),"\",2) s %SULG0d(6)=$p(%SULG0d(33),"\",3) s %SULG0d(7)=$p(%SULG0d(33),"\",4)
 s %SULG0d(1)=$p(%SULG0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SULG0d(11)=%SULG0d(11)+1,%ROWCOUNT=%SULG0d(11),%ROWID=%SULG0d(2),%SULG0c=10 q
%SULG0f i '$g(%SULG0c) { s SQLCODE=-102 q  } i %SULG0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SULG0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SULG0d(11),%SULG0c=100 q  } g %0Afirst:%SULG0c=1
%0ACdun i $zu(115,2)=1,$g(%SULG0d(12))=1 { l -@%SULG0d(13) s %SULG0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SULG0d(11),SQLCODE=100,%SULG0c=100 q
%SULG0c i '$g(%SULG0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SULG0d(11)),1:0)
 i $zu(115,2)=1,$g(%SULG0d(12))=1 { l -@%SULG0d(13) } k %SULG0c,%SULG0d,%SULG0E,%SULG0l,%SULG0n,%SULG0R,%SULG0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SULG0c=100 q
%0Do d %SULG0f q:SQLCODE'=0
 s PLIST(0)=%SULG0d(1),PLIST(1)=%SULG0d(2),PLIST(2)=%SULG0d(3),PLIST(3)=%SULG0d(4),PLIST(4)=%SULG0d(5),PLIST(5)=%SULG0d(6),PLIST(6)=%SULG0d(7)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^SSU("SSUSR",1,%mmmsqld(11),"LOG",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(23)=$g(^SSU("SSUSR",1,%mmmsqld(11),"LOG",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(PLIST(1),"||",1),"LOG",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^SSU("SSUSR",1,$p(PLIST(1),"||",1),"LOG",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User_Logs for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^SSU("SSUSR",1,%mmmsqld(11),"LOG",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(33)=$g(^SSU("SSUSR",1,%mmmsqld(11),"LOG",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(33),"\",1) s PLIST(4)=$p(%mmmsqld(33),"\",2) s PLIST(5)=$p(%mmmsqld(33),"\",3) s PLIST(6)=$p(%mmmsqld(33),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSUserLogs.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
]]></Routine>
</Export>
