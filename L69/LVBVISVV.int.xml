<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISVV" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISVV ; IG 5/5/98 ; LVB Control data access for VISVV EP_VisitVoice
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISVV(par)
 ; $$update^LVBVISVV(ROWID)
 ; $$delete^LVBVISVV(ROWID)
 ; $$delall^LVBVISVV(par)
 ; $$select^LVBVISVV(ROWID)
 ; $$open^LVBVISVV(par,acces)
 ; $$fetch^LVBVISVV(par,acces)
 ; $$close^LVBVISVV()
 ; $$getall^LVBVISVV(par)
 ; $$nextcnt^LVBVISVV(par)
 ;
  ;---&sql(DECLARE VISVV CURSOR FOR SELECT * FROM EP_VisitVoice
   ;---         WHERE VISVV_ParRef = :par
   ;---         AND ((VISVV_AccesionNumber = :acces) OR (:acces IS NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, acces, par
 ;
open(par,acces) s par=$g(par),acces=$g(acces)
  ;---&SQL(OPEN VISVV)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISVV0o
 q 0
 ;
fetch(par,acces) s par=$g(par),acces=$g(acces) k PLIST
  ;---&SQL(FETCH VISVV INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE VISVV)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISVV0c
 q 0
 ;
select(RowID) S RowID=$G(RowID) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitVoice WHERE VISVV_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
nextcnt(par) s par=$g(par) q $o(^TEPI(par,"VOICE",""),-1)+1
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
 i $l(par) S PLIST(2)=$$nextcnt(par)
  ;---&sql(INSERT INTO EP_VisitVoice VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") S RowID=$g(RowID)
  ;---&sql(UPDATE EP_VisitVoice VALUES :PLIST() WHERE VISVV_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM EP_VisitVoice WHERE VISVV_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
delall(par) s par=$g(par)
 i $$open(par)
 f  q:$$fetch(par)  i $$delete(PLIST(1))
 i $$close()
 q 0
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  d
 .s str="" f j=1:1:$g(PLIST) s $p(str,$c(28),j)=$g(PLIST(j))
 .S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 I $$close()
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%VISVV0o s $zt="%VISVV0E" s SQLCODE=$s($g(%VISVV0c):-101,1:0) q:SQLCODE'=0  s %VISVV0d(18)=0 s %VISVV0d(19)=0,%VISVV0d(20)=""
 s %VISVV0d(11)=$g(par),%VISVV0d(12)=$g(acces),%VISVV0d(13)=$g(acces)
 s %VISVV0c=1 q
%VISVV0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISVV0c,%VISVV0d,%VISVV0E,%VISVV0l,%VISVV0n,%VISVV0R,%VISVV0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISVV0d(1)=%VISVV0d(11)
 i %VISVV0d(1)="" g %0ABdun
 s %VISVV0d(3)=""
%0ABk1 s %VISVV0d(3)=$o(^TEPI(%VISVV0d(1),"VOICE",%VISVV0d(3)))
 i %VISVV0d(3)="" g %0ABdun
 s %VISVV0d(26)=$g(^TEPI(%VISVV0d(1),"VOICE",%VISVV0d(3)))
 s %VISVV0d(6)=$p(%VISVV0d(26),"\",1)
 g:'(((%VISVV0d(6)'="")&&(%VISVV0d(6)=%VISVV0d(12)))||(%VISVV0d(13)="")) %0ABk1
 s %VISVV0d(4)=$p(%VISVV0d(26),"\",5) s %VISVV0d(5)=$p(%VISVV0d(26),"\",6) s %VISVV0d(7)=$p(%VISVV0d(26),"\",7) s %VISVV0d(8)=$p(%VISVV0d(26),"\",2) s %VISVV0d(9)=$p(%VISVV0d(26),"\",3) s %VISVV0d(10)=$p(%VISVV0d(26),"\",4)
 s %VISVV0d(2)=(%VISVV0d(1))_"||"_(%VISVV0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISVV0d(2),"||",1),"VOICE",$p(%VISVV0d(2),"||",2))#"S":$zu(115,4) i $t { s %VISVV0d(19)=1,%VISVV0d(20)=$name(^TEPI($p(%VISVV0d(2),"||",1),"VOICE",$p(%VISVV0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitVoice for RowID value: "_%VISVV0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISVV0d(15)=$lb(""_%VISVV0d(6))
 s %VISVV0d(16)=$p(%VISVV0d(2),"||"),%VISVV0d(3)=$p(%VISVV0d(2),"||",2)
 i %VISVV0d(16)'="",%VISVV0d(3)'="",$d(^TEPI(%VISVV0d(16),"VOICE",%VISVV0d(3)))
 e  g %0ACdun
 s %VISVV0d(32)=$g(^TEPI(%VISVV0d(16),"VOICE",%VISVV0d(3)))
 s %VISVV0d(4)=$p(%VISVV0d(32),"\",5) s %VISVV0d(5)=$p(%VISVV0d(32),"\",6) s %VISVV0d(6)=$p(%VISVV0d(32),"\",1) s %VISVV0d(7)=$p(%VISVV0d(32),"\",7) s %VISVV0d(8)=$p(%VISVV0d(32),"\",2) s %VISVV0d(9)=$p(%VISVV0d(32),"\",3) s %VISVV0d(10)=$p(%VISVV0d(32),"\",4)
 s %VISVV0d(1)=$p(%VISVV0d(2),"||")
 s %VISVV0d(17)=$lb(""_%VISVV0d(6))
 g:%VISVV0d(15)'=%VISVV0d(17) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISVV0d(18)=%VISVV0d(18)+1,%ROWCOUNT=%VISVV0d(18),%ROWID=%VISVV0d(2),%VISVV0c=10 q
%VISVV0f i '$g(%VISVV0c) { s SQLCODE=-102 q  } i %VISVV0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISVV0d(18))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISVV0d(18),%VISVV0c=100 q  } g %0Afirst:%VISVV0c=1
%0ACdun i $zu(115,2)=1,$g(%VISVV0d(19))=1 { l -@%VISVV0d(20) s %VISVV0d(19)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISVV0d(18),SQLCODE=100,%VISVV0c=100 q
%VISVV0c i '$g(%VISVV0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISVV0d(18)),1:0)
 i $zu(115,2)=1,$g(%VISVV0d(19))=1 { l -@%VISVV0d(20) } k %VISVV0c,%VISVV0d,%VISVV0E,%VISVV0l,%VISVV0n,%VISVV0R,%VISVV0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISVV0c=100 q
%0Do d %VISVV0f q:SQLCODE'=0
 s PLIST(0)=%VISVV0d(1),PLIST(1)=%VISVV0d(2),PLIST(2)=%VISVV0d(3),PLIST(3)=%VISVV0d(4),PLIST(4)=%VISVV0d(5),PLIST(5)=%VISVV0d(6),PLIST(6)=%VISVV0d(7),PLIST(7)=%VISVV0d(8),PLIST(8)=%VISVV0d(9),PLIST(9)=%VISVV0d(10)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(15)=0,%mmmsqld(16)=""
 s %mmmsqld(12)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(12)
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(14)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(14),"VOICE",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(22)=$g(^TEPI(%mmmsqld(14),"VOICE",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(22),"\",5) s PLIST(4)=$p(%mmmsqld(22),"\",6) s PLIST(5)=$p(%mmmsqld(22),"\",1) s PLIST(6)=$p(%mmmsqld(22),"\",7) s PLIST(7)=$p(%mmmsqld(22),"\",2) s PLIST(8)=$p(%mmmsqld(22),"\",3) s PLIST(9)=$p(%mmmsqld(22),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),"VOICE",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(15)=1,%mmmsqld(16)=$name(^TEPI($p(PLIST(1),"||",1),"VOICE",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitVoice for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(14)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(14),"VOICE",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(28)=$g(^TEPI(%mmmsqld(14),"VOICE",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",5) s PLIST(4)=$p(%mmmsqld(28),"\",6) s PLIST(5)=$p(%mmmsqld(28),"\",1) s PLIST(6)=$p(%mmmsqld(28),"\",7) s PLIST(7)=$p(%mmmsqld(28),"\",2) s PLIST(8)=$p(%mmmsqld(28),"\",3) s PLIST(9)=$p(%mmmsqld(28),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) s %mmmsqld(15)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitVoice.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),"VOICE",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(13)=$$%getlock^User.EPVisitVoice.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),"VOICE",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitVoice.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitVoice.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitVoice.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.EPVisitVoice.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),"VOICE",%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(12)=$$%getlock^User.EPVisitVoice.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),"VOICE",%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.EPVisitVoice.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitVoice.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitVoice.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.EPVisitVoice.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
