<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBMILL" type="INT" languagemode="0" generated="1"><![CDATA[
LVBMILL ; IG 5/5/98; LVB Control data access for MILL MIF_MachineLoadList
 ;
 ; supported caMILLs:
 ;
 ; $$insert^LVBMILL(par)
 ; $$update^LVBMILL(ROWID)
 ; $$select^LVBMILL(ROWID)
 ; $$delete^LVBMILL(ROWID)
 ; $$open^LVBMILL(par,type,date)
 ; $$fetch^LVBMILL(par,type,date)
 ; $$close^LVBMILL()
 ; $$count^LVBMILL(row)
 ; $$transfer^LVBMILL(row)
 ; $$purge^LVBMILL(machine,date,loadlist)
 ;
  ;---&sql(DECLARE MILL CURSOR FOR SELECT * FROM MIF_MachineLoadList
   ;---         WHERE MILL_ParRef = :par
   ;---         AND ((:type [ %INTERNAL(MILL_Status)) OR (:type IS NULL))
   ;---         AND ((MILL_DateSent > :date) OR (:date IS NULL) OR ((%INTERNAL(MILL_Status) NOT= :sent) OR (MILL_Status IS NULL)))
   ;---         ORDER BY MILL_Status,MILL_ORDER DESC)
   ;--- ** SQL PUBLIC Variables: SQLCODE, date, par, sent, type
 ; purge machine loadlists
purge(machine,date,loadlist) n (machine,date,loadlist)
 s machine=$g(machine),date=$g(date),loadlist=$g(loadlist)
 i $$open(machine,"S")
 f  q:$$fetch(machine,"S")  d
 .i $l(date),PLIST(5)>date q
 .i $l(loadlist),PLIST(3)>loadlist q
 .i $$delete(PLIST(1))
 i $$close()
 q 0
 ;
open(par,type,date) s par=$g(par),type=$g(type),date=$g(date),sent="S"
 i $l(date) s date=$h-date
  ;---&SQL(OPEN MILL)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MILL0o
 q 0
 ;
fetch(par,type,date) s par=$g(par),type=$g(type),date=$g(date),sent="S" k PLIST
 i $l(date) s date=$h-date
  ;---&SQL(FETCH MILL INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE MILL)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MILL0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM MIF_MachineLoadList WHERE MILL_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
 i $l(PLIST(0)) d
 .s nexttray=$p(^TMIF(par),"\",21)
 .s routine=$p(^TMIF(par),"\",3)
 .i routine["^" s routine=$p(routine,"^",2)
 .i routine["(" s routine=$p(routine,"(",1)
 .i routine["$$" s routine=$p(routine,"$$",2)
 .i $l(nexttray),$l(routine) d
 ..s PLIST(12)=nexttray
 ..s set="s nexttray=$$NEXTTRAY^"_routine_"("""_nexttray_""")"
 ..x set i $l(nexttray) s $p(^TMIF(par),"\",21)=nexttray
 s PLIST(3)=$o(^TMIF(PLIST(0),"LL",""),-1)+1
  ;---&sql(INSERT INTO MIF_MachineLoadList VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE MIF_MachineLoadList VALUES :PLIST() WHERE MILL_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM MIF_MachineLoadList WHERE MILL_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSPE(plist(11),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 q
count(row) n (PLIST,row) s row=$g(row)
 s mi=$p(row,"||"),num=$p(row,"||",2)
 s ind=0 f count=0:1 s ind=$o(^TMIF(mi,"LL",num,"PAT",ind)) q:ind=""
 k PLIST s PLIST=1,PLIST(1)=count
 q 0
 ; transfer load list
transfer(row) n (row) s row=$g(row),ok=100
 i '$$select(row) d
 .i PLIST(8)="R" s ok=61
 .s PLIST(9)=+$h,PLIST(10)=$p($h,",",2),(PLIST(5),PLIST(6))=""
 .s ok=$$update(row)
 q ok
%MILL0o s $zt="%MILL0E" s SQLCODE=$s($g(%MILL0c):-101,1:0) q:SQLCODE'=0  s %MILL0d(24)=0 s %MILL0d(25)=0,%MILL0d(26)=""
 s %MILL0d(14)=$g(par),%MILL0d(15)=$g(type),%MILL0d(17)=$g(type),%MILL0d(18)=$g(date),%MILL0d(19)=$g(date),%MILL0d(20)=$g(sent)
 s %MILL0t(1)=$i(^||%sql.temp)
 s %MILL0c=1 q
%MILL0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %MILL0c,%MILL0d,%MILL0E,%MILL0l,%MILL0n,%MILL0R,%MILL0s,%MILL0t,%MILL0Z q
%0Afirst 
 k ^||%sql.temp(%MILL0t(1),0) s ^||%sql.temp(%MILL0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%MILL0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%MILL0t(1),0))
 s %MILL0s(22)=""
%0ACk1 s %MILL0s(22)=$o(^||%sql.temp(%MILL0t(1),0,%MILL0s(22)))
 i %MILL0s(22)="" g %0ACdun
 s %MILL0d(22)=$s(%MILL0s(22)=-1E14:"",1:%MILL0s(22))
 s %MILL0s(4)=""
%0ACk2 s %MILL0s(4)=$zp(^||%sql.temp(%MILL0t(1),0,%MILL0s(22),%MILL0s(4)))
 i %MILL0s(4)="" g %0ACk1
 s %MILL0d(4)=$s(%MILL0s(4)=-1E14:"",1:%MILL0s(4))
 s %MILL0s(2)=""
%0ACk3 s %MILL0s(2)=$o(^||%sql.temp(%MILL0t(1),0,%MILL0s(22),%MILL0s(4),%MILL0s(2)))
 i %MILL0s(2)="" g %0ACk2
 s %MILL0d(2)=$s(%MILL0s(2)=-1E14:"",1:%MILL0s(2))
 s %MILL0d(35)=$g(^||%sql.temp(%MILL0t(1),0,%MILL0s(22),%MILL0s(4),%MILL0s(2)))
 s %MILL0d(1)=$lg(%MILL0d(35),4) s %MILL0d(3)=$lg(%MILL0d(35),1) s %MILL0d(5)=$lg(%MILL0d(35),8) s %MILL0d(6)=$lg(%MILL0d(35),3) s %MILL0d(7)=$lg(%MILL0d(35),10) s %MILL0d(8)=$lg(%MILL0d(35),5) s %MILL0d(9)=$lg(%MILL0d(35),7) s %MILL0d(10)=$lg(%MILL0d(35),2) s %MILL0d(11)=$lg(%MILL0d(35),9) s %MILL0d(12)=$lg(%MILL0d(35),6) s %MILL0d(13)=$lg(%MILL0d(35),11)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TMIF($p(%MILL0d(2),"||",1),"LL",$p(%MILL0d(2),"||",2))#"S":$zu(115,4) i $t { s %MILL0d(25)=1,%MILL0d(26)=$name(^TMIF($p(%MILL0d(2),"||",1),"LL",$p(%MILL0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineLoadList for RowID value: "_%MILL0d(2) ztrap "LOCK"  }
 ; asl MOD# 4
 s %MILL0d(23)=$p(%MILL0d(2),"||"),%MILL0d(4)=$p(%MILL0d(2),"||",2)
 i %MILL0d(23)'="",%MILL0d(4)'="",$d(^TMIF(%MILL0d(23),"LL",%MILL0d(4)))
 i '$t
 e  i 1]]%MILL0d(4)
 i  g %0ADdun
 s %MILL0d(41)=$g(^TMIF(%MILL0d(23),"LL",%MILL0d(4)))
 s %MILL0d(6)=$p(%MILL0d(41),"\",3) s %MILL0d(3)=$p(%MILL0d(41),"\",1) s %MILL0d(5)=$p(%MILL0d(41),"\",2) s %MILL0d(7)=$p(%MILL0d(41),"\",4) s %MILL0d(8)=$p(%MILL0d(41),"\",5) s %MILL0d(10)=$p(%MILL0d(41),"\",7) s %MILL0d(11)=$p(%MILL0d(41),"\",8) s %MILL0d(12)=$p(%MILL0d(41),"\",9) s %MILL0d(13)=$p(%MILL0d(41),"\",10)
 s %MILL0d(1)=$p(%MILL0d(2),"||")
 s %MILL0d(9)=$$CO08^at256($g(%MILL0d(3)),$g(%MILL0d(10)),$g(%MILL0d(6))) s %MILL0d(22)=$zu(28,%MILL0d(9),7)
 g:'(%MILL0d(1)=%MILL0d(14)) %0ADdun
 g:'(((%MILL0d(9)'="")&&((%MILL0d(15)'="")&&(%MILL0d(15)[%MILL0d(9))))||(%MILL0d(17)="")) %0ADdun
 g:'((((%MILL0d(18)'="")&&(%MILL0d(6)]]%MILL0d(18)))||(%MILL0d(19)=""))||(((%MILL0d(20)'="")&&((%MILL0d(9)'="")&&(%MILL0d(9)'=%MILL0d(20))))||(%MILL0d(22)=" "))) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %MILL0d(24)=%MILL0d(24)+1,%ROWCOUNT=%MILL0d(24),%ROWID=%MILL0d(2),%MILL0c=10 q
%MILL0f i '$g(%MILL0c) { s SQLCODE=-102 q  } i %MILL0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%MILL0d(24))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%MILL0d(24),%MILL0c=100 q  } g %0Afirst:%MILL0c=1
%0ADdun i $zu(115,2)=1,$g(%MILL0d(25))=1 { l -@%MILL0d(26) s %MILL0d(25)=0 }
 g %0ACk3
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%MILL0d(24),SQLCODE=100,%MILL0c=100 q
%MILL0c i '$g(%MILL0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%MILL0d(24)),1:0) f %MILL0d(27)=1 { i $sortend(^||%sql.temp(%MILL0t(%MILL0d(27)),0),0) } k ^||%sql.temp(%MILL0t(1))
 i $zu(115,2)=1,$g(%MILL0d(25))=1 { l -@%MILL0d(26) } k %MILL0c,%MILL0d,%MILL0E,%MILL0l,%MILL0n,%MILL0R,%MILL0s,%MILL0t,%MILL0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %MILL0c=100
 f %MILL0d(27)=1 i $sortend(^||%sql.temp(%MILL0t(%MILL0d(27)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %MILL0d(1)=%MILL0d(14)
 i %MILL0d(1)="" g %0ABdun
 s %MILL0d(4)=""
%0ABk1 s %MILL0d(4)=$o(^TMIF(%MILL0d(1),"LL",%MILL0d(4)))
 i %MILL0d(4)="" g %0ABdun
 i 1]]%MILL0d(4) g %0ABk1
 s %MILL0d(33)=$g(^TMIF(%MILL0d(1),"LL",%MILL0d(4)))
 s %MILL0d(6)=$p(%MILL0d(33),"\",3) s %MILL0d(3)=$p(%MILL0d(33),"\",1) s %MILL0d(5)=$p(%MILL0d(33),"\",2) s %MILL0d(7)=$p(%MILL0d(33),"\",4) s %MILL0d(8)=$p(%MILL0d(33),"\",5) s %MILL0d(10)=$p(%MILL0d(33),"\",7) s %MILL0d(11)=$p(%MILL0d(33),"\",8) s %MILL0d(12)=$p(%MILL0d(33),"\",9) s %MILL0d(13)=$p(%MILL0d(33),"\",10)
 s %MILL0d(2)=(%MILL0d(1))_"||"_(%MILL0d(4))
 s %MILL0d(9)=$$CO08^at256($g(%MILL0d(3)),$g(%MILL0d(10)),$g(%MILL0d(6))) s %MILL0d(22)=$zu(28,%MILL0d(9),7)
 g:'(((%MILL0d(9)'="")&&((%MILL0d(15)'="")&&(%MILL0d(15)[%MILL0d(9))))||(%MILL0d(17)="")) %0ABk1
 g:'((((%MILL0d(18)'="")&&(%MILL0d(6)]]%MILL0d(18)))||(%MILL0d(19)=""))||(((%MILL0d(20)'="")&&((%MILL0d(9)'="")&&(%MILL0d(9)'=%MILL0d(20))))||(%MILL0d(22)=" "))) %0ABk1
 s %MILL0s(22)=$s(%MILL0d(22)'="":%MILL0d(22),1:-1E14),%MILL0s(4)=$s(%MILL0d(4)'="":%MILL0d(4),1:-1E14),%MILL0s(2)=$s(%MILL0d(2)'="":%MILL0d(2),1:-1E14),%MILL0d(34)="",$li(%MILL0d(34),4)=%MILL0d(1),$li(%MILL0d(34),1)=%MILL0d(3),$li(%MILL0d(34),8)=%MILL0d(5),$li(%MILL0d(34),3)=%MILL0d(6),$li(%MILL0d(34),10)=%MILL0d(7),$li(%MILL0d(34),5)=%MILL0d(8),$li(%MILL0d(34),7)=%MILL0d(9),$li(%MILL0d(34),2)=%MILL0d(10),$li(%MILL0d(34),9)=%MILL0d(11),$li(%MILL0d(34),6)=%MILL0d(12),$li(%MILL0d(34),11)=%MILL0d(13),^||%sql.temp(%MILL0t(1),0,%MILL0s(22),%MILL0s(4),%MILL0s(2))=%MILL0d(34)
 g %0ABk1
%0ABdun 
 q
%0Do d %MILL0f q:SQLCODE'=0
 s PLIST(0)=%MILL0d(1),PLIST(1)=%MILL0d(2),PLIST(2)=%MILL0d(3),PLIST(3)=%MILL0d(4),PLIST(4)=%MILL0d(5),PLIST(5)=%MILL0d(6),PLIST(6)=%MILL0d(7),PLIST(7)=%MILL0d(8),PLIST(8)=%MILL0d(9),PLIST(9)=%MILL0d(10),PLIST(10)=%MILL0d(11),PLIST(11)=%MILL0d(12),PLIST(12)=%MILL0d(13)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(18)=0,%mmmsqld(19)=""
 s %mmmsqld(15)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(15)
 s %mmmsqld(17)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i %mmmsqld(17)'="",PLIST(3)'="",$d(^TMIF(%mmmsqld(17),"LL",PLIST(3)))
 i '$t
 e  i 1]]PLIST(3)
 i  g %0FBdun
 s %mmmsqld(25)=$g(^TMIF(%mmmsqld(17),"LL",PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2) s PLIST(5)=$p(%mmmsqld(25),"\",3) s PLIST(6)=$p(%mmmsqld(25),"\",4) s PLIST(7)=$p(%mmmsqld(25),"\",5) s PLIST(9)=$p(%mmmsqld(25),"\",7) s PLIST(10)=$p(%mmmsqld(25),"\",8) s PLIST(11)=$p(%mmmsqld(25),"\",9) s PLIST(12)=$p(%mmmsqld(25),"\",10)
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(8)=$$CO08^at256($g(PLIST(2)),$g(PLIST(9)),$g(PLIST(5)))
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TMIF($p(PLIST(1),"||",1),"LL",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TMIF($p(PLIST(1),"||",1),"LL",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineLoadList for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(17)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i %mmmsqld(17)'="",PLIST(3)'="",$d(^TMIF(%mmmsqld(17),"LL",PLIST(3)))
 i '$t
 e  i 1]]PLIST(3)
 i  g %0FCdun
 s %mmmsqld(31)=$g(^TMIF(%mmmsqld(17),"LL",PLIST(3)))
 s PLIST(2)=$p(%mmmsqld(31),"\",1) s PLIST(4)=$p(%mmmsqld(31),"\",2) s PLIST(5)=$p(%mmmsqld(31),"\",3) s PLIST(6)=$p(%mmmsqld(31),"\",4) s PLIST(7)=$p(%mmmsqld(31),"\",5) s PLIST(9)=$p(%mmmsqld(31),"\",7) s PLIST(10)=$p(%mmmsqld(31),"\",8) s PLIST(11)=$p(%mmmsqld(31),"\",9) s PLIST(12)=$p(%mmmsqld(31),"\",10)
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(8)=$$CO08^at256($g(PLIST(2)),$g(PLIST(9)),$g(PLIST(5)))
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:12 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.MIFMachineLoadList.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(4),"LL",%mmmsqld(5)))
 i '$t
 e  i 1]]%mmmsqld(5)
 i  g %0JBdun
 s %mmmsqld(13)=$$%getlock^User.MIFMachineLoadList.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(4),"LL",%mmmsqld(5)))
 i '$t
 e  i 1]]%mmmsqld(5)
 i  g %0JCdun
 k %data
 f icol=0:1:12 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.MIFMachineLoadList.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.MIFMachineLoadList.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.MIFMachineLoadList.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.MIFMachineLoadList.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TMIF(%mmmsqld(3),"LL",%mmmsqld(4)))
 i '$t
 e  i 1]]%mmmsqld(4)
 i  g %0LBdun
 s %mmmsqld(12)=$$%getlock^User.MIFMachineLoadList.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TMIF(%mmmsqld(3),"LL",%mmmsqld(4)))
 i '$t
 e  i 1]]%mmmsqld(4)
 i  g %0LCdun
 d %delete^User.MIFMachineLoadList.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.MIFMachineLoadList.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.MIFMachineLoadList.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.MIFMachineLoadList.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
