<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTLOC" type="INT" languagemode="0"><![CDATA[
BVBCTLOC ; IG 07/12/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:28 for Cache for Windows
 ; 
 ; supported calls: 
 ; $$getall^BVBCTLOC() 
 ; $$select^BVBCTLOC(ROWID)
 ; $$open^BVBCTLOC(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTLOC(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTLOC(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTLOC(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTLOC()
 ; $$insert^BVBCTLOC()
 ; $$update^BVBCTLOC(ROWID)
 ; $$delete^BVBCTLOC(ROWID,Comments)
 ; 
 ;
 ;
 ; Insert the data
insert() D pre K PLIST(1)
 d %0Bo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) D pre s ROWID=$g(ROWID) k PLIST(1)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)  d %CTLOC0o
 Q 0
 ;
 ; Fetch the data
fetch(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch() q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (PLIST) K ^TMP($zn,$j)
 i $$open()
 f cnt=1:1 Q:$$fetch()  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %CTLOC0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
selcode(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTUSL(plist(4))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 Q
 ;
getall() N (PLIST) K ^TMP($zn,$j)
 I $$open()
 F cnt=1:1 Q:$$fetch()  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 ;
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTLOC0o s SQLCODE=$s($g(%CTLOC0c):-101,1:0) q:SQLCODE'=0
 s %CTLOC0c=1 k %CTLOC0m
 s %CTLOC0E=$zt,%CTLOC0f=0,%CTLOC0e=0,%CTLOC0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTLOC0d(2),$C(1))=""
%0ABk1 s $P(%CTLOC0d(2),$C(1))=$o(^CT("LO",$P(%CTLOC0d(2),$C(1))))
 i $P(%CTLOC0d(2),$C(1))="" g %0ABdun
 i 1>$P(%CTLOC0d(2),$C(1)),$P(%CTLOC0d(2),$C(1))=+$P(%CTLOC0d(2),$C(1)) g %0ABk1
 i $P(%CTLOC0d(2),$C(1))'=+$P(%CTLOC0d(2),$C(1)) g %0ABdun
 s %CTLOC0n=$g(^CT("LO",$P(%CTLOC0d(2),$C(1))))
 s %CTLOC0d(3)=$p(%CTLOC0n,"^",1) s %CTLOC0d(4)=$p(%CTLOC0n,"^",2) s %CTLOC0d(5)=$p(%CTLOC0n,"^",3)
 s %val=$P(%CTLOC0d(2),$C(1)) d %0ABs1:%val'="" s $P(%CTLOC0d(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTLOC0f=%CTLOC0f+1 s %CTLOC0c=10 q
%CTLOC0f i '$g(%CTLOC0c) s SQLCODE=-102 q
 i %CTLOC0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTLOC0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTLOC0c=100 q
%CTLOC0c i '$g(%CTLOC0c) s SQLCODE=-102 q
 k %CTLOC0c,%CTLOC0d,%CTLOC0e,%CTLOC0E,%CTLOC0f,%CTLOC0l,%CTLOC0L,%CTLOC0n,%CTLOC0r,%CTLOC0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTLOC0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:4 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1401("1")
 q
%0CAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("LO",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0CBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:4 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1401(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("LO",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0DBdun
 d delete^mt1401(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTLOC0f q:SQLCODE'=0
 s PLIST(1)=%CTLOC0d(2),PLIST(2)=%CTLOC0d(3),PLIST(3)=%CTLOC0d(4),PLIST(4)=%CTLOC0d(5)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("LO",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0HBdun
 s %mmmsqln=$g(^CT("LO",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 s %mmmsqld(9)=$$ALPHAUP(%mmmsqld(3))
 ; asl MOD# 2
 s %mmmsqld(8)=$g(%mmmsqld(9))
 i %mmmsqld(8)="" g %0IBdun
 s $P(PLIST(1),$C(1))=""
%0IBk1 s $P(PLIST(1),$C(1))=$o(^CT("LO",0,"Code",%mmmsqld(8),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0IBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0IBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("LO",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0IBk1
 s %mmmsqln=$g(^CT("LO",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
