<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="at17" type="INT" languagemode="0" generated="1"><![CDATA[
at17 ;
 q
VALDEL(xrowid) ;Validation Code for deletion
  ;---&SQL(SELECT SSGVF_RowId FROM SS_GroupVBExecFunction WHERE SSGVF_SSVBF_DR = :xrowid)
   ;--- ** SQL PUBLIC Variables: SQLCODE, xrowid
 Do %0Ao
 i 'SQLCODE s %ok=0,%msg="This code is in use "
 q
AV04(par,val)     ;validation code for name
  ;---&SQL(SELECT SSVBO_RowID FROM SS_VBMenuOptions WHERE SSVBO_ParRef = :par AND SSVBO_MenuName = :val)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par, val
 Do %0Co
 i 'SQLCODE s %ok=0,%msg="Already Entry with this value <at17>"
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(3)=$g(xrowid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(5)=""
%0ABk1 s %mmmsqld(5)=$o(^SSU("SSGRP",%mmmsqld(5)))
 i %mmmsqld(5)="" g %0ABdun
 i %mmmsqld(2)'="",$d(^SSU("SSGRP",%mmmsqld(5),"VBEX",%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  g %0ABk1
 s %mmmsqld(1)=(%mmmsqld(5))_"||"_(%mmmsqld(2))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(%mmmsqld(1),"||",1),"VBEX",$p(%mmmsqld(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^SSU("SSGRP",$p(%mmmsqld(1),"||",1),"VBEX",$p(%mmmsqld(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupVBExecFunction for RowID value: "_%mmmsqld(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(6)=$p(%mmmsqld(1),"||"),%mmmsqld(2)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(6)'="",%mmmsqld(2)'="",$d(^SSU("SSGRP",%mmmsqld(6),"VBEX",%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  g %0ACdun
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(3)=$g(par),%mmmsqld(5)=$g(val)
 s SQLCODE=100
 s %mmmsqld(8)=$zu(28,%mmmsqld(5),6)
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)="" g %0CBdun
 s %mmmsqld(9)=""
%0CBk1 s %mmmsqld(9)=$o(^SS("SSVBE",%mmmsqld(2),"SSVBO",%mmmsqld(9)))
 i %mmmsqld(9)="" g %0CBdun
 i 1]]%mmmsqld(9) g %0CBk1
 s %mmmsqld(22)=$g(^SS("SSVBE",%mmmsqld(2),"SSVBO",%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(22),"^",1)
 s %mmmsqld(1)=(%mmmsqld(2))_"||"_(%mmmsqld(9))
 s %mmmsqld(7)=$zu(28,%mmmsqld(4),6)
 g:'(%mmmsqld(7)=%mmmsqld(8)) %0CBk1
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(%mmmsqld(1),"||",1),"SSVBO",$p(%mmmsqld(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^SS("SSVBE",$p(%mmmsqld(1),"||",1),"SSVBO",$p(%mmmsqld(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBMenuOptions for RowID value: "_%mmmsqld(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(10)=$lb(""_%mmmsqld(7))
 s %mmmsqld(11)=$p(%mmmsqld(1),"||"),%mmmsqld(9)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(11)'="",%mmmsqld(9)'="",$d(^SS("SSVBE",%mmmsqld(11),"SSVBO",%mmmsqld(9)))
 i '$t
 e  i 1]]%mmmsqld(9)
 i  g %0CCdun
 s %mmmsqld(30)=$g(^SS("SSVBE",%mmmsqld(11),"SSVBO",%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(30),"^",1)
 s %mmmsqld(2)=$p(%mmmsqld(1),"||")
 s %mmmsqld(7)=$zu(28,%mmmsqld(4),6)
 s %mmmsqld(12)=$lb(""_%mmmsqld(7))
 g:%mmmsqld(10)'=%mmmsqld(12) %0CCdun
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
 g %0CBk1
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
]]></Routine>
</Export>
