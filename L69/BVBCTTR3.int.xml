<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTTR3" type="INT" languagemode="0"><![CDATA[
BVBCTTR3 ; IG 8/12/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:55 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$open^BVBCTTR3(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTTR3(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTTR3(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTTR3(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTTR3()
 ; $$select^BVBCTTR3(ROWID)
 ; $$insert^BVBCTTR3(par)
 ; $$update^BVBCTTR3(ROWID)
 ; $$delete^BVBCTTR3(ROWID,Comments)
 ; 
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTTR30o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() d %CTTR30c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) K PLIST(1),PLIST(2)
 d %0Fo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ;
update(RowID) s RowID=$g(RowID)
 d %0Go
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
 d %0Ho
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=$p("Pack Receive|Pack Splitting|Pack Transaction|Pack Allocation","|",$l($p("|RECEIVE|SPLIT|TRANS|ALLOC|","|"_%val_"|"),"|")) q
%CTTR30o s SQLCODE=$s($g(%CTTR30c):-101,1:0) q:SQLCODE'=0
 s %CTTR30c=1 k %CTTR30m
 s %CTTR30E=$zt,%CTTR30f=0,%CTTR30e=0,%CTTR30L=""
 s %CTTR30d(2)=$P(par,$C(1))
 s:%CTTR30d(2)="" %CTTR30d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTTR30d(1)=$g(%CTTR30d(2))
 i %CTTR30d(1)="" g %0ABdun
 s $P(%CTTR30d(5),$C(1))=""
%0ABk1 s $P(%CTTR30d(5),$C(1))=$o(^CT("TRANS",%CTTR30d(1),"SCR",$P(%CTTR30d(5),$C(1))))
 i $P(%CTTR30d(5),$C(1))="" g %0ABdun
 i 1>$P(%CTTR30d(5),$C(1)),$P(%CTTR30d(5),$C(1))=+$P(%CTTR30d(5),$C(1)) g %0ABk1
 i $P(%CTTR30d(5),$C(1))'=+$P(%CTTR30d(5),$C(1)) g %0ABdun
 s %CTTR30n=$g(^CT("TRANS",%CTTR30d(1),"SCR",$P(%CTTR30d(5),$C(1))))
 s %CTTR30d(6)=$p(%CTTR30n,"^",1)
 s %CTTR30d(4)=(%CTTR30d(1))_"||"_($P(%CTTR30d(5),$C(1)))
 s %val=$P(%CTTR30d(5),$C(1)) d %0ABs1:%val'="" s $P(%CTTR30d(5),$C(1),2)=%val
 s %val=$P(%CTTR30d(6),$C(1)) d %0ABs2:%val'="" s $P(%CTTR30d(6),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTTR30f=%CTTR30f+1 s %CTTR30c=10 q
%CTTR30f i '$g(%CTTR30c) s SQLCODE=-102 q
 i %CTTR30c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTTR30c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTTR30c=100 q
%CTTR30c i '$g(%CTTR30c) s SQLCODE=-102 q
 k %CTTR30c,%CTTR30d,%CTTR30e,%CTTR30E,%CTTR30f,%CTTR30l,%CTTR30L,%CTTR30n,%CTTR30r,%CTTR30R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTTR30E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTTR30f q:SQLCODE'=0
 s PLIST(0)=%CTTR30d(1),PLIST(1)=%CTTR30d(4),PLIST(2)=%CTTR30d(5),PLIST(3)=%CTTR30d(6)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(8)=$p($g(%mmmsqld(3)),"||",1,1),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(8)'="",$P(PLIST(2),$C(1))'="",$d(^CT("TRANS",%mmmsqld(8),"SCR",$P(PLIST(2),$C(1))))
 i '$t
 e  i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1))
 i  g %0EBdun
 s %mmmsqln=$g(^CT("TRANS",%mmmsqld(8),"SCR",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(3),$C(1)) d %0ABs2:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %insert,icol,ir
 f icol=0:1:3 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1481("1")
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^CT("TRANS",%mmmsqld(4),"SCR",$P(%mmmsqld(5),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(5),$C(1)),$P(%mmmsqld(5),$C(1))=+$P(%mmmsqld(5),$C(1))
 i  g %0GBdun
 k %data,%edit
 f icol=0:1:3 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1481(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),$P(%mmmsqld(4),$C(1))=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",$P(%mmmsqld(4),$C(1))'="",$d(^CT("TRANS",%mmmsqld(3),"SCR",$P(%mmmsqld(4),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(4),$C(1)),$P(%mmmsqld(4),$C(1))=+$P(%mmmsqld(4),$C(1))
 i  g %0HBdun
 d delete^mt1481(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
