<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="zmattlt" type="INT" languagemode="0"><![CDATA[
LVBLTPT ; IG 29/4/98 ; MVB Control code access for LT_LettersPatient  ; Compiled April 24, 2001 16:13:11 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$select^LVBLTPT(ROWID)
 ; $$open^LVBLTPT(par)
 ; $$fetch^LVBLTPT(par)
 ; $$close^LVBLTPT()
 ; $$insert^LVBLTPT(par)
 ; $$update^LVBLTPT(ROWID)
 ; $$delete^LVBLTPT(ROWID)
 ; $$getdata^LVBLTPT(Letter,vistsRID,visRID,docRID,compRID,urRID)
 ; $$create^LVBLTPT(Letter)
 ;
 
 ; Insert the data
insert(par) D pre K PLIST(1) s PLIST(0)=$g(par)
 d %0Co
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ; Update the data
update(ROWID) D pre
 d %0Do
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 Q SQLCODE
 ; Delete the data
delete(ROWID) s ROWID=$g(ROWID)
 d %0Eo
 Q SQLCODE
 ; Open the cursor
open(par) s par=$g(par)
 d %LTPT00o
 Q 0
 ; Fetch the data
fetch(par) K PLIST s par=$g(par)
 d %0Go
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Close the cursor 
close() d %LTPT00c 
 q 0
 ; select data by code
select(ROWID) K PLIST
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; get all data for a letter
getdata(Letter,vistsRID,visRID,docRID,compRID,urRID,hospRID) n (Letter,vistsRID,visRID,docRID,compRID,urRID,hospRID,PLIST) k ^TMP($zn,$j)
 s Letter=$g(Letter),visRID=$g(visRID),vistsRID=$g(vistsRID),docRID=$g(docRID),compRID=$g(compRID),urRID=$g(urRID),hospRID=$g(hospRID)
 m ^TMP($zn,$j,1)=PLIST
 i $$open^LVBCTSLV(,"Y")
 f  q:$$fetch^LVBCTSLV(,"Y")  d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .i $l(PLIST(2)) s ^TMP($zn,$j,2,PLIST(2))=""
 i $$close^LVBCTSLV()
 s ^TMP($zn,$j,2,"DATE_TODAY")=$$extdate2^SSUTIL4(+$h)
 ; create list of requested tests
 s (list1,list2)=""
 i $d(^TMP($zn,$j,1)) s x="" f  s x=$o(^TMP($zn,$j,1,x)) q:x=""  d
 .s xTS=$p(^(x),"||",2) i '$$select^LVBCTTS(xTS,"Y") d
 ..s:$l(list1) list1=list1_" , " s list1=list1_$p(PLIST(3),$c(1))
 ..s:$l(list2) list2=list2_" , " s list2=list2_$p(PLIST(4),$c(1))
 i '$d(^TMP($zn,$j,1)),$l(vistsRID) d
 .s xTS=$p(vistsRID,"||",2) i '$$select^LVBCTTS(xTS,"Y") d
 ..s list1=$p(PLIST(3),$c(1)),list2=$p(PLIST(4),$c(1))
 s ^TMP($zn,$j,2,"TEST_REQUESTED_NAME")=list1
 s ^TMP($zn,$j,2,"TEST_REQUESTED_SYNONYM")=list2
 ; get visit testset details
 i $l(vistsRID),'$$select^LVBVISTS(vistsRID) d
 .s ^TMP($zn,$j,2,"TEST_PRIORITY")=$p(PLIST(13),$c(2),2)
 .s ^TMP($zn,$j,2,"TEST_AUTHORISED")=$p(PLIST(9),$c(2),2)
 .s ^TMP($zn,$j,2,"TEST_PATHOLOGIST")=$p(PLIST(10),$c(2),2)
 .s ^TMP($zn,$j,2,"TEST_DATE_AUTHORISED")=$$extdate2^SSUTIL4($p(PLIST(7),$c(1)))
 .i '$l(visRID) s visRID=$p(PLIST(1),"||")
 .i '$$select^LVBCTTS($p(PLIST(3),$c(1)),"Y") d
 ..s ^TMP($zn,$j,2,"TEST_NAME")=PLIST(3)
 ..i $l(PLIST(4)) s ^TMP($zn,$j,2,"TEST_SYNONYM")=PLIST(4)
 ..e  i $l(PLIST(5)) s ^TMP($zn,$j,2,"TEST_SYNONYM")=PLIST(5)
 ; get patients details
 i $l(visRID),'$$select^LVBEPVIS(visRID) d
 . ; if billing address does not exist set it as patient address
 .i '$l(PLIST(37)) f j=32:1:36 s PLIST(j+5)=PLIST(j)
 .i '$l(PLIST(42)) s PLIST(42)=$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3))
 .s ^TMP($zn,$j,2,"BILL_ADDR1")=PLIST(37)
 .s ^TMP($zn,$j,2,"BILL_ADDR2")=PLIST(38)
 .s ^TMP($zn,$j,2,"BILL_ADDR3")=PLIST(39)
 .s ^TMP($zn,$j,2,"BILL_ADDR4")=PLIST(40)_" "_PLIST(41)
 .s ^TMP($zn,$j,2,"BILL_NAME")=PLIST(42)
 .s ^TMP($zn,$j,2,"PAT_ADDR1")=PLIST(32)
 .s ^TMP($zn,$j,2,"PAT_ADDR2")=PLIST(33)
 .s ^TMP($zn,$j,2,"PAT_ADDR3")=PLIST(34)
 .s ^TMP($zn,$j,2,"PAT_ADDR4")=PLIST(35)_" "_PLIST(36)
 .s ^TMP($zn,$j,2,"PAT_NAME")=$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3))
 .s ^TMP($zn,$j,2,"PAT_GIVENNAME")=$p(PLIST(4),$c(1))
 .s ^TMP($zn,$j,2,"PAT_SURNAME")=$p(PLIST(3),$c(1))
 .s ^TMP($zn,$j,2,"PAT_TITLE")=$p(PLIST(7),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_SEX")=$p(PLIST(5),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_PAYCODE")=$p(PLIST(9),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_MEDICARE")=$p(PLIST(8),$c(1),1)
 .s ^TMP($zn,$j,2,"PAT_EPISODE")=$p(PLIST(2),$c(1))
 .s ^TMP($zn,$j,2,"PAT_DEBTOR")=$p(PLIST(20),$c(1))
 .s ^TMP($zn,$j,2,"PAT_WARD")=$p(PLIST(22),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_PRIORITY")=$p(PLIST(17),$c(1),2)
 .s ^TMP($zn,$j,2,"PAT_DOB")=$$extdate2^SSUTIL4($p(PLIST(6),$c(1)))
 .s x="" f j=1:1:$l($p(PLIST(68),$c(1))," ") s test=$p($p($p(PLIST(68),$c(1))," ",j),"x",1) d
 ..n (x,test)
 ..i $$select^LVBCTTS(test,"Y") q
 ..s x=$s($l(x):x_" ",1:"")_$s($l(PLIST(4)):PLIST(4),$l(PLIST(5)):PLIST(5),1:test)
 .s ^TMP($zn,$j,2,"PAT_TESTS")=x
 .s ^TMP($zn,$j,2,"PAT_CLN_NOTES")=$p(PLIST(53),$c(1))
 .s ^TMP($zn,$j,2,"PAT_RECEIVED_DATE")=$$extdate2^SSUTIL4($p(PLIST(61),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_COLLECTION_DATE")=$$extdate2^SSUTIL4($p(PLIST(12),$c(1)))
 .s ^TMP($zn,$j,2,"PAT_COLLECTION_TIME")=$$exttime^SSUTIL4($p(PLIST(13),$c(1)))
 .s copyto="" d
 ..n (copyto,visRID)
 ..i $$open^LVBVISDC(visRID)
 ..f  q:$$fetch^LVBVISDC(visRID)  d
 ...s docRID=$p(PLIST(3),$c(1)) i $$select^LVBCTDR(docRID,"Y") q
 ...s copyto=copyto_$s($l(copyto):",",1:"")_$$NameFormat^LVBCOM03("DR",$p(PLIST(26),$c(1),1),$p(PLIST(4),$c(1)),$p(PLIST(3),$c(1)))
 ...i $g(^TMP($zn,$j,2,"PAT_COPYTO_NAME"))="" d
 ....s ^TMP($zn,$j,2,"PAT_COPYTO_NAME")=$$NameFormat^LVBCOM03("DR",$p(PLIST(26),$c(1),1),$p(PLIST(4),$c(1)),$p(PLIST(3),$c(1)))
 ....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR")=$tr($p(PLIST(33),$c(1),1),"|"," ")
 ....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR1")=PLIST(9)
 ....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR2")=PLIST(10)
 ....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR3")=PLIST(11)
 ....s ^TMP($zn,$j,2,"PAT_COPYTO_ADDR4")=PLIST(12)_" "_PLIST(13)
 ....s ^TMP($zn,$j,2,"PAT_COPYTO_PROVIDER")=$p(PLIST(18),$c(1))
 ..i $$close^LVBVISDC()
 .s ^TMP($zn,$j,2,"PAT_COPYTO")=copyto
 .i '$l(docRID) s docRID=$p(PLIST(15),$c(1))
 .i '$l(urRID) s urRID=$p(PLIST(20),$c(1))
 ; get doctor details
 k DOC
 i $l(docRID),'$$select^LVBCTDR(docRID,"Y") m DOC=PLIST
 i $l(docRID),$p(docRID,"-")="xxx" d
 .k DOC f j=1:1:40 s DOC(j)=""
 .s DOC(3)=$p($p(docRID,"-",3,99),"^") f j=2:1:6 s DOC(j+7)=$p($p(docRID,"-",3,99),"^",j)
 i $d(DOC) d
 .s ^TMP($zn,$j,2,"DOC_ADDR1")=DOC(9)
 .s ^TMP($zn,$j,2,"DOC_ADDR2")=DOC(10)
 .s ^TMP($zn,$j,2,"DOC_ADDR3")=DOC(11)
 .s ^TMP($zn,$j,2,"DOC_ADDR4")=DOC(12)_" "_DOC(13)
 .s ^TMP($zn,$j,2,"DOC_NAME")=$$NameFormat^LVBCOM03("DR",$p(DOC(26),$c(1),1),DOC(4),DOC(3))
 .s ^TMP($zn,$j,2,"DOC_GIVENNAME")=$p(DOC(4),$c(1))
 .s ^TMP($zn,$j,2,"DOC_SURNAME")=$p(DOC(3),$c(1))
 .s ^TMP($zn,$j,2,"DOC_TITLE")=$p(DOC(26),$c(1),1)
 .s ^TMP($zn,$j,2,"DOC_PHONE1")=$p(DOC(5),$c(1))
 .s ^TMP($zn,$j,2,"DOC_PHONE2")=$p(DOC(6),$c(1))
 .s ^TMP($zn,$j,2,"DOC_PHONE3")=$p(DOC(7),$c(1))
 .s ^TMP($zn,$j,2,"DOC_POSTCODE")=$p(DOC(13),$c(1))
 .s ^TMP($zn,$j,2,"DOC_PROVIDER")=$p(DOC(18),$c(1))
 .s ^TMP($zn,$j,2,"DOC_INITIAL")=$e(DOC(4))_$e(DOC(3))
 .i '$l(compRID) s compRID=$p(DOC(20),$c(1))
 ; get ward details
 i $l(hospRID),'$$select^LVBCTHOS(hospRID,"Y") d
 .s ^TMP($zn,$j,2,"PL_ADDR1")=$p(PLIST(4),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR2")=$p(PLIST(5),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR3")=$p(PLIST(6),$c(1))
 .s ^TMP($zn,$j,2,"PL_ADDR4")=$p(PLIST(7),$c(1))_" "_$p(PLIST(8),$c(1))
 .s ^TMP($zn,$j,2,"PL_NAME")=$p(PLIST(3),$c(1))
 .s ^TMP($zn,$j,2,"PL_PHONE")=$p(DOC(9),$c(1))
 .s ^TMP($zn,$j,2,"PL_FAX")=$p(DOC(13),$c(1))
 .s ^TMP($zn,$j,2,"PL_POSTCODE")=$p(DOC(8),$c(1))
 ; get company details
 i $l(compRID),'$$select^LVBCTCO(compRID,"Y") d
 .s ^TMP($zn,$j,2,"COMP_ADDR1")=PLIST(6)
 .s ^TMP($zn,$j,2,"COMP_ADDR2")=PLIST(7)
 .s ^TMP($zn,$j,2,"COMP_ADDR3")=PLIST(8)
 .s ^TMP($zn,$j,2,"COMP_CODE")=PLIST(2)
 .s ^TMP($zn,$j,2,"COMP_NAME")=PLIST(3)
 ; get debtor details
 i $l(urRID),'$$select^LVBDEB(compRID) d
 .s ^TMP($zn,$j,2,"AMOUNT_OWING")=PLIST(3)
 .s ^TMP($zn,$j,2,"AMOUNT_TOTAL")=""
 k PLIST s (var,cnt)="" f  s var=$o(^TMP($zn,$j,2,var)) q:var=""  d
 .s cnt=cnt+1,PLIST(cnt)=var_$c(1)_^(var)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Pre-filing adjustments
pre q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 Q
 ;
 ; create list of outstanding patients for a letter
create(Letter) n (Letter) s Letter=$g(Letter),(Flag,End)=""
 i $l(Letter) d
 .s Start="" i '$$select^LVBLTMN(Letter) s Start=PLIST(3)
 .s End=$h i '$$select^LVBCTSL(Letter,"Y") s Wait=PLIST(4),End=$h-Wait,Flag=PLIST(7)
 .s date=Start f  s date=$o(^TEPIi("AUTHORISED",date)) q:date=""  q:date>End  d
 ..s vis="" f  s vis=$o(^TEPIi("AUTHORISED",date,vis)) q:vis=""  d
 ... ; already set to receive letter
 ...i '$$select^LVBLTPT(Letter_"||"_vis) q
 ... ; check if all test sets had been authorised
 ...s ok=1
 ...s ts="" f  s ts=$o(^TEPI(vis,1,ts)) q:ts=""  d  q:'ok
 ....s tscnt="" f  s tscnt=$o(^TEPI(vis,1,ts,tscnt)) q:tscnt=""  d  q:'ok
 .....i $$status^LVBVIS1(vis_"||"_ts_"||"_tscnt)'="A" s ok=0
 ...i 'ok q
 ... ; check patient details
 ...i $$select^LVBEPVIS(vis,"Y") q
 ...s doc=$p(PLIST(15),$c(1)) i '$l(doc) q
 ...s mrn=$p(PLIST(20),$c(1))
 ...i $$select^LVBCTDR(doc,"Y") q
 ... ; doctor should not receive letters
 ...i Flag="D",PLIST(27)'="Y" q
 ...i Flag="P",PLIST(31)'="Y" q
 ... ; check all test sets for the letter
 ...i $$open^LVBCTSLT(Letter,"Y")
 ...s found="" f  q:$$fetch^LVBCTSLT(Letter,"Y")  d  q:$l(found)
 ....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ....k TEST m TEST=PLIST
 ....i $$open^LVBCTSLR(TEST(1),"Y")
 ....s stop=0 f  q:$$fetch^LVBCTSLR(TEST(1),"Y")  d  q:$l(found)  q:stop
 .....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .....k RESULT m RESULT=PLIST
 ..... ; exclude T/S with waiting period
 .....i Wait,$l(RESULT(4)) d  q:stop
 ......s xd=date f  s xd=$o(^TDEB(mrn,xd)) q:xd=""  d  q:stop
 .......s xv="" f  s xv=$o(^TDEB(mrn,xd,0,xv)) q:xv=""  d  q:stop
 ........s ts="" f  s ts=$o(^TEPI(xv,1,ts)) q:ts=""  i (","_RESULT(4)_",")[(","_ts_",") s stop=1 q
 ..... ; check visit information
 .....s tscnt="" f  s tscnt=$o(^TEPI(vis,1,TEST(2),tscnt)) q:tscnt=""  d  q:$l(found)
 ...... ; check result
 ......w "1. ",vis," - ",$g(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2)))," - ",RESULT(3),!
 ......i $tr($g(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2))),"[]{}")=RESULT(3) s found=TEST(2)_"||"_tscnt d
 .......f j=1:1:$l(RESULT(4),",") s x=$p(RESULT(4),",",j) i $l(x),$d(^TEPI(vis,1,x)) s found="" q
 ...... ; check standard comments
 ......s x1=0 f  s x1=$o(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2),"REM",x1)) q:x1=""  d
 .......i $g(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2),"REM",x1))[("{"_RESULT(3)_"}") s found=TEST(2)_"||"_tscnt d
 ........ ; exclude T/S without waiting period
 ........i 'Wait f j=1:1:$l(RESULT(4),",") s x=$p(RESULT(4),",",j) i $l(x),$d(^TEPI(vis,1,x)) s found="" q
 .......i $g(^TEPI(vis,1,TEST(2),tscnt,"DATA",RESULT(2),"REM",x1))[("["_RESULT(3)_"]") s found=TEST(2)_"||"_tscnt d
 ........ ; exclude T/S without waiting period
 ........i 'Wait f j=1:1:$l(RESULT(4),",") s x=$p(RESULT(4),",",j) i $l(x),$d(^TEPI(vis,1,x)) s found="" q
 ....i $$close^LVBCTSLR()
 ...i $l(found) d
 .... ; save patient
 ....k PLIST s PLIST(2)=vis,PLIST(3)=+$h,PLIST(4)=$$user^MVBSSUSR()
 ....s PLIST=$o(PLIST(""),-1) i $$insert^LVBLTPT(Letter)
 .... ; save patient test/set
 ....k PLIST s PLIST(2)=$p(found,"||",1),PLIST(3)=$p(found,"||",2)
 ....s PLIST=$o(PLIST(""),-1) i $$insert^LVBLTPTT(Letter_"||"_vis)
 ...i $$close^LVBCTSLT()
 .i '$$select^LVBLTMN(Letter) d
 ..f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ..s PLIST(3)=End i $$update^LVBLTMN(Letter)
 q 0
 q
%0ABs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%LTPT00o s SQLCODE=$s($g(%LTPT00c):-101,1:0) q:SQLCODE'=0
 s %LTPT00c=1 k %LTPT00m
 s %LTPT00E=$zt,%LTPT00f=0,%LTPT00e=0,%LTPT00L=""
 s %LTPT00d(2)=$P(par,$C(1))
 s:%LTPT00d(2)="" %LTPT00d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %LTPT00d(1)=$g(%LTPT00d(2))
 i %LTPT00d(1)="" g %0ABdun
 s %LTPT00d(5)=""
%0ABk1 s %LTPT00d(5)=$o(^TTLT(%LTPT00d(1),%LTPT00d(5)))
 i %LTPT00d(5)="" g %0ABdun
 s %LTPT00n=$g(^TTLT(%LTPT00d(1),%LTPT00d(5)))
 s %LTPT00d(6)=$p(%LTPT00n,"\",1) s %LTPT00d(7)=$p(%LTPT00n,"\",2)
 s %LTPT00d(4)=(%LTPT00d(1))_"||"_(%LTPT00d(5))
 
 s %val=$P(%LTPT00d(6),$C(1)) d %0ABs1:%val'="" s $P(%LTPT00d(6),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %LTPT00f=%LTPT00f+1 s %LTPT00c=10 q
%LTPT00f i '$g(%LTPT00c) s SQLCODE=-102 q
 i %LTPT00c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%LTPT00c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %LTPT00c=100 q
%LTPT00c i '$g(%LTPT00c) s SQLCODE=-102 q
 k %LTPT00c,%LTPT00d,%LTPT00e,%LTPT00E,%LTPT00f,%LTPT00l,%LTPT00L,%LTPT00n,%LTPT00r,%LTPT00R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%LTPT00E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co n %insert,icol,ir
 f icol=0:1:4 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt3001("1")
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTLT(%mmmsqld(4),%mmmsqld(5)))
 e  g %0DBdun
 k %data,%edit
 f icol=0:1:4 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt3001(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTLT(%mmmsqld(3),%mmmsqld(4)))
 e  g %0EBdun
 d delete^mt3001(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0EBdun 
%0EAdun 
 q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Go d %LTPT00f q:SQLCODE'=0
 s PLIST(0)=%LTPT00d(1),PLIST(1)=%LTPT00d(4),PLIST(2)=%LTPT00d(5),PLIST(3)=%LTPT00d(6),PLIST(4)=%LTPT00d(7)
 q
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(9)=$p($g(%mmmsqld(3)),"||",1,1),PLIST(2)=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(9)'="",PLIST(2)'="",$d(^TTLT(%mmmsqld(9),PLIST(2)))
 e  g %0IBdun
 s %mmmsqln=$g(^TTLT(%mmmsqld(9),PLIST(2)))
 s PLIST(3)=$p(%mmmsqln,"\",1) s PLIST(4)=$p(%mmmsqln,"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 
 s %val=$P(PLIST(3),$C(1)) d %0ABs1:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
