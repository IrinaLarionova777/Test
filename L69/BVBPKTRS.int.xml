<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBPKTRS" type="INT" languagemode="0"><![CDATA[
BVBPKTRS        ; MVB Control data access for BB_PackTransactionsSplit   ; Compiled May 22, 2000 13:24:43 for Cache for Windows
 ; SP 9/11/95 
 ; 
 ; supported calls: 
 ; 
 ; $$open^BVBPKTRS(parentID) 
 ; $$fetch^BVBPKTRS(parentID) 
 ; $$close^BVBPKTRS() 
 ; 
 ; $$select^BVBPKTRS(RowID) 
 ; $$insert^BVBPKTRS(parentID) 
 ; $$update^BVBPKTRS(RowID) 
 ; $$delete^BVBPKTRS(RowID) 
 ; 
declare  
 q 0 
 ; 
open(parentID)        d %PKTRS0o 
 q 0 
 ; 
fetch(parentID)       n j 
 K PLIST 
 d %0Co 
 s PLIST=$o(PLIST(""),-1) 
 ; 
 ; Adjust fields 
 i 'SQLCODE d adjust 
 ; 
 q SQLCODE 
 ; 
close() d %PKTRS0c 
 q 0 
 ; 
select(RowID)   ; 
 k PLIST 
 d %0Eo 
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust 
 q SQLCODE 
 ; 
insert(parentID)        ; 
 S PLIST(0)=parentID 
 S PLIST(1)="" 
 ; Remove Childsub as a new one will be created 
 K PLIST(2) 
 d %0Fo 
 ; 
 ; Now retrieve everything back to return to client 
 ; %ROWID is returned from INSERT 
 I 'SQLCODE q $$select(%ROWID) 
 ; 
 q SQLCODE 
 ; 
 ; 
update(RowID)   ; 
 i $d(addr) k PLIST(10) m PLIST(10)=addr  
 d %0Go 
 q SQLCODE 
 ; 
 ; 
delete(RowID)   ; 
 d %0Ho 
 q SQLCODE 
 ; 
 ; Adjust certain fields 
adjust n desref 
 q
 ; Get/Put multi line fields  
 ; getAddr called after select or fetch  
getdesc()      k PLIST  
 m PLIST=addr  
 k addr  
 q 0  
 ; setAddr called before insert or update  
putdesc()      k addr  
 m addr=PLIST  
 k PLIST  
 q 0  
 ;  
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%PKTRS0o s SQLCODE=$s($g(%PKTRS0c):-101,1:0) q:SQLCODE'=0
 s %PKTRS0c=1 k %PKTRS0m
 s %PKTRS0E=$zt,%PKTRS0f=0,%PKTRS0e=0,%PKTRS0L=""
 s %PKTRS0d(2)=$P(parentID,$C(1))
 s:%PKTRS0d(2)="" %PKTRS0d(2)=$E(parentID,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %PKTRS0d(1)=$g(%PKTRS0d(2))
 s %PKTRS0d(7)=$p($g(%PKTRS0d(1)),"||",1,1),%PKTRS0d(8)=$p($g(%PKTRS0d(1)),"||",2,2)
 i %PKTRS0d(7)="" g %0ABdun
 i %PKTRS0d(8)="" g %0ABdun
 s $P(%PKTRS0d(5),$C(1))=""
%0ABk1 s $P(%PKTRS0d(5),$C(1))=$o(^BB("PK",%PKTRS0d(7),"TRANS",%PKTRS0d(8),"SPL",$P(%PKTRS0d(5),$C(1))))
 i $P(%PKTRS0d(5),$C(1))="" g %0ABdun
 i 1>$P(%PKTRS0d(5),$C(1)),$P(%PKTRS0d(5),$C(1))=+$P(%PKTRS0d(5),$C(1)) g %0ABk1
 i $P(%PKTRS0d(5),$C(1))'=+$P(%PKTRS0d(5),$C(1)) g %0ABdun
 s %PKTRS0n=$g(^BB("PK",%PKTRS0d(7),"TRANS",%PKTRS0d(8),"SPL",$P(%PKTRS0d(5),$C(1))))
 s %PKTRS0d(6)=$p(%PKTRS0n,"^",1)
 s %PKTRS0d(4)=(%PKTRS0d(7))_"||"_(%PKTRS0d(8))_"||"_($P(%PKTRS0d(5),$C(1)))
 s %val=$P(%PKTRS0d(5),$C(1)) d %0ABs1:%val'="" s $P(%PKTRS0d(5),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %PKTRS0f=%PKTRS0f+1 s %PKTRS0c=10 q
%PKTRS0f i '$g(%PKTRS0c) s SQLCODE=-102 q
 i %PKTRS0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%PKTRS0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %PKTRS0c=100 q
%PKTRS0c i '$g(%PKTRS0c) s SQLCODE=-102 q
 k %PKTRS0c,%PKTRS0d,%PKTRS0e,%PKTRS0E,%PKTRS0f,%PKTRS0l,%PKTRS0L,%PKTRS0n,%PKTRS0r,%PKTRS0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%PKTRS0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %PKTRS0f q:SQLCODE'=0
 s PLIST(0)=%PKTRS0d(1),PLIST(1)=%PKTRS0d(4),PLIST(2)=%PKTRS0d(5),PLIST(3)=%PKTRS0d(6)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(8)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(9)=$p($g(%mmmsqld(3)),"||",2,2),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$P(PLIST(2),$C(1))'="",$d(^BB("PK",%mmmsqld(8),"TRANS",%mmmsqld(9),"SPL",$P(PLIST(2),$C(1))))
 i '$t
 e  i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1))
 i  g %0EBdun
 s %mmmsqln=$g(^BB("PK",%mmmsqld(8),"TRANS",%mmmsqld(9),"SPL",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %insert,icol,ir
 f icol=0:1:3 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1281("1")
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2),$P(%mmmsqld(6),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$P(%mmmsqld(6),$C(1))'="",$d(^BB("PK",%mmmsqld(4),"TRANS",%mmmsqld(5),"SPL",$P(%mmmsqld(6),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(6),$C(1)),$P(%mmmsqld(6),$C(1))=+$P(%mmmsqld(6),$C(1))
 i  g %0GBdun
 k %data,%edit
 f icol=0:1:3 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1281(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(2)),"||",3,3)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^BB("PK",%mmmsqld(3),"TRANS",%mmmsqld(4),"SPL",$P(%mmmsqld(5),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(5),$C(1)),$P(%mmmsqld(5),$C(1))=+$P(%mmmsqld(5),$C(1))
 i  g %0HBdun
 d delete^mt1281(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
