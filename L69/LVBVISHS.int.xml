<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISHS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISHS ; IG 6/5/98 ; LVB Control data access for VISHS EP_VisitHistory
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISHS(par)
 ; $$update^LVBVISHS(ROWID)
 ; $$select^LVBVISHS(ROWID)
 ; $$delete^LVBVISHS(ROWID)
 ; $$open^LVBVISHS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVISHS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVISHS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBVISHS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVISHS()
 ;
  ;---&sql(DECLARE VISHS CURSOR FOR SELECT * FROM EP_VisitHistory
   ;---         WHERE VISHS_ParRef = :par ORDER BY VISHS_Order DESC)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN VISHS)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISHS0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH VISHS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 s ss=0
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d  q:ss>15000
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 .s ss=ss+$l(^TMP($zn,$j,cnt))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE VISHS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISHS0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitHistory WHERE VISHS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) K PLIST(1) d pre("N")
 s PLIST(2)=$o(^TEPI(par,"HISTORY",""),-1)+1
  ;---&sql(INSERT INTO EP_VisitHistory VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) s RowID=$g(RowID) d pre("Y")
  ;---&sql(UPDATE EP_VisitHistory VALUES :PLIST() WHERE VISHS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM EP_VisitHistory WHERE VISHS_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 f  q:$g(PLIST(10))'["  "  s PLIST(10)=$p(PLIST(10),"  ",1)_" "_$p(PLIST(10),"  ",2,999)
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(PLIST(5))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$selrow^MVBSSUSR(plist(5),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(5)=X k plist
 q
 ;
 q
%VISHS0o s $zt="%VISHS0E" s SQLCODE=$s($g(%VISHS0c):-101,1:0) q:SQLCODE'=0  s %VISHS0d(15)=0 s %VISHS0d(16)=0,%VISHS0d(17)=""
 s %VISHS0d(12)=$g(par)
 s %VISHS0c=1 q
%VISHS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISHS0c,%VISHS0d,%VISHS0E,%VISHS0l,%VISHS0n,%VISHS0R,%VISHS0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISHS0d(1)=%VISHS0d(12)
 i %VISHS0d(1)="" g %0ABdun
 s %VISHS0d(3)=" "
%0ABk1 s %VISHS0d(3)=$zp(^TEPI(%VISHS0d(1),"HISTORY",%VISHS0d(3)))
 i %VISHS0d(3)="" g %0ABdun
 s %VISHS0d(23)=$g(^TEPI(%VISHS0d(1),"HISTORY",%VISHS0d(3)))
 s %VISHS0d(4)=$p(%VISHS0d(23),"\",1) s %VISHS0d(5)=$p(%VISHS0d(23),"\",2) s %VISHS0d(6)=$p(%VISHS0d(23),"\",3) s %VISHS0d(7)=$p(%VISHS0d(23),"\",4) s %VISHS0d(8)=$p(%VISHS0d(23),"\",5) s %VISHS0d(9)=$p(%VISHS0d(23),"\",6) s %VISHS0d(10)=$p(%VISHS0d(23),"\",7) s %VISHS0d(11)=$p(%VISHS0d(23),"\",8)
 s %VISHS0d(2)=(%VISHS0d(1))_"||"_(%VISHS0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISHS0d(2),"||",1),"HISTORY",$p(%VISHS0d(2),"||",2))#"S":$zu(115,4) i $t { s %VISHS0d(16)=1,%VISHS0d(17)=$name(^TEPI($p(%VISHS0d(2),"||",1),"HISTORY",$p(%VISHS0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitHistory for RowID value: "_%VISHS0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISHS0d(14)=$p(%VISHS0d(2),"||"),%VISHS0d(3)=$p(%VISHS0d(2),"||",2)
 i %VISHS0d(14)'="",%VISHS0d(3)'="",$d(^TEPI(%VISHS0d(14),"HISTORY",%VISHS0d(3)))
 e  g %0ACdun
 s %VISHS0d(29)=$g(^TEPI(%VISHS0d(14),"HISTORY",%VISHS0d(3)))
 s %VISHS0d(4)=$p(%VISHS0d(29),"\",1) s %VISHS0d(5)=$p(%VISHS0d(29),"\",2) s %VISHS0d(6)=$p(%VISHS0d(29),"\",3) s %VISHS0d(7)=$p(%VISHS0d(29),"\",4) s %VISHS0d(8)=$p(%VISHS0d(29),"\",5) s %VISHS0d(9)=$p(%VISHS0d(29),"\",6) s %VISHS0d(10)=$p(%VISHS0d(29),"\",7) s %VISHS0d(11)=$p(%VISHS0d(29),"\",8)
 s %VISHS0d(1)=$p(%VISHS0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISHS0d(15)=%VISHS0d(15)+1,%ROWCOUNT=%VISHS0d(15),%ROWID=%VISHS0d(2),%VISHS0c=10 q
%VISHS0f i '$g(%VISHS0c) { s SQLCODE=-102 q  } i %VISHS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISHS0d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISHS0d(15),%VISHS0c=100 q  } g %0Afirst:%VISHS0c=1
%0ACdun i $zu(115,2)=1,$g(%VISHS0d(16))=1 { l -@%VISHS0d(17) s %VISHS0d(16)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISHS0d(15),SQLCODE=100,%VISHS0c=100 q
%VISHS0c i '$g(%VISHS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISHS0d(15)),1:0)
 i $zu(115,2)=1,$g(%VISHS0d(16))=1 { l -@%VISHS0d(17) } k %VISHS0c,%VISHS0d,%VISHS0E,%VISHS0l,%VISHS0n,%VISHS0R,%VISHS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISHS0c=100 q
%0Do d %VISHS0f q:SQLCODE'=0
 s PLIST(0)=%VISHS0d(1),PLIST(1)=%VISHS0d(2),PLIST(2)=%VISHS0d(3),PLIST(3)=%VISHS0d(4),PLIST(4)=%VISHS0d(5),PLIST(5)=%VISHS0d(6),PLIST(6)=%VISHS0d(7),PLIST(7)=%VISHS0d(8),PLIST(8)=%VISHS0d(9),PLIST(9)=%VISHS0d(10),PLIST(10)=%VISHS0d(11)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(16)=0,%mmmsqld(17)=""
 s %mmmsqld(13)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(13)
 s %mmmsqld(15)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(15)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(15),"HISTORY",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(23)=$g(^TEPI(%mmmsqld(15),"HISTORY",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4) s PLIST(7)=$p(%mmmsqld(23),"\",5) s PLIST(8)=$p(%mmmsqld(23),"\",6) s PLIST(9)=$p(%mmmsqld(23),"\",7) s PLIST(10)=$p(%mmmsqld(23),"\",8)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),"HISTORY",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TEPI($p(PLIST(1),"||",1),"HISTORY",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitHistory for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(15)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(15)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(15),"HISTORY",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(29)=$g(^TEPI(%mmmsqld(15),"HISTORY",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"\",1) s PLIST(4)=$p(%mmmsqld(29),"\",2) s PLIST(5)=$p(%mmmsqld(29),"\",3) s PLIST(6)=$p(%mmmsqld(29),"\",4) s PLIST(7)=$p(%mmmsqld(29),"\",5) s PLIST(8)=$p(%mmmsqld(29),"\",6) s PLIST(9)=$p(%mmmsqld(29),"\",7) s PLIST(10)=$p(%mmmsqld(29),"\",8)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:10 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitHistory.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),"HISTORY",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(13)=$$%getlock^User.EPVisitHistory.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),"HISTORY",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:10 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitHistory.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitHistory.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitHistory.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.EPVisitHistory.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),"HISTORY",%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(12)=$$%getlock^User.EPVisitHistory.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),"HISTORY",%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.EPVisitHistory.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitHistory.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitHistory.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.EPVisitHistory.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
