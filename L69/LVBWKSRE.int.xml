<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBWKSRE" type="INT" languagemode="0" generated="1"><![CDATA[
LVBWKSRE ; IG 11/5/98 ; LVB Control data access for WKSRE WS_WorkSheetRequestEpis
 ;
 ; supported calls:
 ;
 ; $$insert^LVBWKSRE(par)
 ; $$update^LVBWKSRE(ROWID)
 ; $$select^LVBWKSRE(ROWID)
 ; $$delete^LVBWKSRE(ROWID)
 ; $$open^LVBWKSRE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBWKSRE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBWKSRE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBWKSRE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBWKSRE()
 ; $$move^LVBWKSRE(row)
 ; $$add^LVBWKSRE(ws,wsno,epis,seq)
 ; $$results^LVBWKSRE(ws,wsno,continue,epis)
 ; $$next^LVBWKSRE(ws,wsno,vtsRID,Flag)
 ; $$back^LVBWKSRE(ws,wsno,vtsRID,Flag)
 ; $$flag^LVBWKSRE(ws,wsno,vtsRID,Flag)
 ;
  ;---&sql(DECLARE WKSRE CURSOR FOR SELECT * FROM WS_WorkSheetRequestEpis
   ;---         WHERE WKSRE_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN WKSRE)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %WKSRE0o
 q 0
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH WKSRE INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j,1)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j,1)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,1,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,1)
 q 0
 ;
close() n SQLCODE
  ;---&SQL(CLOSE WKSRE)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %WKSRE0c
 q 0
 ;
select(RowID) s RowID=$g(RowID) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM WS_WorkSheetRequestEpis WHERE WKSRE_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO WS_WorkSheetRequestEpis VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE d  q $$select(%ROWID)
 .d events^LVBCOM01($p(%ROWID,"||",3),"WSA","Added to WS <"_$p(%ROWID,"||",1)_"-"_$p(%ROWID,"||",2)_"> by "_$$user^MVBSSUSR())
 .s xx=$p(%ROWID,"||",1,2) n (xx)
 .i '$$select^LVBWKSR(xx) s (PLIST(5),PLIST(7))="" i $$update^LVBWKSR(xx)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE WS_WorkSheetRequestEpis VALUES :PLIST() WHERE WKSRE_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
 s xx1=$p(RowID,"||",1),xx2=$p(RowID,"||",2),xx3=$p(RowID,"||",3)
 ; put patient to the pool for manual worksheet
 i $p($g(^TTAB("WS",xx1)),"\",15)="Y" d
 .s xx4="" f  s xx4=$o(^TWKS(xx1,2,xx2,"EP",xx3,"TEST",xx4)) q:xx4=""  d
 ..s xx5="" f  s xx5=$o(^TWKS(xx1,2,xx2,"EP",xx3,"TEST",xx4,xx5)) q:xx5=""  s ^TWKS(xx1,"POOL",xx3_"||"_xx4_"||"_xx5)=""
  ;---&sql(DELETE FROM WS_WorkSheetRequestEpis WHERE WKSRE_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 ; delete empty worksheets
 i $l(xx1),$l(xx2),$d(^TWKS(xx1,2,xx2))<10,$$delete^LVBWKSR(xx1_"||"_xx2)
 d events^LVBCOM01(xx3,"WSD","Deleted from WS <"_xx1_"-"_xx2_"> by "_$$user^MVBSSUSR())
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 i $g(PLIST(2))'="",$p($g(^TEPI($p(PLIST(2),$c(1)))),"\",44)'=9 d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBEPVIS(plist(2),"Y")
 .s X="" i 'SQLCODE d
 ..s X=PLIST(2)_$c(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))_$c(1)_$p(PLIST(5),$c(1),1)_$c(1)_PLIST(6)_$c(1)_PLIST(26)_$c(1)_$p(PLIST(15),$c(1))_$c(1)_$p(PLIST(17),$c(1))_$c(1)_$p(PLIST(20),$c(1))_$c(1)_$p(PLIST(86),$c(1))
 .k PLIST m PLIST=plist s PLIST(2)=X k plist
 i $g(PLIST(2))'="",$p($g(^TEPI($p(PLIST(2),$c(1)))),"\",44)=9 d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBBBP($p(plist(2),"_",2)_"||"_$p(plist(2),"_",3),"Y")
 .s X="" i 'SQLCODE d
 ..s str="" f j=1:1:PLIST s $p(str,$c(1),j)=PLIST(j)
 ..s X=plist(2)_$c(1)_str
 .k PLIST m PLIST=plist s PLIST(2)=X k plist
 q
 ; move episode to current worksheet
move(row) n (row) s row=$g(row)
 k ^TMP($zn,$j,"move") f j=1:1:3 s @("x"_j)=$p(row,"||",j)
 s x01="" f  s x01=$o(^TWKS(x1,2,x2,"EP",x3,"TEST",x01)) q:x01=""  d
 .s x02="" f  s x02=$o(^TWKS(x1,2,x2,"EP",x3,"TEST",x01,x02)) q:x02=""  s ^TMP($zn,$j,"move",x3_"||"_x01_"||"_x02)=""
 ; delete from existing worksheet
 i $$delete(row)
 ; add to current worksheet
 s ws=$p(row,"||",1)
 s xx="" f  s xx=$o(^TMP($zn,$j,"move",xx)) q:xx=""  i $$add(ws,,xx)
 k ^TMP($zn,$j,"move")
 q 0
new(ws,wsno) n (ws,wsno) s ws=$g(ws),wsno=$g(wsno),(auto,seq)=""
  ;---&SQL(SELECT WKS_AutomaticAllocation INTO :auto FROM WS_WorkSheet WHERE WKS_RowID=:ws)
   ;--- ** SQL PUBLIC Variables: SQLCODE, auto, ws
 Do %0No
 i $p(auto,$c(1))="Y" d
 .l +^TWKS(ws,2,wsno)
 .k xx s ep="" f  s ep=$o(^TWKS(ws,2,wsno,"EP",ep)) q:ep=""  s xx=$p(^(ep),"\") i $l(xx) s xx(xx)=""
 .f seq=1:1 q:'$d(xx(seq))
 .l -^TWKS(ws,2,wsno)
 q seq
 ; add episode to worksheet
add(ws,wsno,epis,seq) n (ws,wsno,epis,seq) s ws=$g(ws),wsno=$g(wsno),epis=$g(epis),seq=$g(seq)
 s type="P" i $l(epis),$p($g(^TEPI($p(epis,"||"))),"\",44)=9 s type="BBP"
 ; add all test for patient
 i $l(wsno) d
 .s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 ..s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $d(^TTAB("TS",ts,6,ws)) d
 ... ; check reason
 ...s reason=$p($g(^TEPI(epis,1,ts,cnt)),"\",52) i $l(reason),$p($g(^TTAB("CTR",reason)),"\",3)'="Y" q
 ...i '$l(seq) s seq=$$new(ws,wsno)
 ...k PLIST s PLIST(2)=epis,PLIST(3)=seq i $$insert(ws_"||"_wsno)
 ...k PLIST s PLIST(2)=ts,PLIST(3)=cnt i $$insert^LVBWKSRT(ws_"||"_wsno_"||"_epis)
 ; add specific test for patient
 i '$l(wsno) d
 .s site=$$site^LVBVISTS(epis)
 .k WKS i '$$select^LVBWKS(ws) m WKS=PLIST k PLIST
 .f j=1:1:WKS s WKS(j)=$p(WKS(j),$c(1))
 .i $l(WKS(30)),WKS(30)'=site q
 . ; check if patient is already on a worksheet
 .s (exist,wsno)="" f  s wsno=$o(^TEPI($p(epis,"||",1),"WS",ws,wsno)) q:wsno=""  d  q:exist
 ..k WKSR i '$$select^LVBWKSR(ws_"||"_wsno) m WKSR=PLIST k PLIST d
 ...f j=1:1:WKSR s WKSR(j)=$p(WKSR(j),$c(1))
 ...i WKSR(4)'="C" d
 ....i WKS(11)'="Y",WKSR(6)="" s exist=wsno q
 ....i $l(site),site=WKSR(6) s exist=wsno q
 ....i '$l(site),WKSR(6)="" s exist=wsno q
 . ; get worksheet number
 .i 'exist d
 ..d
 ...i '$l(site) d  q
 ....s wsno="" f  s wsno=$o(^TWKS(ws,5,wsno),-1) q:wsno=""  i type=$p(^TWKS(ws,2,wsno),"\",6) q
 ...i WKS(11)'="Y" d  q
 ....s wsno="" f  s wsno=$o(^TWKS(ws,5,wsno),-1) q:wsno=""  i type=$p(^TWKS(ws,2,wsno),"\",6) q
 ...i $l(site) d  q
 ....s wsno="" f  s wsno=$o(^TWKS(ws,4,site,wsno),-1) q:wsno=""  i type=$p(^TWKS(ws,2,wsno),"\",6) q
 ..k WKSR i wsno,'$$select^LVBWKSR(ws_"||"_wsno) m WKSR=PLIST k PLIST d
 ...f j=1:1:WKSR s WKSR(j)=$p(WKSR(j),$c(1))
 ...s exist=wsno
 .
 .i 'exist s wsno=$$next^LVBWKSR(ws),exist=""
 . ; check if worksheet is closed
 .i exist,WKSR(4)="C" s wsno=$$next^LVBWKSR(ws),exist=""
 . ; check if worksheet is full
 .i exist,'$d(^TWKS(ws,2,wsno,"EP",$p(epis,"||",1))),WKSR(3)'<$p(^TTAB("WS",ws),"\",3) s wsno=$$next^LVBWKSR(ws),exist=""
 .
 .i $l(ws),$l(wsno) d
 ..i '$d(^TWKS(ws,2,wsno)) d
 ...k PLIST s PLIST(2)=wsno i $$insert^LVBWKSR(ws)
 ..s ep=$p(epis,"||",1),ts=$p(epis,"||",2),cnt=$p(epis,"||",3)
 ..i $l(ep),$l(ts),$l(cnt) d
 ...i $d(^TWKS(ws,2,wsno)),'$d(^TWKS(ws,2,wsno,"EP",ep)) d
 ....i '$l(seq) s seq=$$new(ws,wsno)
 ....k PLIST s PLIST(2)=ep,PLIST(3)=seq i $$insert(ws_"||"_wsno)
 ...i $d(^TWKS(ws,2,wsno)),$d(^TWKS(ws,2,wsno,"EP",ep)),'$d(^TWKS(ws,2,wsno,"EP",ep,"TEST",ts,cnt)) d
 ....k PLIST s PLIST(2)=ts,PLIST(3)=cnt i $$insert^LVBWKSRT(ws_"||"_wsno_"||"_ep)
 .. ; for first episode in a ws setup user site
 ..i 'exist,'$$select^LVBWKSR(ws_"||"_wsno),$$update^LVBWKSR(ws_"||"_wsno)
 ; create entry for worksheets to print
 i $l(wsno) s ^TWKS(ws,3,wsno)=$g(^TWKS(ws,3,wsno))
 q 0
 ; Retrieve results for W/S
results(ws,wsno,continue,EPIS,QC) n (ws,wsno,continue,EPIS,QC,PLIST)
 s ws=$g(ws),wsno=$g(wsno),continue=$g(continue),EPIS=$g(EPIS),QC=$g(QC)
 i continue'="Y" k ^TMP($zn,$j,"results") d  k ^TMP($zn,$j,"results",1)
 .i $l(ws),$l(wsno) d
 .. ; get QC
 ..i '$$getall^LVBWKSRW(ws) f j1=1:1:PLIST d
 ...s seq=$p($p(PLIST(j1),$c(2),4),$c(28),2) i seq d
 ....i $l(EPIS) q
 ....I $l(QC),QC'=seq q
 ....s mat=$p($p($p(PLIST(j1),$c(2),4),$c(28),5),$c(1)),LIST="" d
 .....n (ws,mat,LIST)
 .....i '$$select^LVBQCM(mat) s lot=$p(PLIST(6),$c(1)) d
 ......s par=mat_"||"_lot_"||W||"_ws
 ......i $$open^LVBQCMTT(par)
 ......f  q:$$fetch^LVBQCMTT(par)  i $p(PLIST(3),$c(1))="Y" s LIST=LIST_$s($l(LIST):",",1:"")_$p(PLIST(2),$c(1))
 ......i $$close^LVBQCMTT()
 ....s xx=$c(1)_seq_$c(1)_$c(1)_$c(1)_$c(1)_"QC"_$c(1)_$p($p($p(PLIST(j1),$c(2),4),$c(28),3),$c(1))_$c(1)
 ....s xx=xx_$p($p($p(PLIST(j1),$c(2),4),$c(28),5),$c(1))_$c(1)_$p($p($p(PLIST(j1),$c(2),4),$c(28),6),$c(1))_$c(1)_LIST
 ....n PLIST
 ....s ^TMP($zn,$j,"results",1,seq,2,1)=xx i '$$getall^LVBWKSRQ(ws_"||"_wsno,seq) f j2=1:1:PLIST d
 .....s qc=$p($p(PLIST(j2),$c(2),4),$c(28),9)
 .....s xx=$p($p(PLIST(j2),$c(2),4),$c(28),1)_$c(1)_$p($p($p(PLIST(j2),$c(2),4),$c(28),1),"||",4)
 .....s xx=xx_$c(1)_$p($p(PLIST(j2),$c(2),4),$c(28),4)_$c(1)_$p($p(PLIST(j2),$c(2),4),$c(28),5)
 .....s xx=xx_$c(1)_$p($p(PLIST(j2),$c(2),4),$c(28),7)_$c(1)_$p($p(PLIST(j2),$c(2),4),$c(28),8)_$c(1,1,1)_qc
 .....i $l(qc) d
 ......n (qc,xx)
 ......i '$$select^LVBQCMTD(qc),$l(PLIST(7)) d
 .......s rule=$p(PLIST(7),$c(1)),par=$p(qc,"||",1,4),colour=""
 .......i '$l(colour) d
 ........i $$open^LVBQCMTR(par)
 ........f  q:$$fetch^LVBQCMTR(par)  i $p(PLIST(3),$c(1))=rule s colour=PLIST(6) q
 ........i $$close^LVBQCMTR()
 .......i '$l(colour),'$$select^LVBCTQCR(rule,"Y") s colour=PLIST(6)
 .......s xx=xx_$c(1)_colour
 .....s ^TMP($zn,$j,"results",1,seq,2,j2+1)=xx
 .. ; sort episodes
 ..k ^TMP($zn,$j,"sort")
 ..s otype=$p($g(^TTAB("WS",ws)),"\",8)
 ..s epis="" f  s epis=$o(^TWKS(ws,2,wsno,"EP",epis)) q:epis=""  d
 ...i $l(QC) q
 ...i $l(EPIS) s ok=0 d  i 'ok q
 ....f j=1:1:$l(EPIS,",") i $p($p(EPIS,",",j),"||")=epis s ok=1 q
 ...s seq=$p(^(epis),"\")
 ...i $l(seq) s ^TMP($zn,$j,"results",1,seq,1,epis)="" q
 ...s r=$g(^TEPI(epis)),coldat=$p(r,"\",10),coltim=$p(r,"\",11),entdat=$p(r,"\",8),enttim=$p(r,"\",9)
 ...s coldat=coldat_","_$e(100000+coltim,2,6),entdat=entdat_","_$e(100000+enttim,2,6)
 ...s sort=$s(otype="DT":coldat,otype="CR":entdat,1:epis)
 ...s ^TMP($zn,$j,"sort",sort,epis)=""
 ..s (sort,epis)="" f  s sort=$o(^TMP($zn,$j,"sort",sort)) q:sort=""  d
 ...f  s epis=$o(^TMP($zn,$j,"sort",sort,epis)) q:epis=""  d
 ....f j=1:1 i '$d(^TMP($zn,$j,"results",1,j)) s ^TMP($zn,$j,"results",1,j,1,epis)="" q
 ..k ^TMP($zn,$j,"sort")
 .. ; retrieve results
 ..s seq="" f  s seq=$o(^TMP($zn,$j,"results",1,seq)) q:seq=""  d
 ...s epis="" f  s epis=$o(^TMP($zn,$j,"results",1,seq,1,epis)) q:epis=""  d
 ....f j=15,17,20,86 s visit(j)=$$seldata^LVBEPVIS(epis,j)
 ....s lan=$$seldata^LVBCTDR(visit(15),46)
 ....s ts="" f  s ts=$o(^TWKS(ws,2,wsno,"EP",epis,"TEST",ts)) q:ts=""  d
 .....s tscnt="" f  s tscnt=$o(^TWKS(ws,2,wsno,"EP",epis,"TEST",ts,tscnt)) q:tscnt=""  d
 ......s rowid=epis_"||"_ts_"||"_tscnt
 ......i $l(EPIS) s ok=0 d  i 'ok q
 .......f j=1:1:$l(EPIS,",") i $p(EPIS,",",j)=rowid s ok=1 q
 ......s status=$$seldata^LVBVISTS(rowid,33) i '$$results^LVBVISTS(rowid,,ws_"||"_wsno,"Y",,,,lan) d
 .......s line=$o(^TMP($zn,$j,"results",1,seq,1,epis,1,ts,""),-1)+1,^TMP($zn,$j,"results",1,seq,1,epis,1,ts,line)=rowid
 .......s tscol=$o(^TMP($zn,$j,"results",1,seq,1,epis,0,line,""),-1)+1
 .......s ^TMP($zn,$j,"results",1,seq,1,epis,0,line,tscol,1)=rowid_$c(1)_seq_$c(1)_status_$c(1)_visit(17)_$c(1)_visit(20)_$c(1)_$s('visit(86):"N",1:"Y")_$c(1)_$$checkVTS^LVBVISTS(rowid)
 .......f j=1:1:PLIST s ^TMP($zn,$j,"results",1,seq,1,epis,0,line,tscol,j+1)=PLIST(j)
 ..s seq="" f  s seq=$o(^TMP($zn,$j,"results",1,seq)) q:seq=""  d
 ...s epis="" f  s epis=$o(^TMP($zn,$j,"results",1,seq,1,epis)) q:epis=""  d
 ....s line="" f  s line=$o(^TMP($zn,$j,"results",1,seq,1,epis,0,line)) q:line=""  d
 .....s tscol="" f  s tscol=$o(^TMP($zn,$j,"results",1,seq,1,epis,0,line,tscol)) q:tscol=""  d
 ......s (result,j)="" f  s j=$o(^TMP($zn,$j,"results",1,seq,1,epis,0,line,tscol,j)) q:j=""  s $p(result,$c(2),j)=^(j)
 ......k ^TMP($zn,$j,"results",1,seq,1,epis,0,line,tscol) s ^TMP($zn,$j,"results",1,seq,1,epis,0,line,tscol)=result
 .....s (result,tscol)="" f  s tscol=$o(^TMP($zn,$j,"results",1,seq,1,epis,0,line,tscol)) q:tscol=""  s $p(result,$c(28),tscol)=^(tscol)
 .....k ^TMP($zn,$j,"results",1,seq,1,epis,0,line) s ^TMP($zn,$j,"results",1,seq,1,epis,0,line)=result
 .....s cnt=$o(^TMP($zn,$j,"results",0,""),-1)+1 m ^TMP($zn,$j,"results",0,cnt)=^TMP($zn,$j,"results",1,seq,1,epis,0,line)
 ...i $d(^TMP($zn,$j,"results",1,seq,2)) d
 ....s (result,j)="" f  s j=$o(^TMP($zn,$j,"results",1,seq,2,j)) q:j=""  s $p(result,$c(2),j)=^(j)
 ....s cnt=$o(^TMP($zn,$j,"results",0,""),-1)+1 m ^TMP($zn,$j,"results",0,cnt)=result
 k PLIST
 s (sum,x)="" f cnt=1:1 s x=$o(^TMP($zn,$j,"results",0,x)) q:x=""  q:((sum+$l(^(x)))>15000)&(cnt>1)  s PLIST(cnt)=^(x),sum=sum+$l(^(x)) k ^(x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j,"results",0)):0,1:100)
 ; comes from the result entry
flag(ws,wsno,vtsRID,Flag) n (ws,wsno,vtsRID,PLIST) s ws=$g(ws),wsno=$g(wsno),vtsRID=$g(vtsRID),Flag=$G(Flag)
 k ^TMP($zn,$j,"flag")
 d seq(ws,wsno)
 s ^TMP($zn,$j,"flag",1)=$s($$next(ws,wsno,vtsRID,Flag,1):"N",1:"Y")
 s ^TMP($zn,$j,"flag",2)=$s($$back(ws,wsno,vtsRID,Flag,1):"N",1:"Y")
 k ^TMP($zn,$j,"seq")
 k PLIST m PLIST=^TMP($zn,$j,"flag") k ^TMP($zn,$j,"flag")
 s PLIST=$o(PLIST(""),-1)
 q 0
seq(ws,wsno) n (ws,wsno) s ws=$g(ws),wsno=$g(wsno) k ^TMP($zn,$j,"seq")
 s ep="" f  s ep=$o(^TWKS(ws,2,wsno,"EP",ep)) q:ep=""  d
 .s seq=$p(^(ep),"\",1) i '$l(seq) s seq=" "
 .s ^TMP($zn,$j,"seq",seq,ep)=""
 q
 ; comes from result entry
next(ws,wsno,vtsRID,Flag,SEQ) n (ws,wsno,vtsRID,Flag,SEQ,PLIST) s ws=$g(ws),wsno=$g(wsno),vtsRID=$g(vtsRID),Flag=$G(Flag),SEQ=$g(SEQ)
 i 'SEQ d seq(ws,wsno)
 s epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2),tscnt=$p(vtsRID,"||",3) k PLIST
 s EpisSeq="" i $l(epis) f  s EpisSeq=$o(^TMP($zn,$j,"seq",EpisSeq)) q:EpisSeq=""  i $d(^TMP($zn,$j,"seq",EpisSeq,epis)) q
 ; get next record
 s ok=0
 f  d:$l(EpisSeq)  q:ok  s EpisSeq=$o(^TMP($zn,$j,"seq",EpisSeq)) q:EpisSeq=""
 .f  d:$l(epis)  q:ok  s epis=$o(^TMP($zn,$j,"seq",EpisSeq,epis)) q:epis=""
 ..k tests s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  s TSSeq=$$seq^LVBCTTS(ts),tests(1,TSSeq,ts)="",tests(2,ts)=TSSeq
 ..s TSSeq="" i $l(test) s TSSeq=tests(2,test)
 ..f  d:$l(TSSeq)  q:ok  s TSSeq=$o(tests(1,TSSeq)) q:TSSeq=""
 ...f  d:$l(test)  q:ok  s test=$o(tests(1,TSSeq,test)) q:test=""
 ....f  s tscnt=$o(^TWKS(ws,2,wsno,"EP",epis,"TEST",test,tscnt)) q:tscnt=""  d  i ok q
 .....i $$status^LVBVIS1(epis_"||"_test_"||"_tscnt)="A" q
 .....i '$$check^LVBVIS5(epis_"||"_test_"||"_tscnt,Flag) s ok=1
 ; get result for the record
 s SQLCODE=100
 i ok s SQLCODE=$$select^LVBVIS5(epis_"||"_test_"||"_tscnt,"","",Flag)
 i 'SEQ k ^TMP($zn,$j,"seq")
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ; comes from result entry
back(ws,wsno,vtsRID,Flag,SEQ) n (ws,wsno,vtsRID,Flag,SEQ,PLIST) s ws=$g(ws),wsno=$g(wsno),vtsRID=$g(vtsRID),Flag=$G(Flag),SEQ=$g(SEQ)
 i 'SEQ d seq(ws,wsno)
 s epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2),tscnt=$p(vtsRID,"||",3) k PLIST
 s EpisSeq="" i $l(epis) f  s EpisSeq=$o(^TMP($zn,$j,"seq",EpisSeq)) q:EpisSeq=""  i $d(^TMP($zn,$j,"seq",EpisSeq,epis)) q
 ; get next record
 s ok=0
 f  d:$l(EpisSeq)  q:ok  s EpisSeq=$o(^TMP($zn,$j,"seq",EpisSeq),-1) q:EpisSeq=""
 .f  d:$l(epis)  q:ok  s epis=$o(^TMP($zn,$j,"seq",EpisSeq,epis),-1) q:epis=""
 ..k tests s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  s TSSeq=$$seq^LVBCTTS(ts),tests(1,TSSeq,ts)="",tests(2,ts)=TSSeq
 ..s TSSeq="" i $l(test) s TSSeq=tests(2,test)
 ..f  d:$l(TSSeq)  q:ok  s TSSeq=$o(tests(1,TSSeq),-1) q:TSSeq=""
 ...f  d:$l(test)  q:ok  s test=$o(tests(1,TSSeq,test),-1) q:test=""
 ....f  s tscnt=$o(^TWKS(ws,2,wsno,"EP",epis,"TEST",test,tscnt),-1) q:tscnt=""  d  i ok q
 .....i $$status^LVBVIS1(epis_"||"_test_"||"_tscnt)="A" q
 .....i '$$check^LVBVIS5(epis_"||"_test_"||"_tscnt,Flag) s ok=1
 ; get result for the record
 s SQLCODE=100
 i ok s SQLCODE=$$select^LVBVIS5(epis_"||"_test_"||"_tscnt,"","",Flag)
 i 'SEQ k ^TMP($zn,$j,"seq")
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
%WKSRE0o s $zt="%WKSRE0E" s SQLCODE=$s($g(%WKSRE0c):-101,1:0) q:SQLCODE'=0  s %WKSRE0d(9)=0 s %WKSRE0d(10)=0,%WKSRE0d(11)=""
 s %WKSRE0d(5)=$g(par)
 s %WKSRE0c=1 q
%WKSRE0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %WKSRE0c,%WKSRE0d,%WKSRE0E,%WKSRE0l,%WKSRE0n,%WKSRE0R,%WKSRE0Z q
%0Afirst 
 ; asl MOD# 2
 s %WKSRE0d(1)=%WKSRE0d(5)
 s %WKSRE0d(7)=$p(%WKSRE0d(1),"||"),%WKSRE0d(8)=$p(%WKSRE0d(1),"||",2)
 i %WKSRE0d(7)="" g %0ABdun
 i %WKSRE0d(8)="" g %0ABdun
 s %WKSRE0d(3)=""
%0ABk1 s %WKSRE0d(3)=$o(^TWKS(%WKSRE0d(7),2,%WKSRE0d(8),"EP",%WKSRE0d(3)))
 i %WKSRE0d(3)="" g %0ABdun
 s %WKSRE0d(20)=$g(^TWKS(%WKSRE0d(7),2,%WKSRE0d(8),"EP",%WKSRE0d(3)))
 s %WKSRE0d(4)=$p(%WKSRE0d(20),"\",1)
 s %WKSRE0d(2)=(%WKSRE0d(7))_"||"_(%WKSRE0d(8))_"||"_(%WKSRE0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TWKS($p(%WKSRE0d(2),"||",1),2,$p(%WKSRE0d(2),"||",2),"EP",$p(%WKSRE0d(2),"||",3))#"S":$zu(115,4) i $t { s %WKSRE0d(10)=1,%WKSRE0d(11)=$name(^TWKS($p(%WKSRE0d(2),"||",1),2,$p(%WKSRE0d(2),"||",2),"EP",$p(%WKSRE0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.WS_WorkSheetRequestEpis for RowID value: "_%WKSRE0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %WKSRE0d(7)=$p(%WKSRE0d(2),"||"),%WKSRE0d(8)=$p(%WKSRE0d(2),"||",2),%WKSRE0d(3)=$p(%WKSRE0d(2),"||",3)
 i %WKSRE0d(7)'="",%WKSRE0d(8)'="",%WKSRE0d(3)'="",$d(^TWKS(%WKSRE0d(7),2,%WKSRE0d(8),"EP",%WKSRE0d(3)))
 e  g %0ACdun
 s %WKSRE0d(29)=$g(^TWKS(%WKSRE0d(7),2,%WKSRE0d(8),"EP",%WKSRE0d(3)))
 s %WKSRE0d(4)=$p(%WKSRE0d(29),"\",1)
 s %WKSRE0d(1)=$p(%WKSRE0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %WKSRE0d(9)=%WKSRE0d(9)+1,%ROWCOUNT=%WKSRE0d(9),%ROWID=%WKSRE0d(2),%WKSRE0c=10 q
%WKSRE0f i '$g(%WKSRE0c) { s SQLCODE=-102 q  } i %WKSRE0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%WKSRE0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%WKSRE0d(9),%WKSRE0c=100 q  } g %0Afirst:%WKSRE0c=1
%0ACdun i $zu(115,2)=1,$g(%WKSRE0d(10))=1 { l -@%WKSRE0d(11) s %WKSRE0d(10)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%WKSRE0d(9),SQLCODE=100,%WKSRE0c=100 q
%WKSRE0c i '$g(%WKSRE0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%WKSRE0d(9)),1:0)
 i $zu(115,2)=1,$g(%WKSRE0d(10))=1 { l -@%WKSRE0d(11) } k %WKSRE0c,%WKSRE0d,%WKSRE0E,%WKSRE0l,%WKSRE0n,%WKSRE0R,%WKSRE0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %WKSRE0c=100 q
%0Do d %WKSRE0f q:SQLCODE'=0
 s PLIST(0)=%WKSRE0d(1),PLIST(1)=%WKSRE0d(2),PLIST(2)=%WKSRE0d(3),PLIST(3)=%WKSRE0d(4)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",PLIST(2)'="",$d(^TWKS(%mmmsqld(8),2,%mmmsqld(9),"EP",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(20)=$g(^TWKS(%mmmsqld(8),2,%mmmsqld(9),"EP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TWKS($p(PLIST(1),"||",1),2,$p(PLIST(1),"||",2),"EP",$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TWKS($p(PLIST(1),"||",1),2,$p(PLIST(1),"||",2),"EP",$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.WS_WorkSheetRequestEpis for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",PLIST(2)'="",$d(^TWKS(%mmmsqld(8),2,%mmmsqld(9),"EP",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(29)=$g(^TWKS(%mmmsqld(8),2,%mmmsqld(9),"EP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"\",1)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.WSWorkSheetRequestEpis.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TWKS(%mmmsqld(4),2,%mmmsqld(5),"EP",%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TWKS(%mmmsqld(4),2,%mmmsqld(5),"EP",%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.WSWorkSheetRequestEpis.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TWKS(%mmmsqld(3),2,%mmmsqld(4),"EP",%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TWKS(%mmmsqld(3),2,%mmmsqld(4),"EP",%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.WSWorkSheetRequestEpis.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.WSWorkSheetRequestEpis.T1(%mmmsqld(1)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(ws)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("WS",%mmmsqld(3)))
 e  g %0NBdun
 s %mmmsqld(12)=$g(^TTAB("WS",%mmmsqld(3)))
 s auto=$p(%mmmsqld(12),"\",29)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TTAB("WS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("WS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.WS_WorkSheet for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("WS",%mmmsqld(3)))
 e  g %0NCdun
 s %mmmsqld(17)=$g(^TTAB("WS",%mmmsqld(3)))
 s auto=$p(%mmmsqld(17),"\",29)
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
]]></Routine>
</Export>
