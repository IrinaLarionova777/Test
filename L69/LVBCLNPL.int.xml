<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCLNPL" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCLNPL ; IG 1/5/98 ; LVB Control data access for CLNPL CL_CollListNumberPLabels
 ;
 ; supported calls:
 ;
 ; $$save^LVBCLNPL(par)
 ; $$insert^LVBCLNPL(par)
 ; $$select^LVBCLNPL(ROWID,skip)
 ; $$open^LVBCLNPL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCLNPL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCLNPL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCLNPL(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCLNPL()
 ;
  ;---&sql(DECLARE CLNPL CURSOR FOR SELECT * FROM CL_CollListNumberPLabels
   ;---         WHERE CLNPL_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CLNPL)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CLNPL0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CLNPL INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CLNPL)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CLNPL0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CL_CollListNumberPLabels WHERE CLNPL_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&SQL(INSERT INTO CL_CollListNumberPLabels VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
save(par) n (par,PLIST) s par=$g(par)
  ;---&SQL(DELETE FROM CL_CollListNumberPLabels WHERE CLNPL_ParRef=:par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 Do %0Jo
 f j1=1:1:PLIST d
 .k plist s plist(0)=par f j2=2:1:$l(PLIST(j1),$c(1)) s plist(j2)=$p(PLIST(j1),$c(1),j2)
 .  ;---&sql(INSERT INTO CL_CollListNumberPLabels VALUES :plist())
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, plist
 . Do %0Lo
 q 0
 ;
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(PLIST(2))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTLB(plist(2))
 .s X="" i 'SQLCODE d
 ..s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(2)=X k plist
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 .s X="" f j=1:1:$l(plist(3),",") d
 ..s SQLCODE=$$selskip^LVBCTTS($p(plist(3),",",j))
 ..i 'SQLCODE s X=X_$s($l(X):",",1:"")_PLIST(4)
 .k PLIST m PLIST=plist s PLIST(4)=X k plist
 .s PLIST=$o(PLIST(""),-1)
 q
%CLNPL0o s $zt="%CLNPL0E" s SQLCODE=$s($g(%CLNPL0c):-101,1:0) q:SQLCODE'=0  s %CLNPL0d(10)=0 s %CLNPL0d(11)=0,%CLNPL0d(12)=""
 s %CLNPL0d(5)=$g(par)
 s %CLNPL0c=1 q
%CLNPL0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CLNPL0c,%CLNPL0d,%CLNPL0E,%CLNPL0l,%CLNPL0n,%CLNPL0R,%CLNPL0Z q
%0Afirst 
 ; asl MOD# 2
 s %CLNPL0d(1)=%CLNPL0d(5)
 s %CLNPL0d(7)=$p(%CLNPL0d(1),"||"),%CLNPL0d(8)=$p(%CLNPL0d(1),"||",2),%CLNPL0d(9)=$p(%CLNPL0d(1),"||",3)
 i %CLNPL0d(7)="" g %0ABdun
 i %CLNPL0d(8)="" g %0ABdun
 i %CLNPL0d(9)="" g %0ABdun
 s %CLNPL0d(3)=""
%0ABk1 s %CLNPL0d(3)=$o(^TTCL(%CLNPL0d(7),"LIST",%CLNPL0d(8),"PAT",%CLNPL0d(9),"LABEL",%CLNPL0d(3)))
 i %CLNPL0d(3)="" g %0ABdun
 s %CLNPL0d(4)=$g(^TTCL(%CLNPL0d(7),"LIST",%CLNPL0d(8),"PAT",%CLNPL0d(9),"LABEL",%CLNPL0d(3)))
 s %CLNPL0d(2)=(%CLNPL0d(7))_"||"_(%CLNPL0d(8))_"||"_(%CLNPL0d(9))_"||"_(%CLNPL0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTCL($p(%CLNPL0d(2),"||",1),"LIST",$p(%CLNPL0d(2),"||",2),"PAT",$p(%CLNPL0d(2),"||",3),"LABEL",$p(%CLNPL0d(2),"||",4))#"S":$zu(115,4) i $t { s %CLNPL0d(11)=1,%CLNPL0d(12)=$name(^TTCL($p(%CLNPL0d(2),"||",1),"LIST",$p(%CLNPL0d(2),"||",2),"PAT",$p(%CLNPL0d(2),"||",3),"LABEL",$p(%CLNPL0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CL_CollListNumberPLabels for RowID value: "_%CLNPL0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CLNPL0d(7)=$p(%CLNPL0d(2),"||"),%CLNPL0d(8)=$p(%CLNPL0d(2),"||",2),%CLNPL0d(9)=$p(%CLNPL0d(2),"||",3),%CLNPL0d(3)=$p(%CLNPL0d(2),"||",4)
 i %CLNPL0d(7)'="",%CLNPL0d(8)'="",%CLNPL0d(9)'="",%CLNPL0d(3)'="",$d(^TTCL(%CLNPL0d(7),"LIST",%CLNPL0d(8),"PAT",%CLNPL0d(9),"LABEL",%CLNPL0d(3)))
 e  g %0ACdun
 s %CLNPL0d(4)=$g(^TTCL(%CLNPL0d(7),"LIST",%CLNPL0d(8),"PAT",%CLNPL0d(9),"LABEL",%CLNPL0d(3)))
 s %CLNPL0d(1)=$p(%CLNPL0d(2),"||",1,3)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CLNPL0d(10)=%CLNPL0d(10)+1,%ROWCOUNT=%CLNPL0d(10),%ROWID=%CLNPL0d(2),%CLNPL0c=10 q
%CLNPL0f i '$g(%CLNPL0c) { s SQLCODE=-102 q  } i %CLNPL0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CLNPL0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CLNPL0d(10),%CLNPL0c=100 q  } g %0Afirst:%CLNPL0c=1
%0ACdun i $zu(115,2)=1,$g(%CLNPL0d(11))=1 { l -@%CLNPL0d(12) s %CLNPL0d(11)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CLNPL0d(10),SQLCODE=100,%CLNPL0c=100 q
%CLNPL0c i '$g(%CLNPL0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CLNPL0d(10)),1:0)
 i $zu(115,2)=1,$g(%CLNPL0d(11))=1 { l -@%CLNPL0d(12) } k %CLNPL0c,%CLNPL0d,%CLNPL0E,%CLNPL0l,%CLNPL0n,%CLNPL0R,%CLNPL0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CLNPL0c=100 q
%0Do d %CLNPL0f q:SQLCODE'=0
 s PLIST(0)=%CLNPL0d(1),PLIST(1)=%CLNPL0d(2),PLIST(2)=%CLNPL0d(3),PLIST(3)=%CLNPL0d(4)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(6)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),%mmmsqld(10)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",%mmmsqld(10)'="",PLIST(2)'="",$d(^TTCL(%mmmsqld(8),"LIST",%mmmsqld(9),"PAT",%mmmsqld(10),"LABEL",PLIST(2)))
 e  g %0FBdun
 s PLIST(3)=$g(^TTCL(%mmmsqld(8),"LIST",%mmmsqld(9),"PAT",%mmmsqld(10),"LABEL",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTCL($p(PLIST(1),"||",1),"LIST",$p(PLIST(1),"||",2),"PAT",$p(PLIST(1),"||",3),"LABEL",$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TTCL($p(PLIST(1),"||",1),"LIST",$p(PLIST(1),"||",2),"PAT",$p(PLIST(1),"||",3),"LABEL",$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CL_CollListNumberPLabels for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),%mmmsqld(9)=$p(PLIST(1),"||",2),%mmmsqld(10)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",%mmmsqld(10)'="",PLIST(2)'="",$d(^TTCL(%mmmsqld(8),"LIST",%mmmsqld(9),"PAT",%mmmsqld(10),"LABEL",PLIST(2)))
 e  g %0FCdun
 s PLIST(3)=$g(^TTCL(%mmmsqld(8),"LIST",%mmmsqld(9),"PAT",%mmmsqld(10),"LABEL",PLIST(2)))
 s PLIST(0)=$p(PLIST(1),"||",1,3)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CLCollListNumberPLabels.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(par)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(5)=$p(%mmmsqld(1),"||"),%mmmsqld(6)=$p(%mmmsqld(1),"||",2),%mmmsqld(7)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(5)="" g %0JBdun
 i %mmmsqld(6)="" g %0JBdun
 i %mmmsqld(7)="" g %0JBdun
 s %mmmsqld(4)=""
%0JBk1 s %mmmsqld(4)=$o(^TTCL(%mmmsqld(5),"LIST",%mmmsqld(6),"PAT",%mmmsqld(7),"LABEL",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0JBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(7))_"||"_(%mmmsqld(4))
 s %mmmsqld(21)=$$%getlock^User.CLCollListNumberPLabels.T1(%mmmsqld(3)) i '%mmmsqld(21) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(6)=$p(%mmmsqld(3),"||",2),%mmmsqld(7)=$p(%mmmsqld(3),"||",3),%mmmsqld(4)=$p(%mmmsqld(3),"||",4)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(4)'="",$d(^TTCL(%mmmsqld(5),"LIST",%mmmsqld(6),"PAT",%mmmsqld(7),"LABEL",%mmmsqld(4)))
 e  g %0JCdun
 s %mmmsqld(1)=$p(%mmmsqld(3),"||",1,3)
 d %delete^User.CLCollListNumberPLabels.T1(%mmmsqld(3),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(21)=1 %ReleaseLock^User.CLCollListNumberPLabels.T1(%mmmsqld(3)) g %0Jc
%0JCdun 
 d:%mmmsqld(21)=1 %ReleaseLock^User.CLCollListNumberPLabels.T1(%mmmsqld(3)) g:SQLCODE<0 %0Jc
 g %0JBk1
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(21))=1 %ReleaseLock^User.CLCollListNumberPLabels.T1(%mmmsqld(3)) g %0Jc
%0Lo n %i,icol,ir
 f icol=0:1:3 i $d(plist(icol)) s %i(icol)=plist(icol)
 s %ROWID=$$%insert^User.CLCollListNumberPLabels.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Lo
]]></Routine>
</Export>
