<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1231" type="INT" languagemode="0"><![CDATA[
mt1231  ; Compiled December 23, 1999 10:00:38 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1231(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0A^mt1231
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1231(+%check=1) i '%ok s SQLCODE=-104 q
winsert s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1231 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:28 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1231(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:28 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1232(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1231 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^BB("PK",%ROWID):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^BB("PK",%ROWID)
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^BB("PK",%edit(1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(2)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",1)=$g(%data(2))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",2)=$p($g(%data(3)),$c(1))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",3)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",4)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",5)=$g(%data(6))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",6)=$g(%data(8))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",7)=$p($g(%data(7)),$c(1))
 i $d(%edit(9)) s x=$g(%data(9)),^BB("PK",%data(1),"REM",0)=x d  
 . s irep=%edit(9) s:irep<x irep=x f irep=1:1:irep s:irep'>x ^(irep)=$g(%data(9,irep)) k:irep>x ^(irep)
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",8)=$g(%data(10))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",9)=$g(%data(11))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",10)=$g(%data(12))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",11)=$g(%data(13))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",12)=$p($g(%data(16)),$c(1))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",13)=$p($g(%data(17)),$c(1))
 i $d(%edit(14)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",14)=$p($g(%data(14)),$c(1))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",15)=$p($g(%data(15)),$c(1))
 i $d(%edit(18)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",16)=$p($g(%data(18)),$c(1))
 i $d(%edit(19)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",17)=$g(%data(19))
 i $d(%edit(20)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",18)=$g(%data(20))
 i $d(%edit(21)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",19)=$p($g(%data(21)),$c(1))
 i $d(%edit(22)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",20)=$p($g(%data(22)),$c(1))
 i $d(%edit(23)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",21)=$p($g(%data(23)),$c(1))
 i $d(%edit(24)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",22)=$g(%data(24))
 i $d(%edit(25)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",23)=$g(%data(25))
 i $d(%edit(26)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",24)=$g(%data(26))
 i $d(%edit(27)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",25)=$p($g(%data(27)),$c(1))
 i $d(%edit(28)) s:'($d(tempn)#2) tempn=$g(^BB("PK",%data(1))) s $p(tempn,"^",26)=$p($g(%data(28)),$c(1))
 s:$d(tempn)#2 ^BB("PK",%data(1))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(22)):$p(%edit(22),$c(1),1),1:$p($g(%data(22)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(2)'=""
 i  i $d(^BB("PK",0,"DateRec",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("PK",0,"DateRec",sn(1),sn(2)) k ^BB("PK",0,"DateRec",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$p($g(%data(22)),$c(1),1) i sn(1)'="" s sn(2)=$g(%data(1)) i sn(2)'=""
 e  g map1dun
 s ^BB("PK",0,"DateRec",sn(1),sn(2))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(13)):%edit(13),1:$g(%data(13))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(2)'=""
 i  i $d(^BB("PK",0,"Epis",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("PK",0,"Epis",sn(1),sn(2)) k ^BB("PK",0,"Epis",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(13)) i sn(1)'="" s sn(2)=$g(%data(1)) i sn(2)'=""
 e  g map2dun
 s ^BB("PK",0,"Epis",sn(1),sn(2))=tempn
map2dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(18)):$p(%edit(18),$c(1),1),1:$p($g(%data(18)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(8)):%edit(8),1:$g(%data(8))) i sn(2)'="" s sn(3)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(3)'=""
 i  i $d(^BB("PK",0,"ExpDate",sn(1),sn(2),sn(3))) s:'$g(tupkill) node=0,tempn=^BB("PK",0,"ExpDate",sn(1),sn(2),sn(3)) k ^BB("PK",0,"ExpDate",sn(1),sn(2),sn(3))
 i '$g(tupkill) s sn(1)=$p($g(%data(18)),$c(1),1) i sn(1)'="" s sn(2)=$g(%data(8)) i sn(2)'="" s sn(3)=$g(%data(1)) i sn(3)'=""
 e  g map3dun
 s ^BB("PK",0,"ExpDate",sn(1),sn(2),sn(3))=tempn
map3dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(2)'=""
 i  i $d(^BB("PK",0,"ID",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("PK",0,"ID",sn(1),sn(2)) k ^BB("PK",0,"ID",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(2)) i sn(1)'="" s sn(2)=$g(%data(1)) i sn(2)'=""
 e  g map4dun
 s ^BB("PK",0,"ID",sn(1),sn(2))=tempn
map4dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(19)):%edit(19),1:$g(%data(19))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(2)'=""
 i  i $d(^BB("PK",0,"Pat",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("PK",0,"Pat",sn(1),sn(2)) k ^BB("PK",0,"Pat",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(19)) i sn(1)'="" s sn(2)=$g(%data(1)) i sn(2)'=""
 e  g map5dun
 s ^BB("PK",0,"Pat",sn(1),sn(2))=tempn
map5dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(5)):%edit(5),1:$g(%data(5))) i sn(1)'="" s sn(2)=$s($d(%edit(18)):$p(%edit(18),$c(1),1),1:$p($g(%data(18)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(3)'=""
 i  i $d(^BB("PK",0,"Stat",sn(1),sn(2),sn(3))) s:'$g(tupkill) node=0,tempn=^BB("PK",0,"Stat",sn(1),sn(2),sn(3)) k ^BB("PK",0,"Stat",sn(1),sn(2),sn(3))
 i '$g(tupkill) s sn(1)=$g(%data(5)) i sn(1)'="" s sn(2)=$p($g(%data(18)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(1)) i sn(3)'=""
 e  g map6dun
 s ^BB("PK",0,"Stat",sn(1),sn(2),sn(3))=tempn
map6dun q
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(%data(1),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0BBdun
 s %mmmsqld(4)=""
%0BBk1 s %mmmsqld(4)=$o(^BB("PK",%mmmsqld(1),"PROD",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0BBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0BBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0BBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1261(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0BBk1
%0BBdun 
%0BAdun 
 q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(%data(1),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0CBdun
 s %mmmsqld(4)=""
%0CBk1 s %mmmsqld(4)=$o(^BB("PK",%mmmsqld(1),"PEOP",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0CBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0CBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0CBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1241(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0CBk1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(%data(1),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^BB("PK",%mmmsqld(1),"RES",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0DBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0DBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2621(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(%data(1),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0EBdun
 s %mmmsqld(4)=""
%0EBk1 s %mmmsqld(4)=$o(^BB("PK",%mmmsqld(1),"TRANS",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0EBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0EBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0EBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1271(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0EBk1
%0EBdun 
%0EAdun 
 q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d %0Bo^mt1231  s %didit=1
  d %0Co^mt1231  s %didit=1
  d %0Do^mt1231  s %didit=1
  d %0Eo^mt1231  s %didit=1
trgdoneA q  ;  trigger done
%0FBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q  ;  Code for update (get old values) of table: BB_Pack
%0FBs2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,2) q
%0FBs3 s %val=$$timeext^%qarzdt(%val,1) q
%0FBs4 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q
%0FBs5 s %val=$$timeext^%qarzdt(%val,2) q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(%rowid,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=$g(%mmmsqld(3))
 i %dataold(1)'="",$d(^BB("PK",%dataold(1)))
 i '$t
 e  i 1>%dataold(1),%dataold(1)=+%dataold(1)
 i  g %0FBdun
 s %mmmsqln=$g(^BB("PK",%dataold(1)))
 s %dataold(2)=$p(%mmmsqln,"^",1) s %dataold(3)=$p(%mmmsqln,"^",2) s %dataold(4)=$p(%mmmsqln,"^",3) s %dataold(5)=$p(%mmmsqln,"^",4) s %dataold(6)=$p(%mmmsqln,"^",5) s %dataold(7)=$p(%mmmsqln,"^",7) s %dataold(8)=$p(%mmmsqln,"^",6) s %dataold(10)=$p(%mmmsqln,"^",8) s %dataold(11)=$p(%mmmsqln,"^",9)
 s %dataold(12)=$p(%mmmsqln,"^",10) s %dataold(13)=$p(%mmmsqln,"^",11) s %dataold(14)=$p(%mmmsqln,"^",14) s %dataold(15)=$p(%mmmsqln,"^",15) s %dataold(16)=$p(%mmmsqln,"^",12) s %dataold(17)=$p(%mmmsqln,"^",13) s %dataold(18)=$p(%mmmsqln,"^",16) s %dataold(19)=$p(%mmmsqln,"^",17) s %dataold(20)=$p(%mmmsqln,"^",18)
 s %dataold(21)=$p(%mmmsqln,"^",19) s %dataold(22)=$p(%mmmsqln,"^",20) s %dataold(23)=$p(%mmmsqln,"^",21) s %dataold(24)=$p(%mmmsqln,"^",22) s %dataold(25)=$p(%mmmsqln,"^",23) s %dataold(26)=$p(%mmmsqln,"^",24) s %dataold(27)=$p(%mmmsqln,"^",25) s %dataold(28)=$p(%mmmsqln,"^",26)
 k %dataold(9) s %dataold(9)=$g(^BB("PK",%dataold(1),"REM",0)) s:'%dataold(9) %dataold(9)="" f %irep=1:1:%dataold(9) s %dataold(9,%irep)=$g(^(%irep))
 
 s %val=$P(%dataold(7),$C(1)) d %0FBs1:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(3),$C(1)) d %0FBs2:%val'="" s $P(%dataold(3),$C(1),2)=%val
 s %val=$P(%dataold(16),$C(1)) d %0FBs2:%val'="" s $P(%dataold(16),$C(1),2)=%val
 s %val=$P(%dataold(14),$C(1)) d %0FBs2:%val'="" s $P(%dataold(14),$C(1),2)=%val
 s %val=$P(%dataold(18),$C(1)) d %0FBs2:%val'="" s $P(%dataold(18),$C(1),2)=%val
 s %val=$P(%dataold(17),$C(1)) d %0FBs3:%val'="" s $P(%dataold(17),$C(1),2)=%val
 s %val=$P(%dataold(15),$C(1)) d %0FBs3:%val'="" s $P(%dataold(15),$C(1),2)=%val
 s %val=$P(%dataold(21),$C(1)) d %0FBs1:%val'="" s $P(%dataold(21),$C(1),2)=%val
 s %val=$P(%dataold(22),$C(1)) d %0FBs4:%val'="" s $P(%dataold(22),$C(1),2)=%val
 s %val=$P(%dataold(23),$C(1)) d %0FBs3:%val'="" s $P(%dataold(23),$C(1),2)=%val
 s %val=$P(%dataold(27),$C(1)) d %0FBs4:%val'="" s $P(%dataold(27),$C(1),2)=%val
 s %val=$P(%dataold(28),$C(1)) d %0FBs5:%val'="" s $P(%dataold(28),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
getold(%dataold) g %0Fo
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"BB_Pack"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="BB_Pack Row ID" d %mdiag(%oper,-106,"Fld Int","Req","PACK_RowId","",%ok) s %msg=%ok,%ok=0
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table BB_Pack
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %val=$i(^BB("PK",0)) g inrwide
 g rowiderr
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1231 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 g insarr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt1232
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde17 ; external to internal conversion code
 s %ok=1 s %val=$$timeint^%qarzdt(%val,1) s:%val<0 %ok=0
 q
fde22 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,1,"") s:%val<0 %ok=0
 q
fde28 ; external to internal conversion code
 s %ok=1 s %val=$$timeint^%qarzdt(%val,2) s:%val<0 %ok=0
 q
fde3 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde7 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_Autologus","",$g(%msg))
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=3 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_CollectionDate","",$g(%msg))
 f %irep=1:1:$g(%data(9)) i $d(%data(9,%irep)),$p(%data(9,%irep),$c(1))="",$p(%data(9,%irep),$c(1),2)'="" s %val=$p(%data(9,%irep),$c(1),2) s %data(9,%irep)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=16 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_DateAllocation","",$g(%msg))
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=14 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_DateTransfusion","",$g(%msg))
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 i $d(%data(18)),$p(%data(18),$c(1))="",$p(%data(18),$c(1),2)'="" s %val=$p(%data(18),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=18 d etiok
 . s %msg="" d fde3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_ExpiryDate","",$g(%msg))
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) s %data(11)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(19)),$p(%data(19),$c(1))="",$p(%data(19),$c(1),2)'="" s %val=$p(%data(19),$c(1),2) s %data(19)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) s %data(8)=%val
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(17)),$p(%data(17),$c(1))="",$p(%data(17),$c(1),2)'="" s %val=$p(%data(17),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=17 d etiok
 . s %msg="" d fde17 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_TimeAllocation","",$g(%msg))
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=15 d etiok
 . s %msg="" d fde17 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_TimeTransfusion","",$g(%msg))
 i $d(%data(20)),$p(%data(20),$c(1))="",$p(%data(20),$c(1),2)'="" s %val=$p(%data(20),$c(1),2) s %data(20)=%val
 i $d(%data(21)),$p(%data(21),$c(1))="",$p(%data(21),$c(1),2)'="" s %val=$p(%data(21),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=21 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_Authorised","",$g(%msg))
 i $d(%data(22)),$p(%data(22),$c(1))="",$p(%data(22),$c(1),2)'="" s %val=$p(%data(22),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=22 d etiok
 . s %msg="" d fde22 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_DateReceive","",$g(%msg))
 i $d(%data(23)),$p(%data(23),$c(1))="",$p(%data(23),$c(1),2)'="" s %val=$p(%data(23),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=23 d etiok
 . s %msg="" d fde17 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_TimeReceive","",$g(%msg))
 i $d(%data(24)),$p(%data(24),$c(1))="",$p(%data(24),$c(1),2)'="" s %val=$p(%data(24),$c(1),2) s %data(24)=%val
 i $d(%data(25)),$p(%data(25),$c(1))="",$p(%data(25),$c(1),2)'="" s %val=$p(%data(25),$c(1),2) s %data(25)=%val
 i $d(%data(26)),$p(%data(26),$c(1))="",$p(%data(26),$c(1),2)'="" s %val=$p(%data(26),$c(1),2) s %data(26)=%val
 i $d(%data(27)),$p(%data(27),$c(1))="",$p(%data(27),$c(1),2)'="" s %val=$p(%data(27),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=27 d etiok
 . s %msg="" d fde22 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_LastDate","",$g(%msg))
 i $d(%data(28)),$p(%data(28),$c(1))="",$p(%data(28),$c(1),2)'="" s %val=$p(%data(28),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=28 d etiok
 . s %msg="" d fde28 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","PACK_LastTime","",$g(%msg))
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv10 ; DO validation and additional validation code
 n nval s nval=%val d %0Lo
  i SQLCODE'=0 s %ok=0
 q
%0LAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0LBs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Lerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0LAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(1),$C(1))=$g(%mmmsqld(2))
 i $P(%mmmsqld(1),$C(1))'="",$d(^CT("BG",$P(%mmmsqld(1),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(1),$C(1)),$P(%mmmsqld(1),$C(1))=+$P(%mmmsqld(1),$C(1))
 i  g %0LBdun
 
 s %val=$P(%mmmsqld(1),$C(1)) d %0LBs1:%val'="" s $P(%mmmsqld(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Lc
%0LBdun 
%0LAdun 
%0Lc q
%0Lerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0LAdun
fdv12 ; DO validation and additional validation code
 n nval s nval=%val d %0No
  i SQLCODE'=0 s %ok=0
 q
%0No n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Nerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0LAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(1),$C(1))=$g(%mmmsqld(2))
 i $P(%mmmsqld(1),$C(1))'="",$d(^CT("LO",$P(%mmmsqld(1),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(1),$C(1)),$P(%mmmsqld(1),$C(1))=+$P(%mmmsqld(1),$C(1))
 i  g %0NBdun
 
 s %val=$P(%mmmsqld(1),$C(1)) d %0LBs1:%val'="" s $P(%mmmsqld(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Nc
%0NBdun 
%0NAdun 
%0Nc q
%0Nerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0NAdun
fdv13 ; DO validation and additional validation code
 n nval s nval=%val d %0Po
  i SQLCODE'=0 s %ok=0
 q
%0Po n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Perr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(nval,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(2)),"||",1,1)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0PBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Pc
%0PBdun 
%0PAdun 
%0Pc q
%0Perr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0PAdun
fdv3 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv6 ; DO validation and additional validation code
 n nval s nval=%val d %0Ro
  i SQLCODE'=0 s %ok=0
 q
%0Ro n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Rerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(nval,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(2)),"||",1,1)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(4)'="",$d(^TDEB(%mmmsqld(4)))
 e  g %0RBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Rc
%0RBdun 
%0RAdun 
%0Rc q
%0Rerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0RAdun
fdv7 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv8 ; DO validation and additional validation code
 n nval s nval=%val d %0To
  i SQLCODE'=0 s %ok=0
 q
%0To n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Terr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0LAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(1),$C(1))=$g(%mmmsqld(2))
 i $P(%mmmsqld(1),$C(1))'="",$d(^CT("PR",$P(%mmmsqld(1),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(1),$C(1)),$P(%mmmsqld(1),$C(1))=+$P(%mmmsqld(1),$C(1))
 i  g %0TBdun
 
 s %val=$P(%mmmsqld(1),$C(1)) d %0LBs1:%val'="" s $P(%mmmsqld(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Tc
%0TBdun 
%0TAdun 
%0Tc q
%0Terr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0TAdun
uniq1(%rowid,%unique) n SQLCODE,%val d %0Uo q SQLCODE=100
 q
%0Uo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Uerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(%unique,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(3))
 i %mmmsqld(1)'="",$d(^BB("PK",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0UBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Uc
%0UBdun 
%0UAdun 
%0Uc q
%0Uerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0UAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="PACK_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","PACK_RowId","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_Autologus","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_BloodGroup_DR","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_CollectionDate","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_CurrentLoc_DR","",$g(%msg))
 i $d(%edit(16)),%data(16)'=%edit(16) s %icol=16 s %val=$p(%data(16),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_DateAllocation","",$g(%msg))
 i $d(%edit(14)),%data(14)'=%edit(14) s %icol=14 s %val=$p(%data(14),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_DateTransfusion","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_Episode_DR","",$g(%msg))
 i $d(%edit(18)),%data(18)'=%edit(18) s %icol=18 s %val=$p(%data(18),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_ExpiryDate","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_Patient_DR","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_ProdCode_DR","",$g(%msg))
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","PACK_RowId","",$g(%msg))
 g continue^mt1232
 g ^mt1232
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
