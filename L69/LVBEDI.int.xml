<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBEDI" type="INT" languagemode="0" generated="1"><![CDATA[
LVBEDI ; EDI - module
 Q
START ;
 S $ZT="CLOSE^"_$ZN
 S EDIPATH=$$EDIPATH()
 S %="\" I $E(EDIPATH,$L(EDIPATH))'=% S EDIPATH=EDIPATH_%
 S EDIPIN=EDIPATH ;_"IN"_%
 K ^TMP($J,$ZN)
 ; MS-DOS based system
 S FILE=EDIPATH_"EDI.TXT"
 I $ZF(-1,"DIR "_EDIPIN_"*.inh /B > "_FILE)
 ;b
 O FILE:("RS"::$C(10)_$C(13)):2 e  q
 F  U FILE R X S xFILE=$P(X," ",$L(X," ")) S ^TMP($J,$ZN,"DIR",xFILE)=""
CLOSE C FILE
 ;
 ;b        
 S xFILE=""
 f  S xFILE=$O(^TMP($J,$ZN,"DIR",xFILE)) q:xFILE=""  D ONEFILE
 K ^TMP($J,$ZN)
 Q
ONEFILE ;PROCESS ONE FILE
 N (xFILE,EDIPIN,EDIPATH)
 s ext=$p(xFILE,".",2)
 ;only numeric extension
 q:ext=""
 ;i ext'?.N q
 q:" INH inh "'[ext
 K ^TMP($J,$ZN,"LOG")
 S $ZT="ERR^"_$ZN 
 S FILE=EDIPIN_xFILE
 S LOGFILE=$P(xFILE,".")_".LOG"
 O FILE:("RS"::$C(10)_$C(13)):1 E  Q
 S CNT=0
 F  U FILE R S S CNT=CNT+1,^TMP($J,$ZN,"FILE",FILE,CNT)=S
CLOSE1 C FILE
 D MOVE(FILE,"process")
 S IND11="" F  S IND11=$O(^TMP($J,$ZN,"FILE",FILE,IND11)) Q:IND11=""  S S=^(IND11) D
 .S REC=$E(S,1,3) I " OSA TUN PYL NAY TUT "[(" "_REC_" ") D
 ..;IF RECORD TUN - ID INFO RECEIVED, DELETE PREVIOUS NAY INFO
 ..I REC="TUN" F IND="PYL","NAY","TUT" K REC(IND)
 ..D @REC S REC(REC)=S
 D LOGFILE
 ;B
 Q
OSA ;PARTY IDENTIFICATION
 S QUALIF=$E(S,4,6),ID=$E(S,8) 
 ;S HOSP=$E(S,21)
 ;s HOSP=$$ALPHAUP^SSUTIL4($e(xFILE,1))
 s HOSP="E"
 s HOSP="Z"
 I '$D(^THOS(HOSP)) D LOG("HOSPITAL IS NOT DEFINED IN CODE TABLE "_HOSP)
 ;STORE EDI INFO FOR FUTURE USE (SEND BACK)
 I HOSP'="",QUALIF'="" S OSA1(HOSP,"OSA",QUALIF)=S
 Q
TUN ;IDENTIFICATION INFO
 ;RECORD OSA MUST BE RECEIVED FIRST
 Q:'$D(REC("OSA"))
 ;
 S NAME=$E(S,4,53),ID=$E(S,54,64),SEX=$E(S,65),DOC=$E(S,147,176)
 S SEX=$$SEX(HOSP,SEX),DOC=$$A(DOC),DOC=$$DOC(HOSP,DOC)
 S NAME=$$A(NAME),ID=HOSP_$$A(ID)
 ;b
 Q
PYL ;ADDITIONAL REQUEST INFO
 ;RECORD TUN MUST BE RECEIVED FIRST
 Q:'$D(REC("TUN"))
 S PHONE=$E(S,95,114),PHONE=$$A(PHONE)
 Q
NAY ;SAMPLE INFO
 ;RECORD TUN MUST BE RECEIVED FIRST
 ;B
 Q:'$D(REC("TUN"))
 S SAMPLE=$E(S,4,13),SAMPLE=$$A(SAMPLE),DATE=$E(S,14,21),TIME=$E(S,22,25),SPEC=$E(S,26,75),ADMDATE=$$DATE(DATE),ADMTIME=$$TIME(TIME)
 S SPEC=$$A(SPEC)
 S SPEC=$$SPEC(HOSP,SPEC)
 ;S SPEC="VC"
 D INSSAMPLE
 ;STORE EDI INFO FOR FUTURE USE (SEND BACK)
 I HOSP'="",ID'="",SAMPLE'="" D
 .S ^THOS1(HOSP,"NAY",ID_"|"_SAMPLE)=S
 .S ^THOS1(HOSP,"TUN",ID_"|"_SAMPLE)=$G(REC("TUN"))
 .S ^THOS1(HOSP,"PYL",ID_"|"_SAMPLE)=$G(REC("PYL"))
 .S QUAL="" F  S QUAL=$O(OSA1(HOSP,"OSA",QUAL)) Q:QUAL=""  S S=OSA1(HOSP,"OSA",QUAL),^THOS1(HOSP,"OSA",ID_"|"_SAMPLE_"|"_QUAL)=S
 Q
TUT ;TEST INFO
 ;RECORD NAY MUST BE RECEIVED FIRST
 ;b
 Q:'$D(REC("NAY"))
 S TEST=$E(S,13,22),TEST=$$A(TEST)
 S TEST=$$TESTSET(HOSP,TEST)
 D INSTEST
 Q
A(X) F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,$L(X)-1)
 q X
MOVE(FILE,DIR) N (FILE,DIR,EDIPATH)
 Q
 ;b
 S FILEN=""
 I FILE["/" S FILEN="/"_$P(FILE,"/",$L(FILE,"/"))
 I FILE["\" S FILEN="\"_$P(FILE,"\",$L(FILE,"\"))
 ;b        
 ; MS-DOS based system
 I $ZF(-1,"move "_FILE_" "_EDIPATH_DIR_FILEN)
 Q
INSSAMPLE ;INSERT/UPDATE SAMPLE
 Q:HOSP=""  Q:ID=""  Q:SAMPLE=""
 S ID=$$UPPER^SSUTIL4(ID)
 S SAMPLE=$$ALPHAUP^SSUTIL4(SAMPLE)
 S EXIST='$$select^LVBHOSP(HOSP_"||"_ID_"||"_SAMPLE)      
 K PLIST
 F J=1:1:24 S PLIST(J)=""
 I NAME["," S GIVNAME=$P(NAME,",",$L(NAME,",")),SURNAME=$P(NAME,",",1,$L(NAME,",")-1)
 E  S (GIVNAME,SURNAME)=NAME
 ;b
 S (ID,PLIST(2))=$$UPPER^SSUTIL4(ID) ;DEBTOR NUMBER
 S (SAMPLE,PLIST(3))=$$ALPHAUP^SSUTIL4(SAMPLE) ;HOSPITAL VISIT NUMBER
 S PLIST(4)=GIVNAME ;GIVEN NAME
 S PLIST(5)=SURNAME ;SURNAME
 S PLIST(8)=SEX ;SPECIES
 I $D(REC("PYL")) S PLIST(13)=PHONE ;HOME PHONE
 S PLIST(17)=DOC ;REFERRING DOCTOR
 S PLIST(21)=ADMDATE ;ADMISSION DATE
 S PLIST(22)=ADMTIME ;ADMISSION TIME
 ;B
 ;B
 I EXIST D
 .S ERR=$$update^LVBHOSP(HOSP_"||"_ID_"||"_SAMPLE)      
 I 'EXIST D
 .S ERR=$$insert^LVBHOSP(HOSP)
 I ERR D LOG("FAILED TO CREATE EPISODE "_ID_" "_SAMPLE_" "_$G(%msg)_" "_$g(%mdiag(1))_" SQLCODE "_ERR) q
 ;insert specimen
 i $G(SPEC)'="" D
 .S EXIST='$$select^LVBHOSPS(HOSP_"||"_ID_"||"_SAMPLE_"||"_SPEC) Q:EXIST
 .K PLIST S PLIST(2)=SPEC,ERR=$$insert^LVBHOSPS(HOSP_"||"_ID_"||"_SAMPLE)      
 .I ERR D LOG("FAILED TO CREATE SPECIMEN "_ID_" "_SAMPLE_" "_SPEC_$G(%msg)_" "_$g(%mdiag(1))_" SQLCODE "_ERR) q
 ;b
 Q
INSTEST ;INSERT TEST SET
 ;B
 ;s TEST="C11001"
 K PLIST
 S PLIST(2)=TEST
 S ERR=$$insert^LVBHOSPT(HOSP_"||"_ID_"||"_SAMPLE)
 ;b:ERR
 I ERR D LOG("FAILED TO CREATE TEST SET "_ID_" "_SAMPLE_" "_TEST_" "_$G(%msg)_" "_$g(%mdiag(1))_" SQLCODE "_ERR)
 ;b:ERR
 Q
DATE(DATE) ;CONVERT DATE FROM YYYYMMDD TO $H
 Q $$intdate^SSUTIL4(DATE)
TIME(TIME) ;convert time HHMM to $h
 q $$inttime^SSUTIL4($e(TIME,1,2)_":"_$e(TIME,3,4))
EDIPATH() ;get edi path
 ;Q "\CACHEDATA\LABDATA\EDI"
 q $p($g(^CF("SM",1)),"^",30)
SEX(HOSP,SEX) ;get labtrak species code
 Q:HOSP="" SEX
 Q:SEX="" SEX
 I '$D(^THOS(HOSP,"SEX H-L",SEX)) D LOG("SEX IS NOT DEFINED IN CODE TABLE "_SEX)
 Q $P($G(^THOS(HOSP,"SEX H-L",SEX)),"\")
DOC(HOSP,DOC) ;get labtrak doctor code
 Q:HOSP="" DOC
 Q:DOC="" DOC
 I '$D(^THOS(HOSP,"DOCTOR H-L",DOC)) D LOG("DOCTOR IS NOT DEFINED IN CODE TABLE "_DOC)
 Q $P($G(^THOS(HOSP,"DOCTOR H-L",DOC)),"\")
TESTSET(HOSP,TS) ;get labtrak species code
 Q:HOSP="" TS
 Q:TS="" TS
 I '$D(^THOS(HOSP,"TESTSET H-L",TS)) D LOG("TEST SET IS NOT DEFINED IN CODE TABLE "_TS)
 Q $P($G(^THOS(HOSP,"TESTSET H-L",TS)),"\")
SPEC(HOSP,SPEC) ;get labtrak specimen code
 Q:HOSP="" SPEC
 Q:SPEC="" SPEC
 I '$D(^THOS(HOSP,"SPEC H-L",SPEC)) D LOG("SPECIMEN IS NOT DEFINED IN CODE TABLE "_SPEC)
 Q $P($G(^THOS(HOSP,"SPEC H-L",SPEC)),"\")
EXTESTSET(HOSP,TS) ;get external species code
 Q:HOSP="" TS
 Q:TS="" TS
 Q $P($G(^THOS(HOSP,"TESTSET L-H",TS)),"\")
LOG(TEXT) ;LOG ERRORS
 N (TEXT) 
 ;B
 S IND=$O(^TMP($J,$ZN,"LOG",""),-1)+1,^TMP($J,$ZN,"LOG",IND)=TEXT
 Q
ERR i $ZE["ENDOFFILE" G CLOSE1 
 S IND0=$O(^ZERR(""),-1)+1,^ZERR(IND0)=$ZE
 D LOG("ERROR : "_$ZE) 
 Q
LOGFILE       
 I $D(^TMP($J,$ZN,"LOG")) D
 .S FILE=EDIPIN_LOGFILE O FILE:"WNS"
 .S IND=0 F  S IND=$O(^TMP($J,$ZN,"LOG",IND)) Q:IND=""  S S=^(IND) D
 ..U FILE W S,!
 .C FILE
 Q
]]></Routine>
</Export>
