<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBDFR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBDFR ; IG 29/4/98 ;MVB Control code access for DF_DynamicFunctionRequest
 ;
 ; supported calls:
 ;
 ; $$select^LVBDFR(ROWID,skip,user)
 ; $$open^LVBDFR(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBDFR(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBDFR(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBDFR(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBDFR()
 ; $$insert^LVBDFR()
 ; $$update^LVBDFR(ROWID)
 ; $$delete^LVBDFR(ROWID,Comments)
 ; $$getall^LVBDFR(debtor,df,closed)
 ;
  ;---&SQL(DECLARE DFR CURSOR FOR SELECT * FROM DF_DynamicFunctionRequest
   ;---         WHERE DFR_Debtor_DR = :debtor
   ;---         AND ((DFR_DynamicFunction_DR = :df) OR (:df IS NULL))
   ;---         AND ((DFR_Closed = :closed) OR (:closed IS NULL))
   ;---         )
   ;--- ** SQL PUBLIC Variables: SQLCODE, closed, debtor, df
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO DF_DynamicFunctionRequest VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y")
  ;---&SQL(UPDATE DF_DynamicFunctionRequest VALUES :PLIST() WHERE DFR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM DF_DynamicFunctionRequest WHERE DFR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9) s debtor=$g(debtor),df=$g(df),closed=$g(closed)
  ;---&SQL(OPEN DFR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DFR0o
 q 0
 ; fetch the data
fetch(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9) k PLIST s debtor=$g(debtor),df=$g(df),closed=$g(closed)
  ;---&SQL(FETCH DFR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j) s debtor=$g(debtor),df=$g(df),closed=$g(closed)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(debtor,df,closed) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(debtor,df,closed,p3,p4,p5,p6,p7,p8,p9) n (debtor,df,closed,PLIST) k ^TMP($zn,$j)
 s debtor=$g(debtor),df=$g(df),closed=$g(closed)
 i $$open(debtor,df,closed)
 f cnt=1:1 q:$$fetch(debtor,df,closed)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE DFR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DFR0c
 q 0
 ; select data by code
select(ROWID,skip,user) s skip=$g(skip),user=$g(user) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM DF_DynamicFunctionRequest WHERE DFR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("10","11")
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("10")
 N plist,I,J,SQLCODE,X,j F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDF(plist(3),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 q
getall(debtor,df,closed) n (debtor,df,closed,PLIST) k ^TMP($zn,$j) s debtor=$g(debtor),df=$g(df),closed=$g(closed)
 i $$open(debtor,df,closed)
 f cnt=1:1 q:$$fetch(debtor,df,closed)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%DFR0o s $zt="%DFR0E" s SQLCODE=$s($g(%DFR0c):-101,1:0) q:SQLCODE'=0  s %DFR0d(21)=0 s %DFR0d(22)=0,%DFR0d(23)=""
 s %DFR0d(11)=$g(debtor),%DFR0d(12)=$g(df),%DFR0d(13)=$g(df),%DFR0d(14)=$g(closed),%DFR0d(15)=$g(closed)
 s %DFR0d(18)=$zu(28,%DFR0d(14),7)
 s %DFR0c=1 q
%DFR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %DFR0c,%DFR0d,%DFR0E,%DFR0l,%DFR0n,%DFR0R,%DFR0Z q
%0Afirst 
 ; asl MOD# 2
 s %DFR0d(2)=%DFR0d(11)
 i %DFR0d(2)="" g %0ABdun
 s %DFR0d(3)=""
%0ABk1 s %DFR0d(3)=$o(^TEPIi("DFT",%DFR0d(2),%DFR0d(3)))
 i %DFR0d(3)="" g %0ABdun
 i '((%DFR0d(3)=%DFR0d(12))||(%DFR0d(13)="")) g %0ABk1
 s %DFR0d(4)=""
%0ABk2 s %DFR0d(4)=$o(^TEPIi("DFT",%DFR0d(2),%DFR0d(3),%DFR0d(4)))
 i %DFR0d(4)="" g %0ABk1
 s %DFR0d(5)=""
%0ABk3 s %DFR0d(5)=$o(^TEPIi("DFT",%DFR0d(2),%DFR0d(3),%DFR0d(4),%DFR0d(5)))
 i %DFR0d(5)="" g %0ABk2
 s %DFR0d(31)=$g(^TEPIi("DFT",%DFR0d(2),%DFR0d(3),%DFR0d(4),%DFR0d(5)))
 s %DFR0d(6)=$p(%DFR0d(31),"\",1) s %DFR0d(7)=$p(%DFR0d(31),"\",2) s %DFR0d(8)=$p(%DFR0d(31),"\",3) s %DFR0d(9)=$p(%DFR0d(31),"\",4)
 s %DFR0d(10)="" f %irep=1:1:$g(^TEPIi("DFT",%DFR0d(2),%DFR0d(3),%DFR0d(4),%DFR0d(5),"REM",0)) s $li(%DFR0d(10),%irep)=$g(^(%irep))
 s %DFR0d(1)=(%DFR0d(2))_"||"_(%DFR0d(3))_"||"_(%DFR0d(4))_"||"_(%DFR0d(5))
 s %DFR0d(17)=$zu(28,%DFR0d(6),7)
 g:'(((%DFR0d(17)'=" ")&&(%DFR0d(17)=%DFR0d(18)))||(%DFR0d(15)="")) %0ABk3
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPIi("DFT",$p(%DFR0d(1),"||",1),$p(%DFR0d(1),"||",2),$p(%DFR0d(1),"||",3),$p(%DFR0d(1),"||",4))#"S":$zu(115,4) i $t { s %DFR0d(22)=1,%DFR0d(23)=$name(^TEPIi("DFT",$p(%DFR0d(1),"||",1),$p(%DFR0d(1),"||",2),$p(%DFR0d(1),"||",3),$p(%DFR0d(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DF_DynamicFunctionRequest for RowID value: "_%DFR0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %DFR0d(19)=$lb(""_%DFR0d(17))
 s %DFR0d(2)=$p(%DFR0d(1),"||"),%DFR0d(3)=$p(%DFR0d(1),"||",2),%DFR0d(4)=$p(%DFR0d(1),"||",3),%DFR0d(5)=$p(%DFR0d(1),"||",4)
 i %DFR0d(2)'="",%DFR0d(3)'="",%DFR0d(4)'="",%DFR0d(5)'="",$d(^TEPIi("DFT",%DFR0d(2),%DFR0d(3),%DFR0d(4),%DFR0d(5)))
 e  g %0ACdun
 s %DFR0d(39)=$g(^TEPIi("DFT",%DFR0d(2),%DFR0d(3),%DFR0d(4),%DFR0d(5)))
 s %DFR0d(6)=$p(%DFR0d(39),"\",1) s %DFR0d(7)=$p(%DFR0d(39),"\",2) s %DFR0d(8)=$p(%DFR0d(39),"\",3) s %DFR0d(9)=$p(%DFR0d(39),"\",4)
 s %DFR0d(10)="" f %irep=1:1:$g(^TEPIi("DFT",%DFR0d(2),%DFR0d(3),%DFR0d(4),%DFR0d(5),"REM",0)) s $li(%DFR0d(10),%irep)=$g(^(%irep))
 s %DFR0d(17)=$zu(28,%DFR0d(6),7)
 s %DFR0d(20)=$lb(""_%DFR0d(17))
 g:%DFR0d(19)'=%DFR0d(20) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %DFR0d(21)=%DFR0d(21)+1,%ROWCOUNT=%DFR0d(21),%ROWID=%DFR0d(1),%DFR0c=10 q
%DFR0f i '$g(%DFR0c) { s SQLCODE=-102 q  } i %DFR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%DFR0d(21))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%DFR0d(21),%DFR0c=100 q  } g %0Afirst:%DFR0c=1
%0ACdun i $zu(115,2)=1,$g(%DFR0d(22))=1 { l -@%DFR0d(23) s %DFR0d(22)=0 }
 g %0ABk3
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%DFR0d(21),SQLCODE=100,%DFR0c=100 q
%DFR0c i '$g(%DFR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%DFR0d(21)),1:0)
 i $zu(115,2)=1,$g(%DFR0d(22))=1 { l -@%DFR0d(23) } k %DFR0c,%DFR0d,%DFR0E,%DFR0l,%DFR0n,%DFR0R,%DFR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %DFR0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:10 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DFDynamicFunctionRequest.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPIi("DFT",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6),%mmmsqld(7)))
 e  g %0EBdun
 s %mmmsqld(17)=$$%getlock^User.DFDynamicFunctionRequest.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPIi("DFT",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6),%mmmsqld(7)))
 e  g %0ECdun
 k %data
 f icol=0:1:10 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.DFDynamicFunctionRequest.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.DFDynamicFunctionRequest.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.DFDynamicFunctionRequest.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.DFDynamicFunctionRequest.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPIi("DFT",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0GBdun
 s %mmmsqld(16)=$$%getlock^User.DFDynamicFunctionRequest.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPIi("DFT",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5),%mmmsqld(6)))
 e  g %0GCdun
 d %delete^User.DFDynamicFunctionRequest.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.DFDynamicFunctionRequest.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.DFDynamicFunctionRequest.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.DFDynamicFunctionRequest.T1(%mmmsqld(1)) g %0Gc
%0Jo d %DFR0f q:SQLCODE'=0
 s PLIST(1)=%DFR0d(1),PLIST(2)=%DFR0d(2),PLIST(3)=%DFR0d(3),PLIST(4)=%DFR0d(4),PLIST(5)=%DFR0d(5),PLIST(6)=%DFR0d(6),PLIST(7)=%DFR0d(7),PLIST(8)=%DFR0d(8),PLIST(9)=%DFR0d(9),PLIST(10)=%DFR0d(10)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(12)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(12)
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2),PLIST(4)=$p(PLIST(1),"||",3),PLIST(5)=$p(PLIST(1),"||",4)
 i PLIST(2)'="",PLIST(3)'="",PLIST(4)'="",PLIST(5)'="",$d(^TEPIi("DFT",PLIST(2),PLIST(3),PLIST(4),PLIST(5)))
 e  g %0LBdun
 s %mmmsqld(23)=$g(^TEPIi("DFT",PLIST(2),PLIST(3),PLIST(4),PLIST(5)))
 s PLIST(6)=$p(%mmmsqld(23),"\",1) s PLIST(7)=$p(%mmmsqld(23),"\",2) s PLIST(8)=$p(%mmmsqld(23),"\",3) s PLIST(9)=$p(%mmmsqld(23),"\",4)
 s PLIST(10)="" f %irep=1:1:$g(^TEPIi("DFT",PLIST(2),PLIST(3),PLIST(4),PLIST(5),"REM",0)) s $li(PLIST(10),%irep)=$g(^(%irep))
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TEPIi("DFT",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TEPIi("DFT",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DF_DynamicFunctionRequest for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2),PLIST(4)=$p(PLIST(1),"||",3),PLIST(5)=$p(PLIST(1),"||",4)
 i PLIST(2)'="",PLIST(3)'="",PLIST(4)'="",PLIST(5)'="",$d(^TEPIi("DFT",PLIST(2),PLIST(3),PLIST(4),PLIST(5)))
 e  g %0LCdun
 s %mmmsqld(31)=$g(^TEPIi("DFT",PLIST(2),PLIST(3),PLIST(4),PLIST(5)))
 s PLIST(6)=$p(%mmmsqld(31),"\",1) s PLIST(7)=$p(%mmmsqld(31),"\",2) s PLIST(8)=$p(%mmmsqld(31),"\",3) s PLIST(9)=$p(%mmmsqld(31),"\",4)
 s PLIST(10)="" f %irep=1:1:$g(^TEPIi("DFT",PLIST(2),PLIST(3),PLIST(4),PLIST(5),"REM",0)) s $li(PLIST(10),%irep)=$g(^(%irep))
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
