<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTCOM" type="INT" languagemode="0"><![CDATA[
BVBCTCOM ; IG 10/12/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:21 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$getall^BVBCTCOM() 
 ; $$select^BVBCTCOM(ROWID)
 ; $$selcode^BVBCTCOM(code)
 ; $$open^BVBCTCOM(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTCOM(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTCOM(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTCOM(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTCOM()
 ; $$insert^BVBCTCOM()
 ; $$update^BVBCTCOM(ROWID)
 ; $$delete^BVBCTCOM(ROWID,Comments)
 ; $$getall^BVBCTCOM()
 ; $$gettype^BVBCTCOM(type)
 ; 
 ;get rowid by type
gettype(type) n (type) s type=$g(type)
 s str="",com=0 f  s com=$o(^CT("COMP",com)) q:com=""  s s=^(com) d
 .i $p(s,"^",2)=type s str=str_com_"^"
 q str
 ; Insert the data
insert() K PLIST(1)
 d %0Bo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) k PLIST(1) s ROWID=$g(ROWID)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9) s ts=$g(ts)
 d %CTCOM0o
 Q 0
 ;
 ; Fetch the data
fetch(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s ts=$g(ts)
nx d %0Fo
 i 'SQLCODE,$l(ts),$$val(PLIST(1),ts) g nx
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9) s ts=$g(ts) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(ts) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(ts,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (ts,PLIST) s ts=$g(ts) K ^TMP($zn,$j)
 i $$open(ts)
 f cnt=1:1 Q:$$fetch(ts)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %CTCOM0c 
 q 0
 ;check if test set exists in comparison table
 ;0-yes,1-no
val(comp,ts) n (comp,ts) s found=0
 s ts1=0 f  s ts1=$o(^CT("COMP",+comp,"TS",ts1)) q:ts1=""  q:found  s s=^(ts1) d
 .i $p(s,"^")=ts s found=1
 q 'found
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
selcode(code) K PLIST s code=$g(code)
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 Q
getall() N (PLIST) K ^TMP($zn,$j)
 I $$open()
 F cnt=1:1 Q:$$fetch()  d
 .s str=$P(PLIST(4),$c(1))_$c(1)_$P(PLIST(9),$c(1))_$c(1)_$P(PLIST(10),$c(1))
 .S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0ABs2 s %val=$p("Check Blood Group|Update Antibody Register|Update Unsuitable Pack Register|Standard Result Entry","|",$l($p("|CBG|UAR|UUPR|SRE|","|"_%val_"|"),"|")) q
%0ABs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%CTCOM0o s SQLCODE=$s($g(%CTCOM0c):-101,1:0) q:SQLCODE'=0
 s %CTCOM0c=1 k %CTCOM0m
 s %CTCOM0E=$zt,%CTCOM0f=0,%CTCOM0e=0,%CTCOM0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTCOM0d(2),$C(1))=""
%0ABk1 s $P(%CTCOM0d(2),$C(1))=$o(^CT("COMP",$P(%CTCOM0d(2),$C(1))))
 i $P(%CTCOM0d(2),$C(1))="" g %0ABdun
 i 1>$P(%CTCOM0d(2),$C(1)),$P(%CTCOM0d(2),$C(1))=+$P(%CTCOM0d(2),$C(1)) g %0ABk1
 i $P(%CTCOM0d(2),$C(1))'=+$P(%CTCOM0d(2),$C(1)) g %0ABdun
 s %CTCOM0n=$g(^CT("COMP",$P(%CTCOM0d(2),$C(1))))
 s %CTCOM0d(3)=$p(%CTCOM0n,"^",1) s %CTCOM0d(4)=$p(%CTCOM0n,"^",2) s %CTCOM0d(5)=$p(%CTCOM0n,"^",3) s %CTCOM0d(6)=$p(%CTCOM0n,"^",4) s %CTCOM0d(7)=$p(%CTCOM0n,"^",5)
 s %val=$P(%CTCOM0d(2),$C(1)) d %0ABs1:%val'="" s $P(%CTCOM0d(2),$C(1),2)=%val
 s %val=$P(%CTCOM0d(4),$C(1)) d %0ABs2:%val'="" s $P(%CTCOM0d(4),$C(1),2)=%val
 s %val=$P(%CTCOM0d(5),$C(1)) d %0ABs3:%val'="" s $P(%CTCOM0d(5),$C(1),2)=%val
 s %val=$P(%CTCOM0d(6),$C(1)) d %0ABs3:%val'="" s $P(%CTCOM0d(6),$C(1),2)=%val
 s %val=$P(%CTCOM0d(7),$C(1)) d %0ABs3:%val'="" s $P(%CTCOM0d(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCOM0f=%CTCOM0f+1 s %CTCOM0c=10 q
%CTCOM0f i '$g(%CTCOM0c) s SQLCODE=-102 q
 i %CTCOM0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTCOM0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCOM0c=100 q
%CTCOM0c i '$g(%CTCOM0c) s SQLCODE=-102 q
 k %CTCOM0c,%CTCOM0d,%CTCOM0e,%CTCOM0E,%CTCOM0f,%CTCOM0l,%CTCOM0L,%CTCOM0n,%CTCOM0r,%CTCOM0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCOM0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:10 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1351("1")
 q
%0CAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("COMP",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0CBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:10 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1351(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("COMP",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0DBdun
 d delete^mt1351(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTCOM0f q:SQLCODE'=0
 s PLIST(1)=%CTCOM0d(2),PLIST(2)=%CTCOM0d(3),PLIST(3)=%CTCOM0d(4),PLIST(4)=%CTCOM0d(5),PLIST(9)=%CTCOM0d(6),PLIST(10)=%CTCOM0d(7)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("COMP",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0HBdun
 s %mmmsqln=$g(^CT("COMP",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(9)=$p(%mmmsqln,"^",4) s PLIST(10)=$p(%mmmsqln,"^",5)
 s %val=$P(PLIST(3),$C(1)) d %0ABs2:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs3:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(9),$C(1)) d %0ABs3:%val'="" s $P(PLIST(9),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs3:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(code,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(code,2,999)
 s SQLCODE=100
   ;  init
 s %mmmsqld(11)=$$ALPHAUP(%mmmsqld(3))
 ; asl MOD# 2
 s %mmmsqld(10)=$g(%mmmsqld(11))
 i %mmmsqld(10)="" g %0IBdun
 s $P(PLIST(1),$C(1))=""
%0IBk1 s $P(PLIST(1),$C(1))=$o(^CT("COMP",0,%mmmsqld(10),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0IBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0IBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("COMP",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0IBk1
 s %mmmsqln=$g(^CT("COMP",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(9)=$p(%mmmsqln,"^",4) s PLIST(10)=$p(%mmmsqln,"^",5)
 s %val=$P(PLIST(3),$C(1)) d %0ABs2:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs3:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(9),$C(1)) d %0ABs3:%val'="" s $P(PLIST(9),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs3:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
