<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTDBL" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTDBL ; IG 29/4/98 ; MVB Control code access for CT_DayBookLaboratory
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTDBL(ROWID,skip)
 ; $$open^LVBCTDBL(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTDBL(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTDBL(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTDBL(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTDBL()
 ; $$insert^LVBCTDBL()
 ; $$update^LVBCTDBL(ROWID)
 ; $$delete^LVBCTDBL(ROWID,Comments)
 ; $$getall^LVBCTDBL(dep)
 ;
  ;---&SQL(DECLARE CTDBL CURSOR FOR SELECT * FROM CT_DayBookLaboratory
   ;---         WHERE (CTDBL_Department_DR = :dep) OR (:dep IS NULL))
   ;--- ** SQL PUBLIC Variables: SQLCODE, dep
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_DayBookLaboratory VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE CT_DayBookLaboratory VALUES :PLIST() WHERE CTDBL_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_DayBookLaboratory WHERE CTDBL_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) s dep=$g(dep),skip=$g(skip)
  ;---&SQL(OPEN CTDBL) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDBL0o 
 Q 0
 ;
 ; Fetch the data
fetch(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s dep=$g(dep),skip=$g(skip)
  ;---&SQL(FETCH CTDBL INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) s dep=$g(dep),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(dep,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (dep,skip,PLIST) s dep=$g(dep),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(dep,skip)
 f cnt=1:1 Q:$$fetch(dep,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTDBL) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDBL0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) s skip=$g(skip) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_DayBookLaboratory WHERE CTDBL_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(10))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDEP(plist(10),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(10)=X K plist
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSPE(plist(11),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 ;
 Q
 ;
getall(dep) N (dep,PLIST) K ^TMP($ZN,$J) s dep=$g(dep)
 I $$open(dep,"Y")
 F cnt=1:1 Q:$$fetch(dep,"Y")  d
 .s ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(12),$c(1))_$c(1)_$P(PLIST(13),$c(1))_$c(1)_$P(PLIST(10),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
%CTDBL0o s $zt="%CTDBL0E" s SQLCODE=$s($g(%CTDBL0c):-101,1:0) q:SQLCODE'=0  s %CTDBL0d(24)=0 s %CTDBL0d(25)=0,%CTDBL0d(26)=""
 s %CTDBL0d(19)=$g(dep),%CTDBL0d(20)=$g(dep)
 s %CTDBL0c=1 q
%CTDBL0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTDBL0c,%CTDBL0d,%CTDBL0E,%CTDBL0l,%CTDBL0n,%CTDBL0R,%CTDBL0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTDBL0d(1)=""
%0ABk1 s %CTDBL0d(1)=$o(^TTAB("LA",%CTDBL0d(1)))
 i %CTDBL0d(1)="" g %0ABdun
 s %CTDBL0d(31)=$g(^TTAB("LA",%CTDBL0d(1)))
 s %CTDBL0d(9)=$p(%CTDBL0d(31),"\",8)
 g:'(((%CTDBL0d(9)'="")&&(%CTDBL0d(9)=%CTDBL0d(19)))||(%CTDBL0d(20)="")) %0ABk1
 s %CTDBL0d(2)=$p(%CTDBL0d(31),"\",1) s %CTDBL0d(3)=$p(%CTDBL0d(31),"\",2) s %CTDBL0d(4)=$p(%CTDBL0d(31),"\",3) s %CTDBL0d(5)=$p(%CTDBL0d(31),"\",4) s %CTDBL0d(6)=$p(%CTDBL0d(31),"\",5) s %CTDBL0d(7)=$p(%CTDBL0d(31),"\",6) s %CTDBL0d(10)=$p(%CTDBL0d(31),"\",9) s %CTDBL0d(12)=$p(%CTDBL0d(31),"\",10) s %CTDBL0d(13)=$p(%CTDBL0d(31),"\",7) s %CTDBL0d(14)=$p(%CTDBL0d(31),"\",11) s %CTDBL0d(15)=$p(%CTDBL0d(31),"\",12) s %CTDBL0d(16)=$p(%CTDBL0d(31),"\",13) s %CTDBL0d(17)=$p(%CTDBL0d(31),"\",14) s %CTDBL0d(18)=$p(%CTDBL0d(31),"\",15)
 s %CTDBL0d(8)=$$CT009^at196($g(%CTDBL0d(1))) S %CTDBL0d(11)=$$CT012^at196($g(%CTDBL0d(1)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("LA",$p(%CTDBL0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTDBL0d(25)=1,%CTDBL0d(26)=$name(^TTAB("LA",$p(%CTDBL0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DayBookLaboratory for RowID value: "_%CTDBL0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTDBL0d(22)=$lb(""_%CTDBL0d(9))
 i %CTDBL0d(1)'="",$d(^TTAB("LA",%CTDBL0d(1)))
 e  g %0ACdun
 s %CTDBL0d(36)=$g(^TTAB("LA",%CTDBL0d(1)))
 s %CTDBL0d(2)=$p(%CTDBL0d(36),"\",1) s %CTDBL0d(3)=$p(%CTDBL0d(36),"\",2) s %CTDBL0d(4)=$p(%CTDBL0d(36),"\",3) s %CTDBL0d(5)=$p(%CTDBL0d(36),"\",4) s %CTDBL0d(6)=$p(%CTDBL0d(36),"\",5) s %CTDBL0d(7)=$p(%CTDBL0d(36),"\",6) s %CTDBL0d(9)=$p(%CTDBL0d(36),"\",8) s %CTDBL0d(10)=$p(%CTDBL0d(36),"\",9) s %CTDBL0d(12)=$p(%CTDBL0d(36),"\",10) s %CTDBL0d(13)=$p(%CTDBL0d(36),"\",7) s %CTDBL0d(14)=$p(%CTDBL0d(36),"\",11) s %CTDBL0d(15)=$p(%CTDBL0d(36),"\",12) s %CTDBL0d(16)=$p(%CTDBL0d(36),"\",13) s %CTDBL0d(17)=$p(%CTDBL0d(36),"\",14) s %CTDBL0d(18)=$p(%CTDBL0d(36),"\",15)
 s %CTDBL0d(8)=$$CT009^at196($g(%CTDBL0d(1))) S %CTDBL0d(11)=$$CT012^at196($g(%CTDBL0d(1)))
 s %CTDBL0d(23)=$lb(""_%CTDBL0d(9))
 g:%CTDBL0d(22)'=%CTDBL0d(23) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTDBL0d(24)=%CTDBL0d(24)+1,%ROWCOUNT=%CTDBL0d(24),%ROWID=%CTDBL0d(1),%CTDBL0c=10 q
%CTDBL0f i '$g(%CTDBL0c) { s SQLCODE=-102 q  } i %CTDBL0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTDBL0d(24))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTDBL0d(24),%CTDBL0c=100 q  } g %0Afirst:%CTDBL0c=1
%0ACdun i $zu(115,2)=1,$g(%CTDBL0d(25))=1 { l -@%CTDBL0d(26) s %CTDBL0d(25)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTDBL0d(24),SQLCODE=100,%CTDBL0c=100 q
%CTDBL0c i '$g(%CTDBL0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTDBL0d(24)),1:0)
 i $zu(115,2)=1,$g(%CTDBL0d(25))=1 { l -@%CTDBL0d(26) } k %CTDBL0c,%CTDBL0d,%CTDBL0E,%CTDBL0l,%CTDBL0n,%CTDBL0R,%CTDBL0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTDBL0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:19 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTDayBookLaboratory.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("LA",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTDayBookLaboratory.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("LA",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:19 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTDayBookLaboratory.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTDayBookLaboratory.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTDayBookLaboratory.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTDayBookLaboratory.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("LA",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTDayBookLaboratory.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("LA",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTDayBookLaboratory.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTDayBookLaboratory.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTDayBookLaboratory.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTDayBookLaboratory.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTDBL0f q:SQLCODE'=0
 s PLIST(1)=%CTDBL0d(1),PLIST(2)=%CTDBL0d(1),PLIST(3)=%CTDBL0d(2),PLIST(4)=%CTDBL0d(3),PLIST(5)=%CTDBL0d(4),PLIST(6)=%CTDBL0d(5),PLIST(7)=%CTDBL0d(6),PLIST(8)=%CTDBL0d(7),PLIST(9)=%CTDBL0d(8),PLIST(10)=%CTDBL0d(9),PLIST(11)=%CTDBL0d(10),PLIST(12)=%CTDBL0d(11),PLIST(13)=%CTDBL0d(12),PLIST(14)=%CTDBL0d(13),PLIST(15)=%CTDBL0d(14),PLIST(16)=%CTDBL0d(15),PLIST(17)=%CTDBL0d(16),PLIST(18)=%CTDBL0d(17),PLIST(19)=%CTDBL0d(18)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(22)=0,%mmmsqld(23)=""
 s %mmmsqld(20)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(20)
 i PLIST(2)'="",$d(^TTAB("LA",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(28)=$g(^TTAB("LA",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",1) s PLIST(4)=$p(%mmmsqld(28),"\",2) s PLIST(5)=$p(%mmmsqld(28),"\",3) s PLIST(6)=$p(%mmmsqld(28),"\",4) s PLIST(7)=$p(%mmmsqld(28),"\",5) s PLIST(8)=$p(%mmmsqld(28),"\",6) s PLIST(10)=$p(%mmmsqld(28),"\",8) s PLIST(11)=$p(%mmmsqld(28),"\",9) s PLIST(13)=$p(%mmmsqld(28),"\",10) s PLIST(14)=$p(%mmmsqld(28),"\",7) s PLIST(15)=$p(%mmmsqld(28),"\",11) s PLIST(16)=$p(%mmmsqld(28),"\",12) s PLIST(17)=$p(%mmmsqld(28),"\",13) s PLIST(18)=$p(%mmmsqld(28),"\",14) s PLIST(19)=$p(%mmmsqld(28),"\",15)
 s PLIST(9)=$$CT009^at196($g(PLIST(2))) S PLIST(12)=$$CT012^at196($g(PLIST(2)))
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("LA",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(22)=1,%mmmsqld(23)=$name(^TTAB("LA",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DayBookLaboratory for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("LA",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(33)=$g(^TTAB("LA",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(33),"\",1) s PLIST(4)=$p(%mmmsqld(33),"\",2) s PLIST(5)=$p(%mmmsqld(33),"\",3) s PLIST(6)=$p(%mmmsqld(33),"\",4) s PLIST(7)=$p(%mmmsqld(33),"\",5) s PLIST(8)=$p(%mmmsqld(33),"\",6) s PLIST(10)=$p(%mmmsqld(33),"\",8) s PLIST(11)=$p(%mmmsqld(33),"\",9) s PLIST(13)=$p(%mmmsqld(33),"\",10) s PLIST(14)=$p(%mmmsqld(33),"\",7) s PLIST(15)=$p(%mmmsqld(33),"\",11) s PLIST(16)=$p(%mmmsqld(33),"\",12) s PLIST(17)=$p(%mmmsqld(33),"\",13) s PLIST(18)=$p(%mmmsqld(33),"\",14) s PLIST(19)=$p(%mmmsqld(33),"\",15)
 s PLIST(9)=$$CT009^at196($g(PLIST(2))) S PLIST(12)=$$CT012^at196($g(PLIST(2)))
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(22))=1 { l -@%mmmsqld(23) s %mmmsqld(22)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(22))=1 { l -@%mmmsqld(23) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
