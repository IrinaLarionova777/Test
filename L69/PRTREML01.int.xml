<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTREML01" type="INT" languagemode="0" generated="1"><![CDATA[
PRTREML01 ; IG 25/02/00 ; Reminder listing
 q
 ; Parameters :  1.Include Patients without DA
 ;               2.Debtor Action code
 ;
CREATE(REPID,PAR,USER,%msql) ; Create report
 n (REPID,PAR,USER,%msql) k ^TMP($zn,$j)
 K xHEADER D INIT
 s line=1,xHEADER(line)="Reminder listing"
 s line=2,xHEADER(line)=""
 d
 .i $l(PAR2) s line=3,xHEADER(line)="For Debtor Action ("_PAR2_") "_CTDA(3)
 .i PAR1'="Y" s line=3,xHEADER(line)="For All patients without Debtor Action"
 D HEADER^PRTREP00(.xHEADER,+$h),BODY,PRINT
CREND I '$$select^LVBPRPR(REPID) S PLIST(12)=PAR2_"-"_PAR1 I $$update^LVBPRPR(REPID)
 k ^TMP($zn,$j),^TMP("PRTREP00",$j)
 q
 ; initialize parameters
INIT f j=1:1:$l(PAR,$c(1)) s @("PAR"_j)=$p(PAR,$c(1),j)
 K xSORT D H^PRTREP00(PAR10,$zn)
 S X=xLINE(2),MAX=$L(X),$P(SPACE," ",MAX)="",$P(LINE,"-",MAX)=""
 i $l(PAR2),'$$select^LVBCTDA(PAR2,"Y") m CTDA=PLIST
 q
 ; create list of labels to print
BODY l +^TMP("REPORT",$zn)
 ; get client specific init parameters
 s %routine=$p($g(^TTAB("REPORT-GENERIC","REM")),"\",1) i $l(%routine) x "d create^"_%routine
 m ^TMP($zn,$j,1)=^TMP(%routine,$j,"RI") k ^TMP(%routine,$j)
 i $d(^TMP($zn,$j,1)) d
 .s pc="" f  s pc=$o(^TMP($zn,$j,1,pc)) q:pc=""  d
 ..s batch="" f  s batch=$o(^TMP($zn,$j,1,pc,batch)) q:batch=""  d
 ...s seq="" f  s seq=$o(^TMP($zn,$j,1,pc,batch,seq)) q:seq=""  d
 ....s check=1 d  i 'check k ^TMP($zn,$j,1,pc,batch,seq) q
 .....s ep="" f  s ep=$o(^TMCB(pc,batch,ep)) q:ep=""  i $p(^(ep),"\",2)=seq d  i 'check q
 ......s dcol=$$seldata^LVBEPVIS(ep,12),deb=$$seldata^LVBEPVIS(ep,20)
 ......s rowid=deb_"||"_dcol_"||"_ep
 ......s extra=$$seldata^LVBDEBVI(rowid,6),start=$$seldata^LVBDEBVI(rowid,11),da=$$seldata^LVBDEBVI(rowid,8)
 ......i start+extra>$h s check=0
 ......i $l(PAR2),PAR2'=$p(da,$c(1)) s check=0
 ......i '$l(PAR2),PAR1'="Y",'$l(da) s check=0
 ....s epis="" f  s epis=$o(^TMCB(pc,batch,epis)) q:epis=""  i seq=$p(^(epis),"\",2) d
 .....s dcol=$$seldata^LVBEPVIS(ep,12),deb=$$seldata^LVBEPVIS(epis,20)
 .....s rowid=deb_"||"_dcol_"||"_epis,(extra,start,da,comm)=""
 .....s extra=$$seldata^LVBDEBVI(rowid,6),start=$$seldata^LVBDEBVI(rowid,11)
 .....s da=$$seldata^LVBDEBVI(rowid,8)
 .....  ;---&sql(SELECT DEBVI_Comments INTO :comm FROM DEB_DebtorVisits WHERE DEBVI_RowId=:rowid)
  .....  ;--- ** SQL PUBLIC Variables: SQLCODE, comm, rowid
 ..... Do %0Ao
 .....s comm=$p(comm,$c(1))
 .....i '$d(^TMP($zn,$j,"REPORT",11,pc,batch,seq)) s ^TMP($zn,$j,"REPORT",11,pc,batch,seq)=start_"\"_extra_"\"_da
 .....i $d(^TMP($zn,$j,"REPORT",11,pc,batch,seq)),$l(da) s xx=^TMP($zn,$j,"REPORT",11,pc,batch,seq) d
 ......i $p(xx,"\",1)="" s ^TMP($zn,$j,"REPORT",11,pc,batch,seq)=start_"\"_extra_"\"_da
 i $d(^TMP($zn,$j,"REPORT",11)) d
 .s x1="" f  s x1=$o(^TMP($zn,$j,"REPORT",11,x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TMP($zn,$j,"REPORT",11,x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TMP($zn,$j,"REPORT",11,x1,x2,x3)) q:x3=""  s xx=^(x3) d
 ....s x4=$p(xx,"\",3) i '$l(x4) s x4=" "
 ....s ^TMP($zn,$j,"REPORT",12,x4,x1,x2,x3)=xx
 l -^TMP("REPORT",$zn)
 q
 ; print labels
PRINT i $d(^TMP($zn,$j,"REPORT",12)) d
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 .D ADDLINE^PRTREP00(REPID,"PRT","Single reminders")
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 .s x1="" f  s x1=$o(^TMP($zn,$j,"REPORT",12,x1)) q:x1=""  d
 ..k CTDA i '$$select^LVBCTDA(x1,"Y") m CTDA=PLIST
 ..s x2="" f  s x2=$o(^TMP($zn,$j,"REPORT",12,x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TMP($zn,$j,"REPORT",12,x1,x2,x3)) q:x3=""  d
 ....s x4="" f  s x4=$o(^TMP($zn,$j,"REPORT",12,x1,x2,x3,x4)) q:x4=""  s xx=^(x4) d
 .....s xxx(1)=x2_"-"_x3_"-"_x4
 .....i $d(CTDA) s xxx(2)=CTDA(2)_$c(1)_CTDA(3) k CTDA
 .....i $l($p(xx,"\",1)) d
 ......s xxx(3)=$$extdate2^SSUTIL4($p(xx,"\",1))
 ......s xxx(4)=$p(xx,"\",2)
 ......s xxx(5)=$$extdate2^SSUTIL4($p(xx,"\",1)+$p(xx,"\",2))
 ......s xxx(6)=$p(xx,"\",4)
 .....d PRINT^PRTREP00(,.N) k xxx
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 .D ADDLINE^PRTREP00(REPID,"PRT",xLINE(1))
 .D ADDLINE^PRTREP00(REPID,"PRT","!")
 s report="REML"
 s EndLine=$$seldata^LVBCTCLR(report,9)
 i EndLine="Y" D PRINTEND^PRTREP00(xLINE(1))
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(4)=$g(rowid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TDEB(%mmmsqld(6),%mmmsqld(7),0,%mmmsqld(8)))
 e  g %0ABdun
 s %mmmsqld(17)=$g(^TDEB(%mmmsqld(6),%mmmsqld(7),0,%mmmsqld(8)))
 s comm=$p(%mmmsqld(17),"\",4)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TDEB($p(%mmmsqld(3),"||",1),$p(%mmmsqld(3),"||",2),0,$p(%mmmsqld(3),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TDEB($p(%mmmsqld(3),"||",1),$p(%mmmsqld(3),"||",2),0,$p(%mmmsqld(3),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DEB_DebtorVisits for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TDEB(%mmmsqld(6),%mmmsqld(7),0,%mmmsqld(8)))
 e  g %0ACdun
 s %mmmsqld(24)=$g(^TDEB(%mmmsqld(6),%mmmsqld(7),0,%mmmsqld(8)))
 s comm=$p(%mmmsqld(24),"\",4)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
]]></Routine>
</Export>
