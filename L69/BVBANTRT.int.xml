<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBANTRT" type="INT" languagemode="0"><![CDATA[
BVBANTRT ; IG 03/08/98 ; MVB Control data access for BB_AntibodyScreenResultsTable   ; Compiled May 22, 2000 13:22:59 for Cache for Windows
 ; 
 ; supported calls: 
 ; 
 ; $$open^BVBANTRT(par) 
 ; $$fetch^BVBANTRT(par) 
 ; $$close^BVBANTRT() 
 ; 
 ; $$select^BVBANTRT(RowID) 
 ; $$selcode^BVBANTRT(par,code) 
 ; $$insert^BVBANTRT(par) 
 ; $$update^BVBANTRT(RowID) 
 ; $$delete^BVBANTRT(RowID) 
 ; 
 ; 
open(par) s par=$g(par)
 d %ANTRT0o
 q 0
 ; 
fetch(par) s par=$g(par) K PLIST 
 d %0Co 
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
close() d %ANTRT0c 
 q 0 
 ; 
select(RowID) s RowID=$g(RowID) k PLIST 
 d %0Eo 
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust 
 q SQLCODE 
selcode(par,code) s par=$g(par),code=$g(code) k PLIST 
 d %0Fo
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust 
 q SQLCODE 
 ; 
insert(par) S PLIST(0)=$g(par) k PLIST(1)
 s PLIST(2)=$o(^BBANT($p(PLIST(0),"||",1),"RES",$p(PLIST(0),"||",2),"TABLE",""),-1)+1
 d %0Go 
 I 'SQLCODE q $$select(%ROWID) 
 q SQLCODE 
 ; 
update(RowID) s RowID=$g(RowID)
 d %0Ho 
 q SQLCODE 
 ; 
 ; 
delete(RowID) s RowID=$g(RowID)
 d %0Io 
 q SQLCODE 
 ; 
 ; Adjust certain fields 
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%ANTRT0o s SQLCODE=$s($g(%ANTRT0c):-101,1:0) q:SQLCODE'=0
 s %ANTRT0c=1 k %ANTRT0m
 s %ANTRT0E=$zt,%ANTRT0f=0,%ANTRT0e=0,%ANTRT0L=""
 s %ANTRT0d(2)=$P(par,$C(1))
 s:%ANTRT0d(2)="" %ANTRT0d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %ANTRT0d(1)=$g(%ANTRT0d(2))
 s %ANTRT0d(8)=$p($g(%ANTRT0d(1)),"||",1,1),%ANTRT0d(9)=$p($g(%ANTRT0d(1)),"||",2,2)
 i %ANTRT0d(8)="" g %0ABdun
 i %ANTRT0d(9)="" g %0ABdun
 s $P(%ANTRT0d(5),$C(1))=""
%0ABk1 s $P(%ANTRT0d(5),$C(1))=$o(^BBANT(%ANTRT0d(8),"RES",%ANTRT0d(9),"TABLE",$P(%ANTRT0d(5),$C(1))))
 i $P(%ANTRT0d(5),$C(1))="" g %0ABdun
 i $P(%ANTRT0d(5),$C(1))'=+$P(%ANTRT0d(5),$C(1)) g %0ABdun
 s %ANTRT0n=$g(^BBANT(%ANTRT0d(8),"RES",%ANTRT0d(9),"TABLE",$P(%ANTRT0d(5),$C(1))))
 s %ANTRT0d(6)=$p(%ANTRT0n,"^",1) s %ANTRT0d(7)=$p(%ANTRT0n,"^",2)
 s %ANTRT0d(4)=(%ANTRT0d(8))_"||"_(%ANTRT0d(9))_"||"_($P(%ANTRT0d(5),$C(1)))
 s %val=$P(%ANTRT0d(5),$C(1)) d %0ABs1:%val'="" s $P(%ANTRT0d(5),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %ANTRT0f=%ANTRT0f+1 s %ANTRT0c=10 q
%ANTRT0f i '$g(%ANTRT0c) s SQLCODE=-102 q
 i %ANTRT0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%ANTRT0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %ANTRT0c=100 q
%ANTRT0c i '$g(%ANTRT0c) s SQLCODE=-102 q
 k %ANTRT0c,%ANTRT0d,%ANTRT0e,%ANTRT0E,%ANTRT0f,%ANTRT0l,%ANTRT0L,%ANTRT0n,%ANTRT0r,%ANTRT0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%ANTRT0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %ANTRT0f q:SQLCODE'=0
 s PLIST(0)=%ANTRT0d(1),PLIST(1)=%ANTRT0d(4),PLIST(2)=%ANTRT0d(5),PLIST(3)=%ANTRT0d(6),PLIST(4)=%ANTRT0d(7)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(9)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(10)=$p($g(%mmmsqld(3)),"||",2,2),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(9)'="",%mmmsqld(10)'="",$P(PLIST(2),$C(1))'="",$d(^BBANT(%mmmsqld(9),"RES",%mmmsqld(10),"TABLE",$P(PLIST(2),$C(1))))
 e  g %0EBdun
 s %mmmsqln=$g(^BBANT(%mmmsqld(9),"RES",%mmmsqld(10),"TABLE",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1) s PLIST(4)=$p(%mmmsqln,"^",2)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(par,$C(1)),%mmmsqld(5)=$P(code,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(par,2,999)
 s:%mmmsqld(5)="" %mmmsqld(5)=$E(code,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(0)=$g(%mmmsqld(3))
 s %mmmsqld(10)=$p($g(PLIST(0)),"||",1,1),%mmmsqld(11)=$p($g(PLIST(0)),"||",2,2)
 i %mmmsqld(10)="" g %0FBdun
 i %mmmsqld(11)="" g %0FBdun
 s $P(PLIST(2),$C(1))=""
%0FBk1 s $P(PLIST(2),$C(1))=$o(^BBANT(%mmmsqld(10),"RES",%mmmsqld(11),"TABLE",$P(PLIST(2),$C(1))))
 i $P(PLIST(2),$C(1))="" g %0FBdun
 i $P(PLIST(2),$C(1))'=+$P(PLIST(2),$C(1)) g %0FBdun
 s %mmmsqln=$g(^BBANT(%mmmsqld(10),"RES",%mmmsqld(11),"TABLE",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 g:'((PLIST(3))=(%mmmsqld(5))) %0FBk1
 s PLIST(4)=$p(%mmmsqln,"^",2)
 s PLIST(1)=(%mmmsqld(10))_"||"_(%mmmsqld(11))_"||"_($P(PLIST(2),$C(1)))
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
 g %0FBk1
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %insert,icol,ir
 f icol=0:1:4 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt3371("1")
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2),$P(%mmmsqld(6),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$P(%mmmsqld(6),$C(1))'="",$d(^BBANT(%mmmsqld(4),"RES",%mmmsqld(5),"TABLE",$P(%mmmsqld(6),$C(1))))
 e  g %0HBdun
 k %data,%edit
 f icol=0:1:4 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt3371(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(2)),"||",3,3)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^BBANT(%mmmsqld(3),"RES",%mmmsqld(4),"TABLE",$P(%mmmsqld(5),$C(1))))
 e  g %0IBdun
 d delete^mt3371(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
