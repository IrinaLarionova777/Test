<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt3231" type="INT" languagemode="0"><![CDATA[
mt3231  ; Compiled May 1, 2007 13:53:55 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt3231(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0A^mt3231
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt3231(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(0))'="",$p($g(%data(2)),$c(1))'="" d
 . s %data(1)=$g(%data(0))_"||"_$p($g(%data(2)),$c(1))
 . d insertnw^mt3231(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt3231 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:16 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt3231(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:16 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt3232(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt3231 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TBAT($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TBAT($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0,subs(2329)=$p(%data(1),"||",1,1)
 i $g(tupkill) k ^TBAT(subs(2329),$p(%edit(2),$c(1),1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TBAT(subs(2329),$p(%data(2),$c(1),1))) s $p(tempn,"\",1)=$g(%data(3))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TBAT(subs(2329),$p(%data(2),$c(1),1))) s $p(tempn,"\",2)=$p($g(%data(7)),$c(1))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TBAT(subs(2329),$p(%data(2),$c(1),1))) s $p(tempn,"\",3)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TBAT(subs(2329),$p(%data(2),$c(1),1))) s $p(tempn,"\",4)=$p($g(%data(5)),$c(1))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TBAT(subs(2329),$p(%data(2),$c(1),1))) s $p(tempn,"\",5)=$g(%data(6))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TBAT(subs(2329),$p(%data(2),$c(1),1))) s $p(tempn,"\",6)=$g(%data(10))
 s:$d(tempn)#2 ^TBAT(subs(2329),$p(%data(2),$c(1),1))=tempn
maps ; 
 s node=1,tempn=""
 i $p($s($d(%edit(12)):%edit(12),1:$g(%data(12))),$c(1))'=""
 i  i '$g(%edit) s sn(1)=$s($d(%edit(14)):%edit(14),1:$g(%data(14))) i sn(1)'="" s sn(2)=$s($d(%edit(15)):$p(%edit(15),$c(1),1),1:$p($g(%data(15)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(3)'="" s sn(4)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(4)'=""
 i  i $d(^TDEB(sn(1),sn(2),0,sn(3),"CREDIT",sn(4))) s:'$g(tupkill) node=0,tempn=^TDEB(sn(1),sn(2),0,sn(3),"CREDIT",sn(4)) k ^TDEB(sn(1),sn(2),0,sn(3),"CREDIT",sn(4))
 i $p($g(%data(12)),$c(1))'=""
 i  i '$g(tupkill) s sn(1)=$g(%data(14)) i sn(1)'="" s sn(2)=$p($g(%data(15)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(3)) i sn(3)'="" s sn(4)=$g(%data(1)) i sn(4)'=""
 e  g map1dun
 s:node!$d(%edit(16)) $p(tempn,"\",1)=$p($g(%data(16)),$c(1))
 s:node!$d(%edit(12)) $p(tempn,"\",2)=$p($g(%data(12)),$c(1))
 s ^TDEB(sn(1),sn(2),0,sn(3),"CREDIT",sn(4))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(14)):%edit(14),1:$g(%data(14))) i sn(1)'="" s sn(2)=$s($d(%edit(12)):$p(%edit(12),$c(1),1),1:$p($g(%data(12)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(3)'=""
 i  i $d(^TDEB(sn(1),sn(2),1,"CREDIT",sn(3))) s:'$g(tupkill) node=0,tempn=^TDEB(sn(1),sn(2),1,"CREDIT",sn(3)) k ^TDEB(sn(1),sn(2),1,"CREDIT",sn(3))
 i '$g(tupkill) s sn(1)=$g(%data(14)) i sn(1)'="" s sn(2)=$p($g(%data(12)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(1)) i sn(3)'=""
 e  g map2dun
 s ^TDEB(sn(1),sn(2),1,"CREDIT",sn(3))=tempn
map2dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(11)):%edit(11),1:$g(%data(11))) i sn(1)'="" s sn(2)=$s($d(%edit(12)):$p(%edit(12),$c(1),1),1:$p($g(%data(12)),$c(1),1)) i sn(2)'="" s sn(3)=$g(subs(2329)) i sn(3)'="" s sn(4)=$s($d(%edit(2)):$p(%edit(2),$c(1),1),1:$p($g(%data(2)),$c(1),1)) i sn(4)'=""
 i  i $d(^TSUM(sn(1),sn(2),"CREDITS",sn(3),sn(4))) s:'$g(tupkill) node=0,tempn=^TSUM(sn(1),sn(2),"CREDITS",sn(3),sn(4)) k ^TSUM(sn(1),sn(2),"CREDITS",sn(3),sn(4))
 i '$g(tupkill) s sn(1)=$g(%data(11)) i sn(1)'="" s sn(2)=$p($g(%data(12)),$c(1),1) i sn(2)'="" s sn(3)=$g(subs(2329)) i sn(3)'="" s sn(4)=$p($g(%data(2)),$c(1),1) i sn(4)'=""
 e  g map3dun
 s:node!$d(%edit(7)) $p(tempn,"\",1)=$p($g(%data(7)),$c(1))
 s:node!$d(%edit(13)) $p(tempn,"\",2)=$g(%data(13))
 s ^TSUM(sn(1),sn(2),"CREDITS",sn(3),sn(4))=tempn
map3dun q
 d %0Bo
 d %0Co
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d %0Bo^mt3231  s %didit=1
  d %0Co^mt3231  s %didit=1
trgdoneA q  ;  trigger done
 d %0Do
getold(%dataold) g %0Do
code8 ; compute code of field CRBL_AmountPayments
 s $p(%data(8),$c(1))=""
 s $p(%data(8),$c(1))=""
 s x="" f  s x=$o(^TBAT($g(%data(0)),$p($g(%data(2)),$c(1)),0,x)) q:x=""  s $p(%data(8),$c(1))=$p($g(%data(8)),$c(1))+$p(^(x),"\",2)
 s x=""
 q
comp8 ; entry point to do computed field CRBL_AmountPayments
 n %oldval q:(","_$g(trak)_",")[(",8,")
 s %oldval=$g(%data(8)) d code8 s %ok=1 i $g(%data(8))=%oldval q
 s %val=%data(8)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde2 s $p(%data(8),$c(1))=%val
 s %val=$p($g(%data(8)),$c(1)) d:%val'="" fdv2^mt3231 s:'%ok %data(8)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_AmountPayments","",%msg) q
 s %val=$p(%data(8),$c(1))
 d:%val'="" fdi2^mt3232 s $p(%data(8),$c(1),2)=%val
 i $g(%data(8))="",%oldval="" q
 q
code9 ; compute code of field CRBL_AmountPatients
 s $p(%data(9),$c(1))=""
 s $p(%data(9),$c(1))=""
 i $l($g(%data(3))) s $p(%data(9),$c(1))=$p($g(%data(7)),$c(1))
 s x="" f  s x=$o(^TBAT($g(%data(0)),$p($g(%data(2)),$c(1)),1,x)) q:x=""  s $p(%data(9),$c(1))=$p($g(%data(9)),$c(1))+^(x)
 s x=""
 q
comp9 ; entry point to do computed field CRBL_AmountPatients
 n %oldval q:(","_$g(trak)_",")[(",9,")
 s %oldval=$g(%data(9)) d code9 s %ok=1 i $g(%data(9))=%oldval q
 s %val=%data(9)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde2 s $p(%data(9),$c(1))=%val
 s %val=$p($g(%data(9)),$c(1)) d:%val'="" fdv2^mt3231 s:'%ok %data(9)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_AmountPatients","",%msg) q
 s %val=$p(%data(9),$c(1))
 d:%val'="" fdi2^mt3232 s $p(%data(9),$c(1),2)=%val
 i $g(%data(9))="",%oldval="" q
 q
code11 ; compute code of field CRBL_Company_DR
 s %data(11)=""
 s %data(11)=$$CT011^at323($g(%data(3)),$g(%data(1)))
 q
comp11 ; entry point to do computed field CRBL_Company_DR
 n %oldval q:(","_$g(trak)_",")[(",11,")
 s %oldval=$g(%data(11)) d code11 s %ok=1 i $g(%data(11))=%oldval q
 s %val=$p($g(%data(11)),$c(1)) d:%val'="" fdv11^mt3231 s:'%ok %data(11)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_Company_DR","",%msg) q
 i $g(%data(11))="",%oldval="" q
 s:'$d(%edit(11)) %edit(11)=%oldval k:$g(%data(11))=$g(%edit(11)) %edit(11)
 q
code12 ; compute code of field CRBL_DateOfPosting
 s $p(%data(12),$c(1))=""
 s $p(%data(12),$c(1))=$$CT012^at323($g(%data(0)))
 q
comp12 ; entry point to do computed field CRBL_DateOfPosting
 n %oldval q:(","_$g(trak)_",")[(",12,")
 s %oldval=$g(%data(12)) d code12 s %ok=1 i $g(%data(12))=%oldval q
 s %val=%data(12)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde12 s $p(%data(12),$c(1))=%val
 s %val=$p($g(%data(12)),$c(1)) d:%val'="" fdv12^mt3231 s:'%ok %data(12)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_DateOfPosting","",%msg) q
 s %val=$p(%data(12),$c(1))
 d:%val'="" fdi12^mt3232 s $p(%data(12),$c(1),2)=%val
 i $g(%data(12))="",%oldval="" q
 s:'$d(%edit(12)) %edit(12)=%oldval k:$g(%data(12))=$g(%edit(12)) %edit(12)
 q
code13 ; compute code of field CRBL_BillLocation_DR
 s %data(13)=""
 s %data(13)=$$CT013^at323($g(%data(3)))
 q
comp13 ; entry point to do computed field CRBL_BillLocation_DR
 n %oldval q:(","_$g(trak)_",")[(",13,")
 s %oldval=$g(%data(13)) d code13 s %ok=1 i $g(%data(13))=%oldval q
 s %val=$p($g(%data(13)),$c(1)) d:%val'="" fdv13^mt3231 s:'%ok %data(13)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_BillLocation_DR","",%msg) q
 i $g(%data(13))="",%oldval="" q
 s:'$d(%edit(13)) %edit(13)=%oldval k:$g(%data(13))=$g(%edit(13)) %edit(13)
 q
code14 ; compute code of field CRBL_DebtorNumber_DR
 s %data(14)=""
 s %data(14)=$$CT014^at323($g(%data(3)))
 q
comp14 ; entry point to do computed field CRBL_DebtorNumber_DR
 n %oldval q:(","_$g(trak)_",")[(",14,")
 s %oldval=$g(%data(14)) d code14 s %ok=1 i $g(%data(14))=%oldval q
 s %val=$p($g(%data(14)),$c(1)) d:%val'="" fdv14^mt3231 s:'%ok %data(14)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_DebtorNumber_DR","",%msg) q
 i $g(%data(14))="",%oldval="" q
 s:'$d(%edit(14)) %edit(14)=%oldval k:$g(%data(14))=$g(%edit(14)) %edit(14)
 q
code15 ; compute code of field CRBL_DateOfCollection
 s $p(%data(15),$c(1))=""
 s $p(%data(15),$c(1))=$$CT015^at323($g(%data(3)))
 q
comp15 ; entry point to do computed field CRBL_DateOfCollection
 n %oldval q:(","_$g(trak)_",")[(",15,")
 s %oldval=$g(%data(15)) d code15 s %ok=1 i $g(%data(15))=%oldval q
 s %val=%data(15)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde12 s $p(%data(15),$c(1))=%val
 s %val=$p($g(%data(15)),$c(1)) d:%val'="" fdv12^mt3232 s:'%ok %data(15)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_DateOfCollection","",%msg) q
 s %val=$p(%data(15),$c(1))
 d:%val'="" fdi12^mt3232 s $p(%data(15),$c(1),2)=%val
 i $g(%data(15))="",%oldval="" q
 s:'$d(%edit(15)) %edit(15)=%oldval k:$g(%data(15))=$g(%edit(15)) %edit(15)
 q
code16 ; compute code of field CRBL_AmountInCredit
 s $p(%data(16),$c(1))=""
 s $p(%data(16),$c(1))=-$p($g(%data(7)),$c(1))
 q
comp16 ; entry point to do computed field CRBL_AmountInCredit
 n %oldval q:(","_$g(trak)_",")[(",16,")
 s %oldval=$g(%data(16)) d code16 s %ok=1 i $g(%data(16))=%oldval q
 s %val=%data(16)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde2 s $p(%data(16),$c(1))=%val
 s %val=$p($g(%data(16)),$c(1)) d:%val'="" fdv2^mt3232 s:'%ok %data(16)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CRBL_AmountInCredit","",%msg) q
 s %val=$p(%data(16),$c(1))
 d:%val'="" fdi2^mt3232 s $p(%data(16),$c(1),2)=%val
 i $g(%data(16))="",%oldval="" q
 s:'$d(%edit(16)) %edit(16)=%oldval k:$g(%data(16))=$g(%edit(16)) %edit(16)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CR_BatchLine"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="CR_BatchLine Row ID" d %mdiag(%oper,-106,"Fld Int","Req","CRBL_RowID","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(0)) s %ok="CR_CreditBatch Parent Reference" d %mdiag(%oper,-106,"Fld Int","Req","CRBL_ParRef","",%ok) s %msg=%ok,%ok=0
 q
inf0 ; get value for field CRBL_ParRef
 i $c(1)'[$g(%data(0)),$p(%data(0),$c(1))="" s %val=$p(%data(0),$c(1),2) g ine0
 i $c(1)'[$g(%data(0)) s %val=$p(%data(0),$c(1)) g ini0
 i $c(1)'[$g(%insert(0)),$p(%insert(0),$c(1))="" s %val=$p(%insert(0),$c(1),2) g ine0
 i $c(1)'[$g(%insert(0)) s %val=$p(%insert(0),$c(1)) g ini0
 s %val=$g(da322)
ine0 ; external to internal conversion code for field CRBL_ParRef
ini0 ; internal validation code and uniqueness, also int-ext
 d fdv0^mt3231 q:'%ok
 s %data(0)=%val
 s:$c(1)[%data(0) %ok=0 s:%ok %edit(0)=""
 q
inf2 ; get value for field CRBL_Order
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field CRBL_Order
 d fde2^mt3231 q:'%ok
ini2 ; internal validation code and uniqueness, also int-ext
 d fdv2^mt3231 q:'%ok
 s %data(2)=%val
 d fdi2^mt3232 s $p(%data(2),$c(1),2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CR_BatchLine
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf0 i '%ok g:'iform rowiderr s rowerr=1
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(0),$c(1))_"||"_$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt3231 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini0 g:'%ok rowiderr
 s %val=$p(%data(1),"||",2) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,0,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt3232
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,0,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp8^mt3231 d comp9^mt3231 d comp11^mt3231 d comp12^mt3231 d comp13^mt3231 d comp14^mt3231 d comp15^mt3231 d comp16^mt3231
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde12 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde2 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(0)),$p(%data(0),$c(1))="",$p(%data(0),$c(1),2)'="" s %val=$p(%data(0),$c(1),2) s %data(0)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=2 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_Order","",$g(%msg))
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=5 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_ReceiptAmount","",$g(%msg))
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_Amount","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_AmountPayments","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=9 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_AmountPatients","",$g(%msg))
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) s %data(11)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=12 d etiok
 . s %msg="" d fde12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_DateOfPosting","",$g(%msg))
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) s %data(14)=%val
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=15 d etiok
 . s %msg="" d fde12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_DateOfCollection","",$g(%msg))
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=16 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CRBL_AmountInCredit","",$g(%msg))
 q
fdv0 ; DO validation and additional validation code
 n nval s nval=%val d %0Go
  i SQLCODE'=0 s %ok=0
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv11 ; DO validation and additional validation code
 n nval s nval=%val d %0Io
  i SQLCODE'=0 s %ok=0
 q
fdv12 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv13 ; DO validation and additional validation code
 n nval s nval=%val d %0Jo
  i SQLCODE'=0 s %ok=0
 q
fdv14 ; DO validation and additional validation code
 n nval s nval=%val d %0Ko
  i SQLCODE'=0 s %ok=0
 q
fdv2 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
fdv3 ; DO validation and additional validation code
 n nval s nval=%val d %0Ho
  i SQLCODE'=0 s %ok=0
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Fo q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="CRBL_RowID"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","CRBL_RowID","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_RowID","",$g(%msg))
 i $d(%edit(0)),%data(0)'=%edit(0) s %icol=0 s %val=$p(%data(0),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv0 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_ParRef","",$g(%msg))
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_Order","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_VisitNumber_DR","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_ReceiptAmount","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_Amount","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_AmountPayments","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_AmountPatients","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_Company_DR","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_DateOfPosting","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_BillLocation_DR","",$g(%msg))
 i $d(%edit(14)),%data(14)'=%edit(14) s %icol=14 s %val=$p(%data(14),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv14 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CRBL_DebtorNumber_DR","",$g(%msg))
 g continue^mt3232
 g ^mt3232
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0BBdun
 i %mmmsqld(6)="" g %0BBdun
 s %mmmsqld(4)=""
%0BBk1 s %mmmsqld(4)=$o(^TBAT(%mmmsqld(5),%mmmsqld(6),0,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0BBdun
 i %mmmsqld(4)'=+%mmmsqld(4) g %0BBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt3241(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0BBk1
%0BBdun 
%0BAdun 
 q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)="" g %0CBdun
 i %mmmsqld(6)="" g %0CBdun
 s %mmmsqld(4)=""
%0CBk1 s %mmmsqld(4)=$o(^TBAT(%mmmsqld(5),%mmmsqld(6),1,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0CBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(4))
 d delete^mt3251(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0CBk1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0DBr10 s $P(%dataold(16),$C(1))=-$P($g(%dataold(7)),$C(1))
 s:$c(1)'[$P($g(%dataold(16)),$C(1)) $P(%dataold(16),$C(1))=+$j($P($g(%dataold(16)),$C(1)),"",$l($p($P($g(%dataold(16)),$C(1)),".",2)))  ; Proper Decimal Places
 q
%0DBr2 s $P(%dataold(8),$C(1))=""
 s x="" f  s x=$o(^TBAT($g(%dataold(0)),$P($g(%dataold(2)),$C(1)),0,x)) q:x=""  s $P(%dataold(8),$C(1))=$P($g(%dataold(8)),$C(1))+$p(^(x),"\",2)
 s x=""
 s:$c(1)'[$P($g(%dataold(8)),$C(1)) $P(%dataold(8),$C(1))=+$j($P($g(%dataold(8)),$C(1)),"",$l($p($P($g(%dataold(8)),$C(1)),".",2)))  ; Proper Decimal Places
 q
%0DBr3 s $P(%dataold(9),$C(1))=""
 i $l($g(%dataold(3))) s $P(%dataold(9),$C(1))=$P($g(%dataold(7)),$C(1))
 s x="" f  s x=$o(^TBAT($g(%dataold(0)),$P($g(%dataold(2)),$C(1)),1,x)) q:x=""  s $P(%dataold(9),$C(1))=$P($g(%dataold(9)),$C(1))+^(x)
 s x=""
 s:$c(1)'[$P($g(%dataold(9)),$C(1)) $P(%dataold(9),$C(1))=+$j($P($g(%dataold(9)),$C(1)),"",$l($p($P($g(%dataold(9)),$C(1)),".",2)))  ; Proper Decimal Places
 q
%0DBr4 s %dataold(11)=$$CT011^at323($g(%dataold(3)),$g(%dataold(1))) q
%0DBr5 s $P(%dataold(12),$C(1))=$$CT012^at323($g(%dataold(0))) q
%0DBr7 s %dataold(13)=$$CT013^at323($g(%dataold(3))) q
%0DBr8 s %dataold(14)=$$CT014^at323($g(%dataold(3))) q
%0DBr9 s $P(%dataold(15),$C(1))=$$CT015^at323($g(%dataold(3))) q
%0DBs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0DBs6 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %mmmsqld(21)=$p($g(%dataold(1)),"||",1,1),$P(%dataold(2),$C(1))=$p($g(%dataold(1)),"||",2,2)
 i %mmmsqld(21)'="",$P(%dataold(2),$C(1))'="",$d(^TBAT(%mmmsqld(21),$P(%dataold(2),$C(1))))
 e  g %0DBdun
 s %mmmsqln=$g(^TBAT(%mmmsqld(21),$P(%dataold(2),$C(1))))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",3) s %dataold(5)=$p(%mmmsqln,"\",4) s:%dataold(5)'="" %dataold(5)=+%dataold(5) s %dataold(6)=$p(%mmmsqln,"\",5) s %dataold(7)=$p(%mmmsqln,"\",2) s:%dataold(7)'="" %dataold(7)=+%dataold(7) s %dataold(10)=$p(%mmmsqln,"\",6)
 s %dataold(0)=$p(%dataold(1),"||",1,1)
 
 s %val=$P(%dataold(2),$C(1)) d %0DBs1:%val'="" s $P(%dataold(2),$C(1),2)=%val
 s %val=$P(%dataold(5),$C(1)) d %0DBs1:%val'="" s $P(%dataold(5),$C(1),2)=%val
 s %val=$P(%dataold(7),$C(1)) d %0DBs1:%val'="" s $P(%dataold(7),$C(1),2)=%val
 d %0DBr2
 s %val=$P(%dataold(8),$C(1)) d %0DBs1:%val'="" s $P(%dataold(8),$C(1),2)=%val
 d %0DBr3
 s %val=$P(%dataold(9),$C(1)) d %0DBs1:%val'="" s $P(%dataold(9),$C(1),2)=%val
 d %0DBr4
 d %0DBr5
 s %val=$P(%dataold(12),$C(1)) d %0DBs6:%val'="" s $P(%dataold(12),$C(1),2)=%val
 d %0DBr7
 d %0DBr8
 d %0DBr9
 s %val=$P(%dataold(15),$C(1)) d %0DBs6:%val'="" s $P(%dataold(15),$C(1),2)=%val
 d %0DBr10
 s %val=$P(%dataold(16),$C(1)) d %0DBs1:%val'="" s $P(%dataold(16),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TBAT(%mmmsqld(4)))
 e  g %0GBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("CO",%mmmsqld(4)))
 e  g %0IBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("BILL-LOC",%mmmsqld(4)))
 e  g %0JBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TDEB(%mmmsqld(4)))
 e  g %0KBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Kc
%0KBdun 
%0KAdun 
%0Kc q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0HBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TBAT(%mmmsqld(5),%mmmsqld(6)))
 e  g %0FBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
]]></Routine>
</Export>
