<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSSGVF" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSSGVF ; SP 24/11/95 ; MVB Control data access for SS_GroupVBExecFunction
 ;
 ; supported calls:
 ;
 ; $$functions^MVBSSGVF(GroupID)
 ; $$byGrNaEx^MVBSSGVF(GroupID,MEDTRAKID,exe)
 ; $$select^MVBSSGVF(ROWID,skip)
 ; $$open^MVBSSGVF(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSSGVF(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSSGVF(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSSGVF(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSSGVF()
 ; $$insert^MVBSSGVF()
 ; $$update^MVBSSGVF()
 ; $$delete^MVBSSGVF(ROWID)
 ;
  ;---&SQL(DECLARE SSGVF0 CURSOR FOR SELECT * FROM SS_GroupVBExecFunction
   ;---         WHERE SSGVF_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
  ;---&sql(DECLARE SSGVF1 CURSOR FOR SELECT * FROM SS_GroupVBExecFunction
   ;---         WHERE SSGVF_ParRef=:GroupID
   ;---         AND SSGVF_SSVBF_DR->SSVBE_Display [ 'Y'
   ;---         ORDER BY SSGVF_SSVBF_DR->SSVBE_Description)
   ;--- ** SQL PUBLIC Variables: GroupID, SQLCODE
 ;
 ; Insert the data
insert(par) K PLIST(1) s PLIST(0)=par d pre("N") 
  ;---&SQL(insert INTO SS_GroupVBExecFunction VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE SS_GroupVBExecFunction VALUES :PLIST() WHERE SSGVF_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID)  ;---&SQL(DELETE FROM SS_GroupVBExecFunction WHERE SSGVF_RowID=:ROWID)
  ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Io
 Q SQLCODE
 ;
 ; Open the cursor
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN SSGVF0)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSGVF00o
 Q 0
 ;
 ; Fetch the data
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) K PLIST
  ;---&SQL(FETCH SSGVF0 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Lo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust1 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE SSGVF0) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSGVF00c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM SS_GroupVBExecFunction WHERE SSGVF_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0No
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust1
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
functions(GroupID,Language) n cnt,data 
 s GroupID=$p($g(GroupID),$c(1))
  ;---&sql(OPEN SSGVF1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSGVF10o
 k PLIST
 f cnt=1:1 d  q:SQLCODE
 . k data
 .  ;---&sql(FETCH SSGVF1 INTO :data() )
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, data
 . Do %0Qo
 . i 'SQLCODE d adjust
 s PLIST=$o(PLIST(""),-1)
 ;
  ;---&sql(CLOSE SSGVF1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSGVF10c
 q 0
 ;
 ; validate allowed by group, LABTRAKID, and exe
byGrNaEx(GroupID,LABTRAKID,exe) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM SS_GroupVBExecFunction
   ;---         WHERE SSGVF_ParRef=:GroupID
   ;---         AND SSGVF_SSVBF_DR->SSVBE_Code=:LABTRAKID
   ;---         AND SSGVF_SSVBF_DR->SSVBE_Name=:exe)
   ;--- ** SQL PUBLIC Variables: GroupID, LABTRAKID, PLIST, SQLCODE, exe
 Do %0So
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ;
 ; Adjust certain fields
adjust n desref,trans,SQLCODE
  ;---&sql( SELECT    SSGVF_SSVBF_DR->SSVBE_Description,
   ;---                 SSGVF_SSVBF_DR->SSVBE_Name,
   ;---                 SSGVF_SSVBF_DR->SSVBE_Code
   ;---         INTO    :desref(21),
   ;---                 :desref(22),
   ;---                 :desref(24)
   ;---         FROM SS_GroupVBExecFunction
   ;---         WHERE   SSGVF_RowID=:data(1))
   ;--- ** SQL PUBLIC Variables: SQLCODE, data, desref
 Do %0Uo
 ;
 ; Try and get translation
  ;---&sql( SELECT SSVBT_Desc INTO :trans FROM SS_VBExecTranslation
   ;---         WHERE SSVBT_ParRef=:data(2)
   ;---         AND (%ALPHAUP(SSVBT_SSLAN_DR->SSLAN_Desc) = %ALPHAUP(:Language)))
   ;--- ** SQL PUBLIC Variables: Language, SQLCODE, data, trans
 Do %0Wo
 ; If translation text is not null then use it in place of English
 i 'SQLCODE,$g(trans)'="" s desref(21)=trans
 s PLIST(cnt)=data(1)_$c(1)_$g(desref(21))_$c(1)_$g(desref(22))_$c(1)_$g(desref(24))
 q
adjust1 N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 i $g(skip)="Y" q
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^MVBSSVBE(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(3)_$c(1)_PLIST(2)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 ;
 q
%SSGVF00o s $zt="%SSGVF00E" s SQLCODE=$s($g(%SSGVF00c):-101,1:0) q:SQLCODE'=0  s %SSGVF00d(8)=0 s %SSGVF00d(9)=0,%SSGVF00d(10)=""
 s %SSGVF00d(5)=$g(par)
 s %SSGVF00c=1 q
%SSGVF00E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SSGVF00c,%SSGVF00d,%SSGVF00E,%SSGVF00l,%SSGVF00n,%SSGVF00R,%SSGVF00Z q
%0Afirst 
 ; asl MOD# 2
 s %SSGVF00d(1)=%SSGVF00d(5)
 i %SSGVF00d(1)="" g %0ABdun
 s %SSGVF00d(3)=""
%0ABk1 s %SSGVF00d(3)=$o(^SSU("SSGRP",%SSGVF00d(1),"VBEX",%SSGVF00d(3)))
 i %SSGVF00d(3)="" g %0ABdun
 i 1]]%SSGVF00d(3) g %0ABk1
 s %SSGVF00d(18)=$g(^SSU("SSGRP",%SSGVF00d(1),"VBEX",%SSGVF00d(3)))
 s %SSGVF00d(4)=$p(%SSGVF00d(18),"^",1)
 s %SSGVF00d(2)=(%SSGVF00d(1))_"||"_(%SSGVF00d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(%SSGVF00d(2),"||",1),"VBEX",$p(%SSGVF00d(2),"||",2))#"S":$zu(115,4) i $t { s %SSGVF00d(9)=1,%SSGVF00d(10)=$name(^SSU("SSGRP",$p(%SSGVF00d(2),"||",1),"VBEX",$p(%SSGVF00d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupVBExecFunction for RowID value: "_%SSGVF00d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SSGVF00d(7)=$p(%SSGVF00d(2),"||"),%SSGVF00d(3)=$p(%SSGVF00d(2),"||",2)
 i %SSGVF00d(7)'="",%SSGVF00d(3)'="",$d(^SSU("SSGRP",%SSGVF00d(7),"VBEX",%SSGVF00d(3)))
 i '$t
 e  i 1]]%SSGVF00d(3)
 i  g %0ACdun
 s %SSGVF00d(26)=$g(^SSU("SSGRP",%SSGVF00d(7),"VBEX",%SSGVF00d(3)))
 s %SSGVF00d(4)=$p(%SSGVF00d(26),"^",1)
 s %SSGVF00d(1)=$p(%SSGVF00d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SSGVF00d(8)=%SSGVF00d(8)+1,%ROWCOUNT=%SSGVF00d(8),%ROWID=%SSGVF00d(2),%SSGVF00c=10 q
%SSGVF00f i '$g(%SSGVF00c) { s SQLCODE=-102 q  } i %SSGVF00c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SSGVF00d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SSGVF00d(8),%SSGVF00c=100 q  } g %0Afirst:%SSGVF00c=1
%0ACdun i $zu(115,2)=1,$g(%SSGVF00d(9))=1 { l -@%SSGVF00d(10) s %SSGVF00d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SSGVF00d(8),SQLCODE=100,%SSGVF00c=100 q
%SSGVF00c i '$g(%SSGVF00c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SSGVF00d(8)),1:0)
 i $zu(115,2)=1,$g(%SSGVF00d(9))=1 { l -@%SSGVF00d(10) } k %SSGVF00c,%SSGVF00d,%SSGVF00E,%SSGVF00l,%SSGVF00n,%SSGVF00R,%SSGVF00Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SSGVF00c=100 q
%SSGVF10o s $zt="%SSGVF10E" s SQLCODE=$s($g(%SSGVF10c):-101,1:0) q:SQLCODE'=0  s %SSGVF10d(15)=0 s %SSGVF10d(16)=0,%SSGVF10d(17)="",%SSGVF10d(18)=0,%SSGVF10d(19)=""
 s %SSGVF10d(5)=$g(GroupID),%SSGVF10d(8)="Y"
 s %SSGVF10t(1)=$i(^||%sql.temp)
 s %SSGVF10c=1 q
%SSGVF10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SSGVF10c,%SSGVF10d,%SSGVF10E,%SSGVF10l,%SSGVF10n,%SSGVF10R,%SSGVF10s,%SSGVF10t,%SSGVF10Z q
%0Cfirst s %SSGVF10d(14)=""
 k ^||%sql.temp(%SSGVF10t(1),0) s ^||%sql.temp(%SSGVF10t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%SSGVF10t(1),0))
 d %0CBMod
 ; asl MOD# 5
 i $sortend(^||%sql.temp(%SSGVF10t(1),0))
 s %SSGVF10s(10)=""
%0CEk1 s %SSGVF10s(10)=$o(^||%sql.temp(%SSGVF10t(1),0,%SSGVF10s(10)))
 i %SSGVF10s(10)="" g %0CEdun
 s %SSGVF10d(10)=$s(%SSGVF10s(10)=-1E14:"",1:%SSGVF10s(10))
 s %SSGVF10s(14)=""
%0CEk2 s %SSGVF10s(14)=$o(^||%sql.temp(%SSGVF10t(1),0,%SSGVF10s(10),%SSGVF10s(14)))
 i %SSGVF10s(14)="" g %0CEk1
 s %SSGVF10d(14)=$s(%SSGVF10s(14)=-1E14:"",1:%SSGVF10s(14))
 s %SSGVF10d(48)=$g(^||%sql.temp(%SSGVF10t(1),0,%SSGVF10s(10),%SSGVF10d(14)))
 s %SSGVF10d(1)=$lg(%SSGVF10d(48),1) s %SSGVF10d(2)=$lg(%SSGVF10d(48),3) s %SSGVF10d(3)=$lg(%SSGVF10d(48),4) s %SSGVF10d(4)=$lg(%SSGVF10d(48),2)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SSGVF10d(15)=%SSGVF10d(15)+1,%ROWCOUNT=%SSGVF10d(15),%ROWID=%SSGVF10d(2),%SSGVF10c=10 q
%SSGVF10f i '$g(%SSGVF10c) { s SQLCODE=-102 q  } i %SSGVF10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%SSGVF10d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SSGVF10d(15),%SSGVF10c=100 q  } g %0Cfirst:%SSGVF10c=1
 g %0CEk2
%0CEdun 
%0CAdun 
 s %ROWCOUNT=%SSGVF10d(15),SQLCODE=100,%SSGVF10c=100 q
%SSGVF10c i '$g(%SSGVF10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SSGVF10d(15)),1:0) f %SSGVF10d(20)=1 { i $sortend(^||%sql.temp(%SSGVF10t(%SSGVF10d(20)),0),0) } k ^||%sql.temp(%SSGVF10t(1))
 i $zu(115,2)=1,$g(%SSGVF10d(16))=1 { l -@%SSGVF10d(17) } i $zu(115,2)=1,$g(%SSGVF10d(18))=1 { l -@%SSGVF10d(19) } k %SSGVF10c,%SSGVF10d,%SSGVF10E,%SSGVF10l,%SSGVF10n,%SSGVF10R,%SSGVF10s,%SSGVF10t,%SSGVF10Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SSGVF10c=100
 f %SSGVF10d(20)=1 i $sortend(^||%sql.temp(%SSGVF10t(%SSGVF10d(20)),0),0)
 q
%0CBMod ; asl MOD# 2
 s %SSGVF10d(1)=%SSGVF10d(5)
 i %SSGVF10d(1)="" g %0CBdun
 s %SSGVF10d(3)=""
%0CBk1 s %SSGVF10d(3)=$o(^SSU("SSGRP",%SSGVF10d(1),"VBEX",%SSGVF10d(3)))
 i %SSGVF10d(3)="" g %0CBdun
 i 1]]%SSGVF10d(3) g %0CBk1
 s %SSGVF10d(28)=$g(^SSU("SSGRP",%SSGVF10d(1),"VBEX",%SSGVF10d(3)))
 s %SSGVF10d(4)=$p(%SSGVF10d(28),"^",1)
 s %SSGVF10d(2)=(%SSGVF10d(1))_"||"_(%SSGVF10d(3))
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(%SSGVF10d(2),"||",1),"VBEX",$p(%SSGVF10d(2),"||",2))#"S":$zu(115,4) i $t { s %SSGVF10d(16)=1,%SSGVF10d(17)=$name(^SSU("SSGRP",$p(%SSGVF10d(2),"||",1),"VBEX",$p(%SSGVF10d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupVBExecFunction for RowID value: "_%SSGVF10d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SSGVF10d(11)=$p(%SSGVF10d(2),"||"),%SSGVF10d(3)=$p(%SSGVF10d(2),"||",2)
 i %SSGVF10d(11)'="",%SSGVF10d(3)'="",$d(^SSU("SSGRP",%SSGVF10d(11),"VBEX",%SSGVF10d(3)))
 i '$t
 e  i 1]]%SSGVF10d(3)
 i  g %0CCdun
 s %SSGVF10d(36)=$g(^SSU("SSGRP",%SSGVF10d(11),"VBEX",%SSGVF10d(3)))
 s %SSGVF10d(4)=$p(%SSGVF10d(36),"^",1)
 s %SSGVF10d(1)=$p(%SSGVF10d(2),"||")
%0CBuncommitted ;
 s %SSGVF10d(6)=%SSGVF10d(3)
 i %SSGVF10d(6)'="",$d(^SS("SSVBE",%SSGVF10d(6)))
 i '$t
 e  i 1]]%SSGVF10d(6)
 i  g %0CCdun
 s %SSGVF10d(41)=$g(^SS("SSVBE",%SSGVF10d(6)))
 s %SSGVF10d(7)=$p(%SSGVF10d(41),"^",4)
 g:'(%SSGVF10d(7)[%SSGVF10d(8)) %0CCdun
 s %SSGVF10d(10)=$p(%SSGVF10d(41),"^",2)
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(%SSGVF10d(6),"||",1))#"S":$zu(115,4) i $t { s %SSGVF10d(18)=1,%SSGVF10d(19)=$name(^SS("SSVBE",$p(%SSGVF10d(6),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBExecutables for RowID value: "_%SSGVF10d(6) ztrap "LOCK"  }
 ; asl MOD# 4
 s %SSGVF10d(12)=$lb(""_%SSGVF10d(7))
 i %SSGVF10d(6)'="",$d(^SS("SSVBE",%SSGVF10d(6)))
 i '$t
 e  i 1]]%SSGVF10d(6)
 i  g %0CDdun
 s %SSGVF10d(46)=$g(^SS("SSVBE",%SSGVF10d(6)))
 s %SSGVF10d(7)=$p(%SSGVF10d(46),"^",4) s %SSGVF10d(10)=$p(%SSGVF10d(46),"^",2)
 s %SSGVF10d(13)=$lb(""_%SSGVF10d(7))
 g:%SSGVF10d(12)'=%SSGVF10d(13) %0CDdun
%0CCuncommitted ;
 s %SSGVF10s(10)=$s(%SSGVF10d(10)'="":%SSGVF10d(10),1:-1E14),%SSGVF10d(14)=%SSGVF10d(14)+1,%SSGVF10d(47)="",$li(%SSGVF10d(47),1)=%SSGVF10d(1),$li(%SSGVF10d(47),3)=%SSGVF10d(2),$li(%SSGVF10d(47),4)=%SSGVF10d(3),$li(%SSGVF10d(47),2)=%SSGVF10d(4),^||%sql.temp(%SSGVF10t(1),0,%SSGVF10s(10),%SSGVF10d(14))=%SSGVF10d(47)
%0CDdun i $zu(115,2)=1,$g(%SSGVF10d(18))=1 { l -@%SSGVF10d(19) s %SSGVF10d(18)=0 }
%0CCdun i $zu(115,2)=1,$g(%SSGVF10d(16))=1 { l -@%SSGVF10d(17) s %SSGVF10d(16)=0 }
 g %0CBk1
%0CBdun 
 q
%0Eo n %i,icol,ir
 f icol=0:1:3 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSGroupVBExecFunction.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SSU("SSGRP",%mmmsqld(4),"VBEX",%mmmsqld(5)))
 i '$t
 e  i 1]]%mmmsqld(5)
 i  g %0GBdun
 s %mmmsqld(15)=$$%getlock^User.SSGroupVBExecFunction.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SSU("SSGRP",%mmmsqld(4),"VBEX",%mmmsqld(5)))
 i '$t
 e  i 1]]%mmmsqld(5)
 i  g %0GCdun
 k %data
 f icol=0:1:3 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.SSGroupVBExecFunction.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.SSGroupVBExecFunction.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.SSGroupVBExecFunction.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.SSGroupVBExecFunction.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SSU("SSGRP",%mmmsqld(3),"VBEX",%mmmsqld(4)))
 i '$t
 e  i 1]]%mmmsqld(4)
 i  g %0IBdun
 s %mmmsqld(14)=$$%getlock^User.SSGroupVBExecFunction.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SSU("SSGRP",%mmmsqld(3),"VBEX",%mmmsqld(4)))
 i '$t
 e  i 1]]%mmmsqld(4)
 i  g %0ICdun
 d %delete^User.SSGroupVBExecFunction.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.SSGroupVBExecFunction.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.SSGroupVBExecFunction.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.SSGroupVBExecFunction.T1(%mmmsqld(1)) g %0Ic
%0Lo d %SSGVF00f q:SQLCODE'=0
 s PLIST(0)=%SSGVF00d(1),PLIST(1)=%SSGVF00d(2),PLIST(2)=%SSGVF00d(3),PLIST(3)=%SSGVF00d(4)
 q
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(6)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(6)
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^SSU("SSGRP",%mmmsqld(8),"VBEX",PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0NBdun
 s %mmmsqld(18)=$g(^SSU("SSGRP",%mmmsqld(8),"VBEX",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"^",1)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(PLIST(1),"||",1),"VBEX",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^SSU("SSGRP",$p(PLIST(1),"||",1),"VBEX",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupVBExecFunction for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(8)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^SSU("SSGRP",%mmmsqld(8),"VBEX",PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0NCdun
 s %mmmsqld(26)=$g(^SSU("SSGRP",%mmmsqld(8),"VBEX",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(26),"^",1)
 s PLIST(0)=$p(PLIST(1),"||")
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
%0Qo d %SSGVF10f q:SQLCODE'=0
 s data(0)=%SSGVF10d(1),data(1)=%SSGVF10d(2),data(2)=%SSGVF10d(3),data(3)=%SSGVF10d(4)
 q
%0So n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Serr" s %mmmsqld(20)=0,%mmmsqld(21)="",%mmmsqld(22)=0,%mmmsqld(23)=""
 s %mmmsqld(6)=$g(GroupID),%mmmsqld(9)=$g(LABTRAKID),%mmmsqld(11)=$g(exe)
 s SQLCODE=100
 s %mmmsqld(14)=$zu(28,%mmmsqld(9),5)
 s %mmmsqld(16)=$zu(28,%mmmsqld(11),6)
 ; asl MOD# 2
 s PLIST(0)=%mmmsqld(6)
 i PLIST(0)="" g %0SBdun
 s PLIST(2)=""
%0SBk1 s PLIST(2)=$o(^SSU("SSGRP",PLIST(0),"VBEX",PLIST(2)))
 i PLIST(2)="" g %0SBdun
 i 1]]PLIST(2) g %0SBk1
 s %mmmsqld(31)=$g(^SSU("SSGRP",PLIST(0),"VBEX",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(31),"^",1)
 s PLIST(1)=(PLIST(0))_"||"_(PLIST(2))
 g:$zu(115,2)=0 %0SBuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(PLIST(1),"||",1),"VBEX",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^SSU("SSGRP",$p(PLIST(1),"||",1),"VBEX",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupVBExecFunction for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(17)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(17)'="",PLIST(2)'="",$d(^SSU("SSGRP",%mmmsqld(17),"VBEX",PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0SCdun
 s %mmmsqld(39)=$g(^SSU("SSGRP",%mmmsqld(17),"VBEX",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(39),"^",1)
 s PLIST(0)=$p(PLIST(1),"||")
%0SBuncommitted ;
 ; asl MOD# 4
 s %mmmsqld(15)=%mmmsqld(16)
 s %mmmsqld(7)=PLIST(2)
 i %mmmsqld(15)="" g %0SDdun
 i %mmmsqld(7)="" g %0SDdun
 i '$d(^SS("SSVBE",0,"Executable",%mmmsqld(15),%mmmsqld(7))) g %0SDdun
 i %mmmsqld(7)'="",$d(^SS("SSVBE",%mmmsqld(7)))
 i '$t
 e  i 1]]%mmmsqld(7)
 i  g %0SDdun
 s %mmmsqld(53)=$g(^SS("SSVBE",%mmmsqld(7)))
 s %mmmsqld(8)=$p(%mmmsqld(53),"^",1)
 s %mmmsqld(13)=$zu(28,%mmmsqld(8),5)
 g:'(%mmmsqld(13)=%mmmsqld(14)) %0SDdun
 g:$zu(115,2)=0 %0SDuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(%mmmsqld(7),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(22)=1,%mmmsqld(23)=$name(^SS("SSVBE",$p(%mmmsqld(7),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBExecutables for RowID value: "_%mmmsqld(7) ztrap "LOCK"  }
 ; asl MOD# 5
 s %mmmsqld(18)=$lb(""_%mmmsqld(15),""_%mmmsqld(13))
 i %mmmsqld(7)'="",$d(^SS("SSVBE",%mmmsqld(7)))
 i '$t
 e  i 1]]%mmmsqld(7)
 i  g %0SEdun
 s %mmmsqld(58)=$g(^SS("SSVBE",%mmmsqld(7)))
 s %mmmsqld(8)=$p(%mmmsqld(58),"^",1) s %mmmsqld(10)=$p(%mmmsqld(58),"^",3)
 s %mmmsqld(15)=$zu(28,%mmmsqld(10),6) s %mmmsqld(13)=$zu(28,%mmmsqld(8),5)
 s %mmmsqld(19)=$lb(""_%mmmsqld(15),""_%mmmsqld(13))
 g:%mmmsqld(18)'=%mmmsqld(19) %0SEdun
%0SDuncommitted ;
 s SQLCODE=0 g %0Sc
%0SEdun i $zu(115,2)=1,$g(%mmmsqld(22))=1 { l -@%mmmsqld(23) s %mmmsqld(22)=0 }
%0SDdun 
%0SCdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
 g %0SBk1
%0SBdun 
%0SAdun 
%0Sc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } i $zu(115,2)=1,$g(%mmmsqld(22))=1 { l -@%mmmsqld(23) } q
%0Serr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Sc
%0Uo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Uerr" s %mmmsqld(13)=0,%mmmsqld(14)="",%mmmsqld(15)=0,%mmmsqld(16)=""
 s %mmmsqld(10)=$g(data(1))
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(9)=%mmmsqld(10)
 s %mmmsqld(12)=$p(%mmmsqld(9),"||"),%mmmsqld(1)=$p(%mmmsqld(9),"||",2)
 i %mmmsqld(12)'="",%mmmsqld(1)'="",$d(^SSU("SSGRP",%mmmsqld(12),"VBEX",%mmmsqld(1)))
 i '$t
 e  i 1]]%mmmsqld(1)
 i  g %0UBdun
 g:$zu(115,2)=0 %0UBuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(%mmmsqld(9),"||",1),"VBEX",$p(%mmmsqld(9),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^SSU("SSGRP",$p(%mmmsqld(9),"||",1),"VBEX",$p(%mmmsqld(9),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupVBExecFunction for RowID value: "_%mmmsqld(9) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(12)=$p(%mmmsqld(9),"||"),%mmmsqld(1)=$p(%mmmsqld(9),"||",2)
 i %mmmsqld(12)'="",%mmmsqld(1)'="",$d(^SSU("SSGRP",%mmmsqld(12),"VBEX",%mmmsqld(1)))
 i '$t
 e  i 1]]%mmmsqld(1)
 i  g %0UCdun
%0UBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^SS("SSVBE",%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  s desref(24)="",desref(21)="",desref(22)="",%mmmsqld(2)="" g %0UCp5
 s %mmmsqld(35)=$g(^SS("SSVBE",%mmmsqld(2)))
 s desref(21)=$p(%mmmsqld(35),"^",2) s desref(22)=$p(%mmmsqld(35),"^",3) s desref(24)=$p(%mmmsqld(35),"^",1)
%0UCp5 
 g:$zu(115,2)=0 %0UCuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(15)=1,%mmmsqld(16)=$name(^SS("SSVBE",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBExecutables for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^SS("SSVBE",%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  s desref(24)="",desref(21)="",desref(22)="",%mmmsqld(2)="" g %0UDp1
 s %mmmsqld(40)=$g(^SS("SSVBE",%mmmsqld(2)))
 s desref(21)=$p(%mmmsqld(40),"^",2) s desref(22)=$p(%mmmsqld(40),"^",3) s desref(24)=$p(%mmmsqld(40),"^",1)
%0UDp1 
%0UCuncommitted ;
 s SQLCODE=0 g %0Uc
%0UDdun i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) s %mmmsqld(15)=0 }
%0UCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0UBdun 
%0UAdun 
%0Uc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) } q
%0Uerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Uc
%0Wo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Werr" s %mmmsqld(16)=0,%mmmsqld(17)="",%mmmsqld(18)=0,%mmmsqld(19)=""
 s %mmmsqld(4)=$g(data(2)),%mmmsqld(9)=$g(Language)
 s SQLCODE=100
 s %mmmsqld(10)=$zu(28,%mmmsqld(9),6)
 ; asl MOD# 2
 s %mmmsqld(8)=%mmmsqld(10)
 i %mmmsqld(8)="" g %0WBdun
 s %mmmsqld(6)=""
%0WBk1 s %mmmsqld(6)=$o(^SS("LAN",0,"Desc",%mmmsqld(8),%mmmsqld(6)))
 i %mmmsqld(6)="" g %0WBdun
 g:$zu(115,2)=0 %0WBuncommitted i $zu(115,2)=1 l +^SS("LAN",$p(%mmmsqld(6),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^SS("LAN",$p(%mmmsqld(6),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_Language for RowID value: "_%mmmsqld(6) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(13)=$lb(""_%mmmsqld(8))
 i %mmmsqld(6)'="",$d(^SS("LAN",%mmmsqld(6)))
 i '$t
 e  i 1]]%mmmsqld(6)
 i  g %0WCdun
 s %mmmsqld(33)=$g(^SS("LAN",%mmmsqld(6)))
 s %mmmsqld(7)=$p(%mmmsqld(33),"^",2)
 s %mmmsqld(8)=$zu(28,%mmmsqld(7),6)
 s %mmmsqld(14)=$lb(""_%mmmsqld(8))
 g:%mmmsqld(13)'=%mmmsqld(14) %0WCdun
%0WBuncommitted ;
 ; asl MOD# 4
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(3)="" g %0WDdun
 i %mmmsqld(5)="" g %0WDdun
 i '$d(^SS("SSVBE",%mmmsqld(3),"TRANS",%mmmsqld(5))) g %0WDdun
 s %mmmsqld(41)=$g(^SS("SSVBE",%mmmsqld(3),"TRANS",%mmmsqld(5)))
 s trans=$p(%mmmsqld(41),"^",1)
 s %mmmsqld(12)=(%mmmsqld(3))_"||"_(%mmmsqld(5))
 g:$zu(115,2)=0 %0WDuncommitted i $zu(115,2)=1 l +^SS("SSVBE",$p(%mmmsqld(12),"||",1),"TRANS",$p(%mmmsqld(12),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^SS("SSVBE",$p(%mmmsqld(12),"||",1),"TRANS",$p(%mmmsqld(12),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_VBExecTranslation for RowID value: "_%mmmsqld(12) ztrap "LOCK"  }
 ; asl MOD# 5
 s %mmmsqld(15)=$p(%mmmsqld(12),"||"),%mmmsqld(5)=$p(%mmmsqld(12),"||",2)
 i %mmmsqld(15)'="",%mmmsqld(5)'="",$d(^SS("SSVBE",%mmmsqld(15),"TRANS",%mmmsqld(5)))
 e  g %0WEdun
 s %mmmsqld(49)=$g(^SS("SSVBE",%mmmsqld(15),"TRANS",%mmmsqld(5)))
 s trans=$p(%mmmsqld(49),"^",1)
 s %mmmsqld(3)=$p(%mmmsqld(12),"||")
%0WDuncommitted ;
 s SQLCODE=0 g %0Wc
%0WEdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0WDdun 
%0WCdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
 g %0WBk1
%0WBdun 
%0WAdun 
%0Wc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } q
%0Werr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Wc
]]></Routine>
</Export>
