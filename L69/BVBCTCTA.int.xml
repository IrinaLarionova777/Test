<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTCTA" type="INT" languagemode="0"><![CDATA[
BVBCTCTA ; IG 30/07/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:23 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$select^BVBCTCTA(ROWID)
 ; $$open^BVBCTCTA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTCTA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTCTA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTCTA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTCTA()
 ; $$insert^BVBCTCTA(par)
 ; $$update^BVBCTCTA(ROWID)
 ; $$delete^BVBCTCTA(ROWID,Comments)
 ; $$getall^BVBCTCTA(par)
 ; 
  
 ; Insert the data
insert(par) K PLIST(1) s PLIST(0)=par
 s PLIST(2)=$o(^CT("COMP",$p(PLIST(0),"||",1),"TS",$p(PLIST(0),"||",2),"SCREEN",""),-1)+1
 d %0Bo
 I 'SQLCODE d  Q $$select(%ROWID)
 .d:$g(PLIST(7))["Y" post(%ROWID)
 .d add(%ROWID,PLIST(4))
 Q SQLCODE
 ; Update the data
update(ROWID) D pre s ROWID=$g(ROWID)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE d  D adjust
 .d:$g(PLIST(7))["Y" post(ROWID)
 Q SQLCODE
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTCTA0o
 Q 0
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par)
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor 
close() d %CTCTA0c 
 q 0
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre q
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 Q
 ; add all phases to a screen
add(rowid,mand) n (rowid,mand) k ^TMP($zn,$j)
 s par=$p(rowid,"||",1,3)
 ; get all phases for the test set
 i $$open^BVBCTCTP(par)
 f cnt=1:1 q:$$fetch^BVBCTCTP(par)  m ^TMP($zn,$j,cnt)=PLIST
 i $$close^BVBCTCTP()
 ; set all phases for the screen
 s cnt="" f  s cnt=$o(^TMP($zn,$j,cnt)) q:cnt=""  d
 .k PLIST s PLIST(3)=$g(^TMP($zn,$j,cnt,1)),PLIST(4)=$g(^TMP($zn,$j,cnt,4))
 .i mand="Y" s PLIST(4)="Y"
 .s PLIST=$o(PLIST(""),-1) i $$insert^BVBCTCTB(rowid)
 k ^TMP($zn,$j)
 q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(5),$c(1))_$c(1)_$P(PLIST(6),$c(1))_$c(1)_$p($g(PLIST(7)),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
post(RowID) n (RowID) s RowID=$g(RowID),par=$p(RowID,"||",1,2)
 i $$open(par)
 f  q:$$fetch(par)  d:PLIST(1)'=RowID
 .i $g(PLIST(7))["Y" s PLIST(7)="N" i $$update(PLIST(1))
 i $$close()
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs3 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0ABs4 s %val=$p("Positive|Negative|Auto","|",$l($p("|P|N|A|","|"_%val_"|"),"|")) q
%CTCTA0o s SQLCODE=$s($g(%CTCTA0c):-101,1:0) q:SQLCODE'=0
 s %CTCTA0c=1 k %CTCTA0m
 s %CTCTA0E=$zt,%CTCTA0f=0,%CTCTA0e=0,%CTCTA0L=""
 s %CTCTA0d(2)=$P(par,$C(1))
 s:%CTCTA0d(2)="" %CTCTA0d(2)=$E(par,2,999)
 l +^mtemp s %CTCTA0t(1)=$zp(^mtemp(" "))+1,^(%CTCTA0t(1))="" l -^mtemp
 q
%0Afirst   ;  init
 k ^mtemp(%CTCTA0t(1),0)
 ; asl MOD# 3
 d %0ABMod
 s %CTCTA0s(4)=""
%0ACk1 s %CTCTA0s(4)=$o(^mtemp(%CTCTA0t(1),0,%CTCTA0s(4)))
 i %CTCTA0s(4)="" g %0ACdun
 s $P(%CTCTA0d(4),$C(1))=$s(%CTCTA0s(4)=-99999999999999999:"",1:%CTCTA0s(4))
 s %CTCTA0s(5)=""
%0ACk2 s %CTCTA0s(5)=$o(^mtemp(%CTCTA0t(1),0,%CTCTA0s(4),%CTCTA0s(5)))
 i %CTCTA0s(5)="" g %0ACk1
 s %CTCTA0d(5)=$s(%CTCTA0s(5)=" ":"",1:%CTCTA0s(5))
 s %CTCTA0n=$g(^mtemp(%CTCTA0t(1),0,%CTCTA0s(4),%CTCTA0s(5)))
 s %CTCTA0d(1)=$p(%CTCTA0n,"|~|",1) s %CTCTA0d(6)=$p(%CTCTA0n,"|~|",2) s %CTCTA0d(7)=$p(%CTCTA0n,"|~|",3) s %CTCTA0d(8)=$p(%CTCTA0n,"|~|",4) s %CTCTA0d(9)=$p(%CTCTA0n,"|~|",5) s %CTCTA0d(10)=$p(%CTCTA0n,"|~|",6)
 s %val=$P(%CTCTA0d(4),$C(1)) d %0ABs3:%val'="" s $P(%CTCTA0d(4),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCTA0f=%CTCTA0f+1 s %CTCTA0c=10 q
%CTCTA0f i '$g(%CTCTA0c) s SQLCODE=-102 q
 i %CTCTA0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTCTA0c=1
 g %0ACk2
%0ACdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCTA0c=100 q
%CTCTA0c i '$g(%CTCTA0c) s SQLCODE=-102 q
 f %CTCTA0t=1:1:1 k ^mtemp(%CTCTA0t(%CTCTA0t))
 k %CTCTA0c,%CTCTA0d,%CTCTA0e,%CTCTA0E,%CTCTA0f,%CTCTA0l,%CTCTA0L,%CTCTA0n,%CTCTA0r,%CTCTA0R,%CTCTA0s,%CTCTA0t s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCTA0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0ABMod ; asl MOD# 2
 n %CTCTA0n  ; Nested NEWing for Subquery...
 s %CTCTA0d(1)=$g(%CTCTA0d(2))
 s %CTCTA0d(11)=$p($g(%CTCTA0d(1)),"||",1,1),%CTCTA0d(12)=$p($g(%CTCTA0d(1)),"||",2,2)
 i %CTCTA0d(11)="" g %0ABdun
 i %CTCTA0d(12)="" g %0ABdun
 s $P(%CTCTA0d(6),$C(1))=""
%0ABk1 s $P(%CTCTA0d(6),$C(1))=$o(^CT("COMP",%CTCTA0d(11),"TS",%CTCTA0d(12),"SCREEN",$P(%CTCTA0d(6),$C(1))))
 i $P(%CTCTA0d(6),$C(1))="" g %0ABdun
 i $P(%CTCTA0d(6),$C(1))'=+$P(%CTCTA0d(6),$C(1)) g %0ABdun
 s %CTCTA0n=$g(^CT("COMP",%CTCTA0d(11),"TS",%CTCTA0d(12),"SCREEN",$P(%CTCTA0d(6),$C(1))))
 s %CTCTA0d(4)=$p(%CTCTA0n,"\",3) s:%CTCTA0d(4)'="" %CTCTA0d(4)=+%CTCTA0d(4) s %CTCTA0d(7)=$p(%CTCTA0n,"\",1) s %CTCTA0d(8)=$p(%CTCTA0n,"\",2) s %CTCTA0d(9)=$p(%CTCTA0n,"\",4) s %CTCTA0d(10)=$p(%CTCTA0n,"\",5)
 s %CTCTA0d(5)=(%CTCTA0d(11))_"||"_(%CTCTA0d(12))_"||"_($P(%CTCTA0d(6),$C(1)))
 s %val=$P(%CTCTA0d(6),$C(1)) d %0ABs1:%val'="" s $P(%CTCTA0d(6),$C(1),2)=%val
 s %val=$P(%CTCTA0d(8),$C(1)) d %0ABs2:%val'="" s $P(%CTCTA0d(8),$C(1),2)=%val
 s %val=$P(%CTCTA0d(4),$C(1)) d %0ABs3:%val'="" s $P(%CTCTA0d(4),$C(1),2)=%val
 s %val=$P(%CTCTA0d(9),$C(1)) d %0ABs4:%val'="" s $P(%CTCTA0d(9),$C(1),2)=%val
 s %val=$P(%CTCTA0d(10),$C(1)) d %0ABs2:%val'="" s $P(%CTCTA0d(10),$C(1),2)=%val
 s %CTCTA0s(4)=$s($P(%CTCTA0d(4),$C(1))'="":$P(%CTCTA0d(4),$C(1)),1:-99999999999999999),%CTCTA0s(5)=$s(%CTCTA0d(5)'="":%CTCTA0d(5),1:" "),%CTCTA0n="",$p(%CTCTA0n,"|~|",1)=%CTCTA0d(1),$p(%CTCTA0n,"|~|",2)=%CTCTA0d(6),$p(%CTCTA0n,"|~|",3)=%CTCTA0d(7),$p(%CTCTA0n,"|~|",4)=%CTCTA0d(8),$p(%CTCTA0n,"|~|",5)=%CTCTA0d(9),$p(%CTCTA0n,"|~|",6)=%CTCTA0d(10),^mtemp(%CTCTA0t(1),0,%CTCTA0s(4),%CTCTA0s(5))=%CTCTA0n
 g %0ABk1
%0ABdun 
 q
%0Bo n %insert,icol,ir
 f icol=0:1:7 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt3351("1")
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(PLIST(1),$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(PLIST(1),2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2),$P(%mmmsqld(6),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$P(%mmmsqld(6),$C(1))'="",$d(^CT("COMP",%mmmsqld(4),"TS",%mmmsqld(5),"SCREEN",$P(%mmmsqld(6),$C(1))))
 e  g %0CBdun
 k %data,%edit
 f icol=0:1:7 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt3351(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(2)),"||",3,3)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^CT("COMP",%mmmsqld(3),"TS",%mmmsqld(4),"SCREEN",$P(%mmmsqld(5),$C(1))))
 e  g %0DBdun
 d delete^mt3351(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTCTA0f q:SQLCODE'=0
 s PLIST(0)=%CTCTA0d(1),PLIST(1)=%CTCTA0d(5),PLIST(2)=%CTCTA0d(6),PLIST(3)=%CTCTA0d(7),PLIST(4)=%CTCTA0d(8),PLIST(5)=%CTCTA0d(4),PLIST(6)=%CTCTA0d(9),PLIST(7)=%CTCTA0d(10)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(12)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(13)=$p($g(%mmmsqld(3)),"||",2,2),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",3,3)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(12)'="",%mmmsqld(13)'="",$P(PLIST(2),$C(1))'="",$d(^CT("COMP",%mmmsqld(12),"TS",%mmmsqld(13),"SCREEN",$P(PLIST(2),$C(1))))
 e  g %0HBdun
 s %mmmsqln=$g(^CT("COMP",%mmmsqld(12),"TS",%mmmsqld(13),"SCREEN",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"\",1) s PLIST(4)=$p(%mmmsqln,"\",2) s PLIST(5)=$p(%mmmsqln,"\",3) s:PLIST(5)'="" PLIST(5)=+PLIST(5) s PLIST(6)=$p(%mmmsqln,"\",4) s PLIST(7)=$p(%mmmsqln,"\",5)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs2:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(5),$C(1)) d %0ABs3:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s %val=$P(PLIST(6),$C(1)) d %0ABs4:%val'="" s $P(PLIST(6),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
