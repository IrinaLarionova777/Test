<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="epr.CTIconAssociation">
<Description>
Associates an icon against a code to pictorial description</Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract</Super>
<TimeCreated>60218,47094.11276</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>12</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="SQLCODE">
<Default>Code</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Final>0</Final>
<Default>Code</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Index name="UniqueCodeIndex">
<Description>
Uniqueness index for property Code</Description>
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>Code</Properties>
<Unique>1</Unique>
</Index>

<Property name="Code">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>1</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="COLLATION" value="ALPHAUP"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="CondDescription">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="CondExpr">
<Description>
Conditional Expression</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Description">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN" value="250"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Icon">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="IsDirty">
<Description>
internal flag for marking the record has been updated on site, so that this does not get overwritten in full builds.
- updated only if websys.Configuration property TrakEnabledOptions is turned off (usual for sites)
and sites update the record.</Description>
<Type>%Library.Boolean</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Method name="FPBookingRoomShow">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[EpisodeID:%Library.String,PARAMS:%Library.String,&ARY:%Library.String,&COL:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q str
]]></Implementation>
</Method>

<Method name="FPData">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[EpisodeID:%Library.String,PARAMS:%Library.String,&ARY:%Library.String,&imgLIST:%Library.String,&imgDONE:%Library.String]]></FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q
]]></Implementation>
</Method>

<Method name="FPGatheringData">
<Description>
Any information required by the condition expressions on the icons is gathered in this method.
On top of that all the information required by the epr.floorplan.csp is gathered in this method.
And this method is subsequently called by many components that require similar information.  These include:
PACWard.ListPatientsInWard
PACWardRoom.ListPatients
PAAdm.ListCurrentInLoc
PAPerson.Banner</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[EpisodeID:%Library.String="",PARAMS:%Library.String,&ARY:%Library.String,&pColorArray:%Library.String]]></FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q
]]></Implementation>
</Method>

<Method name="FPHeadingShow">
<Description>
KM: 19-Mar-2002: Called from epr.floorplan.csp and pacward.listpatients.csp</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[isSetup:%Library.String,page:%Library.String,&LocID:%Library.String,&WardID:%Library.String,&isEMLoc:%Library.String,&DeptType:%Library.String,&FPLayout:%Library.String]]></FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q
]]></Implementation>
</Method>

<Method name="FPTitle">
<Description>
ab 10.03.04 - 42654 - defines the tooltip for the standard floorplan, from CO108^at84b</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[PatientID:%String="",EpisodeID:%String="",&ARY:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	q str
]]></Implementation>
</Method>

<Method name="FPTitleR">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[PatientID:%String,&ARY:%String,rmQueryType:%String=""]]></FormalSpec>
<Private>0</Private>
<ReturnType>%String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q str
]]></Implementation>
</Method>

<Method name="FPWaitingRoomShow">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[EpisodeID:%Library.String,PARAMS:%Library.String,&ARY:%Library.String,&COL:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q str
]]></Implementation>
</Method>

<Method name="GetCTIcons">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[EpisodeID:%Library.String,&count:%Library.String,&ARY:%Library.String,&imgLIST:%Library.String]]></FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q
]]></Implementation>
</Method>

<Method name="GetEpisodeForIcon">
<Description>
ab - 5.11.03 40435 - gets the latest episode for the patient type icons when they are displayed on patient list</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>PatientID:%String="",EpisodeID:%String="",PatType:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	q EpisodeID
]]></Implementation>
</Method>

<Method name="GetIconList">
<Description>
returns a list of the icons and there priorities
"codes" is a comma delimited string with of the codes to retrieve</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&list:%Library.String,codes:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n objid,obj,Code,i,seq
 ;
 f i=1:1 {
 s Code=$p(codes,",",i)
 i Code="" Q
 s objid=##Class(epr.CTIconAssociation).GetIdFromCodeOrDescription(Code)
 s obj=##Class(epr.CTIconAssociation).%OpenId(objid)
 i obj {
 i obj.Icon'="" {
 S Code=##Class(%Library.Collation).AlphaUp(Code)
 //s list(Code,"priority")=obj.Sequence
 s list(Code,"image")=obj.Icon
 s list(Code,"desc")=obj.Description
 }
 d obj.%Close()
 }
 }
 q
]]></Implementation>
</Method>

<Method name="GetImageFromCode">
<Description>
KM 24-Sept-2001: Called from component web.PAPerson.Banner</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>Code:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 //This method is used in many component items where a specific image is displayed in the image field.
 n objid,obj,str
 s str=""
 s objid=##Class(epr.CTIconAssociation).GetIdFromCodeOrDescription(Code)
 s obj=##Class(epr.CTIconAssociation).%OpenId(objid)
 i obj {
 i obj.Icon'="" s str=obj.Icon
 d obj.%Close()
 }
 q str
]]></Implementation>
</Method>

<Method name="GetPatientType">
<Description>
ab 16.06.03 32081 - returns patient type(s) based on patientid or episodeid
I,E,O,B (booked inpatient),D (recently discharged)
definitions from 30968</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>PatientID:%String="",EpisodeID:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	q str
]]></Implementation>
</Method>

<Method name="NextMostUrgentPatient">
<Description>
ab 10.09.03 - 35675 - compare patients to find which is the next most urgent
most urgent patient is:
1. patient without care provider
2. patient with highest triage catagory
3. patient waiting the longest (based on triage date/time)</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>MostUrgent:%String="",EpisodeID:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	q MostUrgent
]]></Implementation>
</Method>

<Method name="websysDeleteProcedure">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compref:%String,id:%String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n rs,rsP
 q:'id

 //Need to loop through all existing profiles and remove this icon from profiles.
 s rs=##Class(%ResultSet).%New("epr.CTIconProfile:Find")
 i rs {
 d rs.Execute("")
 f  {
 q:'rs.Next()
 s ProfileID=rs.Data("ID")
 s rsP=##Class(%ResultSet).%New("epr.CTIconProfile:ItemsFind")
 i rsP {
 d rsP.Execute(ProfileID)
 f  {
 q:'rsP.Next()
 i rsP.Data("IconID")=id d ##Class(epr.CTIconProfileItem).websysDelete(rsP.Data("ID"))
 }
 d rsP.%Close()
 }

 }
 d rs.%Close()
 }

 d ##Class(epr.CTIconAssociation).%DeleteId(id)

 q
]]></Implementation>
</Method>

<Method name="websysSaveAll">
<Description><![CDATA[
Default save method used for updating the database for Components of type Edit.<br>
<br>
The compref is the  component reference which is the string from which we can deduce the instance of<BR>
websysComponent<BR>
websysComponentItem<BR>
id is the id for the instance of class we wish to update.]]></Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compref:%String,id:%String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n cnt,new,trakoptionsenabled
 s new=0
 ;s ^ZSB("Save",2)=""
 i '..websysBeforeSave(compref,.id) q 0
 ;TN: if site has EnableTRAKOptions turned off in the configuration (so cannot save against SYSTEM) then
 ; mark IsDirty as true so patching will not override site's saved icons
 s trakoptionsenabled=$lg($g(^websys.ConfigurationD(1)),18)
 for cnt=1:1 { 
 q:$g(%request.Data("IDz"_cnt,1),"_zz")="_zz"
 s obj=##Class(epr.CTIconAssociation).%OpenId($g(%request.Data("IDz"_cnt,1)),0)
 i obj {
 i $g(%request.Data("Codez"_cnt,1))'="" s obj.Code=$g(%request.Data("Codez"_cnt,1))
 s obj.Icon=$g(%request.Data("Iconz"_cnt,1))
 i 'trakoptionsenabled s obj.IsDirty=1
 i trakoptionsenabled s obj.IsDirty=0
 d obj.%Save(0)
 ;s ^ZSB("Save",cnt)=obj.%Save(0)
 d obj.%Close()
 }
 }
 ;
 d ..websysAfterSave(compref,.id,new)
 q
]]></Implementation>
</Method>

<Query name="Find">
<Type>%Library.SQLQuery</Type>
<FormalSpec>Code:%String,Description:%String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT  ID,Code,Icon,Description
FROM     epr.CTIconAssociation
WHERE (Code %STARTSWITH :Code)
AND (%ALPHAUP Description [ %ALPHAUP :Description)
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Code,Icon,Description"/>
</Query>

<Query name="LookUpCustom">
<Type>%Library.SQLQuery</Type>
<FormalSpec>desc:%String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT CODE, ID, DESCRIPTION, Icon
FROM epr.CTIconAssociation
WHERE (%ALPHAUP CODE %STARTSWITH %ALPHAUP :desc)
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="2"/>
<Parameter name="ROWSPEC" value="Code:%String,HIDDEN:%String,Description:%String,Icon:%String"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^epr.CTIconAssociationD</DataLocation>
<DefaultData>CTIconAssociationDefaultData</DefaultData>
<IdLocation>^epr.CTIconAssociationD</IdLocation>
<IndexLocation>^epr.CTIconAssociationI</IndexLocation>
<StreamLocation>^epr.CTIconAssociationS</StreamLocation>
<Data name="CTIconAssociationClassName">
<Attribute>%%CLASSNAME</Attribute>
<Structure>node</Structure>
<Subscript>0</Subscript>
</Data>
<Data name="CTIconAssociationDefaultData">
<Structure>listnode</Structure>
<Value name="1">
<Value>Code</Value>
</Value>
<Value name="2">
<Value>Icon</Value>
</Value>
<Value name="3">
<Value>Sequence</Value>
</Value>
<Value name="4">
<Value>Description</Value>
</Value>
<Value name="5">
<Value>CondExpr</Value>
</Value>
<Value name="6">
<Value>CondDescription</Value>
</Value>
<Value name="7">
<Value>IsDirty</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
