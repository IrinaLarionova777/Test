<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="epr.CTIconProfile">
<Description>
A list of icons</Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract</Super>
<TimeCreated>60218,47094.124887</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>12</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="SQLCODE">
<Default>Code</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Final>0</Final>
<Default>Description</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Property name="Code">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="CodeTableIcons">
<Type>%Library.Boolean</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="Description">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Items">
<Type>epr.CTIconProfileItem</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Cardinality>children</Cardinality>
<Collection/>
<Inverse>ParRef</Inverse>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>1</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Method name="Gather">
<Description>
ab 14.05.03 - 32393
gathers ARY data for icon profiles, only gets the data that is needed
will replace CTIconAssociation.FPGatheringData for most components that use icon profiles.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compid:%Library.String="",compitmid:%Library.String="",ProfileID:%Library.String="",pstring:%Library.String=""</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 ;ab 14.05.03 - 32393 - gathers ARY data for icon profiles
 n (msg,%request,%response,%session,compid,compitmid,ProfileID,pstring,ARY)

 s EpisodeID=$p(pstring,"^",1),ApptID=$p(pstring,"^",2),SchedDate=$p(pstring,"^",3),PatientID=$p(pstring,"^",4),WardID=$p(pstring,"^",5),RoyalID=$p(pstring,"^",6),OperRoomID=$p(pstring,"^",7),SchedID=$p(pstring,"^",8),OEOrdID=$p(pstring,"^",9)
 ;
 i EpisodeID'="" s PatientID=$p($g(^PAADM(EpisodeID)),"^",1)
 s mradm=$s(EpisodeID:$p($g(^PAADM(EpisodeID)),"^",61),1:"")
 ;s ^ZJUDE($zn,"PS")=EpisodeID_"^"_ApptID_"^"_SchedDate_"^"_PatientID_"^"_WardID_"^"_RoyalID_"^"_OperRoomID_"^"_SchedID
 ;
 q:'ProfileID
 ;
 ; run through all icons against profile and get conditional expression and conditional description
 s itm="" f  s itm=$o(^epr.CTIconProfileD(ProfileID,"Items",itm)) q:itm=""  d
 . q:'$ld(^epr.CTIconProfileD(ProfileID,"Items",itm),3)
 . s IconID=$li(^epr.CTIconProfileD(ProfileID,"Items",itm),3)
 . q:((IconID="")||('$d(^epr.CTIconAssociationD(IconID))))
 . i $ld(^epr.CTIconAssociationD(IconID),5),$li(^epr.CTIconAssociationD(IconID),5)'="" s expr(IconID_"e")=$li(^epr.CTIconAssociationD(IconID),5)
 . i $ld(^epr.CTIconAssociationD(IconID),6),$li(^epr.CTIconAssociationD(IconID),6)'="" s expr(IconID_"d")=$li(^epr.CTIconAssociationD(IconID),6)
 q:'$d(expr)
 ;
 ; extract the variables that the icons are expecting
 s i="" f  s i=$o(expr(i)) q:i=""  d
 . s s=$g(expr(i))
 . ;s ^zab($zn,"expr",i)=s
 . ;for every ARY(" referenced in the expression, get the var from the expression and set it in param
 . s ch=0 f  s ch=$f(s,"ARY(""",ch) q:ch=0  d
 . . s prm=$p($e(s,ch,$l(s)),"""")
 . . i prm'="" s param(prm)=""
 ;q:'$d(param) ;do not quit here, not all icon conditionals depend on ARY variables, eg: PatTypeXX,gotAllergy
 ;m ^zab($zn,"param")=param
 ;

 ; for each param needed, run the code from the ^epr.CTIconProfileG global, and set the ARY
 s i="" f  s i=$o(param(i)) q:i=""  d
 . k val,val1,val2
 . s (val,exec)=""
 . s exec=$g(^epr.CTIconProfileI("IconGlobal",i)) q:exec=""
 . x exec
 . s ARY(i)=$g(val)
 ;i PatientID m ^zab($zn,"ARY",PatientID)=ARY
 ;
 q
]]></Implementation>
</Method>

<Method name="GetField">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ProfileID:%Library.String,Field:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n val,obj,expr
 s val=""
 q:'ProfileID val
 q:Field="" val
 s obj=##Class(epr.CTIconProfile).%OpenId(ProfileID)
 i obj {
 s expr="s val=obj."_Field
 x expr
 d obj.%Close()
 }
 q val
]]></Implementation>
</Method>

<Method name="ItemsFindClose">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<PlaceAfter>ItemsFindFetch</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 N work,obj

 //s work=$li(QHandle,3)
 //s obj=$li(work,1)

 //SYSTEMOREF //i obj d obj.%Close()
 ;
 s QHandle=""
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="ItemsFindExecute">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,ProfileID:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,obj,sCount,j,sort
 s user=$lb(ProfileID)
 k ^TMP("WEB",$J)
 k ^zkath("CTIconProfile","ItemsFindExecute")

 s sCount=1
 s obj=##Class(epr.CTIconProfile).%OpenId(ProfileID,0)

 i obj {
 f j=1:1:obj.Items.Count()  {
 s itm=obj.Items.GetAt(j)
 s (IconID,IconCode,IconDesc,IconPath)=""
 i itm.IconDR {
 s IconID=itm.IconDR.%Id()
 s IconCode=itm.IconDR.Code
 s IconDesc=itm.IconDR.Description
 s IconPath=itm.IconDR.Icon
 }
 i itm.Sequence="" {s sort=$$getSort(sCount)} else {s sort=+itm.Sequence}
 s ^TMP("WEB",$J,sort)=$lb(itm.%Id(),IconID,IconCode,IconDesc,IconPath,itm.Sequence)
 s sCount=sCount+1
 d itm.%Close()
 }
 d obj.%Close()

 }

 s work=$lb("")
 s QHandle=$lb(0,user,work)

 Quit $$$OK

getSort(sCount)
 q $e("Z000",1,4-$l(sCount))_sCount
]]></Implementation>
</Method>

<Method name="ItemsFindFetch">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<PlaceAfter>ItemsFindExecute</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work,cnt

 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)

 s cnt=$li(work,1)
 s cnt=$o(^TMP("WEB",$J,cnt))
 i cnt="" s AtEnd=1,Row="" q $$$OK

 s Row=$g(^TMP("WEB",$J,cnt))
 s work=$lb(cnt)
 s QHandle=$lb(AtEnd,user,work)
 q $$$OK
]]></Implementation>
</Method>

<Method name="PreAdmissionDesc">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>EpisodeID:%Library.String=""</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n desc,obj,type
 s desc=""
 q:'EpisodeID ""
 ;
 s desc=##Class(websys.StandardTypeItem).GetDescription("AdmStatus",$g(ARY("PAADMVisitStatus")))
 ;
 ;
 q desc
]]></Implementation>
</Method>

<Method name="Show">
<Description>
Created for Log 26756</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compid:%Library.String,ItemID:%Library.String,ProfileID:%Library.String,val:%Library.String,ImageReturnType:%Library.String=""</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 i '$d(ARY) d ##class(epr.CTIconProfile).Gather(compid,ItemID,ProfileID,val)
 ;
 n (%request,%session,msg,compid,ItemID,ProfileID,val,ImageReturnType,ARY,isEMLoc,WardID,depsAllcToWard,IMAGES,t)
 k imgLIST,imgLISTsort
 s (imgLIST,imgLISTsort)=""
 /*
 KM 27-Aug-2002: The following components use IconProfiles
 epr.floorplan.Messages: New IconProfile item.
 PACWard.FindPatientsInWard: New IconProfile Column.
 PACWardRoom.ListPatients: New IconProfile Column.
 PAAdm.ListCurrentInLoc: New IconProfile Column.
 PAAdm.ListDocCurrent: New IconProfile Column.
 RBAppointment.FindRescDaySched: New IconProfile Column.
 PAPatMas.ListEMRPatDetails: New IconProfile Column.
 PAPerson.Banner
 ;s ^zkath("CTIconProfile","Show",EpisodeID)=compid_"^"_ItemID_"^"_ProfileID_"^"_val_"^"_ImageReturnType
 */
 ;
 //Some of the Icon Profile condition expressions have not been changed to use the ARY variable so need to set these for the moment
 s PatientID=$g(ARY("PatientID"))
 s isEMLoc=$g(ARY("isEMLoc"))
 s WardID=$g(ARY("WardID"))
 ;
 s CTIcons=""
 ;
 i ProfileID {
 s obj=##Class(epr.CTIconProfile).%OpenId(ProfileID,0)
 i obj {
 s CTIcons=obj.CodeTableIcons
 f ifyouusethisyousuck=1:1:obj.Items.Count() {
 i obj.Items {
 s itm=obj.Items.GetAt(ifyouusethisyousuck)
 s PARAMS=PatientID_"^"_isEMLoc_"^"_WardID_"^"_ApptID
 i itm.IconDR'="" d itm.Get($g(EpisodeID),PARAMS,.ARY,.imgLIST)
 }
 }
 d obj.%Close()
 }

 }
 ;
 //Access all icons setup against codetable items.
 i CTIcons="" d ##Class(epr.CTIconAssociation).GetCTIcons($g(EpisodeID),"",.ARY,.imgLIST)
 ;
 //Need to display icons by their sequence number, if they have one, so need to re-sort the array in sequence order.
 //It is possible that icons could have been given the same sequence number* so need to use two subscripts on the imgLISTsort array.
 //*As you set up sequence numbers in the database icons and also on the profile icons but they all show on the same profile
 s x=0,count=0
 f  {
 s x=$o(imgLIST(x))	q:x=""
 ;
 i $g(imgLIST(x,"priority"))'="" {
 ;To ensure that the priority icons come first (they are hard coded as "!");
 ; ab 52834 - sequence number in format Y0001 Y0002 etc
 i $g(imgLIST(x,"priority"))="!" {s seq="!" } else {s seq=$$getSortY($g(imgLIST(x,"priority")))}
 ;i $g(imgLIST(x,"priority"))="!" {s seq="!" } else {s seq="Y"_$g(imgLIST(x,"priority"))}
 } else {
 s seq="Z"_count
 }
 s imgLISTsort(seq,count,"image")=$g(imgLIST(x,"image"))
 s imgLISTsort(seq,count,"title")=$g(imgLIST(x,"title"))
 s imgLISTsort(seq,count,"lnkcomp")=$g(imgLIST(x,"lnkcomp"))
 s imgLISTsort(seq,count,"lnkurl")=$g(imgLIST(x,"lnkurl"))
 s imgLISTsort(seq,count,"lnkexp")=$g(imgLIST(x,"lnkexp"))
 s imgLISTsort(seq,count,"lnkchartbook")=$g(imgLIST(x,"lnkchartbook"))
 s count=count+1
 }
 ;
 //Finally, display the images.
 s IMAGES=""
 s x=0
 f  {
 s x=$o(imgLISTsort(x))
 q:x=""
 s y=""
 f  {
 s y=$o(imgLISTsort(x,y))
 q:y=""
 s image=$g(imgLISTsort(x,y,"image"))
 s title=$g(imgLISTsort(x,y,"title"))
 s lnkcomp=$g(imgLISTsort(x,y,"lnkcomp"))
 s lnkurl=$g(imgLISTsort(x,y,"lnkurl"))
 s lnkexp=$g(imgLISTsort(x,y,"lnkexp"))
 s lnkchartbook=$g(imgLISTsort(x,y,"lnkchartbook"))
 i image'=""  {
 s lnkval=##Class(websys.Conversions).expressionEvaluate(lnkexp)
 if $g(%request.Data("CONTEXT",1))'="" s lnkval=lnkval_"&CONTEXT="_%request.Data("CONTEXT",1)
 i lnkchartbook'="" s lnkval=$g(lnkval)_"&ChartBookID="_lnkchartbook
 i lnkurl'="", lnkcomp'="" s str="<A HREF=""#"" onClick=""websys_lu('"_lnkurl_"?WEBSYS.TCOMPONENT="_lnkcomp_"&FromIconProfile=1"_lnkval_"',false,'top=40,left=40,width=640,height=480');""><IMG align='top' SRC='../images/"_image_"' title='"_title_"' border=0></A>"
 i lnkurl'="", lnkcomp="" s str="<A HREF=""#"" onClick=""websys_lu('"_lnkurl_"?FromIconProfile=1"_lnkval_"',false,'top=40,left=40,width=640,height=480');""><IMG align='top' SRC='../images/"_image_"' title='"_title_"' border=0></A>"
 i lnkurl="" s str="<IMG align='top' SRC='../images/"_image_"' title='"_title_"'>"
 i ImageReturnType="" w str
 i ImageReturnType="S" s IMAGES=$g(IMAGES)_str

 }
 }
 }
 ;
 q $$$OK
 ;
getSortY(sCount)
 q $e("Y000",1,4-$l(sCount))_sCount
]]></Implementation>
</Method>

<Method name="websysSave">
<Description>
Created for Log 26756</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compref:%String,id:%String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n obj,j,t,save,compid
 s save=1
 s t=""

 s compid=$e($p(compref,"i",1),2,999)
 d ##Class(websys.Component).GetComponentMessages(.t,"websys.SYSTEM")

 s code=$g(%request.Data("ProfileCode",1))
 s desc=$g(%request.Data("ProfileName",1))
 s CTIcons=$g(%request.Data("ProfileCTIcons",1))
 i CTIcons="on" {s CTIcons=1} else {s CTIcons=""}

 i ((code="")!(desc="")) d:msg msg.AddItem("E",$g(t("Code"))_", "_$g(%request.Data("Description",1)),$g(t("XMISSING")),compid,"Code") q $$$OK

 i id="" s obj=##Class(epr.CTIconProfile).%New()
 i id'="" s obj=##Class(epr.CTIconProfile).%OpenId(id)

 i obj {
 s obj.Code=code
 s obj.Description=desc
 s obj.CodeTableIcons=CTIcons
 f j=1:1:obj.Items.Count()  {
 s itm=##Class(epr.CTIconProfileItem).%OpenId($g(%request.Data("IDz"_j,1)))
 i itm {
 //s itmID=%request.Get("IDz"_j)
 //s itm=obj.Items.GetAt($p(itmID,"||",2))
 s itm.Sequence=$g(%request.Data("IconSequencez"_j,1))
 s save=itm.%Save(0)
 i $$$ISERR(save) d msg.Status(save,compid)
 d itm.%Close()
 }
 }

 q:$$$ISERR(save)

 s save=obj.%Save(0)
 i $$$ISERR(save) d msg.Status(save,compid)
 i save s ProfileID=obj.%Id()
 d obj.%Close()

 q:$$$ISERR(save)

 s %request.Data("ProfileID",1)=ProfileID
 s Icon=$g(%request.Data("Icon",1))
 i Icon'="" d ##Class(epr.CTIconProfileItem).InsertItem(compref,ProfileID,Icon)
 }

 q $$$OK
]]></Implementation>
</Method>

<Method name="websysSaveLinks">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compref:%Library.String,id:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n (msg,%request,%session,%response,compref,id)
 s save=1

 s compid=$e($p(compref,"i",1),2,999)
 d ##Class(websys.Component).GetComponentMessages(.t,"websys.SYSTEM,epr.CTIconProfileLink.Edit")

 s lnkComp=$g(%request.Data("LinkComponent",1))
 s lnkUrl=$g(%request.Data("LinkUrl",1))
 s lnkExp=$g(%request.Data("LinkExpression",1))
 s lnkChartBook=$g(%request.Data("LinkChartBookDR",1))
 ;s lnkChartBook=##class(epr.ChartBook).GetIdFromCodeOrDescription(lnkChartBook)
 i 'lnkChartBook,$g(%request.Data("LinkChartBookDR",1))'="" d:msg msg.AddItem("E",$g(t("LinkChartBookDR")),$g(t("XINVALID")),compid,"LinkChartBookDR") q $$$OK

 s obj=##Class(epr.CTIconProfileItem).%OpenId(id)
 i obj {
 s obj.LinkComponent=lnkComp
 s obj.LinkUrl=lnkUrl
 s obj.LinkExpression=lnkExp
 d obj.LinkChartBookDRSetObjectId(lnkChartBook)
 s save=obj.%Save(0)
 i $$$ISERR(save) d msg.Status(save,compid)
 d obj.%Close()
 }

 q $$$OK
]]></Implementation>
</Method>

<Query name="Find">
<Type>%Library.SQLQuery</Type>
<FormalSpec>name:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>SELECT ID, Description, Code
FROM epr.CTIconProfile
WHERE (Description %STARTSWITH :name)
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Description,Code"/>
</Query>

<Query name="ItemsFind">
<Type>%Library.Query</Type>
<FormalSpec>ProfileID:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,IconID,Code,Description,Icon,Sequence"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^epr.CTIconProfileD</DataLocation>
<DefaultData>CTIconProfileDefaultData</DefaultData>
<IdLocation>^epr.CTIconProfileD</IdLocation>
<IndexLocation>^epr.CTIconProfileI</IndexLocation>
<StreamLocation>^epr.CTIconProfileS</StreamLocation>
<Data name="CTIconProfileClassName">
<Attribute>%%CLASSNAME</Attribute>
<Structure>node</Structure>
<Subscript>0</Subscript>
</Data>
<Data name="CTIconProfileDefaultData">
<Structure>listnode</Structure>
<Value name="1">
<Value>Code</Value>
</Value>
<Value name="2">
<Value>Description</Value>
</Value>
<Value name="3">
<Value>IncludeCTIcons</Value>
</Value>
<Value name="4">
<Value>CodeTableIcons</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
