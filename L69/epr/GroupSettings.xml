<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="epr.GroupSettings">
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract</Super>
<TimeCreated>60218,47094.150987</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>27</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="EXTENTSIZE">
<Default>100</Default>
</Parameter>

<Parameter name="SQLCODE">
<Final>0</Final>
<Default>ID</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Default>ID</Default>
</Parameter>

<Parameter name="SQLROWID">
<Default>ID</Default>
</Parameter>

<Index name="GroupDRIndex">
<Description>
Index for property GroupDR</Description>
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>GroupDR</Properties>
<Unique>0</Unique>
</Index>

<Property name="AllowXML">
<Type>%Library.Boolean</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="AppTimeout">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="GroupDR">
<Type>User.SSGroup</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>1</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="LastUpdateDate">
<Description>
KK 8/Jan/04 L:39835 - New fields Udate Date,Time,User and Hospital. </Description>
<Type>%Date</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Property name="LastUpdateTime">
<Type>%Time</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Property name="LastUpdateUserDR">
<Type>User.SSUser</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Property name="MainMenuDR">
<Type>websys.Menu</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="MenuSecurity">
<Description>
Web Menu Security Access</Description>
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="COLLATION" value="Exact"/>
<Parameter name="MAXLEN" value="52000"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="SideMenuGroupDR">
<Description>
reference to websys.MenuGroup to display security group's side menus</Description>
<Type>websys.MenuGroup</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Property name="StartPageDR">
<Type>websys.WorkFlow</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="StyleSheet">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="MAXLEN"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="AllowLayoutManager">
<Type>%Library.Boolean</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="AllowColumnManager">
<Type>%Library.Boolean</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="CumulativeView">
<Type>%Library.Boolean</Type>
</Property>

<Property name="ViewMMResults">
<Type>%Library.Boolean</Type>
</Property>

<Property name="CumulativeAlphaSort">
<Type>%Library.Boolean</Type>
</Property>

<Method name="EnableAllAccess">
<Description>
enables access to all menus for the particular SSGroup ID</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>GroupID:%Library.String</FormalSpec>
<Implementation><![CDATA[
 n max,grp,grpSettingsID
 ;
 s GroupID=$g(GroupID)
 s max=$g(^websys.MenuD)
 ;
 s grpSettingsID=..GetIdFromGroupId(GroupID)
 s grp=##Class(epr.GroupSettings).%OpenId(grpSettingsID,0)
 i 'grp,GroupID'="" s grp=##Class(epr.GroupSettings).%New()
 i grp {
 	d grp.GroupDRSetObjectId(GroupID)
 	//Enable all and many.... maxlen of 52000
 	s max=52000
 	s grp.MenuSecurity=$zbitstr(max,1)
 	d grp.%Save(0)
 	d grp.%Close()
 }
 q
]]></Implementation>
</Method>

<Method name="FindMenuAccessGroupsClose">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>FindMenuAccessGroupsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	&SQL(CLOSE MenuAccessGroups)
	s qHandle=""
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FindMenuAccessGroupsExecute">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&qHandle:%Binary,MenuID:%String=""]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	n user,work
	
	&SQL(DECLARE MenuAccessGroups CURSOR FOR
	SELECT SSGRP_ROWID,SSGRP_DESC FROM SQLUser.SS_Group
	ORDER BY SSGRP_DESC
	)
	&SQL(OPEN MenuAccessGroups)
	
	s user=$lb(MenuID)
	s work=""
	s qHandle=$lb(0,user,work)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="FindMenuAccessGroupsFetch">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>FindMenuAccessGroupsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	n user,work,MenuID
	s AtEnd=$li(qHandle,1)
	s user=$li(qHandle,2)
	s work=$li(qHandle,3)
	s MenuID=$li(user,1)
	
	&SQL(FETCH MenuAccessGroups INTO :SSGroupID,:SSGroupDesc)
	if SQLCODE s Row="",AtEnd=1
	if 'AtEnd {
		&SQL(SELECT MenuSecurity INTO :bits FROM epr.GroupSettings WHERE GroupDR=:SSGroupID)
		i SQLCODE s bits=""
		if bits="" {
			s HasMenuAccess=0
		} elseif $zbitlen(bits)<MenuID {
			s HasMenuAccess=0
		} else {
			s HasMenuAccess=$zbitget(bits,MenuID)
		}
		s Row=$lb(SSGroupID,SSGroupDesc,HasMenuAccess)
	}
	
	s qHandle=$lb(AtEnd,user,work)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetIdFromGroupId">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>groupid:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n id
 &SQL(SELECT ID INTO :id FROM epr.GroupSettings WHERE GroupDR = :groupid)
 i SQLCODE q ""
 q id
]]></Implementation>
</Method>

<Method name="GetMainMenu">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>grpID:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n menu
 &SQL(SELECT MainMenuDR INTO :menu FROM epr.GroupSettings WHERE GroupDR = :grpID)
 i SQLCODE q ""
 q menu
]]></Implementation>
</Method>

<Method name="GetMenuSecurity">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>grpID:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n bits
 &SQL(SELECT MenuSecurity INTO :bits FROM epr.GroupSettings WHERE GroupDR = :grpID)
 i SQLCODE q ""
 q bits
]]></Implementation>
</Method>

<Method name="GetStartPage">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>grpID:%String</FormalSpec>
<Private>0</Private>
<ReturnType>%String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n sp
 &SQL(SELECT StartPageDR INTO :sp FROM epr.GroupSettings WHERE GroupDR = :grpID)
 i SQLCODE q ""
 q sp
]]></Implementation>
</Method>

<Method name="GetStyleSheet">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>grpID:%Library.String</FormalSpec>
<Private>0</Private>
<ReturnType>%Library.String</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n ss
 &SQL(SELECT StyleSheet INTO :ss FROM epr.GroupSettings WHERE GroupDR = :grpID)
 i SQLCODE q ""
 q ss
]]></Implementation>
</Method>

<Method name="SaveMenuAccessGroups">
<Description>
save access for checked groups for one particular menu, called on update of component websys.Menu.EditGroupSecurity</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>MenuID:%Library.String=""</FormalSpec>
<Implementation><![CDATA[
	q:'MenuID
	n ssgrpid,grpsetid,save,j,bits,bit,compref,compid
	s compref=$g(%request.Data("TEVENT",1))
	s compid=$e($p(compref,"i",1),2,999)
	s bit=MenuID
	f j=1:1  {
		q:'$d(%request.Data("SSGroupIDz"_j,1))
		s ssgrpid=+%request.Data("SSGroupIDz"_j,1)
		;make sure it's a valid ssgroup
		k SQLCODE
		&SQL(SELECT SSGRP_ROWID FROM SQLUser.SS_Group WHERE SSGRP_ROWID=:ssgrpid)
		if 'SQLCODE {
			s access=##Class(websys.Conversions).BooleanHtmlToLogical($g(%request.Data("HasMenuAccessz"_j,1)))
			&SQL(SELECT ID,MenuSecurity INTO :grpsetid,:bits FROM epr.GroupSettings WHERE GroupDR=:ssgrpid)
			i SQLCODE s grpsetid="",bits=""
			if ((access)!(+grpsetid)) {
				if bits="" s bits=$zbitstr(bit,0)
				if bit>$zbitlen(bits) s bits=$zbitor(bits,$zbitstr(bit,0))
				s bits=$zbitset(bits,bit,access)
				k grpsetobj
				i grpsetid'="" s grpsetobj=##Class(epr.GroupSettings).%OpenId(grpsetid,0)
				i '$d(grpsetobj) s grpsetobj=##Class(epr.GroupSettings).%New()
				i grpsetobj {
					d grpsetobj.GroupDRSetObjectId(ssgrpid)
					s grpsetobj.MenuSecurity=bits
					s save=grpsetobj.%Save()
					d grpsetobj.%Close()
				}
			}
		}
	}
	quit
]]></Implementation>
</Method>

<Method name="SaveMenuSecurity">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ID:%Library.String,GroupID:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n grp,save
 ;
 i ID'="" s grp=##Class(epr.GroupSettings).%OpenId(ID,0)
 i ID="",GroupID'="" d
 . s grp=##Class(epr.GroupSettings).%New()
 . i grp d grp.GroupDRSetObjectId(GroupID)
 i grp d
 . n j,bits,bit
 . ; Initialise to 20 bits
 . s bits=$zbitstr(20,0)
 . ;first fetch for side menus
 . f j=1:1 q:'$d(%request.Data("MenuSecurity",j))  d
 . . s bit=+%request.Data("MenuSecurity",j)
 . . ; if its not long enough, logical or with a bitstring that is long enough
 . . i bit>$zbitlen(bits) s bits=$zbitor(bits,$zbitstr(bit,0))
 . . ; set the bit
 . . s bits=$zbitset(bits,bit,1)
 . ;then fetch the component menu bars
 . f j=1:1 q:'$d(%request.Data("MenuComponents",j))  d
 . . s bit=+%request.Data("MenuComponents",j)
 . . i bit>$zbitlen(bits) s bits=$zbitor(bits,$zbitstr(bit,0))
 . . s bits=$zbitset(bits,bit,1)
 . ;then fetch the top menu headers
 . f j=1:1 q:'$d(%request.Data("MenuHeaders",j))  d
 . . s bit=+%request.Data("MenuHeaders",j)
 . . i bit>$zbitlen(bits) s bits=$zbitor(bits,$zbitstr(bit,0))
 . . s bits=$zbitset(bits,bit,1)
 . s grp.MenuSecurity=bits
 . s save=grp.%Save()
 . d grp.%Close()
 ;
 quit
]]></Implementation>
</Method>

<Method name="SetGroupSessionTimeout">
<Description>
Reset the applications timeout value to be that stored against the group.
Only reset if there is a value.
Usergroup's timeout value stored as minutes... need to convert to seconds.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>GroupID:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n timeout
 &SQL(SELECT AppTimeout INTO :timeout FROM epr.GroupSettings WHERE GroupDR = :GroupID)
 i SQLCODE q
 i timeout s (%session.Data("LOGON.TIMEOUT"),%session.AppTimeout)=timeout*60
 q
]]></Implementation>
</Method>

<Method name="websysAfterSave">
<Description>
Invoked after websysSave - can be used to provide extra websysSave functionality while keeping the default websysSave behaviour.</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[compref:%String,&id:%String,new:%Boolean]]></FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
 ;KK 08/Jan/2004 Log 39835
 n obj,updatedate,updatetime,updateInitials,updatehosp
 s (updatedate,updatetime,updateInitials,updatehosp)=""
 s updatedate=+$h
 s updatetime=$p($h,",",2)
 s updateInitials=%session.Get("LOGON.USERID")
 s obj=##Class(epr.GroupSettings).%OpenId(id)
 i obj {
 s obj.LastUpdateDate=updatedate
 s obj.LastUpdateTime=updatetime
 i updateInitials'="" d obj.LastUpdateUserDRSetObjectId(updateInitials)
 d obj.%Save()
 d obj.%Close()
 }
 q
]]></Implementation>
</Method>

<Method name="websysBeforeSave">
<Description>
Invoked before websysSave - can be used to cancel the save</Description>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[compref:%String,&id:%String]]></FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
 ;KK 08/Jan/2004 Log 39835
 n valid,compid
 s compid=$e($p(compref,"i",1),2,999)
 s valid=##Class(web.SSUser).ValidatePIN(%request.Get("UserCode"),%request.Get("PIN"),compid,"PIN")
 q valid
]]></Implementation>
</Method>

<Query name="FindMenuAccessGroups">
<Type>%Query</Type>
<FormalSpec>MenuID:%String=""</FormalSpec>
<Parameter name="ROWSPEC" value="SSGroupID:%String,SSGroupDesc:%String,SSGroupSecurityLevel:%String,HasMenuAccess:%Boolean"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^epr.GroupSettingsD</DataLocation>
<DefaultData>GroupSettingsDefaultData</DefaultData>
<IdLocation>^epr.GroupSettingsD</IdLocation>
<IndexLocation>^epr.GroupSettingsI</IndexLocation>
<StreamLocation>^epr.GroupSettingsS</StreamLocation>
<Data name="GroupSettingsDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>AllowColumnManager</Value>
</Value>
<Value name="3">
<Value>AllowLayoutManager</Value>
</Value>
<Value name="4">
<Value>AllowXML</Value>
</Value>
<Value name="5">
<Value>AppTimeout</Value>
</Value>
<Value name="6">
<Value>GroupDR</Value>
</Value>
<Value name="7">
<Value>LastUpdateDate</Value>
</Value>
<Value name="8">
<Value>LastUpdateTime</Value>
</Value>
<Value name="9">
<Value>LastUpdateUserDR</Value>
</Value>
<Value name="10">
<Value>MainMenuDR</Value>
</Value>
<Value name="11">
<Value>MenuSecurity</Value>
</Value>
<Value name="12">
<Value>SideMenuGroupDR</Value>
</Value>
<Value name="13">
<Value>StartPageDR</Value>
</Value>
<Value name="14">
<Value>StyleSheet</Value>
</Value>
<Value name="15">
<Value>CumulativeView</Value>
</Value>
<Value name="16">
<Value>ViewMMResults</Value>
</Value>
<Value name="17">
<Value>CumulativeAlphaSort</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
