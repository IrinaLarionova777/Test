<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="epr.ChartBook">
<Description>
A group (collection list) of charts</Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Library.Persistent,websys.Abstract</Super>
<TimeCreated>60218,47094.165955</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="BUILD">
<Internal/>
<Default>12</Default>
</Parameter>

<Parameter name="SQLDATEFROM">
<Internal/>
</Parameter>

<Parameter name="SQLDATETO">
<Internal/>
</Parameter>

<Parameter name="SQLCODE">
<Description>
Used to control sql fields to be used in generated queries.
Applies to LookupExecute,Fetch,Close.
Applies to GetIdFromCodeOrDescription.</Description>
<Final>0</Final>
<Default>Description</Default>
</Parameter>

<Parameter name="SQLDESCRIPTION">
<Final>0</Final>
<Default>Description</Default>
</Parameter>

<Parameter name="SQLROWID">
<Final>0</Final>
<Default>ID</Default>
</Parameter>

<Index name="UniqueDescriptionIndex">
<Description>
Uniqueness index for property Description</Description>
<Extent>0</Extent>
<IdKey>0</IdKey>
<PrimaryKey>0</PrimaryKey>
<Properties>Description</Properties>
<Unique>1</Unique>
</Index>

<Property name="ChartList">
<Type>epr.Chart</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection>list</Collection>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="Description">
<Type>%Library.String</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection/>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>1</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
<Parameter name="COLLATION" value="AlphaUp"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="LeftChartList">
<Type>epr.Chart</Type>
<Final>0</Final>
<Calculated>0</Calculated>
<Collection>list</Collection>
<MultiDimensional>0</MultiDimensional>
<Private>0</Private>
<Relationship>0</Relationship>
<Required>0</Required>
<SqlComputed>0</SqlComputed>
<Transient>0</Transient>
</Property>

<Property name="ShowTimeline">
<Type>%Library.Boolean</Type>
<Collection/>
<Relationship>0</Relationship>
</Property>

<Method name="LookUpItemsClose">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>QHandle:%Library.Binary</FormalSpec>
<PlaceAfter>LookUpItemsFetch</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,obj
 ;
 s user=$li(QHandle,2)
 s obj=$li(user,2)
 s lst=$li(user,3)
 //SYSTEMOREF //i obj d obj.%Close()
 k %trakobjects(+obj)
 k %trakobjects(+lst)
 ;
 s QHandle=""
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="LookUpItemsExecute">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,ID:%String,List:%Library.String]]></FormalSpec>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work
 n obj,lst,index,items
 ;
 s index=1,items=0,lst=0
 s obj=##Class(epr.ChartBook).%OpenId($g(ID),0)
 s %trakobjects(+obj)=obj
 i obj {
 i $g(List)="L" {
 s lst=obj.LeftChartList
 } else {
 s lst=obj.ChartList
 }
 s items=lst.Count()
 s %trakobjects(+lst)=lst
 }
 ;
 s user=$lb(ID,obj,lst,items)
 s work=$lb(index)
 s QHandle=$lb(0,user,work)
 ;
 Quit $$$OK
]]></Implementation>
</Method>

<Method name="LookUpItemsFetch">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec><![CDATA[&QHandle:%Library.Binary,&Row:%Library.List,&AtEnd:%Library.Integer=0]]></FormalSpec>
<PlaceAfter>LookUpItemsExecute</PlaceAfter>
<Private>0</Private>
<ReturnType>%Library.Status</ReturnType>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n user,work
 n obj,items,index,valid,id,name
 ;
 s AtEnd=$li(QHandle,1)
 s user=$li(QHandle,2)
 s work=$li(QHandle,3)
 ;
 s obj=$li(user,2),obj=%trakobjects(+obj)
 s lst=$li(user,3),lst=%trakobjects(+lst)
 s items=$li(user,4)
 s index=$li(work,1)
 ;
 s valid=0
 i 'lst s AtEnd=1,Row="" q $$$OK
 f  {
 q:index>items
 q:valid
 if lst.GetAt(index) {
 s id=lst.GetAt(index).%Id(),name=lst.GetAt(index).Name
 s valid=1
 }
 s index=index+1
 }
 ;
 s Row=$lb(id,name)
 s work=$lb(index)
 i 'valid s AtEnd=1,Row="" q $$$OK
 ;
 s QHandle=$lb(AtEnd,user,work)
 q $$$OK
]]></Implementation>
</Method>

<Method name="ShowSideBar">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ChartBookID:%Library.String,PatientID:%Library.String,EpisodeID:%Library.String,mradm:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 &html<
 <LINK REL="stylesheet" TYPE="text/css" HREF="../scripts/epr.chartbook.side.css">
 <DIV id="chartbook">
 <DIV id="charttabs">
 >
 n ChartID,ChartName,count,obj,j
 s ChartID="",j=0,count=0
 ;
 s obj=##Class(epr.ChartBook).%OpenId(ChartBookID)
 i 'obj w $s('ChartBookID:"No ChartBook selected",1:"No charts within ChartBook selected")
 i obj d
 . s count=obj.ChartList.Count()
 . f j=1:1:count d
 . . s ChartID=obj.ChartList.GetAt(j).%Id()
 . . s ChartName=obj.ChartList.GetAt(j).Name
 . . w "<DIV class='chartitem' id='chart",ChartID,"' onclick='SelectChart(this);'><a href='epr.chart.csp?PatientID=",PatientID,"&EpisodeID=",EpisodeID,"&mradm=",mradm,"&ChartID=",ChartID,"' target='dataframe'>"
 . . ;w ##Class(websys.Conversions).HtmlFriendly(ChartName)
 . . w ChartName
 . . w "</a></div>",$c(13,10)
 . d obj.%Close()
 &html<
 </div>
 <DIV id="data">
 <IFRAME id="dataframe" name="dataframe" width=100 height=100 src="websys.csp" frameborder=0></iframe>
 </div>
 </div>

 <script>
 var count=#(count)#;
 var obj=document.getElementById("charttabs");
 var arrDiv = obj.getElementsByTagName("DIV");
 if (arrDiv.length) {
 SelectChart(arrDiv[0]);
 }

 var offsetWdt = document.body.offsetWidth - document.body.clientWidth ;
 var offsetHgt = document.body.offsetHeight - document.body.clientHeight ;

 function setDataFrameSize() {
 var remainHgt = document.body.offsetHeight -3 -offsetHgt;
 var remainWdt = document.body.offsetWidth -3 -offsetWdt;
 //set data frame to length and width of remaining page, and widen to fit charttabs
 var obj=document.getElementById("charttabs");
 var posLeft = obj.offsetWidth;
 obj.style.width = posLeft;

 var obj=document.getElementById("chartbook");
 remainHgt -= obj.offsetTop;
 remainWdt -= obj.offsetLeft;

 posLeft += obj.offsetWidth;
 var obj=document.getElementById("patdetails");
 obj.style.left = posLeft;
 var obj=document.getElementById("data");
 obj.style.left = posLeft;
 remainWdt -= posLeft;
 document.frames["dataframe"].window.resizeTo(remainWdt,remainHgt);
 }

 setDataFrameSize();
 window.onresize = setDataFrameSize;
 </script>
 >
 q
]]></Implementation>
</Method>

<Method name="ShowTopBar">
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ChartBookID:%Library.String,PatientID:%Library.String,EpisodeID:%Library.String,mradm:%Library.String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[ q
]]></Implementation>
</Method>

<Method name="websysSave">
<Description>
Default save method used for updating the database for Components of type Edit.
The compref is the  component reference which is the string from which we can deduce the instance of
websysComponent
websysComponentItem
id is the id for the instance of class we wish to update.</Description>
<Final>0</Final>
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>compref:%String,ChartBookID:%String</FormalSpec>
<Private>0</Private>
<SqlProc>0</SqlProc>
<Implementation><![CDATA[
 n new,save,status,obj,j,t
 n chartlist,chartid,chartobj,leftlist
 s new=ChartBookID=""
 s save=0,t=""
 ;
 ;Get any neccessary error messages.
 //d ##Class(websys.Component).GetComponentMessages(.t,"websys.SYSTEM")
 d ##Class(websys.Component).GetComponentMessages(.t,"PAADMDischarge.Edit")
 ; try and lock
 i 'new,'##Class(websys.Lock).Lock($lb(ChartBookID,"epr.ChartBook"),%session.SessionId,%session.Get("LOGON.USERID"),.status) d  q 0
 . i msg d msg.AddItem("E",t("XLOCKED"),status)
 i '..websysBeforeSave(compref,.ChartBookID) q 0
 ;
 s:'new obj=##Class(epr.ChartBook).%OpenId(ChartBookID,0)
 s:new obj=##Class(epr.ChartBook).%New()
 i obj d
 . s obj.Description=%request.Get("Description")
 . s obj.ShowTimeline=##Class(websys.Conversions).BooleanHtmlToLogical(%request.Get("ShowTimeline"))
 . d obj.ChartList.Clear()
 . s chartlist=%request.Get("ChartList")
 . s leftlist=%request.Get("LeftChartList")
 . d obj.LeftChartList.Clear()
 . for i=1:1:$l(chartlist,$c(1)) d
 . . s chartid=$p(chartlist,$c(1),i)
 . . s chartobj=##Class(epr.Chart).%OpenId(chartid)
 . . if chartobj d
 . . . d obj.ChartList.Insert(chartobj)
 . . . d chartobj.%Close()
 . for i=1:1:$l(leftlist,$c(1)) d
 . . s chartid=$p(leftlist,$c(1),i)
 . . s chartobj=##Class(epr.Chart).%OpenId(chartid)
 . . if chartobj d
 . . . d obj.LeftChartList.Insert(chartobj)
 . . . d chartobj.%Close()
 . s save=obj.%Save(0)
 . i $$$ISERR(save),$d(msg) d  i 1
 . . n err
 . . Do DecomposeStatus^%apiOBJ(save,.err)
 . . f j=1:1:err d msg.AddItem("E",j,err(j))
 . s:save ChartBookID=obj.%Id()
 . d obj.%Close()
 ;
 d:save ..websysAfterSave(compref,ChartBookID,new)
 i 'new d ##Class(websys.Lock).LockClear($lb(ChartBookID,"epr.ChartBook"),%session.SessionId)
 ;
 ;  general 
 q save
 Q $$$OK
]]></Implementation>
</Method>

<Query name="LookUpItems">
<Type>%Library.Query</Type>
<FormalSpec>ID:%Library.String,List:%Library.String</FormalSpec>
<SqlProc>0</SqlProc>
<SqlQuery>
</SqlQuery>
<SqlView>0</SqlView>
<Parameter name="CONTAINID" value="0"/>
<Parameter name="ROWSPEC" value="ChartID:%Library.String,ChartName:%Library.String"/>
</Query>

<Query name="VBFindLE">
<Type>%Library.SQLQuery</Type>
<FormalSpec>desc:%Library.String</FormalSpec>
<SqlQuery>SELECT	ID, Description
FROM	epr.ChartBook
WHERE	(Description %STARTSWITH :desc)
ORDER	BY Description</SqlQuery>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="ID,Description:%Library.String"/>
</Query>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^epr.ChartBookD</DataLocation>
<DefaultData>ChartBookDefaultData</DefaultData>
<IdLocation>^epr.ChartBookD</IdLocation>
<IndexLocation>^epr.ChartBookI</IndexLocation>
<StreamLocation>^epr.ChartBookS</StreamLocation>
<Data name="ChartBookClassName">
<Attribute>%%CLASSNAME</Attribute>
<Structure>node</Structure>
<Subscript>0</Subscript>
</Data>
<Data name="ChartBookDefaultData">
<Structure>listnode</Structure>
<Value name="1">
<Value>Description</Value>
</Value>
<Value name="2">
<Value>ChartList</Value>
</Value>
<Value name="3">
<Value>LeftChartList</Value>
</Value>
<Value name="4">
<Value>ShowTimeline</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
