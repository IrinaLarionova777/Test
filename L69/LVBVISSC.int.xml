<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISSC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISSC ; IG 6/5/98 ; LVB Control data access for VISSC EP_VisitSpecimenContainer
 ;
 ; supported calls:
 ;
 ; $$save^LVBVISSC(epis)
 ; $$select^LVBVISSC(RowID,skip)
 ; $$update^LVBVISSC(RowID,app,group)
 ; $$open^LVBVISSC(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVISSC(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVISSC()
 ; $$getall^LVBVISSC(par,scOnly)
 ; $$getall1^LVBVISSC(epis,scOnly,moveRID)
 ; $$getall2^LVBVISSC(list,epis,scOnly,specimen,mode)
 ;
  ;---&sql(DECLARE VISSC CURSOR FOR SELECT * FROM EP_VisitSpecimenContainer
   ;---         WHERE VISSC_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN VISSC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISSC0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH VISSC INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE VISSC)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISSC0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitSpecimenContainer WHERE VISSC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
update(RowID,app,group) d pre("Y") s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(UPDATE EP_VisitSpecimenContainer VALUES :PLIST() WHERE VISSC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Ho
 k ^TMP("FUNCTION",$j)
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
save(epis) k ^TMP($zn,$j) s epis=$g(epis) i $l(epis) d
 s EpisList=epis i $d(^TMP("SaveEPVIS",$j,epis)) s EpisList=EpisList_","_^TMP("SaveEPVIS",$j,epis)
 m ^TMP($zn,$j,"PLIST")=PLIST
 f count=1:1:$l(EpisList,",") d
 .s epis=$p(EpisList,",",count) k PLIST m PLIST=^TMP($zn,$j,"PLIST")
 .m ^TMP($zn,$j,0)=PLIST k ^TEPI(epis,4)
 .s x="" f  s x=$o(^TMP($zn,$j,0,x)) q:x=""  d
 ..s sp=$p($p($p(^TMP($zn,$j,0,x),$c(28),1),$c(1),1),"||",2) i $l(sp) d
 ...i '$d(^TEPI(epis,4,sp)) d
 ....k PLIST s PLIST(0)=epis,PLIST(2)=sp,PLIST(3)=$p($p(^TMP($zn,$j,0,x),$c(28),1),$c(1),2) s PLIST=$o(PLIST(""),-1)
 ....  ;---&sql(INSERT INTO EP_VisitSpecimen VALUES :PLIST())
  ....  ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .... Do %0Jo
 ...k PLIST f j=3:1:$l(^TMP($zn,$j,0,x),$c(28)) s PLIST(j)=$p(^TMP($zn,$j,0,x),$c(28),j)
 ...i $l(PLIST(3)) d
 ....s PLIST(0)=epis_"||"_sp,PLIST(2)=$o(^TEPI(epis,4,sp,""),-1)+1,PLIST=$o(PLIST(""),-1)
 ....  ;---&sql(INSERT INTO EP_VisitSpecimenContainer VALUES :PLIST())
  ....  ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .... Do %0Lo
 .k %d m %d=^TEPI(epis,4)
 .d SetAll^LVBCOM50(epis,49_"S",.%d)
 k ^TMP($zn,$j)
 k ^TMP("SaveEPVIS",$j,epis)
 q 0
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(1))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSPE($p(plist(1),"||",2),"Y")
 .S X="" I 'SQLCODE S X=plist(1)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(1)=X K plist
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTCON(plist(3),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 I $G(PLIST(7))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTUSL(plist(7),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(7)=X K plist
 ;
 Q
 ; scOnly : Y - only Specimen/Containers
 ;            - ALL
getall(par,scOnly) n (par,scOnly,PLIST) k ^TMP($zn,$j) s par=$g(par),scOnly=$g(scOnly)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2,2,2)_str
 i $$close()
 k PLIST s (cnt,x)="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  d
 .i scOnly="Y",$p($p(^(x),$c(2),4),$c(28),3)="" q
 .s cnt=cnt+1,PLIST(cnt)=^TMP($zn,$j,x)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
getall1(epis,scOnly,moveRID) n (epis,scOnly,moveRID,PLIST) k ^TMP($zn,$j) s epis=$g(epis),scOnly=$g(scOnly),moveRID=$g(moveRID)
 s (cnt,x)="" f  s x=$o(^TEPI(epis,4,x)) q:x=""  d
 .s par=epis_"||"_x,cnt=cnt+1
 .k PLIST s PLIST(1)=epis_"||"_x_"||"_1,PLIST=1 d adjust
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2,2,2)_PLIST(1)_$c(1)_$g(^TEPI(epis,4,x))
 .i $$open(par)
 .f x1=0:1 q:$$fetch(par)  d
 ..i x1 s cnt=cnt+1
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2,2,2)_str
 .i $$close()
 k PLIST s (cnt,x)="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  d
 .s xx=$p(^(x),$c(2))
 .i scOnly="Y",$p($p(^(x),$c(2),4),$c(28),3)="" q
 .i scOnly="Y" d
 ..s x1="" f  s x1=$o(^TEPI(epis,9,x1)) q:x1=""  i " W S "[(" "_$p(^(x1),"\",9)_" "),moveRID'=(epis_"||"_x1),$d(^TEPI(epis,9,x1,"SP",xx)) s $p(^TMP($zn,$j,x),$c(2),2)="Y" q
 .s cnt=cnt+1,PLIST(cnt)=^TMP($zn,$j,x)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; scOnly   : Y - only Specimen/Containers
 ;              - ALL
 ; specimen : list of default specimens for selected tests
 ; mode     : 1 - Old mode
 ;            2 - New mode
getall2(list,epis,scOnly,specimen,mode) n (list,epis,scOnly,specimen,mode,PLIST) k ^TMP($zn,$j)
 s list=$g(list),epis=$g(epis),scOnly=$g(scOnly),specimen=$g(specimen),mode=$g(mode)
 i mode=2 f j=1:1:$l(list,",") s ts=$p(list,",",j) i $l(ts) s ^TMP($zn,$j,0,ts)=$g(^TMP($zn,$j,0,ts))+1,^TMP($zn,$j,"0a",ts)=$p(specimen,",",j)
 i mode'=2 f j=1:1:$l(list,",") s ts=$p(list,",",j) i $l(ts) s ^TMP($zn,$j,0,ts)=$g(^TMP($zn,$j,0,ts))+1,^TMP($zn,$j,"0a",ts)=specimen
 k PLIST i '$$select^MVBCFML(1) m CFML=PLIST
 ; collect specimen/container info for ALL selected tests
 s ts="" f  s ts=$o(^TMP($zn,$j,0,ts)) q:ts=""  s specimen=$g(^TMP($zn,$j,"0a",ts)) d
 . // removed in presence of JH and YC to completely confuse me.
 . //.i '$l(specimen) d
 . //..i $d(^TTAB("TS",ts,"SC")) d
 . //...s x1="" f  s x1=$o(^TTAB("TS",ts,"SC",x1)) q:x1=""  d
 . //....s x2="" f  s x2=$o(^TTAB("TS",ts,"SC",x1,x2)) q:x2=""  s xx=^(x2) d
 . //.....i $p(xx,"\",2)=1 d
 . //......s ^TMP($zn,$j,1,x2,x1)=$g(^TMP($zn,$j,1,x2,x1))+(xx*^TMP($zn,$j,0,ts))
 . //......s ^TMP($zn,$j,"2b",x2,x1,ts)=""
 . //..i '$d(^TTAB("TS",ts,"SC")) d
 . //...s x2="" f  s x2=$o(^TTAB("TS",ts,1,x2)) q:x2=""  i $p($g(^(x2)),"\",1)="Y" d
 . //....s ^TMP($zn,$j,1,x2)=""
 . //....s ^TMP($zn,$j,"2a",x2,ts)=""
 . //.i $l(specimen) d
 .d
 ..s found=0 k TI
 ..s x="" f  s x=$o(^TTAB("TS",ts,0,x)) q:x=""  s ti=$p(^(x),"\",8) i $l(ti) s TI(ti)=""
 ..s ti="" f  s ti=$o(TI(ti)) q:ti=""  d
 ...k order
 ...s x1="" f  s x1=$o(^TTAB("TC",ti,"SC",x1)) q:x1=""  d
 ....s x2="" f  s x2=$o(^TTAB("TC",ti,"SC",x1,x2)) q:x2=""  s xx=^(x2) s order(+$p(xx,"\",2),x1,x2)=""
 ...s (ok,x0)="" f  s x0=$o(order(x0)) q:x0=""  d  q:ok
 ....s x1="" f  s x1=$o(order(x0,x1)) q:x1=""  d  q:ok
 .....s x2="" f  s x2=$o(order(x0,x1,x2)) q:x2=""  s xx=^TTAB("TC",ti,"SC",x1,x2) d  q:ok
 ......i CFML(17)="Y" d  q
 .......s del=$s(mode=2:"^",1:",")
 .......i $p(xx,"\",2)=1 d
 ........i $l(specimen),(del_specimen_del)'[(del_x2_del) q
 ........s found=1
 ........s ^TMP($zn,$j,1,x2,x1)=$g(^TMP($zn,$j,1,x2,x1))+(xx*^TMP($zn,$j,0,ts))
 ........s ^TMP($zn,$j,"2b",x2,x1,ts)=""
 ......i CFML(17)'="Y" d  q
 .......s del=$s(mode=2:"^",1:",")
 .......i $l(specimen),(del_specimen_del)'[(del_x2_del) q
 .......s found=1
 .......s ^TMP($zn,$j,1,x2,x1)=$g(^TMP($zn,$j,1,x2,x1))+(xx*^TMP($zn,$j,0,ts))
 .......s ^TMP($zn,$j,"2b",x2,x1,ts)=""
 ..i 'found d
 ...s x2="" f  s x2=$o(^TTAB("TS",ts,1,x2)) q:x2=""  i $$CT003^at66(ts_"||"_x2)="Y" d
 ....s ^TMP($zn,$j,1,x2)=""
 ....s ^TMP($zn,$j,"2a",x2,ts)=""
 ; find number of containers
 s x1="" f  s x1=$o(^TMP($zn,$j,1,x1)) q:x1=""  d
 .s x2="" f  s x2=$o(^TMP($zn,$j,1,x1,x2)) q:x2=""  d
 .. ;---s xx="" &SQL(SELECT CTCON_Max_Volume INTO :xx FROM CT_Container WHERE CTCON_RowID=:x2)
  .. ;--- ** SQL PUBLIC Variables: SQLCODE, x2, xx
 ..s xx="" Do %0No
 ..s xx=$p(xx,$c(1))
 ..i xx d
 ...s $p(^TMP($zn,$j,1,x1,x2),"\",2)=(^TMP($zn,$j,1,x1,x2)\xx)+(''(^TMP($zn,$j,1,x1,x2)#xx))
 ...s $p(^TMP($zn,$j,1,x1,x2),"\",3)=xx
 .s (xx,x2)="" f  s x2=$o(^TMP($zn,$j,1,x1,x2)) q:x2=""  s xx=xx+$p(^(x2),"\",2)
 s (cnt,x1)="" f  s x1=$o(^TMP($zn,$j,1,x1)) q:x1=""  d
 .s par=epis_"||"_x1,cnt=cnt+1
 .k PLIST s PLIST(1)=epis_"||"_x1_"||"_1,PLIST=$o(PLIST(""),-1) d adjust
 .s (tests,ts)="" f  s ts=$o(^TMP($zn,$j,"2a",x1,ts)) q:ts=""  s tests=tests_$s($l(tests):",",1:"")_ts
 .s str=PLIST(1)_$c(1)_$p($g(^TMP($zn,$j,1,x1)),"\",2),$p(str,$c(28),18)="Y",$p(str,$c(28),19)=tests
 .s ^TMP($zn,$j,2,cnt)=$p(PLIST(1),$c(1))_$c(2,2,2)_str
 .s (xx,x2)="" f  s x2=$o(^TMP($zn,$j,1,x1,x2)) q:x2=""  d
 ..s quan=$p(^(x2),"\",2) f x3=1:1:quan d  s xx=xx+1
 ...i xx s cnt=cnt+1
 ...k PLIST s PLIST(1)=epis_"||"_x1_"||"_(xx+1)
 ...s PLIST(2)=xx+1
 ...s PLIST(3)=x2
 ...s PLIST(4)=""
 ...i x3<quan s (PLIST(5),PLIST(6))=$p(^TMP($zn,$j,1,x1,x2),"\",3)                                       ; Max Volume
 ...e  s (PLIST(5),PLIST(6))=$p(^TMP($zn,$j,1,x1,x2),"\",1)-((quan-1)*$p(^TMP($zn,$j,1,x1,x2),"\",3))    ; Reminder
 ...s PLIST=$o(PLIST(""),-1) d adjust
 ...s (tests,ts)="" f  s ts=$o(^TMP($zn,$j,"2b",x1,x2,ts)) q:ts=""  s tests=tests_$s($l(tests):",",1:"")_ts
 ...s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ...s $p(str,$c(28),18)="Y",$p(str,$c(28),19)=tests
 ...s ^TMP($zn,$j,2,cnt)=epis_"||"_x1_"||"_(xx+1)_$c(2,2,2)_str
 k PLIST s (cnt,x)="" f  s x=$o(^TMP($zn,$j,2,x)) q:x=""  d
 .i scOnly="Y",$p($p(^(x),$c(2),4),$c(28),3)="" q
 .s cnt=cnt+1,PLIST(cnt)=^TMP($zn,$j,2,x)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
  ;
 q
%VISSC0o s $zt="%VISSC0E" s SQLCODE=$s($g(%VISSC0c):-101,1:0) q:SQLCODE'=0  s %VISSC0d(19)=0 s %VISSC0d(20)=0,%VISSC0d(21)=""
 s %VISSC0d(15)=$g(par)
 s %VISSC0c=1 q
%VISSC0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISSC0c,%VISSC0d,%VISSC0E,%VISSC0l,%VISSC0n,%VISSC0R,%VISSC0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISSC0d(1)=%VISSC0d(15)
 s %VISSC0d(17)=$p(%VISSC0d(1),"||"),%VISSC0d(18)=$p(%VISSC0d(1),"||",2)
 i %VISSC0d(17)="" g %0ABdun
 i %VISSC0d(18)="" g %0ABdun
 s %VISSC0d(3)=""
%0ABk1 s %VISSC0d(3)=$o(^TEPI(%VISSC0d(17),4,%VISSC0d(18),%VISSC0d(3)))
 i %VISSC0d(3)="" g %0ABdun
 s %VISSC0d(28)=$g(^TEPI(%VISSC0d(17),4,%VISSC0d(18),%VISSC0d(3)))
 s %VISSC0d(4)=$p(%VISSC0d(28),"\",1) s %VISSC0d(5)=$p(%VISSC0d(28),"\",2) s %VISSC0d(6)=$p(%VISSC0d(28),"\",3) s %VISSC0d(7)=$p(%VISSC0d(28),"\",4) s %VISSC0d(8)=$p(%VISSC0d(28),"\",5) s %VISSC0d(9)=$p(%VISSC0d(28),"\",6) s %VISSC0d(10)=$p(%VISSC0d(28),"\",7) s %VISSC0d(11)=$p(%VISSC0d(28),"\",8) s %VISSC0d(12)=$p(%VISSC0d(28),"\",9) s %VISSC0d(13)=$p(%VISSC0d(28),"\",10) s %VISSC0d(14)=$p(%VISSC0d(28),"\",11)
 s %VISSC0d(2)=(%VISSC0d(17))_"||"_(%VISSC0d(18))_"||"_(%VISSC0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISSC0d(2),"||",1),4,$p(%VISSC0d(2),"||",2),$p(%VISSC0d(2),"||",3))#"S":$zu(115,4) i $t { s %VISSC0d(20)=1,%VISSC0d(21)=$name(^TEPI($p(%VISSC0d(2),"||",1),4,$p(%VISSC0d(2),"||",2),$p(%VISSC0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitSpecimenContainer for RowID value: "_%VISSC0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISSC0d(17)=$p(%VISSC0d(2),"||"),%VISSC0d(18)=$p(%VISSC0d(2),"||",2),%VISSC0d(3)=$p(%VISSC0d(2),"||",3)
 i %VISSC0d(17)'="",%VISSC0d(18)'="",%VISSC0d(3)'="",$d(^TEPI(%VISSC0d(17),4,%VISSC0d(18),%VISSC0d(3)))
 e  g %0ACdun
 s %VISSC0d(35)=$g(^TEPI(%VISSC0d(17),4,%VISSC0d(18),%VISSC0d(3)))
 s %VISSC0d(4)=$p(%VISSC0d(35),"\",1) s %VISSC0d(5)=$p(%VISSC0d(35),"\",2) s %VISSC0d(6)=$p(%VISSC0d(35),"\",3) s %VISSC0d(7)=$p(%VISSC0d(35),"\",4) s %VISSC0d(8)=$p(%VISSC0d(35),"\",5) s %VISSC0d(9)=$p(%VISSC0d(35),"\",6) s %VISSC0d(10)=$p(%VISSC0d(35),"\",7) s %VISSC0d(11)=$p(%VISSC0d(35),"\",8) s %VISSC0d(12)=$p(%VISSC0d(35),"\",9) s %VISSC0d(13)=$p(%VISSC0d(35),"\",10) s %VISSC0d(14)=$p(%VISSC0d(35),"\",11)
 s %VISSC0d(1)=$p(%VISSC0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISSC0d(19)=%VISSC0d(19)+1,%ROWCOUNT=%VISSC0d(19),%ROWID=%VISSC0d(2),%VISSC0c=10 q
%VISSC0f i '$g(%VISSC0c) { s SQLCODE=-102 q  } i %VISSC0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISSC0d(19))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISSC0d(19),%VISSC0c=100 q  } g %0Afirst:%VISSC0c=1
%0ACdun i $zu(115,2)=1,$g(%VISSC0d(20))=1 { l -@%VISSC0d(21) s %VISSC0d(20)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISSC0d(19),SQLCODE=100,%VISSC0c=100 q
%VISSC0c i '$g(%VISSC0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISSC0d(19)),1:0)
 i $zu(115,2)=1,$g(%VISSC0d(20))=1 { l -@%VISSC0d(21) } k %VISSC0c,%VISSC0d,%VISSC0E,%VISSC0l,%VISSC0n,%VISSC0R,%VISSC0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISSC0c=100 q
%0Do d %VISSC0f q:SQLCODE'=0
 s PLIST(0)=%VISSC0d(1),PLIST(1)=%VISSC0d(2),PLIST(2)=%VISSC0d(3),PLIST(3)=%VISSC0d(4),PLIST(4)=%VISSC0d(5),PLIST(5)=%VISSC0d(6),PLIST(6)=%VISSC0d(7),PLIST(7)=%VISSC0d(8),PLIST(8)=%VISSC0d(9),PLIST(9)=%VISSC0d(10),PLIST(10)=%VISSC0d(11),PLIST(11)=%VISSC0d(12),PLIST(12)=%VISSC0d(13),PLIST(13)=%VISSC0d(14)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(20)=0,%mmmsqld(21)=""
 s %mmmsqld(16)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(16)
 s %mmmsqld(18)=$p(PLIST(1),"||"),%mmmsqld(19)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(18)'="",%mmmsqld(19)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(18),4,%mmmsqld(19),PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(28)=$g(^TEPI(%mmmsqld(18),4,%mmmsqld(19),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",1) s PLIST(4)=$p(%mmmsqld(28),"\",2) s PLIST(5)=$p(%mmmsqld(28),"\",3) s PLIST(6)=$p(%mmmsqld(28),"\",4) s PLIST(7)=$p(%mmmsqld(28),"\",5) s PLIST(8)=$p(%mmmsqld(28),"\",6) s PLIST(9)=$p(%mmmsqld(28),"\",7) s PLIST(10)=$p(%mmmsqld(28),"\",8) s PLIST(11)=$p(%mmmsqld(28),"\",9) s PLIST(12)=$p(%mmmsqld(28),"\",10) s PLIST(13)=$p(%mmmsqld(28),"\",11)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),4,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^TEPI($p(PLIST(1),"||",1),4,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitSpecimenContainer for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(18)=$p(PLIST(1),"||"),%mmmsqld(19)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(18)'="",%mmmsqld(19)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(18),4,%mmmsqld(19),PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(35)=$g(^TEPI(%mmmsqld(18),4,%mmmsqld(19),PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(35),"\",1) s PLIST(4)=$p(%mmmsqld(35),"\",2) s PLIST(5)=$p(%mmmsqld(35),"\",3) s PLIST(6)=$p(%mmmsqld(35),"\",4) s PLIST(7)=$p(%mmmsqld(35),"\",5) s PLIST(8)=$p(%mmmsqld(35),"\",6) s PLIST(9)=$p(%mmmsqld(35),"\",7) s PLIST(10)=$p(%mmmsqld(35),"\",8) s PLIST(11)=$p(%mmmsqld(35),"\",9) s PLIST(12)=$p(%mmmsqld(35),"\",10) s PLIST(13)=$p(%mmmsqld(35),"\",11)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(4),4,%mmmsqld(5),%mmmsqld(6)))
 e  g %0HBdun
 s %mmmsqld(15)=$$%getlock^User.EPVisitSpecimenContainer.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(4),4,%mmmsqld(5),%mmmsqld(6)))
 e  g %0HCdun
 k %data
 f icol=0:1:13 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitSpecimenContainer.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.EPVisitSpecimenContainer.T1(%mmmsqld(2)) g %0Hc
%0HCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.EPVisitSpecimenContainer.T1(%mmmsqld(2)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.EPVisitSpecimenContainer.T1(%mmmsqld(2)) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitSpecimen.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
%0Lo n %i,icol,ir
 f icol=0:1:13 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitSpecimenContainer.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Lo
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(x2)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("CON",%mmmsqld(3)))
 e  g %0NBdun
 s %mmmsqld(12)=$g(^TTAB("CON",%mmmsqld(3)))
 s xx=$p(%mmmsqld(12),"\",3)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TTAB("CON",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("CON",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Container for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("CON",%mmmsqld(3)))
 e  g %0NCdun
 s %mmmsqld(17)=$g(^TTAB("CON",%mmmsqld(3)))
 s xx=$p(%mmmsqld(17),"\",3)
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
]]></Routine>
</Export>
