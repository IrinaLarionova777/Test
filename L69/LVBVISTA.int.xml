<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISTA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISTA ; IG 6/5/98 ; LVB Control data access for VISTA EP_VisitTestSetDataAntib
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISTA(par)
 ; $$update^LVBVISTA(ROWID,app,group)
 ; $$select^LVBVISTA(ROWID)
 ; $$delete^LVBVISTA(ROWID,app,group)
 ; $$delall^LVBVISTA(par,app,group)
 ; $$open^LVBVISTA(par)
 ; $$fetch^LVBVISTA(par)
 ; $$close^LVBVISTA()
 ; $$getall^LVBVISTA(bug,episdata,msdata,spec,ss,keep,specGroup)
 ;
  ;---&sql(DECLARE VISTA CURSOR FOR SELECT * FROM EP_VisitTestSetDataAntib
   ;---         WHERE VISTA_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par) s par=$g(par)
  ;---&SQL(OPEN VISTA)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISTA0o
 q 0
 ;
fetch(par) k PLIST s par=$g(par)
  ;---&SQL(FETCH VISTA INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE VISTA)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISTA0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitTestSetDataAntib WHERE VISTA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO EP_VisitTestSetDataAntib VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE d  q $$select(%ROWID)
 .k %d m %d=^TEPI($p(%ROWID,"||",1),1,$p(%ROWID,"||",2),$p(%ROWID,"||",3),"DATA",$p(%ROWID,"||",4),"ANT",$p(%ROWID,"||",5))
 .d SetAll^LVBCOM50($p(%ROWID,"||",1),"216S",.%d,%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID,app,group) d pre("Y") s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(UPDATE EP_VisitTestSetDataAntib VALUES :PLIST() WHERE VISTA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 k ^TMP("FUNCTION",$j)
 i 'SQLCODE d  q $$select(%ROWID)
 .k %d m %d=^TEPI($p(%ROWID,"||",1),1,$p(%ROWID,"||",2),$p(%ROWID,"||",3),"DATA",$p(%ROWID,"||",4),"ANT",$p(%ROWID,"||",5))
 .d SetAll^LVBCOM50($p(%ROWID,"||",1),"216S",.%d,%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID,app,group) s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(DELETE FROM EP_VisitTestSetDataAntib WHERE VISTA_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("FUNCTION",$j)
 i 'SQLCODE d
 .k %d s %d(1)=RowID
 .d SetAll^LVBCOM50($p(RowID,"||",1),"216D",.%d,RowID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
delall(par,app,group) s par=$g(par),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(DELETE FROM EP_VisitTestSetDataAntib WHERE VISTA_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 Do %0No
 k ^TMP("FUNCTION",$j)
 i 'SQLCODE d
 .k %d s %d(1)=par
 .d SetAll^LVBCOM50($p(par,"||",1),"216DA",.%d,par)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 f j=5,6 i $l($g(PLIST(j))) d
 .s prefix=$s($e(PLIST(j),1,2)="<=":"<=",$e(PLIST(j),1,2)=">=":">=",$e(PLIST(j))="<":"<",$e(PLIST(j))=">":">",1:"")
 .s PLIST(j)=prefix_(+$e(PLIST(j),$l(prefix)+1,$l(PLIST(j))))
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTANT(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 I $G(PLIST(7))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTMP(plist(7),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(7)=X K plist
 ;
 q
 ; get list of antibiotics
 ; 1 - ant_$c(1)_name
 ; 2 - default : Reportable_\_Sequence
 ; 3 - sensitivity
 ; 4 - Reportable_\_Result_MIC_\_Result_mm_\_AntibioticPanel
getall(bug,episdata,msdata,spec,ss,keep,specGroup) n (bug,episdata,msdata,spec,ss,keep,specGroup,PLIST) k ^TMP($zn,$j)
 s bug=$g(bug),episdata=$g(episdata),msdata=$g(msdata),spec=$g(spec),ss=$g(ss),keep=$g(keep),specGroup=$g(specGroup)
 i '$l(specGroup),$l(spec) f  s specGroup=$o(^TTAB("CTSG",specGroup)) q:specGroup=""  i $d(^TTAB("CTSG",specGroup,spec)) q
 i $l(episdata) d
 .s epis=$p(episdata,"||"),ts=$p(episdata,"||",2),cnt=$p(episdata,"||",3),tc=$p(episdata,"||",4)
 .i (bug=$p($g(^TEPI(epis,1,ts,cnt,"DATA",tc)),"\"))!(keep="Y") d
 ..s ant="" f  s ant=$o(^TEPI(epis,1,ts,cnt,"DATA",tc,"ANT",ant)) q:ant=""  d
 ...s s=^(ant) i $d(^TTAB("ANT",ant)) d
 ....s $p(^TMP($zn,$j,0,ant),$c(2),1)=ant_$c(1)_$p($g(^TTAB("ANT",ant)),"\")
 ....s $p(^TMP($zn,$j,0,ant),$c(2),2)="\"_$p(s,"\",7)
 ....s $p(^TMP($zn,$j,0,ant),$c(2),3)=$p(s,"\",1)
 ....s $p(^TMP($zn,$j,0,ant),$c(2),4)=$p(s,"\",2,5)
 i $l(msdata),$l(episdata),'$d(^TMP($zn,$j)) d
 .s epis=$p(episdata,"||"),ts=$p(episdata,"||",2),cnt=$p(episdata,"||",3),tc=$p(episdata,"||",4)
 .s rowid="" i '$$selactive^LVBMIRI(msdata_"||"_tc) s rowid=PLIST(1)
 .i $l(rowid),'$$getall^LVBMIRIA(bug,rowid) d
 ..f j=1:1:PLIST s ant=$p($p(PLIST(j),$c(2)),$c(1)),^TMP($zn,$j,0,ant)=PLIST(j)
 ; check antibiotics from pathogen
 s found=0
 i 'found,$d(^TTAB("BUG",bug,"ANT")) s found=1 d
 .s ant="" f  s ant=$o(^TTAB("BUG",bug,"ANT",ant)) q:ant=""  d
 ..i '$d(^TMP($zn,$j,0,ant)) s $p(^TMP($zn,$j,0,ant),$c(2),1)=ant_$c(1)_$p($g(^TTAB("ANT",ant)),"\")
 ..s previous=$p($p(^TMP($zn,$j,0,ant),$c(2),4),"\")
 ..i ($p(^TMP($zn,$j,0,ant),$c(2),2)="")!(previous="X") d
 ...s (result,$p(^TMP($zn,$j,0,ant),$c(2),2))=^TTAB("BUG",bug,"ANT",ant)
 ...i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,"\"),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 ...i $d(^TTAB("BUG",bug,"ANT",ant,"ACTION")),$l(episdata) d
 ....s result=$$ANTaction^LVBVIS12($p(episdata,"||",1,3),bug,ant) i 'result d
 .....s xx=$p(^TMP($zn,$j,0,ant),$c(2),2),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),2)=xx
 .....i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 ; check antibiotics from antibiotic panel
 i 'found,$d(^TTAB("BUG",bug,"MP")) s found=1 d
 .s x="" f  s x=$o(^TTAB("BUG",bug,"MP",x)) q:x=""  d
 ..s xspec=$p(^(x),"\",1),xss=$p(^(x),"\",2)
 ..i $l(xspec),xspec'=spec q
 ..i $l(xss),xss'=ss q
 ..s panel=$p(^(x),"\",3),xx=(''$l(xspec))+(''$l(xss))
 ..s xx(xx,panel)=$p(^(x),"\",4)
 .s xx=$o(xx(""),-1) i $l(xx) d
 ..s panel="" f  s panel=$o(xx(xx,panel)) q:panel=""  i xx(xx,panel)="Y" d  q
 ...s ant="" f  s ant=$o(^TTAB("MP",panel,"ANT",ant)) q:ant=""  d
 ....i '$d(^TMP($zn,$j,0,ant)) s $p(^TMP($zn,$j,0,ant),$c(2),1)=ant_$c(1)_$p($g(^TTAB("ANT",ant)),"\")
 ....s previous=$p($p(^TMP($zn,$j,0,ant),$c(2),4),"\")
 ....i ($p(^TMP($zn,$j,0,ant),$c(2),2)="")!(previous="X") d
 .....s (result,$p(^TMP($zn,$j,0,ant),$c(2),2))=^TTAB("MP",panel,"ANT",ant)
 .....i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,"\"),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 .....i $d(^TTAB("MP",panel,"ANT",ant,"ACTION")),$l(episdata) d
 ......s result=$$ANTaction^LVBVIS12($p(episdata,"||",1,3),,ant,panel) i 'result d
 .......s xx=$p(^TMP($zn,$j,0,ant),$c(2),2),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),2)=xx
 .......i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 .....s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",4)=panel,$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 ; check antibiotics from pathogen-group
 i 'found d
 .s bg=$$seldata^LVBCTBUG(bug,4)
 .i $l(bg),'found,$d(^TTAB("BUG-GROUP",bg,"AB")) s found=1 d
 ..s ant="" f  s ant=$o(^TTAB("BUG-GROUP",bg,"AB",ant)) q:ant=""  d
 ...i '$d(^TMP($zn,$j,0,ant)) s $p(^TMP($zn,$j,0,ant),$c(2),1)=ant_$c(1)_$p($g(^TTAB("ANT",ant)),"\")
 ...s previous=$p($p(^TMP($zn,$j,0,ant),$c(2),4),"\")
 ...i ($p(^TMP($zn,$j,0,ant),$c(2),2)="")!(previous="X") d
 ....s (result,$p(^TMP($zn,$j,0,ant),$c(2),2))=^TTAB("BUG-GROUP",bg,"AB",ant)
 ....i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,"\"),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 ....i $d(^TTAB("BUG-GROUP",bg,"AB",ant,"ACTION")),$l(episdata) d
 .....s result=$$ANTaction^LVBVIS12($p(episdata,"||",1,3),,ant,,bg) i 'result d
 ......s xx=$p(^TMP($zn,$j,0,ant),$c(2),2),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),2)=xx
 ......i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 .i $l(bg),'found,$d(^TTAB("BUG-GROUP",bg,"MP")) s found=1 d
 ..s x="" f  s x=$o(^TTAB("BUG-GROUP",bg,"MP",x)) q:x=""  d
 ...s xspec=$p(^(x),"\",1),xss=$p(^(x),"\",2),xspecGroup=$p(^(x),"\",5)
 ...i $l(xspec),xspec'=spec q
 ...i $l(xspecGroup),xspecGroup'=specGroup q
 ...i $l(xss),xss'=ss q
 ...s panel=$p(^(x),"\",3),xx=(''$l(xspec))+(''$l(xss))+(''$l(xspecGroup))
 ...s xx(xx,panel)=$p(^(x),"\",4)
 ..s xx=$o(xx(""),-1) i $l(xx) d
 ...s panel="" f  s panel=$o(xx(xx,panel)) q:panel=""  i xx(xx,panel)="Y" d  q
 ....s ant="" f  s ant=$o(^TTAB("MP",panel,"ANT",ant)) q:ant=""  d
 .....i '$d(^TMP($zn,$j,0,ant)) s $p(^TMP($zn,$j,0,ant),$c(2),1)=ant_$c(1)_$p($g(^TTAB("ANT",ant)),"\")
 .....s previous=$p($p(^TMP($zn,$j,0,ant),$c(2),4),"\")
 .....i ($p(^TMP($zn,$j,0,ant),$c(2),2)="")!(previous="X") d
 ......s (result,$p(^TMP($zn,$j,0,ant),$c(2),2))=^TTAB("MP",panel,"ANT",ant)
 ......i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,"\"),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 ......i $d(^TTAB("MP",panel,"ANT",ant,"ACTION")),$l(episdata) d
 .......s result=$$ANTaction^LVBVIS12($p(episdata,"||",1,3),,ant,panel) i 'result d
 ........s xx=$p(^TMP($zn,$j,0,ant),$c(2),2),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),2)=xx
 ........i "X"[previous s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",1)=$p(result,$c(1),2),$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 ......s xx=$p(^TMP($zn,$j,0,ant),$c(2),4),$p(xx,"\",4)=panel,$p(^TMP($zn,$j,0,ant),$c(2),4)=xx
 ; sort antibiotics
 s (last,ant)="" f  s ant=$o(^TMP($zn,$j,0,ant)) q:ant=""  d
 .s seq=$p($p(^TMP($zn,$j,0,ant),$c(2),2),"\",2) i seq>last s last=$p($p(^TMP($zn,$j,0,ant),$c(2),2),"\",2)
 .s:'seq seq=9999 s ^TMP($zn,$j,1,+seq,ant)=""
 s ant="" f  s ant=$o(^TMP($zn,$j,0,ant)) q:ant=""  d
 .s seq=$p($p(^TMP($zn,$j,0,ant),$c(2),2),"\",2) i seq="" d
 ..s x=$p($p(^TMP($zn,$j,0,ant),$c(2),2),"\") i x="" s x="N"
 ..s last=last+1,$p(^TMP($zn,$j,0,ant),$c(2),2)=x_"\"_last
 k PLIST s (cnt,seq)="" f  s seq=$o(^TMP($zn,$j,1,seq)) q:seq=""  d
 .s ant="" f  s ant=$o(^TMP($zn,$j,1,seq,ant)) q:ant=""  s cnt=cnt+1,PLIST(cnt)=^TMP($zn,$j,0,ant)
 s PLIST=$o(PLIST(""),-1) k ^TMP($zn,$j) 
 q 0
%VISTA0o s $zt="%VISTA0E" s SQLCODE=$s($g(%VISTA0c):-101,1:0) q:SQLCODE'=0  s %VISTA0d(17)=0 s %VISTA0d(18)=0,%VISTA0d(19)=""
 s %VISTA0d(11)=$g(par)
 s %VISTA0c=1 q
%VISTA0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISTA0c,%VISTA0d,%VISTA0E,%VISTA0l,%VISTA0n,%VISTA0R,%VISTA0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISTA0d(1)=%VISTA0d(11)
 s %VISTA0d(13)=$p(%VISTA0d(1),"||"),%VISTA0d(14)=$p(%VISTA0d(1),"||",2),%VISTA0d(15)=$p(%VISTA0d(1),"||",3),%VISTA0d(16)=$p(%VISTA0d(1),"||",4)
 i %VISTA0d(13)="" g %0ABdun
 i %VISTA0d(14)="" g %0ABdun
 i %VISTA0d(15)="" g %0ABdun
 i %VISTA0d(16)="" g %0ABdun
 s %VISTA0d(3)=""
%0ABk1 s %VISTA0d(3)=$o(^TEPI(%VISTA0d(13),1,%VISTA0d(14),%VISTA0d(15),"DATA",%VISTA0d(16),"ANT",%VISTA0d(3)))
 i %VISTA0d(3)="" g %0ABdun
 s %VISTA0d(32)=$g(^TEPI(%VISTA0d(13),1,%VISTA0d(14),%VISTA0d(15),"DATA",%VISTA0d(16),"ANT",%VISTA0d(3)))
 s %VISTA0d(4)=$p(%VISTA0d(32),"\",1) s %VISTA0d(5)=$p(%VISTA0d(32),"\",2) s %VISTA0d(6)=$p(%VISTA0d(32),"\",3) s %VISTA0d(7)=$p(%VISTA0d(32),"\",4) s %VISTA0d(8)=$p(%VISTA0d(32),"\",5) s %VISTA0d(9)=$p(%VISTA0d(32),"\",6) s %VISTA0d(10)=$p(%VISTA0d(32),"\",7)
 s %VISTA0d(2)=(%VISTA0d(13))_"||"_(%VISTA0d(14))_"||"_(%VISTA0d(15))_"||"_(%VISTA0d(16))_"||"_(%VISTA0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISTA0d(2),"||",1),1,$p(%VISTA0d(2),"||",2),$p(%VISTA0d(2),"||",3),"DATA",$p(%VISTA0d(2),"||",4),"ANT",$p(%VISTA0d(2),"||",5))#"S":$zu(115,4) i $t { s %VISTA0d(18)=1,%VISTA0d(19)=$name(^TEPI($p(%VISTA0d(2),"||",1),1,$p(%VISTA0d(2),"||",2),$p(%VISTA0d(2),"||",3),"DATA",$p(%VISTA0d(2),"||",4),"ANT",$p(%VISTA0d(2),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitTestSetDataAntib for RowID value: "_%VISTA0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISTA0d(13)=$p(%VISTA0d(2),"||"),%VISTA0d(14)=$p(%VISTA0d(2),"||",2),%VISTA0d(15)=$p(%VISTA0d(2),"||",3),%VISTA0d(16)=$p(%VISTA0d(2),"||",4),%VISTA0d(3)=$p(%VISTA0d(2),"||",5)
 i %VISTA0d(13)'="",%VISTA0d(14)'="",%VISTA0d(15)'="",%VISTA0d(16)'="",%VISTA0d(3)'="",$d(^TEPI(%VISTA0d(13),1,%VISTA0d(14),%VISTA0d(15),"DATA",%VISTA0d(16),"ANT",%VISTA0d(3)))
 e  g %0ACdun
 s %VISTA0d(45)=$g(^TEPI(%VISTA0d(13),1,%VISTA0d(14),%VISTA0d(15),"DATA",%VISTA0d(16),"ANT",%VISTA0d(3)))
 s %VISTA0d(4)=$p(%VISTA0d(45),"\",1) s %VISTA0d(5)=$p(%VISTA0d(45),"\",2) s %VISTA0d(6)=$p(%VISTA0d(45),"\",3) s %VISTA0d(7)=$p(%VISTA0d(45),"\",4) s %VISTA0d(8)=$p(%VISTA0d(45),"\",5) s %VISTA0d(9)=$p(%VISTA0d(45),"\",6) s %VISTA0d(10)=$p(%VISTA0d(45),"\",7)
 s %VISTA0d(1)=$p(%VISTA0d(2),"||",1,4)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISTA0d(17)=%VISTA0d(17)+1,%ROWCOUNT=%VISTA0d(17),%ROWID=%VISTA0d(2),%VISTA0c=10 q
%VISTA0f i '$g(%VISTA0c) { s SQLCODE=-102 q  } i %VISTA0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISTA0d(17))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISTA0d(17),%VISTA0c=100 q  } g %0Afirst:%VISTA0c=1
%0ACdun i $zu(115,2)=1,$g(%VISTA0d(18))=1 { l -@%VISTA0d(19) s %VISTA0d(18)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISTA0d(17),SQLCODE=100,%VISTA0c=100 q
%VISTA0c i '$g(%VISTA0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISTA0d(17)),1:0)
 i $zu(115,2)=1,$g(%VISTA0d(18))=1 { l -@%VISTA0d(19) } k %VISTA0c,%VISTA0d,%VISTA0E,%VISTA0l,%VISTA0n,%VISTA0R,%VISTA0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISTA0c=100 q
%0Do d %VISTA0f q:SQLCODE'=0
 s PLIST(0)=%VISTA0d(1),PLIST(1)=%VISTA0d(2),PLIST(2)=%VISTA0d(3),PLIST(3)=%VISTA0d(4),PLIST(4)=%VISTA0d(5),PLIST(5)=%VISTA0d(6),PLIST(6)=%VISTA0d(7),PLIST(7)=%VISTA0d(8),PLIST(8)=%VISTA0d(9),PLIST(9)=%VISTA0d(10)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(18)=0,%mmmsqld(19)=""
 s %mmmsqld(12)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(12)
 s %mmmsqld(14)=$p(PLIST(1),"||"),%mmmsqld(15)=$p(PLIST(1),"||",2),%mmmsqld(16)=$p(PLIST(1),"||",3),%mmmsqld(17)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(14)'="",%mmmsqld(15)'="",%mmmsqld(16)'="",%mmmsqld(17)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(14),1,%mmmsqld(15),%mmmsqld(16),"DATA",%mmmsqld(17),"ANT",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(32)=$g(^TEPI(%mmmsqld(14),1,%mmmsqld(15),%mmmsqld(16),"DATA",%mmmsqld(17),"ANT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"\",1) s PLIST(4)=$p(%mmmsqld(32),"\",2) s PLIST(5)=$p(%mmmsqld(32),"\",3) s PLIST(6)=$p(%mmmsqld(32),"\",4) s PLIST(7)=$p(%mmmsqld(32),"\",5) s PLIST(8)=$p(%mmmsqld(32),"\",6) s PLIST(9)=$p(%mmmsqld(32),"\",7)
 s PLIST(0)=$p(PLIST(1),"||",1,4)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),1,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"DATA",$p(PLIST(1),"||",4),"ANT",$p(PLIST(1),"||",5))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TEPI($p(PLIST(1),"||",1),1,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"DATA",$p(PLIST(1),"||",4),"ANT",$p(PLIST(1),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitTestSetDataAntib for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(14)=$p(PLIST(1),"||"),%mmmsqld(15)=$p(PLIST(1),"||",2),%mmmsqld(16)=$p(PLIST(1),"||",3),%mmmsqld(17)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(14)'="",%mmmsqld(15)'="",%mmmsqld(16)'="",%mmmsqld(17)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(14),1,%mmmsqld(15),%mmmsqld(16),"DATA",%mmmsqld(17),"ANT",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(45)=$g(^TEPI(%mmmsqld(14),1,%mmmsqld(15),%mmmsqld(16),"DATA",%mmmsqld(17),"ANT",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(45),"\",1) s PLIST(4)=$p(%mmmsqld(45),"\",2) s PLIST(5)=$p(%mmmsqld(45),"\",3) s PLIST(6)=$p(%mmmsqld(45),"\",4) s PLIST(7)=$p(%mmmsqld(45),"\",5) s PLIST(8)=$p(%mmmsqld(45),"\",6) s PLIST(9)=$p(%mmmsqld(45),"\",7)
 s PLIST(0)=$p(PLIST(1),"||",1,4)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitTestSetDataAntib.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(9)=0 s %mmmsqld(10)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6),"DATA",%mmmsqld(7),"ANT",%mmmsqld(8)))
 e  g %0JBdun
 s %mmmsqld(23)=$$%getlock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(2)) i '%mmmsqld(23) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6),"DATA",%mmmsqld(7),"ANT",%mmmsqld(8)))
 e  g %0JCdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitTestSetDataAntib.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(9))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(23)=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(23)=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(9)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(23))=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPI(%mmmsqld(3),1,%mmmsqld(4),%mmmsqld(5),"DATA",%mmmsqld(6),"ANT",%mmmsqld(7)))
 e  g %0LBdun
 s %mmmsqld(22)=$$%getlock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(1)) i '%mmmsqld(22) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPI(%mmmsqld(3),1,%mmmsqld(4),%mmmsqld(5),"DATA",%mmmsqld(6),"ANT",%mmmsqld(7)))
 e  g %0LCdun
 d %delete^User.EPVisitTestSetDataAntib.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(22)=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(22)=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(22))=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(1)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(9)=0 s %mmmsqld(10)=""
 s %mmmsqld(2)=$g(par)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(5)=$p(%mmmsqld(1),"||"),%mmmsqld(6)=$p(%mmmsqld(1),"||",2),%mmmsqld(7)=$p(%mmmsqld(1),"||",3),%mmmsqld(8)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(5)="" g %0NBdun
 i %mmmsqld(6)="" g %0NBdun
 i %mmmsqld(7)="" g %0NBdun
 i %mmmsqld(8)="" g %0NBdun
 s %mmmsqld(4)=""
%0NBk1 s %mmmsqld(4)=$o(^TEPI(%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7),"DATA",%mmmsqld(8),"ANT",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0NBdun
 s %mmmsqld(3)=(%mmmsqld(5))_"||"_(%mmmsqld(6))_"||"_(%mmmsqld(7))_"||"_(%mmmsqld(8))_"||"_(%mmmsqld(4))
 s %mmmsqld(23)=$$%getlock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(3)) i '%mmmsqld(23) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(5)=$p(%mmmsqld(3),"||"),%mmmsqld(6)=$p(%mmmsqld(3),"||",2),%mmmsqld(7)=$p(%mmmsqld(3),"||",3),%mmmsqld(8)=$p(%mmmsqld(3),"||",4),%mmmsqld(4)=$p(%mmmsqld(3),"||",5)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7),"DATA",%mmmsqld(8),"ANT",%mmmsqld(4)))
 e  g %0NCdun
 s %mmmsqld(1)=$p(%mmmsqld(3),"||",1,4)
 d %delete^User.EPVisitTestSetDataAntib.T1(%mmmsqld(3),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(9))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(23)=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(3)) g %0Nc
%0NCdun 
 d:%mmmsqld(23)=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(3)) g:SQLCODE<0 %0Nc
 g %0NBk1
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(9)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(23))=1 %ReleaseLock^User.EPVisitTestSetDataAntib.T1(%mmmsqld(3)) g %0Nc
]]></Routine>
</Export>
