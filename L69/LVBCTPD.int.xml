<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTPD" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTPD ; IG 4/5/98 ;MVB Control code access for CT_PrintDestination
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTPD(RowID,skip)
 ; $$open^LVBCTPD(skip,user,name,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTPD(skip,user,name,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTPD(skip,user,name,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTPD(skip,user,name,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTPD()
 ; $$insert^LVBCTPD()
 ; $$update^LVBCTPD(RowID)
 ; $$delete^LVBCTPD(RowID,Comments)
 ; $$getall^LVBCTPD(user,name)
 ; $$ValUser^LVBCTPD(user,code)
 ;
  ;---&SQL(DECLARE CTPD CURSOR FOR SELECT * FROM CT_PrintDestination
   ;---         WHERE ((%ALPHAUP(CTPD_Description) %STARTSWITH :name) OR (:name IS NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, name
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_PrintDestination VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(RowID) S RowID=$G(RowID) d pre("Y") 
  ;---&SQL(UPDATE CT_PrintDestination VALUES :PLIST() WHERE CTPD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_PrintDestination WHERE CTPD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(skip,user,name,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),name=$g(name)
  ;---&SQL(OPEN CTPD)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTPD0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,user,name,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),name=$g(name) k PLIST
  ;---f  &SQL(FETCH CTPD INTO :PLIST()) q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 f  Do %0Jo q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,user,name,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),name=$g(name) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,user,name) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,user,name,p3,p4,p5,p6,p7,p8,p9) N (skip,user,name,PLIST) s skip=$g(skip),user=$g(user),name=$g(name) K ^TMP($zn,$j)
 i $$open(skip,user,name)
 f cnt=1:1 Q:$$fetch(skip,user,name)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTPD) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTPD0c 
 q 0
 ;
 ; select data by code
select(RowID,skip) K PLIST S RowID=$G(RowID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_PrintDestination WHERE CTPD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 i $g(PLIST(6))'="M" k PLIST(7)
 f J=14,15 i $l($g(PLIST(J))) d  s PLIST(J)=X
 .s X="" f I=1:1:$l(PLIST(J)) d
 ..i $e(PLIST(J),I)="[",$f(PLIST(J),"]",I) s X=X_$c($e(PLIST(J),I+1,$f(PLIST(J),"]",I)-2)),I=$f(PLIST(J),"]",I)-1
 ..e  s X=X_$e(PLIST(J),I)
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^MVBSSDEV(plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(2)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 ;
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTPS(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 ;
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTUSL(plist(11),"Y")
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 I $G(PLIST(12))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTPRT(plist(12),"Y")
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(12)=X K plist
 f J=14,15 i $l(PLIST(J)) d  s PLIST(J)=X
 .s X="" f I=1:1:$l(PLIST(J)) s X=X_$s($a(PLIST(J),I)<32:"["_$a(PLIST(J),I)_"]",1:$e(PLIST(J),I))
 Q
getall(user,name) N (user,name,PLIST) K ^TMP($zn,$j) s user=$g(user),name=$g(name)
 I $$open("Y",user,name)
 F cnt=1:1 Q:$$fetch("Y",user,name)  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(6),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 ;
 ; check user - Print Destination
ValUser(user,code) n (user,code) s user=$g(user),code=$g(code),ok=0
 i $l(user) d
 . ;---&SQL(SELECT CTPD_Site_DR INTO :Location FROM CT_PrintDestination WHERE CTPD_RowID=:code)
  . ;--- ** SQL PUBLIC Variables: Location, SQLCODE, code
 .Do %0No
 .s Location=$g(Location),ok=$$ValUser^LVBCTUSL(user,Location)
 q ok
%CTPD0o s $zt="%CTPD0E" s SQLCODE=$s($g(%CTPD0c):-101,1:0) q:SQLCODE'=0  s %CTPD0d(21)=0 s %CTPD0d(22)=0,%CTPD0d(23)=""
 s %CTPD0d(16)=$g(name),%CTPD0d(17)=$g(name)
 s %CTPD0c=1 q
%CTPD0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTPD0c,%CTPD0d,%CTPD0E,%CTPD0l,%CTPD0n,%CTPD0R,%CTPD0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTPD0d(1)=""
%0ABk1 s %CTPD0d(1)=$o(^TTAB("CTDS",%CTPD0d(1)))
 i %CTPD0d(1)="" g %0ABdun
 s %CTPD0d(3)=$g(^TTAB("CTDS",%CTPD0d(1),1))
 s %CTPD0d(28)=$g(^TTAB("CTDS",%CTPD0d(1)))
 s %CTPD0d(2)=$p(%CTPD0d(28),"\",1) s %CTPD0d(4)=$p(%CTPD0d(28),"\",2) s %CTPD0d(5)=$p(%CTPD0d(28),"\",3) s %CTPD0d(6)=$p(%CTPD0d(28),"\",4) s %CTPD0d(7)=$p(%CTPD0d(28),"\",5) s %CTPD0d(8)=$p(%CTPD0d(28),"\",6) s %CTPD0d(9)=$p(%CTPD0d(28),"\",7) s %CTPD0d(10)=$p(%CTPD0d(28),"\",8) s %CTPD0d(11)=$p(%CTPD0d(28),"\",9) s %CTPD0d(12)=$p(%CTPD0d(28),"\",10) s %CTPD0d(13)=$p(%CTPD0d(28),"\",11) s %CTPD0d(14)=$p(%CTPD0d(28),"\",12)
 s %CTPD0d(15)=$zu(28,%CTPD0d(2),6)
 g:'(((%CTPD0d(15)'="")&&(($c(0)[%CTPD0d(16))||(%CTPD0d(16)=$c(32,0)&&($e(%CTPD0d(15))=$c(32)))||(%CTPD0d(16)=$e(%CTPD0d(15),1,$l(%CTPD0d(16))))))||(%CTPD0d(17)="")) %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("CTDS",$p(%CTPD0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTPD0d(22)=1,%CTPD0d(23)=$name(^TTAB("CTDS",$p(%CTPD0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintDestination for RowID value: "_%CTPD0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTPD0d(19)=$lb(""_%CTPD0d(15))
 i %CTPD0d(1)'="",$d(^TTAB("CTDS",%CTPD0d(1)))
 e  g %0ACdun
 s %CTPD0d(3)=$g(^TTAB("CTDS",%CTPD0d(1),1))
 s %CTPD0d(33)=$g(^TTAB("CTDS",%CTPD0d(1)))
 s %CTPD0d(2)=$p(%CTPD0d(33),"\",1) s %CTPD0d(4)=$p(%CTPD0d(33),"\",2) s %CTPD0d(5)=$p(%CTPD0d(33),"\",3) s %CTPD0d(6)=$p(%CTPD0d(33),"\",4) s %CTPD0d(7)=$p(%CTPD0d(33),"\",5) s %CTPD0d(8)=$p(%CTPD0d(33),"\",6) s %CTPD0d(9)=$p(%CTPD0d(33),"\",7) s %CTPD0d(10)=$p(%CTPD0d(33),"\",8) s %CTPD0d(11)=$p(%CTPD0d(33),"\",9) s %CTPD0d(12)=$p(%CTPD0d(33),"\",10) s %CTPD0d(13)=$p(%CTPD0d(33),"\",11) s %CTPD0d(14)=$p(%CTPD0d(33),"\",12)
 s %CTPD0d(15)=$zu(28,%CTPD0d(2),6)
 s %CTPD0d(20)=$lb(""_%CTPD0d(15))
 g:%CTPD0d(19)'=%CTPD0d(20) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTPD0d(21)=%CTPD0d(21)+1,%ROWCOUNT=%CTPD0d(21),%ROWID=%CTPD0d(1),%CTPD0c=10 q
%CTPD0f i '$g(%CTPD0c) { s SQLCODE=-102 q  } i %CTPD0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTPD0d(21))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTPD0d(21),%CTPD0c=100 q  } g %0Afirst:%CTPD0c=1
%0ACdun i $zu(115,2)=1,$g(%CTPD0d(22))=1 { l -@%CTPD0d(23) s %CTPD0d(22)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTPD0d(21),SQLCODE=100,%CTPD0c=100 q
%CTPD0c i '$g(%CTPD0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTPD0d(21)),1:0)
 i $zu(115,2)=1,$g(%CTPD0d(22))=1 { l -@%CTPD0d(23) } k %CTPD0c,%CTPD0d,%CTPD0E,%CTPD0l,%CTPD0n,%CTPD0R,%CTPD0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTPD0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:15 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTPrintDestination.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("CTDS",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTPrintDestination.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("CTDS",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:15 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTPrintDestination.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTPrintDestination.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTPrintDestination.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTPrintDestination.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("CTDS",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTPrintDestination.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("CTDS",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTPrintDestination.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTPrintDestination.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTPrintDestination.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTPrintDestination.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTPD0f q:SQLCODE'=0
 s PLIST(1)=%CTPD0d(1),PLIST(2)=%CTPD0d(1),PLIST(3)=%CTPD0d(2),PLIST(4)=%CTPD0d(3),PLIST(5)=%CTPD0d(4),PLIST(6)=%CTPD0d(5),PLIST(7)=%CTPD0d(6),PLIST(8)=%CTPD0d(7),PLIST(9)=%CTPD0d(8),PLIST(10)=%CTPD0d(9),PLIST(11)=%CTPD0d(10),PLIST(12)=%CTPD0d(11),PLIST(13)=%CTPD0d(12),PLIST(14)=%CTPD0d(13),PLIST(15)=%CTPD0d(14)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(18)=0,%mmmsqld(19)=""
 s %mmmsqld(16)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(16)
 i PLIST(2)'="",$d(^TTAB("CTDS",PLIST(2)))
 e  g %0LBdun
 s PLIST(4)=$g(^TTAB("CTDS",PLIST(2),1))
 s %mmmsqld(24)=$g(^TTAB("CTDS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(24),"\",1) s PLIST(5)=$p(%mmmsqld(24),"\",2) s PLIST(6)=$p(%mmmsqld(24),"\",3) s PLIST(7)=$p(%mmmsqld(24),"\",4) s PLIST(8)=$p(%mmmsqld(24),"\",5) s PLIST(9)=$p(%mmmsqld(24),"\",6) s PLIST(10)=$p(%mmmsqld(24),"\",7) s PLIST(11)=$p(%mmmsqld(24),"\",8) s PLIST(12)=$p(%mmmsqld(24),"\",9) s PLIST(13)=$p(%mmmsqld(24),"\",10) s PLIST(14)=$p(%mmmsqld(24),"\",11) s PLIST(15)=$p(%mmmsqld(24),"\",12)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("CTDS",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TTAB("CTDS",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintDestination for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("CTDS",PLIST(2)))
 e  g %0LCdun
 s PLIST(4)=$g(^TTAB("CTDS",PLIST(2),1))
 s %mmmsqld(29)=$g(^TTAB("CTDS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"\",1) s PLIST(5)=$p(%mmmsqld(29),"\",2) s PLIST(6)=$p(%mmmsqld(29),"\",3) s PLIST(7)=$p(%mmmsqld(29),"\",4) s PLIST(8)=$p(%mmmsqld(29),"\",5) s PLIST(9)=$p(%mmmsqld(29),"\",6) s PLIST(10)=$p(%mmmsqld(29),"\",7) s PLIST(11)=$p(%mmmsqld(29),"\",8) s PLIST(12)=$p(%mmmsqld(29),"\",9) s PLIST(13)=$p(%mmmsqld(29),"\",10) s PLIST(14)=$p(%mmmsqld(29),"\",11) s PLIST(15)=$p(%mmmsqld(29),"\",12)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(code)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("CTDS",%mmmsqld(3)))
 e  g %0NBdun
 s %mmmsqld(12)=$g(^TTAB("CTDS",%mmmsqld(3)))
 s Location=$p(%mmmsqld(12),"\",8)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TTAB("CTDS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("CTDS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintDestination for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("CTDS",%mmmsqld(3)))
 e  g %0NCdun
 s %mmmsqld(17)=$g(^TTAB("CTDS",%mmmsqld(3)))
 s Location=$p(%mmmsqld(17),"\",8)
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
]]></Routine>
</Export>
