<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTXMR13" type="INT" languagemode="0"><![CDATA[
PRTXMR13 ; ML 13/09/99 ; BloodBank XMatch report - Launceston General Hospital  ; Compiled March 6, 2000 15:35:32 for Cache for Windows
 q
 ; Parameters :  1. Call type
 ;                       EM - emergency issue  - no patient or request - pack id only
 ;                       GS - Group specific   - xm request number
 ;                       XM - Full cross match - xm request number
 ;                       DI - direct issue
 ;                       NI - neonate issue
 ;               2. Request
 ;
CREATE(REPID,PAR,USER,%msql) ; create report
 n (REPID,PAR,USER,%msql) k ^TMP($zn,$j),^TMP("PRTDR00",$j),^TMP("REPORT",$j)
 k xHEADER d INIT,BODY,PRINT
 k ^TMP($zn,$j)
 q
INIT ; initialise parameters
 f j=1:1:$l(PAR,$c(1)) s @("PAR"_j)=$p(PAR,$c(1),j)
 q
BODY ; create report
 q:$$select^BVBREQ(PAR2)
 s vtsRID=$g(PLIST(9)),hold=$p(PLIST(12),$c(1))
 s vtsRID=$p(vtsRID,$c(1)),epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2)
 s:hold'="" hold=$$extdate2^SSUTIL4(hold)
 d %0Ao
 q:SQLCODE
 s patbg=$p(patbg,$c(1))
 d %0Bo
 s bgdesc=$p($g(bgdesc),$c(1))
 ; extract episode details
 s mrn="" i '$$select^LVBEPVIS(epis) s mrn=$p(PLIST(20),$c(1))
 s dep="",tsLM=0
 i '$$select^LVBCTTS(test,"Y") d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .k TEST m TEST=PLIST s tsLM=TEST(41),dep=PLIST(26)
 i 'tsLM,'$$select^LVBCTDEP(dep,"Y"),PLIST(13) s tsLM=PLIST(13)
 s tsWD=80 i '$$select^MVBCFLAB(1) d
 .i 'tsLM,PLIST(43) s tsLM=PLIST(43)
 .i 'tsWD,PLIST(42) s tsWD=PLIST(42)
 d ADD^PRTDR00(,$c(27)_"(s7B"),LN^PRTDR00()
 ; print x-match report grid
 d ADD^PRTDR00(,$c(27)_"(s1p12v0s1b4101T")
 d:PAR1'="DI" ADD^PRTDR00(,$c(27)_"&a500h3150VThe following units are available until "_hold_" time")
 d ADD^PRTDR00(,$c(27)_"(s0p10v0s0b4101T"),ADD^PRTDR00(,$c(27)_"&a1000h1500V")
 s x="" f  s x=$o(^SS("QDR","LGH-XMR",x)) q:x=""  d ADD^PRTDR00(,^(x))
 s $p(LINE,"_",85)="",TEXT="",UL=LINE,cntline="" 
 f i=1:1:2 d LN^PRTDR00() s cntline=cntline+1
 ; print blood group and antibody screen
 d ADD^PRTDR00(15,"Blood Group       : "_bgdesc),LN^PRTDR00() s cntline=cntline+1
 i PAR1'="DI" d ADD^PRTDR00(15,"Antibody Screen   : "_$$abs(epis,PAR1)),LN^PRTDR00() s cntline=cntline+1
 d LN^PRTDR00() s cntline=cntline+1
 ; print previous antibodies detected
 i mrn,'$$getall2^BVBCTCTS("UAR") d
 .q:$$open^BVBANTRG("",mrn)  f  q:$$fetch^BVBANTRG("",mrn)  d
 ..s (desc,len)=""
 ..s desc=PLIST(6) f  s len=$l(desc) q:$e(desc,len)'=" "  s desc=$e(desc,1,len-1)
 ..i $d(anti(desc)) q:PLIST(7)>$g(anti(desc))
 ..s anti(desc)=PLIST(7),antidate(PLIST(7),desc)=""
 .i $$close^BVBANTRG()
 .q:'$d(antidate)
 .s (cnt,msg,date)="" f  s date=$o(antidate(date)) q:date=""  q:cnt=4  d
 ..s datex=$$extdate2^SSUTIL4(date) s desc="" f  s desc=$o(antidate(date,desc)) q:desc=""  q:cnt=4  d
 ...s cnt=cnt+1,msg=desc_" Identified "_datex
 ...d ADD^PRTDR00(15,"Antibodies        : "_msg),LN^PRTDR00() s cntline=cntline+1
 .d LN^PRTDR00() s cntline=cntline+1
 k anti,antidate
 ; save request comments
 s width=tsWD-tsLM,cnt=""
 s x=0 f  s x=$o(^BB("RQ",PAR2,"REM",x)) q:x=""  s line=^(x) k s d
 .s linex=line,(xline,line)=""
 .s xx="" f  s xx=$p(linex,"}",1),linex=$p(linex,"}",2,99) d  q:linex=""
 ..s xline=$p(xx,"{",1),text=$p(xx,"{",2)
 ..i '$$select^BVBCTSTC(text) s text=PLIST(3)
 ..s line=line_xline_text
 .f  q:$l(line)'>width  d
 ..f xx1=1:1 i $l($p(line," ",1,xx1))>width s l1=$p(line," ",1,xx1-1),line=$p(line," ",xx1,$l(line," ")) q
 ..i l1="" s l1=$e(line,1,width),line=$e(width+1,$l(line))
 ..s cnt=cnt+1,^TMP($zn,$j,"COMM",cnt)=l1
 .s cnt=cnt+1,^TMP($zn,$j,"COMM",cnt)=line
 s ind1=0,user="" f  s ind1=$o(^BB("RQ",PAR2,"PK",ind1)) q:ind1=""  d
 .s rowid=PAR2_"||"_ind1
 . d %0Co
 .i 'SQLCODE d
 ..s pack=$p(pack,$c(1)),exclude=$p(exclude,$c(1)),x1=$p(x1,$c(1)),x2=$p(x2,$c(1)) i $l(pack),exclude'="Y" d
 ... d %0Eo
 ...i 'SQLCODE,stat'="S" d
 ....d %0Fo
 ....s ^TMP($zn,$j,"PACK",ind1)=packid_"|"_prodname_"|"_$p(packbg," ",1,2)_" "_$e($p(packbg," ",3),1,3)
 .... ; save product comments
 ....i '$d(^TMP($zn,$j,"PROD",prod)) d
 .....s ind2=0 f  s ind2=$o(^CT("PR",prod,"REM",ind2)) q:ind2=""  s line=^(ind2) d
 ......i $l(line) s ^TMP($zn,$j,"PROD",prod,ind2)=line
 ; add product comments to request comments
 s prod="" f  s prod=$o(^TMP($zn,$j,"PROD",prod)) q:prod=""  d
 .s x="" f  s x=$o(^TMP($zn,$j,"PROD",prod,x)) q:x=""  d
 ..s cnt=cnt+1,^TMP($zn,$j,"COMM",cnt)=^(x) k ^TMP($zn,$j,"PROD",prod,x)
 ; print comments
 s commstart=$$COMM(0,1)
 d LN^PRTDR00() s cntline=cntline+1
 ; print pack details
 f i=1:1:17-cntline d LN^PRTDR00()
 f i="26:Bag","46:Commencement","59:Commenced","71:Reaction","83:Ceased" d ADD^PRTDR00($p(i,":"),$p(i,":",2))
 d LN^PRTDR00()
 f i="11:Product","25:Number","36:Group","46:Date & Time","59:Signature","72:Yes/No","84:Time" d ADD^PRTDR00($p(i,":"),$p(i,":",2))
 f i=1:1:2 d LN^PRTDR00()
 s ind="" f  s ind=$o(^TMP($zn,$j,"PACK",ind)) q:ind=""  s det=^(ind) d
 .d ADD^PRTDR00(9,$p(det,"|",2)),ADD^PRTDR00(24,$p(det,"|",1)),ADD^PRTDR00(34,$p(det,"|",3))
 .f i=1:1:2 d LN^PRTDR00()
 ; print remainder of comments
 i commstart d ADD^PRTDR00(,"#"),LN^PRTDR00() s commstart=$$COMM(commstart)
 ; create page for printing
 k PLIST m PLIST=^TMP("PRTDR00",$j,"RESULT") s PLIST=$o(PLIST(""),-1)
 k ^TMP("PRTDR00",$j)
 s page=1,^TMP("REPORT",$j,page,"TEST",vtsRID)=""
 f jLine=1:1:PLIST s x=$o(^TMP("REPORT",$j,page,"TEXT",""),-1)+1,^TMP("REPORT",$j,page,"TEXT",x)=PLIST(jLine)
 ; save Patient events
 d events^LVBCOM01(epis,"XMR","Report type "_PAR1_"  Request "_PAR2_"-"_$g(REPID))
 q
PRINT ; print report
 ; xPAR1 - U-User
 ;         C-Courier
 ; xPAR2 - User RowID/Courier
 ; get patient information
 k VISIT i '$$select^LVBEPVIS(epis) m VISIT=PLIST
 ; get doctor information
 s doc=$p(VISIT(15),$c(1)) k DOC i '$$select^LVBCTDR(doc,"Y") m DOC=PLIST
 s xPAR1="",xPAR2="SJGPA4"
 s page="" f  s page=$o(^TMP("REPORT",$j,page)) q:page=""  d
 . ; print page Header
 .s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1)
 .i $l(%routine) x "d Header^"_%routine_"("""_page_""","""_xPAR1_""","""_xPAR2_""")"
 . ; print report
 .f j=1:1 q:'$d(^TMP("REPORT",$j,page,"TEXT",j))  s xx=^(j) d
 ..i xx="#" d  q
 ...s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1)
 ...i $l(%routine) x "d Header^"_%routine_"("""_page_""","""_xPAR1_""","""_xPAR2_""")"
 ..d ADDLINE^PRTREP00(REPID,"PRT",xx)
 . ; print page Footer
 .s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1)
 .i $l(%routine) x "d Footer^"_%routine_"("""_page_""","""_xPAR1_""","""_xPAR2_""")"
 q
 ; check if antibody screen detected
abs(epis,PAR1) n (epis,PAR1) s abs=$$abs^LVBVIS3(epis),result=""
 s result=$s(abs="Detected":"Positive",1:"Negative")
 q result
 ; print comments
COMM(cnt,first) s cnt=$g(cnt),first=$g(first)
 f  s cnt=$o(^TMP($zn,$j,"COMM",cnt)) q:cnt=""  d  i cntline=13,first q
 .s line=^(cnt) d ADD^PRTDR00(tsLM,line),LN^PRTDR00() s cntline=cntline+1
 q cnt
 q
%0ABr1 s patbg=""
 i $l($g(%mmmsqld(6))) s patbg=$g(^TBBC($g(%mmmsqld(6)),"GP"))
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(epis,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$E(epis,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(7)=$p($g(%mmmsqld(4)),"||",1,1)
 s %mmmsqld(3)=$g(%mmmsqld(4))
 i %mmmsqld(7)'="",$d(^TEPI(%mmmsqld(7)))
 e  g %0ABdun
 s %mmmsqln=$g(^TEPI(%mmmsqld(7)))
 s %mmmsqld(6)=$p(%mmmsqln,"\",18)
 d %0ABr1
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0BAr1 s %val=$$ALPHAUP(%val)
 q  
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(5)=$P(patbg,$C(1))
 i %mmmsqld(5)="",$L(patbg)>1 s %val=$E(patbg,2,999) d %0BAr1 s %mmmsqld(5)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$g(%mmmsqld(5))
 i %mmmsqld(4)="" g %0BBdun
 s %mmmsqld(7)=""
%0BBk1 s %mmmsqld(7)=$o(^CT("BG",0,"Code",%mmmsqld(4),%mmmsqld(7)))
 i %mmmsqld(7)="" g %0BBdun
 i %mmmsqld(7)'=+%mmmsqld(7) g %0BBdun
 i %mmmsqld(7)'="",$d(^CT("BG",%mmmsqld(7)))
 i '$t
 e  i 1>%mmmsqld(7),%mmmsqld(7)=+%mmmsqld(7)
 i  g %0BBk1
 s %mmmsqln=$g(^CT("BG",%mmmsqld(7)))
 s bgdesc=$p(%mmmsqln,"^",4) s %mmmsqld(3)=$p(%mmmsqln,"^",1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Bc
 g %0BBk1
%0BBdun 
%0BAdun 
%0Bc q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%0CBs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q
%0CBs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(10)=$P(rowid,$C(1))
 s:%mmmsqld(10)="" %mmmsqld(10)=$E(rowid,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(14)=$p($g(%mmmsqld(10)),"||",1,1),$P(%mmmsqld(15),$C(1))=$p($g(%mmmsqld(10)),"||",2,2)
 s %mmmsqld(9)=$g(%mmmsqld(10))
 i %mmmsqld(14)'="",$P(%mmmsqld(15),$C(1))'="",$d(^BB("RQ",%mmmsqld(14),"PK",$P(%mmmsqld(15),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(15),$C(1)),$P(%mmmsqld(15),$C(1))=+$P(%mmmsqld(15),$C(1))
 i  g %0CBdun
 s %mmmsqln=$g(^BB("RQ",%mmmsqld(14),"PK",$P(%mmmsqld(15),$C(1))))
 s pack=$p(%mmmsqln,"^",1) s exclude=$p(%mmmsqln,"^",9) s x2=$p(%mmmsqln,"^",6) s %mmmsqld(12)=$p(%mmmsqln,"^",8)
 s %val=$P(x2,$C(1)) d %0CBs1:%val'="" s $P(x2,$C(1),2)=%val
 s %val=$P(exclude,$C(1)) d %0CBs2:%val'="" s $P(exclude,$C(1),2)=%val
 s %mmmsqld(16)=$p($g(%mmmsqld(12)),"||",1,1)
 s %mmmsqld(13)=$g(%mmmsqld(12))
 i %mmmsqld(16)'="",$d(^SSU("SSUSR",1,%mmmsqld(16)))
 e  s (%mmmsqld(13),x1)="" g %0CBp2
 s %mmmsqln=$g(^SSU("SSUSR",1,%mmmsqld(16)))
 s x1=$p(%mmmsqln,"^",2)
%0CBp2 
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Cc
%0CBdun 
%0CAdun 
%0Cc q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(10)=$P(pack,$C(1))
 s:%mmmsqld(10)="" %mmmsqld(10)=$E(pack,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(9)=$g(%mmmsqld(10))
 i %mmmsqld(9)'="",$d(^BB("PK",%mmmsqld(9)))
 i '$t
 e  i 1>%mmmsqld(9),%mmmsqld(9)=+%mmmsqld(9)
 i  g %0EBdun
 s %mmmsqln=$g(^BB("PK",%mmmsqld(9)))
 s packid=$p(%mmmsqln,"^",1) s prod=$p(%mmmsqln,"^",6) s %mmmsqld(12)=$p(%mmmsqln,"^",4) s %mmmsqld(14)=$p(%mmmsqln,"^",8)
 s %mmmsqld(13)=$g(%mmmsqld(12))
 i %mmmsqld(13)'="",$d(^CT("ST",%mmmsqld(13)))
 i '$t
 e  i 1>%mmmsqld(13),%mmmsqld(13)=+%mmmsqld(13)
 i  s (stat,%mmmsqld(13))="" g %0EBp2
 s %mmmsqln=$g(^CT("ST",%mmmsqld(13)))
 s stat=$p(%mmmsqln,"^",1)
%0EBp2 
 s %mmmsqld(15)=$g(%mmmsqld(14))
 i %mmmsqld(15)'="",$d(^CT("BG",%mmmsqld(15)))
 i '$t
 e  i 1>%mmmsqld(15),%mmmsqld(15)=+%mmmsqld(15)
 i  s (packbg,%mmmsqld(15))="" g %0EBp3
 s %mmmsqln=$g(^CT("BG",%mmmsqld(15)))
 s packbg=$p(%mmmsqln,"^",4)
%0EBp3 
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0FAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(prod,$C(1))
 i %mmmsqld(4)="",$L(prod)>1 s %val=$E(prod,2,999) d %0FAr1 s %mmmsqld(4)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$g(%mmmsqld(4))
 i %mmmsqld(3)'="",$d(^CT("PR",%mmmsqld(3)))
 i '$t
 e  i 1>%mmmsqld(3),%mmmsqld(3)=+%mmmsqld(3)
 i  g %0FBdun
 s %mmmsqln=$g(^CT("PR",%mmmsqld(3)))
 s prodname=$p(%mmmsqln,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
]]></Routine>
</Export>
