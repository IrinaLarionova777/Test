<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBMILLG" type="INT" languagemode="0" generated="1"><![CDATA[
LVBMILLG ; IG 5/5/98 ; LVB Control data access for MILLG MIF_MachineLoadListTGroup
 ;
 ; supported calls:
 ;
 ; $$insert^LVBMILLG(par)
 ; $$update^LVBMILLG(ROWID)
 ; $$delete^LVBMILLG(ROWID)
 ; $$select^LVBMILLG(ROWID)
 ; $$open^LVBMILLG(par)
 ; $$fetch^LVBMILLG(par)
 ; $$close^LVBMILLG()
 ;
 ;
  ;---&sql(DECLARE MILLG CURSOR FOR SELECT * FROM MIF_MachineLoadListTGroup
   ;---         WHERE MILLG_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par) ;
 s par=$g(par)
  ;---&SQL(OPEN MILLG)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MILLG0o
 q 0
 ;
fetch(par) 
 k PLIST 
 s par=$g(par)
  ;---&SQL(FETCH MILLG INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE MILLG)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MILLG0c
 q 0
 ;
select(RowID) s RowID=$g(RowID) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM MIF_MachineLoadListTGroup WHERE MILLG_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO MIF_MachineLoadListTGroup VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE MIF_MachineLoadListTGroup VALUES :PLIST() WHERE MILLG_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID) 
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM MIF_MachineLoadListTGroup WHERE MILLG_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
%MILLG0o s $zt="%MILLG0E" s SQLCODE=$s($g(%MILLG0c):-101,1:0) q:SQLCODE'=0  s %MILLG0d(8)=0 s %MILLG0d(9)=0,%MILLG0d(10)=""
 s %MILLG0d(4)=$g(par)
 s %MILLG0c=1 q
%MILLG0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %MILLG0c,%MILLG0d,%MILLG0E,%MILLG0l,%MILLG0n,%MILLG0R,%MILLG0Z q
%0Afirst 
 ; asl MOD# 2
 s %MILLG0d(1)=%MILLG0d(4)
 s %MILLG0d(6)=$p(%MILLG0d(1),"||"),%MILLG0d(7)=$p(%MILLG0d(1),"||",2)
 i %MILLG0d(6)="" g %0ABdun
 i %MILLG0d(7)="" g %0ABdun
 s %MILLG0d(3)=""
%0ABk1 s %MILLG0d(3)=$o(^TMIF(%MILLG0d(6),"LL",%MILLG0d(7),"TG",%MILLG0d(3)))
 i %MILLG0d(3)="" g %0ABdun
 s %MILLG0d(2)=(%MILLG0d(6))_"||"_(%MILLG0d(7))_"||"_(%MILLG0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TMIF($p(%MILLG0d(2),"||",1),"LL",$p(%MILLG0d(2),"||",2),"TG",$p(%MILLG0d(2),"||",3))#"S":$zu(115,4) i $t { s %MILLG0d(9)=1,%MILLG0d(10)=$name(^TMIF($p(%MILLG0d(2),"||",1),"LL",$p(%MILLG0d(2),"||",2),"TG",$p(%MILLG0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineLoadListTGroup for RowID value: "_%MILLG0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %MILLG0d(6)=$p(%MILLG0d(2),"||"),%MILLG0d(7)=$p(%MILLG0d(2),"||",2),%MILLG0d(3)=$p(%MILLG0d(2),"||",3)
 i %MILLG0d(6)'="",%MILLG0d(7)'="",%MILLG0d(3)'="",$d(^TMIF(%MILLG0d(6),"LL",%MILLG0d(7),"TG",%MILLG0d(3)))
 e  g %0ACdun
 s %MILLG0d(1)=$p(%MILLG0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %MILLG0d(8)=%MILLG0d(8)+1,%ROWCOUNT=%MILLG0d(8),%ROWID=%MILLG0d(2),%MILLG0c=10 q
%MILLG0f i '$g(%MILLG0c) { s SQLCODE=-102 q  } i %MILLG0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%MILLG0d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%MILLG0d(8),%MILLG0c=100 q  } g %0Afirst:%MILLG0c=1
%0ACdun i $zu(115,2)=1,$g(%MILLG0d(9))=1 { l -@%MILLG0d(10) s %MILLG0d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%MILLG0d(8),SQLCODE=100,%MILLG0c=100 q
%MILLG0c i '$g(%MILLG0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%MILLG0d(8)),1:0)
 i $zu(115,2)=1,$g(%MILLG0d(9))=1 { l -@%MILLG0d(10) } k %MILLG0c,%MILLG0d,%MILLG0E,%MILLG0l,%MILLG0n,%MILLG0R,%MILLG0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %MILLG0c=100 q
%0Do d %MILLG0f q:SQLCODE'=0
 s PLIST(0)=%MILLG0d(1),PLIST(1)=%MILLG0d(2),PLIST(2)=%MILLG0d(3)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(5)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(5)
 s %mmmsqld(7)=$p(PLIST(1),"||"),%mmmsqld(8)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(7),"LL",%mmmsqld(8),"TG",PLIST(2)))
 e  g %0FBdun
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TMIF($p(PLIST(1),"||",1),"LL",$p(PLIST(1),"||",2),"TG",$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TMIF($p(PLIST(1),"||",1),"LL",$p(PLIST(1),"||",2),"TG",$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineLoadListTGroup for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(7)=$p(PLIST(1),"||"),%mmmsqld(8)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(7),"LL",%mmmsqld(8),"TG",PLIST(2)))
 e  g %0FCdun
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:2 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.MIFMachineLoadListTGroup.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TMIF(%mmmsqld(4),"LL",%mmmsqld(5),"TG",%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TMIF(%mmmsqld(4),"LL",%mmmsqld(5),"TG",%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:2 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.MIFMachineLoadListTGroup.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(3),"LL",%mmmsqld(4),"TG",%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TMIF(%mmmsqld(3),"LL",%mmmsqld(4),"TG",%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.MIFMachineLoadListTGroup.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.MIFMachineLoadListTGroup.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
