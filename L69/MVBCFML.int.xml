<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBCFML" type="INT" languagemode="0" generated="1"><![CDATA[
MVBCFML ; IG 8/5/98 ; MVB Control data access for CF_Medtrak_Labtrak
 ;
 ; supported calls:
 ;
 ; $$select^MVBCFML(RowID)
 ; $$update^MVBCFML(RowID)
 ; $$insert^MVBCFML(RowID)
 ; $$save^MVBCFML(RowID)
 ;
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=18 s result=$p($g(^CF("ML",ROWID)),"^",3) q
 .i '$$select(ROWID) s result=$g(PLIST(data))
 q result
select(ROWID) k PLIST S ROWID=$G(ROWID)
  ;---&sql( SELECT * INTO :PLIST() FROM CF_Medtrak_Labtrak WHERE CFML_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Ao
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 q SQLCODE
save(ROWID) s ROWID=$g(ROWID) k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST
 i $$select(ROWID) k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j) q $$insert()
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j) q $$update(ROWID)
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CF_Medtrak_LabTrak VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(ROWID) d pre("Y") S ROWID=$G(ROWID)
  ;---&SQL(UPDATE CF_Medtrak_Labtrak VALUES :PLIST() WHERE CFML_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDR(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("DR",PLIST(26),PLIST(4),PLIST(3),PLIST(49),PLIST(50),PLIST(51))
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 I $G(PLIST(16))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTR(plist(16),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(16)=X K plist
 I $G(PLIST(18))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTR(plist(18),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(18)=X K plist
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(23)=0,%mmmsqld(24)=""
 s %mmmsqld(21)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(21)
 i PLIST(1)'="",$d(^CF("ML",PLIST(1)))
 e  g %0ABdun
 s %mmmsqld(29)=$g(^CF("ML",PLIST(1)))
 s PLIST(15)=$p(%mmmsqld(29),"^",1) s PLIST(16)=$p(%mmmsqld(29),"^",2) s PLIST(18)=$p(%mmmsqld(29),"^",3) s PLIST(19)=$p(%mmmsqld(29),"^",4)
 s %mmmsqld(29)=$g(^CF("ML",PLIST(1),"DOC"))
 s PLIST(2)=$p(%mmmsqld(29),"^",1) s PLIST(9)=$p(%mmmsqld(29),"^",3) s PLIST(10)=$p(%mmmsqld(29),"^",2) s PLIST(11)=$p(%mmmsqld(29),"^",4) s PLIST(12)=$p(%mmmsqld(29),"^",6) s PLIST(13)=$p(%mmmsqld(29),"^",5) s PLIST(14)=$p(%mmmsqld(29),"^",7)
 s %mmmsqld(29)=$g(^CF("ML",PLIST(1),"PAT"))
 s PLIST(3)=$p(%mmmsqld(29),"^",3) s PLIST(4)=$p(%mmmsqld(29),"^",2) s PLIST(5)=$p(%mmmsqld(29),"^",4) s PLIST(6)=$p(%mmmsqld(29),"^",5) s PLIST(7)=$p(%mmmsqld(29),"^",6) s PLIST(8)=$p(%mmmsqld(29),"^",1) s PLIST(17)=$p(%mmmsqld(29),"^",7)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^CF("ML",$p(PLIST(1),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(23)=1,%mmmsqld(24)=$name(^CF("ML",$p(PLIST(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CF_Medtrak_Labtrak for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(1)'="",$d(^CF("ML",PLIST(1)))
 e  g %0ACdun
 s %mmmsqld(34)=$g(^CF("ML",PLIST(1)))
 s PLIST(15)=$p(%mmmsqld(34),"^",1) s PLIST(16)=$p(%mmmsqld(34),"^",2) s PLIST(18)=$p(%mmmsqld(34),"^",3) s PLIST(19)=$p(%mmmsqld(34),"^",4)
 s %mmmsqld(34)=$g(^CF("ML",PLIST(1),"DOC"))
 s PLIST(2)=$p(%mmmsqld(34),"^",1) s PLIST(9)=$p(%mmmsqld(34),"^",3) s PLIST(10)=$p(%mmmsqld(34),"^",2) s PLIST(11)=$p(%mmmsqld(34),"^",4) s PLIST(12)=$p(%mmmsqld(34),"^",6) s PLIST(13)=$p(%mmmsqld(34),"^",5) s PLIST(14)=$p(%mmmsqld(34),"^",7)
 s %mmmsqld(34)=$g(^CF("ML",PLIST(1),"PAT"))
 s PLIST(3)=$p(%mmmsqld(34),"^",3) s PLIST(4)=$p(%mmmsqld(34),"^",2) s PLIST(5)=$p(%mmmsqld(34),"^",4) s PLIST(6)=$p(%mmmsqld(34),"^",5) s PLIST(7)=$p(%mmmsqld(34),"^",6) s PLIST(8)=$p(%mmmsqld(34),"^",1) s PLIST(17)=$p(%mmmsqld(34),"^",7)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(23))=1 { l -@%mmmsqld(24) s %mmmsqld(23)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(23))=1 { l -@%mmmsqld(24) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %i,icol,ir
 f icol=0:1:19 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CFMedtrakLabtrak.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^CF("ML",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CFMedtrakLabtrak.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^CF("ML",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:19 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CFMedtrakLabtrak.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CFMedtrakLabtrak.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CFMedtrakLabtrak.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CFMedtrakLabtrak.T1(%mmmsqld(2)) g %0Ec
]]></Routine>
</Export>
