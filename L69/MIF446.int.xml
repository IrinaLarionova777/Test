<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIF446" type="INT" languagemode="0" generated="1"><![CDATA[
MIF446(mi) ; IG 4/6/98 ; ASTM protocol  -  Primus PDQ
 s mi=$g(mi) i '$l(mi) q
 k ^TMIF(mi,10) s $zt="err^MIF000"
 i $$select^LVBMIMP(mi) q
 f j=1:1:PLIST s @("par"_j)=PLIST(j)
 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4),lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=""
 i $$start^MIF000() q
 f  d Main i $$stop^MIF000() q
 c par4
 q
Main r *R:10 e  d  q
 i $c(R)=enq d
 .d trace^MIF000(mi,"ENQ","H<--M")
 .d ACK
 .s stop=0 f  r *R:10 q:'$t  d  q:stop
 ..i $c(R)=eot d trace^MIF000(mi,"EOT","H<--M") s stop=1 q
 ..i $c(R)'=stx q
 ..s record=$$read^MIF000("",lf) q:'$l(record)
 ..s record=$e(record,1,$l(record)-1)
 ..d trace^MIF000(mi,$tr(record,$c(13,3)," "),"H<--M")
 .. ; check record validity
 ..s chsum=$p(record,etx,2),chrecord=$p(record,etx,1)_etx
 ..i $$CHSUM(chrecord)'=chsum d NAK q
 ..d ACK
 .. ; header record
 ..i $e(record,2)="H" d Last q
 .. ; patient record
 ..i $e(record,2)="P" d Last q
 .. ; order record
 ..i $e(record,2)="O" s epis=$tr($p(record,"|",4)," "),QC=$$findQC^MIF000(mi,epis) q
 .. ; result record
 ..i $e(record,2)="R" d  q
 ...s x1=$tr($p($p(record,"|",3),"^",4)," "),x2=$tr($p(record,"|",4)," ")
 ...i $l(x1),$l(x2) s result=result_x1_$c(par10)_x2_$c(par11)
 ... ; date and time
 ...i $l($tr($p(record,"|",13)," ")) d
 ....s date=$e($tr($p(record,"|",13)," "),1,8)
 ....s date=$e(date,5,6)_"/"_$e(date,7,8)_"/"_$e(date,1,4)
 ....s date=$$intdate^SSUTIL4(date)
 ....s time=($e($p(record,"|",13),9,10)*3600)+($e($p(record,"|",13),11,12)*60)
 .. ; last record
 ..i $e(record,2)="L" d Last q
 q
Last ; file result if exist
 i $l(epis),$l(result) d file^MIF000(mi,sample,epis,surname,result,date,time,QC)
 s (sample,epis,surname,result,date,time,QC)=""
 q
CHSUM(x) ; calculate check sum
 n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y)
 s z=$e("0123456789ABCDEF",z#256\16+1)_$e("0123456789ABCDEF",z#16+1)
 q z
ACK ; send 'ack' to instrument
 w ack,*-3 d trace^MIF000(mi,"ACK","H-->M")
 q
NAK ; send 'nak' to instrument
 w nak,*-3 d trace^MIF000(mi,"NAK - Incorrect Checksum","H-->M")
 q
]]></Routine>
</Export>
