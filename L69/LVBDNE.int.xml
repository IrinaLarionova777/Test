<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBDNE" type="INT" languagemode="0" generated="1"><![CDATA[
LVBDNE ; IG 30/4/98 ;MVB Control code access for DN_DonorEpisode
 ;
 ; supported calls:
 ;
 ; $$open^LVBDNE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBDNE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBDNE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBDNE(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBDNE()
 ; $$insert^LVBDNE(par)
 ; $$getall^LVBDNE(par)
 ; $$delete^LVBDNE(RowID)
 ;
  ;---&SQL(DECLARE DNE CURSOR FOR SELECT * FROM DN_DonorEpisode
   ;---         WHERE DNE_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ; delete all data
delete(RowID) s RowID=$g(RowID)
  ;---&SQL(delete FROM DN_DonorEpisode WHERE DNE_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Co
 q SQLCODE
 ; insert the data
insert(par) s par=$g(par) d pre("N") k PLIST(1) s PLIST(0)=par
  ;---&SQL(insert INTO DN_DonorEpisode VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN DNE)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DNE0o
 q 0
 ; fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k PLIST
  ;---&SQL(FETCH DNE INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE DNE)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DNE0c
 q 0
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 n j,J f J=1:1:PLIST i $d(PLIST(J)) S PLIST(J)=$p(PLIST(J),$c(1),1)
 q
getall(par) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 q
%DNE0o s $zt="%DNE0E" s SQLCODE=$s($g(%DNE0c):-101,1:0) q:SQLCODE'=0  s %DNE0d(7)=0 s %DNE0d(8)=0,%DNE0d(9)=""
 s %DNE0d(4)=$g(par)
 s %DNE0c=1 q
%DNE0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %DNE0c,%DNE0d,%DNE0E,%DNE0l,%DNE0n,%DNE0R,%DNE0Z q
%0Afirst 
 ; asl MOD# 2
 s %DNE0d(1)=%DNE0d(4)
 i %DNE0d(1)="" g %0ABdun
 s %DNE0d(3)=""
%0ABk1 s %DNE0d(3)=$o(^TTDN(%DNE0d(1),"Episode",%DNE0d(3)))
 i %DNE0d(3)="" g %0ABdun
 s %DNE0d(2)=(%DNE0d(1))_"||"_(%DNE0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTDN($p(%DNE0d(2),"||",1),"Episode",$p(%DNE0d(2),"||",2))#"S":$zu(115,4) i $t { s %DNE0d(8)=1,%DNE0d(9)=$name(^TTDN($p(%DNE0d(2),"||",1),"Episode",$p(%DNE0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DN_DonorEpisode for RowID value: "_%DNE0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %DNE0d(6)=$p(%DNE0d(2),"||"),%DNE0d(3)=$p(%DNE0d(2),"||",2)
 i %DNE0d(6)'="",%DNE0d(3)'="",$d(^TTDN(%DNE0d(6),"Episode",%DNE0d(3)))
 e  g %0ACdun
 s %DNE0d(1)=$p(%DNE0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %DNE0d(7)=%DNE0d(7)+1,%ROWCOUNT=%DNE0d(7),%ROWID=%DNE0d(2),%DNE0c=10 q
%DNE0f i '$g(%DNE0c) { s SQLCODE=-102 q  } i %DNE0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%DNE0d(7))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%DNE0d(7),%DNE0c=100 q  } g %0Afirst:%DNE0c=1
%0ACdun i $zu(115,2)=1,$g(%DNE0d(8))=1 { l -@%DNE0d(9) s %DNE0d(8)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%DNE0d(7),SQLCODE=100,%DNE0c=100 q
%DNE0c i '$g(%DNE0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%DNE0d(7)),1:0)
 i $zu(115,2)=1,$g(%DNE0d(8))=1 { l -@%DNE0d(9) } k %DNE0c,%DNE0d,%DNE0E,%DNE0l,%DNE0n,%DNE0R,%DNE0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %DNE0c=100 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTDN(%mmmsqld(3),"Episode",%mmmsqld(4)))
 e  g %0CBdun
 s %mmmsqld(12)=$$%getlock^User.DNDonorEpisode.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTDN(%mmmsqld(3),"Episode",%mmmsqld(4)))
 e  g %0CCdun
 d %delete^User.DNDonorEpisode.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.DNDonorEpisode.T1(%mmmsqld(1)) g %0Cc
%0CCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.DNDonorEpisode.T1(%mmmsqld(1)) g:SQLCODE<0 %0Cc
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.DNDonorEpisode.T1(%mmmsqld(1)) g %0Cc
%0Eo n %i,icol,ir
 f icol=0:1:2 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DNDonorEpisode.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Ho d %DNE0f q:SQLCODE'=0
 s PLIST(0)=%DNE0d(1),PLIST(1)=%DNE0d(2),PLIST(2)=%DNE0d(3)
 q
]]></Routine>
</Export>
