<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt4651" type="INT" languagemode="0"><![CDATA[
mt4651  ; Compiled October 15, 2007 11:24:20 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt4651(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0C^mt4651
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt4651(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(2))'="" d
 . s %data(1)=$g(%data(2))
 . d insertnw^mt4651(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt4651 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0A^mt4651
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:11 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt4651(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:11 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt4651(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt4651 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt4651
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TTAB("BB-GEN",%ROWID):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TTAB("BB-GEN",%ROWID)
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TTAB("BB-GEN",%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",1)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",2)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",3)=$p($g(%data(5)),$c(1))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",4)=$p($g(%data(6)),$c(1))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",5)=$g(%data(7))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",6)=$g(%data(8))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",7)=$g(%data(9))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",8)=$g(%data(10))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TTAB("BB-GEN",%data(2))) s $p(tempn,"\",9)=$p($g(%data(11)),$c(1))
 s:$d(tempn)#2 ^TTAB("BB-GEN",%data(2))=tempn
maps q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(465)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(465)
 q
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(465)
 q
%0DBs1 n v s v=%val  ;  Code for update (get old values) of table: CTBB_Genotype
 s %val=$p("Anti-c|Anti-C|Anti-E|Anti-e|Anti-D|Anti-Cw|Anti-V|Anti-K|Anti-k|Anti-Kpa|Anti-Kpb|Anti-Jsa|Anti-Fya||~","|",$l($p("|1|2|3|4|5|6|7|8|9|10|11|12|13|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Fyb|Anti-Jka|Anti-Jkb|Anti-Lua|Anti-Lub|Anti-M|Anti-N|Anti-S|Anti-s|Anti-U|Anti-Lea|Anti-Leb||~","|",$l($p("|14|15|16|17|18|19|20|21|22|23|24|25|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Lebh|Anti-LebL|Anti-P1|Anti-P|Anti-PP1pk(Tja)|Anti-Xga|Anti-Coa|Anti-Cob|Anti-Doa|Anti-Dob|Anti-Dia||~","|",$l($p("|26|27|28|29|30|31|32|33|34|35|36|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Dib|Anti-Wra|Anti-Vel|Anti-Sda|Anti-Bga|Anti-Bgb|Anti-Bgc|Anti-Yta|Anti-Ytb|Anti-Cha|Anti-Kna||~","|",$l($p("|37|38|39|40|41|42|43|44|45|46|47|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-McCa|Anti-Yka|Anti-Csa|Anti-Gya|Anti-Hy|Anti-JMH|Anti-I|Anti-i|Anti-A1|Anti-Chido|Anti-H||~","|",$l($p("|48|49|50|51|52|53|54|55|56|57|58|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Jsb|Anti-Rg(Rogers)|Cold antibody|Auto antibody|Anti f|No apparant specificity|Anti-AnWj|Anti-LW|Anti-SARA (SARAH)||~","|",$l($p("|59|60|61|62|63|64|65|66|67|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-HI|Anti-HLA|Anti-HTLA|Anti-McC|Anti-Passive D|Anti-Sda|Anti-G|Anti-Platelet","|",$l($p("|68|69|70|71|72|73|74|75|","|"_v_"|"),"|")) q
%0DBs2 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0DBs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %dataold(2)=$p($g(%dataold(1)),"||",1,1)
 i %dataold(2)'="",$d(^TTAB("BB-GEN",%dataold(2)))
 e  g %0DBdun
 s %mmmsqln=$g(^TTAB("BB-GEN",%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(6)=$p(%mmmsqln,"\",4) s:%dataold(6)'="" %dataold(6)=+%dataold(6) s %dataold(7)=$p(%mmmsqln,"\",5) s %dataold(8)=$p(%mmmsqln,"\",6) s %dataold(9)=$p(%mmmsqln,"\",7) s %dataold(10)=$p(%mmmsqln,"\",8)
 s %dataold(11)=$p(%mmmsqln,"\",9)
 
 s %val=$P(%dataold(5),$C(1)) d %0DBs1:%val'="" s $P(%dataold(5),$C(1),2)=%val
 s %val=$P(%dataold(6),$C(1)) d %0DBs2:%val'="" s $P(%dataold(6),$C(1),2)=%val
 s %val=$P(%dataold(11),$C(1)) d %0DBs3:%val'="" s $P(%dataold(11),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
getold(%dataold) g %0Do
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CTBB_Genotype"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="CTBB_Genotype Row ID" d %mdiag(%oper,-106,"Fld Int","Req","BBG_RowID","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field BBG_Code
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field BBG_Code
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CTBB_Genotype
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt4651 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt4651
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde11 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde5 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="4375",irn=465,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,465,2,4375,36,"get",%val))
 n found,v s found=0,v=%val
 i 'found,$f("|Anti-c|Anti-C|Anti-E|Anti-e|Anti-D|Anti-Cw|Anti-V|Anti-K|Anti-k|Anti-Kpa|Anti-Kpb|Anti-Jsa|Anti-Fya|","|"_%val_"|") s found=1
 i 'found,$f("|Anti-Fyb|Anti-Jka|Anti-Jkb|Anti-Lua|Anti-Lub|Anti-M|Anti-N|Anti-S|Anti-s|Anti-U|Anti-Lea|Anti-Leb|","|"_%val_"|") s found=1
 i 'found,$f("|Anti-Lebh|Anti-LebL|Anti-P1|Anti-P|Anti-PP1pk(Tja)|Anti-Xga|Anti-Coa|Anti-Cob|Anti-Doa|Anti-Dob|Anti-Dia|","|"_%val_"|") s found=1
 i 'found,$f("|Anti-Dib|Anti-Wra|Anti-Vel|Anti-Sda|Anti-Bga|Anti-Bgb|Anti-Bgc|Anti-Yta|Anti-Ytb|Anti-Cha|Anti-Kna|","|"_%val_"|") s found=1
 i 'found,$f("|Anti-McCa|Anti-Yka|Anti-Csa|Anti-Gya|Anti-Hy|Anti-JMH|Anti-I|Anti-i|Anti-A1|Anti-Chido|Anti-H|","|"_%val_"|") s found=1
 i 'found,$f("|Anti-Jsb|Anti-Rg(Rogers)|Cold antibody|Auto antibody|Anti f|No apparant specificity|Anti-AnWj|Anti-LW|Anti-SARA (SARAH)|","|"_%val_"|") s found=1
 i 'found,$f("|Anti-HI|Anti-HLA|Anti-HTLA|Anti-McC|Anti-Passive D|Anti-Sda|Anti-G|Anti-Platelet|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("1|2|3|4|5|6|7|8|9|10|11|12|13||~","|",$l($p("|Anti-c|Anti-C|Anti-E|Anti-e|Anti-D|Anti-Cw|Anti-V|Anti-K|Anti-k|Anti-Kpa|Anti-Kpb|Anti-Jsa|Anti-Fya|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("14|15|16|17|18|19|20|21|22|23|24|25||~","|",$l($p("|Anti-Fyb|Anti-Jka|Anti-Jkb|Anti-Lua|Anti-Lub|Anti-M|Anti-N|Anti-S|Anti-s|Anti-U|Anti-Lea|Anti-Leb|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("26|27|28|29|30|31|32|33|34|35|36||~","|",$l($p("|Anti-Lebh|Anti-LebL|Anti-P1|Anti-P|Anti-PP1pk(Tja)|Anti-Xga|Anti-Coa|Anti-Cob|Anti-Doa|Anti-Dob|Anti-Dia|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("37|38|39|40|41|42|43|44|45|46|47||~","|",$l($p("|Anti-Dib|Anti-Wra|Anti-Vel|Anti-Sda|Anti-Bga|Anti-Bgb|Anti-Bgc|Anti-Yta|Anti-Ytb|Anti-Cha|Anti-Kna|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("48|49|50|51|52|53|54|55|56|57|58||~","|",$l($p("|Anti-McCa|Anti-Yka|Anti-Csa|Anti-Gya|Anti-Hy|Anti-JMH|Anti-I|Anti-i|Anti-A1|Anti-Chido|Anti-H|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("59|60|61|62|63|64|65|66|67||~","|",$l($p("|Anti-Jsb|Anti-Rg(Rogers)|Cold antibody|Auto antibody|Anti f|No apparant specificity|Anti-AnWj|Anti-LW|Anti-SARA (SARAH)|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("68|69|70|71|72|73|74|75","|",$l($p("|Anti-HI|Anti-HLA|Anti-HTLA|Anti-McC|Anti-Passive D|Anti-Sda|Anti-G|Anti-Platelet|","|"_v_"|"),"|"))
 q
fde6 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=5 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BBG_Type","",$g(%msg))
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=6 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BBG_DisplaySequence","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) s %data(8)=%val
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=11 d etiok
 . s %msg="" d fde11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BBG_ClinicallySignificant","",$g(%msg))
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv11 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv5 ; DO validation and additional validation code
 i %val="|~~|NULL|~~|" s %ok=0 q
 q
fdv6 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Fo q SQLCODE=100
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(5)'="",$d(^TTAB("BB-GEN",%mmmsqld(5)))
 e  g %0FBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="BBG_RowID"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","BBG_RowID","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BBG_RowID","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BBG_Type","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BBG_DisplaySequence","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BBG_ClinicallySignificant","",$g(%msg))
 q
fdi11 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi5 n v s v=%val
 s %val=$p("Anti-c|Anti-C|Anti-E|Anti-e|Anti-D|Anti-Cw|Anti-V|Anti-K|Anti-k|Anti-Kpa|Anti-Kpb|Anti-Jsa|Anti-Fya||~","|",$l($p("|1|2|3|4|5|6|7|8|9|10|11|12|13|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Fyb|Anti-Jka|Anti-Jkb|Anti-Lua|Anti-Lub|Anti-M|Anti-N|Anti-S|Anti-s|Anti-U|Anti-Lea|Anti-Leb||~","|",$l($p("|14|15|16|17|18|19|20|21|22|23|24|25|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Lebh|Anti-LebL|Anti-P1|Anti-P|Anti-PP1pk(Tja)|Anti-Xga|Anti-Coa|Anti-Cob|Anti-Doa|Anti-Dob|Anti-Dia||~","|",$l($p("|26|27|28|29|30|31|32|33|34|35|36|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Dib|Anti-Wra|Anti-Vel|Anti-Sda|Anti-Bga|Anti-Bgb|Anti-Bgc|Anti-Yta|Anti-Ytb|Anti-Cha|Anti-Kna||~","|",$l($p("|37|38|39|40|41|42|43|44|45|46|47|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-McCa|Anti-Yka|Anti-Csa|Anti-Gya|Anti-Hy|Anti-JMH|Anti-I|Anti-i|Anti-A1|Anti-Chido|Anti-H||~","|",$l($p("|48|49|50|51|52|53|54|55|56|57|58|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-Jsb|Anti-Rg(Rogers)|Cold antibody|Auto antibody|Anti f|No apparant specificity|Anti-AnWj|Anti-LW|Anti-SARA (SARAH)||~","|",$l($p("|59|60|61|62|63|64|65|66|67|","|"_v_"|"),"|")) q:%val'="~"
 s %val=$p("Anti-HI|Anti-HLA|Anti-HTLA|Anti-McC|Anti-Passive D|Anti-Sda|Anti-G|Anti-Platelet","|",$l($p("|68|69|70|71|72|73|74|75|","|"_v_"|"),"|"))
 q
fdi6 s %val=$s(%val'=+%val:"",1:$fn(%val,""))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),%data(4)[$c(1) s %data(4)=$s($p(%data(4),$c(1))'="":$p(%data(4),$c(1)),1:$p(%data(4),$c(1),2))
 i $d(%data(5)),$p(%data(5),$c(1))'="" s %val=$p(%data(5),$c(1)) d fdi5 s $p(%data(5),$c(1),2)=%val
 i $d(%data(6)),$p(%data(6),$c(1))'="" s %val=$p(%data(6),$c(1)) d fdi6 s $p(%data(6),$c(1),2)=%val
 i $d(%data(7)),%data(7)[$c(1) s %data(7)=$s($p(%data(7),$c(1))'="":$p(%data(7),$c(1)),1:$p(%data(7),$c(1),2))
 i $d(%data(8)),%data(8)[$c(1) s %data(8)=$s($p(%data(8),$c(1))'="":$p(%data(8),$c(1)),1:$p(%data(8),$c(1),2))
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),%data(10)[$c(1) s %data(10)=$s($p(%data(10),$c(1))'="":$p(%data(10),$c(1)),1:$p(%data(10),$c(1),2))
 i $d(%data(11)),$p(%data(11),$c(1))'="" s %val=$p(%data(11),$c(1)) d fdi11 s $p(%data(11),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt4651 q:'%ok
 q
 g ^mt4652
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
