<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt2281" type="INT" languagemode="0"><![CDATA[
mt2281  ; Compiled December 23, 1999 10:04:05 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt2281(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0A^mt2281
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt2281(+%check=1) i '%ok s SQLCODE=-104 q
winsert s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt2281 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:17 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt2281(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:17 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt2282(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt2281 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^BB("RQ",$p(%ROWID,$c(1))):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^BB("RQ",$p(%ROWID,$c(1)))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^BB("RQ",$p(%edit(1),$c(1),1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(2)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",1)=$g(%data(2))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",2)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",3)=$p($g(%data(4)),$c(1))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",4)=$p($g(%data(5)),$c(1))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",5)=$p($g(%data(6)),$c(1))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",6)=$g(%data(7))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",7)=$g(%data(8))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",8)=$g(%data(9))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",9)=$g(%data(10))
 i $d(%edit(11)) s x=$g(%data(11)),^BB("RQ",$p(%data(1),$c(1),1),"REM",0)=x d  
 . s irep=%edit(11) s:irep<x irep=x f irep=1:1:irep s:irep'>x ^(irep)=$g(%data(11,irep)) k:irep>x ^(irep)
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",10)=$p($g(%data(12)),$c(1))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",11)=$g(%data(13))
 i $d(%edit(14)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",12)=$p($g(%data(14)),$c(1))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",13)=$p($g(%data(15)),$c(1))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",14)=$p($g(%data(16)),$c(1))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^BB("RQ",$p(%data(1),$c(1),1))) s $p(tempn,"^",15)=$p($g(%data(17)),$c(1))
 s:$d(tempn)#2 ^BB("RQ",$p(%data(1),$c(1),1))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(5)):$p(%edit(5),$c(1),1),1:$p($g(%data(5)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^BB("RQ",0,"Date",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("RQ",0,"Date",sn(1),sn(2)) k ^BB("RQ",0,"Date",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$p($g(%data(5)),$c(1),1) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map1dun
 s ^BB("RQ",0,"Date",sn(1),sn(2))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^BB("RQ",0,"Lab",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("RQ",0,"Lab",sn(1),sn(2)) k ^BB("RQ",0,"Lab",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(2)) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map2dun
 s ^BB("RQ",0,"Lab",sn(1),sn(2))=tempn
map2dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^BB("RQ",0,"Pat",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("RQ",0,"Pat",sn(1),sn(2)) k ^BB("RQ",0,"Pat",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(3)) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map3dun
 s ^BB("RQ",0,"Pat",sn(1),sn(2))=tempn
map3dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(10)):$p(%edit(10),$c(1),1),1:$p($g(%data(10)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^BB("RQ",0,"Stat",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("RQ",0,"Stat",sn(1),sn(2)) k ^BB("RQ",0,"Stat",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$p($g(%data(10)),$c(1),1) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map4dun
 s ^BB("RQ",0,"Stat",sn(1),sn(2))=tempn
map4dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(7)):%edit(7),1:$g(%data(7))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^BB("RQ",0,"TS",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("RQ",0,"TS",sn(1),sn(2)) k ^BB("RQ",0,"TS",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(7)) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map5dun
 s ^BB("RQ",0,"TS",sn(1),sn(2))=tempn
map5dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(9)):%edit(9),1:$g(%data(9))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^BB("RQ",0,"VisTS",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^BB("RQ",0,"VisTS",sn(1),sn(2)) k ^BB("RQ",0,"VisTS",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$g(%data(9)) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map6dun
 s ^BB("RQ",0,"VisTS",sn(1),sn(2))=tempn
map6dun q
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(%data(1),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0BBdun
 s %mmmsqld(4)=""
%0BBk1 s %mmmsqld(4)=$o(^BB("RQ",%mmmsqld(1),"PK",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0BBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0BBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0BBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2291(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0BBk1
%0BBdun 
%0BAdun 
 q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(%data(1),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0CBdun
 s %mmmsqld(4)=""
%0CBk1 s %mmmsqld(4)=$o(^BB("RQ",%mmmsqld(1),"RES",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0CBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0CBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0CBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2311(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0CBk1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
  d %0Bo^mt2281  s %didit=1
  d %0Co^mt2281  s %didit=1
trgdoneA q  ;  trigger done
%0DAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num  ;  Code for update (get old values) of table: BB_Request
 q  
%0DBr10 s $P(%dataold(6),$C(1))=$$CT006^at228($g(%dataold(9))) q
%0DBr11 s %dataold(7)=$p($g(%dataold(9)),"||",2) q
%0DBr12 s %dataold(8)=$$CT008^at228($g(%dataold(9))) q
%0DBr7 s %dataold(2)=$p($g(%dataold(9)),"||",1) q
%0DBr8 s %dataold(3)=$$CT003^at228($g(%dataold(2))) q
%0DBr9 s $P(%dataold(4),$C(1))=$$CT004^at228($g(%dataold(9)))
 s:$c(1)'[$P($g(%dataold(4)),$C(1)) $P(%dataold(4),$C(1))=+$j($P($g(%dataold(4)),$C(1)),"",$l($p($P($g(%dataold(4)),$C(1)),".",2)))  ; Proper Decimal Places
 q
%0DBs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0DBs2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,1,-1,2) q
%0DBs3 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0DBs4 s %val=$$timeext^%qarzdt(%val,2) q
%0DBs5 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0DBs6 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 i %mmmsqld(3)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0DAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%dataold(1),$C(1))=$g(%mmmsqld(3))
 i $P(%dataold(1),$C(1))'="",$d(^BB("RQ",$P(%dataold(1),$C(1))))
 i '$t
 e  i 1>$P(%dataold(1),$C(1)),$P(%dataold(1),$C(1))=+$P(%dataold(1),$C(1))
 i  g %0DBdun
 s %mmmsqln=$g(^BB("RQ",$P(%dataold(1),$C(1))))
 s %dataold(5)=$p(%mmmsqln,"^",4) s %dataold(9)=$p(%mmmsqln,"^",8) s %dataold(10)=$p(%mmmsqln,"^",9) s %dataold(12)=$p(%mmmsqln,"^",10) s %dataold(13)=$p(%mmmsqln,"^",11) s %dataold(14)=$p(%mmmsqln,"^",12) s %dataold(15)=$p(%mmmsqln,"^",13) s %dataold(16)=$p(%mmmsqln,"^",14) s %dataold(17)=$p(%mmmsqln,"^",15)
 k %dataold(11) s %dataold(11)=$g(^BB("RQ",$P(%dataold(1),$C(1)),"REM",0)) s:'%dataold(11) %dataold(11)="" f %irep=1:1:%dataold(11) s %dataold(11,%irep)=$g(^(%irep))
 
 s %val=$P(%dataold(1),$C(1)) d %0DBs1:%val'="" s $P(%dataold(1),$C(1),2)=%val
 s %val=$P(%dataold(5),$C(1)) d %0DBs2:%val'="" s $P(%dataold(5),$C(1),2)=%val
 s %val=$P(%dataold(12),$C(1)) d %0DBs2:%val'="" s $P(%dataold(12),$C(1),2)=%val
 s %val=$P(%dataold(14),$C(1)) d %0DBs3:%val'="" s $P(%dataold(14),$C(1),2)=%val
 s %val=$P(%dataold(15),$C(1)) d %0DBs4:%val'="" s $P(%dataold(15),$C(1),2)=%val
 s %val=$P(%dataold(16),$C(1)) d %0DBs5:%val'="" s $P(%dataold(16),$C(1),2)=%val
 s %val=$P(%dataold(17),$C(1)) d %0DBs6:%val'="" s $P(%dataold(17),$C(1),2)=%val
 d %0DBr7
 d %0DBr8
 d %0DBr9
 s %val=$P(%dataold(4),$C(1)) d %0DBs1:%val'="" s $P(%dataold(4),$C(1),2)=%val
 d %0DBr10
 s %val=$P(%dataold(6),$C(1)) d %0DBs3:%val'="" s $P(%dataold(6),$C(1),2)=%val
 d %0DBr11
 d %0DBr12
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
getold(%dataold) g %0Do
code2 ; compute code of field RQ_Episode_DR
 s %data(2)=""
 s %data(2)=$p($g(%data(9)),"||",1)
 q
comp2 ; entry point to do computed field RQ_Episode_DR
 n %oldval q:(","_$g(trak)_",")[(",2,")
 s %oldval=$g(%data(2)) d code2 s %ok=1 i $g(%data(2))=%oldval q
 s %val=$p($g(%data(2)),$c(1)) d:%val'="" fdv2^mt2281 s:'%ok %data(2)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","RQ_Episode_DR","",%msg) q
 i $g(%data(2))="",%oldval="" q
 s:'$d(%edit(2)) %edit(2)=%oldval k:$g(%data(2))=$g(%edit(2)) %edit(2)
 s trak=$g(trak),trak=trak_$e(",",trak'="")_2
 d comp3
 s trak=$p(trak,",",1,$l(trak,",")-1) k:trak="" trak
 q
code7 ; compute code of field RQ_TestSet_DR
 s %data(7)=""
 s %data(7)=$p($g(%data(9)),"||",2)
 q
comp7 ; entry point to do computed field RQ_TestSet_DR
 n %oldval q:(","_$g(trak)_",")[(",7,")
 s %oldval=$g(%data(7)) d code7 s %ok=1 i $g(%data(7))=%oldval q
 s %val=$p($g(%data(7)),$c(1)) d:%val'="" fdv7^mt2281 s:'%ok %data(7)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","RQ_TestSet_DR","",%msg) q
 i $g(%data(7))="",%oldval="" q
 s:'$d(%edit(7)) %edit(7)=%oldval k:$g(%data(7))=$g(%edit(7)) %edit(7)
 q
code3 ; compute code of field RQ_Debtor_DR
 s %data(3)=""
 s %data(3)=$$CT003^at228($g(%data(2)))
 q
comp3 ; entry point to do computed field RQ_Debtor_DR
 n %oldval q:(","_$g(trak)_",")[(",3,")
 s %oldval=$g(%data(3)) d code3 s %ok=1 i $g(%data(3))=%oldval q
 s %val=$p($g(%data(3)),$c(1)) d:%val'="" fdv3^mt2281 s:'%ok %data(3)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","RQ_Debtor_DR","",%msg) q
 i $g(%data(3))="",%oldval="" q
 s:'$d(%edit(3)) %edit(3)=%oldval k:$g(%data(3))=$g(%edit(3)) %edit(3)
 q
code4 ; compute code of field RQ_Units
 s $p(%data(4),$c(1))=""
 s $p(%data(4),$c(1))=$$CT004^at228($g(%data(9)))
 q
comp4 ; entry point to do computed field RQ_Units
 n %oldval q:(","_$g(trak)_",")[(",4,")
 s %oldval=$g(%data(4)) d code4 s %ok=1 i $g(%data(4))=%oldval q
 s %val=%data(4)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde1 s $p(%data(4),$c(1))=%val
 s %val=$p($g(%data(4)),$c(1)) d:%val'="" fda1^mt2281 s:'%ok %data(4)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","RQ_Units","",%msg) q
 s %val=$p(%data(4),$c(1))
 d:%val'="" fdi1^mt2282 s $p(%data(4),$c(1),2)=%val
 i $g(%data(4))="",%oldval="" q
 s:'$d(%edit(4)) %edit(4)=%oldval k:$g(%data(4))=$g(%edit(4)) %edit(4)
 q
code6 ; compute code of field RQ_DateRequired
 s $p(%data(6),$c(1))=""
 s $p(%data(6),$c(1))=$$CT006^at228($g(%data(9)))
 q
comp6 ; entry point to do computed field RQ_DateRequired
 n %oldval q:(","_$g(trak)_",")[(",6,")
 s %oldval=$g(%data(6)) d code6 s %ok=1 i $g(%data(6))=%oldval q
 s %val=%data(6)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde6 s $p(%data(6),$c(1))=%val
 s %val=$p($g(%data(6)),$c(1)) d:%val'="" fdv5^mt2281 s:'%ok %data(6)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","RQ_DateRequired","",%msg) q
 s %val=$p(%data(6),$c(1))
 d:%val'="" fdi6^mt2282 s $p(%data(6),$c(1),2)=%val
 i $g(%data(6))="",%oldval="" q
 s:'$d(%edit(6)) %edit(6)=%oldval k:$g(%data(6))=$g(%edit(6)) %edit(6)
 q
code8 ; compute code of field RQ_ProductCode_DR
 s %data(8)=""
 s %data(8)=$$CT008^at228($g(%data(9)))
 q
comp8 ; entry point to do computed field RQ_ProductCode_DR
 n %oldval q:(","_$g(trak)_",")[(",8,")
 s %oldval=$g(%data(8)) d code8 s %ok=1 i $g(%data(8))=%oldval q
 s %val=$p($g(%data(8)),$c(1)) d:%val'="" fdv8^mt2281 s:'%ok %data(8)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","RQ_ProductCode_DR","",%msg) q
 i $g(%data(8))="",%oldval="" q
 s:'$d(%edit(8)) %edit(8)=%oldval k:$g(%data(8))=$g(%edit(8)) %edit(8)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"BB_Request"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="BB_Request Row ID" d %mdiag(%oper,-106,"Fld Int","Req","RQ_Rowid","",%ok) s %msg=%ok,%ok=0
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table BB_Request
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %val=$i(^BB("RQ",0)) g inrwide
 g rowiderr
inrwide ; external to internal conversion for rowid
 i 'rowerr d fde1^mt2281 i '%ok g:'iform rowiderr s rowerr=1
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt2281 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i 'rowerr d fdi1^mt2282 s %data(1)=%data(1)_$c(1)_%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 g insarr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt2282
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp2^mt2281 d comp7^mt2281 d comp3^mt2281 d comp4^mt2281 d comp6^mt2281 d comp8^mt2281
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde1 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde15 ; external to internal conversion code
 s %ok=1 s %val=$$timeint^%qarzdt(%val,2) s:%val<0 %ok=0
 q
fde16 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde5 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,1,"") s:%val<0 %ok=0
 q
fde6 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=1 d etiok
 . s %msg="" d fde1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_Rowid","",$g(%msg))
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=4 d etiok
 . s %msg="" d fde1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_Units","",$g(%msg))
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=5 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_TestDate","",$g(%msg))
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=6 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_DateRequired","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) s %data(8)=%val
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 f %irep=1:1:$g(%data(11)) i $d(%data(11,%irep)),$p(%data(11,%irep),$c(1))="",$p(%data(11,%irep),$c(1),2)'="" s %val=$p(%data(11,%irep),$c(1),2) s %data(11,%irep)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=12 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_HoldDate","",$g(%msg))
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=14 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_GroupHoldDate","",$g(%msg))
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=15 d etiok
 . s %msg="" d fde15 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_GroupHoldTime","",$g(%msg))
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=16 d etiok
 . s %msg="" d fde16 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_Exclude","",$g(%msg))
 i $d(%data(17)),$p(%data(17),$c(1))="",$p(%data(17),$c(1),2)'="" s %val=$p(%data(17),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=17 d etiok
 . s %msg="" d fde1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","RQ_TransfusionEvents_DR","",$g(%msg))
 q
fda1 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 d fda1 q:'%ok  s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv10 ; DO validation and additional validation code
 n nval s nval=%val d %0To
  i SQLCODE'=0 s %ok=0
 q
%0To n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Terr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0DAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(1),$C(1))=$g(%mmmsqld(2))
 i $P(%mmmsqld(1),$C(1))'="",$d(^CT("RQST",$P(%mmmsqld(1),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(1),$C(1)),$P(%mmmsqld(1),$C(1))=+$P(%mmmsqld(1),$C(1))
 i  g %0TBdun
 
 s %val=$P(%mmmsqld(1),$C(1)) d %0DBs1:%val'="" s $P(%mmmsqld(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Tc
%0TBdun 
%0TAdun 
%0Tc q
%0Terr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0TAdun
fdv2 ; DO validation and additional validation code
 n nval s nval=%val d %0Jo
  i SQLCODE'=0 s %ok=0
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(nval,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(2)),"||",1,1)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0JBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
fdv3 ; DO validation and additional validation code
 n nval s nval=%val d %0Lo
  i SQLCODE'=0 s %ok=0
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Lerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(nval,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(2)),"||",1,1)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(4)'="",$d(^TDEB(%mmmsqld(4)))
 e  g %0LBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Lc
%0LBdun 
%0LAdun 
%0Lc q
%0Lerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0LAdun
fdv5 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv7 ; DO validation and additional validation code
 n nval s nval=%val d %0No
  i SQLCODE'=0 s %ok=0
 q
%0No n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Nerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(nval,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(2)),"||",1,1)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(4)))
 e  g %0NBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Nc
%0NBdun 
%0NAdun 
%0Nc q
%0Nerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0NAdun
fdv8 ; DO validation and additional validation code
 n nval s nval=%val d %0Po
  i SQLCODE'=0 s %ok=0
 q
%0Po n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Perr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 i %mmmsqld(2)="",$L(nval)>1 s %val=$E(nval,2,999) d %0DAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(1),$C(1))=$g(%mmmsqld(2))
 i $P(%mmmsqld(1),$C(1))'="",$d(^CT("PR",$P(%mmmsqld(1),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(1),$C(1)),$P(%mmmsqld(1),$C(1))=+$P(%mmmsqld(1),$C(1))
 i  g %0PBdun
 
 s %val=$P(%mmmsqld(1),$C(1)) d %0DBs6:%val'="" s $P(%mmmsqld(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Pc
%0PBdun 
%0PAdun 
%0Pc q
%0Perr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0PAdun
fdv9 ; DO validation and additional validation code
 n nval s nval=%val d %0Ro
  i SQLCODE'=0 s %ok=0
 q
%0Ro n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Rerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(nval,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(2)),"||",2,2),%mmmsqld(6)=$p($g(%mmmsqld(2)),"||",3,3)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6)))
 e  g %0RBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Rc
%0RBdun 
%0RAdun 
%0Rc q
%0Rerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0RAdun
uniq1(%rowid,%unique) n SQLCODE,%val d %0Ho q SQLCODE=100
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 i %mmmsqld(3)="",$L(%unique)>1 s %val=$E(%unique,2,999) d %0DAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(3))
 i %mmmsqld(1)'="",$d(^BB("RQ",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0HBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="RQ_Rowid"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","RQ_Rowid","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_Rowid","",$g(%msg))
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_Episode_DR","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_Debtor_DR","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fda1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_Units","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_TestDate","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_DateRequired","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_TestSet_DR","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_ProductCode_DR","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv9 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_VisitTS_DR","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_Status_DR","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_HoldDate","",$g(%msg))
 i $d(%edit(14)),%data(14)'=%edit(14) s %icol=14 s %val=$p(%data(14),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","RQ_GroupHoldDate","",$g(%msg))
 g continue^mt2282
 g ^mt2282
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
