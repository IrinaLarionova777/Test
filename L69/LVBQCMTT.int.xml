<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBQCMTT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBQCMTT ; ML 15/6/2000 ; MVB Control code access for QC_MLTTestCode
 ;
 ; supported calls:
 ;
 ; $$insert^LVBQCMTT(par)
 ; $$update^LVBQCMTT(ROWID)
 ; $$save^LVBQCMTT(ROWID)
 ; $$delete^LVBQCMTT(ROWID,Comments)
 ; $$open^LVBQCMTT(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBQCMTT(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBQCMTT(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBQCMTT(par,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBQCMTT()
 ; $$select^LVBQCMTT(ROWID)
 ; $$getall^LVBQCMTT(par,group,Continue,user)
 ; $$getall1^LVBQCMTT(type,wsmach,group,user)
 ; $$getall2^LVBQCMTT(type,wsmach,group,date,Continue,user)
 ; $$getall3^LVBQCMTT(mat,lot,group,user)
 ; $$getall4^LVBQCMTT(mat,lot,group,date,user,Continue)
 ;
  ;---&SQL(DECLARE QCMTT CURSOR FOR SELECT * FROM QC_MLTTestCode
   ;---         WHERE QCMTT_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
save(ROWID) f j=1:1:5 s @("x"_j)=$p(ROWID,"||",j)
 i $d(^TTQC(x1,"LOT",x2,"TYPE",x3,x4,"TEST",x5)) q $$update(ROWID)
 s par=$p(ROWID,"||",1,4)
 q $$insert(par)
 ;
 ; insert the data
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1)
  ;---&SQL(insert INTO QC_MLTTestCode VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE QC_MLTTestCode VALUES :PLIST() WHERE QCMTT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM QC_MLTTestCode WHERE QCMTT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(par,user,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),user=$g(user)
  ;---&SQL(OPEN QCMTT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCMTT0o
 q 0
 ; fetch the data
fetch(par,user,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),user=$g(user)
  ;---f  &SQL(FETCH QCMTT INTO :PLIST()) q:SQLCODE  q:'$$ValUser^LVBCTTC(user,$p(PLIST(2),$c(1)))
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 f  Do %0Jo q:SQLCODE  q:'$$ValUser^LVBCTTC(user,$p(PLIST(2),$c(1)))
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(par,user,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),user=$g(user) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,user) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,user,p2,p3,p4,p5,p6,p7,p8,p9) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par,user)
 f cnt=1:1 q:$$fetch(par,user)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor
close()  ;---&SQL(CLOSE QCMTT)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %QCMTT0c
 q 0
 ; select data by code
select(ROWID) k PLIST s ROWID=$g(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM QC_MLTTestCode WHERE QCMTT_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 n plist,j,I,SQLCODE,X f j=1:1:PLIST i $d(PLIST(j)) s PLIST(j)=$p(PLIST(j),$c(1),1)
 ;
 i $g(PLIST(2))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$selskip^LVBCTTC(plist(2))
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(2)=X k plist
 i $g(PLIST(4))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTQCG(plist(4))
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(4)=X k plist
 ;
 q
 ; get TestItems for worksheet/machine
getall(par,group,Continue,user) n (PLIST,par,group,Continue,user) s par=$g(par),group=$g(group),Continue=$g(Continue),user=$g(user)
 s type=$p(par,"||",3),wsmach=$p(par,"||",4)
 i Continue'="Y" d
 .k ^TMP($zn,$j,"getall")
 .i $$open(par,user)
 .f  q:$$fetch(par,user)  d
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s tc=$p(PLIST(2),$c(1)) i $l(tc) s ^TMP($zn,$j,"getall",1,tc)=str
 .i $$close()
 .
 .i type="M",'$$getall^LVBMITC(wsmach,user) d
 ..s cnt=0 f j=1:1:PLIST d
 ... ; remove TestItem without channels
 ...i $p($p(PLIST(j),$c(2),4),$c(28),3)="" q
 ... ; remove micro TestItem
 ...s tc=$p($p($p(PLIST(j),$c(2),4),$c(28),2),$c(1)) i $d(^TMP($zn,$j,"getall",2,tc)) q
 ...  ;---&SQL(SELECT CTTC_Desc,CTTC_ResultFormat INTO :xx() FROM CT_TestCode WHERE CTTC_RowID=:tc)
  ...  ;--- ** SQL PUBLIC Variables: SQLCODE, tc, xx
 ... Do %0No
 ...i '(($p(xx(5),$c(1))="V")!($e($p(xx(5),$c(1)))="B")) d
 ....i $l(group),group'=$p($p($g(^TMP($zn,$j,"getall",1,tc)),$c(28),4),$c(1)) q
 ....s str=$g(^TMP($zn,$j,"getall",1,tc)) i '$l(str) s str=$c(28)_tc_$c(1)_xx(3)
 ....s cnt=cnt+1,^TMP($zn,$j,"getall",0,cnt)=tc_$c(2)_xx(3)_$c(2)_$e(xx(5))_$c(2)_str
 ....s ^TMP($zn,$j,"getall",2,tc)=""
 .
 .i type="W",'$$getall^LVBWKSTS(wsmach,user) d
 ..s cnt=0 f j=1:1:PLIST d
 ...s tc=$p(PLIST(j),$c(2),1) i $d(^TMP($zn,$j,"getall",2,tc)) q
 ...  ;---&SQL(SELECT CTTC_Desc,CTTC_ResultFormat INTO :xx() FROM CT_TestCode WHERE CTTC_RowID=:tc)
  ...  ;--- ** SQL PUBLIC Variables: SQLCODE, tc, xx
 ... Do %0Po
 ...i '(($p(xx(5),$c(1))="V")!($e($p(xx(5),$c(1)))="B")) d
 ....i $l(group),group'=$p($p($g(^TMP($zn,$j,"getall",1,tc)),$c(28),4),$c(1)) q
 ....s str=$g(^TMP($zn,$j,"getall",1,tc)) i '$l(str) s str=$c(28)_tc_$c(1)_xx(3)
 ....s cnt=cnt+1,^TMP($zn,$j,"getall",0,cnt)=tc_$c(2)_xx(3)_$c(2)_$e(xx(5))_$c(2)_str
 ....s ^TMP($zn,$j,"getall",2,tc)=""
 k PLIST s (sum,x)="" f j=1:1 s x=$o(^TMP($zn,$j,"getall",0,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(j)=^(x),sum=sum+$l(^(x)) k ^TMP($zn,$j,"getall",0,x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j,"getall",0)):0,1:100)
 ; get TestItems for worksheet/machine
getall1(type,wsmach,group,user) n (type,wsmach,group,user,PLIST) k ^TMP($zn,$j,"getall1")
 s type=$g(type),wsmach=$g(wsmach),group=$g(group),user=$g(user)
 s x1="" f  s x1=$o(^TTQCi("TYPE",type,wsmach,x1)) q:x1=""  d
 .s x2="" f  s x2=$o(^TTQCi("TYPE",type,wsmach,x1,x2)) q:x2=""  d
 ..i $$getall(x1_"||"_x2_"||"_type_"||"_wsmach,group,,user)
 ..f j=1:1:PLIST s tc=$p(PLIST(j),$c(2)),^TMP($zn,$j,"getall1",tc)=$p(PLIST(j),$c(2),1,2)
 k PLIST s x="" f cnt=1:1 s x=$o(^TMP($zn,$j,"getall1",x)) q:x=""  s PLIST(cnt)=^(x)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,"getall1")
 q 0
 ; get TestItems for daily review
getall2(type,wsmach,group,date,Continue,user) n (type,wsmach,group,date,Continue,user,PLIST)
 s type=$g(type),wsmach=$g(wsmach),group=$g(group),date=$g(date),Continue=$g(Continue),dFrom=$p(date,"\",1),dTo=$p(date,"\",2)
 s user=$g(user)
 i Continue'="Y" d
 .k ^TMP($zn,$j,"getall2")
 .s x1="" f  s x1=$o(^TTQCi("TYPE",type,wsmach,x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TTQCi("TYPE",type,wsmach,x1,x2)) q:x2=""  d
 ...i $$getall(x1_"||"_x2_"||"_type_"||"_wsmach,group,,user)
 ...f j=1:1:PLIST s tc=$p($p(PLIST(j),$c(2)),$c(1)),^TMP($zn,$j,"getall2",1,tc)=""
 .
 .s x1="" f  s x1=$o(^TTQCi("TYPE",type,wsmach,x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TTQCi("TYPE",type,wsmach,x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TTQC(x1,"LOT",x2,"TYPE",type,wsmach,"TEST",x3)) q:x3=""  d
 ....i $d(^TMP($zn,$j,"getall2",1,x3)),'$$ValUser^LVBCTTC(user,x3) d
 .....s x4="" f  s x4=$o(^TTQC(x1,"LOT",x2,"TYPE",type,wsmach,"TEST",x3,"DATA",x4)) q:x4=""  d
 ......i $$open^LVBQCMTD(x1_"||"_x2_"||"_type_"||"_wsmach_"||"_x3_"||"_x4)
 ......f  q:$$fetch^LVBQCMTD(x1_"||"_x2_"||"_type_"||"_wsmach_"||"_x3_"||"_x4)  d
 .......i $l(dFrom),PLIST(2)<dFrom q
 .......i $l(dTo),PLIST(2)>dTo q
 .......f j=1:1:PLIST s $p(^TMP($zn,$j,"getall2",0,x1_"||"_x2,PLIST(2),PLIST(8),x4,x3),$c(1),j)=$p(PLIST(j),$c(1))
 ......i $$close^LVBQCMTD()
 k PLIST s (cnt,sum)=0
 s x1="" f  s x1=$o(^TMP($zn,$j,"getall2",0,x1)) q:x1=""  d  q:sum>15000
 .s x2="" f  s x2=$o(^TMP($zn,$j,"getall2",0,x1,x2)) q:x2=""  d  q:sum>15000
 ..s x3="" f  s x3=$o(^TMP($zn,$j,"getall2",0,x1,x2,x3)) q:x3=""  d  q:sum>15000
 ...s x4="" f  s x4=$o(^TMP($zn,$j,"getall2",0,x1,x2,x3,x4)) q:x4=""  d  q:sum>15000
 ....s cnt=cnt+1,(xx1,xx4,name)="",rowid=$p(x1,"||",1,2)
 ....  ;---&SQL(SELECT QCML_Name INTO :name FROM QC_MaterialLot WHERE QCML_RowID=:rowid)
  ....  ;--- ** SQL PUBLIC Variables: SQLCODE, name, rowid
 .... Do %0Ro
 ....s $p(xx1,$c(28),1)=$p(x1,"||",1)_"  ( "_$p(name,$c(1))_" )"
 ....s $p(xx1,$c(28),2)=x2
 ....s $p(xx1,$c(28),3)=x3
 ....s $p(xx1,$c(28),4)=x4
 ....s x5="" f j=1:1 s x5=$o(^TMP($zn,$j,"getall2",0,x1,x2,x3,x4,x5)) q:x5=""  s $p(xx4,$c(28),j)=^(x5)
 ....s PLIST(cnt)=xx1_$c(2)_$c(2)_$c(2)_xx4
 ....s sum=sum+$l(PLIST(cnt)) k ^TMP($zn,$j,"getall2",0,x1,x2,x3,x4)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j,"getall2",0)):0,1:100)
 ; get TestItems for material/lot
getall3(mat,lot,group,user) n (mat,lot,group,user,PLIST) k ^TMP($zn,$j,"getall3")
 s mat=$g(mat),lot=$g(lot),group=$g(group),user=$g(user)
 s x1="" f  s x1=$o(^TTQC(mat,"LOT",lot,"TYPE",x1)) q:x1=""  d
 .s x2="" f  s x2=$o(^TTQC(mat,"LOT",lot,"TYPE",x1,x2)) q:x2=""  d
 ..i $$getall(mat_"||"_lot_"||"_x1_"||"_x2,group,,user)
 ..f j=1:1:PLIST s tc=$p(PLIST(j),$c(2)),^TMP($zn,$j,"getall3",tc)=$p(PLIST(j),$c(2),1,2)
 k PLIST s x="" f cnt=1:1 s x=$o(^TMP($zn,$j,"getall3",x)) q:x=""  s PLIST(cnt)=^(x)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,"getall3")
 q 0
 ; get TestItems for material/lot
getall4(mat,lot,group,date,user,Continue)	n (mat,lot,group,date,user,Continue,PLIST)
	s mat=$g(mat),lot=$g(lot),group=$g(group),date=$g(date),dFrom=$p(date,"\",1),dTo=$p(date,"\",2)
	s user=$g(user),Continue=$g(Continue)
	i Continue'="Y" d
	.k ^TMP($zn,$j,"getall4")
	.
	.s x1="" f  s x1=$o(^TTQC(mat,"LOT",lot,"TYPE",x1)) q:x1=""  d
	..s x2="" f  s x2=$o(^TTQC(mat,"LOT",lot,"TYPE",x1,x2)) q:x2=""  d
	...s x3="" f  s x3=$o(^TTQC(mat,"LOT",lot,"TYPE",x1,x2,"TEST",x3)) q:x3=""  d
	....s rowid=mat_"||"_lot_"||"_x1_"||"_x2_"||"_x3
	....i '$$ValUser^LVBCTTC(user,x3),'$$select(rowid) d
	.....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
	.....i $l(group),group'=PLIST(4) q
	.....s x4="" f  s x4=$o(^TTQC(mat,"LOT",lot,"TYPE",x1,x2,"TEST",x3,"DATA",x4)) q:x4=""  d
	......i $$open^LVBQCMTD(mat_"||"_lot_"||"_x1_"||"_x2_"||"_x3_"||"_x4)
	......f  q:$$fetch^LVBQCMTD(mat_"||"_lot_"||"_x1_"||"_x2_"||"_x3_"||"_x4)  d
	.......i $l(dFrom),PLIST(2)<dFrom q
	.......i $l(dTo),PLIST(2)<dTo q
	.......f j=1:1:PLIST s $p(^TMP($zn,$j,"getall4",0,PLIST(2),x1_"||"_x2_"||"_x4,PLIST(8),x3),$c(1),j)=$p(PLIST(j),$c(1))
	......i $$close^LVBQCMTD()
	.
	.s (cnt,x1)="" f  s x1=$o(^TMP($zn,$j,"getall4",0,x1)) q:x1=""  d
	..s x2="" f  s x2=$o(^TMP($zn,$j,"getall4",0,x1,x2)) q:x2=""  d
	...s x3="" f  s x3=$o(^TMP($zn,$j,"getall4",0,x1,x2,x3)) q:x3=""  d
	....s cnt=cnt+1,(xx1,xx4)=""
	....s $p(xx1,$c(28),1)=x1
	....s a1=$p(x2,"||",1),a2=$p(x2,"||",2)
	....i a1="W",'$$select^LVBWKS(a2) s $p(xx1,$c(28),2)=PLIST(3)
	....i a1="M",'$$select^LVBMIMP(a2) s $p(xx1,$c(28),2)=PLIST(3)
	....s $p(xx1,$c(28),3)=$p(x2,"||",3)
	....s $p(xx1,$c(28),4)=x3
	....s x4="" f j=1:1 s x4=$o(^TMP($zn,$j,"getall4",0,x1,x2,x3,x4)) q:x4=""  s $p(xx4,$c(28),j)=^(x4)
	....s ^TMP($zn,$j,"getall4",1,cnt)=xx1_$c(2)_$c(2)_$c(2)_xx4
	.
	.k ^TMP($zn,$j,"getall4",0)
	k PLIST s (sum,x)="" f j=1:1 s x=$o(^TMP($zn,$j,"getall4",1,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(j)=^(x),sum=sum+$l(^(x)) k ^TMP($zn,$j,"getall4",1,x)
	s PLIST=$o(PLIST(""),-1)
	q $s($d(^TMP($zn,$j,"getall4",1)):0,1:100)
 q
%QCMTT0o s $zt="%QCMTT0E" s SQLCODE=$s($g(%QCMTT0c):-101,1:0) q:SQLCODE'=0  s %QCMTT0d(12)=0 s %QCMTT0d(13)=0,%QCMTT0d(14)=""
 s %QCMTT0d(6)=$g(par)
 s %QCMTT0c=1 q
%QCMTT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %QCMTT0c,%QCMTT0d,%QCMTT0E,%QCMTT0l,%QCMTT0n,%QCMTT0R,%QCMTT0Z q
%0Afirst 
 ; asl MOD# 2
 s %QCMTT0d(1)=%QCMTT0d(6)
 s %QCMTT0d(8)=$p(%QCMTT0d(1),"||"),%QCMTT0d(9)=$p(%QCMTT0d(1),"||",2),%QCMTT0d(10)=$p(%QCMTT0d(1),"||",3),%QCMTT0d(11)=$p(%QCMTT0d(1),"||",4)
 i %QCMTT0d(8)="" g %0ABdun
 i %QCMTT0d(9)="" g %0ABdun
 i %QCMTT0d(10)="" g %0ABdun
 i %QCMTT0d(11)="" g %0ABdun
 s %QCMTT0d(3)=""
%0ABk1 s %QCMTT0d(3)=$o(^TTQC(%QCMTT0d(8),"LOT",%QCMTT0d(9),"TYPE",%QCMTT0d(10),%QCMTT0d(11),"TEST",%QCMTT0d(3)))
 i %QCMTT0d(3)="" g %0ABdun
 s %QCMTT0d(27)=$g(^TTQC(%QCMTT0d(8),"LOT",%QCMTT0d(9),"TYPE",%QCMTT0d(10),%QCMTT0d(11),"TEST",%QCMTT0d(3)))
 s %QCMTT0d(4)=$p(%QCMTT0d(27),"\",1) s %QCMTT0d(5)=$p(%QCMTT0d(27),"\",2)
 s %QCMTT0d(2)=(%QCMTT0d(8))_"||"_(%QCMTT0d(9))_"||"_(%QCMTT0d(10))_"||"_(%QCMTT0d(11))_"||"_(%QCMTT0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTQC($p(%QCMTT0d(2),"||",1),"LOT",$p(%QCMTT0d(2),"||",2),"TYPE",$p(%QCMTT0d(2),"||",3),$p(%QCMTT0d(2),"||",4),"TEST",$p(%QCMTT0d(2),"||",5))#"S":$zu(115,4) i $t { s %QCMTT0d(13)=1,%QCMTT0d(14)=$name(^TTQC($p(%QCMTT0d(2),"||",1),"LOT",$p(%QCMTT0d(2),"||",2),"TYPE",$p(%QCMTT0d(2),"||",3),$p(%QCMTT0d(2),"||",4),"TEST",$p(%QCMTT0d(2),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MLTTestCode for RowID value: "_%QCMTT0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %QCMTT0d(8)=$p(%QCMTT0d(2),"||"),%QCMTT0d(9)=$p(%QCMTT0d(2),"||",2),%QCMTT0d(10)=$p(%QCMTT0d(2),"||",3),%QCMTT0d(11)=$p(%QCMTT0d(2),"||",4),%QCMTT0d(3)=$p(%QCMTT0d(2),"||",5)
 i %QCMTT0d(8)'="",%QCMTT0d(9)'="",%QCMTT0d(10)'="",%QCMTT0d(11)'="",%QCMTT0d(3)'="",$d(^TTQC(%QCMTT0d(8),"LOT",%QCMTT0d(9),"TYPE",%QCMTT0d(10),%QCMTT0d(11),"TEST",%QCMTT0d(3)))
 e  g %0ACdun
 s %QCMTT0d(40)=$g(^TTQC(%QCMTT0d(8),"LOT",%QCMTT0d(9),"TYPE",%QCMTT0d(10),%QCMTT0d(11),"TEST",%QCMTT0d(3)))
 s %QCMTT0d(4)=$p(%QCMTT0d(40),"\",1) s %QCMTT0d(5)=$p(%QCMTT0d(40),"\",2)
 s %QCMTT0d(1)=$p(%QCMTT0d(2),"||",1,4)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %QCMTT0d(12)=%QCMTT0d(12)+1,%ROWCOUNT=%QCMTT0d(12),%ROWID=%QCMTT0d(2),%QCMTT0c=10 q
%QCMTT0f i '$g(%QCMTT0c) { s SQLCODE=-102 q  } i %QCMTT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%QCMTT0d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%QCMTT0d(12),%QCMTT0c=100 q  } g %0Afirst:%QCMTT0c=1
%0ACdun i $zu(115,2)=1,$g(%QCMTT0d(13))=1 { l -@%QCMTT0d(14) s %QCMTT0d(13)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%QCMTT0d(12),SQLCODE=100,%QCMTT0c=100 q
%QCMTT0c i '$g(%QCMTT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%QCMTT0d(12)),1:0)
 i $zu(115,2)=1,$g(%QCMTT0d(13))=1 { l -@%QCMTT0d(14) } k %QCMTT0c,%QCMTT0d,%QCMTT0E,%QCMTT0l,%QCMTT0n,%QCMTT0R,%QCMTT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %QCMTT0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.QCMLTTestCode.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(9)=0 s %mmmsqld(10)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5),"TYPE",%mmmsqld(6),%mmmsqld(7),"TEST",%mmmsqld(8)))
 e  g %0EBdun
 s %mmmsqld(23)=$$%getlock^User.QCMLTTestCode.T1(%mmmsqld(2)) i '%mmmsqld(23) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTQC(%mmmsqld(4),"LOT",%mmmsqld(5),"TYPE",%mmmsqld(6),%mmmsqld(7),"TEST",%mmmsqld(8)))
 e  g %0ECdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.QCMLTTestCode.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(9))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(23)=1 %ReleaseLock^User.QCMLTTestCode.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(23)=1 %ReleaseLock^User.QCMLTTestCode.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(9)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(23))=1 %ReleaseLock^User.QCMLTTestCode.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4),"TYPE",%mmmsqld(5),%mmmsqld(6),"TEST",%mmmsqld(7)))
 e  g %0GBdun
 s %mmmsqld(22)=$$%getlock^User.QCMLTTestCode.T1(%mmmsqld(1)) i '%mmmsqld(22) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(3),"LOT",%mmmsqld(4),"TYPE",%mmmsqld(5),%mmmsqld(6),"TEST",%mmmsqld(7)))
 e  g %0GCdun
 d %delete^User.QCMLTTestCode.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(22)=1 %ReleaseLock^User.QCMLTTestCode.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(22)=1 %ReleaseLock^User.QCMLTTestCode.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(22))=1 %ReleaseLock^User.QCMLTTestCode.T1(%mmmsqld(1)) g %0Gc
%0Jo d %QCMTT0f q:SQLCODE'=0
 s PLIST(0)=%QCMTT0d(1),PLIST(1)=%QCMTT0d(2),PLIST(2)=%QCMTT0d(3),PLIST(3)=%QCMTT0d(4),PLIST(4)=%QCMTT0d(5)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(7)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),%mmmsqld(12)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TTQC(%mmmsqld(9),"LOT",%mmmsqld(10),"TYPE",%mmmsqld(11),%mmmsqld(12),"TEST",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(27)=$g(^TTQC(%mmmsqld(9),"LOT",%mmmsqld(10),"TYPE",%mmmsqld(11),%mmmsqld(12),"TEST",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(27),"\",1) s PLIST(4)=$p(%mmmsqld(27),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,4)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2),"TYPE",$p(PLIST(1),"||",3),$p(PLIST(1),"||",4),"TEST",$p(PLIST(1),"||",5))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TTQC($p(PLIST(1),"||",1),"LOT",$p(PLIST(1),"||",2),"TYPE",$p(PLIST(1),"||",3),$p(PLIST(1),"||",4),"TEST",$p(PLIST(1),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MLTTestCode for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),%mmmsqld(12)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TTQC(%mmmsqld(9),"LOT",%mmmsqld(10),"TYPE",%mmmsqld(11),%mmmsqld(12),"TEST",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(40)=$g(^TTQC(%mmmsqld(9),"LOT",%mmmsqld(10),"TYPE",%mmmsqld(11),%mmmsqld(12),"TEST",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(40),"\",1) s PLIST(4)=$p(%mmmsqld(40),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,4)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(tc)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(4)=%mmmsqld(5)
 i %mmmsqld(4)'="",$d(^TTAB("TC",%mmmsqld(4)))
 e  g %0NBdun
 s %mmmsqld(13)=$g(^TTAB("TC",%mmmsqld(4)))
 s xx(3)=$p(%mmmsqld(13),"\",1) s xx(5)=$p(%mmmsqld(13),"\",3)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TTAB("TC",$p(%mmmsqld(4),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TTAB("TC",$p(%mmmsqld(4),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestCode for RowID value: "_%mmmsqld(4) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(4)'="",$d(^TTAB("TC",%mmmsqld(4)))
 e  g %0NCdun
 s %mmmsqld(18)=$g(^TTAB("TC",%mmmsqld(4)))
 s xx(3)=$p(%mmmsqld(18),"\",1) s xx(5)=$p(%mmmsqld(18),"\",3)
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
%0Po n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Perr" s %mmmsqld(7)=0,%mmmsqld(8)=""
 s %mmmsqld(5)=$g(tc)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(4)=%mmmsqld(5)
 i %mmmsqld(4)'="",$d(^TTAB("TC",%mmmsqld(4)))
 e  g %0PBdun
 s %mmmsqld(13)=$g(^TTAB("TC",%mmmsqld(4)))
 s xx(3)=$p(%mmmsqld(13),"\",1) s xx(5)=$p(%mmmsqld(13),"\",3)
 g:$zu(115,2)=0 %0PBuncommitted i $zu(115,2)=1 l +^TTAB("TC",$p(%mmmsqld(4),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(7)=1,%mmmsqld(8)=$name(^TTAB("TC",$p(%mmmsqld(4),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestCode for RowID value: "_%mmmsqld(4) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(4)'="",$d(^TTAB("TC",%mmmsqld(4)))
 e  g %0PCdun
 s %mmmsqld(18)=$g(^TTAB("TC",%mmmsqld(4)))
 s xx(3)=$p(%mmmsqld(18),"\",1) s xx(5)=$p(%mmmsqld(18),"\",3)
%0PBuncommitted ;
 s SQLCODE=0 g %0Pc
%0PCdun i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) s %mmmsqld(7)=0 }
%0PBdun 
%0PAdun 
%0Pc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(7))=1 { l -@%mmmsqld(8) } q
%0Perr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Pc
%0Ro n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Rerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(4)=$g(rowid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7)))
 e  g %0RBdun
 s %mmmsqld(15)=$g(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7)))
 s name=$p(%mmmsqld(15),"\",2)
 g:$zu(115,2)=0 %0RBuncommitted i $zu(115,2)=1 l +^TTQC($p(%mmmsqld(3),"||",1),"LOT",$p(%mmmsqld(3),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTQC($p(%mmmsqld(3),"||",1),"LOT",$p(%mmmsqld(3),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MaterialLot for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7)))
 e  g %0RCdun
 s %mmmsqld(21)=$g(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7)))
 s name=$p(%mmmsqld(21),"\",2)
%0RBuncommitted ;
 s SQLCODE=0 g %0Rc
%0RCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0RBdun 
%0RAdun 
%0Rc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Rerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Rc
]]></Routine>
</Export>
