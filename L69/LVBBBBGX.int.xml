<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBBBBGX" type="INT" languagemode="0" generated="1"><![CDATA[
LVBBBBGX ; IG 6/5/98 ; LVB Control data access for BBBGX CTBB_BloodGroupXMatch
 ;
 ; supported calls:
 ;
 ; $$insert^LVBBBBGX(par)
 ; $$update^LVBBBBGX(ROWID)
 ; $$select^LVBBBBGX(ROWID)
 ; $$delete^LVBBBBGX(ROWID,Comments)
 ; $$open^LVBBBBGX(par,prod,group,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBBBBGX(par,prod,group,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBBBBGX(par,prod,group,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBBBBGX(par,prod,group,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBBBBGX()
 ; $$getall^LVBBBBGX(par,prod,group)
 ; $$checkXM^LVBBBBGX(bgPatient,prod,bgPack)
 ;
  ;---&sql(DECLARE BBBGX CURSOR FOR SELECT * FROM CTBB_BloodGroupXMatch
   ;---         WHERE BBBGX_ParRef = :par
   ;---         AND ((BBBGX_BloodProduct_DR = :prod) OR (:prod IS NULL) OR (BBBGX_BloodProduct_DR IS NULL))
   ;---         AND ((BBBGX_ProductGroup_DR = :group) OR (:group IS NULL) OR (BBBGX_ProductGroup_DR IS NULL))
   ;---         ORDER BY BBBGX_Preference)
   ;--- ** SQL PUBLIC Variables: SQLCODE, group, par, prod
checkXM(bgPatient,prod,bgPack) n (bgPatient,prod,bgPack) s result=100
 k PROD i '$$select^LVBBBBP(prod,"Y") m PROD=PLIST
 i $$open(bgPatient,prod,PROD(24))
 f  q:$$fetch(bgPatient,prod,PROD(24))  i $p(PLIST(3),$c(1))=bgPack s result=0 q
 i $$close()
 q result
 ;
open(par,prod,group,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),prod=$g(prod),group=$g(group)
  ;---&SQL(OPEN BBBGX)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBBGX0o
 q 0
 ;
fetch(par,prod,group,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),prod=$g(prod),group=$g(group)
  ;---&SQL(FETCH BBBGX INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,prod,group,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),prod=$g(prod),group=$g(group) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,prod,group) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,prod,group,p3,p4,p5,p6,p7,p8,p9) N (par,prod,group,PLIST) s par=$g(par),prod=$g(prod),group=$g(group) K ^TMP($zn,$j)
 i $$open(par,prod,group)
 f cnt=1:1 Q:$$fetch(par,prod,group)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE BBBGX)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBBGX0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM CTBB_BloodGroupXMatch WHERE BBBGX_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO CTBB_BloodGroupXMatch VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CTBB_BloodGroupXMatch VALUES :PLIST() WHERE BBBGX_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CTBB_BloodGroupXMatch WHERE BBBGX_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBBP(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBBG(plist(3),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBPG(plist(6),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 q
getall(par,prod,group) n (par,prod,group,PLIST) k ^TMP($zn,$j) s par=$g(par),prod=$g(prod),group=$g(group)
 i $$open(par,prod,group)
 f cnt=1:1 q:$$fetch(par,prod,group)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1),2)_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%BBBGX0o s $zt="%BBBGX0E" s SQLCODE=$s($g(%BBBGX0c):-101,1:0) q:SQLCODE'=0  s %BBBGX0d(15)=0 s %BBBGX0d(16)=0,%BBBGX0d(17)=""
 s %BBBGX0d(8)=$g(par),%BBBGX0d(9)=$g(prod),%BBBGX0d(10)=$g(prod),%BBBGX0d(11)=$g(group),%BBBGX0d(12)=$g(group)
 s %BBBGX0t(1)=$i(^||%sql.temp)
 s %BBBGX0c=1 q
%BBBGX0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %BBBGX0c,%BBBGX0d,%BBBGX0E,%BBBGX0l,%BBBGX0n,%BBBGX0R,%BBBGX0s,%BBBGX0t,%BBBGX0Z q
%0Afirst 
 k ^||%sql.temp(%BBBGX0t(1),0) s ^||%sql.temp(%BBBGX0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%BBBGX0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%BBBGX0t(1),0))
 s %BBBGX0s(5)=""
%0ACk1 s %BBBGX0s(5)=$o(^||%sql.temp(%BBBGX0t(1),0,%BBBGX0s(5)))
 i %BBBGX0s(5)="" g %0ACdun
 s %BBBGX0d(5)=$s(%BBBGX0s(5)=-1E14:"",1:%BBBGX0s(5))
 s %BBBGX0s(2)=""
%0ACk2 s %BBBGX0s(2)=$o(^||%sql.temp(%BBBGX0t(1),0,%BBBGX0s(5),%BBBGX0s(2)))
 i %BBBGX0s(2)="" g %0ACk1
 s %BBBGX0d(2)=$s(%BBBGX0s(2)=-1E14:"",1:%BBBGX0s(2))
 s %BBBGX0d(28)=$g(^||%sql.temp(%BBBGX0t(1),0,%BBBGX0s(5),%BBBGX0s(2)))
 s %BBBGX0d(1)=$lg(%BBBGX0d(28),4) s %BBBGX0d(3)=$lg(%BBBGX0d(28),2) s %BBBGX0d(4)=$lg(%BBBGX0d(28),1) s %BBBGX0d(6)=$lg(%BBBGX0d(28),3) s %BBBGX0d(7)=$lg(%BBBGX0d(28),5)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("BB-BG",$p(%BBBGX0d(2),"||",1),"XM-0",$p(%BBBGX0d(2),"||",2))#"S":$zu(115,4) i $t { s %BBBGX0d(16)=1,%BBBGX0d(17)=$name(^TTAB("BB-BG",$p(%BBBGX0d(2),"||",1),"XM-0",$p(%BBBGX0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_BloodGroupXMatch for RowID value: "_%BBBGX0d(2) ztrap "LOCK"  }
 ; asl MOD# 4
 s %BBBGX0d(14)=$p(%BBBGX0d(2),"||"),%BBBGX0d(6)=$p(%BBBGX0d(2),"||",2)
 i %BBBGX0d(14)'="",%BBBGX0d(6)'="",$d(^TTAB("BB-BG",%BBBGX0d(14),"XM-0",%BBBGX0d(6)))
 e  g %0ADdun
 s %BBBGX0d(36)=$g(^TTAB("BB-BG",%BBBGX0d(14),"XM-0",%BBBGX0d(6)))
 s %BBBGX0d(3)=$p(%BBBGX0d(36),"\",2)
 g:'((((%BBBGX0d(3)'="")&&(%BBBGX0d(3)=%BBBGX0d(9)))||(%BBBGX0d(10)=""))||(%BBBGX0d(3)="")) %0ADdun
 s %BBBGX0d(7)=$p(%BBBGX0d(36),"\",3)
 g:'((((%BBBGX0d(7)'="")&&(%BBBGX0d(7)=%BBBGX0d(11)))||(%BBBGX0d(12)=""))||(%BBBGX0d(7)="")) %0ADdun
 s %BBBGX0d(4)=$p(%BBBGX0d(36),"\",4) s %BBBGX0d(5)=$p(%BBBGX0d(36),"\",1)
 s %BBBGX0d(1)=$p(%BBBGX0d(2),"||")
 g:'(%BBBGX0d(1)=%BBBGX0d(8)) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %BBBGX0d(15)=%BBBGX0d(15)+1,%ROWCOUNT=%BBBGX0d(15),%ROWID=%BBBGX0d(2),%BBBGX0c=10 q
%BBBGX0f i '$g(%BBBGX0c) { s SQLCODE=-102 q  } i %BBBGX0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%BBBGX0d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%BBBGX0d(15),%BBBGX0c=100 q  } g %0Afirst:%BBBGX0c=1
%0ADdun i $zu(115,2)=1,$g(%BBBGX0d(16))=1 { l -@%BBBGX0d(17) s %BBBGX0d(16)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%BBBGX0d(15),SQLCODE=100,%BBBGX0c=100 q
%BBBGX0c i '$g(%BBBGX0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%BBBGX0d(15)),1:0) f %BBBGX0d(18)=1 { i $sortend(^||%sql.temp(%BBBGX0t(%BBBGX0d(18)),0),0) } k ^||%sql.temp(%BBBGX0t(1))
 i $zu(115,2)=1,$g(%BBBGX0d(16))=1 { l -@%BBBGX0d(17) } k %BBBGX0c,%BBBGX0d,%BBBGX0E,%BBBGX0l,%BBBGX0n,%BBBGX0R,%BBBGX0s,%BBBGX0t,%BBBGX0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %BBBGX0c=100
 f %BBBGX0d(18)=1 i $sortend(^||%sql.temp(%BBBGX0t(%BBBGX0d(18)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %BBBGX0d(1)=%BBBGX0d(8)
 i %BBBGX0d(1)="" g %0ABdun
 s %BBBGX0d(6)=""
%0ABk1 s %BBBGX0d(6)=$o(^TTAB("BB-BG",%BBBGX0d(1),"XM-0",%BBBGX0d(6)))
 i %BBBGX0d(6)="" g %0ABdun
 s %BBBGX0d(26)=$g(^TTAB("BB-BG",%BBBGX0d(1),"XM-0",%BBBGX0d(6)))
 s %BBBGX0d(3)=$p(%BBBGX0d(26),"\",2)
 g:'((((%BBBGX0d(3)'="")&&(%BBBGX0d(3)=%BBBGX0d(9)))||(%BBBGX0d(10)=""))||(%BBBGX0d(3)="")) %0ABk1
 s %BBBGX0d(7)=$p(%BBBGX0d(26),"\",3)
 g:'((((%BBBGX0d(7)'="")&&(%BBBGX0d(7)=%BBBGX0d(11)))||(%BBBGX0d(12)=""))||(%BBBGX0d(7)="")) %0ABk1
 s %BBBGX0d(4)=$p(%BBBGX0d(26),"\",4) s %BBBGX0d(5)=$p(%BBBGX0d(26),"\",1)
 s %BBBGX0d(2)=(%BBBGX0d(1))_"||"_(%BBBGX0d(6))
 s %BBBGX0s(5)=$s(%BBBGX0d(5)'="":%BBBGX0d(5),1:-1E14),%BBBGX0s(2)=$s(%BBBGX0d(2)'="":%BBBGX0d(2),1:-1E14),%BBBGX0d(27)="",$li(%BBBGX0d(27),4)=%BBBGX0d(1),$li(%BBBGX0d(27),2)=%BBBGX0d(3),$li(%BBBGX0d(27),1)=%BBBGX0d(4),$li(%BBBGX0d(27),3)=%BBBGX0d(6),$li(%BBBGX0d(27),5)=%BBBGX0d(7),^||%sql.temp(%BBBGX0t(1),0,%BBBGX0s(5),%BBBGX0s(2))=%BBBGX0d(27)
 g %0ABk1
%0ABdun 
 q
%0Do d %BBBGX0f q:SQLCODE'=0
 s PLIST(0)=%BBBGX0d(1),PLIST(1)=%BBBGX0d(2),PLIST(2)=%BBBGX0d(3),PLIST(3)=%BBBGX0d(4),PLIST(4)=%BBBGX0d(5),PLIST(5)=%BBBGX0d(6),PLIST(6)=%BBBGX0d(7)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(5)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(5)'="",$d(^TTAB("BB-BG",%mmmsqld(11),"XM-0",PLIST(5)))
 e  g %0FBdun
 s %mmmsqld(21)=$g(^TTAB("BB-BG",%mmmsqld(11),"XM-0",PLIST(5)))
 s PLIST(2)=$p(%mmmsqld(21),"\",2) s PLIST(3)=$p(%mmmsqld(21),"\",4) s PLIST(4)=$p(%mmmsqld(21),"\",1) s PLIST(6)=$p(%mmmsqld(21),"\",3)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("BB-BG",$p(PLIST(1),"||",1),"XM-0",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("BB-BG",$p(PLIST(1),"||",1),"XM-0",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_BloodGroupXMatch for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(5)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(5)'="",$d(^TTAB("BB-BG",%mmmsqld(11),"XM-0",PLIST(5)))
 e  g %0FCdun
 s %mmmsqld(29)=$g(^TTAB("BB-BG",%mmmsqld(11),"XM-0",PLIST(5)))
 s PLIST(2)=$p(%mmmsqld(29),"\",2) s PLIST(3)=$p(%mmmsqld(29),"\",4) s PLIST(4)=$p(%mmmsqld(29),"\",1) s PLIST(6)=$p(%mmmsqld(29),"\",3)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTBBBloodGroupXMatch.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("BB-BG",%mmmsqld(4),"XM-0",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(15)=$$%getlock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("BB-BG",%mmmsqld(4),"XM-0",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTBBBloodGroupXMatch.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("BB-BG",%mmmsqld(3),"XM-0",%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(14)=$$%getlock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("BB-BG",%mmmsqld(3),"XM-0",%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.CTBBBloodGroupXMatch.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTBBBloodGroupXMatch.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
