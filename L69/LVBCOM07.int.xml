<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCOM07" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCOM07 ; IG 27/10/2000 ; Common routines
 ;
 ; supported calls:
 ;
 ; $$valid^LVBCOM07(text)
 ; $$TSadd^LVBCOM07(epis,ts,user,sex,mrn,cdate,ctime,pc)
 ; $$TSpcCheck^LVBCOM07(ts,pc)
 ; $$check^LVBCOM07(client)
 ; $$client^LVBCOM07(client)
 ; $$test^LVBCOM07(xxTest,dh1,dh2)
 ; populate^LVBCOM07
 ; CumListFixed^LVBCOM07(ReportGroup,epis,visit,cOrder,dh1,dh2,SORT)
 ; CumList^LVBCOM07(TestList,epis,visit,cOrder,MAX,group,report)
 ; updPS^LVBCOM07
 ; $$copies()^LVBCOM07
 ; adjustHTML^LVBCOM07
 ;
adjustHTML 
 k plist m plist=PLIST
 k header m header=HEADER
 i $g(^TMP("PRTDR00",$j,"WEB"))="WB" d
 .s (stop,a)="" f  s a=$o(plist(a))  q:a=""  i plist(a)["Donation details" s stop=a q
 .i stop s a="" f  s a=$o(plist(a))  q:a=stop  k plist(a)
 .i 'stop k plist
 s (font,size)="" i '$$select^MVBCFLAB(1) s font=PLIST(72),size=$s($g(^TMP("PRTDR00",$j,"WEB"))="WS":8,1:PLIST(73))
 i '$l(font) s font="Courier New"
 i '$l(size) s size=$s($g(^TMP("PRTDR00",$j,"WEB"))="WS":8,1:10)
 d format(.plist) k BODY m BODY=PLIST
 i $d(header) d
 .d format(.header)
 .k HEADER m HEADER=PLIST
 .k PLIST m PLIST=HEADER
 .f j=1:1:BODY s PLIST(PLIST+j)=BODY(j)
 .s PLIST=$o(PLIST(""),-1)
 q
format(plist) 
 k style,format,PLIST s pos=0,string="",nl=1
 s a="" f  s a=$o(plist(a))  q:a=""  d
 .i $e(plist(a))="?" s pos=+$e(plist(a),2,4),plist(a)=$e(plist(a),5,999) i nl=1 s plist(a)=$j("",pos)_plist(a),pos=0
 .i $e(plist(a))="~" d  q
 ..s found=0,xx=plist(a) i $l(xx) d  i 'found s xx=$g(^SS("PRINT","TYPE","LOCAL",xx)) d
 ...i xx="~NORMAL" s found=1 k style s string=$$merge(string,"",pos)
 ...i xx="~BOLD" s found=1,style("bold")="",string=$$merge(string,"",pos)
 ...i xx="~UNDERLINE" s found=1,style("underline")="",string=$$merge(string,"",pos)
 ...i xx="~ITALIC" s found=1,style("italic")="",string=$$merge(string,"",pos)
 ...i $e(xx,1,7)="~COLOR=" s found=1,style("fg")=$p(xx,"=",2),string=$$merge(string,"",pos)
 ...i $e(xx,1,10)="~FONTNAME=" s found=1,style("name")=$p(xx,"=",2),string=$$merge(string,"",pos)
 ...i $e(xx,1,10)="~FONTSIZE=" d
 ....i $g(^TMP("PRTDR00",$j,"WEB"))="W" s found=1,style("size")=$p(xx,"=",2),string=$$merge(string,"",pos)
 ....i $g(^TMP("PRTDR00",$j,"WEB"))="WS" s found=1,style("size")=8,string=$$merge(string,"",pos)
 .i plist(a)=$c(13) s pos=0,string=$$merge(string,"",pos) q
 .i plist(a)="!" s x=$o(PLIST(""),-1)+1,PLIST(x)=string m PLIST(x,"format")=format k format s nl=1,pos=0,string="" q
 .s string=$$merge(string,plist(a),pos)
 .s pos=pos+$l(plist(a)),nl=0
 s x1="" f  s x1=$o(PLIST(x1)) q:x1=""  d
 .s old=""
 .s x2="" f  s x2=$o(PLIST(x1,"format",x2)) q:x2=""  d
 ..i old=PLIST(x1,"format",x2) k PLIST(x1,"format",x2) q
 ..s old=PLIST(x1,"format",x2)
 s PLIST(0)="<pre>"
 s x="" f  s x=$o(PLIST(x)) q:x=""  i $d(PLIST(x,"format")) d
 .s line=PLIST(x),newline=""
 .s pos1="" f j=0:1 s pos1=$o(PLIST(x,"format",pos1)) q:pos1=""  d
 ..s style=PLIST(x,"format",pos1)
 ..i 'j s newline=$e(line,1,pos1)
 ..s pos2=$o(PLIST(x,"format",pos1)) i pos2="" s pos2=$l(line)
 ..s text=$e(line,pos1+1,pos2) i $l(text) d
 ...i $l(style) s newline=newline_"<span style='"_style_"'>"_text_"</span>"
 ...e  s newline=newline_text
 .s PLIST(x)=newline
 s x=$o(PLIST(""),-1)+1
 s PLIST(x)="</pre>"
 s PLIST=$o(PLIST(""),-1)
 k plist m plist=PLIST k PLIST f j=0:1:plist s PLIST(j+1)=plist(j)
 s PLIST=$o(PLIST(""),-1) k plist
 q
merge(string,new,pos) s result=""
 i '$d(style("name")) s style("name")=font
 i '$d(style("size")) s style("size")=size
 s (style,x)="" f  s x=$o(style(x)) q:x=""  d
 .i x="name" d
 ..i style(x)="" s style=style_"font-family:"_style(x)_",Courier New,monospace; "
 ..i style(x)'="" s style=style_"font-family:"_style(x)_",monospace; "
 .i x="size" s style=style_"font-size:"_style(x)_"pt; "
 .i x="bold" s style=style_"font-weight:bold; "
 .i x="italic" s style=style_"font-style:italic; "
 .i x="underline" s style=style_"text-decoration:underline; "
 .i x="fg" s style=style_"color:"_style(x)_";"
 s format(pos)=style
 s result=string i pos>$l(result) s result=$e(result_$j("",pos),1,pos)
 f j=1:1:$l(new) d
 .i $e(result,pos+j)="" s $e(result,pos+j)=$e(new,j) q
 .i $e(result,pos+j)=" " s $e(result,pos+j)=$e(new,j) q
 .i $e(result,pos+j)'=" ",$e(new,j)'=" " s $e(result,pos+j)=$e(new,j) q
 q result
 ; create list of episodes and results
CumList(TestList,epis,visit,cOrder,MAX,group,report) n (TestList,epis,visit,cOrder,MAX,group,report,PLIST,ReportType) s ReportType=""
 s TestList=$g(TestList),epis=$g(epis),visit=$g(visit),cOrder=$g(cOrder),MAX=$g(MAX),group=$g(group),report=$g(report)
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1)
 i $l(%routine) s LineRoutine="CumList^"_%routine i $l($t(@LineRoutine)) x "d CumList^"_%routine_"("""_TestList_""","""_epis_""","""_visit_""","""_cOrder_""","""_MAX_""","""_group_""","""_report_""")" q
 i $l(group) d
 .i $$open^LVBCTTWT(group,"Y")
 .s xx="" f  q:$$fetch^LVBCTTWT(group,"Y")  s xx=xx_$s($l(xx):",",1:"")_$p(PLIST(2),$c(1))
 .i $$close^LVBCTTWT()
 .i $l(xx) s TestList=xx
 k ^TMP($zn,$j,"EPIS"),^TMP($zn,$j,"COL")
 d
 .s max=6
 .i MAX s max=MAX q
 .i MAX="No" s max=999 q
 .i MAX="",'$$select^LVBCTRG(report),$l(PLIST(7)) s max=PLIST(7) q
 .i MAX="",'$$select^MVBCFLAB(1),$l(PLIST(14)) s max=PLIST(14) q
 k CFSM i '$$select^MVBCFSM(1) m CFSM=PLIST
 s col=$s(cOrder="L":max,1:1)
 f j=1:1:$l(visit,$c(28)) s visit(j)=$p($p(visit,$c(28),j),$c(1))
 s ur=visit(20),date=+visit(12),time=visit(13) i (time=CFSM(8))!(time="") s time=visit(62)
 s ^TMP($zn,$j,"COL",col)=epis
 s ^TMP($zn,$j,"EPIS",epis)=col
 i $l(ur) s stop=0 d
 . ; resort episodes
 .k ^TMP($zn,$j,"resort")
 .s x1="" f  s x1=$o(^TDEBi(ur,"DATE",x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TDEBi(ur,"DATE",x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TDEBi(ur,"DATE",x1,x2,x3)) q:x3=""  d
 ....i '$$select^LVBEPVIS(x3,"Y") d
 .....i CFSM(8)=PLIST(13) s PLIST(13)=PLIST(62)
 .....i PLIST(13)="" s PLIST(13)=PLIST(62)
 .....i PLIST(13)="" s PLIST(13)=" "
 .....s ^TMP($zn,$j,"resort",x1,PLIST(13),x3)=""
 .f  d:$l(date)  s date=$o(^TMP($zn,$j,"resort",date),-1) q:date=""  q:stop
 ..f  d:$l(time)  s time=$o(^TMP($zn,$j,"resort",date,time),-1) q:time=""  q:stop
 ...s ep="" f  s ep=$o(^TMP($zn,$j,"resort",date,time,ep)) q:ep=""  d  q:stop
 ....f j=1:1:$l(TestList,",") s test=$p(TestList,",",j) i $l(test) d  q:stop
 .....s cnt="" f  s cnt=$o(^TEPI(ep,1,test,cnt)) q:cnt=""  d  q:stop
 ......i '$d(^TMP($zn,$j,"EPIS",ep)) d
 .......i cOrder="L" s col=col-1 i col=1 s stop=1
 .......i cOrder'="L" s col=col+1 i col=max s stop=1
 .......s ^TMP($zn,$j,"COL",col)=ep
 .......s ^TMP($zn,$j,"EPIS",ep)=col
 k PLIST s col="" f j=1:1 s col=$o(^TMP($zn,$j,"COL",col)) q:col=""  s PLIST(j)=^(col)
 k ^TMP($zn,$j,"EPIS"),^TMP($zn,$j,"COL"),^TMP($zn,$j,"resort")
 s PLIST=$o(PLIST(""),-1)
 q
CumListFixed(ReportGroup,epis,visit,cOrder,dh1,dh2,SORT) n (ReportGroup,epis,visit,cOrder,dh1,dh2,SORT,PLIST,ReportType,PAR1,Master,sort) s ReportType=""
 s ReportGroup=$g(ReportGroup),epis=$g(epis),visit=$g(visit),cOrder=$g(cOrder),dh1=$g(dh1),dh2=$g(dh2),SORT=$g(SORT)
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","DREP0")),"\",1)
 i $l(%routine) s LineRoutine="CumListFixed^"_%routine i $l($t(@LineRoutine)) x "d CumListFixed^"_%routine_"("""_ReportGroup_""","""_epis_""","""_visit_""","""_cOrder_""","""_dh1_""","""_dh2_""","""_SORT_""")" q
 k ^TMP($zn,$j,"EPIS"),^TMP($zn,$j,"COL")
 d
 .s max=6
 .i '$$select^LVBCTRG(ReportGroup),$l(PLIST(7)) s max=PLIST(7) q
 .i '$$select^MVBCFLAB(1),$l(PLIST(14)) s max=PLIST(14) q
 s col=$s(cOrder="L":max,1:1)
 f j=1:1:$l(visit,$c(28)) s visit(j)=$p($p(visit,$c(28),j),$c(1))
 s ur=visit(20),zn="PRTDR00"
 k CFSM i '$$select^MVBCFSM(1) m CFSM=PLIST
 i $l(ur) s (col,EpisCol)=0 d
 . ; resort episodes
 .k ^TMP($zn,$j,"resort")
 .s x1="" f  s x1=$o(^TDEBi(ur,"DATE",x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TDEBi(ur,"DATE",x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TDEBi(ur,"DATE",x1,x2,x3)) q:x3=""  d
 ....i '$$select^LVBEPVIS(x3,"Y") d
 .....i CFSM(8)=PLIST(13) s PLIST(13)=PLIST(62)
 .....i PLIST(13)="" s PLIST(13)=PLIST(62)
 .....i PLIST(13)="" s PLIST(13)=" "
 .....s ^TMP($zn,$j,"resort",x1,PLIST(13),x3)=""
 .s date="" f  s date=$o(^TMP($zn,$j,"resort",date)) q:date=""  d
 ..s time="" f  s time=$o(^TMP($zn,$j,"resort",date,time)) q:time=""  d
 ...s ep="" f  s ep=$o(^TMP($zn,$j,"resort",date,time,ep)) q:ep=""  d
 ....s (epstop,ts)="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  d
 .....s x=$$test^LVBCOM07(ts,dh1,dh2,PAR1),report=$p(x,$c(1)),depseq=$p(x,$c(1),2),dep=$p(x,$c(1),3),tsseq=$p(x,$c(1),4),group=$p(x,$c(1),5),sectseq=$p(x,$c(1),6),sect=$p(x,$c(1),7),reportFormat=$p(x,$c(1),8)
 .....i ReportGroup'=report q
 .....i 'epstop s epstop=1,col=col+1,^TMP($zn,$j,"EPIS",col)=ep i ep=epis s EpisCol=col
 .....i '$d(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,ts)) d
 ......i reportFormat'="N" d
 .......s ts0=+$o(^TEPI(epis,1,ts,"")) i ts0,$$status^LVBVIS1(epis_"||"_ts_"||"_ts0)'="A" s ts0=0
 .......s ^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,ts,ts0)=""
 .i EpisCol d
 ..s jstart=(EpisCol\max-('(EpisCol#max)))*max+1 f jend=jstart:1:jstart+max-1 q:'$d(^TMP($zn,$j,"EPIS",jend+1))
 ..i cOrder="L" s x2=0 f x1=jstart:1:jend s x2=x2+1,^TMP($zn,$j,"COL",x2)=^TMP($zn,$j,"EPIS",x1)
 ..i cOrder'="L" s x2=0 f x1=jend:-1:jstart s x2=x2+1,^TMP($zn,$j,"COL",x2)=^TMP($zn,$j,"EPIS",x1)
 .. ; add ALL empty tests to print
 ..k xx s x="" f  s x=$o(^TMP($zn,$j,"COL",x)) q:x=""  s ep=^(x) d
 ...s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  s xx(ts)=""
 ..s ts="" f  s ts=$o(xx(ts)) q:ts=""  d
 ...s x=$$test^LVBCOM07(ts,dh1,dh2,PAR1),report=$p(x,$c(1)),depseq=$p(x,$c(1),2),dep=$p(x,$c(1),3),tsseq=$p(x,$c(1),4),group=$p(x,$c(1),5),sectseq=$p(x,$c(1),6),sect=$p(x,$c(1),7),reportFormat=$p(x,$c(1),8)
 ...i ReportGroup'=report q
 ...i '$d(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,ts)) d
 ....i reportFormat'="N" d
 .....s ts0=+$o(^TEPI(epis,1,ts,"")) i ts0,$$status^LVBVIS1(epis_"||"_ts_"||"_ts0)'="A" s ts0=0
 .....s ^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,ts,ts0)=""
 k PLIST m PLIST=^TMP($zn,$j,"COL") k ^TMP($zn,$j,"EPIS"),^TMP($zn,$j,"COL"),^TMP($zn,$j,"resort")
 s PLIST=$o(PLIST(""),-1) i PLIST=max s ReportType="Final"
 q
copies() s copy=""
 i PAR1="F" d
 .i dh1="D" d
 ..i dh2=$p(VISIT(15),$c(1)) s copy=$s($l(VISIT(85)):VISIT(85),1:DOC(39))
 ..i dh2'=$p(VISIT(15),$c(1)) s copy=DOC(39)
 .i dh1="H",HOSP(20)'="" s copy=HOSP(20)
 i PAR1'="F" d
 .i dh1="D" d
 ..i dh2=$p(VISIT(15),$c(1)) s copy=$s($l(VISIT(85)):VISIT(85),1:DOC(14))
 ..i dh2'=$p(VISIT(15),$c(1)) d
 ...i $$open^LVBVISDC(Master)
 ...f  q:$$fetch^LVBVISDC(Master)  d  i copy q
 ....i $p(dh2,"-",1)="xxx",$p($p(dh2,"-",3,99),"^")=$p(PLIST(4),$c(1)) s copy=PLIST(14)
 ....i $p(dh2,"-",1)'="xxx",dh2=$p(PLIST(3),$c(1)) s copy=PLIST(14)
 ...i $$close^LVBVISDC()
 .i dh1="H" d
 ..i dh2=$p(VISIT(22),$c(1)) s copy=HOSP(11)
 ..i dh2'=$p(VISIT(22),$c(1)) d
 ...i $$open^LVBVISDC(Master)
 ...f  q:$$fetch^LVBVISDC(Master)  d  i copy q
 ....i $p(dh2,"-",1)'="xxx",dh2=$p(PLIST(17),$c(1)) s copy=PLIST(14)
 ...i $$close^LVBVISDC()
 s:copy="" copy=1
 q copy
 ; update printed status
updPS s zn="PRTDR00"
 s (list,report)="" f  s report=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report)) q:report=""  d
 .s sort="" f  s sort=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort),-1) q:sort=""  d
 ..s epis="" f  s epis=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis)) q:epis=""  d
 ...s updated=0
 ...s depseq="" f  s depseq=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq)) q:depseq=""  d
 ....s dep="" f  s dep=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep)) q:dep=""  d
 .....s sectseq="" f  s sectseq=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq)) q:sectseq=""  d
 ......s sect="" f  s sect=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect)) q:sect=""  d
 .......s tsseq="" f  s tsseq=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq)) q:tsseq=""  d
 ........s group="" f  s group=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group)) q:group=""  d
 .........s test="" f  s test=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,test)) q:test=""  d
 ..........s word=$$seldata^LVBCTTS(test,54)
 ..........s tscnt="" f  s tscnt=$o(^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,test,tscnt)) q:tscnt=""  i tscnt d
 ...........i (word'="Y")!(PAR7="Y") d
 ............s vtsRID=epis_"||"_test_"||"_tscnt,list=list_$s($l(list):",",1:"")_vtsRID
 ............i $$status^LVBVIS1(vtsRID)="A",'$$select^LVBVISTS(vtsRID,"Y"),PLIST(31)'="Y" s PLIST(31)="Y" i '$$update^LVBVISTS(vtsRID) s updated=1
 ...........i word="Y",PAR7'="Y" d
 ............s x=^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,test,tscnt)
 ............k ^TMP(zn,$j,"LIST",dh1,SORT,dh2,Master,report,sort,epis,depseq,dep,sectseq,sect,tsseq,group,test,tscnt)
 ............d
 .............i $$select^LVBEPVIS(Master) q
 .............k VISIT m VISIT=PLIST k ^TMP("REPORT",$j)
 .............k DOC,HOSP
 .............i dh1="D" d
 ..............i $p(dh2,"-")'="xxx",'$$select^LVBCTDR(dh2,"Y") m DOC=PLIST
 ..............i $p(dh2,"-")="xxx" d
 ...............k DOC f j=1:1:60 s DOC(j)=""
 ...............s DOC(3)=$p($p(dh2,"-",3,99),"^"),(DOC(39),DOC(14))=$p($p(dh2,"-",3,99),"^",7) f j=2:1:6 s DOC(j+7)=$p($p(dh2,"-",3,99),"^",j)
 ...............i '$$select^LVBCTDR(VISIT(15),"Y") s DOC(34)=PLIST(34)
 .............i dh1="H",'$$select^LVBCTHOS(dh2,"Y") m HOSP=PLIST
 ............s xCopy=$$copies()
 ............i xCopy s ^TRPT("WORD",0,PAR1,PAR2,dh1,dh2,Master,epis,test,tscnt)=$tr($h,",","\")_"\"_$p(x,"\",1)_"\"_$p(x,"\",2)_"\"_xCopy
 ............i CONFIG(36)="Y",dh1="D",$p(VISIT(15),$c(1))=DOC(2) d
 .............i $$open^LVBVISDC(Master)
 .............f copycnt=1:1 q:$$fetch^LVBVISDC(Master)  d
 ..............s CopyToDoctor(copycnt)="" f j=1:1:PLIST s $p(CopyToDoctor(copycnt),$c(1),j)=$p(PLIST(j),$c(1))
 .............i $$close^LVBVISDC()
 .............s copycnt="" f  s copycnt=$o(CopyToDoctor(copycnt)) q:copycnt=""  d
 ..............k PLIST f j=1:1:$l(CopyToDoctor(copycnt),$c(1)) s PLIST(j)=$p(CopyToDoctor(copycnt),$c(1),j)
 ..............s CopyDoc=$p(PLIST(3),$c(1)),CopyLoc=$p(PLIST(17),$c(1)) d
 ............... ; doctor exist in CT_Doctor
 ...............i $l(CopyDoc),'$$select^LVBCTDR(CopyDoc,"Y") k DOC m DOC=PLIST d  q
 ................i $p(CopyToDoctor(copycnt),$c(1),14) s DOC(14)=$p(CopyToDoctor(copycnt),$c(1),14)
 ................i PAR1="F",DOC(39)'="" s copy=DOC(39)
 ................e  s copy=DOC(14) s:copy="" copy=1
 ................i copy s ^TRPT("WORD",0,PAR1,PAR2,dh1,DOC(2),Master,epis,test,tscnt)=$tr($h,",","\")_"\"_$p(x,"\",1)_"\"_$p(x,"\",2)_"\"_copy
 ............... ; location exist in CT_Hospital
 ...............i $l(CopyLoc),'$$select^LVBCTHOS(CopyLoc,"Y") k HOSP m HOSP=PLIST d  q
 ................i $p(CopyToDoctor(copycnt),$c(1),14) s HOSP(11)=$p(CopyToDoctor(copycnt),$c(1),14)
 ................i PAR1="F",HOSP(20)'="" s copy=HOSP(20)
 ................e  s copy=HOSP(11) s:copy="" copy=1
 ................i copy s ^TRPT("WORD",0,PAR1,PAR2,"H",HOSP(2),Master,epis,test,tscnt)=$tr($h,",","\")_"\"_$p(x,"\",1)_"\"_$p(x,"\",2)_"\"_copy
 ............... ; doctor does not exist in CT_Doctor
 ...............k DOC f j=1:1:40 s DOC(j)=""
 ...............s DOC(3)=PLIST(4),DOC(8)=PLIST(11),DOC(5)=PLIST(13),(DOC(39),DOC(14))=PLIST(14) f j=9:1:13 s DOC(j)=PLIST(j-4)
 ...............i PAR1="F",DOC(39)'="" s copy=DOC(39)
 ...............e  s copy=DOC(14) s:copy="" copy=1
 ...............s xx2="" f j=4:1:9,14 s xx2=xx2_$s($l(xx2):"^",1:"")_$p(CopyToDoctor(copycnt),$c(1),j)
 ...............i copy s ^TRPT("WORD",0,PAR1,PAR2,dh1,"xxx-"_$p(VISIT(15),$c(1))_"-"_xx2,Master,epis,test,tscnt)=$tr($h,",","\")_"\"_$p(x,"\",1)_"\"_$p(x,"\",2)_"\"_copy
 ...i updated,'$$select^LVBEPVIS(epis,"Y"),$$update^LVBEPVIS(epis)
 q
xxTS(rid) n (rid) s report=""
  ;---&SQL(SELECT CTTSN_ReportPageType_DR INTO :report FROM CT_TestSetReportPage WHERE CTTSN_RowID=:rid)
   ;--- ** SQL PUBLIC Variables: SQLCODE, report, rid
 Do %0Ao
 q report
xxTG(rid) n (rid) s report=""
  ;---&SQL(SELECT CTTWA_ReportPageType_DR INTO :report FROM CT_TestWorkGroupReportPage WHERE CTTWA_RowID=:rid)
   ;--- ** SQL PUBLIC Variables: SQLCODE, report, rid
 Do %0Co
 q report
test(xxTest,dh1,dh2,PAR1) n (xxTest,dh1,dh2,PAR1) s xxTest=$g(xxTest),dh1=$g(dh1),dh2=$g(dh2),PAR1=$g(PAR1)
 s (report,depseq,dep,tsseq,sect,sectseq,reportFormat)=""
 k CTTS f j=18,21,26,43,46,62 s CTTS(j)=$$seldata^LVBCTTS(xxTest,j)
 s group=$g(CTTS(46))
 i $l(group) d
 .  ;---&SQL(SELECT CTTWG_ReportPage_Doctor_DR,CTTWG_ReportPage_Hospital_DR INTO :report1,:report2 FROM CT_TestSet_WorkGroup WHERE CTTWG_RowID=:group)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, group, report1, report2
 . Do %0Eo
 .s report=$s(dh1="D":$g(report1),dh1="H":$g(report2),1:"")
 .i dh1="D" s rid=group_"||D||"_dh2,xx=$$xxTG(rid) i $l(xx) s report=xx
 .i dh1="H" s rid=group_"||L||"_dh2,xx=$$xxTG(rid) i $l(xx) s report=xx
 . ;---s DepOrder="" &SQL(SELECT CTRG_DepartmentOrder,CTRG_Format INTO :DepOrder,:reportFormat FROM CT_ReportPage WHERE CTRG_RowID=:report)
  . ;--- ** SQL PUBLIC Variables: DepOrder, SQLCODE, report, reportFormat
 .s DepOrder="" Do %0Go
 . ;---i $p(DepOrder,$c(1))="Y" &SQL(SELECT CTTWG_Department_DR,CTTWG_Department_DR->CTDEP_PrintSequence,CTTWG_Section_DR,CTTWG_Section_DR->CTDS_PrintSequence,CTTWG_PrintSeq INTO :dep,:depseq,:sect,:sectseq,:tsseq FROM CT_TestSet_WorkGroup WHERE CTTWG_RowID=:group)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, dep, depseq, group, sect, sectseq, tsseq
 .i $p(DepOrder,$c(1))="Y" Do %0Io
 . ;---i $p(DepOrder,$c(1))'="Y" &SQL(SELECT CTTWG_PrintSeq INTO :tsseq FROM CT_TestSet_WorkGroup WHERE CTTWG_RowID=:group)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, group, tsseq
 .i $p(DepOrder,$c(1))'="Y" Do %0Ko
 i '$l(group) d
 .i dh1="D" s report="" d
 ..i '$l(report),$p(dh2,"-")'="xxx" s rid=xxTest_"||D||"_dh2,report=$$xxTS(rid)
 ..i '$l(report) s report=$g(CTTS(21))
 ..s report=$p(report,$c(1))
 .i dh1="H" s report="" d
 ..i '$l(report) s rid=xxTest_"||L||"_dh2,report=$$xxTS(rid)
 ..i '$l(report) s report=$g(CTTS(43))
 ..s report=$p(report,$c(1))
 . ;---s DepOrder="" &SQL(SELECT CTRG_DepartmentOrder,CTRG_Format INTO :DepOrder,:reportFormat FROM CT_ReportPage WHERE CTRG_RowID=:report)
  . ;--- ** SQL PUBLIC Variables: DepOrder, SQLCODE, report, reportFormat
 .s DepOrder="" Do %0Mo
 .i PAR1="F",$p(reportFormat,$c(1))="N" d
 ..s (report,reportFormat)=""
 ..i dh1="D" d
 ...s report=$g(CTTS(21))
 ...  ;---&SQL(SELECT CTTS_ReportPage_Doctor_DR->CTRG_Format INTO :reportFormat FROM CT_TestSet WHERE CTTS_RowID=:xxTest)
  ...  ;--- ** SQL PUBLIC Variables: SQLCODE, reportFormat, xxTest
 ... Do %0Oo
 ..i dh1="H" s report="" d
 ...s report=$g(CTTS(43))
 ...  ;---&SQL(SELECT CTTS_ReportPage_Hospital_DR->CTRG_Format INTO :reportFormat FROM CT_TestSet WHERE CTTS_RowID=:xxTest)
  ...  ;--- ** SQL PUBLIC Variables: SQLCODE, reportFormat, xxTest
 ... Do %0Qo
 . ;---i $p(DepOrder,$c(1))="Y" s dep=$g(CTTS(26)),tsseq=$g(CTTS(18)),sect=$g(CTTS(62)) &SQL(SELECT CTTS_Department_DR->CTDEP_PrintSequence,CTTS_Section_DR->CTDS_PrintSequence INTO :depseq,:sectseq FROM CT_TestSet WHERE CTTS_ROWID=:xxTest)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, depseq, sectseq, xxTest
 .i $p(DepOrder,$c(1))="Y" s dep=$g(CTTS(26)),tsseq=$g(CTTS(18)),sect=$g(CTTS(62)) Do %0So
 .i $p(DepOrder,$c(1))'="Y" s tsseq=$g(CTTS(18))
 s report=$p(report,$c(1)),dep=$p(dep,$c(1)),depseq=$p(depseq,$c(1)),sect=$p(sect,$c(1)),sectseq=$p(sectseq,$c(1)),tsseq=$p(tsseq,$c(1)),group=$p(group,$c(1)),reportFormat=$p(reportFormat,$c(1))
 s:report="" report=" " s:dep="" dep=" " s:depseq="" depseq=" " s:tsseq="" tsseq=" " s:group="" group=" " s:sect="" sect=" " s:sectseq="" sectseq=" " s:reportFormat="" reportFormat=" "
 q report_$c(1)_depseq_$c(1)_dep_$c(1)_tsseq_$c(1)_group_$c(1)_sectseq_$c(1)_sect_$c(1)_reportFormat
check(client) n (client) s client=$g(client),result=100,x=""
 s $zt="cherr^"_$zn
 s x=$o(^SS("REPORT-GENERIC",x)) i (x="")!'result g chend
 s x1=$p(^(x),"^",2),x2=""
 f j=$l(x1):-1:2 i $e(x1,j-1,j)="01" s x2=$e(x1,1,j-2)_client_$e(j+1,$l(x1)) q
 i $l(x2) s xx="zl @x2" x xx s result=0
cherr g check+1
chend q result
populate n
 s client="" f  s client=$o(^SS("Client",client)) q:client=""  d
 .s alt=$p($g(^SS("Client",client)),"\",2)
 .s x="" f  s x=$o(^SS("Client",client,x)) q:x=""  i x'=0 k ^SS("Client",client,x)
 .s x="" f  s x=$o(^SS("REPORT-GENERIC",x)) q:x=""  s x1=$p(^(x),"^",2) d
 .. ; check client routine
 ..s x2="" f j=$l(x1):-1:2 i $e(x1,j-1,j)="01" s x2=$e(x1,1,j-2)_client_$e(x1,j+1,$l(x1)) q
 ..i x="TBL" s x2=x1
 ..i $l(x2),$l($t(+1^@x2)) s ^SS("Client",client,x)=x2 q
 .. ; check alternative client routine
 ..i $l(alt) d
 ...s x2="" f j=$l(x1):-1:2 i $e(x1,j-1,j)="01" s x2=$e(x1,1,j-2)_alt_$e(x1,j+1,$l(x1)) q
 ...i x="TBL" s x2=x1
 ...i $l(x2),$l($t(+1^@x2)) s ^SS("Client",client,x)=x2
 q
client(client) n (client,PLIST) s client=$g(client),(cnt,x)="" k PLIST
 s x="" f  s x=$o(^SS("REPORT-GENERIC",x)) q:x=""  d
 .s x2=$p(^(x),"^",2) i $d(^SS("Client",client,x)) s x2=^(x)
 .i $p($g(^TTAB("REPORT-GENERIC",x)),"\",1)'=x2 s $p(^TTAB("REPORT-GENERIC",x),"\",1)=x2,cnt=cnt+1,PLIST(cnt)=x_"\"_x2
 q 0
 ; calculate soundex
valid(text) n (text) s text=$g(text),soundex=""
 i $l(text) d
 .s text=$$UPPER^SSUTIL4(text)
 .s text=$e(text)_$tr($e(text,2,$l(text)),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","01230120022455012623010202")
 . ; eliminate doubles
 .s soundex="" f j=1:1:$l(text) d
 ..i j>1,$e(text,j-1)=$e(text,j) q
 ..s soundex=soundex_$e(text,j)
 .i $tr($e(soundex),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","01230120022455012623010202")=$e(soundex,2) s soundex=$e(soundex)_$e(soundex,3,$l(soundex))
 .s soundex=$tr(soundex,"0"),soundex=$e(soundex_"0000",1,4)
 q $s('$l(soundex):" ",1:soundex)
 ; Return : 0 - OK
 ;          1 - InActive         - stop
 ;          2 - User             - stop
 ;          3 - Multiple         - stop
 ;          4 - Sex              - stop
 ;          5 - Billed           - info
 ;          6 - Specimen         - info
 ;          7 - pcReferrence-Yes - info
 ;          8 - pcReferrence-No  - info
 ;              Dynamic function test (DFT_code_date_time)
TSadd(epis,ts,user,sex,mrn,cdate,ctime,pc) n (epis,ts,user,sex,mrn,cdate,ctime,pc,PLIST)
 s epis=$g(epis),ts=$g(ts),user=$g(user),sex=$g(sex),mrn=$g(mrn),cdate=$g(cdate),ctime=$g(ctime),pc=$g(pc)
 s l=$i(^TMPlog("log")) m ^TMPlog("log",l)=PLIST
 s ^TMPlog("log",l)=$h_" : "_$j_" : $$TSadd^"_$zn_" : "_$g(epis)_"^"_$g(ts)_"^"_$g(user)_"^"_$g(sex)_"^"_$g(mrn)_"^"_$g(cdate)_"^"_$g(ctime)
 s ok=0,ok1=""
 k ^TMP($zn,$j) f j=1:1:PLIST d
 .s xx1=$p(PLIST(j),"\",1),xx2=$p(PLIST(j),"\",2)
 .i xx1="TS" d
 ..s ^TMP($zn,$j,"IN-TS")=""
 ..i $l(xx2) s ^TMP($zn,$j,"IN-TS",xx2)=$g(^TMP($zn,$j,"IN-TS",xx2))+1
 .i xx1="SP" d
 ..s ^TMP($zn,$j,"IN-SP")=""
 ..i $l(xx2),xx2'="***Empty***" s ^TMP($zn,$j,"IN-SP",xx2)=$g(^TMP($zn,$j,"IN-SP",xx2))+1
 s pe=$$seldata^MVBCFLAB(1,97)
 i '$d(^TMP($zn,$j,"IN-TS")),'$$getall^LVBVISTS(epis,,,,,,,,"ALL") f j=1:1:PLIST d
 .s xx=$p($p(PLIST(j),$c(2),3),$c(1))
 .i $l(xx) s ^TMP($zn,$j,"IN-TS",xx)=$g(^TMP($zn,$j,"IN-TS",xx))+1
 i '$d(^TMP($zn,$j,"IN-SP")),'$$getall^LVBVISSP(epis) f j=1:1:PLIST d
 .s xx=$p($p(PLIST(j),$c(2),3),$c(1))
 .i $l(xx) s ^TMP($zn,$j,"IN-SP",xx)=$g(^TMP($zn,$j,"IN-SP",xx))+1
 ; TS is Active
 i 'ok s xx=$$seldata^LVBCTTS(ts,14) i $p(xx,$c(1))="N" s ok=1
 ; TS is available for the user
 i 'ok,$l(user),$$ValUser^LVBCTTS(user,ts)'=0 s ok=2
 ; TS multiple allowed
 i 'ok,$d(^TMP($zn,$j,"IN-TS",ts)) s xx=$$seldata^LVBCTTS(ts,13) i $p(xx,$c(1))="N" s ok=3
 ; TS is available for the sex
 i 'ok d
 .i '$l(sex) s sex=$$seldata^LVBEPVIS(epis,5)
 .i $l(sex) s xx=$$seldata^LVBCTTS(ts,16) i $l(xx),","_xx_","[(","_sex_",") s ok=4
 ; Episode is already billed
 i 'ok s xx=$$seldata^LVBEPVIS(epis,21) i $p(xx,$c(1))'="" s ok1=ok1_$s($l(ok1):$c(2),1:"")_5
 ; TS check specimen (not for Spain)
 i 'ok,pe'="S" d
 .i $$getall^LVBCTTSS(ts)
 .s x=1 f j=1:1:PLIST s xx=$p(PLIST(j),$c(2),3) i $l(xx),$d(^TMP($zn,$j,"IN-SP",xx)) s x=0 q
 .i x s ok1=ok1_$s($l(ok1):$c(2),1:"")_6 m ^TMP($zn,$j,"OUT")=PLIST
 ; pcReference required
 i 'ok,'$$select^LVBCTPCE(pc_"||"_ts) d
 .i $l($p($g(^CF("SM",1)),"^",28)),$l($t(@("pcReference^"_$zn_$p(^CF("SM",1),"^",28)))) d @("pcReference^"_$zn_$p(^CF("SM",1),"^",28)) q
 .i PLIST(3)'="Y" s ok1=ok1_$s($l(ok1):$c(2),1:"")_7
 .i PLIST(3)="Y" s ok1=ok1_$s($l(ok1):$c(2),1:"")_8
 ; TS check DFT
 i $l(mrn) d
 .s (x1,stop)="" f  s x1=$o(^TTAB("DF",x1)) q:x1=""  i $d(^TTAB("DF",x1,"TEST",ts)) d  q
 ..s time=$p(^TTAB("DF",x1),"\",4),mess=$p(^TTAB("DF",x1),"\",3)
 ..s (x2,x3,x4,x5)="" f  s x2=$o(^TEPIi("DFT",mrn,x1,x2)) q:x2=""  d  q:stop
 ...s x3="" f  s x3=$o(^TEPIi("DFT",mrn,x1,x2,x3)) q:x3=""  d  q:stop
 ....i $p($g(^TEPIi("DFT",mrn,x1,x2,x3)),"\",1)'="Y" s stop=1
 ..i '($l(x2)!$l(x3)) d
 ...s z2="" f  s z2=$o(^TEPIi("DFT",mrn,x1,z2)) q:z2=""  q:z2>cdate  d
 ....s z3="" f  s z3=$o(^TEPIi("DFT",mrn,x1,z2,z3)) q:z3=""  q:(z2=cdate)&(z3>ctime)  d
 .....i $p($g(^TEPIi("DFT",mrn,x1,z2,z3)),"\",1)="Y",((cdate-z2)*3600)+(ctime-z3)<(time*3600) s x4=time,x5=mess
 ..s x=$o(^TMP($zn,$j,"OUT",""),-1)+1,^TMP($zn,$j,"OUT",x)="*DFT*"_$c(1)_x1_$c(1)_x2_$c(1)_x3_$c(1)_x4_$c(1)_x5
 k PLIST m PLIST=^TMP($zn,$j,"OUT")
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q ok_$c(1)_ok1
 ; pcReference required
TSpcCheck(ts,pc) n (ts,pc) s ts=$g(ts),pc=$g(pc),result=""
 i '$$select^LVBCTPCE(pc_"||"_ts) d
 .s x1=$$seldata^MVBCFLAB(1,12),x2=$$seldata^LVBCTPC(x1,3)
 .s result=$p(x1,$c(1))_$c(1)_$p(x2,$c(1))
 q result
IS ; Standard comments
IX ; Free Text
 s width=tsWD-$p(FORMAT(cnt),$c(2),7) i width'>0 s width=0
 i 'width k result s result=""
 n (result,tc,width,lan) s resultsave=result ; ****
 s result=$tr(result,"{}[]"),result=$tr(result,$c(16,17,18),"^\|") ; ****
 d
 .i $l(result),$l(result)<30,$d(^TTAB("TC",tc,2,result)) d  s result="" q
 ..k res s x=0 f i=1:1 s x=$o(^TTAB("TC",tc,2,result,"T",x)) q:x=""  s res(i)=$tr(^(x),$c(16,17,18),"^\|")
 ..i $l($g(lan)),$d(^TTAB("TC",tc,"2L",result,lan)) k res s x=0 f i=1:1 s x=$o(^TTAB("TC",tc,"2L",result,lan,x)) q:x=""  s res(i)=$tr(^(x),$c(16,17,18),"^\|")
 .. ; adjust width of the free text to a width of the report
 ..s x="" f  s x=$o(res(x)) q:x=""  s line=res(x) d
 ...f  q:$l(line)'>width  d
 ....f xx1=1:1 i $l($p(line," ",1,xx1))>width s l1=$p(line," ",1,xx1-1),line=$p(line," ",xx1,$l(line," ")) q
 ....i l1="" s l1=$e(line,1,width),line=$e(width+1,$l(line))
 ....s xx2=$o(result(""),-1)+1,result(xx2)=l1
 ...s xx2=$o(result(""),-1)+1,result(xx2)=line
 .s result=resultsave,result=$tr(result,$c(16,17,18),"^\|") ; ****
 q
IB2 ; Blood Group
 n (result,FORMAT,cnt)
 i $d(^TTAB("BB-BG",result)) s result(1)=$p(^(result),"\",1),result="" q
 q
IB3 ; Antibodies
 n (result,FORMAT,cnt)
 i $d(^TTAB("BB-GEN",result)) s result(1)=$p(^(result),"\",2),result="" q
 q
IN ; Numeric
 n (result,FORMAT,cnt,lan)
 i $d(^TTAB("RC",result)) d  q
 .i $l($g(lan)),$d(^TTAB("RC",result,"LAN",lan)) s result(1)=$p(^(lan),"\",1),result="" q
 .s result(1)=$p(^TTAB("RC",result),"\",1),result=""
 s Flag="" f  q:'$l(result)  q:"<>+-"'[$e(result)  s Flag=Flag_$e(result),result=$e(result,2,$l(result))
 i (result?1.N.E)!(result?1"."1.N.E) s result=+result
 i (result'?.N.1".".N)!(result="")!(result=".") q
 s decimal=$e($p(FORMAT(cnt),$c(2),18),2,4),sigRequired=$p(FORMAT(cnt),$c(2),21) 
 s result=$j(result,0,decimal),xResult=""
 i sigRequired s stop=0 f  d  q:stop
 .i $$sigFound(result)'>sigRequired s stop=1 q
 .i decimal s decimal=decimal-1,result=$j(result,0,decimal) q
 .i '$l(xResult) s xResult=result
 .s ex=1 f j=$l(result):-1:1 q:$e(result,j)  s ex=ex+1
 .s result=$j(xResult/(10**ex),0,0)*(10**ex)
 s result=Flag_result,result=$j(result,$p(FORMAT(cnt),$c(2),19))
 q
sigFound(result) s sigFound=0
 s (sf,sl)="" f j=1:1:$l(result) d
 .i 'sf,$e(result,j) s sf=j q
 .i sf,$e(result,j) s sl=j q
 f j=1:1:$l(result) d
 .i $e(result,j) s sigFound=sigFound+1 q
 .i sigFound,$e(result,1,j-1)[".",$e(result,j)="0" s sigFound=sigFound+1 q
 .i sigFound,result[".",$e(result,j)="0" s sigFound=sigFound+1 q
 .i j>sf,j<sl,$e(result,j)="0" s sigFound=sigFound+1 q
 q sigFound
IA ; Audit
 s width=tsWD-$p(FORMAT(cnt),$c(2),7) i width'>0 s width=0
 i 'width k result s result=""
 n (result,tc,width,lan,type)
 i (type="P")!(type="V") s xx=$p(result,";",$l(result,";"))
 e  s xx=result
 f jk=1:1:$l(xx,";") s xx007=$p(xx,";",jk) d
 .s result=$tr($p(xx007,",",1),"{}[]")
 .i $l(result),$l(result)<30,$d(^TTAB("TC",tc,2,result)) d  s result=""
 ..k res s x=0 f i=1:1 s x=$o(^TTAB("TC",tc,2,result,x)) q:x=""  s res(i)=$tr(^(x),$c(16,17,18),"^\|")
 ..i $l($g(lan)),$d(^TTAB("TC",tc,"2L",result,lan)) k res s x=0 f i=1:1 s x=$o(^TTAB("TC",tc,"2L",result,lan,x)) q:x=""  s res(i)=$tr(^(x),$c(16,17,18),"^\|")
 ..i $d(res) d
 ...s xxx="["_$$extdate2^SSUTIL4($p(xx007,",",4))_" "_$$exttime^SSUTIL4($p(xx007,",",5))_" "_$p(xx007,",",3)_"] "
 ...i $d(res(2))!(($l(res(1))+$l(xxx)+1)>width) s res(0)=xxx
 ...e  s res(1)=res(1)_" "_xxx
 ... ; adjust width of the free text to a width of the report
 ...s x="" f  s x=$o(res(x)) q:x=""  s line=res(x) d
 ....f  q:$l(line)'>width  d
 .....f xx1=1:1 i $l($p(line," ",1,xx1))>width s l1=$p(line," ",1,xx1-1),line=$p(line," ",xx1,$l(line," ")) q
 .....i l1="" s l1=$e(line,1,width),line=$e(width+1,$l(line))
 .....s xx2=$o(result(""),-1)+1,result(xx2)=l1
 ....s xx2=$o(result(""),-1)+1,result(xx2)=line
 q
IV ; Micro Pathogen
 i $d(^TTAB("BUG",result)) s result=$p(^TTAB("BUG",result),"\",1) q
 q
ID ; Date
 i result?5N s result=$$extdate2^SSUTIL4(result)
 q
IT ; Time
 i result?1.5N s result=$$exttime^SSUTIL4(result)
 q
IY ; Yes/No
 s result=$s("Yy"[result:"Yes",1:"No")
 q
IZ ; Special fields
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(4)=$g(rid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTAB("TS",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
 e  g %0ABdun
 s report=$g(^TTAB("TS",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(3),"||",1),7,$p(%mmmsqld(3),"||",2),$p(%mmmsqld(3),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("TS",$p(%mmmsqld(3),"||",1),7,$p(%mmmsqld(3),"||",2),$p(%mmmsqld(3),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetReportPage for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTAB("TS",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
 e  g %0ACdun
 s report=$g(^TTAB("TS",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(4)=$g(rid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTAB("GR",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
 e  g %0CBdun
 s report=$g(^TTAB("GR",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("GR",$p(%mmmsqld(3),"||",1),7,$p(%mmmsqld(3),"||",2),$p(%mmmsqld(3),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("GR",$p(%mmmsqld(3),"||",1),7,$p(%mmmsqld(3),"||",2),$p(%mmmsqld(3),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestWorkGroupReportPage for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TTAB("GR",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
 e  g %0CCdun
 s report=$g(^TTAB("GR",%mmmsqld(6),7,%mmmsqld(7),%mmmsqld(8)))
%0CBuncommitted ;
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(group)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("GR",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(14)=$g(^TTAB("GR",%mmmsqld(5)))
 s report1=$p(%mmmsqld(14),"\",6) s report2=$p(%mmmsqld(14),"\",7)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTAB("GR",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("GR",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet_WorkGroup for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("GR",%mmmsqld(5)))
 e  g %0ECdun
 s %mmmsqld(19)=$g(^TTAB("GR",%mmmsqld(5)))
 s report1=$p(%mmmsqld(19),"\",6) s report2=$p(%mmmsqld(19),"\",7)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(report)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("RP",%mmmsqld(5)))
 e  g %0GBdun
 s %mmmsqld(14)=$g(^TTAB("RP",%mmmsqld(5)))
 s DepOrder=$p(%mmmsqld(14),"\",4) s reportFormat=$p(%mmmsqld(14),"\",2)
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TTAB("RP",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("RP",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ReportPage for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("RP",%mmmsqld(5)))
 e  g %0GCdun
 s %mmmsqld(19)=$g(^TTAB("RP",%mmmsqld(5)))
 s DepOrder=$p(%mmmsqld(19),"\",4) s reportFormat=$p(%mmmsqld(19),"\",2)
%0GBuncommitted ;
 s SQLCODE=0 g %0Gc
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(16)=0,%mmmsqld(17)="",%mmmsqld(18)=0,%mmmsqld(19)="",%mmmsqld(20)=0,%mmmsqld(21)=""
 s %mmmsqld(14)=$g(group)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(13)=%mmmsqld(14)
 i %mmmsqld(13)'="",$d(^TTAB("GR",%mmmsqld(13)))
 e  g %0IBdun
 s %mmmsqld(26)=$g(^TTAB("GR",%mmmsqld(13)))
 s dep=$p(%mmmsqld(26),"\",2) s sect=$p(%mmmsqld(26),"\",9) s tsseq=$p(%mmmsqld(26),"\",5)
 g:$zu(115,2)=0 %0IBuncommitted i $zu(115,2)=1 l +^TTAB("GR",$p(%mmmsqld(13),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TTAB("GR",$p(%mmmsqld(13),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet_WorkGroup for RowID value: "_%mmmsqld(13) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(13)'="",$d(^TTAB("GR",%mmmsqld(13)))
 e  g %0ICdun
 s %mmmsqld(31)=$g(^TTAB("GR",%mmmsqld(13)))
 s dep=$p(%mmmsqld(31),"\",2) s sect=$p(%mmmsqld(31),"\",9) s tsseq=$p(%mmmsqld(31),"\",5)
%0IBuncommitted ;
 s %mmmsqld(2)=dep
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  s depseq="",%mmmsqld(2)="" g %0ICp4
 s %mmmsqld(36)=$g(^TTAB("DEP",%mmmsqld(2)))
 s depseq=$p(%mmmsqld(36),"\",3)
%0ICp4 
 g:$zu(115,2)=0 %0ICuncommitted i $zu(115,2)=1 l +^TTAB("DEP",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TTAB("DEP",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Department for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  s depseq="",%mmmsqld(2)="" g %0IDp1
 s %mmmsqld(41)=$g(^TTAB("DEP",%mmmsqld(2)))
 s depseq=$p(%mmmsqld(41),"\",3)
%0IDp1 
%0ICuncommitted ;
 s %mmmsqld(5)=sect
 i %mmmsqld(5)'="",$d(^TTAB("DS",%mmmsqld(5)))
 e  s sectseq="",%mmmsqld(5)="" g %0IDp4
 s %mmmsqld(46)=$g(^TTAB("DS",%mmmsqld(5)))
 s sectseq=$p(%mmmsqld(46),"\",3)
%0IDp4 
 g:$zu(115,2)=0 %0IDuncommitted i $zu(115,2)=1 l +^TTAB("DS",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^TTAB("DS",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Sections for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 5
 i %mmmsqld(5)'="",$d(^TTAB("DS",%mmmsqld(5)))
 e  s sectseq="",%mmmsqld(5)="" g %0IEp1
 s %mmmsqld(51)=$g(^TTAB("DS",%mmmsqld(5)))
 s sectseq=$p(%mmmsqld(51),"\",3)
%0IEp1 
%0IDuncommitted ;
 s SQLCODE=0 g %0Ic
%0IEdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
%0IDdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0ICdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ic
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Kerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(group)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("GR",%mmmsqld(3)))
 e  g %0KBdun
 s %mmmsqld(12)=$g(^TTAB("GR",%mmmsqld(3)))
 s tsseq=$p(%mmmsqld(12),"\",5)
 g:$zu(115,2)=0 %0KBuncommitted i $zu(115,2)=1 l +^TTAB("GR",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("GR",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet_WorkGroup for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("GR",%mmmsqld(3)))
 e  g %0KCdun
 s %mmmsqld(17)=$g(^TTAB("GR",%mmmsqld(3)))
 s tsseq=$p(%mmmsqld(17),"\",5)
%0KBuncommitted ;
 s SQLCODE=0 g %0Kc
%0KCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0KBdun 
%0KAdun 
%0Kc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Kerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Kc
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Merr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(report)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("RP",%mmmsqld(5)))
 e  g %0MBdun
 s %mmmsqld(14)=$g(^TTAB("RP",%mmmsqld(5)))
 s DepOrder=$p(%mmmsqld(14),"\",4) s reportFormat=$p(%mmmsqld(14),"\",2)
 g:$zu(115,2)=0 %0MBuncommitted i $zu(115,2)=1 l +^TTAB("RP",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("RP",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ReportPage for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("RP",%mmmsqld(5)))
 e  g %0MCdun
 s %mmmsqld(19)=$g(^TTAB("RP",%mmmsqld(5)))
 s DepOrder=$p(%mmmsqld(19),"\",4) s reportFormat=$p(%mmmsqld(19),"\",2)
%0MBuncommitted ;
 s SQLCODE=0 g %0Mc
%0MCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0MBdun 
%0MAdun 
%0Mc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Merr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Mc
%0Oo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Oerr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(xxTest)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(5)))
 e  g %0OBdun
 s %mmmsqld(16)=$g(^TTAB("TS",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(16),"\",21)
 g:$zu(115,2)=0 %0OBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("TS",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(5)))
 e  g %0OCdun
 s %mmmsqld(21)=$g(^TTAB("TS",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",21)
%0OBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("RP",%mmmsqld(2)))
 e  s reportFormat="",%mmmsqld(2)="" g %0OCp4
 s %mmmsqld(26)=$g(^TTAB("RP",%mmmsqld(2)))
 s reportFormat=$p(%mmmsqld(26),"\",2)
%0OCp4 
 g:$zu(115,2)=0 %0OCuncommitted i $zu(115,2)=1 l +^TTAB("RP",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("RP",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ReportPage for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("RP",%mmmsqld(2)))
 e  s reportFormat="",%mmmsqld(2)="" g %0ODp1
 s %mmmsqld(31)=$g(^TTAB("RP",%mmmsqld(2)))
 s reportFormat=$p(%mmmsqld(31),"\",2)
%0ODp1 
%0OCuncommitted ;
 s SQLCODE=0 g %0Oc
%0ODdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0OCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0OBdun 
%0OAdun 
%0Oc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Oerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Oc
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(xxTest)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(5)))
 e  g %0QBdun
 s %mmmsqld(16)=$g(^TTAB("TS",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(16),"\",19)
 g:$zu(115,2)=0 %0QBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("TS",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(5)))
 e  g %0QCdun
 s %mmmsqld(21)=$g(^TTAB("TS",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",19)
%0QBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("RP",%mmmsqld(2)))
 e  s reportFormat="",%mmmsqld(2)="" g %0QCp4
 s %mmmsqld(26)=$g(^TTAB("RP",%mmmsqld(2)))
 s reportFormat=$p(%mmmsqld(26),"\",2)
%0QCp4 
 g:$zu(115,2)=0 %0QCuncommitted i $zu(115,2)=1 l +^TTAB("RP",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("RP",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ReportPage for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("RP",%mmmsqld(2)))
 e  s reportFormat="",%mmmsqld(2)="" g %0QDp1
 s %mmmsqld(31)=$g(^TTAB("RP",%mmmsqld(2)))
 s reportFormat=$p(%mmmsqld(31),"\",2)
%0QDp1 
%0QCuncommitted ;
 s SQLCODE=0 g %0Qc
%0QDdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0QCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Qc
%0So n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Serr" s %mmmsqld(12)=0,%mmmsqld(13)="",%mmmsqld(14)=0,%mmmsqld(15)="",%mmmsqld(16)=0,%mmmsqld(17)=""
 s %mmmsqld(10)=$g(xxTest)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(9)=%mmmsqld(10)
 i %mmmsqld(9)'="",$d(^TTAB("TS",%mmmsqld(9)))
 e  g %0SBdun
 s %mmmsqld(22)=$g(^TTAB("TS",%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(22),"\",52)
 s %mmmsqld(1)=$e($g(%mmmsqld(9)),1)
 g:$zu(115,2)=0 %0SBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(9),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("TS",$p(%mmmsqld(9),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet for RowID value: "_%mmmsqld(9) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(9)'="",$d(^TTAB("TS",%mmmsqld(9)))
 e  g %0SCdun
 s %mmmsqld(27)=$g(^TTAB("TS",%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(27),"\",52)
 s %mmmsqld(1)=$e($g(%mmmsqld(9)),1)
%0SBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  s depseq="",%mmmsqld(2)="" g %0SCp4
 s %mmmsqld(32)=$g(^TTAB("DEP",%mmmsqld(2)))
 s depseq=$p(%mmmsqld(32),"\",3)
%0SCp4 
 g:$zu(115,2)=0 %0SCuncommitted i $zu(115,2)=1 l +^TTAB("DEP",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TTAB("DEP",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Department for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  s depseq="",%mmmsqld(2)="" g %0SDp1
 s %mmmsqld(37)=$g(^TTAB("DEP",%mmmsqld(2)))
 s depseq=$p(%mmmsqld(37),"\",3)
%0SDp1 
%0SCuncommitted ;
 s %mmmsqld(5)=%mmmsqld(4)
 i %mmmsqld(5)'="",$d(^TTAB("DS",%mmmsqld(5)))
 e  s sectseq="",%mmmsqld(5)="" g %0SDp4
 s %mmmsqld(42)=$g(^TTAB("DS",%mmmsqld(5)))
 s sectseq=$p(%mmmsqld(42),"\",3)
%0SDp4 
 g:$zu(115,2)=0 %0SDuncommitted i $zu(115,2)=1 l +^TTAB("DS",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TTAB("DS",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Sections for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 5
 i %mmmsqld(5)'="",$d(^TTAB("DS",%mmmsqld(5)))
 e  s sectseq="",%mmmsqld(5)="" g %0SEp1
 s %mmmsqld(47)=$g(^TTAB("DS",%mmmsqld(5)))
 s sectseq=$p(%mmmsqld(47),"\",3)
%0SEp1 
%0SDuncommitted ;
 s SQLCODE=0 g %0Sc
%0SEdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0SDdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0SCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0SBdun 
%0SAdun 
%0Sc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } q
%0Serr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Sc
]]></Routine>
</Export>
