<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISMV" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISMV ; IG 6/5/98 ; LVB Control data access for VISMV EP_VisitMovements
 ;
 ; supported calls:
 ;
 ; $$select^LVBVISMV(RowID,skip)
 ; $$insert^LVBVISMV(par,no)
 ; $$update^LVBVISMV(ROWID,no)
 ; $$save^LVBVISMV(ROWID,type)
 ; $$delete^LVBVISMV(ROWID,check)
 ; $$open^LVBVISMV(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVISMV(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVISMV(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBVISMV(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9)
 ; $$close^LVBVISMV()
 ; $$getall^LVBVISMV(par,fromUS,toUS,toRL,pack)
 ; $$clean^LVBVISMV(epis,vtsRID,original)
 ; $$PackingSlip^LVBVISMV(epis,site,ListOfTests)
 ;
  ;---&sql(DECLARE VISMV CURSOR FOR SELECT * FROM EP_VisitMovements
   ;---         WHERE VISMV_ParRef = :par
   ;---         AND ((VISMV_FromUserSite_DR = :fromUS) OR (:fromUS IS NULL))
   ;---         AND ((VISMV_ToUserSite_DR = :toUS) OR (:toUS IS NULL))
   ;---         AND ((VISMV_ToReferralLab_DR = :toRL) OR (:toRL IS NULL))
   ;---         AND ((VISMV_PackingNumber = :pack) OR (:pack IS NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, fromUS, pack, par, toRL, toUS
PackingSlip(epis,site,ListOfTests) n (epis,site,ListOfTests) s epis=$g(epis),site=$g(site),ListOfTests=$g(ListOfTests),result=""
 ; get client specific init parameters
 s cc=$p($g(^CF("SM",1)),"^",28)
 i $l(cc) s LineRoutine="PackingSlip^"_$zn_cc i $l($t(@LineRoutine)) x "s result=$$"_LineRoutine_"("""_epis_""","""_site_""","""_ListOfTests_""")"
 q result
 ; temporary clean up vtsRID from ALL movements other then original
clean(epis,vtsRID,original) n (epis,vtsRID,original) s epis=$g(epis),vtsRID=$g(vtsRID),original=$g(original)
 s x0="" f  s x0=$o(^TEPI(epis,9,x0)) q:x0=""  i " W S "[(" "_$p(^(x0),"\",9)_" ") d
 .i $l(original),x0'=original q
 .i $d(^TEPI(epis,9,x0,"VTS",vtsRID)) d
 ..k ^TEPI(epis,9,x0,"VTS",vtsRID)
 ..k %d m %d=^TEPI(epis,9,x0)
 ..d SetAll^LVBCOM50(epis,"551U",.%d,epis_"||"_x0)
 ..i '$d(^TEPI(epis,9,x0,"VTS")),$$delete(epis_"||"_x0)
 q 0
 ;
open(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9) s par=$g(par),fromUS=$g(fromUS),toUS=$g(toUS),toRL=$g(toRL),pack=$g(pack)
  ;---&SQL(OPEN VISMV)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISMV0o
 q 0
 ;
fetch(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9) k PLIST s par=$g(par),fromUS=$g(fromUS),toUS=$g(toUS),toRL=$g(toRL),pack=$g(pack)
  ;---&SQL(FETCH VISMV INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9) k ^TMP($zn,$j)
 s par=$g(par),fromUS=$g(fromUS),toUS=$g(toUS),toRL=$g(toRL),pack=$g(pack)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,fromUS,toUS,toRL,pack) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,fromUS,toUS,toRL,pack,p5,p6,p7,p8,p9) N (par,test,skip,user,param,PLIST) K ^TMP($zn,$j)
 s par=$g(par),fromUS=$g(fromUS),toUS=$g(toUS),toRL=$g(toRL),pack=$g(pack)
 i $$open(par,fromUS,toUS,toRL,pack)
 f cnt=1:1 Q:$$fetch(par,fromUS,toUS,toRL,pack)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE VISMV)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISMV0c
 q 0
delete(RowID,check) s RowID=$g(RowID),check=$g(check)
 s ok=1 i check'="N" d
 .s ok=0,SQLCODE=100 f j=1,2 s @("x"_j)=$p(RowID,"||",j)
 .i $l(x1),$l(x2),'$d(^TEPI(x1,9,x2,"VTS")) s ok=1
 .i $l(x1),$l(x2),$p(^TEPI(x1,9,x2),"\",9)="W" s ok=1
  ;---i ok &sql(DELETE FROM EP_VisitMovements WHERE VISMV_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 i ok Do %0Fo
 i 'SQLCODE d
 .i '$d(^TMOVE("TEMP","551D",$p(RowID,"||",1),RowID)) d
 ..k %d s %d(1)=RowID
 ..d SetAll^LVBCOM50($p(RowID,"||",1),"551D",.%d,RowID)
 q SQLCODE
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitMovements WHERE VISMV_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; PLIST : 1...N - normal buffer
 ;         20    - List of vtsRID(s)
 ;         21    - List of Sample/Container RID(s)
 ; type  : W - prepare to Send
 ;         S - Send now
 ;         R - Receive
save(RowID,type) n (RowID,type,PLIST) s RowID=$g(RowID),type=$g(type) k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST
 s epis=$p(RowID,"||",1),(insert,update1,update2)="",SQLCODE=0,user=$$user^MVBSSUSR()
 f j1=1:1:$l(^TMP($zn,$j,20),",") s xxTS=$p(^TMP($zn,$j,20),",",j1) i $l(xxTS),$$vtsLock^SSLOCK($s(type="R":"RT",1:"ST"),epis,xxTS,user)'=-1 s SQLCODE=100 q
 i SQLCODE g saveEnd
 s x2="" f  s x2=$o(^TEPI(epis,9,x2)) q:x2=""  s xx=$g(^TEPI(epis,9,x2)) d  i $l(update1)!$l(update2) q
 . ; to send
 .i $p(xx,"\",9)="W",(type="W")!(type="S") d
 ..i '$l($p(xx,"\",3))!($l($p(xx,"\",3))&($p(xx,"\",3)=PLIST(3))) d
 ...i '$l($p(xx,"\",4))!($l($p(xx,"\",4))&($p(xx,"\",4)=PLIST(4))) d
 ....i '$l($p(xx,"\",5))!($l($p(xx,"\",5))&($p(xx,"\",5)=PLIST(5))) d
 .....s update1=epis_"||"_x2
 .....s xxTS="" f  s xxTS=$o(^TEPI(epis,9,x2,"VTS",xxTS)) q:xxTS=""  i (","_^TMP($zn,$j,20)_",")'[(","_xxTS_",") s update1="" q
 . ; send now
 .i $p(xx,"\",9)="S",type="S" d
 ..i '$l($p(xx,"\",3))!($l($p(xx,"\",3))&($p(xx,"\",3)=PLIST(3))) d
 ...i '$l($p(xx,"\",4))!($l($p(xx,"\",4))&($p(xx,"\",4)=PLIST(4))) d
 ....i '$l($p(xx,"\",5))!($l($p(xx,"\",5))&($p(xx,"\",5)=PLIST(5))) d
 .....s update1=epis_"||"_x2
 .....s xxTS="" f  s xxTS=$o(^TEPI(epis,9,x2,"VTS",xxTS)) q:xxTS=""  i (","_^TMP($zn,$j,20)_",")'[(","_xxTS_",") s update1="" q
 . ; receive
 .i type="R",x2=$p(RowID,"||",2) s update2=epis_"||"_x2
 i (type="W")!(type="S"),'$l(update1) s insert=epis
 i $l(insert) d
 .k PLIST f j=1:1:15 s PLIST(j)=^TMP($zn,$j,j)
 .s PLIST=$o(PLIST(""),-1)
 .s from=$p(PLIST(3),$c(1)),to=$s($l(PLIST(4)):$p(PLIST(4),$c(1)),1:$p(PLIST(5),$c(1))),list=""
 .i $g(PLIST(8))="" s PLIST(8)=$$PackingSlip(insert,from,^TMP($zn,$j,20))
 .s pslip=PLIST(8)
 .s ins=$$insert(insert,"NO") w !,"INS="_ins i 'ins s PAR=%ROWID d
 ..f j1=1:1:$l(^TMP($zn,$j,20),",") s xxTS=$p(^TMP($zn,$j,20),",",j1) i $l(xxTS) d
 ...k PLIST
 ...s PLIST(2)=xxTS
 ...s PLIST=$o(PLIST(""),-1)
 ...s ins=$$insert^LVBVISMT(PAR) w !,"INS2="_ins i 'ins s syn=$p($g(^TTAB("TS",$p(xxTS,"||",2))),"\",2),list=list_$s($l(list):",",1:"")_$s($l(syn):syn,1:$p(xxTS,"||",2))
 ..i ^TMP($zn,$j,21)="***EMPTY***" s SC=""
 ..e  s SC=^TMP($zn,$j,21)
 ..f j1=1:1:$l(SC,",") s xxSP=$p(SC,",",j1) i $l(xxSP) d
 ...k PLIST
 ...s PLIST(2)=xxSP
 ...s PLIST=$o(PLIST(""),-1)
 ...i $$insert^LVBVISMS(PAR)
 .. ; events
 ..i $l(list),type="S" d events^LVBCOM01(epis,"ST","Following tests <"_list_"> are sent from <"_from_"> to <"_to_"> on <"_pslip_"> by "_$$user^MVBSSUSR())
 ..k %d m %d=^TEPI(epis,9,$p(PAR,"||",2))
 ..d SetAll^LVBCOM50(epis,"551I",.%d,PAR)
 i $l(update1) d
 .k PLIST f j=1:1:15 s PLIST(j)=^TMP($zn,$j,j)
 .s PLIST(1)=update1,PLIST(2)=$p(update1,"||",2)
 .s PLIST=$o(PLIST(""),-1)
 .s from=$p(PLIST(3),$c(1)),to=$s($l(PLIST(4)):$p(PLIST(4),$c(1)),1:$p(PLIST(5),$c(1))),list=""
 .i $g(PLIST(8))="" s PLIST(8)=$$PackingSlip(update1,from,^TMP($zn,$j,20))
 .s pslip=PLIST(8)
 .i '$$update(update1,"NO") s PAR=%ROWID d
 ..f j1=1:1:$l(^TMP($zn,$j,20),",") s xxTS=$p(^TMP($zn,$j,20),",",j1) i $l(xxTS) d
 ...i $d(^TEPI($p(update1,"||",1),9,$p(update1,"||",2),"VTS",xxTS)) s syn=$p($g(^TTAB("TS",$p(xxTS,"||",2))),"\",2),list=list_$s($l(list):",",1:"")_$s($l(syn):syn,1:$p(xxTS,"||",2)) q
 ...k PLIST
 ...s PLIST(2)=xxTS
 ...s PLIST=$o(PLIST(""),-1)
 ...i '$$insert^LVBVISMT(PAR) s syn=$p($g(^TTAB("TS",$p(xxTS,"||",2))),"\",2),list=list_$s($l(list):",",1:"")_$s($l(syn):syn,1:$p(xxTS,"||",2))
 ..i ^TMP($zn,$j,21)="***EMPTY***" s SC=""
 ..e  s SC=^TMP($zn,$j,21)
 ..f j1=1:1:$l(SC,",") s xxSP=$p(SC,",",j1) i $l(xxSP) d
 ...i $d(^TEPI($p(update1,"||",1),9,$p(update1,"||",2),"SP",xxSP)) q
 ...k PLIST
 ...s PLIST(2)=xxSP
 ...s PLIST=$o(PLIST(""),-1)
 ...i $$insert^LVBVISMS(PAR)
 ..i $l(^TMP($zn,$j,21)) d
 ...s xxSP="" f  s xxSP=$o(^TEPI($p(update1,"||",1),9,$p(update1,"||",2),"SP",xxSP)) q:xxSP=""  d
 ....i (","_SC_",")'[(","_xxSP_","),$$delete^LVBVISMS(PAR_"||"_xxSP)
 .. ; events
 ..i $l(list),type="S" d events^LVBCOM01(epis,"ST","Following tests <"_list_"> are sent from <"_from_"> to <"_to_"> on <"_pslip_"> by "_$$user^MVBSSUSR())
 ..k %d m %d=^TEPI(epis,9,$p(PAR,"||",2))
 ..d SetAll^LVBCOM50(epis,"551U",.%d,PAR)
 i $l(update2) d
 .k PLIST f j=1:1:15 s PLIST(j)=^TMP($zn,$j,j)
 .s PLIST(1)=update2,PLIST(2)=$p(update2,"||",2)
 .s PLIST=$o(PLIST(""),-1)
 .s from=$p(PLIST(3),$c(1)),to=$s($l(PLIST(4)):$p(PLIST(4),$c(1)),1:$p(PLIST(5),$c(1))),list=""
 .i $g(PLIST(8))="" s PLIST(8)=$$PackingSlip(update2,from,^TMP($zn,$j,20))
 .s pslip=PLIST(8)
 .i '$$update(update2,"NO") s PAR=%ROWID d
 ..k VISMV m VISMV=PLIST
 ..f j=1:1:VISMV s VISMV(j)=$p(VISMV(j),$c(1))
 ..s doneList=""
 ..f j1=1:1:$l(^TMP($zn,$j,20),",") s xxTS=$p(^TMP($zn,$j,20),",",j1) i $l(xxTS) d
 ...s (nts,ntsRID)="" i $l(VISMV(4)),'$$selskip^LVBCTTS($p(xxTS,"||",2)) d
 ....i '$l(nts),$l(PLIST(4)) s ts=$$select^LVBCTSY(PLIST(4),"TS",VISMV(4)) i ts'=$p(xxTS,"||",2) s nts=ts
 ....i '$l(nts),$l(PLIST(5)) s ts=$$select^LVBCTSY(PLIST(5),"TS",VISMV(4)) i ts'=$p(xxTS,"||",2) s nts=ts
 ...i '$l(nts) d
 ....i $l(VISMV(4)),'$$select^LVBVISTS(xxTS,"Y") d
 .....s PLIST(29)=VISMV(4),PLIST(80)=+$h,PLIST(81)=$p($h,",",2),err=$$update^LVBVISTS(xxTS)
 .....i 'err s doneList=doneList_$s($l(doneList):",",1:"")_xxTS
 .....i err d ErrorLog^LVBCOM02("MOVE",(+$h)_" "_xxTS,err)
 ....i '$$select^LVBVISMT(PAR_"||"_xxTS) s PLIST(3)="Y" i '$$update^LVBVISMT(PAR_"||"_xxTS) s syn=$p($g(^TTAB("TS",$p(xxTS,"||",2))),"\",2),list=list_$s($l(list):",",1:"")_$s($l(syn):syn,1:$p(xxTS,"||",2))
 ...i $l(nts) d
 ....i $$select^LVBVISTS(xxTS,"Y") q
 ....s PLIST(3)=nts,PLIST(29)=VISMV(4),PLIST(80)=+$h,PLIST(81)=$p($h,",",2),err=$$insert^LVBVISTS($p(update2,"||",1))
 ....i err d ErrorLog^LVBCOM02("MOVE",(+$h)_" "_$p(update2,"||",1)_" "_nts,err) q
 ....s doneList=doneList_$s($l(doneList):",",1:"")_%ROWID
 ....s ntsRID=%ROWID
 ....k PLIST
 ....s PLIST(2)=ntsRID
 ....i '$$insert^LVBVISMT(PAR) d
 .....i '$$select^LVBVISMT(PAR_"||"_ntsRID) s PLIST(3)="Y" i '$$update^LVBVISMT(PAR_"||"_ntsRID) s syn=$p($g(^TTAB("TS",$p(ntsRID,"||",2))),"\",2),list=list_$s($l(list):",",1:"")_$s($l(syn):syn,1:$p(ntsRID,"||",2))
 ....i $$delete^LVBVISTS(xxTS)
 ..i '$l(^TMP($zn,$j,21)) d
 ...i $$open^LVBVISMS(PAR)
 ...f  q:$$fetch^LVBVISMS(PAR)  d
 ....s xxSP=PLIST(2)
 ....s PLIST(3)="Y" i '$$update^LVBVISMS(PLIST(1)) d
 .....i $l(VISMV(4)),'$$select^LVBVISSC(xxSP,"Y") s PLIST(7)=VISMV(4) i $$update^LVBVISSC(xxSP)
 ...i $$close^LVBVISMS()
 ..i $l(^TMP($zn,$j,21)) d
 ...f j1=1:1:$l(^TMP($zn,$j,21),",") s xxSP=$p(^TMP($zn,$j,21),",",j1) i $l(xxSP) d
 ....i '$$select^LVBVISMS(PAR_"||"_xxSP) d
 .....s PLIST(3)="Y"
 .....i '$$update^LVBVISMS(PAR_"||"_xxSP) d
 ......i $l(VISMV(4)),'$$select^LVBVISSC(xxSP,"Y") s PLIST(7)=VISMV(4) i $$update^LVBVISSC(xxSP)
 .. ; events
 ..i $l(list),type="R" d events^LVBCOM01(epis,"RT","Following tests <"_list_"> are received at <"_to_"> from <"_from_"> on <"_pslip_"> by "_$$user^MVBSSUSR())
 ..k %d m %d=^TEPI(epis,9,$p(PAR,"||",2))
 ..d SetAll^LVBCOM50(epis,"551U",.%d,PAR)
 .. ; check Actions
 ..i $l(doneList) d
 ...f ig=1:1:$l(doneList,",") s xxTS=$p(doneList,",",ig) i $l(xxTS) d
 ....k PLIST
 ....s PLIST=$o(PLIST(""),-1)
 ....i $$TScheck^LVBVIS7(xxTS,"TR","","A")
 ....f j=1:1:PLIST d
 .....i $e($p(PLIST(j),$c(1)),1,2)="VQ",$$VQ^LVBCOM13(xxTS,$p($p(PLIST(j),$c(1),2),$c(2)))
 .....i $e($p(PLIST(j),$c(1)),1,2)="TA",$$TAR^LVBCOM13(epis,,$p($p(PLIST(j),$c(1),2),$c(2)))
 .....i $e($p(PLIST(j),$c(1)),1,2)="SA",$$SA^LVBCOM13(epis,$p($p(PLIST(j),$c(1),2),$c(2)))
 .....i $e($p(PLIST(j),$c(1)),1,2)="SF",$$SF^LVBCOM13(xxTS,$p(PLIST(j),$c(1),6),$p($p(PLIST(j),$c(1),2),$c(2)))
 .....i $e($p(PLIST(j),$c(1)),1,2)="SD",$$SD^LVBCOM13(xxTS,$p(PLIST(j),$c(1),6),$p($p(PLIST(j),$c(1),2),$c(2)))
 .....i $e($p(PLIST(j),$c(1)),1,2)="TR",$$TAR^LVBCOM13(epis,xxTS,$p($p(PLIST(j),$c(1),2),$c(2)))
 .....i $e($p(PLIST(j),$c(1)),1,3)="ACT",$$ACT^LVBCOM13(epis,$p($p($p(PLIST(j),$c(1),2),$c(2)),"-",1),$p($p($p(PLIST(j),$c(1),2),$c(2)),"-",2))
saveEnd 
 f j1=1:1:$l(^TMP($zn,$j,20),",") s xxTS=$p(^TMP($zn,$j,20),",",j1) i $l(xxTS),$$vtsLockClr^SSLOCK($s(type="R":"RT",1:"ST"),epis,xxTS)
 i $l($p($g(^CF("SM",1)),"^",28)),$l($t(@("save^"_$zn_$p(^CF("SM",1),"^",28)))) k %quit d @("saveEnd^"_$zn_$p(^CF("SM",1),"^",28)) q:$d(%quit) %quit
 k ^TMP($zn,$j)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
insert(par,no) s PLIST(0)=$g(par) k PLIST(1) d pre("N")
 f j=1:1 q:'$d(^TEPI(PLIST(0),9,PLIST(3)_"_"_j))
 s PLIST(2)=PLIST(3)_"_"_j
  ;---&sql(INSERT INTO EP_VisitMovements VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 i 'SQLCODE d  q $$select(%ROWID)
 .i $g(no)="",'$d(^TMOVE("TEMP","551I",$p(%ROWID,"||",1),%ROWID)) d
 ..k %d m %d=^TEPI($p(%ROWID,"||",1),9,$p(%ROWID,"||",2))
 ..d SetAll^LVBCOM50($p(%ROWID,"||",1),"551I",.%d,%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID,no) s RowID=$g(RowID) d pre("Y")
  ;---&sql(UPDATE EP_VisitMovements VALUES :PLIST() WHERE VISMV_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Lo
 i 'SQLCODE d  q $$select(%ROWID)
 .i $g(no)="",'$d(^TMOVE("TEMP","551U",$p(%ROWID,"||",1),%ROWID)) d
 ..k %d m %d=^TEPI($p(%ROWID,"||",1),9,$p(%ROWID,"||",2))
 ..d SetAll^LVBCOM50($p(%ROWID,"||",1),"551U",.%d,%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s PLIST(12)=$s($l($g(PLIST(13))):"R",$l($g(PLIST(9))):"S",1:"W")
 i PLIST(12)="R" d
 .f j=1,2 s @("x"_j)=$p($g(PLIST(1)),"||",j)
 .i $l(x1),$l(x2) d
 ..i PLIST(12)="R" s x3="" f  s x3=$o(^TEPI(x1,9,x2,"VTS",x3)) q:x3=""  i $p(^(x3),"\",1)'="Y" s PLIST(12)="P"
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 f J=3,4 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTUSL(plist(J),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 f J=5 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTRL(plist(J),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 f J=11 i $g(PLIST(J))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$selrow^MVBSSUSR(plist(J),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(J)=X k plist
 ;
 Q
getall(par,fromUS,toUS,toRL,pack) n (par,fromUS,toUS,toRL,pack,PLIST) k ^TMP($zn,$j)
 s par=$g(par),fromUS=$g(fromUS),toUS=$g(toUS),toRL=$g(toRL),pack=$g(pack)
 i $$open(par,fromUS,toUS,toRL,pack)
 f cnt=1:1 q:$$fetch(par,fromUS,toUS,toRL,pack)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 i $$close()
 k ^TMP($zn,$j)
 q 0
 ;
 q
%VISMV0o s $zt="%VISMV0E" s SQLCODE=$s($g(%VISMV0c):-101,1:0) q:SQLCODE'=0  s %VISMV0d(30)=0 s %VISMV0d(31)=0,%VISMV0d(32)=""
 s %VISMV0d(17)=$g(par),%VISMV0d(18)=$g(fromUS),%VISMV0d(19)=$g(fromUS),%VISMV0d(20)=$g(toUS),%VISMV0d(21)=$g(toUS),%VISMV0d(22)=$g(toRL),%VISMV0d(23)=$g(toRL),%VISMV0d(24)=$g(pack),%VISMV0d(25)=$g(pack)
 s %VISMV0c=1 q
%VISMV0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISMV0c,%VISMV0d,%VISMV0E,%VISMV0l,%VISMV0n,%VISMV0R,%VISMV0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISMV0d(1)=%VISMV0d(17)
 i %VISMV0d(1)="" g %0ABdun
 s %VISMV0d(3)=""
%0ABk1 s %VISMV0d(3)=$o(^TEPI(%VISMV0d(1),9,%VISMV0d(3)))
 i %VISMV0d(3)="" g %0ABdun
 s %VISMV0d(38)=$g(^TEPI(%VISMV0d(1),9,%VISMV0d(3)))
 s %VISMV0d(4)=$p(%VISMV0d(38),"\",3)
 g:'(((%VISMV0d(4)'="")&&(%VISMV0d(4)=%VISMV0d(18)))||(%VISMV0d(19)="")) %0ABk1
 s %VISMV0d(5)=$p(%VISMV0d(38),"\",4)
 g:'(((%VISMV0d(5)'="")&&(%VISMV0d(5)=%VISMV0d(20)))||(%VISMV0d(21)="")) %0ABk1
 s %VISMV0d(6)=$p(%VISMV0d(38),"\",5)
 g:'(((%VISMV0d(6)'="")&&(%VISMV0d(6)=%VISMV0d(22)))||(%VISMV0d(23)="")) %0ABk1
 s %VISMV0d(9)=$p(%VISMV0d(38),"\",10)
 g:'(((%VISMV0d(9)'="")&&(%VISMV0d(9)=%VISMV0d(24)))||(%VISMV0d(25)="")) %0ABk1
 s %VISMV0d(7)=$p(%VISMV0d(38),"\",1) s %VISMV0d(8)=$p(%VISMV0d(38),"\",2) s %VISMV0d(10)=$p(%VISMV0d(38),"\",6) s %VISMV0d(11)=$p(%VISMV0d(38),"\",7) s %VISMV0d(12)=$p(%VISMV0d(38),"\",8) s %VISMV0d(13)=$p(%VISMV0d(38),"\",9) s %VISMV0d(14)=$p(%VISMV0d(38),"\",11) s %VISMV0d(15)=$p(%VISMV0d(38),"\",12) s %VISMV0d(16)=$p(%VISMV0d(38),"\",13)
 s %VISMV0d(2)=(%VISMV0d(1))_"||"_(%VISMV0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISMV0d(2),"||",1),9,$p(%VISMV0d(2),"||",2))#"S":$zu(115,4) i $t { s %VISMV0d(31)=1,%VISMV0d(32)=$name(^TEPI($p(%VISMV0d(2),"||",1),9,$p(%VISMV0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitMovements for RowID value: "_%VISMV0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISMV0d(27)=$lb(""_%VISMV0d(4),""_%VISMV0d(5),""_%VISMV0d(6),""_%VISMV0d(9))
 s %VISMV0d(28)=$p(%VISMV0d(2),"||"),%VISMV0d(3)=$p(%VISMV0d(2),"||",2)
 i %VISMV0d(28)'="",%VISMV0d(3)'="",$d(^TEPI(%VISMV0d(28),9,%VISMV0d(3)))
 e  g %0ACdun
 s %VISMV0d(44)=$g(^TEPI(%VISMV0d(28),9,%VISMV0d(3)))
 s %VISMV0d(4)=$p(%VISMV0d(44),"\",3) s %VISMV0d(5)=$p(%VISMV0d(44),"\",4) s %VISMV0d(6)=$p(%VISMV0d(44),"\",5) s %VISMV0d(7)=$p(%VISMV0d(44),"\",1) s %VISMV0d(8)=$p(%VISMV0d(44),"\",2) s %VISMV0d(9)=$p(%VISMV0d(44),"\",10) s %VISMV0d(10)=$p(%VISMV0d(44),"\",6) s %VISMV0d(11)=$p(%VISMV0d(44),"\",7) s %VISMV0d(12)=$p(%VISMV0d(44),"\",8) s %VISMV0d(13)=$p(%VISMV0d(44),"\",9) s %VISMV0d(14)=$p(%VISMV0d(44),"\",11) s %VISMV0d(15)=$p(%VISMV0d(44),"\",12) s %VISMV0d(16)=$p(%VISMV0d(44),"\",13)
 s %VISMV0d(1)=$p(%VISMV0d(2),"||")
 s %VISMV0d(29)=$lb(""_%VISMV0d(4),""_%VISMV0d(5),""_%VISMV0d(6),""_%VISMV0d(9))
 g:%VISMV0d(27)'=%VISMV0d(29) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISMV0d(30)=%VISMV0d(30)+1,%ROWCOUNT=%VISMV0d(30),%ROWID=%VISMV0d(2),%VISMV0c=10 q
%VISMV0f i '$g(%VISMV0c) { s SQLCODE=-102 q  } i %VISMV0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISMV0d(30))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISMV0d(30),%VISMV0c=100 q  } g %0Afirst:%VISMV0c=1
%0ACdun i $zu(115,2)=1,$g(%VISMV0d(31))=1 { l -@%VISMV0d(32) s %VISMV0d(31)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISMV0d(30),SQLCODE=100,%VISMV0c=100 q
%VISMV0c i '$g(%VISMV0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISMV0d(30)),1:0)
 i $zu(115,2)=1,$g(%VISMV0d(31))=1 { l -@%VISMV0d(32) } k %VISMV0c,%VISMV0d,%VISMV0E,%VISMV0l,%VISMV0n,%VISMV0R,%VISMV0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISMV0c=100 q
%0Do d %VISMV0f q:SQLCODE'=0
 s PLIST(0)=%VISMV0d(1),PLIST(1)=%VISMV0d(2),PLIST(2)=%VISMV0d(3),PLIST(3)=%VISMV0d(4),PLIST(4)=%VISMV0d(5),PLIST(5)=%VISMV0d(6),PLIST(6)=%VISMV0d(7),PLIST(7)=%VISMV0d(8),PLIST(8)=%VISMV0d(9),PLIST(9)=%VISMV0d(10),PLIST(10)=%VISMV0d(11),PLIST(11)=%VISMV0d(12),PLIST(12)=%VISMV0d(13),PLIST(13)=%VISMV0d(14),PLIST(14)=%VISMV0d(15),PLIST(15)=%VISMV0d(16)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),9,%mmmsqld(4)))
 e  g %0FBdun
 s %mmmsqld(12)=$$%getlock^User.EPVisitMovements.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Fc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),9,%mmmsqld(4)))
 e  g %0FCdun
 d %delete^User.EPVisitMovements.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitMovements.T1(%mmmsqld(1)) g %0Fc
%0FCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitMovements.T1(%mmmsqld(1)) g:SQLCODE<0 %0Fc
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.EPVisitMovements.T1(%mmmsqld(1)) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(21)=0,%mmmsqld(22)=""
 s %mmmsqld(18)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(18)
 s %mmmsqld(20)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(20)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(20),9,PLIST(2)))
 e  g %0HBdun
 s %mmmsqld(28)=$g(^TEPI(%mmmsqld(20),9,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",3) s PLIST(4)=$p(%mmmsqld(28),"\",4) s PLIST(5)=$p(%mmmsqld(28),"\",5) s PLIST(6)=$p(%mmmsqld(28),"\",1) s PLIST(7)=$p(%mmmsqld(28),"\",2) s PLIST(8)=$p(%mmmsqld(28),"\",10) s PLIST(9)=$p(%mmmsqld(28),"\",6) s PLIST(10)=$p(%mmmsqld(28),"\",7) s PLIST(11)=$p(%mmmsqld(28),"\",8) s PLIST(12)=$p(%mmmsqld(28),"\",9) s PLIST(13)=$p(%mmmsqld(28),"\",11) s PLIST(14)=$p(%mmmsqld(28),"\",12) s PLIST(15)=$p(%mmmsqld(28),"\",13)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0HBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),9,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(21)=1,%mmmsqld(22)=$name(^TEPI($p(PLIST(1),"||",1),9,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitMovements for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(20)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(20)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(20),9,PLIST(2)))
 e  g %0HCdun
 s %mmmsqld(34)=$g(^TEPI(%mmmsqld(20),9,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(34),"\",3) s PLIST(4)=$p(%mmmsqld(34),"\",4) s PLIST(5)=$p(%mmmsqld(34),"\",5) s PLIST(6)=$p(%mmmsqld(34),"\",1) s PLIST(7)=$p(%mmmsqld(34),"\",2) s PLIST(8)=$p(%mmmsqld(34),"\",10) s PLIST(9)=$p(%mmmsqld(34),"\",6) s PLIST(10)=$p(%mmmsqld(34),"\",7) s PLIST(11)=$p(%mmmsqld(34),"\",8) s PLIST(12)=$p(%mmmsqld(34),"\",9) s PLIST(13)=$p(%mmmsqld(34),"\",11) s PLIST(14)=$p(%mmmsqld(34),"\",12) s PLIST(15)=$p(%mmmsqld(34),"\",13)
 s PLIST(0)=$p(PLIST(1),"||")
%0HBuncommitted ;
 s SQLCODE=0 g %0Hc
%0HCdun i $zu(115,2)=1,$g(%mmmsqld(21))=1 { l -@%mmmsqld(22) s %mmmsqld(21)=0 }
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(21))=1 { l -@%mmmsqld(22) } q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:15 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitMovements.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),9,%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(13)=$$%getlock^User.EPVisitMovements.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),9,%mmmsqld(5)))
 e  g %0LCdun
 k %data
 f icol=0:1:15 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitMovements.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitMovements.T1(%mmmsqld(2)) g %0Lc
%0LCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitMovements.T1(%mmmsqld(2)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.EPVisitMovements.T1(%mmmsqld(2)) g %0Lc
]]></Routine>
</Export>
