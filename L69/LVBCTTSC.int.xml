<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTSC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTSC ; IG 1/5/98 ; LVB Control data access for CTTSC CT_TestSetAutoComments
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTTSC(par)
 ; $$delete^LVBCTTSC(ROWID,Comments)
 ; $$update^LVBCTTSC(ROWID)
 ; $$select^LVBCTTSC(ROWID,skip)
 ; $$open^LVBCTTSC(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTTSC(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTTSC(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTTSC(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTTSC()
 ; $$select1^LVBCTTSC(titem,stcom,skip)
 ;
  ;---&sql(DECLARE CTTSC CURSOR FOR SELECT * FROM CT_TestSetAutoComments
   ;---         WHERE CTTSC_ParRef = :par
   ;---         AND (:tcode is null or CTTSC_Item_DR = :tcode)
   ;---         ORDER BY CTTSC_Order)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par, tcode
 ;
open(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),tcode=$g(tcode),skip=$g(skip)
  ;---&SQL(OPEN CTTSC)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSC0o
 q 0
 ;
fetch(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),tcode=$g(tcode),skip=$g(skip)
  ;---&SQL(FETCH CTTSC INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),tcode=$g(tcode),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,tcode,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,tcode,skip,p3,p4,p5,p6,p7,p8,p9) N (par,tcode,skip,PLIST) s par=$g(par),tcode=$g(tcode),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,tcode,skip)
 f cnt=1:1 Q:$$fetch(par,tcode,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTTSC)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSC0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetAutoComments WHERE CTTSC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
select1(titem,stcom,skip) s titem=$g(titem),stcom=$g(stcom),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetAutoComments WHERE CTTSC_Item_DR=:titem AND CTTSC_Comments=:stcom)
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, stcom, titem
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) 
 K PLIST(1) s PLIST(3)=$o(^TTAB("TS",PLIST(0),5,PLIST(2),""),-1)+1
  ;---&sql(INSERT INTO CT_TestSetAutoComments VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_TestSetAutoComments VALUES :PLIST() WHERE CTTSC_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Lo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_TestSetAutoComments WHERE CTTSC_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0No
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 f j=7,8 i $l($g(PLIST(j))) s PLIST(j)=+PLIST(j)
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTTC(plist(2))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 ;
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSP(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 ;
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTDR(plist(6))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$s($l(PLIST(26)):PLIST(26)_" ",1:"")_PLIST(4)_" "_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 ;
 q
 ;
 q
%CTTSC0o s $zt="%CTTSC0E" s SQLCODE=$s($g(%CTTSC0c):-101,1:0) q:SQLCODE'=0  s %CTTSC0d(16)=0 s %CTTSC0d(17)=0,%CTTSC0d(18)=""
 s %CTTSC0d(11)=$g(par),%CTTSC0d(12)=$g(tcode),%CTTSC0d(13)=$g(tcode)
 s %CTTSC0t(1)=$i(^||%sql.temp)
 s %CTTSC0c=1 q
%CTTSC0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTSC0c,%CTTSC0d,%CTTSC0E,%CTTSC0l,%CTTSC0n,%CTTSC0R,%CTTSC0s,%CTTSC0t,%CTTSC0Z q
%0Afirst 
 k ^||%sql.temp(%CTTSC0t(1),0) s ^||%sql.temp(%CTTSC0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTTSC0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTTSC0t(1),0))
 s %CTTSC0s(10)=""
%0ACk1 s %CTTSC0s(10)=$o(^||%sql.temp(%CTTSC0t(1),0,%CTTSC0s(10)))
 i %CTTSC0s(10)="" g %0ACdun
 s %CTTSC0d(10)=$s(%CTTSC0s(10)=-1E14:"",1:%CTTSC0s(10))
 s %CTTSC0s(2)=""
%0ACk2 s %CTTSC0s(2)=$o(^||%sql.temp(%CTTSC0t(1),0,%CTTSC0s(10),%CTTSC0s(2)))
 i %CTTSC0s(2)="" g %0ACk1
 s %CTTSC0d(2)=$s(%CTTSC0s(2)=-1E14:"",1:%CTTSC0s(2))
 s %CTTSC0d(30)=$g(^||%sql.temp(%CTTSC0t(1),0,%CTTSC0s(10),%CTTSC0s(2)))
 s %CTTSC0d(1)=$lg(%CTTSC0d(30),7) s %CTTSC0d(3)=$lg(%CTTSC0d(30),4) s %CTTSC0d(4)=$lg(%CTTSC0d(30),2) s %CTTSC0d(5)=$lg(%CTTSC0d(30),1) s %CTTSC0d(6)=$lg(%CTTSC0d(30),8) s %CTTSC0d(7)=$lg(%CTTSC0d(30),3) s %CTTSC0d(8)=$lg(%CTTSC0d(30),6) s %CTTSC0d(9)=$lg(%CTTSC0d(30),5)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%CTTSC0d(2),"||",1),5,$p(%CTTSC0d(2),"||",2),$p(%CTTSC0d(2),"||",3))#"S":$zu(115,4) i $t { s %CTTSC0d(17)=1,%CTTSC0d(18)=$name(^TTAB("TS",$p(%CTTSC0d(2),"||",1),5,$p(%CTTSC0d(2),"||",2),$p(%CTTSC0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetAutoComments for RowID value: "_%CTTSC0d(2) ztrap "LOCK"  }
 ; asl MOD# 4
 s %CTTSC0d(15)=$p(%CTTSC0d(2),"||"),%CTTSC0d(3)=$p(%CTTSC0d(2),"||",2),%CTTSC0d(4)=$p(%CTTSC0d(2),"||",3)
 i %CTTSC0d(15)'="",%CTTSC0d(3)'="",%CTTSC0d(4)'="",$d(^TTAB("TS",%CTTSC0d(15),5,%CTTSC0d(3),%CTTSC0d(4)))
 e  g %0ADdun
 s %CTTSC0d(39)=$g(^TTAB("TS",%CTTSC0d(15),5,%CTTSC0d(3),%CTTSC0d(4)))
 s %CTTSC0d(5)=$p(%CTTSC0d(39),"\",1) s %CTTSC0d(6)=$p(%CTTSC0d(39),"\",2) s %CTTSC0d(7)=$p(%CTTSC0d(39),"\",3) s %CTTSC0d(8)=$p(%CTTSC0d(39),"\",4) s %CTTSC0d(9)=$p(%CTTSC0d(39),"\",5) s %CTTSC0d(10)=$p(%CTTSC0d(39),"\",6)
 s %CTTSC0d(1)=$p(%CTTSC0d(2),"||")
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTSC0d(16)=%CTTSC0d(16)+1,%ROWCOUNT=%CTTSC0d(16),%ROWID=%CTTSC0d(2),%CTTSC0c=10 q
%CTTSC0f i '$g(%CTTSC0c) { s SQLCODE=-102 q  } i %CTTSC0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTSC0d(16))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTSC0d(16),%CTTSC0c=100 q  } g %0Afirst:%CTTSC0c=1
%0ADdun i $zu(115,2)=1,$g(%CTTSC0d(17))=1 { l -@%CTTSC0d(18) s %CTTSC0d(17)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTTSC0d(16),SQLCODE=100,%CTTSC0c=100 q
%CTTSC0c i '$g(%CTTSC0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTSC0d(16)),1:0) f %CTTSC0d(19)=1 { i $sortend(^||%sql.temp(%CTTSC0t(%CTTSC0d(19)),0),0) } k ^||%sql.temp(%CTTSC0t(1))
 i $zu(115,2)=1,$g(%CTTSC0d(17))=1 { l -@%CTTSC0d(18) } k %CTTSC0c,%CTTSC0d,%CTTSC0E,%CTTSC0l,%CTTSC0n,%CTTSC0R,%CTTSC0s,%CTTSC0t,%CTTSC0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTSC0c=100
 f %CTTSC0d(19)=1 i $sortend(^||%sql.temp(%CTTSC0t(%CTTSC0d(19)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTTSC0d(1)=%CTTSC0d(11)
 i %CTTSC0d(1)="" g %0ABdun
 s %CTTSC0d(3)=""
%0ABk1 s %CTTSC0d(3)=$o(^TTAB("TS",%CTTSC0d(1),5,%CTTSC0d(3)))
 i %CTTSC0d(3)="" g %0ABdun
 i '((%CTTSC0d(12)="")||(%CTTSC0d(3)=%CTTSC0d(13))) g %0ABk1
 s %CTTSC0d(4)=""
%0ABk2 s %CTTSC0d(4)=$o(^TTAB("TS",%CTTSC0d(1),5,%CTTSC0d(3),%CTTSC0d(4)))
 i %CTTSC0d(4)="" g %0ABk1
 s %CTTSC0d(28)=$g(^TTAB("TS",%CTTSC0d(1),5,%CTTSC0d(3),%CTTSC0d(4)))
 s %CTTSC0d(5)=$p(%CTTSC0d(28),"\",1) s %CTTSC0d(6)=$p(%CTTSC0d(28),"\",2) s %CTTSC0d(7)=$p(%CTTSC0d(28),"\",3) s %CTTSC0d(8)=$p(%CTTSC0d(28),"\",4) s %CTTSC0d(9)=$p(%CTTSC0d(28),"\",5) s %CTTSC0d(10)=$p(%CTTSC0d(28),"\",6)
 s %CTTSC0d(2)=(%CTTSC0d(1))_"||"_(%CTTSC0d(3))_"||"_(%CTTSC0d(4))
 s %CTTSC0s(10)=$s(%CTTSC0d(10)'="":%CTTSC0d(10),1:-1E14),%CTTSC0s(2)=$s(%CTTSC0d(2)'="":%CTTSC0d(2),1:-1E14),%CTTSC0d(29)="",$li(%CTTSC0d(29),7)=%CTTSC0d(1),$li(%CTTSC0d(29),4)=%CTTSC0d(3),$li(%CTTSC0d(29),2)=%CTTSC0d(4),$li(%CTTSC0d(29),1)=%CTTSC0d(5),$li(%CTTSC0d(29),8)=%CTTSC0d(6),$li(%CTTSC0d(29),3)=%CTTSC0d(7),$li(%CTTSC0d(29),6)=%CTTSC0d(8),$li(%CTTSC0d(29),5)=%CTTSC0d(9),^||%sql.temp(%CTTSC0t(1),0,%CTTSC0s(10),%CTTSC0s(2))=%CTTSC0d(29)
 g %0ABk2
%0ABdun 
 q
%0Do d %CTTSC0f q:SQLCODE'=0
 s PLIST(0)=%CTTSC0d(1),PLIST(1)=%CTTSC0d(2),PLIST(2)=%CTTSC0d(3),PLIST(3)=%CTTSC0d(4),PLIST(4)=%CTTSC0d(5),PLIST(5)=%CTTSC0d(6),PLIST(6)=%CTTSC0d(7),PLIST(7)=%CTTSC0d(8),PLIST(8)=%CTTSC0d(9),PLIST(9)=%CTTSC0d(10)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(15)=0,%mmmsqld(16)=""
 s %mmmsqld(12)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(12)
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(14)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTAB("TS",%mmmsqld(14),5,PLIST(2),PLIST(3)))
 e  g %0FBdun
 s %mmmsqld(25)=$g(^TTAB("TS",%mmmsqld(14),5,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(25),"\",1) s PLIST(5)=$p(%mmmsqld(25),"\",2) s PLIST(6)=$p(%mmmsqld(25),"\",3) s PLIST(7)=$p(%mmmsqld(25),"\",4) s PLIST(8)=$p(%mmmsqld(25),"\",5) s PLIST(9)=$p(%mmmsqld(25),"\",6)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),5,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(15)=1,%mmmsqld(16)=$name(^TTAB("TS",$p(PLIST(1),"||",1),5,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetAutoComments for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(14)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTAB("TS",%mmmsqld(14),5,PLIST(2),PLIST(3)))
 e  g %0FCdun
 s %mmmsqld(34)=$g(^TTAB("TS",%mmmsqld(14),5,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(34),"\",1) s PLIST(5)=$p(%mmmsqld(34),"\",2) s PLIST(6)=$p(%mmmsqld(34),"\",3) s PLIST(7)=$p(%mmmsqld(34),"\",4) s PLIST(8)=$p(%mmmsqld(34),"\",5) s PLIST(9)=$p(%mmmsqld(34),"\",6)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) s %mmmsqld(15)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(18)=0,%mmmsqld(19)=""
 s %mmmsqld(12)=$g(titem),%mmmsqld(13)=$g(stcom)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(12)
 s PLIST(0)=""
%0HBk1 s PLIST(0)=$o(^TTAB("TS",PLIST(0)))
 i PLIST(0)="" g %0HBdun
 i PLIST(2)="" g %0HBk1
 s PLIST(3)=""
%0HBk2 s PLIST(3)=$o(^TTAB("TS",PLIST(0),5,PLIST(2),PLIST(3)))
 i PLIST(3)="" g %0HBk1
 s %mmmsqld(28)=$g(^TTAB("TS",PLIST(0),5,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(28),"\",1)
 g:'(PLIST(4)=%mmmsqld(13)) %0HBk2
 g:'(PLIST(4)'="") %0HBk2
 s PLIST(5)=$p(%mmmsqld(28),"\",2) s PLIST(6)=$p(%mmmsqld(28),"\",3) s PLIST(7)=$p(%mmmsqld(28),"\",4) s PLIST(8)=$p(%mmmsqld(28),"\",5) s PLIST(9)=$p(%mmmsqld(28),"\",6)
 s PLIST(1)=(PLIST(0))_"||"_(PLIST(2))_"||"_(PLIST(3))
 g:$zu(115,2)=0 %0HBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),5,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TTAB("TS",$p(PLIST(1),"||",1),5,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetAutoComments for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(15)=$lb(""_PLIST(4))
 s %mmmsqld(16)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(16)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTAB("TS",%mmmsqld(16),5,PLIST(2),PLIST(3)))
 e  g %0HCdun
 s %mmmsqld(37)=$g(^TTAB("TS",%mmmsqld(16),5,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(37),"\",1) s PLIST(5)=$p(%mmmsqld(37),"\",2) s PLIST(6)=$p(%mmmsqld(37),"\",3) s PLIST(7)=$p(%mmmsqld(37),"\",4) s PLIST(8)=$p(%mmmsqld(37),"\",5) s PLIST(9)=$p(%mmmsqld(37),"\",6)
 s PLIST(0)=$p(PLIST(1),"||")
 s %mmmsqld(17)=$lb(""_PLIST(4))
 g:%mmmsqld(15)'=%mmmsqld(17) %0HCdun
%0HBuncommitted ;
 s SQLCODE=0 g %0Hc
%0HCdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
 g %0HBk2
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestSetAutoComments.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(4),5,%mmmsqld(5),%mmmsqld(6)))
 e  g %0LBdun
 s %mmmsqld(17)=$$%getlock^User.CTTestSetAutoComments.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(4),5,%mmmsqld(5),%mmmsqld(6)))
 e  g %0LCdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestSetAutoComments.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.CTTestSetAutoComments.T1(%mmmsqld(2)) g %0Lc
%0LCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.CTTestSetAutoComments.T1(%mmmsqld(2)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.CTTestSetAutoComments.T1(%mmmsqld(2)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(3),5,%mmmsqld(4),%mmmsqld(5)))
 e  g %0NBdun
 s %mmmsqld(16)=$$%getlock^User.CTTestSetAutoComments.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Nc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(3),5,%mmmsqld(4),%mmmsqld(5)))
 e  g %0NCdun
 d %delete^User.CTTestSetAutoComments.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.CTTestSetAutoComments.T1(%mmmsqld(1)) g %0Nc
%0NCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.CTTestSetAutoComments.T1(%mmmsqld(1)) g:SQLCODE<0 %0Nc
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.CTTestSetAutoComments.T1(%mmmsqld(1)) g %0Nc
]]></Routine>
</Export>
