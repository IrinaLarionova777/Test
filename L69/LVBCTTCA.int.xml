<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTCA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTCA ; IG 1/5/98 ; LVB Control data access for CTTCA CT_TestCodeFieldCalcArgum
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTTCA(par)
 ; $$delete^LVBCTTCA(ROWID,Comments)
 ; $$update^LVBCTTCA(ROWID)
 ; $$select^LVBCTTCA(ROWID,skip)
 ; $$open^LVBCTTCA(par,skip)
 ; $$fetch^LVBCTTCA(par,skip)
 ; $$close^LVBCTTCA()
 ;
  ;---&sql(DECLARE CTTCA CURSOR FOR SELECT * FROM CT_TestCodeFieldCalcArgum
   ;---         WHERE CTTCA_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTTCA)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTCA0o
 q 0
 ;
fetch(par,skip) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTTCA INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE CTTCA)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTCA0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestCodeFieldCalcArgum WHERE CTTCA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1),PLIST(2)
  ;---&sql(INSERT INTO CT_TestCodeFieldCalcArgum VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_TestCodeFieldCalcArgum VALUES :PLIST() WHERE CTTCA_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_TestCodeFieldCalcArgum WHERE CTTCA_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
 ;
 q
%CTTCA0o s $zt="%CTTCA0E" s SQLCODE=$s($g(%CTTCA0c):-101,1:0) q:SQLCODE'=0  s %CTTCA0d(8)=0 s %CTTCA0d(9)=0,%CTTCA0d(10)=""
 s %CTTCA0d(4)=$g(par)
 s %CTTCA0c=1 q
%CTTCA0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTCA0c,%CTTCA0d,%CTTCA0E,%CTTCA0l,%CTTCA0n,%CTTCA0R,%CTTCA0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTTCA0d(1)=%CTTCA0d(4)
 s %CTTCA0d(6)=$p(%CTTCA0d(1),"||"),%CTTCA0d(7)=$p(%CTTCA0d(1),"||",2)
 i %CTTCA0d(6)="" g %0ABdun
 i %CTTCA0d(7)="" g %0ABdun
 s %CTTCA0d(3)=""
%0ABk1 s %CTTCA0d(3)=$o(^TTAB("TC",%CTTCA0d(6),3,%CTTCA0d(7),"FIELDS",%CTTCA0d(3)))
 i %CTTCA0d(3)="" g %0ABdun
 s %CTTCA0d(2)=(%CTTCA0d(6))_"||"_(%CTTCA0d(7))_"||"_(%CTTCA0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TC",$p(%CTTCA0d(2),"||",1),3,$p(%CTTCA0d(2),"||",2),"FIELDS",$p(%CTTCA0d(2),"||",3))#"S":$zu(115,4) i $t { s %CTTCA0d(9)=1,%CTTCA0d(10)=$name(^TTAB("TC",$p(%CTTCA0d(2),"||",1),3,$p(%CTTCA0d(2),"||",2),"FIELDS",$p(%CTTCA0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestCodeFieldCalcArgum for RowID value: "_%CTTCA0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTCA0d(6)=$p(%CTTCA0d(2),"||"),%CTTCA0d(7)=$p(%CTTCA0d(2),"||",2),%CTTCA0d(3)=$p(%CTTCA0d(2),"||",3)
 i %CTTCA0d(6)'="",%CTTCA0d(7)'="",%CTTCA0d(3)'="",$d(^TTAB("TC",%CTTCA0d(6),3,%CTTCA0d(7),"FIELDS",%CTTCA0d(3)))
 e  g %0ACdun
 s %CTTCA0d(1)=$p(%CTTCA0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTCA0d(8)=%CTTCA0d(8)+1,%ROWCOUNT=%CTTCA0d(8),%ROWID=%CTTCA0d(2),%CTTCA0c=10 q
%CTTCA0f i '$g(%CTTCA0c) { s SQLCODE=-102 q  } i %CTTCA0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTCA0d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTCA0d(8),%CTTCA0c=100 q  } g %0Afirst:%CTTCA0c=1
%0ACdun i $zu(115,2)=1,$g(%CTTCA0d(9))=1 { l -@%CTTCA0d(10) s %CTTCA0d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTTCA0d(8),SQLCODE=100,%CTTCA0c=100 q
%CTTCA0c i '$g(%CTTCA0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTCA0d(8)),1:0)
 i $zu(115,2)=1,$g(%CTTCA0d(9))=1 { l -@%CTTCA0d(10) } k %CTTCA0c,%CTTCA0d,%CTTCA0E,%CTTCA0l,%CTTCA0n,%CTTCA0R,%CTTCA0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTCA0c=100 q
%0Do d %CTTCA0f q:SQLCODE'=0
 s PLIST(0)=%CTTCA0d(1),PLIST(1)=%CTTCA0d(2),PLIST(2)=%CTTCA0d(3)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(5)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(5)
 s %mmmsqld(7)=$p(PLIST(1),"||"),%mmmsqld(8)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("TC",%mmmsqld(7),3,%mmmsqld(8),"FIELDS",PLIST(2)))
 e  g %0FBdun
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("TC",$p(PLIST(1),"||",1),3,$p(PLIST(1),"||",2),"FIELDS",$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("TC",$p(PLIST(1),"||",1),3,$p(PLIST(1),"||",2),"FIELDS",$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestCodeFieldCalcArgum for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(7)=$p(PLIST(1),"||"),%mmmsqld(8)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",PLIST(2)'="",$d(^TTAB("TC",%mmmsqld(7),3,%mmmsqld(8),"FIELDS",PLIST(2)))
 e  g %0FCdun
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:2 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestCodeFieldCalcArgum.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TC",%mmmsqld(4),3,%mmmsqld(5),"FIELDS",%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(19)=$$%getlock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(2)) i '%mmmsqld(19) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TC",%mmmsqld(4),3,%mmmsqld(5),"FIELDS",%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:2 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(19)=1 %ReleaseLock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(19)=1 %ReleaseLock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(19))=1 %ReleaseLock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TC",%mmmsqld(3),3,%mmmsqld(4),"FIELDS",%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(18)=$$%getlock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(1)) i '%mmmsqld(18) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TC",%mmmsqld(3),3,%mmmsqld(4),"FIELDS",%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(18)=1 %ReleaseLock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(18)=1 %ReleaseLock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(18))=1 %ReleaseLock^User.CTTestCodeFieldCalcArgum.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
