<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTBGX" type="INT" languagemode="0"><![CDATA[
BVBCTBGX ; IG 11/5/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:18 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$select^BVBCTBGX(ROWID)
 ; $$open^BVBCTBGX(par,prod,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTBGX(par,prod,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTBGX(par,prod,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTBGX(par,prod,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTBGX()
 ; $$insert^BVBCTBGX(par)
 ; $$update^BVBCTBGX(ROWID)
 ; $$delete^BVBCTBGX(ROWID,Comments)
 ; $$getall^BVBCTBGX(par)
 ; $$checkbg^BVBCTBGX(patbg,product,packbg)
 ;
  
 ;
open(par,prod,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),prod=$g(prod)
 d %CTBGX0o
 q 0
 ;
fetch(par,prod,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),prod=$g(prod)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,prod,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),prod=$g(prod) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par,prod) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,prod,p2,p3,p4,p5,p6,p7,p8,p9) N (par,prod,PLIST) s par=$g(par),prod=$g(prod) K ^TMP($zn,$j)
 i $$open(par,prod)
 f cnt=1:1 Q:$$fetch(par,prod)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() d %CTBGX0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) K PLIST(1),PLIST(2)
 d %0Fo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ;
update(RowID) s RowID=$g(RowID)
 d %0Go
 i 'SQLCODE q $$select(RowID)
 q SQLCODE
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
 d %0Ho
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^BVBCTPRC(plist(3))
 .S X="" I 'SQLCODE S X=$p(PLIST(1),$c(1))_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^BVBCTBGR(plist(4))
 .S X="" I 'SQLCODE S X=$p(PLIST(1),$c(1))_$C(1)_PLIST(2)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 ;
 q
checkbg(patbg,product,packbg) ;check if patient allowed to have this bloodgroup
 n (patbg,product,packbg)
 q:$g(patbg)="" "N"
 s bgrow=$o(^CT("BG",0,"Code",patbg,"")) q:'bgrow "N"
 ;same blood group
 q:'(bgrow-packbg) "Y"
 d %0Io
 q:SQLCODE "N"
 q "Y"
 ; 
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par),prod=$p(par,"^",2),par=$p(par,"^",1)
 I $$open(par,prod)
 F cnt=1:1 Q:$$fetch(par,prod)  S ^TMP($ZN,$J,cnt)=$p(PLIST(4),$c(1))_$c(2)_$P(PLIST(5),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;        
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTBGX0o s SQLCODE=$s($g(%CTBGX0c):-101,1:0) q:SQLCODE'=0
 s %CTBGX0c=1 k %CTBGX0m
 s %CTBGX0E=$zt,%CTBGX0f=0,%CTBGX0e=0,%CTBGX0L=""
 s %CTBGX0d(2)=$P(par,$C(1)),%CTBGX0d(4)=$P(prod,$C(1)),%CTBGX0d(5)=$P(prod,$C(1))
 s:%CTBGX0d(2)="" %CTBGX0d(2)=$E(par,2,999)
 s:%CTBGX0d(4)="" %CTBGX0d(4)=$E(prod,2,999)
 l +^mtemp s %CTBGX0t(1)=$zp(^mtemp(" "))+1,^(%CTBGX0t(1))="" l -^mtemp
 q
%0Afirst   ;  init
 k ^mtemp(%CTBGX0t(1),0)
 ; asl MOD# 3
 d %0ABMod
 s %CTBGX0s(7)=""
%0ACk1 s %CTBGX0s(7)=$o(^mtemp(%CTBGX0t(1),0,%CTBGX0s(7)))
 i %CTBGX0s(7)="" g %0ACdun
 s $P(%CTBGX0d(7),$C(1))=$s(%CTBGX0s(7)=-99999999999999999:"",1:%CTBGX0s(7))
 s %CTBGX0s(8)=""
%0ACk2 s %CTBGX0s(8)=$o(^mtemp(%CTBGX0t(1),0,%CTBGX0s(7),%CTBGX0s(8)))
 i %CTBGX0s(8)="" g %0ACk1
 s %CTBGX0d(8)=$s(%CTBGX0s(8)=" ":"",1:%CTBGX0s(8))
 s %val=$P(%CTBGX0d(7),$C(1)) d %0ABs1:%val'="" s $P(%CTBGX0d(7),$C(1),2)=%val
 s %CTBGX0d(11)=$p($g(%CTBGX0d(8)),"||",1,1),$P(%CTBGX0d(9),$C(1))=$p($g(%CTBGX0d(8)),"||",2,2)
 i %CTBGX0d(11)'="",$P(%CTBGX0d(9),$C(1))'="",$d(^CT("BG",%CTBGX0d(11),"XM",$P(%CTBGX0d(9),$C(1))))
 i '$t
 e  i 1>$P(%CTBGX0d(9),$C(1)),$P(%CTBGX0d(9),$C(1))=+$P(%CTBGX0d(9),$C(1))
 i  g %0ACk2
 s %CTBGX0n=$g(^CT("BG",%CTBGX0d(11),"XM",$P(%CTBGX0d(9),$C(1))))
 s %CTBGX0d(3)=$p(%CTBGX0n,"^",1) s %CTBGX0d(10)=$p(%CTBGX0n,"^",2)
 s %CTBGX0d(1)=$p(%CTBGX0d(8),"||",1,1)
 s %val=$P(%CTBGX0d(9),$C(1)) d %0ABs1:%val'="" s $P(%CTBGX0d(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTBGX0f=%CTBGX0f+1 s %CTBGX0c=10 q
%CTBGX0f i '$g(%CTBGX0c) s SQLCODE=-102 q
 i %CTBGX0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTBGX0c=1
 g %0ACk2
%0ACdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTBGX0c=100 q
%CTBGX0c i '$g(%CTBGX0c) s SQLCODE=-102 q
 f %CTBGX0t=1:1:1 k ^mtemp(%CTBGX0t(%CTBGX0t))
 k %CTBGX0c,%CTBGX0d,%CTBGX0e,%CTBGX0E,%CTBGX0f,%CTBGX0l,%CTBGX0L,%CTBGX0n,%CTBGX0r,%CTBGX0R,%CTBGX0s,%CTBGX0t s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTBGX0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0ABMod ; asl MOD# 2
 n %CTBGX0n  ; Nested NEWing for Subquery...
 s %CTBGX0d(1)=$g(%CTBGX0d(2))
 i %CTBGX0d(1)="" g %0ABdun
 s $P(%CTBGX0d(9),$C(1))=""
%0ABk1 s $P(%CTBGX0d(9),$C(1))=$o(^CT("BG",%CTBGX0d(1),"XM",$P(%CTBGX0d(9),$C(1))))
 i $P(%CTBGX0d(9),$C(1))="" g %0ABdun
 i 1>$P(%CTBGX0d(9),$C(1)),$P(%CTBGX0d(9),$C(1))=+$P(%CTBGX0d(9),$C(1)) g %0ABk1
 i $P(%CTBGX0d(9),$C(1))'=+$P(%CTBGX0d(9),$C(1)) g %0ABdun
 s %CTBGX0n=$g(^CT("BG",%CTBGX0d(1),"XM",$P(%CTBGX0d(9),$C(1))))
 s %CTBGX0d(3)=$p(%CTBGX0n,"^",1)
 g:'(((%CTBGX0d(3))=(%CTBGX0d(4)))!(%CTBGX0d(5)="")) %0ABk1
 s %CTBGX0d(7)=$p(%CTBGX0n,"^",3) s:%CTBGX0d(7)'="" %CTBGX0d(7)=+%CTBGX0d(7) s %CTBGX0d(10)=$p(%CTBGX0n,"^",2)
 s %CTBGX0d(8)=(%CTBGX0d(1))_"||"_($P(%CTBGX0d(9),$C(1)))
 s %val=$P(%CTBGX0d(9),$C(1)) d %0ABs1:%val'="" s $P(%CTBGX0d(9),$C(1),2)=%val
 s %val=$P(%CTBGX0d(7),$C(1)) d %0ABs1:%val'="" s $P(%CTBGX0d(7),$C(1),2)=%val
 s %CTBGX0s(7)=$s($P(%CTBGX0d(7),$C(1))'="":$P(%CTBGX0d(7),$C(1)),1:-99999999999999999),%CTBGX0s(8)=$s(%CTBGX0d(8)'="":%CTBGX0d(8),1:" "),^mtemp(%CTBGX0t(1),0,%CTBGX0s(7),%CTBGX0s(8))=""
 g %0ABk1
%0ABdun 
 q
%0Co d %CTBGX0f q:SQLCODE'=0
 s PLIST(0)=%CTBGX0d(1),PLIST(1)=%CTBGX0d(8),PLIST(2)=%CTBGX0d(9),PLIST(3)=%CTBGX0d(3),PLIST(4)=%CTBGX0d(10),PLIST(5)=%CTBGX0d(7)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(10)=$p($g(%mmmsqld(3)),"||",1,1),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(10)'="",$P(PLIST(2),$C(1))'="",$d(^CT("BG",%mmmsqld(10),"XM",$P(PLIST(2),$C(1))))
 i '$t
 e  i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1))
 i  g %0EBdun
 s %mmmsqln=$g(^CT("BG",%mmmsqld(10),"XM",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1) s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s:PLIST(5)'="" PLIST(5)=+PLIST(5)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(5),$C(1)) d %0ABs1:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %insert,icol,ir
 f icol=0:1:5 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1341("1")
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^CT("BG",%mmmsqld(4),"XM",$P(%mmmsqld(5),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(5),$C(1)),$P(%mmmsqld(5),$C(1))=+$P(%mmmsqld(5),$C(1))
 i  g %0GBdun
 k %data,%edit
 f icol=0:1:5 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1341(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),$P(%mmmsqld(4),$C(1))=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",$P(%mmmsqld(4),$C(1))'="",$d(^CT("BG",%mmmsqld(3),"XM",$P(%mmmsqld(4),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(4),$C(1)),$P(%mmmsqld(4),$C(1))=+$P(%mmmsqld(4),$C(1))
 i  g %0HBdun
 d delete^mt1341(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(bgrow,$C(1)),%mmmsqld(5)=$P(packbg,$C(1)),%mmmsqld(7)=$P(product,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(bgrow,2,999)
 s:%mmmsqld(5)="" %mmmsqld(5)=$E(packbg,2,999)
 s:%mmmsqld(7)="" %mmmsqld(7)=$E(product,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(2)="" g %0IBdun
 s %mmmsqld(9)=""
%0IBk1 s %mmmsqld(9)=$o(^CT("BG",%mmmsqld(2),"XM",%mmmsqld(9)))
 i %mmmsqld(9)="" g %0IBdun
 i 1>%mmmsqld(9),%mmmsqld(9)=+%mmmsqld(9) g %0IBk1
 i %mmmsqld(9)'=+%mmmsqld(9) g %0IBdun
 s %mmmsqln=$g(^CT("BG",%mmmsqld(2),"XM",%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqln,"^",2)
 g:'((%mmmsqld(4))=(%mmmsqld(5))) %0IBk1
 s %mmmsqld(6)=$p(%mmmsqln,"^",1)
 g:'((%mmmsqld(6))=(%mmmsqld(7))) %0IBk1
 s %mmmsqld(1)=(%mmmsqld(2))_"||"_(%mmmsqld(9))
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
