<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTCRV" type="INT" languagemode="0"><![CDATA[
BVBCTCRV ; IG 30/07/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:22 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$select^BVBCTCRV(ROWID)
 ; $$open^BVBCTCRV(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTCRV(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTCRV(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTCRV(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTCRV()
 ; $$insert^BVBCTCRV(par)
 ; $$update^BVBCTCRV(ROWID)
 ; $$delete^BVBCTCRV(ROWID,Comments)
 ; $$getall^BVBCTCRV(par)
 ; 
  
 ;
 q 
 ; Insert the data
insert(par) K PLIST(1) s PLIST(0)=par
 d %0Bo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ; Update the data
update(ROWID) D pre s ROWID=$g(ROWID)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE d adjust
 Q SQLCODE
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTCRV0o
 Q 0
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par)
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor 
close() d %CTCRV0c 
 q 0
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre q
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 Q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 q
%0AAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTCRV0o s SQLCODE=$s($g(%CTCRV0c):-101,1:0) q:SQLCODE'=0
 s %CTCRV0c=1 k %CTCRV0m
 s %CTCRV0E=$zt,%CTCRV0f=0,%CTCRV0e=0,%CTCRV0L=""
 s %CTCRV0d(2)=$P(par,$C(1))
 i %CTCRV0d(2)="",$L(par)>1 s %val=$E(par,2,999) d %0AAr1 s %CTCRV0d(2)=%val
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTCRV0d(1),$C(1))=$g(%CTCRV0d(2))
 i $P(%CTCRV0d(1),$C(1))="" g %0ABdun
 s %CTCRV0d(5)=""
%0ABk1 s %CTCRV0d(5)=$o(^CT("COMP",$P(%CTCRV0d(1),$C(1)),"CRV",%CTCRV0d(5)))
 i %CTCRV0d(5)="" g %0ABdun
 s %CTCRV0n=$g(^CT("COMP",$P(%CTCRV0d(1),$C(1)),"CRV",%CTCRV0d(5)))
 s %CTCRV0d(6)=$p(%CTCRV0n,"^",1)
 s %CTCRV0d(4)=($P(%CTCRV0d(1),$C(1)))_"||"_(%CTCRV0d(5))
 s %val=$P(%CTCRV0d(1),$C(1)) d %0ABs1:%val'="" s $P(%CTCRV0d(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTCRV0f=%CTCRV0f+1 s %CTCRV0c=10 q
%CTCRV0f i '$g(%CTCRV0c) s SQLCODE=-102 q
 i %CTCRV0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTCRV0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTCRV0c=100 q
%CTCRV0c i '$g(%CTCRV0c) s SQLCODE=-102 q
 k %CTCRV0c,%CTCRV0d,%CTCRV0e,%CTCRV0E,%CTCRV0f,%CTCRV0l,%CTCRV0L,%CTCRV0n,%CTCRV0r,%CTCRV0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTCRV0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:3 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt4141("1")
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(PLIST(1),$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(PLIST(1),2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^CT("COMP",%mmmsqld(4),"CRV",%mmmsqld(5)))
 e  g %0CBdun
 k %data,%edit
 f icol=0:1:3 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt4141(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^CT("COMP",%mmmsqld(3),"CRV",%mmmsqld(4)))
 e  g %0DBdun
 d delete^mt4141(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTCRV0f q:SQLCODE'=0
 s PLIST(0)=%CTCRV0d(1),PLIST(1)=%CTCRV0d(4),PLIST(2)=%CTCRV0d(5),PLIST(3)=%CTCRV0d(6)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(8)=$p($g(%mmmsqld(3)),"||",1,1),PLIST(2)=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(8)'="",PLIST(2)'="",$d(^CT("COMP",%mmmsqld(8),"CRV",PLIST(2)))
 e  g %0HBdun
 s %mmmsqln=$g(^CT("COMP",%mmmsqld(8),"CRV",PLIST(2)))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 s $P(PLIST(0),$C(1))=$p(PLIST(1),"||",1,1)
 s %val=$P(PLIST(0),$C(1)) d %0ABs1:%val'="" s $P(PLIST(0),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
