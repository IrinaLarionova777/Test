<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1451" type="INT" languagemode="0"><![CDATA[
mt1451  ; Compiled May 22, 2000 12:41:02 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1451(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 i +%check d valid33 i '%ok d vdiag("DELETE",-107_$c(1)_"tbl"_$c(1)_"val"_$c(1)_"CT_StatusCodes"_$C(1,1)) s SQLCODE=-107 g gunlock
 d trig0C^mt1451
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1451(+%check=1) i '%ok s SQLCODE=-104 q
winsert s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1451 i '%ok s SQLCODE=-108 g gunlock
 i +%check d valid35 i '%ok d vdiag("INSERT",-107_$c(1)_"tbl"_$c(1)_"val"_$c(1)_"CT_StatusCodes"_$C(1,1)) s SQLCODE=-107 g gunlock
 d file
 d trig0A^mt1451
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:8 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1451(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:8 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1451(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1451 i '%ok s SQLCODE=-108 g gunlock
 i +%check d valid36 i '%ok d vdiag("UPDATE",-107_$c(1)_"tbl"_$c(1)_"val"_$c(1)_"CT_StatusCodes"_$C(1,1)) s SQLCODE=-107 g gunlock
 d file
 d trig0B^mt1451
 g gunlock
vdiag(oper,info) i $g(%mdiag)'<10 s $p(%mdiag,$c(1),2)="YES" q
 s %mdiag=$g(%mdiag)+1_$c(1)_"NO"_$c(1)_oper,%mdiag(+%mdiag)=info_$c(1)_$g(%msg) q
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^CT("ST",$p(%ROWID,$c(1))):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^CT("ST",$p(%ROWID,$c(1)))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^CT("ST",$p(%edit(1),$c(1),1))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(2)) s:'($d(tempn)#2) tempn=$g(^CT("ST",$p(%data(1),$c(1),1))) s $p(tempn,"^",1)=$g(%data(2))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^CT("ST",$p(%data(1),$c(1),1))) s $p(tempn,"^",2)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^CT("ST",$p(%data(1),$c(1),1))) s $p(tempn,"^",3)=$p($g(%data(4)),$c(1))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^CT("ST",$p(%data(1),$c(1),1))) s $p(tempn,"^",4)=$p($g(%data(5)),$c(1))
 i $d(%edit(6)) s x=$g(%data(6)),^CT("ST",$p(%data(1),$c(1),1),"REM",0)=x d  
 . s irep=%edit(6) s:irep<x irep=x f irep=1:1:irep s:irep'>x ^(irep)=$g(%data(6,irep)) k:irep>x ^(irep)
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^CT("ST",$p(%data(1),$c(1),1))) s $p(tempn,"^",5)=$p($g(%data(7)),$c(1))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^CT("ST",$p(%data(1),$c(1),1))) s $p(tempn,"^",6)=$p($g(%data(8)),$c(1))
 s:$d(tempn)#2 ^CT("ST",$p(%data(1),$c(1),1))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$$ALPHAUP($s($d(%edit(2)):%edit(2),1:$g(%data(2)))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^CT("ST",0,"Code",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^CT("ST",0,"Code",sn(1),sn(2)) k ^CT("ST",0,"Code",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$$ALPHAUP($g(%data(2))) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map1dun
 s ^CT("ST",0,"Code",sn(1),sn(2))=tempn
map1dun s node=1,tempn=""
 i '$g(%edit) s sn(1)=$$ALPHAUP($s($d(%edit(3)):%edit(3),1:$g(%data(3)))) i sn(1)'="" s sn(2)=$s($d(%edit(1)):$p(%edit(1),$c(1),1),1:$p($g(%data(1)),$c(1),1)) i sn(2)'=""
 i  i $d(^CT("ST",0,"Desc",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^CT("ST",0,"Desc",sn(1),sn(2)) k ^CT("ST",0,"Desc",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$$ALPHAUP($g(%data(3))) i sn(1)'="" s sn(2)=$p($g(%data(1)),$c(1),1) i sn(2)'=""
 e  g map2dun
 s ^CT("ST",0,"Desc",sn(1),sn(2))=tempn
map2dun q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(145)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(145)
 q
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(145)
 q
 d %0Do
getold(%dataold) g %0Do
lookupE d %RSEcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",5),1,5)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupE
 
lookupF d %RSFcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",5),1,5)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupF
 
lookupG d %RSGcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",5),1,5)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupG
 
selitmG  ; entry point to select the Row Selection Item
 i $c(1)'[$g(%data(2)) s item=2 q
 i $c(1)'[$g(%data(3)) s item=3 q
 s item=0 f  s item=$o(%data(item)) q:item=""  i $c(1)'[%data(item) s item=1 q
 s item=$s(item=1:"",1:1) q
 s item="" q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CT_StatusCodes"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(5)) s %ok="Available" d %mdiag(%oper,-106,"Fld Int","Req","CTSTS_Available","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(4)) s %ok="Change Status" d %mdiag(%oper,-106,"Fld Int","Req","CTSTS_ChangeStatus","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(2)) s %ok="Code" d %mdiag(%oper,-106,"Fld Int","Req","CTSTS_Code","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(3)) s %ok="Description" d %mdiag(%oper,-106,"Fld Int","Req","CTSTS_Desc","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(1)) s %ok="CT_EventCodes Row ID" d %mdiag(%oper,-106,"Fld Int","Req","CTSTS_RowId","",%ok) s %msg=%ok,%ok=0
 q
valid33 ; DELETE: Row Validation
 n SQLCODE
 d VALDEL^atgen
 q
valid35 ; INSERT: Row Validation
 n SQLCODE
 d VALINS^atgen
 q
valid36 ; UPDATE: Row Validation
 n SQLCODE
 d VALUPD^atgen
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CT_StatusCodes
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %val=$i(^CT("ST",0)) g inrwide
 g rowiderr
inrwide ; external to internal conversion for rowid
 i 'rowerr d fde1^mt1451 i '%ok g:'iform rowiderr s rowerr=1
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1451 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i 'rowerr d fdi1^mt1451 s %data(1)=%data(1)_$c(1)_%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 g insarr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt1451
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde1 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde5 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde8 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="1165",irn=145,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,145,2,1165,36,"get",%val))
 n found s found=0
 i 'found,$f("|Decrease|Increase|No Effect|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("D|I|N","|",$l($p("|Decrease|Increase|No Effect|","|"_%val_"|"),"|"))
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=5 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTSTS_Available","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTSTS_ChangeProductCode","",$g(%msg))
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=4 d etiok
 . s %msg="" d fde5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTSTS_ChangeStatus","",$g(%msg))
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 f %irep=1:1:$g(%data(6)) i $d(%data(6,%irep)),$p(%data(6,%irep),$c(1))="",$p(%data(6,%irep),$c(1),2)'="" s %val=$p(%data(6,%irep),$c(1),2) s %data(6,%irep)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=1 d etiok
 . s %msg="" d fde1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTSTS_RowId","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTSTS_Stock","",$g(%msg))
 q
fda1 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 d fda1 q:'%ok  s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv2 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq2($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv3 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq3($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv5 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv8 ; DO validation and additional validation code
 i %val="|~~|NULL|~~|" s %ok=0 q
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Ko q SQLCODE=100
uniq2(%rowid,%unique) n SQLCODE,%val d %0Io q SQLCODE=100
uniq3(%rowid,%unique) n SQLCODE,%val d %0Jo q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="CTSTS_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","CTSTS_RowId","",%ok)
 i %ok,$c(1)'[$g(%data(2)),'$$uniq2($g(%data(1)),$g(%data(2))) s %ok="CTSTS_Code"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","CTSTS_Code","",%ok)
 i %ok,$c(1)'[$g(%data(3)),'$$uniq3($g(%data(1)),$g(%data(3))) s %ok="CTSTS_Desc"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","CTSTS_Desc","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTSTS_Available","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTSTS_ChangeProductCode","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTSTS_ChangeStatus","",$g(%msg))
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTSTS_Code","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTSTS_Desc","",$g(%msg))
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTSTS_RowId","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTSTS_Stock","",$g(%msg))
 q
fdi1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
fdi5 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi8 s %val=$p("Decrease|Increase|No Effect","|",$l($p("|D|I|N|","|"_%val_"|"),"|"))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(5)),$p(%data(5),$c(1))'="" s %val=$p(%data(5),$c(1)) d fdi5 s $p(%data(5),$c(1),2)=%val
 i $d(%data(7)),$p(%data(7),$c(1))'="" s %val=$p(%data(7),$c(1)) d fdi5 s $p(%data(7),$c(1),2)=%val
 i $d(%data(4)),$p(%data(4),$c(1))'="" s %val=$p(%data(4),$c(1)) d fdi5 s $p(%data(4),$c(1),2)=%val
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 f %irep=1:1:$g(%data(6)) i $d(%data(6,%irep)),%data(6,%irep)[$c(1) s %data(6,%irep)=$s($p(%data(6,%irep),$c(1))'="":$p(%data(6,%irep),$c(1)),1:$p(%data(6,%irep),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(1)),$p(%data(1),$c(1))'="" s %val=$p(%data(1),$c(1)) d fdi1 s $p(%data(1),$c(1),2)=%val
 i $d(%data(8)),$p(%data(8),$c(1))'="" s %val=$p(%data(8),$c(1)) d fdi8 s $p(%data(8),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt1451 q:'%ok
 q
 g ^mt1452
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0DAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0DBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0DBs2 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0DBs3 s %val=$p("Decrease|Increase|No Effect","|",$l($p("|D|I|N|","|"_%val_"|"),"|")) q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 i %mmmsqld(3)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0DAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%dataold(1),$C(1))=%mmmsqld(3)
 i $P(%dataold(1),$C(1))'="",$d(^CT("ST",$P(%dataold(1),$C(1))))
 i '$t
 e  i 1>$P(%dataold(1),$C(1)),$P(%dataold(1),$C(1))=+$P(%dataold(1),$C(1))
 i  g %0DBdun
 s %mmmsqln=$g(^CT("ST",$P(%dataold(1),$C(1))))
 s %dataold(2)=$p(%mmmsqln,"^",1) s %dataold(3)=$p(%mmmsqln,"^",2) s %dataold(4)=$p(%mmmsqln,"^",3) s %dataold(5)=$p(%mmmsqln,"^",4) s %dataold(7)=$p(%mmmsqln,"^",5) s %dataold(8)=$p(%mmmsqln,"^",6)
 k %dataold(6) s %dataold(6)=$g(^CT("ST",$P(%dataold(1),$C(1)),"REM",0)) s:'%dataold(6) %dataold(6)="" f %irep=1:1:%dataold(6) s %dataold(6,%irep)=$g(^(%irep))
 
 s %val=$P(%dataold(5),$C(1)) d %0DBs1:%val'="" s $P(%dataold(5),$C(1),2)=%val
 s %val=$P(%dataold(7),$C(1)) d %0DBs1:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(4),$C(1)) d %0DBs1:%val'="" s $P(%dataold(4),$C(1),2)=%val
 s %val=$P(%dataold(1),$C(1)) d %0DBs2:%val'="" s $P(%dataold(1),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0DBs3:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%RSEcuro s SQLCODE=$s($g(%RSEcurc):-101,1:0) q:SQLCODE'=0
 s %RSEcurc=1 k %RSEcurm
 s %RSEcurE=$zt,%RSEcurf=0,%RSEcure=0,%RSEcurL=""
 q
%0Efirst   ;  init
 ; asl MOD# 2
 s %RSEcurd(8)=""
%0EBk1 s %RSEcurd(8)=$o(^CT("ST",0,"Code",%RSEcurd(8)))
 i %RSEcurd(8)="" g %0EBdun
 s $P(%datars(1),$C(1))=""
%0EBk2 s $P(%datars(1),$C(1))=$o(^CT("ST",0,"Code",%RSEcurd(8),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0EBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0EBk1
 
 s %val=$P(%datars(1),$C(1)) d %0DBs2:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("ST",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0EBk2
 s %RSEcurn=$g(^CT("ST",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSEcurn,"^",1) s %datars(3)=$p(%RSEcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSEcurf=%RSEcurf+1 s %RSEcurc=10 q
%RSEcurf i '$g(%RSEcurc) s SQLCODE=-102 q
 i %RSEcurc=100 s SQLCODE=100 q
 s $zt="%0Eerr^"_$zn s $ze="" n %val g %0Efirst:%RSEcurc=1
 g %0EBk2
%0EBdun 
%0EAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSEcurc=100 q
%RSEcurc i '$g(%RSEcurc) s SQLCODE=-102 q
 k %RSEcurc,%RSEcurd,%RSEcure,%RSEcurE,%RSEcurf,%RSEcurl,%RSEcurL,%RSEcurn,%RSEcurr,%RSEcurR s SQLCODE=0 q
%0Eerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSEcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%RSFcuro s SQLCODE=$s($g(%RSFcurc):-101,1:0) q:SQLCODE'=0
 s %RSFcurc=1 k %RSFcurm
 s %RSFcurE=$zt,%RSFcurf=0,%RSFcure=0,%RSFcurL=""
 s %RSFcurd(8)=$P(%data(2),$C(1))
 q
%0Ffirst   ;  init
 s %RSFcurd(9)=$$ALPHAUP(%RSFcurd(8))
 ; asl MOD# 2
 s %RSFcurd(7)=%RSFcurd(9)
 i %RSFcurd(7)'="",$d(^CT("ST",0,"Code",%RSFcurd(7))) g %0FBg1
%0FBk1 s %RSFcurd(7)=$o(^CT("ST",0,"Code",%RSFcurd(7)))
 i %RSFcurd(7)="" g %0FBdun
%0FBg1 i (%RSFcurd(9)?1n.n),":"']%RSFcurd(7) g %0FBdun
 i '(%RSFcurd(9)=$e(%RSFcurd(7),1,$l(%RSFcurd(9)))) g:(%RSFcurd(9)?1n.n) %0FBk1 g %0FBdun
 s $P(%datars(1),$C(1))=""
%0FBk2 s $P(%datars(1),$C(1))=$o(^CT("ST",0,"Code",%RSFcurd(7),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0FBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0FBk1
 
 s %val=$P(%datars(1),$C(1)) d %0DBs2:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("ST",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0FBk2
 s %RSFcurn=$g(^CT("ST",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSFcurn,"^",1) s %datars(3)=$p(%RSFcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSFcurf=%RSFcurf+1 s %RSFcurc=10 q
%RSFcurf i '$g(%RSFcurc) s SQLCODE=-102 q
 i %RSFcurc=100 s SQLCODE=100 q
 s $zt="%0Ferr^"_$zn s $ze="" n %val g %0Ffirst:%RSFcurc=1
 g %0FBk2
%0FBdun 
%0FAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSFcurc=100 q
%RSFcurc i '$g(%RSFcurc) s SQLCODE=-102 q
 k %RSFcurc,%RSFcurd,%RSFcure,%RSFcurE,%RSFcurf,%RSFcurl,%RSFcurL,%RSFcurn,%RSFcurr,%RSFcurR s SQLCODE=0 q
%0Ferr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSFcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%RSGcuro s SQLCODE=$s($g(%RSGcurc):-101,1:0) q:SQLCODE'=0
 s %RSGcurc=1 k %RSGcurm
 s %RSGcurE=$zt,%RSGcurf=0,%RSGcure=0,%RSGcurL=""
 s %RSGcurd(8)=$P(%data(3),$C(1))
 q
%0Gfirst   ;  init
 s %RSGcurd(9)=$$ALPHAUP(%RSGcurd(8))
 ; asl MOD# 2
 s %RSGcurd(7)=%RSGcurd(9)
 i %RSGcurd(7)'="",$d(^CT("ST",0,"Desc",%RSGcurd(7))) g %0GBg1
%0GBk1 s %RSGcurd(7)=$o(^CT("ST",0,"Desc",%RSGcurd(7)))
 i %RSGcurd(7)="" g %0GBdun
%0GBg1 i (%RSGcurd(9)?1n.n),":"']%RSGcurd(7) g %0GBdun
 i '(%RSGcurd(9)=$e(%RSGcurd(7),1,$l(%RSGcurd(9)))) g:(%RSGcurd(9)?1n.n) %0GBk1 g %0GBdun
 s $P(%datars(1),$C(1))=""
%0GBk2 s $P(%datars(1),$C(1))=$o(^CT("ST",0,"Desc",%RSGcurd(7),$P(%datars(1),$C(1))))
 i $P(%datars(1),$C(1))="" g %0GBk1
 i $P(%datars(1),$C(1))'=+$P(%datars(1),$C(1)) g %0GBk1
 
 s %val=$P(%datars(1),$C(1)) d %0DBs2:%val'="" s $P(%datars(1),$C(1),2)=%val
 i $P(%datars(1),$C(1))'="",$d(^CT("ST",$P(%datars(1),$C(1))))
 i '$t
 e  i 1>$P(%datars(1),$C(1)),$P(%datars(1),$C(1))=+$P(%datars(1),$C(1))
 i  g %0GBk2
 s %RSGcurn=$g(^CT("ST",$P(%datars(1),$C(1))))
 s %datars(2)=$p(%RSGcurn,"^",1) s %datars(3)=$p(%RSGcurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSGcurf=%RSGcurf+1 s %RSGcurc=10 q
%RSGcurf i '$g(%RSGcurc) s SQLCODE=-102 q
 i %RSGcurc=100 s SQLCODE=100 q
 s $zt="%0Gerr^"_$zn s $ze="" n %val g %0Gfirst:%RSGcurc=1
 g %0GBk2
%0GBdun 
%0GAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSGcurc=100 q
%RSGcurc i '$g(%RSGcurc) s SQLCODE=-102 q
 k %RSGcurc,%RSGcurd,%RSGcure,%RSGcurE,%RSGcurf,%RSGcurl,%RSGcurL,%RSGcurn,%RSGcurr,%RSGcurR s SQLCODE=0 q
%0Gerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSGcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 i %mmmsqld(3)="",$L(%unique)>1 s %val=$E(%unique,2,999) d %0DAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 i %mmmsqld(1)'="",$d(^CT("ST",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0KBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Kc
%0KBdun 
%0KAdun 
%0Kc q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(%unique,$C(1)),%mmmsqld(5)=$P(%rowid,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$e(%unique,2,99999)
 i %mmmsqld(5)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0DAr1 s %mmmsqld(5)=%val
 s SQLCODE=100
   ;  init
 s %mmmsqld(8)=$$ALPHAUP(%mmmsqld(4))
 ; asl MOD# 2
 s %mmmsqld(7)=$g(%mmmsqld(8))
 i %mmmsqld(7)="" g %0IBdun
 s %mmmsqld(1)=""
%0IBk1 s %mmmsqld(1)=$o(^CT("ST",0,"Code",%mmmsqld(7),%mmmsqld(1)))
 i %mmmsqld(1)="" g %0IBdun
 i %mmmsqld(1)'=+%mmmsqld(1) g %0IBdun
 i '((%mmmsqld(1))'=(%mmmsqld(5))) g %0IBk1
 i %mmmsqld(1)'="",$d(^CT("ST",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0IBk1
 s %mmmsqln=$g(^CT("ST",%mmmsqld(1)))
 s %mmmsqld(3)=$p(%mmmsqln,"^",1)
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(%unique,$C(1)),%mmmsqld(5)=$P(%rowid,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$e(%unique,2,99999)
 i %mmmsqld(5)="",$L(%rowid)>1 s %val=$E(%rowid,2,999) d %0DAr1 s %mmmsqld(5)=%val
 s SQLCODE=100
   ;  init
 s %mmmsqld(8)=$$ALPHAUP(%mmmsqld(4))
 ; asl MOD# 2
 s %mmmsqld(7)=$g(%mmmsqld(8))
 i %mmmsqld(7)="" g %0JBdun
 s %mmmsqld(1)=""
%0JBk1 s %mmmsqld(1)=$o(^CT("ST",0,"Desc",%mmmsqld(7),%mmmsqld(1)))
 i %mmmsqld(1)="" g %0JBdun
 i %mmmsqld(1)'=+%mmmsqld(1) g %0JBdun
 i '((%mmmsqld(1))'=(%mmmsqld(5))) g %0JBk1
 i %mmmsqld(1)'="",$d(^CT("ST",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0JBk1
 s %mmmsqln=$g(^CT("ST",%mmmsqld(1)))
 s %mmmsqld(3)=$p(%mmmsqln,"^",2)
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
 g %0JBk1
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
]]></Routine>
</Export>
