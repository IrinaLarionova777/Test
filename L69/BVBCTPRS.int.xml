<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTPRS" type="INT" languagemode="0"><![CDATA[
BVBCTPRS ; IG 15/12/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:44 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$select^LVBCTPRS(ROWID)
 ; $$selcode^LVBCTPRS(par,ROWID)
 ; $$open^LVBCTPRS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTPRS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTPRS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTPRS(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTPRS()
 ; $$insert^LVBCTPRS(par)
 ; $$update^LVBCTPRS(ROWID)
 ; $$delete^LVBCTPRS(ROWID,Comments)
 ; $$getall^LVBCTPRS(par)
 ; 
 ; Insert the data
insert(par) K PLIST(1),PLIST(2) s PLIST(0)=$g(par)
 d %0Bo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) s ROWID=$g(ROWID)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
 d %CTPRS0o
 Q 0
 ;
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) K PLIST
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %CTPRS0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
selcode(par,ROWID) K PLIST s par=$g(par),ROWID=$g(ROWID)
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^BVBCTPRC(plist(3))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$C(1)_PLIST(4)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 ;
 Q
getall(par) N (par,PLIST) K ^TMP($zn,$j) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  d
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1),2)_$c(2)_$P(PLIST(3),$c(1),1)_$c(2)_$P(PLIST(3),$c(1),3)
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTPRS0o s SQLCODE=$s($g(%CTPRS0c):-101,1:0) q:SQLCODE'=0
 s %CTPRS0c=1 k %CTPRS0m
 s %CTPRS0E=$zt,%CTPRS0f=0,%CTPRS0e=0,%CTPRS0L=""
 s %CTPRS0d(2)=$P(par,$C(1))
 s:%CTPRS0d(2)="" %CTPRS0d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTPRS0d(1)=$g(%CTPRS0d(2))
 i %CTPRS0d(1)="" g %0ABdun
 s $P(%CTPRS0d(5),$C(1))=""
%0ABk1 s $P(%CTPRS0d(5),$C(1))=$o(^CT("PR",%CTPRS0d(1),"SPLIT",$P(%CTPRS0d(5),$C(1))))
 i $P(%CTPRS0d(5),$C(1))="" g %0ABdun
 i 1>$P(%CTPRS0d(5),$C(1)),$P(%CTPRS0d(5),$C(1))=+$P(%CTPRS0d(5),$C(1)) g %0ABk1
 i $P(%CTPRS0d(5),$C(1))'=+$P(%CTPRS0d(5),$C(1)) g %0ABdun
 s %CTPRS0n=$g(^CT("PR",%CTPRS0d(1),"SPLIT",$P(%CTPRS0d(5),$C(1))))
 s %CTPRS0d(6)=$p(%CTPRS0n,"^",1)
 s %CTPRS0d(4)=(%CTPRS0d(1))_"||"_($P(%CTPRS0d(5),$C(1)))
 s %val=$P(%CTPRS0d(5),$C(1)) d %0ABs1:%val'="" s $P(%CTPRS0d(5),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTPRS0f=%CTPRS0f+1 s %CTPRS0c=10 q
%CTPRS0f i '$g(%CTPRS0c) s SQLCODE=-102 q
 i %CTPRS0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTPRS0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTPRS0c=100 q
%CTPRS0c i '$g(%CTPRS0c) s SQLCODE=-102 q
 k %CTPRS0c,%CTPRS0d,%CTPRS0e,%CTPRS0E,%CTPRS0f,%CTPRS0l,%CTPRS0L,%CTPRS0n,%CTPRS0r,%CTPRS0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTPRS0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:3 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1421("1")
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^CT("PR",%mmmsqld(4),"SPLIT",$P(%mmmsqld(5),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(5),$C(1)),$P(%mmmsqld(5),$C(1))=+$P(%mmmsqld(5),$C(1))
 i  g %0CBdun
 k %data,%edit
 f icol=0:1:3 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1421(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),$P(%mmmsqld(4),$C(1))=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",$P(%mmmsqld(4),$C(1))'="",$d(^CT("PR",%mmmsqld(3),"SPLIT",$P(%mmmsqld(4),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(4),$C(1)),$P(%mmmsqld(4),$C(1))=+$P(%mmmsqld(4),$C(1))
 i  g %0DBdun
 d delete^mt1421(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTPRS0f q:SQLCODE'=0
 s PLIST(0)=%CTPRS0d(1),PLIST(1)=%CTPRS0d(4),PLIST(2)=%CTPRS0d(5),PLIST(3)=%CTPRS0d(6)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(8)=$p($g(%mmmsqld(3)),"||",1,1),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(8)'="",$P(PLIST(2),$C(1))'="",$d(^CT("PR",%mmmsqld(8),"SPLIT",$P(PLIST(2),$C(1))))
 i '$t
 e  i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1))
 i  g %0HBdun
 s %mmmsqln=$g(^CT("PR",%mmmsqld(8),"SPLIT",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(par,$C(1)),%mmmsqld(5)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(par,2,999)
 s:%mmmsqld(5)="" %mmmsqld(5)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(0)=$g(%mmmsqld(3))
 i PLIST(0)="" g %0IBdun
 s $P(PLIST(2),$C(1))=""
%0IBk1 s $P(PLIST(2),$C(1))=$o(^CT("PR",PLIST(0),"SPLIT",$P(PLIST(2),$C(1))))
 i $P(PLIST(2),$C(1))="" g %0IBdun
 i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1)) g %0IBk1
 i $P(PLIST(2),$C(1))'=+$P(PLIST(2),$C(1)) g %0IBdun
 s %mmmsqln=$g(^CT("PR",PLIST(0),"SPLIT",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 g:'((PLIST(3))=(%mmmsqld(5))) %0IBk1
 s PLIST(1)=(PLIST(0))_"||"_($P(PLIST(2),$C(1)))
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
