<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCRBLA" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCRBLA ; IG 29/4/98 ; MVB Control code access for CR_BatchLinePayments
 ;
 ; supported calls:
 ;
 ; $$select^LVBCRBLA(ROWID)
 ; $$open^LVBCRBLA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCRBLA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCRBLA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCRBLA(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCRBLA()
 ; $$insert^LVBCRBLA(par)
 ; $$update^LVBCRBLA(ROWID)
 ; $$delete^LVBCRBLA(ROWID)
 ;
  ;---&SQL(DECLARE CRBLA CURSOR FOR SELECT * FROM CR_BatchLinePayments
   ;---         WHERE CRBLA_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
 ; Insert the data
insert(par) K PLIST(1) s PLIST(0)=$g(par) d pre("N") 
  ;---&SQL(insert INTO CR_BatchLinePayments VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) s ROWID=$g(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CR_BatchLinePayments VALUES :PLIST() WHERE CRBLA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID) s ROWID=$g(ROWID)
  ;---&SQL(DELETE FROM CR_BatchLinePayments WHERE CRBLA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ;
 ; Open the cursor
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN CRBLA)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CRBLA0o
 Q 0
 ;
 ; Fetch the data
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par)
  ;---&SQL(FETCH CRBLA INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CRBLA) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CRBLA0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST
  ;---&SQL(SELECT * INTO :PLIST() FROM CR_BatchLinePayments WHERE CRBLA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTBC(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTCD(plist(6),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 Q
 ;
 q
%CRBLA0o s $zt="%CRBLA0E" s SQLCODE=$s($g(%CRBLA0c):-101,1:0) q:SQLCODE'=0  s %CRBLA0d(16)=0 s %CRBLA0d(17)=0,%CRBLA0d(18)=""
 s %CRBLA0d(12)=$g(par)
 s %CRBLA0c=1 q
%CRBLA0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CRBLA0c,%CRBLA0d,%CRBLA0E,%CRBLA0l,%CRBLA0n,%CRBLA0R,%CRBLA0Z q
%0Afirst 
 ; asl MOD# 2
 s %CRBLA0d(1)=%CRBLA0d(12)
 s %CRBLA0d(14)=$p(%CRBLA0d(1),"||"),%CRBLA0d(15)=$p(%CRBLA0d(1),"||",2)
 i %CRBLA0d(14)="" g %0ABdun
 i %CRBLA0d(15)="" g %0ABdun
 s %CRBLA0d(3)=""
%0ABk1 s %CRBLA0d(3)=$o(^TBAT(%CRBLA0d(14),%CRBLA0d(15),0,%CRBLA0d(3)))
 i %CRBLA0d(3)="" g %0ABdun
 s %CRBLA0d(25)=$g(^TBAT(%CRBLA0d(14),%CRBLA0d(15),0,%CRBLA0d(3)))
 s %CRBLA0d(4)=$p(%CRBLA0d(25),"\",1) s %CRBLA0d(5)=$p(%CRBLA0d(25),"\",2) s %CRBLA0d(6)=$p(%CRBLA0d(25),"\",7) s %CRBLA0d(7)=$p(%CRBLA0d(25),"\",8) s %CRBLA0d(8)=$p(%CRBLA0d(25),"\",4) s %CRBLA0d(9)=$p(%CRBLA0d(25),"\",5) s %CRBLA0d(10)=$p(%CRBLA0d(25),"\",6) s %CRBLA0d(11)=$p(%CRBLA0d(25),"\",3)
 s %CRBLA0d(2)=(%CRBLA0d(14))_"||"_(%CRBLA0d(15))_"||"_(%CRBLA0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TBAT($p(%CRBLA0d(2),"||",1),$p(%CRBLA0d(2),"||",2),0,$p(%CRBLA0d(2),"||",3))#"S":$zu(115,4) i $t { s %CRBLA0d(17)=1,%CRBLA0d(18)=$name(^TBAT($p(%CRBLA0d(2),"||",1),$p(%CRBLA0d(2),"||",2),0,$p(%CRBLA0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CR_BatchLinePayments for RowID value: "_%CRBLA0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CRBLA0d(14)=$p(%CRBLA0d(2),"||"),%CRBLA0d(15)=$p(%CRBLA0d(2),"||",2),%CRBLA0d(3)=$p(%CRBLA0d(2),"||",3)
 i %CRBLA0d(14)'="",%CRBLA0d(15)'="",%CRBLA0d(3)'="",$d(^TBAT(%CRBLA0d(14),%CRBLA0d(15),0,%CRBLA0d(3)))
 e  g %0ACdun
 s %CRBLA0d(32)=$g(^TBAT(%CRBLA0d(14),%CRBLA0d(15),0,%CRBLA0d(3)))
 s %CRBLA0d(4)=$p(%CRBLA0d(32),"\",1) s %CRBLA0d(5)=$p(%CRBLA0d(32),"\",2) s %CRBLA0d(6)=$p(%CRBLA0d(32),"\",7) s %CRBLA0d(7)=$p(%CRBLA0d(32),"\",8) s %CRBLA0d(8)=$p(%CRBLA0d(32),"\",4) s %CRBLA0d(9)=$p(%CRBLA0d(32),"\",5) s %CRBLA0d(10)=$p(%CRBLA0d(32),"\",6) s %CRBLA0d(11)=$p(%CRBLA0d(32),"\",3)
 s %CRBLA0d(1)=$p(%CRBLA0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CRBLA0d(16)=%CRBLA0d(16)+1,%ROWCOUNT=%CRBLA0d(16),%ROWID=%CRBLA0d(2),%CRBLA0c=10 q
%CRBLA0f i '$g(%CRBLA0c) { s SQLCODE=-102 q  } i %CRBLA0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CRBLA0d(16))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CRBLA0d(16),%CRBLA0c=100 q  } g %0Afirst:%CRBLA0c=1
%0ACdun i $zu(115,2)=1,$g(%CRBLA0d(17))=1 { l -@%CRBLA0d(18) s %CRBLA0d(17)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CRBLA0d(16),SQLCODE=100,%CRBLA0c=100 q
%CRBLA0c i '$g(%CRBLA0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CRBLA0d(16)),1:0)
 i $zu(115,2)=1,$g(%CRBLA0d(17))=1 { l -@%CRBLA0d(18) } k %CRBLA0c,%CRBLA0d,%CRBLA0E,%CRBLA0l,%CRBLA0n,%CRBLA0R,%CRBLA0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CRBLA0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:10 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CRBatchLinePayments.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TBAT(%mmmsqld(4),%mmmsqld(5),0,%mmmsqld(6)))
 e  g %0EBdun
 s %mmmsqld(15)=$$%getlock^User.CRBatchLinePayments.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TBAT(%mmmsqld(4),%mmmsqld(5),0,%mmmsqld(6)))
 e  g %0ECdun
 k %data
 f icol=0:1:10 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CRBatchLinePayments.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CRBatchLinePayments.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CRBatchLinePayments.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CRBatchLinePayments.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TBAT(%mmmsqld(3),%mmmsqld(4),0,%mmmsqld(5)))
 e  g %0GBdun
 s %mmmsqld(14)=$$%getlock^User.CRBatchLinePayments.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TBAT(%mmmsqld(3),%mmmsqld(4),0,%mmmsqld(5)))
 e  g %0GCdun
 d %delete^User.CRBatchLinePayments.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CRBatchLinePayments.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CRBatchLinePayments.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CRBatchLinePayments.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CRBLA0f q:SQLCODE'=0
 s PLIST(0)=%CRBLA0d(1),PLIST(1)=%CRBLA0d(2),PLIST(2)=%CRBLA0d(3),PLIST(3)=%CRBLA0d(4),PLIST(4)=%CRBLA0d(5),PLIST(5)=%CRBLA0d(6),PLIST(6)=%CRBLA0d(7),PLIST(7)=%CRBLA0d(8),PLIST(8)=%CRBLA0d(9),PLIST(9)=%CRBLA0d(10),PLIST(10)=%CRBLA0d(11)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(17)=0,%mmmsqld(18)=""
 s %mmmsqld(13)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(13)
 s %mmmsqld(15)=$p(PLIST(1),"||"),%mmmsqld(16)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(15)'="",%mmmsqld(16)'="",PLIST(2)'="",$d(^TBAT(%mmmsqld(15),%mmmsqld(16),0,PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(25)=$g(^TBAT(%mmmsqld(15),%mmmsqld(16),0,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2) s PLIST(5)=$p(%mmmsqld(25),"\",7) s PLIST(6)=$p(%mmmsqld(25),"\",8) s PLIST(7)=$p(%mmmsqld(25),"\",4) s PLIST(8)=$p(%mmmsqld(25),"\",5) s PLIST(9)=$p(%mmmsqld(25),"\",6) s PLIST(10)=$p(%mmmsqld(25),"\",3)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TBAT($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),0,$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(17)=1,%mmmsqld(18)=$name(^TBAT($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),0,$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CR_BatchLinePayments for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(15)=$p(PLIST(1),"||"),%mmmsqld(16)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(15)'="",%mmmsqld(16)'="",PLIST(2)'="",$d(^TBAT(%mmmsqld(15),%mmmsqld(16),0,PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(32)=$g(^TBAT(%mmmsqld(15),%mmmsqld(16),0,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"\",1) s PLIST(4)=$p(%mmmsqld(32),"\",2) s PLIST(5)=$p(%mmmsqld(32),"\",7) s PLIST(6)=$p(%mmmsqld(32),"\",8) s PLIST(7)=$p(%mmmsqld(32),"\",4) s PLIST(8)=$p(%mmmsqld(32),"\",5) s PLIST(9)=$p(%mmmsqld(32),"\",6) s PLIST(10)=$p(%mmmsqld(32),"\",3)
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) s %mmmsqld(17)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
