<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBDFRP" type="INT" languagemode="0" generated="1"><![CDATA[
LVBDFRP ; IG 11/5/98 ; LVB Control data access for DFRP DF_DynamicFunctionReqPos
 ;
 ; supported calls:
 ;
 ; $$insert^LVBDFRP(par)
 ; $$update^LVBDFRP(ROWID)
 ; $$select^LVBDFRP(ROWID)
 ; $$delete^LVBDFRP(ROWID)
 ; $$open^LVBDFRP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBDFRP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBDFRP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBDFRP(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBDFRP()
 ; $$getall^LVBDFRP(par)
 ;
  ;---&sql(DECLARE DFRP CURSOR FOR SELECT * FROM DF_DynamicFunctionReqPos
   ;---         WHERE DFRP_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN DFRP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DFRP0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH DFRP INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j,1)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j,1)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,1,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,1)
 q 0
 ;
close() n SQLCODE
  ;---&SQL(CLOSE DFRP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DFRP0c
 q 0
 ;
select(RowID) s RowID=$g(RowID) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM DF_DynamicFunctionReqPos WHERE DFRP_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO DF_DynamicFunctionReqPos VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE DF_DynamicFunctionReqPos VALUES :PLIST() WHERE DFRP_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM DF_DynamicFunctionReqPos WHERE DFRP_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 n plist,I,J,j,SQLCODE,X f J=2:1:PLIST i $d(PLIST(J)) s PLIST(J)=$p(PLIST(J),$c(1),1)
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$selskip^LVBCTTS($p(plist(3),"||",2))
 .s X="" i 'SQLCODE s X=plist(3)_$c(1)_PLIST(4)
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 .s xDate=$$seldata^LVBVISTS(plist(3),49),xTime=$$seldata^LVBVISTS(plist(3),50)
 .i xDate="" s xDate=$$seldata^LVBEPVIS($p(plist(3),"||",1),12),xTime=$$seldata^LVBEPVIS($p(plist(3),"||",1),13)
 .s X=plist(3)_$c(1)_xDate_$c(1)_xTime
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 q
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par) 
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%DFRP0o s $zt="%DFRP0E" s SQLCODE=$s($g(%DFRP0c):-101,1:0) q:SQLCODE'=0  s %DFRP0d(12)=0 s %DFRP0d(13)=0,%DFRP0d(14)=""
 s %DFRP0d(6)=$g(par)
 s %DFRP0c=1 q
%DFRP0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %DFRP0c,%DFRP0d,%DFRP0E,%DFRP0l,%DFRP0n,%DFRP0R,%DFRP0Z q
%0Afirst 
 ; asl MOD# 2
 s %DFRP0d(1)=%DFRP0d(6)
 s %DFRP0d(8)=$p(%DFRP0d(1),"||"),%DFRP0d(9)=$p(%DFRP0d(1),"||",2),%DFRP0d(10)=$p(%DFRP0d(1),"||",3),%DFRP0d(11)=$p(%DFRP0d(1),"||",4)
 i %DFRP0d(8)="" g %0ABdun
 i %DFRP0d(9)="" g %0ABdun
 i %DFRP0d(10)="" g %0ABdun
 i %DFRP0d(11)="" g %0ABdun
 s %DFRP0d(3)=""
%0ABk1 s %DFRP0d(3)=$o(^TEPIi("DFT",%DFRP0d(8),%DFRP0d(9),%DFRP0d(10),%DFRP0d(11),"SEQ",%DFRP0d(3)))
 i %DFRP0d(3)="" g %0ABdun
 s %DFRP0d(25)=$g(^TEPIi("DFT",%DFRP0d(8),%DFRP0d(9),%DFRP0d(10),%DFRP0d(11),"SEQ",%DFRP0d(3)))
 s %DFRP0d(4)=$p(%DFRP0d(25),"\",1) s %DFRP0d(5)=$p(%DFRP0d(25),"\",2)
 s %DFRP0d(2)=(%DFRP0d(8))_"||"_(%DFRP0d(9))_"||"_(%DFRP0d(10))_"||"_(%DFRP0d(11))_"||"_(%DFRP0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPIi("DFT",$p(%DFRP0d(2),"||",1),$p(%DFRP0d(2),"||",2),$p(%DFRP0d(2),"||",3),$p(%DFRP0d(2),"||",4),"SEQ",$p(%DFRP0d(2),"||",5))#"S":$zu(115,4) i $t { s %DFRP0d(13)=1,%DFRP0d(14)=$name(^TEPIi("DFT",$p(%DFRP0d(2),"||",1),$p(%DFRP0d(2),"||",2),$p(%DFRP0d(2),"||",3),$p(%DFRP0d(2),"||",4),"SEQ",$p(%DFRP0d(2),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DF_DynamicFunctionReqPos for RowID value: "_%DFRP0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %DFRP0d(8)=$p(%DFRP0d(2),"||"),%DFRP0d(9)=$p(%DFRP0d(2),"||",2),%DFRP0d(10)=$p(%DFRP0d(2),"||",3),%DFRP0d(11)=$p(%DFRP0d(2),"||",4),%DFRP0d(3)=$p(%DFRP0d(2),"||",5)
 i %DFRP0d(8)'="",%DFRP0d(9)'="",%DFRP0d(10)'="",%DFRP0d(11)'="",%DFRP0d(3)'="",$d(^TEPIi("DFT",%DFRP0d(8),%DFRP0d(9),%DFRP0d(10),%DFRP0d(11),"SEQ",%DFRP0d(3)))
 e  g %0ACdun
 s %DFRP0d(36)=$g(^TEPIi("DFT",%DFRP0d(8),%DFRP0d(9),%DFRP0d(10),%DFRP0d(11),"SEQ",%DFRP0d(3)))
 s %DFRP0d(4)=$p(%DFRP0d(36),"\",1) s %DFRP0d(5)=$p(%DFRP0d(36),"\",2)
 s %DFRP0d(1)=$p(%DFRP0d(2),"||",1,4)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %DFRP0d(12)=%DFRP0d(12)+1,%ROWCOUNT=%DFRP0d(12),%ROWID=%DFRP0d(2),%DFRP0c=10 q
%DFRP0f i '$g(%DFRP0c) { s SQLCODE=-102 q  } i %DFRP0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%DFRP0d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%DFRP0d(12),%DFRP0c=100 q  } g %0Afirst:%DFRP0c=1
%0ACdun i $zu(115,2)=1,$g(%DFRP0d(13))=1 { l -@%DFRP0d(14) s %DFRP0d(13)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%DFRP0d(12),SQLCODE=100,%DFRP0c=100 q
%DFRP0c i '$g(%DFRP0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%DFRP0d(12)),1:0)
 i $zu(115,2)=1,$g(%DFRP0d(13))=1 { l -@%DFRP0d(14) } k %DFRP0c,%DFRP0d,%DFRP0E,%DFRP0l,%DFRP0n,%DFRP0R,%DFRP0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %DFRP0c=100 q
%0Do d %DFRP0f q:SQLCODE'=0
 s PLIST(0)=%DFRP0d(1),PLIST(1)=%DFRP0d(2),PLIST(2)=%DFRP0d(3),PLIST(3)=%DFRP0d(4),PLIST(4)=%DFRP0d(5)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(13)=0,%mmmsqld(14)=""
 s %mmmsqld(7)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),%mmmsqld(12)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TEPIi("DFT",%mmmsqld(9),%mmmsqld(10),%mmmsqld(11),%mmmsqld(12),"SEQ",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(25)=$g(^TEPIi("DFT",%mmmsqld(9),%mmmsqld(10),%mmmsqld(11),%mmmsqld(12),"SEQ",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,4)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPIi("DFT",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4),"SEQ",$p(PLIST(1),"||",5))#"S":$zu(115,4) i $t { s %mmmsqld(13)=1,%mmmsqld(14)=$name(^TEPIi("DFT",$p(PLIST(1),"||",1),$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),$p(PLIST(1),"||",4),"SEQ",$p(PLIST(1),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DF_DynamicFunctionReqPos for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),%mmmsqld(12)=$p(PLIST(1),"||",4),PLIST(2)=$p(PLIST(1),"||",5)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TEPIi("DFT",%mmmsqld(9),%mmmsqld(10),%mmmsqld(11),%mmmsqld(12),"SEQ",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(36)=$g(^TEPIi("DFT",%mmmsqld(9),%mmmsqld(10),%mmmsqld(11),%mmmsqld(12),"SEQ",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(36),"\",1) s PLIST(4)=$p(%mmmsqld(36),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,4)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) s %mmmsqld(13)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(13))=1 { l -@%mmmsqld(14) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DFDynamicFunctionReqPos.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(9)=0 s %mmmsqld(10)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TEPIi("DFT",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6),%mmmsqld(7),"SEQ",%mmmsqld(8)))
 e  g %0JBdun
 s %mmmsqld(21)=$$%getlock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(2)) i '%mmmsqld(21) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4),%mmmsqld(8)=$p(%mmmsqld(2),"||",5)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TEPIi("DFT",%mmmsqld(4),%mmmsqld(5),%mmmsqld(6),%mmmsqld(7),"SEQ",%mmmsqld(8)))
 e  g %0JCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.DFDynamicFunctionReqPos.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(9))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(21)=1 %ReleaseLock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(21)=1 %ReleaseLock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(9)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(21))=1 %ReleaseLock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPIi("DFT",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5),%mmmsqld(6),"SEQ",%mmmsqld(7)))
 e  g %0LBdun
 s %mmmsqld(20)=$$%getlock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(1)) i '%mmmsqld(20) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4),%mmmsqld(7)=$p(%mmmsqld(1),"||",5)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPIi("DFT",%mmmsqld(3),%mmmsqld(4),%mmmsqld(5),%mmmsqld(6),"SEQ",%mmmsqld(7)))
 e  g %0LCdun
 d %delete^User.DFDynamicFunctionReqPos.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(20)=1 %ReleaseLock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(20)=1 %ReleaseLock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(20))=1 %ReleaseLock^User.DFDynamicFunctionReqPos.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
