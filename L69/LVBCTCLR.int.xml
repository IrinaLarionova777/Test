<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTCLR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTCLR ; IG 09/07/98 ; MVB Control data access for CT_ClientsReports
 ;
 ; supported calls:
 ;
 ; $$open^LVBCTCLR(skip,code,group,display,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTCLR(skip,code,group,display,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTCLR(skip,code,group,display,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTCLR(skip,code,group,display,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTCLR()
 ; $$update^LVBCTCLR(ROWID)
 ; $$select^LVBCTCLR(ROWID,skip)
 ; $$seldata^LVBCTCLR(ROWID,data)
 ; $$getall^LVBCTCLR(code,group,display)
 ;
  ;---&SQL(DECLARE CTCLR CURSOR FOR SELECT * FROM CT_ClientsReports
   ;---         WHERE CTCLR_Report_DR %STARTSWITH :code
   ;---           AND ((CTCLR_ReportGroup_DR = :group) OR (:group IS NULL))
   ;---           AND ((CTCLR_Display = :display) OR (:display IS NULL))
   ;---         ORDER BY CTCLR_ReportGroup_DR)
   ;--- ** SQL PUBLIC Variables: SQLCODE, code, display, group
 ; Update the data
update(RowID) k PLIST(1) s RowID=$g(RowID) d pre("Y") 
 i '$d(^TTAB("REPORT-GENERIC",RowID)) s ^TTAB("REPORT-GENERIC",RowID)=""
  ;---&SQL(UPDATE CT_ClientsReports VALUES :PLIST() WHERE CTCLR_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Co
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Open the cursor
open(skip,code,group,display,p4,p5,p6,p7,p8,p9) s skip=$g(skip),code=$g(code),group=$g(group),display=$g(display)
 ; set new reports
 i $$open^MVBSSRG()
 f  q:$$fetch^MVBSSRG()  s RowID=$p(PLIST(2),$c(1)) d
 .i '$d(^TTAB("REPORT-GENERIC",RowID)) s ^TTAB("REPORT-GENERIC",RowID)=""
 .i $p(^TTAB("REPORT-GENERIC",RowID),"\",9)="" s $p(^TTAB("REPORT-GENERIC",RowID),"\",9)=PLIST(3)
 i $$close^MVBSSRG()
 ; delete old reports
 s RowID="" f  s RowID=$o(^TTAB("REPORT-GENERIC",RowID)) q:RowID=""  i $$select^MVBSSRG(RowID) k ^TTAB("REPORT-GENERIC",RowID)
  ;---&SQL(OPEN CTCLR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTCLR0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,code,group,display,p4,p5,p6,p7,p8,p9) s skip=$g(skip),code=$g(code),group=$g(group),display=$g(display) K PLIST
  ;---&SQL(FETCH CTCLR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE
 ; Fetch all data
fetchbuffer(skip,code,group,display,p4,p5,p6,p7,p8,p9) s skip=$g(skip),code=$g(code),group=$g(group),display=$g(display) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,code,group,display) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,code,group,display,p4,p5,p6,p7,p8,p9) N (skip,code,group,display,PLIST) K ^TMP($zn,$j)
 s skip=$g(skip),code=$g(code),group=$g(group),display=$g(display)
 i $$open(skip,code,group,display)
 f cnt=1:1 Q:$$fetch(skip,code,group,display)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTCLR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTCLR0c
 q 0
 ;
 ; select data by code
select(RowID,skip) K PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_ClientsReports WHERE CTCLR_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=9 s result=$p($g(^TTAB("REPORT-GENERIC",ROWID)),"\",6) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ; Pre-filing adjustments
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 q
 ;
 ; Post-filing adjustments
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTPG(plist(11),"Y")
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 ;
 f J=6,10 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTPSF(plist(J),"Y")
 .S X="" I 'SQLCODE S X=PLIST(1)_$C(1)_PLIST(1)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 q
getall(code,group,display) N (code,group,display,PLIST) s code=$g(code),group=$g(group),display=$g(display) K ^TMP($ZN,$J)
 I $$open("Y",code,group,display)
 F cnt=1:1 Q:$$fetch("Y",code,group,display)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(4),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
%CTCLR0o s $zt="%CTCLR0E" s SQLCODE=$s($g(%CTCLR0c):-101,1:0) q:SQLCODE'=0  s %CTCLR0d(22)=0 s %CTCLR0d(23)=0,%CTCLR0d(24)=""
 s %CTCLR0d(14)=$g(code),%CTCLR0d(15)=$g(group),%CTCLR0d(16)=$g(group),%CTCLR0d(17)=$g(display),%CTCLR0d(18)=$g(display)
 s %CTCLR0t(1)=$i(^||%sql.temp)
 s %CTCLR0d(21)=$zu(28,%CTCLR0d(17),7)
 s %CTCLR0c=1 q
%CTCLR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTCLR0c,%CTCLR0d,%CTCLR0E,%CTCLR0l,%CTCLR0n,%CTCLR0R,%CTCLR0s,%CTCLR0t,%CTCLR0Z q
%0Afirst 
 k ^||%sql.temp(%CTCLR0t(1),0) s ^||%sql.temp(%CTCLR0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTCLR0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTCLR0t(1),0))
 s %CTCLR0s(10)=""
%0ACk1 s %CTCLR0s(10)=$o(^||%sql.temp(%CTCLR0t(1),0,%CTCLR0s(10)))
 i %CTCLR0s(10)="" g %0ACdun
 s %CTCLR0d(10)=$s(%CTCLR0s(10)=-1E14:"",1:%CTCLR0s(10))
 s %CTCLR0s(1)=""
%0ACk2 s %CTCLR0s(1)=$o(^||%sql.temp(%CTCLR0t(1),0,%CTCLR0s(10),%CTCLR0s(1)))
 i %CTCLR0s(1)="" g %0ACk1
 s %CTCLR0d(1)=$s(%CTCLR0s(1)=-1E14:"",1:%CTCLR0s(1))
 s %CTCLR0d(32)=$g(^||%sql.temp(%CTCLR0t(1),0,%CTCLR0s(10),%CTCLR0s(1)))
 s %CTCLR0d(2)=$lg(%CTCLR0d(32),1) s %CTCLR0d(3)=$lg(%CTCLR0d(32),5) s %CTCLR0d(4)=$lg(%CTCLR0d(32),10) s %CTCLR0d(5)=$lg(%CTCLR0d(32),11) s %CTCLR0d(6)=$lg(%CTCLR0d(32),3) s %CTCLR0d(7)=$lg(%CTCLR0d(32),8) s %CTCLR0d(8)=$lg(%CTCLR0d(32),7) s %CTCLR0d(9)=$lg(%CTCLR0d(32),2) s %CTCLR0d(11)=$lg(%CTCLR0d(32),6) s %CTCLR0d(12)=$lg(%CTCLR0d(32),9) s %CTCLR0d(13)=$lg(%CTCLR0d(32),4)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("REPORT-GENERIC",$p(%CTCLR0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTCLR0d(23)=1,%CTCLR0d(24)=$name(^TTAB("REPORT-GENERIC",$p(%CTCLR0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ClientsReports for RowID value: "_%CTCLR0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTCLR0d(1)'="",$d(^TTAB("REPORT-GENERIC",%CTCLR0d(1)))
 e  g %0ADdun
 s %CTCLR0d(37)=$g(^TTAB("REPORT-GENERIC",%CTCLR0d(1)))
 s %CTCLR0d(10)=$p(%CTCLR0d(37),"\",4)
 g:'(((%CTCLR0d(10)'="")&&(%CTCLR0d(10)=%CTCLR0d(15)))||(%CTCLR0d(16)="")) %0ADdun
 s %CTCLR0d(2)=$p(%CTCLR0d(37),"\",1) s %CTCLR0d(3)=$p(%CTCLR0d(37),"\",9) s %CTCLR0d(6)=$p(%CTCLR0d(37),"\",3) s %CTCLR0d(7)=$p(%CTCLR0d(37),"\",5) s %CTCLR0d(8)=$p(%CTCLR0d(37),"\",6) s %CTCLR0d(9)=$p(%CTCLR0d(37),"\",2) s %CTCLR0d(11)=$p(%CTCLR0d(37),"\",7) s %CTCLR0d(13)=$p(%CTCLR0d(37),"\",8)
 s %CTCLR0d(12)=$$CT013^at330($g(%CTCLR0d(1))) s %CTCLR0d(4)=$$CT005^at330($g(%CTCLR0d(1))) s %CTCLR0d(5)=$$CT006^at330($g(%CTCLR0d(1))) s %CTCLR0d(20)=$zu(28,%CTCLR0d(11),7)
 g:'(($c(0)[%CTCLR0d(14))||(%CTCLR0d(14)=$c(32,0)&&($e(%CTCLR0d(1))=$c(32)))||(%CTCLR0d(14)=$e(%CTCLR0d(1),1,$l(%CTCLR0d(14))))) %0ADdun
 g:'(((%CTCLR0d(20)'=" ")&&(%CTCLR0d(20)=%CTCLR0d(21)))||(%CTCLR0d(18)="")) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTCLR0d(22)=%CTCLR0d(22)+1,%ROWCOUNT=%CTCLR0d(22),%ROWID=%CTCLR0d(1),%CTCLR0c=10 q
%CTCLR0f i '$g(%CTCLR0c) { s SQLCODE=-102 q  } i %CTCLR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTCLR0d(22))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTCLR0d(22),%CTCLR0c=100 q  } g %0Afirst:%CTCLR0c=1
%0ADdun i $zu(115,2)=1,$g(%CTCLR0d(23))=1 { l -@%CTCLR0d(24) s %CTCLR0d(23)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTCLR0d(22),SQLCODE=100,%CTCLR0c=100 q
%CTCLR0c i '$g(%CTCLR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTCLR0d(22)),1:0) f %CTCLR0d(25)=1 { i $sortend(^||%sql.temp(%CTCLR0t(%CTCLR0d(25)),0),0) } k ^||%sql.temp(%CTCLR0t(1))
 i $zu(115,2)=1,$g(%CTCLR0d(23))=1 { l -@%CTCLR0d(24) } k %CTCLR0c,%CTCLR0d,%CTCLR0E,%CTCLR0l,%CTCLR0n,%CTCLR0R,%CTCLR0s,%CTCLR0t,%CTCLR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTCLR0c=100
 f %CTCLR0d(25)=1 i $sortend(^||%sql.temp(%CTCLR0t(%CTCLR0d(25)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTCLR0d(1)=$s(%CTCLR0d(14)=$c(0):"",%CTCLR0d(14)=$c(32,0):" ",1:%CTCLR0d(14))
 i %CTCLR0d(1)'="",$d(^TTAB("REPORT-GENERIC",%CTCLR0d(1))) g %0ABg1
%0ABk1 s %CTCLR0d(1)=$o(^TTAB("REPORT-GENERIC",%CTCLR0d(1)))
 i %CTCLR0d(1)="" g %0ABdun
%0ABg1 i (%CTCLR0d(14)?1n.n),":"']%CTCLR0d(1) g %0ABdun
 i '(($c(0)[%CTCLR0d(14))||(($c(32,0)[%CTCLR0d(14))&&($e(%CTCLR0d(1))=" "))||(%CTCLR0d(14)=$e(%CTCLR0d(1),1,$l(%CTCLR0d(14))))) g:(%CTCLR0d(14)?1n.n) %0ABk1 g %0ABdun
 s %CTCLR0d(30)=$g(^TTAB("REPORT-GENERIC",%CTCLR0d(1)))
 s %CTCLR0d(10)=$p(%CTCLR0d(30),"\",4)
 g:'(((%CTCLR0d(10)'="")&&(%CTCLR0d(10)=%CTCLR0d(15)))||(%CTCLR0d(16)="")) %0ABk1
 s %CTCLR0d(2)=$p(%CTCLR0d(30),"\",1) s %CTCLR0d(3)=$p(%CTCLR0d(30),"\",9) s %CTCLR0d(6)=$p(%CTCLR0d(30),"\",3) s %CTCLR0d(7)=$p(%CTCLR0d(30),"\",5) s %CTCLR0d(8)=$p(%CTCLR0d(30),"\",6) s %CTCLR0d(9)=$p(%CTCLR0d(30),"\",2) s %CTCLR0d(11)=$p(%CTCLR0d(30),"\",7) s %CTCLR0d(13)=$p(%CTCLR0d(30),"\",8)
 s %CTCLR0d(12)=$$CT013^at330($g(%CTCLR0d(1))) s %CTCLR0d(4)=$$CT005^at330($g(%CTCLR0d(1))) s %CTCLR0d(5)=$$CT006^at330($g(%CTCLR0d(1))) s %CTCLR0d(20)=$zu(28,%CTCLR0d(11),7)
 g:'(((%CTCLR0d(20)'=" ")&&(%CTCLR0d(20)=%CTCLR0d(21)))||(%CTCLR0d(18)="")) %0ABk1
 s %CTCLR0s(10)=$s(%CTCLR0d(10)'="":%CTCLR0d(10),1:-1E14),%CTCLR0s(1)=$s(%CTCLR0d(1)'="":%CTCLR0d(1),1:-1E14),%CTCLR0d(31)="",$li(%CTCLR0d(31),1)=%CTCLR0d(2),$li(%CTCLR0d(31),5)=%CTCLR0d(3),$li(%CTCLR0d(31),10)=%CTCLR0d(4),$li(%CTCLR0d(31),11)=%CTCLR0d(5),$li(%CTCLR0d(31),3)=%CTCLR0d(6),$li(%CTCLR0d(31),8)=%CTCLR0d(7),$li(%CTCLR0d(31),7)=%CTCLR0d(8),$li(%CTCLR0d(31),2)=%CTCLR0d(9),$li(%CTCLR0d(31),6)=%CTCLR0d(11),$li(%CTCLR0d(31),9)=%CTCLR0d(12),$li(%CTCLR0d(31),4)=%CTCLR0d(13),^||%sql.temp(%CTCLR0t(1),0,%CTCLR0s(10),%CTCLR0s(1))=%CTCLR0d(31)
 g %0ABk1
%0ABdun 
 q
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("REPORT-GENERIC",%mmmsqld(2)))
 e  g %0CBdun
 s %mmmsqld(10)=$$%getlock^User.CTClientsReports.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("REPORT-GENERIC",%mmmsqld(2)))
 e  g %0CCdun
 k %data
 f icol=0:1:14 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTClientsReports.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTClientsReports.T1(%mmmsqld(2)) g %0Cc
%0CCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTClientsReports.T1(%mmmsqld(2)) g:SQLCODE<0 %0Cc
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTClientsReports.T1(%mmmsqld(2)) g %0Cc
%0Fo d %CTCLR0f q:SQLCODE'=0
 s PLIST(1)=%CTCLR0d(1),PLIST(2)=%CTCLR0d(1),PLIST(3)=%CTCLR0d(2),PLIST(4)=%CTCLR0d(3),PLIST(5)=%CTCLR0d(4),PLIST(6)=%CTCLR0d(5),PLIST(7)=%CTCLR0d(6),PLIST(8)=%CTCLR0d(7),PLIST(9)=%CTCLR0d(8),PLIST(10)=%CTCLR0d(9),PLIST(11)=%CTCLR0d(10),PLIST(12)=%CTCLR0d(11),PLIST(13)=%CTCLR0d(12),PLIST(14)=%CTCLR0d(13)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(17)=0,%mmmsqld(18)=""
 s %mmmsqld(15)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(15)
 i PLIST(2)'="",$d(^TTAB("REPORT-GENERIC",PLIST(2)))
 e  g %0HBdun
 s %mmmsqld(23)=$g(^TTAB("REPORT-GENERIC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",9) s PLIST(7)=$p(%mmmsqld(23),"\",3) s PLIST(8)=$p(%mmmsqld(23),"\",5) s PLIST(9)=$p(%mmmsqld(23),"\",6) s PLIST(10)=$p(%mmmsqld(23),"\",2) s PLIST(11)=$p(%mmmsqld(23),"\",4) s PLIST(12)=$p(%mmmsqld(23),"\",7) s PLIST(14)=$p(%mmmsqld(23),"\",8)
 s PLIST(13)=$$CT013^at330($g(PLIST(2))) s PLIST(5)=$$CT005^at330($g(PLIST(2))) s PLIST(6)=$$CT006^at330($g(PLIST(2)))
 g:$zu(115,2)=0 %0HBuncommitted i $zu(115,2)=1 l +^TTAB("REPORT-GENERIC",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(17)=1,%mmmsqld(18)=$name(^TTAB("REPORT-GENERIC",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_ClientsReports for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("REPORT-GENERIC",PLIST(2)))
 e  g %0HCdun
 s %mmmsqld(28)=$g(^TTAB("REPORT-GENERIC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",1) s PLIST(4)=$p(%mmmsqld(28),"\",9) s PLIST(7)=$p(%mmmsqld(28),"\",3) s PLIST(8)=$p(%mmmsqld(28),"\",5) s PLIST(9)=$p(%mmmsqld(28),"\",6) s PLIST(10)=$p(%mmmsqld(28),"\",2) s PLIST(11)=$p(%mmmsqld(28),"\",4) s PLIST(12)=$p(%mmmsqld(28),"\",7) s PLIST(14)=$p(%mmmsqld(28),"\",8)
 s PLIST(13)=$$CT013^at330($g(PLIST(2))) s PLIST(5)=$$CT005^at330($g(PLIST(2))) s PLIST(6)=$$CT006^at330($g(PLIST(2)))
%0HBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Hc
%0HCdun i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) s %mmmsqld(17)=0 }
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) } q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Hc
]]></Routine>
</Export>
