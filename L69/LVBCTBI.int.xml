<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTBI" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTBI ; IG 29/4/98 ; MVB Control code access for CT_BillingItem
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTBI(ROWID,skip)
 ; $$seldata^LVBCTBI(ROWID,data)
 ; $$open^LVBCTBI(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTBI(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTBI(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTBI(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTBI()
 ; $$insert^LVBCTBI()
 ; $$update^LVBCTBI(ROWID)
 ; $$delete^LVBCTBI(ROWID,Comments)
 ; $$getall^LVBCTBI(dep,Continue)
 ;
  ;---&SQL(DECLARE CTBI1 CURSOR FOR SELECT * FROM CT_BillingItem)
   ;--- ** SQL PUBLIC Variables: SQLCODE
  ;---&SQL(DECLARE CTBI2 CURSOR FOR SELECT * FROM CT_BillingItem
   ;---         WHERE CTBI_Department_DR = :dep
   ;---         ORDER BY CTBI_Department_DR)
   ;--- ** SQL PUBLIC Variables: SQLCODE, dep
FIX k ^TTABi("IB")
 d ##class(User.CTBillingItem).%BuildIndices()
 q
description() s result="N"
 s x="" f  s x=$o(^TTAB("IB",x)) q:x=""  i $l($p(^(x),"\",4)) s result="Y" q
 q result
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_BillingItem VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE CT_BillingItem VALUES :PLIST() WHERE CTBI_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_BillingItem WHERE CTBI_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Io
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) s dep=$g(dep),skip=$g(skip)
  ;---i '$l(dep) &SQL(OPEN CTBI1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i '$l(dep) Do %CTBI10o
  ;---i $l(dep) &SQL(OPEN CTBI2)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i $l(dep) Do %CTBI20o
 Q 0
 ;
 ; Fetch the data
fetch(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) s dep=$g(dep),skip=$g(skip) K PLIST
  ;---i '$l(dep) &SQL(FETCH CTBI1 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i '$l(dep) Do %0Mo
  ;---i $l(dep) &SQL(FETCH CTBI2 INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i $l(dep) Do %0No
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) s dep=$g(dep),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(dep,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (dep,skip,PLIST) s dep=$g(dep),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(dep,skip)
 f cnt=1:1 Q:$$fetch(dep,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() 
  ;---&SQL(CLOSE CTBI1) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTBI10c 
  ;---&SQL(CLOSE CTBI2) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTBI20c 
 q 0
 ; select data by code
select(ROWID,skip) K PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_BillingItem WHERE CTBI_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Qo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=4 s result=$p($g(^TTAB("IB",ROWID)),"\",2) q
 .i data=8 s result=$p($g(^TTAB("IB",ROWID)),"\",6) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDEP(plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 Q
getall(dep,Continue) n (dep,Continue,PLIST) s dep=$g(dep),Continue=$g(Continue)
 i Continue'="Y" d
 .k ^TMP($zn,$j)
 .i $$open(dep,"Y")
 .f cnt=1:1 q:$$fetch(dep,"Y")  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_$p(PLIST(9),$c(1))
 .i $$close()
 k PLIST s (sum,x)="" f j=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(j)=^(x),sum=sum+$l(^(x)) k ^TMP($zn,$j,x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
%CTBI10o s $zt="%CTBI10E" s SQLCODE=$s($g(%CTBI10c):-101,1:0) q:SQLCODE'=0  s %CTBI10d(12)=0 s %CTBI10d(13)=0,%CTBI10d(14)=""
 s %CTBI10c=1 q
%CTBI10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTBI10c,%CTBI10d,%CTBI10E,%CTBI10l,%CTBI10n,%CTBI10R,%CTBI10Z q
%0Afirst 
 ; asl MOD# 2
 s %CTBI10d(1)=""
%0ABk1 s %CTBI10d(1)=$o(^TTAB("IB",%CTBI10d(1)))
 i %CTBI10d(1)="" g %0ABdun
 s %CTBI10d(19)=$g(^TTAB("IB",%CTBI10d(1)))
 s %CTBI10d(2)=$p(%CTBI10d(19),"\",1) s %CTBI10d(3)=$p(%CTBI10d(19),"\",2) s %CTBI10d(4)=$p(%CTBI10d(19),"\",3) s %CTBI10d(5)=$p(%CTBI10d(19),"\",4) s %CTBI10d(6)=$p(%CTBI10d(19),"\",5) s %CTBI10d(7)=$p(%CTBI10d(19),"\",6) s %CTBI10d(8)=$p(%CTBI10d(19),"\",7) s %CTBI10d(9)=$p(%CTBI10d(19),"\",8) s %CTBI10d(10)=$p(%CTBI10d(19),"\",9)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("IB",$p(%CTBI10d(1),"||",1))#"S":$zu(115,4) i $t { s %CTBI10d(13)=1,%CTBI10d(14)=$name(^TTAB("IB",$p(%CTBI10d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_BillingItem for RowID value: "_%CTBI10d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 i %CTBI10d(1)'="",$d(^TTAB("IB",%CTBI10d(1)))
 e  g %0ACdun
 s %CTBI10d(24)=$g(^TTAB("IB",%CTBI10d(1)))
 s %CTBI10d(2)=$p(%CTBI10d(24),"\",1) s %CTBI10d(3)=$p(%CTBI10d(24),"\",2) s %CTBI10d(4)=$p(%CTBI10d(24),"\",3) s %CTBI10d(5)=$p(%CTBI10d(24),"\",4) s %CTBI10d(6)=$p(%CTBI10d(24),"\",5) s %CTBI10d(7)=$p(%CTBI10d(24),"\",6) s %CTBI10d(8)=$p(%CTBI10d(24),"\",7) s %CTBI10d(9)=$p(%CTBI10d(24),"\",8) s %CTBI10d(10)=$p(%CTBI10d(24),"\",9)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTBI10d(12)=%CTBI10d(12)+1,%ROWCOUNT=%CTBI10d(12),%ROWID=%CTBI10d(1),%CTBI10c=10 q
%CTBI10f i '$g(%CTBI10c) { s SQLCODE=-102 q  } i %CTBI10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTBI10d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTBI10d(12),%CTBI10c=100 q  } g %0Afirst:%CTBI10c=1
%0ACdun i $zu(115,2)=1,$g(%CTBI10d(13))=1 { l -@%CTBI10d(14) s %CTBI10d(13)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTBI10d(12),SQLCODE=100,%CTBI10c=100 q
%CTBI10c i '$g(%CTBI10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTBI10d(12)),1:0)
 i $zu(115,2)=1,$g(%CTBI10d(13))=1 { l -@%CTBI10d(14) } k %CTBI10c,%CTBI10d,%CTBI10E,%CTBI10l,%CTBI10n,%CTBI10R,%CTBI10Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTBI10c=100 q
%CTBI20o s $zt="%CTBI20E" s SQLCODE=$s($g(%CTBI20c):-101,1:0) q:SQLCODE'=0  s %CTBI20d(15)=0 s %CTBI20d(16)=0,%CTBI20d(17)=""
 s %CTBI20d(11)=$g(dep)
 s %CTBI20c=1 q
%CTBI20E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTBI20c,%CTBI20d,%CTBI20E,%CTBI20l,%CTBI20n,%CTBI20R,%CTBI20Z q
%0Cfirst 
 ; asl MOD# 2
 s %CTBI20d(3)=%CTBI20d(11)
 i %CTBI20d(3)="" g %0CBdun
 i '(%CTBI20d(3)'="") g %0CBdun
 s %CTBI20d(1)=""
%0CBk1 s %CTBI20d(1)=$o(^TTABi("IB",%CTBI20d(3),%CTBI20d(1)))
 i %CTBI20d(1)="" g %0CBdun
 i %CTBI20d(1)'="",$d(^TTAB("IB",%CTBI20d(1)))
 e  g %0CBk1
 s %CTBI20d(27)=$g(^TTAB("IB",%CTBI20d(1)))
 s %CTBI20d(2)=$p(%CTBI20d(27),"\",1) s %CTBI20d(4)=$p(%CTBI20d(27),"\",3) s %CTBI20d(5)=$p(%CTBI20d(27),"\",4) s %CTBI20d(6)=$p(%CTBI20d(27),"\",5) s %CTBI20d(7)=$p(%CTBI20d(27),"\",6) s %CTBI20d(8)=$p(%CTBI20d(27),"\",7) s %CTBI20d(9)=$p(%CTBI20d(27),"\",8) s %CTBI20d(10)=$p(%CTBI20d(27),"\",9)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("IB",$p(%CTBI20d(1),"||",1))#"S":$zu(115,4) i $t { s %CTBI20d(16)=1,%CTBI20d(17)=$name(^TTAB("IB",$p(%CTBI20d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_BillingItem for RowID value: "_%CTBI20d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTBI20d(13)=$lb(""_%CTBI20d(3))
 i %CTBI20d(1)'="",$d(^TTAB("IB",%CTBI20d(1)))
 e  g %0CCdun
 s %CTBI20d(32)=$g(^TTAB("IB",%CTBI20d(1)))
 s %CTBI20d(2)=$p(%CTBI20d(32),"\",1) s %CTBI20d(3)=$p(%CTBI20d(32),"\",2) s %CTBI20d(4)=$p(%CTBI20d(32),"\",3) s %CTBI20d(5)=$p(%CTBI20d(32),"\",4) s %CTBI20d(6)=$p(%CTBI20d(32),"\",5) s %CTBI20d(7)=$p(%CTBI20d(32),"\",6) s %CTBI20d(8)=$p(%CTBI20d(32),"\",7) s %CTBI20d(9)=$p(%CTBI20d(32),"\",8) s %CTBI20d(10)=$p(%CTBI20d(32),"\",9)
 s %CTBI20d(14)=$lb(""_%CTBI20d(3))
 g:%CTBI20d(13)'=%CTBI20d(14) %0CCdun
%0CBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTBI20d(15)=%CTBI20d(15)+1,%ROWCOUNT=%CTBI20d(15),%ROWID=%CTBI20d(1),%CTBI20c=10 q
%CTBI20f i '$g(%CTBI20c) { s SQLCODE=-102 q  } i %CTBI20c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%CTBI20d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTBI20d(15),%CTBI20c=100 q  } g %0Cfirst:%CTBI20c=1
%0CCdun i $zu(115,2)=1,$g(%CTBI20d(16))=1 { l -@%CTBI20d(17) s %CTBI20d(16)=0 }
 g %0CBk1
%0CBdun 
%0CAdun 
 s %ROWCOUNT=%CTBI20d(15),SQLCODE=100,%CTBI20c=100 q
%CTBI20c i '$g(%CTBI20c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTBI20d(15)),1:0)
 i $zu(115,2)=1,$g(%CTBI20d(16))=1 { l -@%CTBI20d(17) } k %CTBI20c,%CTBI20d,%CTBI20E,%CTBI20l,%CTBI20n,%CTBI20R,%CTBI20Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTBI20c=100 q
%0Eo n %i,icol,ir
 f icol=0:1:11 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTBillingItem.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("IB",%mmmsqld(2)))
 e  g %0GBdun
 s %mmmsqld(10)=$$%getlock^User.CTBillingItem.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("IB",%mmmsqld(2)))
 e  g %0GCdun
 k %data
 f icol=0:1:11 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTBillingItem.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTBillingItem.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTBillingItem.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTBillingItem.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("IB",%mmmsqld(1)))
 e  g %0IBdun
 s %mmmsqld(9)=$$%getlock^User.CTBillingItem.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("IB",%mmmsqld(1)))
 e  g %0ICdun
 d %delete^User.CTBillingItem.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTBillingItem.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTBillingItem.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTBillingItem.T1(%mmmsqld(1)) g %0Ic
%0Mo d %CTBI10f q:SQLCODE'=0
 s PLIST(1)=%CTBI10d(1),PLIST(2)=%CTBI10d(1),PLIST(3)=%CTBI10d(2),PLIST(4)=%CTBI10d(3),PLIST(5)=%CTBI10d(4),PLIST(6)=%CTBI10d(5),PLIST(7)=%CTBI10d(6),PLIST(8)=%CTBI10d(7),PLIST(9)=%CTBI10d(8),PLIST(10)=%CTBI10d(9),PLIST(11)=%CTBI10d(10)
 q
%0No d %CTBI20f q:SQLCODE'=0
 s PLIST(1)=%CTBI20d(1),PLIST(2)=%CTBI20d(1),PLIST(3)=%CTBI20d(2),PLIST(4)=%CTBI20d(3),PLIST(5)=%CTBI20d(4),PLIST(6)=%CTBI20d(5),PLIST(7)=%CTBI20d(6),PLIST(8)=%CTBI20d(7),PLIST(9)=%CTBI20d(8),PLIST(10)=%CTBI20d(9),PLIST(11)=%CTBI20d(10)
 q
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(12)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(12)
 i PLIST(2)'="",$d(^TTAB("IB",PLIST(2)))
 e  g %0QBdun
 s %mmmsqld(20)=$g(^TTAB("IB",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",2) s PLIST(5)=$p(%mmmsqld(20),"\",3) s PLIST(6)=$p(%mmmsqld(20),"\",4) s PLIST(7)=$p(%mmmsqld(20),"\",5) s PLIST(8)=$p(%mmmsqld(20),"\",6) s PLIST(9)=$p(%mmmsqld(20),"\",7) s PLIST(10)=$p(%mmmsqld(20),"\",8) s PLIST(11)=$p(%mmmsqld(20),"\",9)
 g:$zu(115,2)=0 %0QBuncommitted i $zu(115,2)=1 l +^TTAB("IB",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TTAB("IB",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_BillingItem for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("IB",PLIST(2)))
 e  g %0QCdun
 s %mmmsqld(25)=$g(^TTAB("IB",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2) s PLIST(5)=$p(%mmmsqld(25),"\",3) s PLIST(6)=$p(%mmmsqld(25),"\",4) s PLIST(7)=$p(%mmmsqld(25),"\",5) s PLIST(8)=$p(%mmmsqld(25),"\",6) s PLIST(9)=$p(%mmmsqld(25),"\",7) s PLIST(10)=$p(%mmmsqld(25),"\",8) s PLIST(11)=$p(%mmmsqld(25),"\",9)
%0QBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Qc
%0QCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Qc
]]></Routine>
</Export>
