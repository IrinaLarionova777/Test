<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt3311" type="INT" languagemode="0"><![CDATA[
mt3311  ; Compiled May 1, 2007 13:55:08 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt3311(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt3311(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$p($g(%data(2)),$c(1))'="",$g(%data(3))'="" d
 . s %data(1)=$p($g(%data(2)),$c(1))_"||"_$g(%data(3))
 . d insertnw^mt3311(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt3311 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:20 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt3311(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:20 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt3311(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt3311 i '%ok s SQLCODE=-108 g gunlock
 d file
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TRBL($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2)):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TRBL($p(%ROWID,"||",1,1),$p(%ROWID,"||",2,2))
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TRBL($p(%edit(2),$c(1),1),%edit(3))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",1)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",2)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",3)=$g(%data(6))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",4)=$p($g(%data(7)),$c(1))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",5)=$p($g(%data(8)),$c(1))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",6)=$p($g(%data(11)),$c(1))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",7)=$g(%data(12))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",8)=$g(%data(13))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",9)=$g(%data(15))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",10)=$g(%data(16))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",11)=$g(%data(17))
 i $d(%edit(18)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",12)=$g(%data(18))
 i $d(%edit(19)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",13)=$g(%data(19))
 i $d(%edit(20)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",14)=$g(%data(20))
 i $d(%edit(14)) s:'($d(tempn)#2) tempn=$g(^TRBL($p(%data(2),$c(1),1),%data(3))) s $p(tempn,"\",15)=$g(%data(14))
 s:$d(tempn)#2 ^TRBL($p(%data(2),$c(1),1),%data(3))=tempn
maps ; 
 s node=1,tempn=""
 i $p($s($d(%edit(11)):%edit(11),1:$g(%data(11))),$c(1))'="Y",$p($s($d(%edit(7)):%edit(7),1:$g(%data(7))),$c(1))="Y"
 i  i '$g(%edit) s sn(1)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(1)'="" s sn(2)=$s($d(%edit(2)):$p(%edit(2),$c(1),1),1:$p($g(%data(2)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(3)'=""
 i  i $d(^TADN(sn(1),sn(2),"R",sn(3))) s:'$g(tupkill) node=0,tempn=^TADN(sn(1),sn(2),"R",sn(3)) k ^TADN(sn(1),sn(2),"R",sn(3))
 i $p($g(%data(11)),$c(1))'="Y",$p($g(%data(7)),$c(1))="Y"
 i  i '$g(tupkill) s sn(1)=$g(%data(3)) i sn(1)'="" s sn(2)=$p($g(%data(2)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(1)) i sn(3)'=""
 e  g map1dun
 s ^TADN(sn(1),sn(2),"R",sn(3))=tempn
map1dun s node=1,tempn=""
 i $p($s($d(%edit(7)):%edit(7),1:$g(%data(7))),$c(1))="Y"
 i  i '$g(%edit) s sn(1)=$s($d(%edit(9)):%edit(9),1:$g(%data(9))) i sn(1)'="" s sn(2)=$s($d(%edit(10)):$p(%edit(10),$c(1),1),1:$p($g(%data(10)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(3)'="" s sn(4)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(4)'=""
 i  i $d(^TDEB(sn(1),sn(2),0,sn(3),"REBILL",sn(4))) s:'$g(tupkill) node=0,tempn=^TDEB(sn(1),sn(2),0,sn(3),"REBILL",sn(4)) k ^TDEB(sn(1),sn(2),0,sn(3),"REBILL",sn(4))
 i $p($g(%data(7)),$c(1))="Y"
 i  i '$g(tupkill) s sn(1)=$g(%data(9)) i sn(1)'="" s sn(2)=$p($g(%data(10)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(3)) i sn(3)'="" s sn(4)=$g(%data(1)) i sn(4)'=""
 e  g map2dun
 s ^TDEB(sn(1),sn(2),0,sn(3),"REBILL",sn(4))=tempn
map2dun s node=1,tempn=""
 i $p($s($d(%edit(7)):%edit(7),1:$g(%data(7))),$c(1))="Y"
 i  i '$g(%edit) s sn(1)=$s($d(%edit(9)):%edit(9),1:$g(%data(9))) i sn(1)'="" s sn(2)=$s($d(%edit(2)):$p(%edit(2),$c(1),1),1:$p($g(%data(2)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(1)):%edit(1),1:$g(%data(1))) i sn(3)'=""
 i  i $d(^TDEB(sn(1),sn(2),1,"REBILL",sn(3))) s:'$g(tupkill) node=0,tempn=^TDEB(sn(1),sn(2),1,"REBILL",sn(3)) k ^TDEB(sn(1),sn(2),1,"REBILL",sn(3))
 i $p($g(%data(7)),$c(1))="Y"
 i  i '$g(tupkill) s sn(1)=$g(%data(9)) i sn(1)'="" s sn(2)=$p($g(%data(2)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(1)) i sn(3)'=""
 e  g map3dun
 s ^TDEB(sn(1),sn(2),1,"REBILL",sn(3))=tempn
map3dun s node=1,tempn=""
 i $p($s($d(%edit(7)):%edit(7),1:$g(%data(7))),$c(1))="Y"
 i  i '$g(%edit) s sn(1)=$s($d(%edit(6)):%edit(6),1:$g(%data(6))) i sn(1)'="" s sn(2)=$s($d(%edit(2)):$p(%edit(2),$c(1),1),1:$p($g(%data(2)),$c(1),1)) i sn(2)'="" s sn(3)=$s($d(%edit(3)):%edit(3),1:$g(%data(3))) i sn(3)'="" s sn(4)=$s($d(%edit(4)):%edit(4),1:$g(%data(4))) i sn(4)'=""
 i  s sn(5)=$s($d(%edit(8)):$p(%edit(8),$c(1),1),1:$p($g(%data(8)),$c(1),1)) i sn(5)'=""
 i  i $d(^TSUM(sn(1),sn(2),"REBILL",sn(3),sn(4),sn(5))) s:'$g(tupkill) node=0,tempn=^TSUM(sn(1),sn(2),"REBILL",sn(3),sn(4),sn(5)) k ^TSUM(sn(1),sn(2),"REBILL",sn(3),sn(4),sn(5))
 i $p($g(%data(7)),$c(1))="Y"
 i  i '$g(tupkill) s sn(1)=$g(%data(6)) i sn(1)'="" s sn(2)=$p($g(%data(2)),$c(1),1) i sn(2)'="" s sn(3)=$g(%data(3)) i sn(3)'="" s sn(4)=$g(%data(4)) i sn(4)'="" s sn(5)=$p($g(%data(8)),$c(1),1) i sn(5)'=""
 e  g map4dun
 s ^TSUM(sn(1),sn(2),"REBILL",sn(3),sn(4),sn(5))=tempn
map4dun q
 d %0Ao
getold(%dataold) g %0Ao
code9 ; compute code of field BIRB_DebtorNumber_DR
 s %data(9)=""
 s %data(9)=$$CT009^at331($g(%data(3)))
 q
comp9 ; entry point to do computed field BIRB_DebtorNumber_DR
 n %oldval q:(","_$g(trak)_",")[(",9,")
 s %oldval=$g(%data(9)) d code9 s %ok=1 i $g(%data(9))=%oldval q
 s %val=$p($g(%data(9)),$c(1)) d:%val'="" fdv9^mt3311 s:'%ok %data(9)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BIRB_DebtorNumber_DR","",%msg) q
 i $g(%data(9))="",%oldval="" q
 s:'$d(%edit(9)) %edit(9)=%oldval k:$g(%data(9))=$g(%edit(9)) %edit(9)
 q
code10 ; compute code of field BIRB_DateOfCollection
 s $p(%data(10),$c(1))=""
 s $p(%data(10),$c(1))=$$CT010^at331($g(%data(3)))
 q
comp10 ; entry point to do computed field BIRB_DateOfCollection
 n %oldval q:(","_$g(trak)_",")[(",10,")
 s %oldval=$g(%data(10)) d code10 s %ok=1 i $g(%data(10))=%oldval q
 s %val=%data(10)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde2 s $p(%data(10),$c(1))=%val
 s %val=$p($g(%data(10)),$c(1)) d:%val'="" fdv2^mt3311 s:'%ok %data(10)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","BIRB_DateOfCollection","",%msg) q
 s %val=$p(%data(10),$c(1))
 d:%val'="" fdi2 s $p(%data(10),$c(1),2)=%val
 i $g(%data(10))="",%oldval="" q
 s:'$d(%edit(10)) %edit(10)=%oldval k:$g(%data(10))=$g(%edit(10)) %edit(10)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"BI_ReBill"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="BI_ReBill Row ID" d %mdiag(%oper,-106,"Fld Int","Req","BIRB_RowID","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field BIRB_Date
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field BIRB_Date
 d fde2^mt3311 q:'%ok
ini2 ; internal validation code and uniqueness, also int-ext
 d fdv2^mt3311 q:'%ok
 s %data(2)=%val
 d fdi2^mt3311 s $p(%data(2),$c(1),2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
inf3 ; get value for field BIRB_Episode_DR
 i $c(1)'[$g(%data(3)),$p(%data(3),$c(1))="" s %val=$p(%data(3),$c(1),2) g ine3
 i $c(1)'[$g(%data(3)) s %val=$p(%data(3),$c(1)) g ini3
 i $c(1)'[$g(%insert(3)),$p(%insert(3),$c(1))="" s %val=$p(%insert(3),$c(1),2) g ine3
 i $c(1)'[$g(%insert(3)) s %val=$p(%insert(3),$c(1)) g ini3
 s %ok=0 q
ine3 ; external to internal conversion code for field BIRB_Episode_DR
ini3 ; internal validation code and uniqueness, also int-ext
 d fdv3^mt3311 q:'%ok
 s %data(3)=%val
 s:$c(1)[%data(3) %ok=0 s:%ok %edit(3)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table BI_ReBill
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 d inf3 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))_"||"_$p(%data(3),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt3311 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
 s %val=$p(%data(1),"||",2) g:%val="" rowiderr d ini3 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,3,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt3311
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,3,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp9^mt3311 d comp10^mt3311
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde2 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde7 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde8 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,0,"",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=2 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BIRB_Date","",$g(%msg))
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BIRB_Flag","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BIRB_InvoiceBatch_OLD","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=10 d etiok
 . s %msg="" d fde2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BIRB_DateOfCollection","",$g(%msg))
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=11 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","BIRB_Printed","",$g(%msg))
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) s %data(14)=%val
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) s %data(15)=%val
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) s %data(16)=%val
 i $d(%data(17)),$p(%data(17),$c(1))="",$p(%data(17),$c(1),2)'="" s %val=$p(%data(17),$c(1),2) s %data(17)=%val
 i $d(%data(18)),$p(%data(18),$c(1))="",$p(%data(18),$c(1),2)'="" s %val=$p(%data(18),$c(1),2) s %data(18)=%val
 i $d(%data(19)),$p(%data(19),$c(1))="",$p(%data(19),$c(1),2)'="" s %val=$p(%data(19),$c(1),2) s %data(19)=%val
 i $d(%data(20)),$p(%data(20),$c(1))="",$p(%data(20),$c(1),2)'="" s %val=$p(%data(20),$c(1),2) s %data(20)=%val
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv12 ; DO validation and additional validation code
 n nval s nval=%val d %0Io
  i SQLCODE'=0 s %ok=0
 q
fdv13 ; DO validation and additional validation code
 n nval s nval=%val d %0Jo
  i SQLCODE'=0 s %ok=0
 q
fdv2 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv3 ; DO validation and additional validation code
 n nval s nval=%val d %0Do
  i SQLCODE'=0 s %ok=0
 q
fdv4 ; DO validation and additional validation code
 n nval s nval=%val d %0Eo
  i SQLCODE'=0 s %ok=0
 q
fdv5 ; DO validation and additional validation code
 n nval s nval=%val d %0Fo
  i SQLCODE'=0 s %ok=0
 q
fdv6 ; DO validation and additional validation code
 n nval s nval=%val d %0Go
  i SQLCODE'=0 s %ok=0
 q
fdv7 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
fdv8 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q:'%ok
 i $l($p(%val,".",2))>0 s %ok=0,%msg=$$setmsg^%qarzst("DTNNDEC")
 q
fdv9 ; DO validation and additional validation code
 n nval s nval=%val d %0Ho
  i SQLCODE'=0 s %ok=0
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Co q SQLCODE=100
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="BIRB_RowID"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","BIRB_RowID","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_RowID","",$g(%msg))
 i $d(%edit(2)),%data(2)'=%edit(2) s %icol=2 s %val=$p(%data(2),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_Date","",$g(%msg))
 i $d(%edit(3)),%data(3)'=%edit(3) s %icol=3 s %val=$p(%data(3),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv3 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_Episode_DR","",$g(%msg))
 i $d(%edit(4)),%data(4)'=%edit(4) s %icol=4 s %val=$p(%data(4),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv4 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_PayCode_Old_DR","",$g(%msg))
 i $d(%edit(5)),%data(5)'=%edit(5) s %icol=5 s %val=$p(%data(5),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv5 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_PayCode_New_DR","",$g(%msg))
 i $d(%edit(6)),%data(6)'=%edit(6) s %icol=6 s %val=$p(%data(6),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_CompanyCode_DR","",$g(%msg))
 i $d(%edit(7)),%data(7)'=%edit(7) s %icol=7 s %val=$p(%data(7),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_Flag","",$g(%msg))
 i $d(%edit(8)),%data(8)'=%edit(8) s %icol=8 s %val=$p(%data(8),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv8 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_InvoiceBatch_OLD","",$g(%msg))
 i $d(%edit(9)),%data(9)'=%edit(9) s %icol=9 s %val=$p(%data(9),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv9 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_DebtorNumber_DR","",$g(%msg))
 i $d(%edit(10)),%data(10)'=%edit(10) s %icol=10 s %val=$p(%data(10),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv2 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_DateOfCollection","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_Printed","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_InitiationCode_DR","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","BIRB_CollectionCentre_DR","",$g(%msg))
 q
fdi2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4)
 q
fdi7 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
fdi8 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0))
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),$p(%data(2),$c(1))'="" s %val=$p(%data(2),$c(1)) d fdi2 s $p(%data(2),$c(1),2)=%val
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),%data(4)[$c(1) s %data(4)=$s($p(%data(4),$c(1))'="":$p(%data(4),$c(1)),1:$p(%data(4),$c(1),2))
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),%data(6)[$c(1) s %data(6)=$s($p(%data(6),$c(1))'="":$p(%data(6),$c(1)),1:$p(%data(6),$c(1),2))
 i $d(%data(7)),$p(%data(7),$c(1))'="" s %val=$p(%data(7),$c(1)) d fdi7 s $p(%data(7),$c(1),2)=%val
 i $d(%data(8)),$p(%data(8),$c(1))'="" s %val=$p(%data(8),$c(1)) d fdi8 s $p(%data(8),$c(1),2)=%val
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),$p(%data(10),$c(1))'="" s %val=$p(%data(10),$c(1)) d fdi2 s $p(%data(10),$c(1),2)=%val
 i $d(%data(11)),$p(%data(11),$c(1))'="" s %val=$p(%data(11),$c(1)) d fdi7 s $p(%data(11),$c(1),2)=%val
 i $d(%data(12)),%data(12)[$c(1) s %data(12)=$s($p(%data(12),$c(1))'="":$p(%data(12),$c(1)),1:$p(%data(12),$c(1),2))
 i $d(%data(13)),%data(13)[$c(1) s %data(13)=$s($p(%data(13),$c(1))'="":$p(%data(13),$c(1)),1:$p(%data(13),$c(1),2))
 i $d(%data(14)),%data(14)[$c(1) s %data(14)=$s($p(%data(14),$c(1))'="":$p(%data(14),$c(1)),1:$p(%data(14),$c(1),2))
 i $d(%data(15)),%data(15)[$c(1) s %data(15)=$s($p(%data(15),$c(1))'="":$p(%data(15),$c(1)),1:$p(%data(15),$c(1),2))
 i $d(%data(16)),%data(16)[$c(1) s %data(16)=$s($p(%data(16),$c(1))'="":$p(%data(16),$c(1)),1:$p(%data(16),$c(1),2))
 i $d(%data(17)),%data(17)[$c(1) s %data(17)=$s($p(%data(17),$c(1))'="":$p(%data(17),$c(1)),1:$p(%data(17),$c(1),2))
 i $d(%data(18)),%data(18)[$c(1) s %data(18)=$s($p(%data(18),$c(1))'="":$p(%data(18),$c(1)),1:$p(%data(18),$c(1),2))
 i $d(%data(19)),%data(19)[$c(1) s %data(19)=$s($p(%data(19),$c(1))'="":$p(%data(19),$c(1)),1:$p(%data(19),$c(1),2))
 i $d(%data(20)),%data(20)[$c(1) s %data(20)=$s($p(%data(20),$c(1))'="":$p(%data(20),$c(1)),1:$p(%data(20),$c(1),2))
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt3311 q:'%ok
 d comp9^mt3311 d comp10^mt3311
 q
 g ^mt3312
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
 q
%0ABr4 s %dataold(9)=$$CT009^at331($g(%dataold(3))) q
%0ABr5 s $P(%dataold(10),$C(1))=$$CT010^at331($g(%dataold(3))) q
%0ABs1 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0ABs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs3 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s $P(%dataold(2),$C(1))=$p($g(%dataold(1)),"||",1,1),%dataold(3)=$p($g(%dataold(1)),"||",2,2)
 i $P(%dataold(2),$C(1))'="",%dataold(3)'="",$d(^TRBL($P(%dataold(2),$C(1)),%dataold(3)))
 e  g %0ABdun
 s %mmmsqln=$g(^TRBL($P(%dataold(2),$C(1)),%dataold(3)))
 s %dataold(4)=$p(%mmmsqln,"\",1) s %dataold(5)=$p(%mmmsqln,"\",2) s %dataold(6)=$p(%mmmsqln,"\",3) s %dataold(7)=$p(%mmmsqln,"\",4) s %dataold(8)=$p(%mmmsqln,"\",5) s:%dataold(8)'="" %dataold(8)=+%dataold(8) s %dataold(11)=$p(%mmmsqln,"\",6) s %dataold(12)=$p(%mmmsqln,"\",7) s %dataold(13)=$p(%mmmsqln,"\",8)
 s %dataold(14)=$p(%mmmsqln,"\",15) s %dataold(15)=$p(%mmmsqln,"\",9) s %dataold(16)=$p(%mmmsqln,"\",10) s %dataold(17)=$p(%mmmsqln,"\",11) s %dataold(18)=$p(%mmmsqln,"\",12) s %dataold(19)=$p(%mmmsqln,"\",13) s %dataold(20)=$p(%mmmsqln,"\",14)
 
 s %val=$P(%dataold(2),$C(1)) d %0ABs1:%val'="" s $P(%dataold(2),$C(1),2)=%val
 s %val=$P(%dataold(7),$C(1)) d %0ABs2:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0ABs3:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s %val=$P(%dataold(11),$C(1)) d %0ABs2:%val'="" s $P(%dataold(11),$C(1),2)=%val
 d %0ABr4
 d %0ABr5
 s %val=$P(%dataold(10),$C(1)) d %0ABs1:%val'="" s $P(%dataold(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("IC",%mmmsqld(4)))
 e  g %0IBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("CC",%mmmsqld(4)))
 e  g %0JBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TEPI(%mmmsqld(4)))
 e  g %0DBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("BI",%mmmsqld(4)))
 e  g %0EBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("BI",%mmmsqld(4)))
 e  g %0FBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("CO",%mmmsqld(4)))
 e  g %0GBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TDEB(%mmmsqld(4)))
 e  g %0HBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(6)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TRBL(%mmmsqld(5),%mmmsqld(6)))
 e  g %0CBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Cc
%0CBdun 
%0CAdun 
%0Cc q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
]]></Routine>
</Export>
