<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1781" type="INT" languagemode="0"><![CDATA[
mt1781  ; Compiled April 8, 2008 11:41:34 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1781(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0C^mt1781
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1781(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(2))'="" d
 . s %data(1)=$g(%data(2))
 . d insertnw^mt1781(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile^mt1782(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1781 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0A^mt1781
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:42 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1781(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:42 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile^mt1782(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1782(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1781 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt1781
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TMIF(%ROWID):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TMIF(%ROWID)
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TMIF(%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",1)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",2)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",3)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",4)=$p($g(%data(6)),$c(1))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",5)=$p($g(%data(7)),$c(1))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",6)=$p($g(%data(8)),$c(1))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",7)=$p($g(%data(9)),$c(1))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",8)=$g(%data(10))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",9)=$g(%data(11))
 i $d(%edit(12)) s ^TMIF(%data(2),"TRACE")=$g(%data(12))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",11)=$g(%data(13))
 i $d(%edit(14)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",12)=$g(%data(14))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",13)=$p($g(%data(15)),$c(1))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",14)=$p($g(%data(16)),$c(1))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",15)=$p($g(%data(17)),$c(1))
 i $d(%edit(18)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",16)=$p($g(%data(18)),$c(1))
 i $d(%edit(19)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",17)=$p($g(%data(19)),$c(1))
 i $d(%edit(20)) s ^TMIF(%data(2),"TCP")=$g(%data(20))
 i $d(%edit(21)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",18)=$g(%data(21))
 i $d(%edit(22)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",19)=$p($g(%data(22)),$c(1))
 i $d(%edit(23)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",20)=$p($g(%data(23)),$c(1))
 i $d(%edit(24)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",21)=$g(%data(24))
 i $d(%edit(25)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",22)=$p($g(%data(25)),$c(1))
 i $d(%edit(26)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",23)=$p($g(%data(26)),$c(1))
 i $d(%edit(27)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",24)=$g(%data(27))
 i $d(%edit(28)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",25)=$g(%data(28))
 i $d(%edit(29)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",26)=$p($g(%data(29)),$c(1))
 i $d(%edit(30)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",27)=$p($g(%data(30)),$c(1))
 i $d(%edit(31)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",28)=$p($g(%data(31)),$c(1))
 i $d(%edit(32)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",29)=$p($g(%data(32)),$c(1))
 i $d(%edit(33)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",30)=$p($g(%data(33)),$c(1))
 i $d(%edit(34)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",31)=$p($g(%data(34)),$c(1))
 i $d(%edit(35)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",32)=$p($g(%data(35)),$c(1))
 i $d(%edit(36)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",33)=$g(%data(36))
 i $d(%edit(37)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",34)=$p($g(%data(37)),$c(1))
 i $d(%edit(38)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",35)=$p($g(%data(38)),$c(1))
 i $d(%edit(39)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",36)=$p($g(%data(39)),$c(1))
 i $d(%edit(40)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",37)=$p($g(%data(40)),$c(1))
 i $d(%edit(41)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",10)=$g(%data(41))
 i $d(%edit(42)) s:'($d(tempn)#2) tempn=$g(^TMIF(%data(2))) s $p(tempn,"\",38)=$p($g(%data(42)),$c(1))
 s:$d(tempn)#2 ^TMIF(%data(2))=tempn
maps q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(178)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(178)
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),"LL",0,"Date",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 s %mmmsqld(5)=""
%0DBk2 s %mmmsqld(5)=$o(^TMIF(%mmmsqld(1),"LL",0,"Date",%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0DBk1
 i %mmmsqld(5)'=+%mmmsqld(5) g %0DBk1
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(5))
 d delete^mt2561(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk2
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0EBdun
 s %mmmsqld(4)=""
%0EBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),9,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0EBdun
 s %mmmsqld(5)=""
%0EBk2 s %mmmsqld(5)=$o(^TMIF(%mmmsqld(1),9,%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0EBk1
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(5))
 d delete^mt1801(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0EBk2
%0EBdun 
%0EAdun 
 q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0FBdun
 s %mmmsqld(4)=""
%0FBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),"TG",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0FBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2321(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0FBk1
%0FBdun 
%0FAdun 
 q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0GBdun
 s %mmmsqld(4)=""
%0GBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),0,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0GBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1791(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0GBk1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0HBdun
 s %mmmsqld(4)=""
%0HBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),3,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0HBdun
 s %mmmsqld(5)=""
%0HBk2 s %mmmsqld(5)=$o(^TMIF(%mmmsqld(1),3,%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0HBk1
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(5))
 d delete^mt1811(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0HBk2
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0IBdun
 s %mmmsqld(4)=""
%0IBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),"TRANS-BUG",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0IBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt4511(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0IBk1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0JBdun
 s %mmmsqld(4)=""
%0JBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),"FLAG",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0JBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt4551(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0JBk1
%0JBdun 
%0JAdun 
 q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0KBdun
 s %mmmsqld(4)=""
%0KBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),"QC",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0KBdun
 s %mmmsqld(5)=""
%0KBk2 s %mmmsqld(5)=$o(^TMIF(%mmmsqld(1),"QC",%mmmsqld(4),%mmmsqld(5)))
 i %mmmsqld(5)="" g %0KBk1
 i %mmmsqld(5)'=+%mmmsqld(5) g %0KBk1
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))_"||"_(%mmmsqld(5))
 d delete^mt5291(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0KBk2
%0KBdun 
%0KAdun 
 q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Lerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0LBdun
 s %mmmsqld(4)=""
%0LBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),20,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0LBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt6251(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0LBk1
%0LBdun 
%0LAdun 
 q
%0Lerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0LAdun
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Merr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0MBdun
 s %mmmsqld(4)=""
%0MBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),"TRANS-SEN",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0MBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt4531(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0MBk1
%0MBdun 
%0MAdun 
 q
%0Merr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0MAdun
%0No n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Nerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0NBdun
 s %mmmsqld(4)=""
%0NBk1 s %mmmsqld(4)=$o(^TMIF(%mmmsqld(1),"TRANS-ANT",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0NBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt4521(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0NBk1
%0NBdun 
%0NAdun 
 q
%0Nerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0NAdun
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
  d %0Do^mt1781  s %didit=1
  d %0Eo^mt1781  s %didit=1
  d %0Fo^mt1781  s %didit=1
  d %0Go^mt1781  s %didit=1
  d %0Ho^mt1781  s %didit=1
  d %0Io^mt1781  s %didit=1
  d %0Jo^mt1781  s %didit=1
  d %0Ko^mt1781  s %didit=1
  d %0Lo^mt1781  s %didit=1
  d %0Mo^mt1781  s %didit=1
  d %0No^mt1781  s %didit=1
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(178)
 q
%0OBr8 s %dataold(13)=$$CT013^at178($g(%dataold(2))) q  ;  Code for update (get old values) of table: MIF_MachineParameters
%0OBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0OBs2 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0OBs3 s %val=$p("Unidirectional|Bidirectional Query|Bidirectional Loadlist|Bidirectional Upload","|",$l($p("|U|B|L|BU|","|"_%val_"|"),"|")) q
%0OBs4 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0OBs5 s %val=$p("Single|Cumulative|Preview","|",$l($p("|S|C|V|","|"_%val_"|"),"|")) q
%0OBs6 s %val=$p("Mandatory|Optional","|",$l($p("|Y|N|","|"_%val_"|"),"|")) q
%0OBs7 s %val=$p("After Update and Receive|After Update Only|Only Once","|",$l($p("|UR|U|O|","|"_%val_"|"),"|")) q
%0Oo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Oerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %dataold(2)=$p($g(%dataold(1)),"||",1,1)
 i %dataold(2)'="",$d(^TMIF(%dataold(2)))
 e  g %0OBdun
 s %mmmsqln=$g(^TMIF(%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(6)=$p(%mmmsqln,"\",4) s %dataold(7)=$p(%mmmsqln,"\",5) s:%dataold(7)'="" %dataold(7)=+%dataold(7) s %dataold(8)=$p(%mmmsqln,"\",6) s %dataold(9)=$p(%mmmsqln,"\",7) s %dataold(10)=$p(%mmmsqln,"\",8)
 s %dataold(11)=$p(%mmmsqln,"\",9) s %dataold(14)=$p(%mmmsqln,"\",12) s %dataold(15)=$p(%mmmsqln,"\",13) s %dataold(16)=$p(%mmmsqln,"\",14) s %dataold(17)=$p(%mmmsqln,"\",15) s %dataold(18)=$p(%mmmsqln,"\",16) s %dataold(19)=$p(%mmmsqln,"\",17) s %dataold(21)=$p(%mmmsqln,"\",18)
 s %dataold(22)=$p(%mmmsqln,"\",19) s:%dataold(22)'="" %dataold(22)=+%dataold(22) s %dataold(23)=$p(%mmmsqln,"\",20) s:%dataold(23)'="" %dataold(23)=+%dataold(23) s %dataold(24)=$p(%mmmsqln,"\",21) s %dataold(25)=$p(%mmmsqln,"\",22) s %dataold(26)=$p(%mmmsqln,"\",23) s:%dataold(26)'="" %dataold(26)=+%dataold(26)
 s %dataold(27)=$p(%mmmsqln,"\",24) s %dataold(28)=$p(%mmmsqln,"\",25) s %dataold(29)=$p(%mmmsqln,"\",26) s %dataold(30)=$p(%mmmsqln,"\",27) s:%dataold(30)'="" %dataold(30)=+%dataold(30) s %dataold(31)=$p(%mmmsqln,"\",28) s %dataold(32)=$p(%mmmsqln,"\",29) s %dataold(33)=$p(%mmmsqln,"\",30) s %dataold(34)=$p(%mmmsqln,"\",31)
 s %dataold(35)=$p(%mmmsqln,"\",32) s %dataold(36)=$p(%mmmsqln,"\",33) s %dataold(37)=$p(%mmmsqln,"\",34) s %dataold(38)=$p(%mmmsqln,"\",35) s %dataold(39)=$p(%mmmsqln,"\",36) s %dataold(40)=$p(%mmmsqln,"\",37) s %dataold(41)=$p(%mmmsqln,"\",10) s %dataold(42)=$p(%mmmsqln,"\",38)
 s %dataold(20)=$g(^TMIF(%dataold(2),"TCP"))
 s %dataold(12)=$g(^TMIF(%dataold(2),"TRACE"))
 
 s %val=$P(%dataold(6),$C(1)) d %0OBs1:%val'="" s $P(%dataold(6),$C(1),2)=%val
 s %val=$P(%dataold(7),$C(1)) d %0OBs2:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0OBs1:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s %val=$P(%dataold(9),$C(1)) d %0OBs3:%val'="" s $P(%dataold(9),$C(1),2)=%val
 s %val=$P(%dataold(15),$C(1)) d %0OBs1:%val'="" s $P(%dataold(15),$C(1),2)=%val
 s %val=$P(%dataold(16),$C(1)) d %0OBs1:%val'="" s $P(%dataold(16),$C(1),2)=%val
 s %val=$P(%dataold(17),$C(1)) d %0OBs1:%val'="" s $P(%dataold(17),$C(1),2)=%val
 s %val=$P(%dataold(18),$C(1)) d %0OBs1:%val'="" s $P(%dataold(18),$C(1),2)=%val
 s %val=$P(%dataold(19),$C(1)) d %0OBs1:%val'="" s $P(%dataold(19),$C(1),2)=%val
 s %val=$P(%dataold(22),$C(1)) d %0OBs4:%val'="" s $P(%dataold(22),$C(1),2)=%val
 s %val=$P(%dataold(23),$C(1)) d %0OBs2:%val'="" s $P(%dataold(23),$C(1),2)=%val
 s %val=$P(%dataold(25),$C(1)) d %0OBs1:%val'="" s $P(%dataold(25),$C(1),2)=%val
 s %val=$P(%dataold(26),$C(1)) d %0OBs4:%val'="" s $P(%dataold(26),$C(1),2)=%val
 s %val=$P(%dataold(29),$C(1)) d %0OBs1:%val'="" s $P(%dataold(29),$C(1),2)=%val
 s %val=$P(%dataold(30),$C(1)) d %0OBs4:%val'="" s $P(%dataold(30),$C(1),2)=%val
 s %val=$P(%dataold(31),$C(1)) d %0OBs5:%val'="" s $P(%dataold(31),$C(1),2)=%val
 s %val=$P(%dataold(32),$C(1)) d %0OBs1:%val'="" s $P(%dataold(32),$C(1),2)=%val
 s %val=$P(%dataold(33),$C(1)) d %0OBs1:%val'="" s $P(%dataold(33),$C(1),2)=%val
 s %val=$P(%dataold(34),$C(1)) d %0OBs1:%val'="" s $P(%dataold(34),$C(1),2)=%val
 s %val=$P(%dataold(35),$C(1)) d %0OBs6:%val'="" s $P(%dataold(35),$C(1),2)=%val
 s %val=$P(%dataold(37),$C(1)) d %0OBs1:%val'="" s $P(%dataold(37),$C(1),2)=%val
 s %val=$P(%dataold(38),$C(1)) d %0OBs1:%val'="" s $P(%dataold(38),$C(1),2)=%val
 s %val=$P(%dataold(39),$C(1)) d %0OBs1:%val'="" s $P(%dataold(39),$C(1),2)=%val
 s %val=$P(%dataold(40),$C(1)) d %0OBs7:%val'="" s $P(%dataold(40),$C(1),2)=%val
 s %val=$P(%dataold(42),$C(1)) d %0OBs1:%val'="" s $P(%dataold(42),$C(1),2)=%val
 d %0OBr8
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Oc
%0OBdun 
%0OAdun 
%0Oc q
%0Oerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0OAdun
getold(%dataold) g %0Oo
code13 ; compute code of field MIMP_Department_DR
 s %data(13)=""
 s %data(13)=$$CT013^at178($g(%data(2)))
 q
comp13 ; entry point to do computed field MIMP_Department_DR
 n %oldval q:(","_$g(trak)_",")[(",13,")
 s %oldval=$g(%data(13)) d code13 s %ok=1 i $g(%data(13))=%oldval q
 s %val=$p($g(%data(13)),$c(1)) d:%val'="" fdv13^mt1782 s:'%ok %data(13)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","MIMP_Department_DR","",%msg) q
 i $g(%data(13))="",%oldval="" q
 s:'$d(%edit(13)) %edit(13)=%oldval k:$g(%data(13))=$g(%edit(13)) %edit(13)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"MIF_MachineParameters"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="MIF_MachineParameters Row ID" d %mdiag(%oper,-106,"Fld Int","Req","MIMP_RowId","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field MIMP_Code
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field MIMP_Code
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table MIF_MachineParameters
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1782 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate^mt1782 g:'%ok rowiderr:'iform
 d intext^mt1782
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp13^mt1781
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde22 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde31 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="3884",irn=178,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,178,2,3884,36,"get",%val))
 n found s found=0
 i 'found,$f("|Single|Cumulative|Preview|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("S|C|V","|",$l($p("|Single|Cumulative|Preview|","|"_%val_"|"),"|"))
 q
fde6 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
fde7 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,0,"",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde9 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="1364",irn=178,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,178,2,1364,36,"get",%val))
 n found s found=0
 i 'found,$f("|Unidirectional|Bidirectional Query|Bidirectional Loadlist|Bidirectional Upload|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("U|B|L|BU","|",$l($p("|Unidirectional|Bidirectional Query|Bidirectional Loadlist|Bidirectional Upload|","|"_%val_"|"),"|"))
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=6 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_Shutdown","",$g(%msg))
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_ColumnWidth","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_UrgentFirst","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=9 d etiok
 . s %msg="" d fde9 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_Uni_Bi_Direct","",$g(%msg))
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) s %data(11)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) s %data(14)=%val
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=15 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_OverwriteResult","",$g(%msg))
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=16 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_JoinResult","",$g(%msg))
 i $d(%data(17)),$p(%data(17),$c(1))="",$p(%data(17),$c(1),2)'="" s %val=$p(%data(17),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=17 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DisplayScatterPlot","",$g(%msg))
 i $d(%data(18)),$p(%data(18),$c(1))="",$p(%data(18),$c(1),2)'="" s %val=$p(%data(18),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=18 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DisplayResultFlag","",$g(%msg))
 i $d(%data(19)),$p(%data(19),$c(1))="",$p(%data(19),$c(1),2)'="" s %val=$p(%data(19),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=19 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DisplayResultIndicator","",$g(%msg))
 i $d(%data(20)),$p(%data(20),$c(1))="",$p(%data(20),$c(1),2)'="" s %val=$p(%data(20),$c(1),2) s %data(20)=%val
 i $d(%data(21)),$p(%data(21),$c(1))="",$p(%data(21),$c(1),2)'="" s %val=$p(%data(21),$c(1),2) s %data(21)=%val
 i $d(%data(22)),$p(%data(22),$c(1))="",$p(%data(22),$c(1),2)'="" s %val=$p(%data(22),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=22 d etiok
 . s %msg="" d fde22 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_MaxLoadList","",$g(%msg))
 i $d(%data(23)),$p(%data(23),$c(1))="",$p(%data(23),$c(1),2)'="" s %val=$p(%data(23),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=23 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_MaxLog","",$g(%msg))
 i $d(%data(24)),$p(%data(24),$c(1))="",$p(%data(24),$c(1),2)'="" s %val=$p(%data(24),$c(1),2) s %data(24)=%val
 i $d(%data(25)),$p(%data(25),$c(1))="",$p(%data(25),$c(1),2)'="" s %val=$p(%data(25),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=25 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DefaultRowSelection","",$g(%msg))
 i $d(%data(26)),$p(%data(26),$c(1))="",$p(%data(26),$c(1),2)'="" s %val=$p(%data(26),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=26 d etiok
 . s %msg="" d fde22 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_AutoPurgeResults","",$g(%msg))
 i $d(%data(27)),$p(%data(27),$c(1))="",$p(%data(27),$c(1),2)'="" s %val=$p(%data(27),$c(1),2) s %data(27)=%val
 i $d(%data(28)),$p(%data(28),$c(1))="",$p(%data(28),$c(1),2)'="" s %val=$p(%data(28),$c(1),2) s %data(28)=%val
 i $d(%data(29)),$p(%data(29),$c(1))="",$p(%data(29),$c(1),2)'="" s %val=$p(%data(29),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=29 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DisplayAntiBiotics","",$g(%msg))
 i $d(%data(30)),$p(%data(30),$c(1))="",$p(%data(30),$c(1),2)'="" s %val=$p(%data(30),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=30 d etiok
 . s %msg="" d fde22 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_QCTimeSlot","",$g(%msg))
 i $d(%data(31)),$p(%data(31),$c(1))="",$p(%data(31),$c(1),2)'="" s %val=$p(%data(31),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=31 d etiok
 . s %msg="" d fde31 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_ResultEntryMode","",$g(%msg))
 i $d(%data(32)),$p(%data(32),$c(1))="",$p(%data(32),$c(1),2)'="" s %val=$p(%data(32),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=32 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DisplayToFollow","",$g(%msg))
 i $d(%data(33)),$p(%data(33),$c(1))="",$p(%data(33),$c(1),2)'="" s %val=$p(%data(33),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=33 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DisplayPatientLocation","",$g(%msg))
 i $d(%data(34)),$p(%data(34),$c(1))="",$p(%data(34),$c(1),2)'="" s %val=$p(%data(34),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=34 d etiok
 . s %msg="" d fde6 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","MIMP_DisplayTotals","",$g(%msg))
 g continue^mt1782
 g ^mt1782
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
