<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIS13" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIS13 ; IG 7/5/98 ; Visit routines
 ;
 ; supported calls :
 ;
 ; $$open^LVBVIS13(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9)
 ; $$fetch^LVBVIS13(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9)
 ; $$fetchbuffer^LVBVIS13(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9)
 ; $$fetchall^LVBVIS13(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9)
 ; $$close^LVBVIS13()
 ; $$getall^LVBVIS13(Dfrom,Dto,site,dep,test,doc,loc,client,ac)
 ; $$site^LVBVIS13(vtsRID)
 ; $$priority^LVBVIS13(vtsRID)
 ; $$conf^LVBVIS13(vtsRID)
 ;
site(vts) n (vts) s vts=$g(vts)
 s res1=$$seldata^LVBVISTS(vts,29),res2=$$seldata^LVBEPVIS($p(vts,"||"),66)
 q $s($l(res1):res1,1:res2)
priority(vts) n (vts) s vts=$g(vts)
 s res1=$$seldata^LVBVISTS(vts,13),res2=$$seldata^LVBEPVIS($p(vts,"||"),17)
 q $s($l(res1):res1,1:res2)
conf(vts) n (vts) s vts=$g(vts)
 s res1=$$seldata^LVBVISTS(vts,46),res2=$$seldata^LVBEPVIS($p(vts,"||"),84)
 q $s($l(res1):res1,1:res2)
 ; PLIST : 1 - Rowid
 ;         2 - episode
 ;         3 - list of tests
 ;         4 - list of tests (synonym)
 ;         5 - CR for Doctor
 ;         6 - CR for PatientLocation
 ;         7 - FAX for Doctor
 ;         8 - FAX for PatientLocation
open(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9) n (Dfrom,Dto,site,dep,test,doc,loc,client,ac) k ^TMP($zn,$j)
 s Dfrom=$g(Dfrom),Dto=$g(Dto),site=$g(site),dep=$g(dep),test=$g(test),doc=$g(doc),loc=$g(loc),client=$g(client),ac=$g(ac)
 i ac="A" f date=Dfrom:1:Dto s epis="" f  s epis=$o(^TEPIi("AUTHORISED",date,epis)) q:epis=""  d openAC(1)
 i ac="C" f date=Dfrom:1:Dto s epis="" f  s epis=$o(^TDAY(1,date,0,epis)) q:epis=""  d openAC(2)
 q 0
openAC(type) s type=$g(type)
 i $l(doc) s xx=$$seldata^LVBEPVIS(epis,15) i $p(xx,$c(1))'=doc q
 i $l(loc) s xx=$$seldata^LVBEPVIS(epis,22) i $p(xx,$c(1))'=loc q
 i $l(client) s xx="" d  i $p(xx,$c(1))'=client q
 .  ;---&SQL(SELECT EPVIS_DoctorCode_DR->CTDR_Client_DR INTO :xx FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, epis, xx
 . Do %0Ao
 i $l(site) s xx=$$seldata^LVBEPVIS(epis,66) i $p(xx,$c(1))'=site q
 i $l(test) d
 .i type=1 s cnt="" f  s cnt=$o(^TEPIi("AUTHORISED",date,epis,test,cnt)) q:cnt=""  s ^TMP($zn,$j,0,epis,epis_"||"_test_"||"_cnt)=""
 .i type=2 s cnt="" f  s cnt=$o(^TEPI(epis,1,test,cnt)) q:cnt=""  i $$avail(epis,test,cnt) s ^TMP($zn,$j,0,epis,epis_"||"_test_"||"_cnt)=""
 i '$l(test) d
 .i type=1 d
 ..s ts="" f  s ts=$o(^TEPIi("AUTHORISED",date,epis,ts)) q:ts=""  d
 ...i $l(dep),$e(ts)'=dep q
 ...s cnt="" f  s cnt=$o(^TEPIi("AUTHORISED",date,epis,ts,cnt)) q:cnt=""  s ^TMP($zn,$j,0,epis,epis_"||"_ts_"||"_cnt)=""
 .i type=2 d
 ..s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 ...i $l(dep),$e(ts)'=dep q
 ...s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$avail(epis,ts,cnt) s ^TMP($zn,$j,0,epis,epis_"||"_ts_"||"_cnt)=""
 q
avail(epis,test,cnt) n (epis,test,cnt) s epis=$g(epis),test=$g(test),cnt=$g(cnt)
 s result=0,rowid=epis_"||"_test_"||"_cnt
 i $l(epis),$l(test),$l(cnt) d
 .s stat=$$seldata^LVBVISTS(rowid,33)
 .i stat="A" s result=1
 .i stat'="A",$d(^TEPI(epis,1,test,cnt,"QUEUE","VQ")) d
 ..s x=$o(^TEPI(epis,1,test,cnt,"QUEUE","VQ",""),-1),ROWID=rowid_"||VQ||"_x
 ..k VISTQ i '$$select^LVBVISTQ(ROWID) m VISTQ=PLIST i $l(VISTQ(7)) k VISTQ
 ..i $d(VISTQ),$$seldata^LVBCTVQ(VISTQ(10),5)="Y" s result=1
 q result
fetch(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9) n (Dfrom,Dto,site,dep,test,doc,loc,client,ac,PLIST) s SQLCODE=100
 s Dfrom=$g(Dfrom),Dto=$g(Dto),site=$g(site),dep=$g(dep),test=$g(test),doc=$g(doc),loc=$g(loc),client=$g(client),ac=$g(ac)
 s epis=$g(^TMP($zn,$j,0)),epis=$o(^TMP($zn,$j,0,epis)) i $l(epis) d
 .s (x,list1,list2)="" f  s x=$o(^TMP($zn,$j,0,epis,x)) q:x=""  d
 ..s list1=list1_$s($l(list1):"\",1:"")_x,ts=$p(x,"||",2)
 ..s syn=$$seldata^LVBCTTS(ts,4)
 ..s list2=list2_$s($l(list2):",",1:"")_$s($l(syn):syn,1:ts)
 .s SQLCODE=0,PLIST(1)=epis,PLIST(2)=epis,PLIST(3)=list1,PLIST(4)=list2
 .s (x1,x2,x3,x4)=""
 .  ;---&sql(SELECT EPVIS_DoctorCode_DR->CTDR_CourierRun_DR,EPVIS_HospitalCode_DR->CTHOS_CourierRun_DR,EPVIS_DoctorCode_DR->CTDR_Fax,EPVIS_HospitalCode_DR->CTHOS_Fax INTO :x1,:x2,:x3,:x4 FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, epis, x1, x2, x3, x4
 . Do %0Co
 .s PLIST(5)=$p(x1,$c(1)),PLIST(6)=$p(x2,$c(1)),PLIST(7)=$p(x3,$c(1)),PLIST(8)=$p(x4,$c(1))
 .s ^TMP($zn,$j,0)=epis
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9) k ^TMP($zn,$j,1)
 s Dfrom=$g(Dfrom),Dto=$g(Dto),site=$g(site),dep=$g(dep),test=$g(test),doc=$g(doc),loc=$g(loc),client=$g(client),ac=$g(ac)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(Dfrom,Dto,site,dep,test,doc,loc,client,ac) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(Dfrom,Dto,site,dep,test,doc,loc,client,ac,p9) n (Dfrom,Dto,site,dep,test,doc,loc,client,ac,PLIST) k ^TMP($zn,$j,1)
 s Dfrom=$g(Dfrom),Dto=$g(Dto),site=$g(site),dep=$g(dep),test=$g(test),doc=$g(doc),loc=$g(loc),client=$g(client),ac=$g(ac)
 i $$open(Dfrom,Dto,site,dep,test,doc,loc,client,ac)
 f cnt=1:1 q:$$fetch(Dfrom,Dto,site,dep,test,doc,loc,client,ac)  s ^TMP($zn,$j,1,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,1)
 q 0
close() k ^TMP($zn,$j)
 q 0
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBEPVIS(plist(2))
 .S X="" I 'SQLCODE D
 ..S X=PLIST(2)_$c(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))_$c(1)_$p(PLIST(20),$c(1))_$c(1)_$p(PLIST(15),$c(1))_$c(1)_$p(PLIST(15),$c(1),2)_$c(1)_$p(PLIST(22),$C(1))_$c(1)_$p(PLIST(22),$c(1),2)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 q
getall(Dfrom,Dto,site,dep,test,doc,loc,client,ac) n (Dfrom,Dto,site,dep,test,doc,loc,client,ac,PLIST) k ^TMP($zn,$j,10)
 s Dfrom=$g(Dfrom),Dto=$g(Dto),site=$g(site),dep=$g(dep),test=$g(test),doc=$g(doc),loc=$g(loc),client=$g(client),ac=$g(ac)
 i $$open(Dfrom,Dto,site,dep,test,doc,loc,client,ac)
 f cnt=1:1 q:$$fetch(Dfrom,Dto,site,dep,test,doc,loc,client,ac)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=$g(PLIST(j))
 .s ^TMP($zn,$j,10,cnt)=PLIST(1)_$c(2)_$P(PLIST(3),$c(1),2)_$c(2)_$c(2)_str
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j,10)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,10)
 q 0
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ABdun
 s %mmmsqld(14)=$g(^TEPI(%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(14),"\",13)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0ACdun
 s %mmmsqld(17)=$g(^TEPI(%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(17),"\",13)
%0ABuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("DR",%mmmsqld(2)))
 e  s xx="",%mmmsqld(2)="" g %0ACp4
 s %mmmsqld(22)=$g(^TTAB("DR",%mmmsqld(2)))
 s xx=$p(%mmmsqld(22),"\",13)
%0ACp4 
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("DR",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("DR",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Doctor for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("DR",%mmmsqld(2)))
 e  s xx="",%mmmsqld(2)="" g %0ADp1
 s %mmmsqld(27)=$g(^TTAB("DR",%mmmsqld(2)))
 s xx=$p(%mmmsqld(27),"\",13)
%0ADp1 
%0ACuncommitted ;
 s SQLCODE=0 g %0Ac
%0ADdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(16)=0,%mmmsqld(17)="",%mmmsqld(18)=0,%mmmsqld(19)="",%mmmsqld(20)=0,%mmmsqld(21)=""
 s %mmmsqld(14)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(13)=%mmmsqld(14)
 i %mmmsqld(13)'="",$d(^TEPI(%mmmsqld(13)))
 e  g %0CBdun
 s %mmmsqld(24)=$g(^TEPI(%mmmsqld(13)))
 s %mmmsqld(1)=$p(%mmmsqld(24),"\",13) s %mmmsqld(4)=$p(%mmmsqld(24),"\",20)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(13),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TEPI($p(%mmmsqld(13),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(13) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(13)'="",$d(^TEPI(%mmmsqld(13)))
 e  g %0CCdun
 s %mmmsqld(27)=$g(^TEPI(%mmmsqld(13)))
 s %mmmsqld(1)=$p(%mmmsqld(27),"\",13) s %mmmsqld(4)=$p(%mmmsqld(27),"\",20)
%0CBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("DR",%mmmsqld(2)))
 e  s x1="",x3="",%mmmsqld(2)="" g %0CCp4
 s %mmmsqld(32)=$g(^TTAB("DR",%mmmsqld(2),0))
 s x1=$p(%mmmsqld(32),"\",1)
 s %mmmsqld(32)=$g(^TTAB("DR",%mmmsqld(2)))
 s x3=$p(%mmmsqld(32),"\",6)
%0CCp4 
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^TTAB("DR",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TTAB("DR",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Doctor for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("DR",%mmmsqld(2)))
 e  s x1="",x3="",%mmmsqld(2)="" g %0CDp1
 s %mmmsqld(37)=$g(^TTAB("DR",%mmmsqld(2),0))
 s x1=$p(%mmmsqld(37),"\",1)
 s %mmmsqld(37)=$g(^TTAB("DR",%mmmsqld(2)))
 s x3=$p(%mmmsqld(37),"\",6)
%0CDp1 
%0CCuncommitted ;
 s %mmmsqld(5)=%mmmsqld(4)
 i %mmmsqld(5)'="",$d(^TTAB("RH",%mmmsqld(5)))
 e  s x2="",x4="",%mmmsqld(5)="" g %0CDp4
 s %mmmsqld(42)=$g(^TTAB("RH",%mmmsqld(5)))
 s x2=$p(%mmmsqld(42),"\",12) s x4=$p(%mmmsqld(42),"\",11)
%0CDp4 
 g:$zu(115,2)=0 %0CDuncommitted i $zu(115,2)=1 l +^TTAB("RH",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(20)=1,%mmmsqld(21)=$name(^TTAB("RH",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Hospital for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 5
 i %mmmsqld(5)'="",$d(^TTAB("RH",%mmmsqld(5)))
 e  s x2="",x4="",%mmmsqld(5)="" g %0CEp1
 s %mmmsqld(47)=$g(^TTAB("RH",%mmmsqld(5)))
 s x2=$p(%mmmsqld(47),"\",12) s x4=$p(%mmmsqld(47),"\",11)
%0CEp1 
%0CDuncommitted ;
 s SQLCODE=0 g %0Cc
%0CEdun i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) s %mmmsqld(20)=0 }
%0CDdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } i $zu(115,2)=1,$g(%mmmsqld(20))=1 { l -@%mmmsqld(21) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
]]></Routine>
</Export>
