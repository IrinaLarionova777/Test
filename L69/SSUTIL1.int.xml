<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="SSUTIL1" type="INT" languagemode="0" generated="1"><![CDATA[
SSUTIL1 ; System Utilities
 ;
 ; Trak Systems Sep-95
 ;
 ;
MSG(MSGNO)      ; 
 ; This function will obtain the correct translation for a
 ; message based on the currently defined language.
 ; The language variable is in %msql, it is used everywhere...
 ; we use the same variable as InterSystems so that you can change
 ; the language of the application when you change the language
 ; of MSQL
 ; The language is stored in piece 5 of %msql
 ;    -  1  is English
 ;    - 12  is Korean
 ; It should be passed the message number, and returns the message
 ;
 ; The messages are set up in the Global ^SS("MESG"
 ; Use form SS_MESSAGES to set up the messages and translations
 ; The default language is English with $p(%msql,$c(1),5)=1
 ;
 N MES
 I '$D(%msql) Q "Language is not defined"
 I $P(%msql,$C(1),5)<1 Q "No Language number defined"
 I $P(%msql,$C(1),5)=1 S MES=$G(^SS("MESG",MSGNO))
 E  S MES=$G(^SS("MESG",MSGNO,$P(%msql,$c(1),5)))
 I MES="" S MES=$G(^SS("MESG",MSGNO))
 I MES="" S MES="No message defined for number "_MSGNO
 Q MES
 ;
 ;--------------------------------------------
MENUTEST(MFUNCID) ;
 ; This is passed the Code of the M Function that the menu
 ; item relates to.
 ;
 ; This returns whether the user is allowed to use the menu
 ; option or not. Each user is associated with a group. Within
 ; the group it is specified which options are allowed.
 ; if the option is allowed, the appropriate global node is 
 ; defined.
 ; This returns 0 if not allowed
 ;              1 if it is allowed
 ;
 ; The group is stored in TRAK("GRP") when the user
 ; signs onto the system in the first place
 ;
 ; The menu options are stored within the group definition
 ; in ^SSU("SSGRP",Group,"SSGMF",MFUNCID)
 ; if this node is defined, then the user has access
 ;
 N OK
 S OK=0
 I $D(^SSU("SSGRP",TRAK("GRP"),"SSGMF",MFUNCID)) S OK=1
 Q OK
 ;
 ; Centre a string in a field of n chars by
 ; sticking an appropriate number of spaces on the front
centre(str,char) n blanks
 s blanks=$j("",char)
 q $e(blanks,1,char-$l(str)\2)_str
]]></Routine>
</Export>
