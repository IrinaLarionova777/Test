<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="SSLOCK" type="INT" languagemode="0" generated="1"><![CDATA[
SSLOCK ; File and record locking facilities
 ;
 ; Provide file and record locking capabilities for
 ; VB client.
 ;
 ; Note it is not neccessary to lock physical structure if
 ; we are only protecting VB processes from other VB processes,
 ; as long as the same convention is used for dummy nodes.
 ;
 ; However for a full solution we will need to use the same
 ; convention as M/SQL forms, and lock the physical structure.
 ;
 ; $$vtsLock^SSLOCK(type,epis,par,User,Comp)
 ; $$vtsLockClr^SSLOCK(type,epis,par,User,Comp)
vtsLock(type,epis,par,User,Comp) n (type,epis,par,User,Comp) s Flag=""
 s type=$g(type),epis=$g(epis),par=$g(par),User=$g(User),Comp=$g(Comp)
 ; Interface Grid
 i type="IG" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .s mi=$p(par,"||",1),tg=$p(par,"||",2)
 .s Flag=$$LOCK("InterfaceGrid",par_"||"_epis,,User,Comp) i Flag'=-1 q
 .s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  i $d(^TMIF(mi,"TG",tg,"TS",ts)) d  i Flag'=-1 q
 ..s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  d  i Flag'=-1 q
 ...s Flag=$$LOCK("PatientTest",epis_"||"_ts_"||"_cnt,,User,Comp) i Flag'=-1 d  q
 ....s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  i $d(^TMIF(mi,"TG",tg,"TS",ts)) d
 .....s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$LOCKCLR("PatientTest",epis_"||"_ts_"||"_cnt)
 ....i $$LOCKCLR("Patient",epis)
 ....i $$LOCKCLR("InterfaceGrid",par_"||"_epis)
 ; Import
 i type="IM" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .s Flag=$$LOCK("PatientTest",par,,User,Comp) i Flag'=-1,$$LOCKCLR("Patient",epis)
 ; Single result Entry
 i type="RE" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .s Flag=$$LOCK("PatientTest",par,,User,Comp) i Flag'=-1,$$LOCKCLR("Patient",epis)
 ; Send Test
 i type="ST" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .s Flag=$$LOCK("PatientTest",par,,User,Comp) i Flag'=-1,$$LOCKCLR("Patient",epis)
 ; Receive Test
 i type="RT" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .s Flag=$$LOCK("PatientTest",par,,User,Comp) i Flag'=-1,$$LOCKCLR("Patient",epis)
 ; Patient Entry/PreEntry
 i type="PEI" s Flag=$$LOCK("Patient",epis,,User,Comp)
 ; T/S Management
 i type="TM" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .s Flag=$$LOCK("PatientTest",par,,User,Comp) i Flag'=-1,$$LOCKCLR("Patient",epis)
 ; Medical Validation
 i type="MV" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .f j=1:1:$l(par,",") s vts=$p(par,",",j) i $l(vts) d
 ..s Flag=$$LOCK("PatientTest",vts,,User,Comp) i Flag'=-1 d  q
 ...i $$LOCKCLR("Patient",epis)
 ...f j=1:1:$l(par,",") s vts=$p(par,",",j) i $l(vts),$$LOCKCLR("PatientTest",vts)
 ; WorkSheets
 i type="WS" d
 .s Flag=$$LOCK("Patient",epis,,User,Comp,1)
 .f j=1:1:$l(par,",") s vts=$p(par,",",j) i $l(vts) d
 ..s Flag=$$LOCK("PatientTest",vts,,User,Comp) i Flag'=-1 d  q
 ...i $$LOCKCLR("Patient",epis)
 ...f j=1:1:$l(par,",") s vts=$p(par,",",j) i $l(vts),$$LOCKCLR("PatientTest",vts)
 q Flag
vtsLockClr(type,epis,par) n (type,epis,par)
 s type=$g(type),epis=$g(epis),par=$g(par)
 ; Interface Grid
 i type="IG" d
 .i $$LOCKCLR("Patient",epis)
 .s mi=$p(par,"||",1),tg=$p(par,"||",2)
 .s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  i $d(^TMIF(mi,"TG",tg,"TS",ts)) d
 ..s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$LOCKCLR("PatientTest",epis_"||"_ts_"||"_cnt)
 .i $$LOCKCLR("InterfaceGrid",par_"||"_epis)
 ; Import
 i type="IM" d
 .i $$LOCKCLR("Patient",epis)
 .i $$LOCKCLR("PatientTest",par)
 ; Single result Entry
 i type="RE" d
 .i $$LOCKCLR("Patient",epis)
 .i $$LOCKCLR("PatientTest",par)
 ; Send Test
 i type="ST" d
 .i $$LOCKCLR("Patient",epis)
 .i $$LOCKCLR("PatientTest",par)
 ; Result Test
 i type="RT" d
 .i $$LOCKCLR("Patient",epis)
 .i $$LOCKCLR("PatientTest",par)
 ; Patient Entry/PreEntry
 i type="PEI" i $$LOCKCLR("Patient",epis)
 ; T/S Management
 i type="TM" d
 .i $$LOCKCLR("Patient",epis)
 .i $$LOCKCLR("PatientTest",par)
 ; Medical Validation
 i type="MV" d
 .i $$LOCKCLR("Patient",epis)
 .f j=1:1:$l(par,",") s vts=$p(par,",",j) i $l(vts),$$LOCKCLR("PatientTest",vts)
 ; WorkSheets
 i type="WS" d
 .i $$LOCKCLR("Patient",epis)
 .f j=1:1:$l(par,",") s vts=$p(par,",",j) i $l(vts),$$LOCKCLR("PatientTest",vts)
 q -1
 ; Check if record had been changed while been locked
LOCKCHK(BaseTable,RowID) n (BaseTable,RowID,PLIST) s BaseTable=$g(BaseTable),RowID=$g(RowID),result=0
 i $l($p($g(^DBLock(BaseTable,RowID)),"^",4)) s result=100 f j=1,2 s PLIST(j)=$p(^DBLock(BaseTable,RowID),"^",j+2)
 s PLIST=$o(PLIST(""),-1)
 q result
 ; Note Return value for VB true is -1
LOCK(BaseTable,RowID,RowID1,User,Comp,Check) n (BaseTable,RowID,RowID1,User,Comp,Check)
 s BaseTable=$g(BaseTable),RowID=$g(RowID),RowID1=$g(RowID1),User=$g(User),Comp=$g(Comp),Check=$g(Check)
 i '$l(RowID1) s Flag="" d  i $l(Flag) q Flag
 .l +^DBLock(BaseTable,RowID):0 e  d  q
 ..s ss=$g(^DBLock(BaseTable,RowID)),(user,comp)=""
 ..i $l(ss) s user=$p(ss,"^"),comp=$p(ss,"^",2)
 ..e  s xx=$o(^DBLock(BaseTable,RowID,"")) i $l(xx) s ss=$g(^DBLock(BaseTable,RowID,xx)) i $l(ss) s user=$p(ss,"^"),comp=$p(ss,"^",2)
 ..s s=$s(user="":"",1:$g(^SSU("SSUSR",1,user))),name=$p(s,"^",2)
 ..s Flag=name_"^"_comp i Check s $p(^DBLock(BaseTable,RowID),"^",4)=$h
 .s ^DBLock(BaseTable,RowID)=User_"^"_Comp_"^"_$h
 ;
 i $l(RowID1) s Flag="" d  i $l(Flag) q Flag
 .l +^DBLock(BaseTable,RowID,RowID1):0 e  d  q
 ..s ss=$g(^DBLock(BaseTable,RowID,RowID1)),(user,comp)=""
 ..i $l(ss) s user=$p(ss,"^"),comp=$p(ss,"^",2)
 ..e  s ss=$g(^DBLock(BaseTable,RowID)) i $l(ss) s user=$p(ss,"^"),comp=$p(ss,"^",2)
 ..s s=$s(user="":"",1:$g(^SSU("SSUSR",1,user))),name=$p(s,"^",2)
 ..s Flag=name_"^"_comp
 .s ^DBLock(BaseTable,RowID,RowID1)=User_"^"_Comp_"^"_$h
 q -1
 ; Note Return value for VB true is -1
LOCKCLR(BaseTable,RowID,RowID1) n (BaseTable,RowID,RowID1)
 s BaseTable=$g(BaseTable),RowID=$g(RowID),RowID1=$g(RowID1)
 i '$l(RowID1) d
 .l +^DBLock(BaseTable,RowID):0 i  k ^DBLock(BaseTable,RowID) l -^DBLock(BaseTable,RowID)
 .l -^DBLock(BaseTable,RowID)
 i $l(RowID1) d
 .l +^DBLock(BaseTable,RowID,RowID1):0 i  k ^DBLock(BaseTable,RowID,RowID1) l -^DBLock(BaseTable,RowID,RowID1)
 .l -^DBLock(BaseTable,RowID,RowID1)
 q -1
]]></Routine>
</Export>
