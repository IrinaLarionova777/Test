<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTSD" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTTSD ; IG 1/5/98 ; LVB Control data access for CTTSD CT_TestSetItems
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTTSD(par)
 ; $$delete^LVBCTTSD(ROWID,Comments)
 ; $$update^LVBCTTSD(ROWID)
 ; $$select^LVBCTTSD(ROWID,skip)
 ; $$open^LVBCTTSD(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTTSD(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTTSD(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTTSD(par,date,skip,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTTSD()
 ;
  ;---&sql(DECLARE CTTSD CURSOR FOR SELECT * FROM CT_TestSetItems
   ;---         WHERE CTTSD_ParRef = :par
   ;---         AND ((CTTSD_EffDate = :date) OR (:date IS NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, date, par
 ;
open(par,date,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),date=$g(date),skip=$g(skip)
  ;---&SQL(OPEN CTTSD)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSD0o
 q 0
 ;
fetch(par,date,skip,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),date=$g(date),skip=$g(skip)
  ;---&SQL(FETCH CTTSD INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,date,skip,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),date=$g(date),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,date,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,date,skip,p3,p4,p5,p6,p7,p8,p9) N (par,date,skip,PLIST) s par=$g(par),date=$g(date),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,date,skip)
 f cnt=1:1 Q:$$fetch(par,date,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTTSD)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTTSD0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_TestSetItems WHERE CTTSD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO CT_TestSetItems VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CT_TestSetItems VALUES :PLIST() WHERE CTTSD_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CT_TestSetItems WHERE CTTSD_RowID = :ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(6))'="",PLIST(6)'="*" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selskip^LVBCTTC(plist(6))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 q
 ;
 q
%CTTSD0o s $zt="%CTTSD0E" s SQLCODE=$s($g(%CTTSD0c):-101,1:0) q:SQLCODE'=0  s %CTTSD0d(15)=0 s %CTTSD0d(16)=0,%CTTSD0d(17)=""
 s %CTTSD0d(10)=$g(par),%CTTSD0d(11)=$g(date),%CTTSD0d(12)=$g(date)
 s %CTTSD0c=1 q
%CTTSD0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTTSD0c,%CTTSD0d,%CTTSD0E,%CTTSD0l,%CTTSD0n,%CTTSD0R,%CTTSD0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTTSD0d(1)=%CTTSD0d(10)
 i %CTTSD0d(1)="" g %0ABdun
 s %CTTSD0d(3)=""
%0ABk1 s %CTTSD0d(3)=$o(^TTAB("TS",%CTTSD0d(1),3,%CTTSD0d(3)))
 i %CTTSD0d(3)="" g %0ABdun
 i '((%CTTSD0d(3)=%CTTSD0d(11))||(%CTTSD0d(12)="")) g %0ABk1
 s %CTTSD0d(4)=""
%0ABk2 s %CTTSD0d(4)=$o(^TTAB("TS",%CTTSD0d(1),3,%CTTSD0d(3),%CTTSD0d(4)))
 i %CTTSD0d(4)="" g %0ABk1
 s %CTTSD0d(26)=$g(^TTAB("TS",%CTTSD0d(1),3,%CTTSD0d(3),%CTTSD0d(4)))
 s %CTTSD0d(5)=$p(%CTTSD0d(26),"\",1) s %CTTSD0d(6)=$p(%CTTSD0d(26),"\",2) s %CTTSD0d(7)=$p(%CTTSD0d(26),"\",3) s %CTTSD0d(8)=$p(%CTTSD0d(26),"\",4) s %CTTSD0d(9)=$p(%CTTSD0d(26),"\",5)
 s %CTTSD0d(2)=(%CTTSD0d(1))_"||"_(%CTTSD0d(3))_"||"_(%CTTSD0d(4))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%CTTSD0d(2),"||",1),3,$p(%CTTSD0d(2),"||",2),$p(%CTTSD0d(2),"||",3))#"S":$zu(115,4) i $t { s %CTTSD0d(16)=1,%CTTSD0d(17)=$name(^TTAB("TS",$p(%CTTSD0d(2),"||",1),3,$p(%CTTSD0d(2),"||",2),$p(%CTTSD0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetItems for RowID value: "_%CTTSD0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTTSD0d(14)=$p(%CTTSD0d(2),"||"),%CTTSD0d(3)=$p(%CTTSD0d(2),"||",2),%CTTSD0d(4)=$p(%CTTSD0d(2),"||",3)
 i %CTTSD0d(14)'="",%CTTSD0d(3)'="",%CTTSD0d(4)'="",$d(^TTAB("TS",%CTTSD0d(14),3,%CTTSD0d(3),%CTTSD0d(4)))
 e  g %0ACdun
 s %CTTSD0d(35)=$g(^TTAB("TS",%CTTSD0d(14),3,%CTTSD0d(3),%CTTSD0d(4)))
 s %CTTSD0d(5)=$p(%CTTSD0d(35),"\",1) s %CTTSD0d(6)=$p(%CTTSD0d(35),"\",2) s %CTTSD0d(7)=$p(%CTTSD0d(35),"\",3) s %CTTSD0d(8)=$p(%CTTSD0d(35),"\",4) s %CTTSD0d(9)=$p(%CTTSD0d(35),"\",5)
 s %CTTSD0d(1)=$p(%CTTSD0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTTSD0d(15)=%CTTSD0d(15)+1,%ROWCOUNT=%CTTSD0d(15),%ROWID=%CTTSD0d(2),%CTTSD0c=10 q
%CTTSD0f i '$g(%CTTSD0c) { s SQLCODE=-102 q  } i %CTTSD0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTTSD0d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTTSD0d(15),%CTTSD0c=100 q  } g %0Afirst:%CTTSD0c=1
%0ACdun i $zu(115,2)=1,$g(%CTTSD0d(16))=1 { l -@%CTTSD0d(17) s %CTTSD0d(16)=0 }
 g %0ABk2
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTTSD0d(15),SQLCODE=100,%CTTSD0c=100 q
%CTTSD0c i '$g(%CTTSD0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTTSD0d(15)),1:0)
 i $zu(115,2)=1,$g(%CTTSD0d(16))=1 { l -@%CTTSD0d(17) } k %CTTSD0c,%CTTSD0d,%CTTSD0E,%CTTSD0l,%CTTSD0n,%CTTSD0R,%CTTSD0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTTSD0c=100 q
%0Do d %CTTSD0f q:SQLCODE'=0
 s PLIST(0)=%CTTSD0d(1),PLIST(1)=%CTTSD0d(2),PLIST(2)=%CTTSD0d(3),PLIST(3)=%CTTSD0d(4),PLIST(4)=%CTTSD0d(5),PLIST(5)=%CTTSD0d(6),PLIST(6)=%CTTSD0d(7),PLIST(7)=%CTTSD0d(8),PLIST(8)=%CTTSD0d(9)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(11)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(11)
 s %mmmsqld(13)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(13)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTAB("TS",%mmmsqld(13),3,PLIST(2),PLIST(3)))
 e  g %0FBdun
 s %mmmsqld(24)=$g(^TTAB("TS",%mmmsqld(13),3,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(24),"\",1) s PLIST(5)=$p(%mmmsqld(24),"\",2) s PLIST(6)=$p(%mmmsqld(24),"\",3) s PLIST(7)=$p(%mmmsqld(24),"\",4) s PLIST(8)=$p(%mmmsqld(24),"\",5)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(PLIST(1),"||",1),3,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TTAB("TS",$p(PLIST(1),"||",1),3,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSetItems for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(13)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(3)=$p(PLIST(1),"||",3)
 i %mmmsqld(13)'="",PLIST(2)'="",PLIST(3)'="",$d(^TTAB("TS",%mmmsqld(13),3,PLIST(2),PLIST(3)))
 e  g %0FCdun
 s %mmmsqld(33)=$g(^TTAB("TS",%mmmsqld(13),3,PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(33),"\",1) s PLIST(5)=$p(%mmmsqld(33),"\",2) s PLIST(6)=$p(%mmmsqld(33),"\",3) s PLIST(7)=$p(%mmmsqld(33),"\",4) s PLIST(8)=$p(%mmmsqld(33),"\",5)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:8 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTTestSetItems.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(4),3,%mmmsqld(5),%mmmsqld(6)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.CTTestSetItems.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(4),3,%mmmsqld(5),%mmmsqld(6)))
 e  g %0JCdun
 k %data
 f icol=0:1:8 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTTestSetItems.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.CTTestSetItems.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.CTTestSetItems.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.CTTestSetItems.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(3),3,%mmmsqld(4),%mmmsqld(5)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.CTTestSetItems.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(3),3,%mmmsqld(4),%mmmsqld(5)))
 e  g %0LCdun
 d %delete^User.CTTestSetItems.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.CTTestSetItems.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.CTTestSetItems.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.CTTestSetItems.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
