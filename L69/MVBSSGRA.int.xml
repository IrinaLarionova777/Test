<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBSSGRA" type="INT" languagemode="0" generated="1"><![CDATA[
MVBSSGRA  ; IG 09/07/98 ; MVB Control code access for SS_GroupQueryOut
 ;
 ; supported calls:
 ;
 ; $$select^MVBSSGRA(ROWID,skip)
 ; $$open^MVBSSGRA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^MVBSSGRA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^MVBSSGRA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^MVBSSGRA(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^MVBSSGRA()
 ; $$insert^MVBSSGRA(par)
 ; $$update^MVBSSGRA(ROWID)
 ; $$delete^MVBSSGRA(ROWID)
 ; $$getall^MVBSSGRA(par)
 ;
  ;---&SQL(DECLARE SSGRA CURSOR FOR SELECT * FROM SS_GroupQueryOut
   ;---         WHERE SSGRA_ParRef=:par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
 ; Insert the data
insert(par) s PLIST(0)=$g(par) K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO SS_GroupQueryOut VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) k PLIST(1) d pre("Y") 
  ;---&SQL(UPDATE SS_GroupQueryOut VALUES :PLIST() WHERE SSGRA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID) S ROWID=$G(ROWID)
  ;---&SQL(DELETE FROM SS_GroupQueryOut WHERE SSGRA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ;
 ; Open the cursor
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN SSGRA)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSGRA0o
 Q 0
 ;
 ; Fetch the data
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH SSGRA INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE SSGRA) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %SSGRA0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST s ROWID=$g(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM SS_GroupQueryOut WHERE SSGRA_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
 ;
pre(xUpdate) d PreSQL^SSUTIL4("","")
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
getall(par) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(1),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 q
%SSGRA0o s $zt="%SSGRA0E" s SQLCODE=$s($g(%SSGRA0c):-101,1:0) q:SQLCODE'=0  s %SSGRA0d(11)=0 s %SSGRA0d(12)=0,%SSGRA0d(13)=""
 s %SSGRA0d(8)=$g(par)
 s %SSGRA0c=1 q
%SSGRA0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %SSGRA0c,%SSGRA0d,%SSGRA0E,%SSGRA0l,%SSGRA0n,%SSGRA0R,%SSGRA0Z q
%0Afirst 
 ; asl MOD# 2
 s %SSGRA0d(1)=%SSGRA0d(8)
 i %SSGRA0d(1)="" g %0ABdun
 s %SSGRA0d(3)=""
%0ABk1 s %SSGRA0d(3)=$o(^SSU("SSGRP",%SSGRA0d(1),"Query-Out",%SSGRA0d(3)))
 i %SSGRA0d(3)="" g %0ABdun
 s %SSGRA0d(21)=$g(^SSU("SSGRP",%SSGRA0d(1),"Query-Out",%SSGRA0d(3)))
 s %SSGRA0d(4)=$p(%SSGRA0d(21),"^",1) s %SSGRA0d(5)=$p(%SSGRA0d(21),"^",2) s %SSGRA0d(6)=$p(%SSGRA0d(21),"^",4) s %SSGRA0d(7)=$p(%SSGRA0d(21),"^",3)
 s %SSGRA0d(2)=(%SSGRA0d(1))_"||"_(%SSGRA0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(%SSGRA0d(2),"||",1),"Query-Out",$p(%SSGRA0d(2),"||",2))#"S":$zu(115,4) i $t { s %SSGRA0d(12)=1,%SSGRA0d(13)=$name(^SSU("SSGRP",$p(%SSGRA0d(2),"||",1),"Query-Out",$p(%SSGRA0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupQueryOut for RowID value: "_%SSGRA0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %SSGRA0d(10)=$p(%SSGRA0d(2),"||"),%SSGRA0d(3)=$p(%SSGRA0d(2),"||",2)
 i %SSGRA0d(10)'="",%SSGRA0d(3)'="",$d(^SSU("SSGRP",%SSGRA0d(10),"Query-Out",%SSGRA0d(3)))
 e  g %0ACdun
 s %SSGRA0d(29)=$g(^SSU("SSGRP",%SSGRA0d(10),"Query-Out",%SSGRA0d(3)))
 s %SSGRA0d(4)=$p(%SSGRA0d(29),"^",1) s %SSGRA0d(5)=$p(%SSGRA0d(29),"^",2) s %SSGRA0d(6)=$p(%SSGRA0d(29),"^",4) s %SSGRA0d(7)=$p(%SSGRA0d(29),"^",3)
 s %SSGRA0d(1)=$p(%SSGRA0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %SSGRA0d(11)=%SSGRA0d(11)+1,%ROWCOUNT=%SSGRA0d(11),%ROWID=%SSGRA0d(2),%SSGRA0c=10 q
%SSGRA0f i '$g(%SSGRA0c) { s SQLCODE=-102 q  } i %SSGRA0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%SSGRA0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%SSGRA0d(11),%SSGRA0c=100 q  } g %0Afirst:%SSGRA0c=1
%0ACdun i $zu(115,2)=1,$g(%SSGRA0d(12))=1 { l -@%SSGRA0d(13) s %SSGRA0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%SSGRA0d(11),SQLCODE=100,%SSGRA0c=100 q
%SSGRA0c i '$g(%SSGRA0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%SSGRA0d(11)),1:0)
 i $zu(115,2)=1,$g(%SSGRA0d(12))=1 { l -@%SSGRA0d(13) } k %SSGRA0c,%SSGRA0d,%SSGRA0E,%SSGRA0l,%SSGRA0n,%SSGRA0R,%SSGRA0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %SSGRA0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.SSGroupQueryOut.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SSU("SSGRP",%mmmsqld(4),"Query-Out",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(15)=$$%getlock^User.SSGroupQueryOut.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^SSU("SSGRP",%mmmsqld(4),"Query-Out",%mmmsqld(5)))
 e  g %0ECdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.SSGroupQueryOut.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.SSGroupQueryOut.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.SSGroupQueryOut.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.SSGroupQueryOut.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SSU("SSGRP",%mmmsqld(3),"Query-Out",%mmmsqld(4)))
 e  g %0GBdun
 s %mmmsqld(14)=$$%getlock^User.SSGroupQueryOut.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^SSU("SSGRP",%mmmsqld(3),"Query-Out",%mmmsqld(4)))
 e  g %0GCdun
 d %delete^User.SSGroupQueryOut.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.SSGroupQueryOut.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.SSGroupQueryOut.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.SSGroupQueryOut.T1(%mmmsqld(1)) g %0Gc
%0Jo d %SSGRA0f q:SQLCODE'=0
 s PLIST(0)=%SSGRA0d(1),PLIST(1)=%SSGRA0d(2),PLIST(2)=%SSGRA0d(3),PLIST(3)=%SSGRA0d(4),PLIST(4)=%SSGRA0d(5),PLIST(5)=%SSGRA0d(6),PLIST(6)=%SSGRA0d(7)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^SSU("SSGRP",%mmmsqld(11),"Query-Out",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(21)=$g(^SSU("SSGRP",%mmmsqld(11),"Query-Out",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(21),"^",1) s PLIST(4)=$p(%mmmsqld(21),"^",2) s PLIST(5)=$p(%mmmsqld(21),"^",4) s PLIST(6)=$p(%mmmsqld(21),"^",3)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^SSU("SSGRP",$p(PLIST(1),"||",1),"Query-Out",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^SSU("SSGRP",$p(PLIST(1),"||",1),"Query-Out",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_GroupQueryOut for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^SSU("SSGRP",%mmmsqld(11),"Query-Out",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(29)=$g(^SSU("SSGRP",%mmmsqld(11),"Query-Out",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"^",1) s PLIST(4)=$p(%mmmsqld(29),"^",2) s PLIST(5)=$p(%mmmsqld(29),"^",4) s PLIST(6)=$p(%mmmsqld(29),"^",3)
 s PLIST(0)=$p(PLIST(1),"||")
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
