<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTSUP" type="INT" languagemode="0"><![CDATA[
BVBCTSUP ; IG 11/9/96 ; MVB Control code access for CT_Supplier  ; Compiled May 22, 2000 13:23:51 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$select^BVBCTSUP(ROWID)
 ;
 ; $$open^BVBCTSUP(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^BVBCTSUP(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^BVBCTSUP(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^BVBCTSUP(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^BVBCTSUP()
 ; $$insert^BVBCTSUP()
 ; $$update^BVBCTSUP(ROWID)
 ; $$delete^BVBCTSUP(ROWID,Comments)
 ; $$select^BVBCTSUP(ROWID)
 ; $$selcode^BVBCTSUP(code)
 ;
 ;
 ; Insert the data
insert() D pre K PLIST(1)
 d %0Bo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) D pre k PLIST(1) s ROWID=$g(ROWID)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Do
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) d %CTSUP0o
 Q 0
 ;
 ; Fetch the data
fetch(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST
 d %0Fo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch() q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (PLIST) K ^TMP($zn,$j)
 i $$open()
 f cnt=1:1 Q:$$fetch()  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close() d %CTSUP0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; select data by code
selcode(code) K PLIST s code=$g(code)
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre S PLIST(2)=$$ALPHAUP^SSUTIL4(PLIST(2))
 f j=4,7 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("EI",.XX) k PLIST(j) m PLIST(j)=XX
 q
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 f j=4,7 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("IE",.XX) k PLIST(j) m PLIST(j)=XX
 q
 ;
getall() N (PLIST) K ^TMP($zn,$j)
 I $$open()
 F cnt=1:1 Q:$$fetch()  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTSUP0o s SQLCODE=$s($g(%CTSUP0c):-101,1:0) q:SQLCODE'=0
 s %CTSUP0c=1 k %CTSUP0m
 s %CTSUP0E=$zt,%CTSUP0f=0,%CTSUP0e=0,%CTSUP0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTSUP0d(2),$C(1))=""
%0ABk1 s $P(%CTSUP0d(2),$C(1))=$o(^CT("SU",$P(%CTSUP0d(2),$C(1))))
 i $P(%CTSUP0d(2),$C(1))="" g %0ABdun
 i 1>$P(%CTSUP0d(2),$C(1)),$P(%CTSUP0d(2),$C(1))=+$P(%CTSUP0d(2),$C(1)) g %0ABk1
 i $P(%CTSUP0d(2),$C(1))'=+$P(%CTSUP0d(2),$C(1)) g %0ABdun
 s %CTSUP0n=$g(^CT("SU",$P(%CTSUP0d(2),$C(1))))
 s %CTSUP0d(3)=$p(%CTSUP0n,"^",1) s %CTSUP0d(4)=$p(%CTSUP0n,"^",2) s %CTSUP0d(6)=$p(%CTSUP0n,"^",3) s %CTSUP0d(7)=$p(%CTSUP0n,"^",4)
 k %CTSUP0d(5) s %CTSUP0d(5)=$g(^CT("SU",$P(%CTSUP0d(2),$C(1)),"ADDR",0)) s:'%CTSUP0d(5) %CTSUP0d(5)="" f %irep=1:1:%CTSUP0d(5) s %CTSUP0d(5,%irep)=$g(^(%irep))
 k %CTSUP0d(8) s %CTSUP0d(8)=$g(^CT("SU",$P(%CTSUP0d(2),$C(1)),"REM",0)) s:'%CTSUP0d(8) %CTSUP0d(8)="" f %irep=1:1:%CTSUP0d(8) s %CTSUP0d(8,%irep)=$g(^(%irep))
 s %val=$P(%CTSUP0d(2),$C(1)) d %0ABs1:%val'="" s $P(%CTSUP0d(2),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTSUP0f=%CTSUP0f+1 s %CTSUP0c=10 q
%CTSUP0f i '$g(%CTSUP0c) s SQLCODE=-102 q
 i %CTSUP0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTSUP0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTSUP0c=100 q
%CTSUP0c i '$g(%CTSUP0c) s SQLCODE=-102 q
 k %CTSUP0c,%CTSUP0d,%CTSUP0e,%CTSUP0E,%CTSUP0f,%CTSUP0l,%CTSUP0L,%CTSUP0n,%CTSUP0r,%CTSUP0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTSUP0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %insert,icol,ir
 f icol=0:1:7 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1461("1")
 q
%0CAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("SU",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0CBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:7 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1461(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0CBdun 
%0CAdun 
 q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("SU",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0DBdun
 d delete^mt1461(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Fo d %CTSUP0f q:SQLCODE'=0
 s PLIST(1)=%CTSUP0d(2),PLIST(2)=%CTSUP0d(3),PLIST(3)=%CTSUP0d(4)
 k PLIST(4) s PLIST(4)=%CTSUP0d(5) n ir f ir=1:1:PLIST(4) s PLIST(4,ir)=%CTSUP0d(5,ir)
 s PLIST(5)=%CTSUP0d(6),PLIST(6)=%CTSUP0d(7)
 k PLIST(7) s PLIST(7)=%CTSUP0d(8) f ir=1:1:PLIST(7) s PLIST(7,ir)=%CTSUP0d(8,ir)
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0CAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("SU",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0HBdun
 s %mmmsqln=$g(^CT("SU",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4)
 k PLIST(4) s PLIST(4)=$g(^CT("SU",$P(PLIST(1),$C(1)),"ADDR",0)) s:'PLIST(4) PLIST(4)="" f %irep=1:1:PLIST(4) s PLIST(4,%irep)=$g(^(%irep))
 k PLIST(7) s PLIST(7)=$g(^CT("SU",$P(PLIST(1),$C(1)),"REM",0)) s:'PLIST(7) PLIST(7)="" f %irep=1:1:PLIST(7) s PLIST(7,%irep)=$g(^(%irep))
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(code,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(code,2,999)
 s SQLCODE=100
   ;  init
 s %mmmsqld(12)=$$ALPHAUP(%mmmsqld(3))
 ; asl MOD# 2
 s %mmmsqld(11)=$g(%mmmsqld(12))
 i %mmmsqld(11)="" g %0IBdun
 s $P(PLIST(1),$C(1))=""
%0IBk1 s $P(PLIST(1),$C(1))=$o(^CT("SU",0,"Code",%mmmsqld(11),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0IBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0IBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("SU",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0IBk1
 s %mmmsqln=$g(^CT("SU",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4)
 k PLIST(4) s PLIST(4)=$g(^CT("SU",$P(PLIST(1),$C(1)),"ADDR",0)) s:'PLIST(4) PLIST(4)="" f %irep=1:1:PLIST(4) s PLIST(4,%irep)=$g(^(%irep))
 k PLIST(7) s PLIST(7)=$g(^CT("SU",$P(PLIST(1),$C(1)),"REM",0)) s:'PLIST(7) PLIST(7)="" f %irep=1:1:PLIST(7) s PLIST(7,%irep)=$g(^(%irep))
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
