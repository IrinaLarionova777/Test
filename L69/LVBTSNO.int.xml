<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBTSNO" type="INT" languagemode="0" generated="1"><![CDATA[
LVBTSNO ; IG 11/9/96 ; SNOMED codes
 ;
 ; supported calls:
 ;
 ; $$find^LVBTSNO(data)
 ; $$select^LVBTSNO(ROWID,skip)
 ; $$getall^LVBTSNO(code,txt)
 ; $$open^LVBTSNO(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBTSNO(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBTSNO(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBTSNO(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBTSNO()
 ; $$insert^LVBTSNO()
 ; $$update^LVBTSNO(RowID)
 ; $$delete^LVBTSNO(ROWID,Comments)
 ;
find(data) n (data,PLIST) s data=$tr($$UPPER^SSUTIL4($g(data))," "),dl1=":",dl2="," k PLIST
 f j1=1:1:$l(data,dl1) s xx1=$p(data,dl1,j1) i $l(xx1) d
 .f j2=1:1:$l(xx1,dl2) s xx2=$$ALPHAUP^SSUTIL4($p($p(xx1,dl2,j2),"(")) i $l(xx2) d
 ..s x="" f  s x=$o(^TSNOi("Synonym",xx2,x)) q:x=""  s xPLIST(x)=""
 s j=""
 s x="" f  s x=$o(xPLIST(x)) q:x=""  i x="T" s j=j+1,PLIST(j)=x
 s x="" f  s x=$o(xPLIST(x)) q:x=""  i x'="T" s j=j+1,PLIST(j)=x
 s PLIST=$o(PLIST(""),-1)
 q 0
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO TSNO_SNOMED VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ao
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&SQL(UPDATE TSNO_SNOMED VALUES :PLIST() WHERE TSNO_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM TSNO_SNOMED WHERE TSNO_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Eo
 k ^TMP("Comments",$j)
 q SQLCODE
	; open the cursor
open(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)	s code=$$UPPER^SSUTIL4($g(code)),txt=$$UPPER^SSUTIL4($g(txt))
	s ^TMP($zn,$j,"open")=""
	i $l(code) d
	.i '$d(^TSNO(code)) s ^TMP($zn,$j,"open")=code q
	.s ^TMP($zn,$j,"open")=$o(^TSNO(code),-1)
	q 0
	; fetch the data
fetch(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)	k PLIST s code=$$UPPER^SSUTIL4($g(code)),txt=$$UPPER^SSUTIL4($g(txt)),SQLCODE=100
	s found=0,xx=$g(^TMP($zn,$j,"open")),xx=$o(^TSNO(xx)) i $l(xx) d  i 'found g fetch+1
	.i $l(code),$e(xx,1,$l(code))'=code s found=1 q
	.s ^TMP($zn,$j,"open")=xx,s=$$UPPER^SSUTIL4($p($g(^TSNO(xx)),"\"))
	.s SQLCODE=0
	.i $l(txt) f j=1:1:$l(txt," ") s text=$p(txt," ",j) i $l(text),s'[text s SQLCODE=100 q
	.i 'SQLCODE,'$$select(xx) s found=1 d
	..s PLIST=$o(PLIST(""),-1)
	..d adjust
	q SQLCODE
	; fetch all data
fetchbuffer(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)	s code=$$UPPER^SSUTIL4($g(code)),txt=$$UPPER^SSUTIL4($g(txt)) k ^TMP($zn,$j,"fb")
	s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
	f xxx=1:1:max s SQLCODE=$$fetch(code,txt) q:SQLCODE  d
	.s cnt=$o(^TMP($zn,$j,"fb",""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,"fb",cnt),$c(28),j)=$g(PLIST(j))
	k PLIST m PLIST=^TMP($zn,$j,"fb") k ^TMP($zn,$j,"fb")
	s PLIST=$o(PLIST(""),-1)
	q SQLCODE
fetchall(code,txt,p2,p3,p4,p5,p6,p7,p8,p9)	n (code,txt,PLIST) s code=$$UPPER^SSUTIL4($g(code)),txt=$$UPPER^SSUTIL4($g(txt)) k ^TMP($zn,$j,"fa")
	i $$open(code,txt)
	f cnt=1:1 q:$$fetch(code,txt)  s ^TMP($zn,$j,"fa",cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,"fa",cnt),$c(28),j)=$g(PLIST(j))
	i $$close()
	k PLIST m PLIST=^TMP($zn,$j,"fa")
	s PLIST=$o(PLIST(""),-1)
	k ^TMP($zn,$j,"fa")
	q 0
	; close the cursor
close()	k ^TMP($zn,$j,"open")
	q 0
 ; select data by code
select(ROWID,skip) k PLIST s ROWID=$g(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM TSNO_SNOMED WHERE TSNO_ROWID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$UPPER^SSUTIL4(PLIST(2))
 f j=11:1:13 s PLIST(j)=$$UPPER^SSUTIL4($g(PLIST(j)))
 q
 ; post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(9))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTSPE(plist(9),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(9)=X k plist
 ;
 q
getall(code,txt) s code=$$UPPER^SSUTIL4(code),txt=$$UPPER^SSUTIL4(txt)
 k PLIST s cnt=0
 s code1=$s(code="":"",1:code_"-") f  s code1=$o(^TSNO(code1)) q:code1=""  q:cnt>300  q:($l(code)&(code1'[(code_"-")))  s s=^(code1) d
 .s desc=$p(s,"\")
 .i $l(txt),$e($$ONLYALPHA^SSUTIL4(desc),1,$l(txt))'[txt q
 .s cnt=cnt+1,PLIST(cnt)=code1_$c(2)_desc_$c(2)_code1
 s PLIST=$o(PLIST(""),-1)
 q 0
%0Ao n %i,icol,ir
 f icol=0:1:13 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.TSNOSNOMED.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ao
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TSNO(%mmmsqld(2)))
 e  g %0CBdun
 s %mmmsqld(8)=$$%getlock^User.TSNOSNOMED.T1(%mmmsqld(2)) i '%mmmsqld(8) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TSNO(%mmmsqld(2)))
 e  g %0CCdun
 k %data
 f icol=0:1:13 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.TSNOSNOMED.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(8)=1 %ReleaseLock^User.TSNOSNOMED.T1(%mmmsqld(2)) g %0Cc
%0CCdun 
 d:%mmmsqld(8)=1 %ReleaseLock^User.TSNOSNOMED.T1(%mmmsqld(2)) g:SQLCODE<0 %0Cc
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(8))=1 %ReleaseLock^User.TSNOSNOMED.T1(%mmmsqld(2)) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TSNO(%mmmsqld(1)))
 e  g %0EBdun
 s %mmmsqld(7)=$$%getlock^User.TSNOSNOMED.T1(%mmmsqld(1)) i '%mmmsqld(7) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TSNO(%mmmsqld(1)))
 e  g %0ECdun
 d %delete^User.TSNOSNOMED.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(7)=1 %ReleaseLock^User.TSNOSNOMED.T1(%mmmsqld(1)) g %0Ec
%0ECdun 
 d:%mmmsqld(7)=1 %ReleaseLock^User.TSNOSNOMED.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(7))=1 %ReleaseLock^User.TSNOSNOMED.T1(%mmmsqld(1)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(16)=0,%mmmsqld(17)=""
 s %mmmsqld(14)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(14)
 i PLIST(2)'="",$d(^TSNO(PLIST(2)))
 e  g %0GBdun
 s %mmmsqld(20)=$g(^TSNO(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",2) s PLIST(5)=$p(%mmmsqld(20),"\",3) s PLIST(6)=$p(%mmmsqld(20),"\",4) s PLIST(7)=$p(%mmmsqld(20),"\",5) s PLIST(8)=$p(%mmmsqld(20),"\",6) s PLIST(9)=$p(%mmmsqld(20),"\",7) s PLIST(10)=$p(%mmmsqld(20),"\",8) s PLIST(11)=$p(%mmmsqld(20),"\",9) s PLIST(12)=$p(%mmmsqld(20),"\",10) s PLIST(13)=$p(%mmmsqld(20),"\",11)
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TSNO($p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TSNO($p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.TSNO_SNOMED for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TSNO(PLIST(2)))
 e  g %0GCdun
 s %mmmsqld(23)=$g(^TSNO(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2) s PLIST(5)=$p(%mmmsqld(23),"\",3) s PLIST(6)=$p(%mmmsqld(23),"\",4) s PLIST(7)=$p(%mmmsqld(23),"\",5) s PLIST(8)=$p(%mmmsqld(23),"\",6) s PLIST(9)=$p(%mmmsqld(23),"\",7) s PLIST(10)=$p(%mmmsqld(23),"\",8) s PLIST(11)=$p(%mmmsqld(23),"\",9) s PLIST(12)=$p(%mmmsqld(23),"\",10) s PLIST(13)=$p(%mmmsqld(23),"\",11)
%0GBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Gc
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
]]></Routine>
</Export>
