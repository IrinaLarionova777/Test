<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MVBCFBB" type="INT" languagemode="0"><![CDATA[
MVBCFBB ; IG 1/6/98 ; MVB Control data access for CF_BB_Config  ; Compiled November 23, 2000 11:03:24 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$select^MVBCFBB(RowID)
 ; $$update^MVBCFBB(RowID)
 ;
 ;
select(RowID) k PLIST s RowID=$g(RowID)
 d %0Ao
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
update(RowID) s RowID=$g(RowID) K PLIST(1)
 d %0Bo
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(RowID)
 Q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$G(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 q
%0AAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0ABs2 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0ABs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs4 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0ABs5 s %val=$p("Label Verification|BB Result Entry","|",$l($p("|L|R|","|"_%val_"|"),"|")) q
%0ABs6 s %val=$p("Label Verification|Pack Allocation","|",$l($p("|L|A|","|"_%val_"|"),"|")) q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 i %mmmsqld(3)="",$L(RowID)>1 s %val=$E(RowID,2,999) d %0AAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CF("BB",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0ABdun
 s %mmmsqln=$g(^CF("BB",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5) s:PLIST(6)'="" PLIST(6)=+PLIST(6) s PLIST(7)=$p(%mmmsqln,"^",6) s PLIST(8)=$p(%mmmsqln,"^",7) s PLIST(9)=$p(%mmmsqln,"^",8)
 s PLIST(10)=$p(%mmmsqln,"^",9) s:PLIST(10)'="" PLIST(10)=+PLIST(10) s PLIST(11)=$p(%mmmsqln,"^",10) s:PLIST(11)'="" PLIST(11)=+PLIST(11) s PLIST(12)=$p(%mmmsqln,"^",11) s PLIST(13)=$p(%mmmsqln,"^",12) s:PLIST(13)'="" PLIST(13)=+PLIST(13) s PLIST(14)=$p(%mmmsqln,"^",13) s PLIST(15)=$p(%mmmsqln,"^",14)
 s PLIST(16)=$p(%mmmsqln,"^",15) s:PLIST(16)'="" PLIST(16)=+PLIST(16) s PLIST(17)=$p(%mmmsqln,"^",16) s PLIST(18)=$p(%mmmsqln,"^",17) s PLIST(19)=$p(%mmmsqln,"^",18) s PLIST(20)=$p(%mmmsqln,"^",19) s PLIST(21)=$p(%mmmsqln,"^",20) s PLIST(22)=$p(%mmmsqln,"^",22) s:PLIST(22)'="" PLIST(22)=+PLIST(22)
 s PLIST(23)=$p(%mmmsqln,"^",21) s PLIST(24)=$p(%mmmsqln,"^",23) s PLIST(25)=$p(%mmmsqln,"^",24) s PLIST(26)=$p(%mmmsqln,"^",25) s PLIST(27)=$p(%mmmsqln,"^",26) s PLIST(28)=$p(%mmmsqln,"^",27) s PLIST(29)=$p(%mmmsqln,"^",28) s PLIST(30)=$p(%mmmsqln,"^",29) s:PLIST(30)'="" PLIST(30)=+PLIST(30)
 s PLIST(31)=$p(%mmmsqln,"^",30) s:PLIST(31)'="" PLIST(31)=+PLIST(31) s PLIST(32)=$p(%mmmsqln,"^",31) s PLIST(33)=$p(%mmmsqln,"^",32) s PLIST(34)=$p(%mmmsqln,"^",33)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(6),$C(1)) d %0ABs1:%val'="" s $P(PLIST(6),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs1:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(11),$C(1)) d %0ABs1:%val'="" s $P(PLIST(11),$C(1),2)=%val
 s %val=$P(PLIST(13),$C(1)) d %0ABs1:%val'="" s $P(PLIST(13),$C(1),2)=%val
 s %val=$P(PLIST(16),$C(1)) d %0ABs2:%val'="" s $P(PLIST(16),$C(1),2)=%val
 s %val=$P(PLIST(18),$C(1)) d %0ABs3:%val'="" s $P(PLIST(18),$C(1),2)=%val
 s %val=$P(PLIST(20),$C(1)) d %0ABs3:%val'="" s $P(PLIST(20),$C(1),2)=%val
 s %val=$P(PLIST(21),$C(1)) d %0ABs3:%val'="" s $P(PLIST(21),$C(1),2)=%val
 s %val=$P(PLIST(22),$C(1)) d %0ABs4:%val'="" s $P(PLIST(22),$C(1),2)=%val
 s %val=$P(PLIST(23),$C(1)) d %0ABs3:%val'="" s $P(PLIST(23),$C(1),2)=%val
 s %val=$P(PLIST(26),$C(1)) d %0ABs3:%val'="" s $P(PLIST(26),$C(1),2)=%val
 s %val=$P(PLIST(27),$C(1)) d %0ABs5:%val'="" s $P(PLIST(27),$C(1),2)=%val
 s %val=$P(PLIST(29),$C(1)) d %0ABs6:%val'="" s $P(PLIST(29),$C(1),2)=%val
 s %val=$P(PLIST(30),$C(1)) d %0ABs2:%val'="" s $P(PLIST(30),$C(1),2)=%val
 s %val=$P(PLIST(31),$C(1)) d %0ABs2:%val'="" s $P(PLIST(31),$C(1),2)=%val
 s %val=$P(PLIST(32),$C(1)) d %0ABs3:%val'="" s $P(PLIST(32),$C(1),2)=%val
 s %val=$P(PLIST(33),$C(1)) d %0ABs3:%val'="" s $P(PLIST(33),$C(1),2)=%val
 s %val=$P(PLIST(34),$C(1)) d %0ABs3:%val'="" s $P(PLIST(34),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 i %mmmsqld(3)="",$L(RowID)>1 s %val=$E(RowID,2,999) d %0AAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CF("BB",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0BBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:34 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1291(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0BBdun 
%0BAdun 
 q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
]]></Routine>
</Export>
