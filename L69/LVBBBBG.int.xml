<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBBBBG" type="INT" languagemode="0" generated="1"><![CDATA[
LVBBBBG ; IG 29/4/98 ;MVB Control code access for CTBB_BloodGroup
 ;
 ; supported calls:
 ;
 ; $$select^LVBBBBG(ROWID,skip)
 ; $$seldata^LVBBBBG(ROWID,data)
 ; $$open^LVBBBBG(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBBBBG(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBBBBG(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBBBBG(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBBBBG()
 ; $$insert^LVBBBBG()
 ; $$update^LVBBBBG(ROWID)
 ; $$delete^LVBBBBG(ROWID,Comments)
 ; $$getall^LVBBBBG()
 ;
  ;---&SQL(DECLARE BBBG CURSOR FOR SELECT * FROM CTBB_BloodGroup
   ;---         ORDER BY BBBG_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE
FIX k ^TTABi("BB-BG") s a="" f  s a=$o(^TTAB("BB-BG",a)) q:a=""  d
 .i '$$select(a,"Y") s PLIST(7)=99999,err=$$update(a) i err w !,a," ",err
 d ##class(User.CTBBBloodGroup).%BuildIndices()
 q
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CTBB_BloodGroup VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CTBB_BloodGroup VALUES :PLIST() WHERE BBBG_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CTBB_BloodGroup WHERE BBBG_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9)  ;---s skip=$g(skip) &SQL(OPEN BBBG)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 s skip=$g(skip) Do %BBBG0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip) K PLIST
  ;---&SQL(FETCH BBBG INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100       
 f xxx=1:1:max s SQLCODE=$$fetch(skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (skip,PLIST) s skip=$g(skip) K ^TMP($zn,$j)
 i $$open(skip)
 f cnt=1:1 Q:$$fetch(skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE BBBG) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBBG0c 
 q 0
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=3 s result=$p($g(^TTAB("BB-BG",ROWID)),"\",1) q
 .i data=7 s result=$p($g(^TTAB("BB-BG",ROWID)),"\",5) q
 .i data=9 s result=$p($g(^TTAB("BB-BG",ROWID)),"\",7) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ;
 ; select data by code
select(ROWID,skip) K PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CTBB_BloodGroup WHERE BBBG_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$UPPER^SSUTIL4(PLIST(2))
 i 'PLIST(7) s PLIST(7)=99999
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
 ;
getall() N (PLIST) K ^TMP($ZN,$J)
 I $$open("Y")
 F cnt=1:1 Q:$$fetch("Y")  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
%BBBG0o s $zt="%BBBG0E" s SQLCODE=$s($g(%BBBG0c):-101,1:0) q:SQLCODE'=0  s %BBBG0d(10)=0 s %BBBG0d(11)=0,%BBBG0d(12)=""
 s %BBBG0t(1)=$i(^||%sql.temp)
 s %BBBG0c=1 q
%BBBG0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %BBBG0c,%BBBG0d,%BBBG0E,%BBBG0l,%BBBG0n,%BBBG0R,%BBBG0s,%BBBG0t,%BBBG0Z q
%0Afirst 
 k ^||%sql.temp(%BBBG0t(1),0) s ^||%sql.temp(%BBBG0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%BBBG0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%BBBG0t(1),0))
 s %BBBG0s(6)=""
%0ACk1 s %BBBG0s(6)=$o(^||%sql.temp(%BBBG0t(1),0,%BBBG0s(6)))
 i %BBBG0s(6)="" g %0ACdun
 s %BBBG0d(6)=$s(%BBBG0s(6)=-1E14:"",1:%BBBG0s(6))
 s %BBBG0s(1)=""
%0ACk2 s %BBBG0s(1)=$o(^||%sql.temp(%BBBG0t(1),0,%BBBG0s(6),%BBBG0s(1)))
 i %BBBG0s(1)="" g %0ACk1
 s %BBBG0d(1)=$s(%BBBG0s(1)=-1E14:"",1:%BBBG0s(1))
 s %BBBG0d(20)=$g(^||%sql.temp(%BBBG0t(1),0,%BBBG0s(6),%BBBG0s(1)))
 s %BBBG0d(2)=$lg(%BBBG0d(20),4) s %BBBG0d(3)=$lg(%BBBG0d(20),6) s %BBBG0d(4)=$lg(%BBBG0d(20),2) s %BBBG0d(5)=$lg(%BBBG0d(20),3) s %BBBG0d(7)=$lg(%BBBG0d(20),1) s %BBBG0d(8)=$lg(%BBBG0d(20),5)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("BB-BG",$p(%BBBG0d(1),"||",1))#"S":$zu(115,4) i $t { s %BBBG0d(11)=1,%BBBG0d(12)=$name(^TTAB("BB-BG",$p(%BBBG0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_BloodGroup for RowID value: "_%BBBG0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %BBBG0d(1)'="",$d(^TTAB("BB-BG",%BBBG0d(1)))
 e  g %0ADdun
 s %BBBG0d(25)=$g(^TTAB("BB-BG",%BBBG0d(1)))
 s %BBBG0d(2)=$p(%BBBG0d(25),"\",1) s %BBBG0d(3)=$p(%BBBG0d(25),"\",3) s %BBBG0d(4)=$p(%BBBG0d(25),"\",2) s %BBBG0d(5)=$p(%BBBG0d(25),"\",4) s %BBBG0d(6)=$p(%BBBG0d(25),"\",5) s %BBBG0d(7)=$p(%BBBG0d(25),"\",6) s %BBBG0d(8)=$p(%BBBG0d(25),"\",7)
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %BBBG0d(10)=%BBBG0d(10)+1,%ROWCOUNT=%BBBG0d(10),%ROWID=%BBBG0d(1),%BBBG0c=10 q
%BBBG0f i '$g(%BBBG0c) { s SQLCODE=-102 q  } i %BBBG0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%BBBG0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%BBBG0d(10),%BBBG0c=100 q  } g %0Afirst:%BBBG0c=1
%0ADdun i $zu(115,2)=1,$g(%BBBG0d(11))=1 { l -@%BBBG0d(12) s %BBBG0d(11)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%BBBG0d(10),SQLCODE=100,%BBBG0c=100 q
%BBBG0c i '$g(%BBBG0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%BBBG0d(10)),1:0) f %BBBG0d(13)=1 { i $sortend(^||%sql.temp(%BBBG0t(%BBBG0d(13)),0),0) } k ^||%sql.temp(%BBBG0t(1))
 i $zu(115,2)=1,$g(%BBBG0d(11))=1 { l -@%BBBG0d(12) } k %BBBG0c,%BBBG0d,%BBBG0E,%BBBG0l,%BBBG0n,%BBBG0R,%BBBG0s,%BBBG0t,%BBBG0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %BBBG0c=100
 f %BBBG0d(13)=1 i $sortend(^||%sql.temp(%BBBG0t(%BBBG0d(13)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %BBBG0d(1)=""
%0ABk1 s %BBBG0d(1)=$o(^TTAB("BB-BG",%BBBG0d(1)))
 i %BBBG0d(1)="" g %0ABdun
 s %BBBG0d(18)=$g(^TTAB("BB-BG",%BBBG0d(1)))
 s %BBBG0d(2)=$p(%BBBG0d(18),"\",1) s %BBBG0d(3)=$p(%BBBG0d(18),"\",3) s %BBBG0d(4)=$p(%BBBG0d(18),"\",2) s %BBBG0d(5)=$p(%BBBG0d(18),"\",4) s %BBBG0d(6)=$p(%BBBG0d(18),"\",5) s %BBBG0d(7)=$p(%BBBG0d(18),"\",6) s %BBBG0d(8)=$p(%BBBG0d(18),"\",7)
 s %BBBG0s(6)=$s(%BBBG0d(6)'="":%BBBG0d(6),1:-1E14),%BBBG0s(1)=$s(%BBBG0d(1)'="":%BBBG0d(1),1:-1E14),%BBBG0d(19)="",$li(%BBBG0d(19),4)=%BBBG0d(2),$li(%BBBG0d(19),6)=%BBBG0d(3),$li(%BBBG0d(19),2)=%BBBG0d(4),$li(%BBBG0d(19),3)=%BBBG0d(5),$li(%BBBG0d(19),1)=%BBBG0d(7),$li(%BBBG0d(19),5)=%BBBG0d(8),^||%sql.temp(%BBBG0t(1),0,%BBBG0s(6),%BBBG0s(1))=%BBBG0d(19)
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTBBBloodGroup.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTBBBloodGroup.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("BB-BG",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTBBBloodGroup.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTBBBloodGroup.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTBBBloodGroup.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTBBBloodGroup.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("BB-BG",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTBBBloodGroup.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("BB-BG",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTBBBloodGroup.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTBBBloodGroup.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTBBBloodGroup.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTBBBloodGroup.T1(%mmmsqld(1)) g %0Gc
%0Jo d %BBBG0f q:SQLCODE'=0
 s PLIST(1)=%BBBG0d(1),PLIST(2)=%BBBG0d(1),PLIST(3)=%BBBG0d(2),PLIST(4)=%BBBG0d(3),PLIST(5)=%BBBG0d(4),PLIST(6)=%BBBG0d(5),PLIST(7)=%BBBG0d(6),PLIST(8)=%BBBG0d(7),PLIST(9)=%BBBG0d(8)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(10)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(10)
 i PLIST(2)'="",$d(^TTAB("BB-BG",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(18)=$g(^TTAB("BB-BG",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(18),"\",1) s PLIST(4)=$p(%mmmsqld(18),"\",3) s PLIST(5)=$p(%mmmsqld(18),"\",2) s PLIST(6)=$p(%mmmsqld(18),"\",4) s PLIST(7)=$p(%mmmsqld(18),"\",5) s PLIST(8)=$p(%mmmsqld(18),"\",6) s PLIST(9)=$p(%mmmsqld(18),"\",7)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("BB-BG",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("BB-BG",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_BloodGroup for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("BB-BG",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(23)=$g(^TTAB("BB-BG",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",3) s PLIST(5)=$p(%mmmsqld(23),"\",2) s PLIST(6)=$p(%mmmsqld(23),"\",4) s PLIST(7)=$p(%mmmsqld(23),"\",5) s PLIST(8)=$p(%mmmsqld(23),"\",6) s PLIST(9)=$p(%mmmsqld(23),"\",7)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
