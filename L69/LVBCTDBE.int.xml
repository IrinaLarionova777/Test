<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTDBE" type="INT" languagemode="0"><![CDATA[
LVBCTDBE ; IG 29/4/98 ; LVB Control data access for CTDBE CT_DBSpecimenLabBlockOrd  ; Compiled August 18, 2000 17:08:02 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTDBE(par)
 ; $$update^LVBCTDBE(ROWID)
 ; $$delete^LVBCTDBE(ROWID,Comments)
 ; $$select^LVBCTDBE(ROWID,skip)
 ; $$open^LVBCTDBE(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTDBE(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTDBE()
 ; $$getall^LVBCTDBE(par)
 ;
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
 d %CTDBE0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() d %CTDBE0c
 q 0
 ;
select(RowID,skip) s RowID=$g(RowID),skip=$g(skip) k PLIST
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) s PLIST(0)=$g(par) K PLIST(1)
 d %0Fo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ;
update(RowID) s RowID=$g(RowID)
 d %0Go
 i 'SQLCODE d adjust
 q SQLCODE
 ;
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
 d %0Ho
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 i $g(skip)="Y" q
 ;
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDBP($p(plist(1),"||",2)_"||"_plist(3),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDBS($p(plist(1),"||",2)_"||"_plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 ;
 q
getall(par) N (par,PLIST) s par=$g(par) K ^TMP($ZN,$J)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 I $$close()
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%CTDBE0o s SQLCODE=$s($g(%CTDBE0c):-101,1:0) q:SQLCODE'=0
 s %CTDBE0c=1 k %CTDBE0m
 s %CTDBE0E=$zt,%CTDBE0f=0,%CTDBE0e=0,%CTDBE0L=""
 s %CTDBE0d(2)=$P(par,$C(1))
 s:%CTDBE0d(2)="" %CTDBE0d(2)=$E(par,2,999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTDBE0d(1)=$g(%CTDBE0d(2))
 s %CTDBE0d(9)=$p($g(%CTDBE0d(1)),"||",1,1),%CTDBE0d(10)=$p($g(%CTDBE0d(1)),"||",2,2),%CTDBE0d(11)=$p($g(%CTDBE0d(1)),"||",3,3)
 i %CTDBE0d(9)="" g %0ABdun
 i %CTDBE0d(10)="" g %0ABdun
 i %CTDBE0d(11)="" g %0ABdun
 s %CTDBE0d(5)=""
%0ABk1 s %CTDBE0d(5)=$o(^TTAB("DB-SPEC",%CTDBE0d(9),"LA",%CTDBE0d(10),"BLOCK",%CTDBE0d(11),%CTDBE0d(5)))
 i %CTDBE0d(5)="" g %0ABdun
 s %CTDBE0n=$g(^TTAB("DB-SPEC",%CTDBE0d(9),"LA",%CTDBE0d(10),"BLOCK",%CTDBE0d(11),%CTDBE0d(5)))
 s %CTDBE0d(6)=$p(%CTDBE0n,"\",1) s %CTDBE0d(7)=$p(%CTDBE0n,"\",3) s %CTDBE0d(8)=$p(%CTDBE0n,"\",4)
 s %CTDBE0d(4)=(%CTDBE0d(9))_"||"_(%CTDBE0d(10))_"||"_(%CTDBE0d(11))_"||"_(%CTDBE0d(5))
 s SQLCODE=0 s:SQLCODE=0 %CTDBE0f=%CTDBE0f+1 s %CTDBE0c=10 q
%CTDBE0f i '$g(%CTDBE0c) s SQLCODE=-102 q
 i %CTDBE0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTDBE0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTDBE0c=100 q
%CTDBE0c i '$g(%CTDBE0c) s SQLCODE=-102 q
 k %CTDBE0c,%CTDBE0d,%CTDBE0e,%CTDBE0E,%CTDBE0f,%CTDBE0l,%CTDBE0L,%CTDBE0n,%CTDBE0r,%CTDBE0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTDBE0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTDBE0f q:SQLCODE'=0
 s PLIST(0)=%CTDBE0d(1),PLIST(1)=%CTDBE0d(4),PLIST(2)=%CTDBE0d(5),PLIST(3)=%CTDBE0d(6),PLIST(4)=%CTDBE0d(7),PLIST(5)=%CTDBE0d(8)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(10)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(11)=$p($g(%mmmsqld(3)),"||",2,2),%mmmsqld(12)=$p($g(%mmmsqld(3)),"||",3,3),PLIST(2)=$p($g(%mmmsqld(3)),"||",4,4)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(10)'="",%mmmsqld(11)'="",%mmmsqld(12)'="",PLIST(2)'="",$d(^TTAB("DB-SPEC",%mmmsqld(10),"LA",%mmmsqld(11),"BLOCK",%mmmsqld(12),PLIST(2)))
 e  g %0EBdun
 s %mmmsqln=$g(^TTAB("DB-SPEC",%mmmsqld(10),"LA",%mmmsqld(11),"BLOCK",%mmmsqld(12),PLIST(2)))
 s PLIST(3)=$p(%mmmsqln,"\",1) s PLIST(4)=$p(%mmmsqln,"\",3) s PLIST(5)=$p(%mmmsqln,"\",4)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %insert,icol,ir
 f icol=0:1:5 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt2041("1")
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(RowID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(3)),"||",2,2),%mmmsqld(6)=$p($g(%mmmsqld(3)),"||",3,3),%mmmsqld(7)=$p($g(%mmmsqld(3)),"||",4,4)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TTAB("DB-SPEC",%mmmsqld(4),"LA",%mmmsqld(5),"BLOCK",%mmmsqld(6),%mmmsqld(7)))
 e  g %0GBdun
 k %data,%edit
 f icol=0:1:5 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt2041(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(RowID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(RowID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(2)),"||",2,2),%mmmsqld(5)=$p($g(%mmmsqld(2)),"||",3,3),%mmmsqld(6)=$p($g(%mmmsqld(2)),"||",4,4)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TTAB("DB-SPEC",%mmmsqld(3),"LA",%mmmsqld(4),"BLOCK",%mmmsqld(5),%mmmsqld(6)))
 e  g %0HBdun
 d delete^mt2041(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
