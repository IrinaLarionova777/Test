<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTSTS" type="INT" languagemode="0"><![CDATA[
BVBCTSTS ; IG 10/12/98 ; BVB Control data access for Codes Tables   ; Compiled May 22, 2000 13:23:50 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$open^BVBCTSTS(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetch^BVBCTSTS(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchbuffer^BVBCTSTS(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchall^BVBCTSTS(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$close^BVBCTSTS() 
 ; $$select^BVBCTSTS(ROWID) 
 ; $$delete^BVBCTSTS(ROWID,Comments)
 ; $$insert^BVBCTSTS() 
 ; $$update^BVBCTSTS(ROWID) 
 ; $$getall^BVBCTSTS() 
 ; 
open(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)  d %CTSTS0o 
 q 0
 ;
fetch(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST
 d %0Co
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch() q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (PLIST) K ^TMP($zn,$j)
 i $$open()
 f cnt=1:1 Q:$$fetch()  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
close() d %CTSTS0c 
 q 0 
 ;
selcode(code) k PLIST s code=$g(code)
 d %0Eo 
 s PLIST=$O(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
 ;        
select(ROWID) k PLIST s ROWID=$g(ROWID)
 d %0Fo 
 s PLIST=$O(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE 
 ;        
 ; Insert the data
insert() K PLIST(1) d pre
 d %0Go
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) d pre k PLIST(1) s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(ROWID)
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Io
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
pre f j=6 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("EI",.XX) k PLIST(j) m PLIST(j)=XX
 q
 ;
 ; Post-filing adjustments
adjust N J F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 f j=6 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("IE",.XX) k PLIST(j) m PLIST(j)=XX
 q
getall() N (PLIST) K ^TMP($zn,$j)
 I $$open()
 F cnt=1:1 Q:$$fetch()  S ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($zn,$j)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($zn,$j)
 Q 0
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0ABs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs3 s %val=$p("Decrease|Increase|No Effect","|",$l($p("|D|I|N|","|"_%val_"|"),"|")) q
%CTSTS0o s SQLCODE=$s($g(%CTSTS0c):-101,1:0) q:SQLCODE'=0
 s %CTSTS0c=1 k %CTSTS0m
 s %CTSTS0E=$zt,%CTSTS0f=0,%CTSTS0e=0,%CTSTS0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTSTS0d(2),$C(1))=""
%0ABk1 s $P(%CTSTS0d(2),$C(1))=$o(^CT("ST",$P(%CTSTS0d(2),$C(1))))
 i $P(%CTSTS0d(2),$C(1))="" g %0ABdun
 i 1>$P(%CTSTS0d(2),$C(1)),$P(%CTSTS0d(2),$C(1))=+$P(%CTSTS0d(2),$C(1)) g %0ABk1
 i $P(%CTSTS0d(2),$C(1))'=+$P(%CTSTS0d(2),$C(1)) g %0ABdun
 s %CTSTS0n=$g(^CT("ST",$P(%CTSTS0d(2),$C(1))))
 s %CTSTS0d(3)=$p(%CTSTS0n,"^",1) s %CTSTS0d(4)=$p(%CTSTS0n,"^",2) s %CTSTS0d(5)=$p(%CTSTS0n,"^",3) s %CTSTS0d(6)=$p(%CTSTS0n,"^",4) s %CTSTS0d(8)=$p(%CTSTS0n,"^",5) s %CTSTS0d(9)=$p(%CTSTS0n,"^",6)
 k %CTSTS0d(7) s %CTSTS0d(7)=$g(^CT("ST",$P(%CTSTS0d(2),$C(1)),"REM",0)) s:'%CTSTS0d(7) %CTSTS0d(7)="" f %irep=1:1:%CTSTS0d(7) s %CTSTS0d(7,%irep)=$g(^(%irep))
 s %val=$P(%CTSTS0d(2),$C(1)) d %0ABs1:%val'="" s $P(%CTSTS0d(2),$C(1),2)=%val
 s %val=$P(%CTSTS0d(6),$C(1)) d %0ABs2:%val'="" s $P(%CTSTS0d(6),$C(1),2)=%val
 s %val=$P(%CTSTS0d(8),$C(1)) d %0ABs2:%val'="" s $P(%CTSTS0d(8),$C(1),2)=%val
 s %val=$P(%CTSTS0d(5),$C(1)) d %0ABs2:%val'="" s $P(%CTSTS0d(5),$C(1),2)=%val
 s %val=$P(%CTSTS0d(9),$C(1)) d %0ABs3:%val'="" s $P(%CTSTS0d(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTSTS0f=%CTSTS0f+1 s %CTSTS0c=10 q
%CTSTS0f i '$g(%CTSTS0c) s SQLCODE=-102 q
 i %CTSTS0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTSTS0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTSTS0c=100 q
%CTSTS0c i '$g(%CTSTS0c) s SQLCODE=-102 q
 k %CTSTS0c,%CTSTS0d,%CTSTS0e,%CTSTS0E,%CTSTS0f,%CTSTS0l,%CTSTS0L,%CTSTS0n,%CTSTS0r,%CTSTS0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTSTS0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTSTS0f q:SQLCODE'=0
 s PLIST(1)=%CTSTS0d(2),PLIST(2)=%CTSTS0d(3),PLIST(3)=%CTSTS0d(4),PLIST(4)=%CTSTS0d(5),PLIST(5)=%CTSTS0d(6)
 k PLIST(6) s PLIST(6)=%CTSTS0d(7) n ir f ir=1:1:PLIST(6) s PLIST(6,ir)=%CTSTS0d(7,ir)
 s PLIST(7)=%CTSTS0d(8),PLIST(8)=%CTSTS0d(9)
 q
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(code,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(code,2,999)
 s SQLCODE=100
   ;  init
 s %mmmsqld(13)=$$ALPHAUP(%mmmsqld(3))
 ; asl MOD# 2
 s %mmmsqld(12)=$g(%mmmsqld(13))
 i %mmmsqld(12)="" g %0EBdun
 s $P(PLIST(1),$C(1))=""
%0EBk1 s $P(PLIST(1),$C(1))=$o(^CT("ST",0,"Code",%mmmsqld(12),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0EBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0EBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("ST",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0EBk1
 s %mmmsqln=$g(^CT("ST",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s PLIST(8)=$p(%mmmsqln,"^",6)
 k PLIST(6) s PLIST(6)=$g(^CT("ST",$P(PLIST(1),$C(1)),"REM",0)) s:'PLIST(6) PLIST(6)="" f %irep=1:1:PLIST(6) s PLIST(6,%irep)=$g(^(%irep))
 s %val=$P(PLIST(5),$C(1)) d %0ABs2:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs2:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(8),$C(1)) d %0ABs3:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
 g %0EBk1
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0FAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0FAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("ST",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0FBdun
 s %mmmsqln=$g(^CT("ST",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s PLIST(8)=$p(%mmmsqln,"^",6)
 k PLIST(6) s PLIST(6)=$g(^CT("ST",$P(PLIST(1),$C(1)),"REM",0)) s:'PLIST(6) PLIST(6)="" f %irep=1:1:PLIST(6) s PLIST(6,%irep)=$g(^(%irep))
 s %val=$P(PLIST(5),$C(1)) d %0ABs2:%val'="" s $P(PLIST(5),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(4),$C(1)) d %0ABs2:%val'="" s $P(PLIST(4),$C(1),2)=%val
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(8),$C(1)) d %0ABs3:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %insert,icol,ir
 f icol=0:1:8 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1451("1")
 q
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0FAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("ST",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0HBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:8 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1451(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0FAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("ST",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0IBdun
 d delete^mt1451(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
]]></Routine>
</Export>
