<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBEPIS04" type="INT" languagemode="0"><![CDATA[
LVBEPIS04 ; IG 12/07/98 ; Episode control - Darwin  ; Compiled November 29, 2001 12:03:11 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$check^LVBEPIS04(site,epis)
 ; $$medicare^LVBEPIS04(pc,deb,data)
 ;
check(site,epis) n (PLIST,site,epis) k PLIST
 ; check existing TEPI
 i $d(^TEPI(epis)) s ok=10 k PLIST s PLIST(1)=epis g end
 ; check Episode format
 s rowid=1,format=""
 d %0Ao
 i '$l(format) s ok=50 k PLIST s PLIST(1)=epis g end
 i $l(format),epis?@format s ok=50 k PLIST s PLIST(1)=epis g end
 s ok=100
end s PLIST=$o(PLIST(""),-1)
 q ok
 ; data   : medicare number or
 ;          veterans affairs number
 ;          pensioner card number
 ; return : 0   - ok
 ;          40  - empty
 ;          50  - wrong issue
 ;          100 - wrong 
 ; type   : 0 - Medicare
 ;          1 - DVA
 ;          2 - Pensioner
medicare(pc,deb,data,type) n (pc,deb,data,type,PLIST) k ^TMP($zn,$j)
 s pc=$g(pc),deb=$g(deb),data=$$ALPHAUP^SSUTIL4($g(data)),type=+$g(type),ok=0
 k PAYCODE i '$$select^LVBCTPC(pc,"Y") m PAYCODE=PLIST
 ; check Medicare
 i type=0 d
 .i '$l(data) s:$g(PAYCODE(34))="M" ok=40 q
 .i $l(data)'=10 s ok=100 q
 .i "23456"'[$e(data) s ok=100 q
 .s check=$e(data)+($e(data,2)*3)+($e(data,3)*7)+($e(data,4)*9)+$e(data,5)+($e(data,6)*3)+($e(data,7)*7)+($e(data,8)*9)#10
 .i check'=$e(data,9) s ok=100 q
 ; check DVA
 i type=1 d
 .i '$l(data) s:$g(PAYCODE(35))="M" ok=40 q
 .i $l(data)>9 s ok=100 q
 ; check Pensioner
 i type=2 d
 .i '$l(data) s:$g(PAYCODE(36))="M" ok=40 q
 i $l(deb),'$l(data) d  s ok=0
 . ; Medicare
 .i type=0 d
 ..s x="" f cnt=1:1 s x=$o(^TDEBi(deb,"MEDICARE",x)) q:x=""  s ^TMP($zn,$j,cnt)=x
 . ; DVA
 .i type=1 d
 ..s x="" f cnt=1:1 s x=$o(^TDEBi(deb,"DVA",x)) q:x=""  s ^TMP($zn,$j,cnt)=x
 . ; Pensioner
 .i type=2 d
 ..s x="" f cnt=1:1 s x=$o(^TDEBi(deb,"PENSIONER",x)) q:x=""  s ^TMP($zn,$j,cnt)=x
 m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q ok                                  
 q
%0AAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(rowid,$C(1))
 i %mmmsqld(4)="",$L(rowid)>1 s %val=$E(rowid,2,999) d %0AAr1 s %mmmsqld(4)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$g(%mmmsqld(4))
 i %mmmsqld(3)'="",$d(^CF("LAB",%mmmsqld(3)))
 i '$t
 e  i 1>%mmmsqld(3),%mmmsqld(3)=+%mmmsqld(3)
 i  g %0ABdun
 s %mmmsqln=$g(^CF("LAB",%mmmsqld(3)))
 s format=$p(%mmmsqln,"^",8)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
]]></Routine>
</Export>
