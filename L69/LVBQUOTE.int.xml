<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBQUOTE" type="INT" languagemode="0" generated="1"><![CDATA[
LVBQUOTE	; IG 13/07/98 ; PRICING QUOTES
	;
	; supported calls:
	;
	; $$quote^LVBQUOTE(paycode,Conning,init)
	; $$init^LVBQUOTE(init,paycode)
	;
init(init,PAY)	n (init,PAY,PLIST) s init=$g(init),PAY=$g(PAY) k ^TMP($zn,$j)
	i $l(init),$l(PAY) d
	.s DATE=$o(^TTAB("IC",init,+$h),-1) i DATE="" d  q
	..s l=$o(^TMP($zn,$j,"Fail",""),-1)+1
	..s ^TMP($zn,$j,"Fail",l)="No item effective date before : "_$$extdate2^SSUTIL4(+$h)
	. ; billing item
	.s PLIST(1)=$p($g(^TTAB("IC",init,DATE)),"\",1)
	.s PLIST=$o(PLIST(""),-1)
	i $d(^TMP($zn,$j,"Fail")) d  q 100
	.k PLIST m PLIST=^TMP($zn,$j,"Fail")
	.s PLIST=$o(PLIST(""),-1) k ^TMP($zn,$j)
	q 0
quote(PAY,Conning,init)	n (PAY,Conning,init,PLIST) s PAY=$g(PAY),Conning=$g(Conning),init=$g(init)
	k ^TMP($zn,$j) m ^TMP($zn,$j,"TEST")=PLIST
	s cTEST="" f  s cTEST=$o(^TMP($zn,$j,"TEST",cTEST)) q:cTEST=""  s xx=^(cTEST) d
	.s TEST=$p(xx,"\",1),SS=$p(xx,"\",3),quan=$p(xx,"\",2) i $l(TEST) d
	..i $l(SS),$d(^TTAB("SUPTS",SS,3)) s ^TMP($zn,$j,0,SS,TEST)=quan q
	..s ^TMP($zn,$j,1,TEST)=quan
	s ss="" f  s ss=$o(^TMP($zn,$j,0,ss)) q:ss=""  s min=99999 d
	.s ts="" f  s ts=$o(^TMP($zn,$j,0,ss,ts)) q:ts=""  i ^(ts)<min s min=^(ts)
	.s ^TMP($zn,$j,0,ss)=min
	.s ts="" f  s ts=$o(^TMP($zn,$j,0,ss,ts)) q:ts=""  s quan=^(ts)-min i quan s ^TMP($zn,$j,1,ts)=quan
	k ^TMP($zn,$j,"TEST"),^TMP($zn,$j,"SS")
	s ts="" f  s ts=$o(^TMP($zn,$j,1,ts)) q:ts=""  s x=$o(^TMP($zn,$j,"TEST",""),-1)+1,^TMP($zn,$j,"TEST",x)=ts_"\"_^TMP($zn,$j,1,ts)
	s ss="" f  s ss=$o(^TMP($zn,$j,0,ss)) q:ss=""  s x=$o(^TMP($zn,$j,"SS",""),-1)+1,^TMP($zn,$j,"SS",x)=ss_"\"_^TMP($zn,$j,0,ss)
	s cTEST="" f  s cTEST=$o(^TMP($zn,$j,"TEST",cTEST)) q:cTEST=""  s xx=^(cTEST) d
	.s TEST=$p(xx,"\",1)
	.s quote=$$seldata^LVBCTTS(TEST,47),syn=$$seldata^LVBCTTS(TEST,4)
	.i $l(quote) d
	..k ^TMP($zn,$j,"TEST",cTEST)
	..s x=$o(^TMP($zn,$j,"QUOTE",""),-1)+1
	..s ^TMP($zn,$j,"QUOTE",x)=$s($l(syn):syn,1:TEST)_"\"_(quote*$p(xx,"\",2))_"\Quotation fee of "_$j(quote,0,2)
	s cSS="" f  s cSS=$o(^TMP($zn,$j,"SS",cSS)) q:cSS=""  s xx=^(cSS) d
	.s SS=$p(xx,"\",1),quan=$p(xx,"\",2)
	.s DATE=$o(^TTAB("SUPTS",SS,3,+$h),-1) i DATE="" d  q
	..s l=$o(^TMP($zn,$j,"Fail",""),-1)+1
	..s ^TMP($zn,$j,"Fail",l)=SS_" : SuperSet : No item effective date before : "_$$extdate2^SSUTIL4(+$h)
	.f ij=1:1:quan d
	..i $$open^LVBCTSSF(SS,"Y",DATE)
	..f  q:$$fetch^LVBCTSSF(SS,"Y",DATE)  d
	...k CTSSF m CTSSF=PLIST
	...s $p(^TMP($zn,$j,"ITEM",CTSSF(3)),"\",1)=$p($g(^TMP($zn,$j,"ITEM",CTSSF(3))),"\",1)+CTSSF(4)
	...s $p(^TMP($zn,$j,"ITEM",CTSSF(3)),"\",2)=$p($g(^TMP($zn,$j,"ITEM",CTSSF(3))),"\",2)_";"_CTSSF(5)
	..i $$close^LVBCTTSD()
	s cTEST="" f  s cTEST=$o(^TMP($zn,$j,"TEST",cTEST)) q:cTEST=""  s xx=^(cTEST) d
	.s TEST=$p(xx,"\",1),quan=$p(xx,"\",2)
	.s DATE=$o(^TTAB("TS",TEST,3,+$h),-1) i DATE="" d  q
	..s l=$o(^TMP($zn,$j,"Fail",""),-1)+1
	..s ^TMP($zn,$j,"Fail",l)=TEST_" : TestSet : No item effective date before : "_$$extdate2^SSUTIL4(+$h)
	.f ij=1:1:quan d
	..i $$open^LVBCTTSD(TEST,DATE,"Y")
	..f  q:$$fetch^LVBCTTSD(TEST,DATE,"Y")  d
	...k CTTSD m CTTSD=PLIST
	...i $l(CTTSD(6)) d
	....k CTTC i '$$select^LVBCTTC(CTTSD(6)) m CTTC=PLIST
	....s CTTSD(5)=CTTSD(5)_" [ if "_$s($l($g(CTTC(14))):CTTC(14),$l($g(CTTC(3))):CTTC(3),1:CTTSD(6))_CTTSD(7)_CTTSD(8)_" ]"
	...s $p(^TMP($zn,$j,"ITEM",CTTSD(3)),"\",1)=$p($g(^TMP($zn,$j,"ITEM",CTTSD(3))),"\",1)+CTTSD(4)
	...s $p(^TMP($zn,$j,"ITEM",CTTSD(3)),"\",2)=$p($g(^TMP($zn,$j,"ITEM",CTTSD(3))),"\",2)_";"_CTTSD(5)
	..i $$close^LVBCTTSD()
	i $d(^TMP($zn,$j,"Fail")) d  q 100
	.k PLIST m PLIST=^TMP($zn,$j,"Fail")
	.s PLIST=$o(PLIST(""),-1) k ^TMP($zn,$j)
	; check items
	k PAYCODE i '$$select^LVBCTPC(PAY,"Y") m PAYCODE=PLIST
	f j=1:1:29 s PAYCODE(j)=$g(PAYCODE(j))
	d price
	q 0     
price	
	k Items m Items=^TMP($zn,$j,"ITEM")
	s %routine=$p($g(^TTAB("REPORT-GENERIC","PRICING")),"\",1) i $l(%routine) d
	.x "d ItmCheck^"_%routine_"("""_PAYCODE(23)_""","""_(+$h)_""")"
	.x "d ItmLimit^"_%routine_"("""","""_PAYCODE(23)_""")"
	.x "d ItmCalc^"_%routine_"("""_PAYCODE(2)_""")"
	.i Conning="Y" x "d ItmConning^"_%routine_"()"
	s (amount,it)="" f  s it=$o(Result(it)) q:it=""  s amount=amount+Result(it)
	; check initiation item
	s check="Y",item="" f  s item=$o(Items(item)) q:item=""  d  q:check="N"
	.i '$$select^LVBCTBI(item,"Y"),PLIST(10)'="Y" s check="N"
	i check="Y" s init=""
	i amount,$l(init) d
	.x "s x=$$amount^"_%routine_"("""_init_""","""_PAY_""","""_(+$h)_""")"
	.s $p(Result(init),"\",1)=$p(x,"\",1)
	.s $p(Result(init),"\",2)="PEI"
	.s $p(Result(init),"\",4)=$p(x,"\",2)
	x "d GST^"_%routine_"("""_PAYCODE(2)_""","""_(+$h)_""")"
	s item="" f  s item=$o(Result(item)) q:item=""  s $p(Result(item),"\",1)=$j(Result(item),0,2)
	k PLIST s cnt=0
	i $l(init),$p($g(Result(init)),"\") s cnt=1,PLIST(cnt)=init_"\"_Result(init) k Result(init)
	s item="" f  s item=$o(Result(item)) q:item=""  s cnt=cnt+1,PLIST(cnt)=item_"\"_Result(item)
	s item="" f  s item=$o(^TMP($zn,$j,"QUOTE",item)) q:item=""  s cnt=cnt+1,PLIST(cnt)=^(item)
	s PLIST=$o(PLIST(""),-1) k ^TMP($zn,$j)
	q
]]></Routine>
</Export>
