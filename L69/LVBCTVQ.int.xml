<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTVQ" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTVQ ; IG 29/4/98 ;MVB Control code access for CT_VerificationQueue
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTVQ(ROWID,skip)
 ; $$seldata^LVBCTVQ(ROWID,data)
 ; $$open^LVBCTVQ(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTVQ(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTVQ(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTVQ(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTVQ()
 ; $$insert^LVBCTVQ()
 ; $$update^LVBCTVQ(ROWID)
 ; $$delete^LVBCTVQ(ROWID,Comments)
 ; $$getall^LVBCTVQ(vtsRID,RO,Queue)
 ; $$check^LVBCTVQ(list)
 ; $$autocheck^LVBCTVQ(list)
 ;
  ;---&SQL(DECLARE CTVQ CURSOR FOR SELECT * FROM CT_VerificationQueue
   ;---         WHERE ((CTVQ_ReadOnly = :RO) OR (:RO IS NULL)))
   ;--- ** SQL PUBLIC Variables: RO, SQLCODE
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_VerificationQueue VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&SQL(UPDATE CT_VerificationQueue VALUES :PLIST() WHERE CTVQ_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_VerificationQueue WHERE CTVQ_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),RO=$g(RO)
  ;---&SQL(OPEN CTVQ)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTVQ0o
 q 0
 ; fetch the data
fetch(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),RO=$g(RO) k PLIST
  ;---&SQL(FETCH CTVQ INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),RO=$g(RO) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,RO) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,RO,p2,p3,p4,p5,p6,p7,p8,p9) n (skip,RO,PLIST) s skip=$g(skip),RO=$g(RO) k ^TMP($zn,$j)
 i $$open(skip,RO)
 f cnt=1:1 q:$$fetch(skip,RO)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE CTVQ) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTVQ0c 
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_VerificationQueue WHERE CTVQ_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=5 s result=$p($g(^TTAB("VQ",ROWID)),"\",2) q
 .i data=6 s result=$p($g(^TTAB("VQ",ROWID)),"\",3) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
getall(vtsRID,RO,Queue) n (vtsRID,RO,Queue,PLIST) k ^TMP($zn,$j) s vtsRID=$g(vtsRID),RO=$g(RO),Queue=$g(Queue)
 i $$open("Y",RO)
 s cnt=0 f  q:$$fetch("Y",RO)  d
 .i $d(vq(PLIST(2))) q
 .i $l(Queue),Queue=PLIST(2) q
 .s list=$$seldata^LVBCTTS($p(vtsRID,"||",2),72) i $l(list),(","_list_",")'[(","_PLIST(2)_",") q 
 .s cnt=cnt+1,str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; check list of entered specimens
check(list) n (list) s list=$g(list),result=""
 f j=1:1:$l(list,",") s (x,xx)=$p(list,",",j) i $l(x) d
 .i xx[" " s x=$p(xx," ",2)
 .i '$$select(x) s result=result_$s($l(result):",",1:"")_xx q
 .s result=result_$s($l(result):",",1:"")_"<"_x_">"
 q result
autocheck(list) n (list) s list=$g(list),result=""
 f j=1:1:$l(list,",") s (x,xx)=$p(list,",",j) i $l(x) d
 .i xx[" " s x=$p(xx," ",2)
 .s index=$p(x,"-",1),vq=$p(x,"-",2),rep=$p(x,"-",3)
 .i '$$select(vq),index?1.4N,$l(rep),'$$select^MVBSSRG(rep) s lst(index)=xx q
 .i '$$select(vq),index?1.4N,'$l(rep) s lst(index)=xx q
 .s lst(99999_"."_j)="<"_xx_">"
 s j="" f  s j=$o(lst(j)) q:j=""  s result=result_$s($l(result):",",1:"")_lst(j)
 q result
%CTVQ0o s $zt="%CTVQ0E" s SQLCODE=$s($g(%CTVQ0c):-101,1:0) q:SQLCODE'=0  s %CTVQ0d(14)=0 s %CTVQ0d(15)=0,%CTVQ0d(16)=""
 s %CTVQ0d(7)=$g(RO),%CTVQ0d(8)=$g(RO)
 s %CTVQ0d(11)=$zu(28,%CTVQ0d(7),7)
 s %CTVQ0c=1 q
%CTVQ0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTVQ0c,%CTVQ0d,%CTVQ0E,%CTVQ0l,%CTVQ0n,%CTVQ0R,%CTVQ0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTVQ0d(1)=""
%0ABk1 s %CTVQ0d(1)=$o(^TTAB("VQ",%CTVQ0d(1)))
 i %CTVQ0d(1)="" g %0ABdun
 s %CTVQ0d(21)=$g(^TTAB("VQ",%CTVQ0d(1)))
 s %CTVQ0d(2)=$p(%CTVQ0d(21),"\",1) s %CTVQ0d(3)=$p(%CTVQ0d(21),"\",4) s %CTVQ0d(4)=$p(%CTVQ0d(21),"\",2) s %CTVQ0d(5)=$p(%CTVQ0d(21),"\",3) s %CTVQ0d(6)=$p(%CTVQ0d(21),"\",5)
 s %CTVQ0d(10)=$zu(28,%CTVQ0d(3),7)
 g:'(((%CTVQ0d(10)'=" ")&&(%CTVQ0d(10)=%CTVQ0d(11)))||(%CTVQ0d(8)="")) %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("VQ",$p(%CTVQ0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTVQ0d(15)=1,%CTVQ0d(16)=$name(^TTAB("VQ",$p(%CTVQ0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_VerificationQueue for RowID value: "_%CTVQ0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTVQ0d(12)=$lb(""_%CTVQ0d(10))
 i %CTVQ0d(1)'="",$d(^TTAB("VQ",%CTVQ0d(1)))
 e  g %0ACdun
 s %CTVQ0d(26)=$g(^TTAB("VQ",%CTVQ0d(1)))
 s %CTVQ0d(2)=$p(%CTVQ0d(26),"\",1) s %CTVQ0d(3)=$p(%CTVQ0d(26),"\",4) s %CTVQ0d(4)=$p(%CTVQ0d(26),"\",2) s %CTVQ0d(5)=$p(%CTVQ0d(26),"\",3) s %CTVQ0d(6)=$p(%CTVQ0d(26),"\",5)
 s %CTVQ0d(10)=$zu(28,%CTVQ0d(3),7)
 s %CTVQ0d(13)=$lb(""_%CTVQ0d(10))
 g:%CTVQ0d(12)'=%CTVQ0d(13) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTVQ0d(14)=%CTVQ0d(14)+1,%ROWCOUNT=%CTVQ0d(14),%ROWID=%CTVQ0d(1),%CTVQ0c=10 q
%CTVQ0f i '$g(%CTVQ0c) { s SQLCODE=-102 q  } i %CTVQ0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTVQ0d(14))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTVQ0d(14),%CTVQ0c=100 q  } g %0Afirst:%CTVQ0c=1
%0ACdun i $zu(115,2)=1,$g(%CTVQ0d(15))=1 { l -@%CTVQ0d(16) s %CTVQ0d(15)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTVQ0d(14),SQLCODE=100,%CTVQ0c=100 q
%CTVQ0c i '$g(%CTVQ0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTVQ0d(14)),1:0)
 i $zu(115,2)=1,$g(%CTVQ0d(15))=1 { l -@%CTVQ0d(16) } k %CTVQ0c,%CTVQ0d,%CTVQ0E,%CTVQ0l,%CTVQ0n,%CTVQ0R,%CTVQ0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTVQ0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:7 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTVerificationQueue.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("VQ",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTVerificationQueue.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("VQ",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTVerificationQueue.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTVerificationQueue.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTVerificationQueue.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTVerificationQueue.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("VQ",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTVerificationQueue.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("VQ",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTVerificationQueue.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTVerificationQueue.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTVerificationQueue.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTVerificationQueue.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTVQ0f q:SQLCODE'=0
 s PLIST(1)=%CTVQ0d(1),PLIST(2)=%CTVQ0d(1),PLIST(3)=%CTVQ0d(2),PLIST(4)=%CTVQ0d(3),PLIST(5)=%CTVQ0d(4),PLIST(6)=%CTVQ0d(5),PLIST(7)=%CTVQ0d(6)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(8)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(8)
 i PLIST(2)'="",$d(^TTAB("VQ",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(16)=$g(^TTAB("VQ",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(16),"\",1) s PLIST(4)=$p(%mmmsqld(16),"\",4) s PLIST(5)=$p(%mmmsqld(16),"\",2) s PLIST(6)=$p(%mmmsqld(16),"\",3) s PLIST(7)=$p(%mmmsqld(16),"\",5)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("VQ",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("VQ",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_VerificationQueue for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("VQ",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(21)=$g(^TTAB("VQ",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(21),"\",1) s PLIST(4)=$p(%mmmsqld(21),"\",4) s PLIST(5)=$p(%mmmsqld(21),"\",2) s PLIST(6)=$p(%mmmsqld(21),"\",3) s PLIST(7)=$p(%mmmsqld(21),"\",5)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
