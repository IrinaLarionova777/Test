<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIS1" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIS1 ; IG 7/5/98 ; Visit routines
 ;
 ; supported calls :
 ;
 ; $$validres^LVBVIS1(epis,tc,result,vtsRID,check,mi,entry)
 ; $$ranges^LVBVIS1(tc,age,spec,pregn,ptype,date,cond,loc,mi,extra)
 ; $$epcomp^LVBVIS1(epis)
 ; $$drcomp^LVBVIS1(doc,date)
 ; $$autocomm^LVBVIS1(vistsRID,comments)
 ; $$antcomm^LVBVIS1(pathogen)
 ; $$antres^LVBVIS1(pathogen)
 ; $$docrun^LVBVIS1(params,word)
 ; $$docinst^LVBVIS1(params,type,word)
 ; $$EDI^LVBVIS1(vtsRID,doc,hosp,copyto)
 ; $$status^LVBVIS1(vtsRID)
 ; $$previous^LVBVIS1(ur,ColDate,ColTime,epis,tc)
 ; $$accession^LVBVIS1(vtsRID)
 ; $$ir^LVBVIS1(doc,loc)
 ; $$ipRun^LVBVIS1(tests,type,user,cum)
 ;
 ; PLIST : 1 - D/H
 ;         2 - Doctor/Location code
 ;         3 - Doctor/Location description
 ;         4 - Courier run
 ;         5 - Fax number
 ;         6 - Print
 ;         7 - Fax
 ;         8 - EDI
 ;         9 - Doctor/Location additional info
ipRun(tests,type,user,cum) n (tests,type,user,cum,PLIST) s tests=$g(tests),type=$g(type),user=$g(user),cum=$g(cum),epis=$p(tests,"||")
 k ^TMP($zn,$j,"ipRun") m ^TMP($zn,$j,"ipRun",0)=PLIST
 s x="" f  s x=$o(^TMP($zn,$j,"ipRun",0,x)) q:x=""  s xx=^(x) d
 .i $p(xx,"\",6)="Y" s ^TMP($zn,$j,"ipRun","P",x)=xx
 .i $p(xx,"\",7)="Y" s ^TMP($zn,$j,"ipRun","F",x)=xx
 .i $p(xx,"\",8)="Y" s ^TMP($zn,$j,"ipRun","E",x)=xx
 ; print
 s vtsList="" f j=1:1:$l(tests,",") s vts=$p(tests,",",j) i $l(vts) s vtsList=vtsList_$s($l(vtsList):"\",1:"")_vts
 s x="" f  s x=$o(^TMP($zn,$j,"ipRun","P",x)) q:x=""  s xx=^(x) d
 .i $p(xx,"\",1)="D" s param=epis_"~"_$p(xx,"\",4)_"~DOC~"_$s($l($$seldata^LVBCTDR($p(xx,"\",2),1)):$p(xx,"\",2),1:"")_"~"_vtsList_"~"_user_"~"_$tr($p(xx,"\",9),$c(1),"^")_"~"_cum
 .i $p(xx,"\",1)="H" s param=epis_"~"_$p(xx,"\",4)_"~HOS~"_$p(xx,"\",2)_"~"_vtsList_"~"_user_"~"_$tr($p(xx,"\",9),$c(1),"^")_"~"_cum
 .i $$docinst(param,type)
 ; fax
 s vtsList="" f j=1:1:$l(tests,",") s vts=$p(tests,",",j) i $l(vts) s vtsList=vtsList_$s($l(vtsList):"\",1:"")_vts
 s x="" f  s x=$o(^TMP($zn,$j,"ipRun","F",x)) q:x=""  s xx=^(x) d
 .i $p(xx,"\",1)="D" s param=epis_"~"_$p(xx,"\",4)_"~DOC~"_$s($l($$seldata^LVBCTDR($p(xx,"\",2),1)):$p(xx,"\",2),1:"")_"~"_vtsList_"~"_user_"~"_$tr($p(xx,"\",9),$c(1),"^")_"~"_cum
 .i $p(xx,"\",1)="H" s param=epis_"~"_$p(xx,"\",4)_"~HOS~"_$p(xx,"\",2)_"~"_vtsList_"~"_user_"~"_$tr($p(xx,"\",9),$c(1),"^")_"~"_cum
 .i $$docinst(param,type,$p(xx,"\",5),$p(xx,"\",3))
 ; edi
 f j=1:1:$l(tests,",") s vts=$p(tests,",",j) i $l(vts) d
 .s (docList,locList,copyto)=""
 .s x="" f  s x=$o(^TMP($zn,$j,"ipRun","E",x)) q:x=""  s xx=^(x) i $l($p(xx,"\",2)) d
 ..i $p(xx,"\",1)="D" d
 ...i $p(xx,"\",2)'["-" s docList=docList_$s($l(docList):"^",1:"")_$p(xx,"\",2)
 ...i $p(xx,"\",2)["-" s copyto=copyto_$s($l(copyto):"^",1:"")_$p(xx,"\",2)
 ..i $p(xx,"\",1)="H" s locList=locList_$s($l(locList):"^",1:"")_$p(xx,"\",2)
 .i ($l(docList)!$l(locList)!$l(copyto)),$$EDI(vts,docList,locList,copyto)
 k ^TMP($zn,$j,"ipRun")
 q 0
ir(doc,loc) n (doc,loc) s doc=$g(doc),loc=$g(loc),result=""
 i $l(doc),$l($$seldata^LVBCTDR(doc,15)) s result="Y"
 i $l(loc),$l($$seldata^LVBCTHOS(loc,28)) s result="Y"
 q result
accession(vtsRID) n (vtsRID) s vtsRID=$g(vtsRID),result=""
 s epis=$p(vtsRID,"||") i $l(epis) d
 .s acc="" f  s acc=$o(^THIR(epis,acc)) q:acc=""  s ok=1 d
 ..i $l(vtsRID,"||")=3 s ok=0 i $d(^THIR(epis,acc,"TEST",vtsRID)) s ok=1
 ..i ok s result=result_$s($l(result):", ",1:"")_acc
 q result
status(rowid) n (rowid) s rowid=$g(rowid),status=$$seldata^LVBVISTS(rowid,33)
 q status
EDI(vtsRID,doc,hosp,copyto) n (vtsRID,doc,hosp,copyto) s vtsRID=$g(vtsRID),epis=$p(vtsRID,"||"),doc=$g(doc),hosp=$g(hosp),copyto=$g(copyto)
 d OUT^LVBEDI00(epis,46,vtsRID,1,vtsRID,"Print",doc,hosp,copyto)
 q 0
 ; check completed DFT
DFT(vts) n (vts) s vts=$g(vts),result="Y"
 s epis=$p(vts,"||"),test=$p(vts,"||",2),cnt=$p(vts,"||",3)
 s mrn=$$seldata^LVBEPVIS(epis,20),found=""
 s dft="" f  s dft=$o(^TEPIi("DFT",mrn,dft)) q:dft=""  d  q:found
 .s dt="" f  s dt=$o(^TEPIi("DFT",mrn,dft,dt)) q:dt=""  d  q:found
 ..s tm="" f  s tm=$o(^TEPIi("DFT",mrn,dft,dt,tm)) q:tm=""  d  q:found
 ...s seq="" f  s seq=$o(^TEPIi("DFT",mrn,dft,dt,tm,"SEQ",seq)) q:seq=""  i vts=$p(^(seq),"\") s found=1 q
 i found d
 .s seq="" f  s seq=$o(^TEPIi("DFT",mrn,dft,dt,tm,"SEQ",seq)) q:seq=""  d  q:result="N"
 ..s vtsRID=$p(^(seq),"\")
 ..i $p(^TEPI($p(vtsRID,"||"),1,$p(vtsRID,"||",2),$p(vtsRID,"||",3)),"\",31)'="A" s result="N"
 q result
 ; params : 1.courier runs
 ;          2.doctors
 ;          3.departments
 ;          4.full final/department final
 ;          5.Referal hospitals
 ;          6.user
 ;          7.priorities
 ; lock time out
docrun(params,lock) n (params,lock) s params=$g(params),lock=$g(lock),(type1,type2,uparam)=""
 i $l($p($g(^CF("SM",1)),"^",28)),$l($t(@("docrunSet^"_$zn_$p(^CF("SM",1),"^",28)))) d @("docrunSet^"_$zn_$p(^CF("SM",1),"^",28)_"("""_params_""","_""""_lock_""")")
 f j=1:1:7 s @("x"_j)=$p(params,"\",j)
 i x1="Y" s (x,x1)="" f  s x=$o(^TRPT("DR",x)) q:x=""  s x1=x1_$s($l(x1):"~",1:"")_x
 k CONFIG i '$$select^MVBCFLAB(1) m CONFIG=PLIST d
 .f j=1:1:CONFIG s CONFIG(j)=$p($g(CONFIG(j)),$c(1))
 .i CONFIG(51)="U" s type1="U",type2=x6
 .i CONFIG(51)="C" s type1="C"
 k dep,mp
 i $$open^LVBCTDEP()
 f  q:$$fetch^LVBCTDEP()  d
 .i $p(PLIST(11),$c(1))="Y" s dep($p(PLIST(2),$c(1)))=""
 .i $l(lock),$p(PLIST(9),$c(1))="Y" s mp($p(PLIST(2),$c(1)))=""
 i $$close^LVBCTDEP()
 i $l(type1) d
 .f jj1=1:1:$l(x1,"~") s cour=$p(x1,"~",jj1) i $l(cour) d
 ..s Confidential="" i CONFIG(125)="Y" d
 ...  ;---&SQL(SELECT CTCR_Confidential INTO :Confidential FROM CT_Courier WHERE CTCR_RowID=:cour)
  ...  ;--- ** SQL PUBLIC Variables: Confidential, SQLCODE, cour
 ... Do %0Ao
 ...s Confidential=$p(Confidential,$c(1))
 ..i type1="C" s type2=cour
 ..i '$l(type2) q
 ..i 'lock l +^TRPT(type1,type2),+^TRPT("DR",cour) i $l(x6) l +^TRPT("CU",type2_"||"_x6)
 ..i lock l +^TRPT(type1,type2):lock,+^TRPT("DR",cour):lock i $l(x6) l +^TRPT("CU",type2_"||"_x6):lock
 ..s dh1="" f  s dh1=$o(^TRPT("DR",cour,dh1)) q:dh1=""  d
 ...k ^TMP($zn,$j)
 ...s dh2="" f  s dh2=$o(^TRPT("DR",cour,dh1,dh2)) q:dh2=""  d
 .... ; check doctor
 ....i dh1="D",$l(x2),x2'="Y",("~"_x2_"~")'[("~"_dh2_"~") q
 .... ; check hospital
 ....i dh1="H",$l(x5),x5'="Y",("~"_x5_"~")'[("~"_dh2_"~") q
 ....s RepType=""
 ....i dh1="D" d
 ..... ; if copy to not a doctor get requested doctor
 .....s doc=dh2 i $p(dh2,"-")="xxx" s doc=$p(dh2,"-",2)
 ..... ;---s RepType="" &SQL(SELECT CTDR_PrintFormat_DR->CTPF_Type INTO :RepType FROM CT_Doctor WHERE CTDR_ROWID=:doc)
  ..... ;--- ** SQL PUBLIC Variables: RepType, SQLCODE, doc
 .....s RepType="" Do %0Co
 .....s RepType=$p(RepType,$c(1))
 ....i dh1="H" d
 ..... ;---s RepType="" &SQL(SELECT CTHOS_PrintFormat_DR->CTPF_Type INTO :RepType FROM CT_Hospital WHERE CTHOS_ROWID=:dh2)
  ..... ;--- ** SQL PUBLIC Variables: RepType, SQLCODE, dh2
 .....s RepType="" Do %0Eo
 .....s RepType=$p(RepType,$c(1))
 ....s epis="" f  s epis=$o(^TRPT("DR",cour,dh1,dh2,epis)) q:epis=""  d
 ..... ; -------------------------------------------
 ..... ;          FILTER ON DOCTOR REPORTS
 ..... ; -------------------------------------------
 .....i $l($p($g(^CF("SM",1)),"^",28)),$l($t(@("docrunH^"_$zn_$p(^CF("SM",1),"^",28)))) i @("$$docrunH^"_$zn_$p(^CF("SM",1),"^",28)_"("""_cour_""","""_dh1_""","""_dh2_""","""_epis_""","""_uparam_""")") q
 .....l +^DBLock("Printing",epis):0 i  d
 ...... ; check Visit Action
 ......s (xx,dod)=""
 ......  ;---&SQL(SELECT EPVIS_VisitAction_DR->CTVA_SuppressReport,EPVIS_DateOfDischarge INTO :xx,:dod FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
  ......  ;--- ** SQL PUBLIC Variables: SQLCODE, dod, epis, xx
 ...... Do %0Go
 ......i $p(xx,$c(1))="Y" q
 ......i $l($p(dod,$c(1))),dh1="H" k ^TRPT("DR",cour,dh1,dh2,epis) q
 ......i $$open^LVBVISVA(epis)
 ......s stop="" f  q:$$fetch^LVBVISVA(epis)  i $p(PLIST(2),$c(1),4)="Y" s stop=1
 ......i $$close^LVBVISVA()
 ......i stop q
 ...... ; check if all authorised - full final
 ......i '$l(x7),(x4="Y")!(RepType="F") s ok=1 d  i 'ok q
 .......s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d  i 'ok q
 ........s exclude=$$seldata^LVBCTTS(ts,63)
 ........i exclude'="Y" s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  d  i 'ok q
 .........i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt) s status=$$status(epis_"||"_ts_"||"_cnt) i $l(status),status'="A" s ok=0
 ...... ; check if all authorised - department final
 ......i '$l(x7),RepType="DF" k department d
 .......s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 ........s exclude=$$seldata^LVBCTTS(ts,63)
 ........s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt) d
 .........i exclude="Y" s:'$d(department($e(ts))) department($e(ts))="Y" q
 .........s status=$$status(epis_"||"_ts_"||"_cnt)
 .........i status'="A" s department($e(ts))=""
 .........i status="A",'$d(department($e(ts))) s department($e(ts))="Y"
 ...... ; create list of tests to print
 ......s test="" f  s test=$o(^TRPT("DR",cour,dh1,dh2,epis,test)) q:test=""  d
 ....... ; check Manual Print only
 .......i $d(mp($e(test))) q
 ....... ; check department
 .......i $l(x3),x3'="Y",("~"_x3_"~")'[("~"_$e(test)_"~") q
 ....... ; check department final
 .......i '$l(x7),RepType="DF",$g(department($e(test)))'="Y" q
 .......s list=$$seldata^LVBCTTS(test,10),time=$$seldata^LVBCTTS(test,68)
 .......s cnt="" f  s cnt=$o(^TRPT("DR",cour,dh1,dh2,epis,test,cnt)) q:cnt=""  d
 ........ ; check authorised/closed DFT
 ........i $$DFT(epis_"||"_test_"||"_cnt)="N" q
 ........s user1=$p(^TRPT("DR",cour,dh1,dh2,epis,test,cnt),"\",5)
 ........ ; test does not exist
 ........i '$d(^TEPI(epis,1,test,cnt)) k ^TRPT("DR",cour,dh1,dh2,epis,test,cnt) q
 ........ ; test is non printable
 ........i '$$printable^LVBCTTS(test,epis_"||"_test_"||"_cnt) k ^TRPT("DR",cour,dh1,dh2,epis,test,cnt) q
 ........ ; check priority for Quick-Print
 ........i $l(x7) s ok=0 d  i 'ok q
 .........s priority=$$priority^LVBVISTS(epis_"||"_test_"||"_cnt)
 .........i $l(priority),(","_x7_",")[(","_priority_",") s ok=1
 ........ ; check report group
 ........s ok=1 d  i 'ok q
 .........i $l(time) d  i '$l(time) q
 ..........f j=1:1:$l(test_","_list,",") s ts=$p(test_","_list,",",j) i $l(ts) d  i '$l(time) q
 ...........i '$$select^LVBVISTS(epis_"||"_ts_"||"_cnt,"Y"),PLIST(33)="A",(($p($h,",",1)*24*3600)+$p($h,",",2))-((PLIST(7)*24*3600)+PLIST(8))>time s time=""
 .........f j=1:1:$l(list,",") s ts=$p(list,",",j) i $l(ts) d  i 'ok q
 ..........s status=$$status(epis_"||"_ts_"||"_cnt) i $l(status),status'="A" s ok=0
 ........ ; get list of all report group tests
 ........f j=1:1:$l(list,",") s ts=$p(list,",",j) i $l(ts),$$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt),$$status(epis_"||"_ts_"||"_cnt)="A" d
 .........i $d(mp($e(ts))) q
 .........s user2=$p($g(^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)),"\",5) k ^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)
 .........s ^TMP($zn,$j,dh1,dh2,epis,ts,cnt)=$s($l(x6):x6,$l(user2):user2,1:user1)
 ........s ^TMP($zn,$j,dh1,dh2,epis,test,cnt)=$s($l(x6):x6,1:user1) k ^TRPT("DR",cour,dh1,dh2,epis,test,cnt)
 ........ ; get all other related tests to print
 ........i RepType="F" s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 .........n cnt s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt),$$status(epis_"||"_ts_"||"_cnt)="A" d
 ..........i $d(mp($e(ts))) q
 ..........i CONFIG(125)="Y",Confidential'="Y"," Y P "[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........i CONFIG(125)="Y",Confidential="Y"," Y P "'[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........s user2=$p($g(^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)),"\",5) k ^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)
 ..........s ^TMP($zn,$j,dh1,dh2,epis,ts,cnt)=$s($l(x6):x6,$l(user2):user2,1:user1)
 ........i RepType="AI" s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 .........n cnt s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt),$$status(epis_"||"_ts_"||"_cnt)="A" d
 ..........i $d(mp($e(ts))) q
 ..........i CONFIG(125)="Y",Confidential'="Y"," Y P "[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........i CONFIG(125)="Y",Confidential="Y"," Y P "'[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........s user2=$p($g(^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)),"\",5) k ^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)
 ..........s ^TMP($zn,$j,dh1,dh2,epis,ts,cnt)=$s($l(x6):x6,$l(user2):user2,1:user1)
 ........i RepType="FI" d
 .........s ok=1,ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d  i 'ok q
 ..........n cnt s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt) d  i 'ok q
 ...........s status=$$status(epis_"||"_ts_"||"_cnt) i $l(status),status'="A" s ok=0
 .........i ok s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 ..........n cnt s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt) d
 ...........i $d(mp($e(ts))) q
 ...........i CONFIG(125)="Y",Confidential'="Y"," Y P "[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ...........i CONFIG(125)="Y",Confidential="Y"," Y P "'[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ...........s user2=$p($g(^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)),"\",5) k ^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)
 ...........s ^TMP($zn,$j,dh1,dh2,epis,ts,cnt)=$s($l(x6):x6,$l(user2):user2,1:user1)
 ........i RepType="DF" s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 .........i $e(test)=$e(ts) n cnt s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt),$$status(epis_"||"_ts_"||"_cnt)="A" d
 ..........i $d(mp($e(ts))) q
 ..........i CONFIG(125)="Y",Confidential'="Y"," Y P "[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........i CONFIG(125)="Y",Confidential="Y"," Y P "'[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........s user2=$p($g(^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)),"\",5) k ^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)
 ..........s ^TMP($zn,$j,dh1,dh2,epis,ts,cnt)=$s($l(x6):x6,$l(user2):user2,1:user1)
 ........i RepType="DAI" s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 .........i $e(test)=$e(ts) n cnt s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt),$$status(epis_"||"_ts_"||"_cnt)="A" d
 ..........i $d(mp($e(ts))) q
 ..........i CONFIG(125)="Y",Confidential'="Y"," Y P "[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........i CONFIG(125)="Y",Confidential="Y"," Y P "'[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ..........s user2=$p($g(^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)),"\",5) k ^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)
 ..........s ^TMP($zn,$j,dh1,dh2,epis,ts,cnt)=$s($l(x6):x6,$l(user2):user2,1:user1)
 ........i RepType="DFI" d
 .........s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  d
 ..........i $e(test)=$e(ts) n cnt s cnt="" f  s cnt=$o(^TEPI(epis,1,ts,cnt)) q:cnt=""  i $$printable^LVBCTTS(ts,epis_"||"_ts_"||"_cnt) d
 ...........i $d(mp($e(ts))) q
 ...........i CONFIG(125)="Y",Confidential'="Y"," Y P "[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ...........i CONFIG(125)="Y",Confidential="Y"," Y P "'[(" "_$$conf^LVBVISTS(epis_"||"_ts_"||"_cnt)_" ") q
 ...........s user2=$p($g(^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)),"\",5) k ^TRPT("DR",cour,dh1,dh2,epis,ts,cnt)
 ...........s ^TMP($zn,$j,dh1,dh2,epis,ts,cnt)=$s($l(x6):x6,$l(user2):user2,1:user1)
 .....l -^DBLock("Printing",epis)
 ...s p1="" f  s p1=$o(^TMP($zn,$j,p1)) q:p1=""  d
 ....s p2="" f  s p2=$o(^TMP($zn,$j,p1,p2)) q:p2=""  d
 .....s xx="" i p1="H" s xx=$$seldata^LVBCTHOS(p2,30)
 .....s p3="" f  s p3=$o(^TMP($zn,$j,p1,p2,p3)) q:p3=""  d
 ......s p4="" f  s p4=$o(^TMP($zn,$j,p1,p2,p3,p4)) q:p4=""  d
 .......s p5="" f  s p5=$o(^TMP($zn,$j,p1,p2,p3,p4,p5)) q:p5=""  d
 ........s xx6=x6 i '$l(xx6) s xx6=^(p5)
 ........i type1="C",$l(xx6),$d(dep($e(p4))) s ^TRPT("CU",type2_"||"_xx6,p1,p2,p3,p4,p5)=""
 ........e  i type1="C",$l(xx6),p1="H",$p(xx,$c(1))="Y" s ^TRPT("CU",type2_"||"_xx6,p1,p2,p3,p4,p5)=""
 ........e  s ^TRPT(type1,type2,p1,p2,p3,p4,p5)=""
 ... ; print RequestPads
 ...i x4="Y" d
 ....s p1="" f  s p1=$o(^TMP($zn,$j,p1)) q:p1=""  i p1="D" d
 .....s p2="" f  s p2=$o(^TMP($zn,$j,p1,p2)) q:p2=""  d
 ......s epis="" f  s epis=$o(^TMP($zn,$j,p1,p2,epis)) q:epis=""  d
 .......s pad="",doc=$$seldata^LVBEPVIS(epis,15) i $l(doc) s pad=$$seldata^LVBCTDR(doc,52)
 .......i $l(pad),$p(doc,$c(1))=p2 s ^TMP("RequestPads",epis)=""
 ...k ^TMP($zn,$j)
 ..l -^TRPT(type1,type2),-^TRPT("DR",cour) i $l(x6) l -^TRPT("CU",type2_"||"_x6)
 q 0
 ; params : 1.visit
 ;          2.courier run
 ;          3.DOC/HOS
 ;          4.doctor/hospital
 ;          5.list of test sets
 ;          6.user
 ;          7.doctor details
 ;          8.Cummulative (Yes/No)
 ; type   : PP - Partial print
 ;          IP - Instant print
docinst(params,type,fax1,fax2) n (params,type,fax1,fax2) k ^TMP($zn,$j,"docinst")
 s params=$g(params),type=$g(type),fax1=$g(fax1),fax2=$g(fax2),(type1,type2)=""
 f j=1:1:8 s @("x"_j)=$p(params,"~",j)
 i '$$select^MVBCFLAB(1) d
 .f j=1:1:PLIST s PLIST(j)=$p($g(PLIST(j)),$c(1))
 .i PLIST(51)="U" s type1="U",type2=$p(x6,$c(1))
 .i PLIST(51)="C" s type1="C",type2=$p(x2,$c(1))
 k dep
 i $$open^LVBCTDEP()
 f  q:$$fetch^LVBCTDEP()  i $p(PLIST(11),$c(1))="Y" s dep($p(PLIST(2),$c(1)))=""
 i $$close^LVBCTDEP()
 i $l(x1),$l(x2),($l(x4)!$l(x7)) f j=1:1:$l(x5,"\") s vtsRID=$p(x5,"\",j) i $l(vtsRID) d
 .s ts=$p(vtsRID,"||",2),tscnt=$p(vtsRID,"||",3)
 .i $l(ts),$l(tscnt) d
 ..i $l(x7),'$p(x7,"^",7) s $p(x7,"^",7)=1
 .. ; fax reports
 ..i $l(fax1),$l(fax2) d  q
 ...s ^TRPT("FAX",x2,$e(x3),$s($l(x4):x4,1:"xxx--"_x7),x1)=fax1_"-"_fax2
 ...s ^TRPT("FAX",x2,$e(x3),$s($l(x4):x4,1:"xxx--"_x7),x1,ts,tscnt)=type_"\"_x6_"\"_x8
 .. ; print reports
 ..s ^TMP($zn,$j,"docinst",$e(x3),$s($l(x4):x4,1:"xxx--"_x7),x1,ts,tscnt)=type_"\"_x6_"\"_x8
 i $d(^TMP($zn,$j,"docinst")) d
 .l +^TRPT(type1,type2) i $l(x6) l +^TRPT("CU",type2_"||"_x6)
 .s p1="" f  s p1=$o(^TMP($zn,$j,"docinst",p1)) q:p1=""  d
 ..s p2="" f  s p2=$o(^TMP($zn,$j,"docinst",p1,p2)) q:p2=""  d
 ...s xx="" i p1="H" s xx=$$seldata^LVBCTHOS(p2,30)
 ...s p3="" f  s p3=$o(^TMP($zn,$j,"docinst",p1,p2,p3)) q:p3=""  d
 ....s p4="" f  s p4=$o(^TMP($zn,$j,"docinst",p1,p2,p3,p4)) q:p4=""  d
 .....s p5="" f  s p5=$o(^TMP($zn,$j,"docinst",p1,p2,p3,p4,p5)) q:p5=""  d
 ......i type1="C",$d(dep($e(p4))),$l(x6) s ^TRPT("CU",type2_"||"_x6,p1,p2,p3,p4,p5)=^TMP($zn,$j,"docinst",p1,p2,p3,p4,p5)
 ......e  i type1="C",$l(x6),p1="H",$p(xx,$c(1))="Y" s ^TRPT("CU",type2_"||"_x6,p1,p2,p3,p4,p5)=^TMP($zn,$j,"docinst",p1,p2,p3,p4,p5)
 ......e  s ^TRPT(type1,type2,p1,p2,p3,p4,p5)=^TMP($zn,$j,"docinst",p1,p2,p3,p4,p5)
 .l -^TRPT(type1,type2) i $l(x6) l -^TRPT("CU",type2_"||"_x6)
 k ^TMP($zn,$j,"docinst")
 q 0
 ; autocomments for antibiotics
antcomm(pathogen) n (pathogen,PLIST) s pathogen=$g(pathogen) k ^TMP($zn,$j)
 ; sort antibiotics
 f j=1:1:PLIST s x1=$p(PLIST(j),$c(1)),x2=$p(PLIST(j),$c(1),2) i $l(x1),$l(x2) s ^TMP($zn,$j,1,x1)=x2
 d
 . ;---s group="" &SQL(SELECT CTBUG_PathogenGroup_DR INTO :group FROM CT_Bugs WHERE CTBUG_RowID=:pathogen)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, group, pathogen
 .s group="" Do %0Io
 .s group=$p(group,$c(1))
 . ; autocomments from bugs
 .i $d(^TTAB("BUG",pathogen,"AC")) d  i $d(^TMP($zn,$j,2)) q
 ..i $$open^LVBCTBS(pathogen,"Y")
 ..f  q:$$fetch^LVBCTBS(pathogen,"Y")  d
 ...f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ...k PRIORITY m PRIORITY=PLIST
 ... ; check conditions
 ...i $$open^LVBCTBSC(PRIORITY(1),"Y")
 ...s stop=0 f  q:$$fetch^LVBCTBSC(PRIORITY(1),"Y")  d  q:stop
 ....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ....i $g(^TMP($zn,$j,1,PLIST(2)))'=PLIST(3) s stop=1
 ...i $$close^LVBCTBSC()
 ...i 'stop d
 ....i $$open^LVBCTBSR(PRIORITY(1),"Y")
 ....f  q:$$fetch^LVBCTBSR(PRIORITY(1),"Y")  s cnt=$o(^TMP($zn,$j,2,""),-1)+1,^TMP($zn,$j,2,cnt)=PLIST(2)
 ....i $$close^LVBCTBSR()
 ..i $$close^LVBCTBS()
 . ; autocomments from bug-group
 .i $l(group) d  i $d(^TMP($zn,$j,2)) q
 ..i $$open^LVBCTBGB(group,"Y")
 ..f  q:$$fetch^LVBCTBGB(group,"Y")  d
 ...f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ...k PRIORITY m PRIORITY=PLIST
 ... ; check conditions
 ...i $$open^LVBCTBGC(PRIORITY(1),"Y")
 ...s stop=0 f  q:$$fetch^LVBCTBGC(PRIORITY(1),"Y")  d  q:stop
 ....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ....i $g(^TMP($zn,$j,1,PLIST(2)))'=PLIST(3) s stop=1
 ...i $$close^LVBCTBGC()
 ...i 'stop d
 ....i $$open^LVBCTBGD(PRIORITY(1),"Y")
 ....f  q:$$fetch^LVBCTBGD(PRIORITY(1),"Y")  s cnt=$o(^TMP($zn,$j,2,""),-1)+1,^TMP($zn,$j,2,cnt)=PLIST(2)
 ....i $$close^LVBCTBGD()
 ..i $$close^LVBCTBGB()
 k PLIST m PLIST=^TMP($zn,$j,2)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; autoresults for antibiotics
antres(pathogen) n (pathogen,PLIST) s pathogen=$g(pathogen) k ^TMP($zn,$j)
 ; sort antibiotics
 f j=1:1:PLIST s x1=$p(PLIST(j),$c(1)),x2=$p(PLIST(j),$c(1),2) i $l(x1),$l(x2) s ^TMP($zn,$j,1,x1)=x2
 d
 . ;---s group="" &SQL(SELECT CTBUG_PathogenGroup_DR INTO :group FROM CT_Bugs WHERE CTBUG_RowID=:pathogen)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, group, pathogen
 .s group="" Do %0Ko
 .s group=$p(group,$c(1))
 . ; autocomments from bugs
 .i $d(^TTAB("BUG",pathogen,"CALC")) d  i $d(^TMP($zn,$j,2)) q
 ..i $$open^LVBCTBUC(pathogen,"Y")
 ..f  q:$$fetch^LVBCTBUC(pathogen,"Y")  d
 ...f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ...k PRIORITY m PRIORITY=PLIST
 ... ; check conditions
 ...i $$open^LVBCTBCC(PRIORITY(1),"Y")
 ...s stop=0 f  q:$$fetch^LVBCTBCC(PRIORITY(1),"Y")  d  q:stop
 ....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ....i $g(^TMP($zn,$j,1,PLIST(2)))'=PLIST(3) s stop=1
 ...i $$close^LVBCTBCC()
 ...i 'stop d
 ....i $$open^LVBCTBCR(PRIORITY(1),"Y")
 ....f  q:$$fetch^LVBCTBCR(PRIORITY(1),"Y")  s ^TMP($zn,$j,2,PLIST(2))=PLIST(3)
 ....i $$close^LVBCTBCR()
 ..i $$close^LVBCTBUC()
 . ; autocomments from bug-group
 .i $l(group) d  i $d(^TMP($zn,$j,2)) q
 ..i $$open^LVBCTBGL(group,"Y")
 ..f  q:$$fetch^LVBCTBGL(group,"Y")  d
 ...f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ...k PRIORITY m PRIORITY=PLIST
 ... ; check conditions
 ...i $$open^LVBCTBGO(PRIORITY(1),"Y")
 ...s stop=0 f  q:$$fetch^LVBCTBGO(PRIORITY(1),"Y")  d  q:stop
 ....f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ....i $g(^TMP($zn,$j,1,PLIST(2)))'=PLIST(3) s stop=1
 ...i $$close^LVBCTBGO()
 ...i 'stop d
 ....i $$open^LVBCTBGR(PRIORITY(1),"Y")
 ....f  q:$$fetch^LVBCTBGR(PRIORITY(1),"Y")  s ^TMP($zn,$j,2,PLIST(2))=PLIST(3)
 ....i $$close^LVBCTBGR()
 ..i $$close^LVBCTBGL()
 k PLIST s x="" f cnt=1:1 s x=$o(^TMP($zn,$j,2,x)) q:x=""  s PLIST(cnt)=x_$c(1)_^(x)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; autocomments
autocomm(vtsRID,comments) n (vtsRID,comments,PLIST) s vtsRID=$g(vtsRID),comments=$g(comments) k ^TMP($zn,$j)
 s epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2)
 f j=1:1:PLIST s x1=$p(PLIST(j),$c(1),1),x2=$p(PLIST(j),$c(1),2),x3=$p(PLIST(j),$c(1),3) d
 .i $e(x2)=">" s x2=$e(x2,2,$l(x2))+.00000001
 .i $e(x2)="<" s x2=$e(x2,2,$l(x2))-.00000001
 .i $l(x1) s ^TMP($zn,$j,"IN",x1)=x2,^TMP($zn,$j,"IN",x1,"COM")=x3
 f j=5,15,26 s VISIT(j)=$$seldata^LVBEPVIS(epis,j)
 i $$open^LVBCTTSC(test,,"Y")
 f  q:$$fetch^LVBCTTSC(test,,"Y")  d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .m COMM=PLIST
 . ; check patient sex
 .i $l(COMM(5)),COMM(5)'=VISIT(5) q
 . ; check patient doctor
 .i $l(COMM(6)),COMM(6)'=VISIT(15) q
 . ; check patient age
 .i $l(COMM(7)),COMM(7)>VISIT(26) q
 .i $l(COMM(8)),COMM(8)<VISIT(26) q
 . ; check conditions
 .i $$open^LVBCTTSR(COMM(1),"Y")
 . ; t1 - number of true conditions
 . ; t2 - number of conditions
 .s (t1,t2)=0 f  q:$$fetch^LVBCTTSR(COMM(1),"Y")  s t2=t2+1 d  q:t1<t2
 ..f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 ..s val=$g(^TMP($zn,$j,"IN",PLIST(2))) i $l(val) d
 ... ; check standard comments
 ...i " N M "[(" "_$e($p($g(^TTAB("TC",PLIST(2))),"\",3))_" "),$d(^TTAB("RC",val))," = '= "'[(" "_PLIST(4)_" ") q
 ...i $d(^TTAB("TC",PLIST(2),2,val))," = '= "'[(" "_PLIST(4)_" ") q
 ... ; check between separately
 ...i PLIST(4)="-" d  q
 ....s x1="s ok1=("""_val_"""<"""_$p($tr(PLIST(3),",","."),"-",1)_""")"
 ....s x2="s ok2=("""_val_""">"""_$p($tr(PLIST(3),",","."),"-",2)_""")"
 ....s $zt="error^"_$zn x x1,x2 i 'ok1,'ok2 s t1=t1+1
 ... ; check everything except between
 ...i PLIST(4)'="-" d  q
 ....s x="s ok=("""_val_""""_PLIST(4)_""""_$tr(PLIST(3),",",".")_""")"
 ....s $zt="error^"_$zn x x i ok s t1=t1+1
 .i $$close^LVBCTTSR()
 . ; test item included in calculations
 .s ^TMP($zn,$j,"OUT",COMM(2))=""
 . ; all conditions true
 .i t1,t1=t2 s ^TMP($zn,$j,"OUT",COMM(2),+COMM(9),COMM(4))=""
 i $$close^LVBCTTSC()
 ; Return Auto comments only
 i comments'="Y" d
 .k PLIST s cnt=0
 .s x1="" f  s x1=$o(^TMP($zn,$j,"OUT",x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TMP($zn,$j,"OUT",x1,x2)) q:x2=""  d
 ...s (x3,x4)="" f  s x3=$o(^TMP($zn,$j,"OUT",x1,x2,x3)) q:x3=""  s x4=x4_$s($l(x4):$c(2),1:"")_x3
 ...i $l(x4) s cnt=cnt+1,PLIST(cnt)=x1_$c(1)_x4
 ; Return ALL comments
 i comments="Y" d
 .s x1="" f  s x1=$o(^TMP($zn,$j,"IN",x1)) q:x1=""  d
 ..s xx=$g(^TMP($zn,$j,"IN",x1,"COM"))
 .. ; delete old auto comments
 ..s j1=0 f  s j1=$f(xx,"[",j1) q:'j1  s j2=$f(xx,"]",j1) q:'j2  s x2=$e(xx,j1,j2-2)  i $l(x2),$d(^TTAB("TC",x1,2,x2)),'$d(^TMP($zn,$j,"OUT",x1,x2)) s xx=$e(xx,1,j1-2)_$e(xx,j2,$l(xx)),j1=j1-2 i $e(xx,j1)="|" s xx=$e(xx,1,j1-1)_$e(xx,j1+1,$l(xx)),j1=j1-1
 ..i $tr(xx," ")="" s xx=""
 .. ; add new auto comments
 ..s x2="" f  s x2=$o(^TMP($zn,$j,"OUT",x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TMP($zn,$j,"OUT",x1,x2,x3)) q:x3=""  d
 ....i '((xx[("["_x3_"]"))!(xx[("{"_x3_"}"))) s xx=xx_$s($l(xx):"|",1:"")_"["_x3_"]"
 ..f j=$l(xx):-1:1 q:"| "'[$e(xx,j)  s xx=$e(xx,1,j-1)
 ..s ^TMP($zn,$j,"IN",x1,"COM")=xx
 .s x1="" f  s x1=$o(^TMP($zn,$j,"OUT",x1)) q:x1=""  i '$d(^TMP($zn,$j,"IN",x1,"COM")) d
 ..s (x2,xx)="" f  s x2=$o(^TMP($zn,$j,"OUT",x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TMP($zn,$j,"OUT",x1,x2,x3)) q:x3=""  s xx=xx_$s($l(xx):"|",1:"")_"["_x3_"]"
 ..s ^TMP($zn,$j,"IN",x1,"COM")=xx
 .k PLIST s cnt=0
 .s x1="" f  s x1=$o(^TMP($zn,$j,"IN",x1)) q:x1=""  d
 ..s xx=$g(^TMP($zn,$j,"IN",x1,"COM")) i $l(xx) s cnt=cnt+1,PLIST(cnt)=x1_$c(1)_xx
 s PLIST=$o(PLIST(""),-1) k ^TMP($zn,$j)
 q 0
error d BACK^%ETN
 q
 ;
 ; check : 1 - ABNORMAL
 ;         2 - PATH
 ;         3 - PANIC
 ;         4 - DELTA
 ;         5 - PREVIOUS
 ;         6 - AUTO
 ;         7 - UNACCEPT
 ;         8 - INVALID
validres(epis,tc,result,vtsRID,check,mi,entry) n (epis,tc,result,vtsRID,check,mi,entry)
 s epis=$g(epis),tc=$g(tc),result=$g(result),vtsRID=$g(vtsRID),check=$g(check),mi=$g(mi),entry=$g(entry),date=""
 f j="ABNORMAL","PATH","PANIC","DELTA","PREVIOUS","AUTO","UNACCEPT","INVALID" s reject(j)="N"
 i $l(result) s Alternate=$$seldata^MVBCFLAB(1,69) i $l(Alternate),$p(Alternate,"-")=result g valend
 ; check episode
 s ur=$$seldata^LVBEPVIS(epis,20),ColDate=$$seldata^LVBEPVIS(epis,12),ColTime=$$seldata^LVBEPVIS(epis,13)/60
 i '$l(check)!(check[5) s reject("PREVIOUS")=$p($$previous(ur,ColDate,ColTime,epis,tc),$c(1))
 i '$l(result) g valend
 ; check test code
 s resform=$$seldata^LVBCTTC(tc,5),deltfrom=$$seldata^LVBCTTC(tc,12),deltto=$$seldata^LVBCTTC(tc,35),delt=$$seldata^LVBCTTC(tc,42),deltSC=$$seldata^LVBCTTC(tc,11)
 i resform="C" g valend
 i $l(result),($e(resform)="N")!($e(resform)="M") s result=$$res(result)
 ; check validity of result
 i '$l(check)!(check[8) d  i reject("INVALID")="Y" g valend
 .i $e(resform)="X" q
 .i (resform="A") s vx="" d  i $l($p(vx,","))<20,$l(vx),$p($g(^TTAB("TC",tc,2,$p(vx,","))),"\",4)="Y" q
 ..f j=1:1 q:$p(result,";",j)=""  s vx=$p(result,";",j)
 .i (resform="B1")!(resform="S"),$l(result)<20,$l(result),$p($g(^TTAB("TC",tc,2,result)),"\",4)="Y" q
 .i ($e(resform)="N")!($e(resform)="M"),$l(result)<20,entry'="Y",$d(^TTAB("RC",result)) q
 .i ($e(resform)="N")!($e(resform)="M"),$l(result)<20,entry="Y",$d(^TTAB("RC",result)),$$seldata^LVBCTRC(result,4)="Y" q
 .i resform="B2",$l(result)<20,$d(^TTAB("BB-BG",result)) q
 .i resform="B3",$l(result)<20,$d(^TTAB("BB-GEN",result)) q
 .i resform="B4",$l(result)<20,$d(^TTAB("BB-GEN",result)) q
 .i $e(resform)="V",$l(result)<20,$p($g(^TTAB("BUG",result)),"\",11)="Y" q
 .i ($e(resform)="N")!($e(resform)="M"),$e(result)="-" q
 .i ($e(resform)="N")!($e(resform)="M"),result?.1"<"1.N.1".".N q
 .i ($e(resform)="N")!($e(resform)="M"),result?.1"<".1"."1.N q
 .i ($e(resform)="N")!($e(resform)="M"),result?.1">"1.N.1".".N q
 .i ($e(resform)="N")!($e(resform)="M"),result?.1">".1"."1.N q
 .i $e(resform)="D",result?5N q
 .i $e(resform)="T",result?1.5N q
 .i $e(resform)="Y"," Y y N n "[(" "_result_" ") q
 .i $e(resform)="Z" q
 .s reject("INVALID")="Y"
 i '$l(check)!(check[1),$l(result)<20,$d(^TTAB("TC",tc,2,result)),$p(^(result),"\",1)="A" s reject("ABNORMAL")="H"
 f j=5,12,13,20,22,26,60,63,64,98,167 s PLIST(j)=$$seldata^LVBEPVIS(epis,j)
 s ur=PLIST(20),ColDate=PLIST(12),ColTime=PLIST(13)/60,spec=PLIST(5),age=PLIST(26),pregn=PLIST(63),cond=PLIST(98),loc=PLIST(22),weeks=PLIST(64),ethnicity=PLIST(60),altitude=PLIST(167)
 i '$l(ur) g valend
 s inpat=$$seldata^LVBCTHOS(loc,19)
 ; delta check for comments
 i $l(result)<20," A B1 S "[(" "_resform_" "),deltSC="Y",'$l(check)!(check[4) s stop=0 d
 . ; disallow delta for normal results
 .i delt="Y",reject("ABNORMAL")="N" q
 .s Flag1=$p($g(^TTAB("TC",tc,2,result)),"\",1),Flag2=""
 .s date0=ColDate+1 f  s date0=$o(^TDEBi(ur,"DATE",date0),-1) q:date0=""  d  q:stop
 ..s time0="" f  s time0=$o(^TDEBi(ur,"DATE",date0,time0),-1) q:time0=""  d  q:stop
 ... ; further episodes
 ...i ((ColDate-date0*24)+(ColTime-time0/60))<0 q
 ... ; outside delta to hours
 ...i $l(deltto),((ColDate-date0*24)+(ColTime-time0/60))'<deltto q
 ... ; outside delta from hours
 ...i $l(deltfrom),((ColDate-date0*24)+(ColTime-time0/60))'>deltfrom q
 ...s window=(ColDate-date0*24)+(ColTime-time0/60)
 ...s ep="" f  s ep=$o(^TDEBi(ur,"DATE",date0,time0,ep)) q:ep=""  i ep'=epis d  q:stop
 ....s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  i $d(^TTAB("TC",tc,1,ts)) d  q:stop
 .....s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  i $d(^TEPI(ep,1,ts,cnt,"DATA",tc)) d  q:stop
 ......s resultOld=$p($g(^TEPI(ep,1,ts,cnt,"DATA",tc)),"\")
 ......i $l(resultOld) s Flag2=$p($g(^TTAB("TC",tc,2,resultOld)),"\",1),stop=1
 .i $l(Flag1),$l(Flag2),Flag1'=Flag2 s reject("DELTA")="H"
 ; check only numeric results
 i $e(resform)'["N" g valend
 i $d(^TTAB("TC",tc,2,result)) g valend
 k Abs,AbsRate,Perc,PercRate
 ; check only numeric non comment results
 i '$$select^LVBCTRC(result,"Y") g valend
 ; get authorised date
 i $l(vtsRID) s date=$$seldata^LVBVISTS(vtsRID,7)
 ; type      - common/outpatient
 ;      -IN  - inpatient
 s (type1,type2)=$s(inpat="Y":"-IN",1:""),type1=0_type1,type2=5_type2
 ; check ranges by type,age,sex
 i '$l(check)!(check[1)!(check[2)!(check[3)!(check[6)!(check[7) d
 .s x=$$ranges(tc,age,spec,pregn,type1,date,cond,loc,mi,weeks_$c(1)_ethnicity_$c(1)_altitude)
 .s lr=$p(x,$c(1),1),hr=$p(x,$c(1),2),paniclr=$p(x,$c(1),3),panichr=$p(x,$c(1),4),pathlr=$p(x,$c(1),5),pathhr=$p(x,$c(1),6)
 .s autolr=$p(x,$c(1),7),autohr=$p(x,$c(1),8),unalr=$p(x,$c(1),9),unahr=$p(x,$c(1),10)
 .i lr["<",hr="" s hr=lr,lr=""
 .i hr[">",lr="" s lr=hr,hr=""
 .i paniclr["<",panichr="" s panichr=paniclr,paniclr=""
 .i panichr[">",paniclr="" s paniclr=panichr,panichr=""
 .i pathlr["<",pathhr="" s pathhr=pathlr,pathlr=""
 .i pathhr[">",pathlr="" s pathlr=pathhr,pathhr=""
 .i autolr["<",autohr="" s autohr=autolr,autolr=""
 .i autohr[">",autolr="" s autolr=autohr,autohr=""
 .i unalr["<",unahr="" s unahr=unalr,unalr=""
 .i unahr[">",unalr="" s unalr=unahr,unahr=""
 .f range="lr","hr","paniclr","panichr","pathlr","pathhr","autolr","autohr","unalr","unahr" s @range=$$res(@range)
 .i $l(hr),result>hr s reject("ABNORMAL")="H"
 .i $l(lr),result<lr s reject("ABNORMAL")="L"
 .i $l(panichr),result>panichr s reject("PANIC")="H"
 .i $l(paniclr),result<paniclr s reject("PANIC")="L"
 .i $l(pathhr),result>pathhr s reject("PATH")="H"
 .i $l(pathlr),result<pathlr s reject("PATH")="L"
 .i $l(autohr),result>autohr s reject("AUTO")="H"
 .i $l(autolr),result<autolr s reject("AUTO")="L"
 .i $l(unahr),result>unahr s reject("UNACCEPT")="H"
 .i $l(unalr),result<unalr s reject("UNACCEPT")="L"
 ; delta check for numeric items
 i '$l(check)!(check[4) d
 . ; disallow delta for normal results
 .i delt="Y",reject("ABNORMAL")="N" q
 . ;
 . ; set common data
 . ;
 .k xAbs,xPerc,xAbsRate,xPercRate s found=""
 .f type=type2,$e(type2) s x="" f  s x=$o(^TTAB("TC",tc,"DELTA",type,x)) q:x=""  d
 ..i $l($p(^(x),"\",20)),age>$p(^(x),"\",20) q
 ..i $l($p(^(x),"\",21)),spec'=$p(^(x),"\",21) q
 ..i $l($p(^(x),"\",22)),result<$p(^(x),"\",22) q
 ..i $l($p(^(x),"\",23)),result>$p(^(x),"\",23) q
 ..s ok=0 f j=20:1:23 i $l($p(^(x),"\",j)) s ok=ok+1
 ..i (ok>found)!'$l(found) s found=ok_$c(1)_x
 .i $l(found) d
 ..i $$select^LVBCTTCD(tc_"||"_type_"||"_$p(found,$c(1),2),"Y") q
 .. ; common
 ..s xAbs(0)=PLIST(5),xPerc(0)=PLIST(8),xAbsRate(0)=PLIST(11),xPercRate(0)=PLIST(14)
 .. ; Asc
 ..s xAbs(1)=PLIST(6),xPerc(1)=PLIST(9),xAbsRate(1)=PLIST(12),xPercRate(1)=PLIST(15)
 .. ; Dsc
 ..s xAbs(2)=PLIST(7),xPerc(2)=PLIST(10),xAbsRate(2)=PLIST(13),xPercRate(2)=PLIST(16)
 .s CheckDelta=0
 . ;
 . ; Absolute Rate delta
 . ;
 .i $d(xAbsRate),$l(ur),'CheckDelta,reject("DELTA")="N",xAbsRate(0)!xAbsRate(1)!xAbsRate(2),deltto s stop=0 d
 ..s date0=ColDate+1 f  s date0=$o(^TDEBi(ur,"DATE",date0),-1) q:date0=""  d  q:stop
 ...s time0="" f  s time0=$o(^TDEBi(ur,"DATE",date0,time0),-1) q:time0=""  d  q:stop
 .... ; further episodes
 ....i ((ColDate-date0*24)+(ColTime-time0/60))<0 q
 .... ; outside delta to hours
 ....i $l(deltto),((ColDate-date0*24)+(ColTime-time0/60))'<deltto q
 .... ; outside delta from hours
 ....i $l(deltfrom),((ColDate-date0*24)+(ColTime-time0/60))'>deltfrom q
 ....s window=(ColDate-date0*24)+(ColTime-time0/60)
 ....s ep="" f  s ep=$o(^TDEBi(ur,"DATE",date0,time0,ep)) q:ep=""  i ep'=epis d  q:stop
 .....s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  i $d(^TTAB("TC",tc,1,ts)) d  q:stop
 ......s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  i $d(^TEPI(ep,1,ts,cnt,"DATA",tc)) d  q:stop
 .......s resultOld=$g(^TEPI(ep,1,ts,cnt,"DATA",tc)) i $l(resultOld),'$d(^TTAB("RC",resultOld)) d
 ........s (stop,CheckDelta)=1
 ........i result>resultOld,xAbsRate(1)!xAbsRate(0) d
 .........i $l(xAbsRate(1)) s resultNew=resultOld+(xAbsRate(1)*window)
 .........e  s resultNew=resultOld+(xAbsRate(0)*window)
 .........i result>resultNew s reject("DELTA")="H"
 ........i result<resultOld,xAbsRate(2)!xAbsRate(0) d
 .........i $l(xAbsRate(2)) s resultNew=resultOld-(xAbsRate(2)*window)
 .........e  s resultNew=resultOld-(xAbsRate(0)*window)
 .........i result<resultNew s reject("DELTA")="L"
 . ;
 . ; Percentage Rate delta
 . ;
 .i $d(xPercRate),$l(ur),'CheckDelta,reject("DELTA")="N",xPercRate(0)!xPercRate(1)!xPercRate(2),deltto s stop=0 d
 ..s date0=ColDate+1 f  s date0=$o(^TDEBi(ur,"DATE",date0),-1) q:date0=""  d  q:stop
 ...s time0="" f  s time0=$o(^TDEBi(ur,"DATE",date0,time0),-1) q:time0=""  d  q:stop
 .... ; further episodes
 ....i ((ColDate-date0*24)+(ColTime-time0/60))<0 q
 .... ; outside delta to hours
 ....i $l(deltto),((ColDate-date0*24)+(ColTime-time0/60))'<deltto q
 .... ; outside delta from hours
 ....i $l(deltfrom),((ColDate-date0*24)+(ColTime-time0/60))'>deltfrom q
 ....s window=(ColDate-date0*24)+(ColTime-time0/60)
 ....s ep="" f  s ep=$o(^TDEBi(ur,"DATE",date0,time0,ep)) q:ep=""  i ep'=epis d  q:stop
 .....s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  i $d(^TTAB("TC",tc,1,ts)) d  q:stop
 ......s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  i $d(^TEPI(ep,1,ts,cnt,"DATA",tc)) d  q:stop
 .......s resultOld=$g(^TEPI(ep,1,ts,cnt,"DATA",tc)) i $l(resultOld),'$d(^TTAB("RC",resultOld)) d
 ........s (stop,CheckDelta)=1
 ........i result>resultOld,xPercRate(1)!xPercRate(0) d
 .........i $l(xPercRate(1)) s resultNew=resultOld+(resultOld*xPercRate(1)/100*window)
 .........e  s resultNew=resultOld+(resultOld*xPercRate(0)/100*window)
 .........i result>resultNew s reject("DELTA")="H"
 ........i result<resultOld,xPercRate(2)!xPercRate(0) d
 .........i $l(xPercRate(2)) s resultNew=resultOld-(resultOld*xPercRate(2)/100*window)
 .........e  s resultNew=resultOld-(resultOld*xPercRate(0)/100*window)
 .........i result<resultNew s reject("DELTA")="L"
 . ;
 . ; percentage delta
 . ;
 .i $d(xPerc),$l(ur),'CheckDelta,reject("DELTA")="N",xPerc(0)!xPerc(1)!xPerc(2) s stop=0 d
 ..s date0=ColDate+1 f  s date0=$o(^TDEBi(ur,"DATE",date0),-1) q:date0=""  d  q:stop
 ...s time0="" f  s time0=$o(^TDEBi(ur,"DATE",date0,time0),-1) q:time0=""  d  q:stop
 .... ; further episodes
 ....i ((ColDate-date0*24)+(ColTime-time0/60))<0 q
 .... ; outside delta to hours
 ....i $l(deltto),((ColDate-date0*24)+(ColTime-time0/60))'<deltto q
 ....s ep="" f  s ep=$o(^TDEBi(ur,"DATE",date0,time0,ep)) q:ep=""  i ep'=epis d  q:stop
 .....s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  i $d(^TTAB("TC",tc,1,ts)) d  q:stop
 ......s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  i $d(^TEPI(ep,1,ts,cnt,"DATA",tc)) d  q:stop
 .......s resultOld=$g(^TEPI(ep,1,ts,cnt,"DATA",tc)) i $l(resultOld),'$d(^TTAB("RC",resultOld)) d
 ........s (stop,CheckDelta)=1
 ........i result>resultOld,xPerc(1)!xPerc(0) d
 .........i $l(xPerc(1)) s resultNew=resultOld+(resultOld*xPerc(1)/100)
 .........e  s resultNew=resultOld+(resultOld*xPerc(0)/100)
 .........i result>resultNew s reject("DELTA")="H"
 ........i result<resultOld,xPerc(2)!xPerc(0) d
 .........i $l(xPerc(2)) s resultNew=resultOld-(resultOld*xPerc(2)/100)
 .........e  s resultNew=resultOld-(resultOld*xPerc(0)/100)
 .........i result<resultNew s reject("DELTA")="L"
 . ;
 . ; absolute delta
 . ;
 .i $d(xAbs),$l(ur),'CheckDelta,reject("DELTA")="N",xAbs(0)!xAbs(1)!xAbs(2) s stop=0 d
 ..s date0=ColDate+1 f  s date0=$o(^TDEBi(ur,"DATE",date0),-1) q:date0=""  d  q:stop
 ...s time0="" f  s time0=$o(^TDEBi(ur,"DATE",date0,time0),-1) q:time0=""  d  q:stop
 .... ; further episodes
 ....i ((ColDate-date0*24)+(ColTime-time0/60))<0 q
 .... ; outside delta to hours
 ....i $l(deltto),((ColDate-date0*24)+(ColTime-time0/60))'<deltto q
 ....s ep="" f  s ep=$o(^TDEBi(ur,"DATE",date0,time0,ep)) q:ep=""  i ep'=epis d  q:stop
 .....s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  i $d(^TTAB("TC",tc,1,ts)) d  q:stop
 ......s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  i $d(^TEPI(ep,1,ts,cnt,"DATA",tc)) d  q:stop
 .......s resultOld=$g(^TEPI(ep,1,ts,cnt,"DATA",tc)) i $l(resultOld),'$d(^TTAB("RC",resultOld)) d
 ........s (stop,CheckDelta)=1
 ........i result>resultOld,xAbs(1)!xAbs(0) d
 .........i $l(xAbs(1)) s resultNew=resultOld+xAbs(1)
 .........e  s resultNew=resultOld+xAbs(0)
 .........i result>resultNew s reject("DELTA")="H"
 ........i result<resultOld,xAbs(2)!xAbs(0) d
 .........i $l(xAbs(2)) s resultNew=resultOld-xAbs(2)
 .........e  s resultNew=resultOld-xAbs(0)
 .........i result<resultNew s reject("DELTA")="L"
valend s flag="" f j="ABNORMAL","PATH","PANIC","DELTA","PREVIOUS","AUTO","UNACCEPT","INVALID" s flag=flag_$s($l(flag):$c(1),1:"")_reject(j)
 q flag
res(res) ; check < >
 i res[">" s res=$tr(res,">")+.00000001
 i res["<" s res=$tr(res,"<")-.00000001
 q res
 ; Find previous results
previous(ur,ColDate,ColTime,epis,tc) n date0,time0,stop,ep,ts,cnt,result
 s ur=$g(ur),ColDate=$g(ColDate),ColTime=$g(ColTime),epis=$g(epis),tc=$g(tc),result="N",stop=0
 s lt=$$seldata^LVBCTTC(tc,16)
 i 'lt s lt=365
 i $l(ur) d
 .i '$l(ColDate) s ColDate=+$h,ColTime=$p($h,",",2)
 .s date0=ColDate+1 f  s date0=$o(^TDEBi(ur,"DATE",date0),-1) q:date0=""  q:date0<(ColDate-lt)  d  q:stop
 ..s time0="" f  s time0=$o(^TDEBi(ur,"DATE",date0,time0),-1) q:time0=""  d  q:stop
 ... ; further episodes
 ...i ((ColDate-date0*24)+(ColTime-time0/60))<0 q
 ...s ep="" f  s ep=$o(^TDEBi(ur,"DATE",date0,time0,ep)) q:ep=""  i ep=epis q
 ...f  s ep=$o(^TDEBi(ur,"DATE",date0,time0,ep)) q:ep=""  d  q:stop
 ....s ts="" f  s ts=$o(^TEPI(ep,1,ts)) q:ts=""  d  q:stop
 .....s cnt="" f  s cnt=$o(^TEPI(ep,1,ts,cnt)) q:cnt=""  i $d(^TEPI(ep,1,ts,cnt,"DATA",tc)) d  q
 ......s stop=1,result="Y"_$c(1)_ep_"||"_ts_"||"_cnt_"||"_tc_$c(1)_$s($d(^TTAB("BB-Register","AR",ts,tc)):"Y",1:"")
 q result
 ; find doctors company by episode
epcomp(epis) n (epis) s epis=$g(epis)
 s date=+$$seldata^LVBEPVIS(epis,12),doc=$$seldata^LVBEPVIS(epis,15)
 q $$drcomp(doc,date)
 ; find doctors company
drcomp(doc,data) n (doc,data) s doc=$g(doc),data=$g(data),result=""
 i $o(^TTAB("CO",""))=$o(^TTAB("CO",""),-1) s result=$o(^TTAB("CO",""))
 i result="",'$$select^LVBCTDR(doc,"Y") s result=$p(PLIST(20),$c(1)) i $l(data) d
 .s data=$o(^TTAB("DR",doc,0,data)) i $l(data) s result=^(data)
 q result
 ; check ranges by type,age,sex,conditions
 ; extra - 1.weeks
 ;         2.ethnicity
 ;         3.altitude
ranges(tc,age,spec,pregn,ptype,date,cond,loc,mi,extra) n j,x,xf,age0,type,PLIST,exist,result,format s result=""
 s tc=$g(tc),age=$g(age),spec=$g(spec),pregn=$g(pregn),ptype=$g(ptype),date=$g(date),cond=$g(cond),loc=$g(loc),mi=$g(mi),extra=$g(extra)
 s weeks=$p(extra,$c(1),1),ethnicity=$p(extra,$c(1),2),altitude=$p(extra,$c(1),3)
 s format=$$seldata^LVBCTTC(tc,5)
 i '$l(date) s date=+$h
 i '$d(^TTAB("TC",tc,4,date)) s date=$o(^TTAB("TC",tc,4,date),-1)
 i $l(date) d
 .f type=ptype,$e(ptype) i $d(^TTAB("TC",tc,4,date,type)) d  q
 ..k xf s x="" f  s x=$o(^TTAB("TC",tc,4,date,type,x)) q:x=""  d
 ...i $l($p(^(x),"\",23)),'$l(age) q
 ...i $l($p(^(x),"\",23)),age<$p($p(^(x),"\",23),"-",1) q
 ...i $l($p(^(x),"\",23)),age>$p($p(^(x),"\",23),"-",2) q
 ...i $l($p(^(x),"\",22)),$p(^(x),"\",22)'=spec q
 ...i $l($p(^(x),"\",21)),$p(^(x),"\",21)'=cond q
 ...i $l($p(^(x),"\",24)),$p(^(x),"\",24)'=loc q
 ...i $l($p(^(x),"\",25)),'$l(weeks) q
 ...i $l($p(^(x),"\",25)),weeks<$p($p(^(x),"\",25),"-",1) q
 ...i $l($p(^(x),"\",25)),weeks>$p($p(^(x),"\",25),"-",2) q
 ...i $l($p(^(x),"\",26)),$p(^(x),"\",26)'=ethnicity q
 ...i $l($p(^(x),"\",27)),$p(^(x),"\",27)'=altitude q
 ...s xf=(''$l($p(^(x),"\",21)))+(''$l($p(^(x),"\",22)))+(''$l($p(^(x),"\",23)))+(''$l($p(^(x),"\",24)))+(''$l($p(^(x),"\",25)))+(''$l($p(^(x),"\",26)))+(''$l($p(^(x),"\",27))),xf(xf,x)=^(x)
 ..s xf=$o(xf(""),-1) i $l(xf) s x=$o(xf(xf,"")) i $l(x) d
 ...s (aaLow,aaHigh,aaPLow,aaPHigh)=""
 ...i $l(mi) s rowid=tc_"||"_date_"||"_type_"||"_x_"||"_mi i '$$select^LVBCTTCG(rowid) d
 ....s aaLow=PLIST(3),aaHigh=PLIST(4),aaPLow=PLIST(5),aaPHigh=PLIST(6)
 ...s xx=$p(xf(xf,x),"\",1,8)_"\"_$p(xf(xf,x),"\",17,18)
 ...i $l(aaLow)!$l(aaHigh) s $p(xx,"\",3)=aaLow,$p(xx,"\",4)=aaHigh
 ...i pregn["Y" s xx=$p(xf(xf,x),"\",9,16)_"\"_$p(xf(xf,x),"\",19,20) d
 ....s exist="" f j=1:1:10 i $l($p(xx,"\",j)) s exist=1 q
 ....i 'exist d
 .....s xx=$p(xf(xf,x),"\",1,8)_"\"_$p(xf(xf,x),"\",17,18)
 .....i $l(aaPLow)!$l(aaPHigh) s $p(xx,"\",3)=aaPLow,$p(xx,"\",4)=aaPHigh
 ...s result=$p(xx,"\",1)_$c(1)_$p(xx,"\",2)_$c(1)_$p(xx,"\",5)_$c(1)_$p(xx,"\",6)_$c(1)_$p(xx,"\",7)_$c(1)_$p(xx,"\",8)_$c(1)_$p(xx,"\",3)_$c(1)_$p(xx,"\",4)_$c(1)_$p(xx,"\",9)_$c(1)_$p(xx,"\",10)
 f j=1:1:$l(result,$c(1)) s x=$p(result,$c(1),j) i $l(x) d
 .i ($e(x)="<")!($e(x)=">") d  q
 ..s $p(result,$c(1),j)=$e(x)_$j($e(x,2,$l(x)),0,$e(format,2,4))
 ..i $e(x,2)="." s $p(result,$c(1),j)=$e(x)_0_$e(x,2,$l(x))
 .s $p(result,$c(1),j)=$j(x,0,$e(format,2,4))
 .i $e($p(result,$c(1),j))="." s $p(result,$c(1),j)=0_$p(result,$c(1),j)
 q result
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(cour)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("CR",%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(12)=$g(^TTAB("CR",%mmmsqld(3)))
 s Confidential=$p(%mmmsqld(12),"\",3)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("CR",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("CR",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Courier for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("CR",%mmmsqld(3)))
 e  g %0ACdun
 s %mmmsqld(17)=$g(^TTAB("CR",%mmmsqld(3)))
 s Confidential=$p(%mmmsqld(17),"\",3)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(doc)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("DR",%mmmsqld(5)))
 e  g %0CBdun
 s %mmmsqld(16)=$g(^TTAB("DR",%mmmsqld(5),0))
 s %mmmsqld(1)=$p(%mmmsqld(16),"\",4)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTAB("DR",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("DR",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Doctor for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("DR",%mmmsqld(5)))
 e  g %0CCdun
 s %mmmsqld(21)=$g(^TTAB("DR",%mmmsqld(5),0))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",4)
%0CBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("PF",%mmmsqld(2)))
 e  s %mmmsqld(2)="",RepType="" g %0CCp4
 s %mmmsqld(26)=$g(^TTAB("PF",%mmmsqld(2)))
 s RepType=$p(%mmmsqld(26),"\",2)
%0CCp4 
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^TTAB("PF",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("PF",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintFormat for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("PF",%mmmsqld(2)))
 e  s %mmmsqld(2)="",RepType="" g %0CDp1
 s %mmmsqld(31)=$g(^TTAB("PF",%mmmsqld(2)))
 s RepType=$p(%mmmsqld(31),"\",2)
%0CDp1 
%0CCuncommitted ;
 s SQLCODE=0 g %0Cc
%0CDdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(dh2)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("RH",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(16)=$g(^TTAB("RH",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(16),"\",10)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTAB("RH",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("RH",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Hospital for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("RH",%mmmsqld(5)))
 e  g %0ECdun
 s %mmmsqld(21)=$g(^TTAB("RH",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",10)
%0EBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("PF",%mmmsqld(2)))
 e  s %mmmsqld(2)="",RepType="" g %0ECp4
 s %mmmsqld(26)=$g(^TTAB("PF",%mmmsqld(2)))
 s RepType=$p(%mmmsqld(26),"\",2)
%0ECp4 
 g:$zu(115,2)=0 %0ECuncommitted i $zu(115,2)=1 l +^TTAB("PF",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("PF",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintFormat for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("PF",%mmmsqld(2)))
 e  s %mmmsqld(2)="",RepType="" g %0EDp1
 s %mmmsqld(31)=$g(^TTAB("PF",%mmmsqld(2)))
 s RepType=$p(%mmmsqld(31),"\",2)
%0EDp1 
%0ECuncommitted ;
 s SQLCODE=0 g %0Ec
%0EDdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(10)=0,%mmmsqld(11)="",%mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(8)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(7)=%mmmsqld(8)
 i %mmmsqld(7)'="",$d(^TEPI(%mmmsqld(7)))
 e  g %0GBdun
 s %mmmsqld(16)=$g(^TEPI(%mmmsqld(7)))
 s %mmmsqld(1)=$p(%mmmsqld(16),"\",24) s dod=$p(%mmmsqld(16),"\",64)
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(7),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TEPI($p(%mmmsqld(7),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(7) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(7)'="",$d(^TEPI(%mmmsqld(7)))
 e  g %0GCdun
 s %mmmsqld(19)=$g(^TEPI(%mmmsqld(7)))
 s %mmmsqld(1)=$p(%mmmsqld(19),"\",24) s dod=$p(%mmmsqld(19),"\",64)
%0GBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("VA",%mmmsqld(2)))
 e  s %mmmsqld(2)="",xx="" g %0GCp4
 s %mmmsqld(24)=$g(^TTAB("VA",%mmmsqld(2)))
 s xx=$p(%mmmsqld(24),"\",3)
%0GCp4 
 g:$zu(115,2)=0 %0GCuncommitted i $zu(115,2)=1 l +^TTAB("VA",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("VA",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_VisitAction for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("VA",%mmmsqld(2)))
 e  s %mmmsqld(2)="",xx="" g %0GDp1
 s %mmmsqld(29)=$g(^TTAB("VA",%mmmsqld(2)))
 s xx=$p(%mmmsqld(29),"\",3)
%0GDp1 
%0GCuncommitted ;
 s SQLCODE=0 g %0Gc
%0GDdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0GCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(pathogen)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BUG",%mmmsqld(3)))
 e  g %0IBdun
 s %mmmsqld(12)=$g(^TTAB("BUG",%mmmsqld(3)))
 s group=$p(%mmmsqld(12),"\",7)
 g:$zu(115,2)=0 %0IBuncommitted i $zu(115,2)=1 l +^TTAB("BUG",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BUG",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Bugs for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BUG",%mmmsqld(3)))
 e  g %0ICdun
 s %mmmsqld(17)=$g(^TTAB("BUG",%mmmsqld(3)))
 s group=$p(%mmmsqld(17),"\",7)
%0IBuncommitted ;
 s SQLCODE=0 g %0Ic
%0ICdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ic
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Kerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(pathogen)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("BUG",%mmmsqld(3)))
 e  g %0KBdun
 s %mmmsqld(12)=$g(^TTAB("BUG",%mmmsqld(3)))
 s group=$p(%mmmsqld(12),"\",7)
 g:$zu(115,2)=0 %0KBuncommitted i $zu(115,2)=1 l +^TTAB("BUG",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("BUG",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Bugs for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("BUG",%mmmsqld(3)))
 e  g %0KCdun
 s %mmmsqld(17)=$g(^TTAB("BUG",%mmmsqld(3)))
 s group=$p(%mmmsqld(17),"\",7)
%0KBuncommitted ;
 s SQLCODE=0 g %0Kc
%0KCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0KBdun 
%0KAdun 
%0Kc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Kerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Kc
]]></Routine>
</Export>
