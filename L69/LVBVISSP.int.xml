<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISSP" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISSP ; IG 6/5/98 ; LVB Control data access for VISSP EP_VisitSpecimen
 ;
 ; supported calls:
 ;
 ; $$save^LVBVISSP(par)
 ; $$open^LVBVISSP(par)
 ; $$fetch^LVBVISSP(par)
 ; $$close^LVBVISSP()
 ; $$getall^LVBVISSP(par)
 ;
  ;---&sql(DECLARE VISSP CURSOR FOR SELECT * FROM EP_VisitSpecimen
   ;---         WHERE VISSP_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par) s par=$g(par)
  ;---&SQL(OPEN VISSP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISSP0o
 q 0
 ;
fetch(par) k PLIST s par=$g(par)
  ;---&SQL(FETCH VISSP INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE VISSP)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISSP0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitSpecimen WHERE VISSP_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
save(par) k ^TMP($zn,$j) s par=$g(par) i $l(par) d
 .f j=1:1:PLIST s sp=$p(PLIST(j),$c(1),2) i $l(sp) s ^TMP($zn,$j,sp)=$p(PLIST(j),$c(1),3)
 .s sp="" f  s sp=$o(^TEPI(par,4,sp)) q:sp=""  s RowID=par_"||"_sp d
 .. ;---i '$d(^TMP($zn,$j,sp)) &sql(DELETE FROM EP_VisitSpecimen WHERE VISSP_RowID = :RowID)
  .. ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 ..i '$d(^TMP($zn,$j,sp)) Do %0Ho
 ..i $d(^TMP($zn,$j,sp)) d
 ...k PLIST s PLIST(0)=par,PLIST(2)=sp,PLIST(3)=^TMP($zn,$j,sp) s PLIST=$o(PLIST(""),-1)
 ...  ;---&sql(UPDATE EP_VisitSpecimen VALUES :PLIST() WHERE VISSP_RowID=:RowID)
  ...  ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 ... Do %0Jo
 .s sp="" f  s sp=$o(^TMP($zn,$j,sp)) q:sp=""  s RowID=par_"||"_sp d
 ..i '$d(^TEPI(par,4,sp)) d
 ...k PLIST s PLIST(0)=par,PLIST(2)=sp,PLIST(3)=^TMP($zn,$j,sp) s PLIST=$o(PLIST(""),-1)
 ...  ;---&sql(INSERT INTO EP_VisitSpecimen VALUES :PLIST())
  ...  ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 ... Do %0Lo
 k %d m %d=^TEPI(par,4)
 d SetAll^LVBCOM50(par,49_"S",.%d)
 q 0
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSPE(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 ;
 Q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par)
 F cnt=1:1 Q:$$fetch(par)  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_$P(PLIST(2),$c(1),2)
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 I $$close()
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%VISSP0o s $zt="%VISSP0E" s SQLCODE=$s($g(%VISSP0c):-101,1:0) q:SQLCODE'=0  s %VISSP0d(9)=0 s %VISSP0d(10)=0,%VISSP0d(11)=""
 s %VISSP0d(6)=$g(par)
 s %VISSP0c=1 q
%VISSP0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISSP0c,%VISSP0d,%VISSP0E,%VISSP0l,%VISSP0n,%VISSP0R,%VISSP0Z q
%0Afirst 
 ; asl MOD# 2
 s %VISSP0d(1)=%VISSP0d(6)
 i %VISSP0d(1)="" g %0ABdun
 s %VISSP0d(3)=""
%0ABk1 s %VISSP0d(3)=$o(^TEPI(%VISSP0d(1),4,%VISSP0d(3)))
 i %VISSP0d(3)="" g %0ABdun
 s %VISSP0d(17)=$g(^TEPI(%VISSP0d(1),4,%VISSP0d(3)))
 s %VISSP0d(4)=$p(%VISSP0d(17),"\",1) s %VISSP0d(5)=$p(%VISSP0d(17),"\",2)
 s %VISSP0d(2)=(%VISSP0d(1))_"||"_(%VISSP0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISSP0d(2),"||",1),4,$p(%VISSP0d(2),"||",2))#"S":$zu(115,4) i $t { s %VISSP0d(10)=1,%VISSP0d(11)=$name(^TEPI($p(%VISSP0d(2),"||",1),4,$p(%VISSP0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitSpecimen for RowID value: "_%VISSP0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %VISSP0d(8)=$p(%VISSP0d(2),"||"),%VISSP0d(3)=$p(%VISSP0d(2),"||",2)
 i %VISSP0d(8)'="",%VISSP0d(3)'="",$d(^TEPI(%VISSP0d(8),4,%VISSP0d(3)))
 e  g %0ACdun
 s %VISSP0d(23)=$g(^TEPI(%VISSP0d(8),4,%VISSP0d(3)))
 s %VISSP0d(4)=$p(%VISSP0d(23),"\",1) s %VISSP0d(5)=$p(%VISSP0d(23),"\",2)
 s %VISSP0d(1)=$p(%VISSP0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISSP0d(9)=%VISSP0d(9)+1,%ROWCOUNT=%VISSP0d(9),%ROWID=%VISSP0d(2),%VISSP0c=10 q
%VISSP0f i '$g(%VISSP0c) { s SQLCODE=-102 q  } i %VISSP0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISSP0d(9))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISSP0d(9),%VISSP0c=100 q  } g %0Afirst:%VISSP0c=1
%0ACdun i $zu(115,2)=1,$g(%VISSP0d(10))=1 { l -@%VISSP0d(11) s %VISSP0d(10)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%VISSP0d(9),SQLCODE=100,%VISSP0c=100 q
%VISSP0c i '$g(%VISSP0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISSP0d(9)),1:0)
 i $zu(115,2)=1,$g(%VISSP0d(10))=1 { l -@%VISSP0d(11) } k %VISSP0c,%VISSP0d,%VISSP0E,%VISSP0l,%VISSP0n,%VISSP0R,%VISSP0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISSP0c=100 q
%0Do d %VISSP0f q:SQLCODE'=0
 s PLIST(0)=%VISSP0d(1),PLIST(1)=%VISSP0d(2),PLIST(2)=%VISSP0d(3),PLIST(3)=%VISSP0d(4),PLIST(4)=%VISSP0d(5)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(7)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(9)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(9),4,PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(17)=$g(^TEPI(%mmmsqld(9),4,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(17),"\",1) s PLIST(4)=$p(%mmmsqld(17),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),4,$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TEPI($p(PLIST(1),"||",1),4,$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitSpecimen for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(9)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(9),4,PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(23)=$g(^TEPI(%mmmsqld(9),4,PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),4,%mmmsqld(4)))
 e  g %0HBdun
 s %mmmsqld(12)=$$%getlock^User.EPVisitSpecimen.T1(%mmmsqld(1)) i '%mmmsqld(12) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TEPI(%mmmsqld(3),4,%mmmsqld(4)))
 e  g %0HCdun
 d %delete^User.EPVisitSpecimen.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitSpecimen.T1(%mmmsqld(1)) g %0Hc
%0HCdun 
 d:%mmmsqld(12)=1 %ReleaseLock^User.EPVisitSpecimen.T1(%mmmsqld(1)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(12))=1 %ReleaseLock^User.EPVisitSpecimen.T1(%mmmsqld(1)) g %0Hc
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),4,%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(13)=$$%getlock^User.EPVisitSpecimen.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TEPI(%mmmsqld(4),4,%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitSpecimen.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitSpecimen.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.EPVisitSpecimen.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.EPVisitSpecimen.T1(%mmmsqld(2)) g %0Jc
%0Lo n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitSpecimen.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Lo
]]></Routine>
</Export>
