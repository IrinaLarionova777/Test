<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBPITOUT09" type="INT" languagemode="0"><![CDATA[
LVBPITOUT09 ; ML 18/12/2000 ; CREATE PIT FORMAT FILE - Quinn Pathology  ; Compiled August 22, 2001 17:44:02 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; create^LVBPITOUT09
 ;
create n
 i $$select^MVBCFSM(1) q 100
 s labname=PLIST(9),table=46
 l +^TEDI("OUT","PIT","DR") m ^TMP($zn,$j,"DR")=^TEDI("OUT","PIT","DR") k ^TEDI("OUT","PIT","DR") l -^TEDI("OUT","PIT","DR")
 s client="" f  s client=$o(^TMP($zn,$j,"DR",client)) q:client=""  d
 .s fileno=$g(^TMP($zn,$j,"DR",client)),^TEDI("OUT","PIT","DR",client)=fileno
 .i $d(^TMP($zn,$j,"DR",client))<10 k ^TMP($zn,$j,"DR",client) q
 .s fileno=$g(fileno)+1,^TEDI("OUT","PIT","DR",client)=fileno
 .d SET("001 "_$g(labname))
 .d SET("002 ")
 .s underline="",$p(underline,"-",80)=""
 .s time=$p($h,",",2)\60,time=$e(time\60+100,2,3)_":"_$e(time#60+100,2,3)
 .s string=$$Line(,"003 Report Run Number : "_fileno),string=$$Line(28,"Created : "_$$extdate2^SSUTIL4($h),string),string=$$Line(54,"at "_time,string)
 .d SET(string) s string=""
 .d SET("004 Surgery : "_client)
 .d SET("009 "_underline)
 .s doc="" f  s doc=$o(^TMP($zn,$j,"DR",client,doc)) q:doc=""  d
 .. d %0Ao
 ..f j=3,4,18,26 s PLIST(j)=$p(PLIST(j),$c(1))
 ..s docstr=PLIST(26)_" "_$p(PLIST(4)," ")_" "_PLIST(3)
 ..f i=1:1 q:",. "'[$e(docstr)  s docstr=$e(docstr,2,99)
 ..s string=$$Line(,"010 "_docstr),string=$$Line(39,doc,string),string=$$Line(49,PLIST(18),string)
 ..d SET(string) s string=""
 .d SET("019 "_underline)
 .s string=$$Line(,"020 Your ref."),string=$$Line(16,"Patient Name",string),string=$$Line(47,"Lab Ref.",string),string=$$Line(63,"Test",string)
 .d SET(string) s string=""
 .s doc="" f  s doc=$o(^TMP($zn,$j,"DR",client,doc)) q:doc=""  d
 ..s epis="" f  s epis=$o(^TMP($zn,$j,"DR",client,doc,epis)) q:epis=""  d
 ... d %0Bo
 ...s string=$$Line(,"021 "_epis),string=$$Line(16,$p(PLIST(3),$c(1))_","_$p(PLIST(4),$c(1)),string),string=$$Line(47,epis,string),string=$$Line(63,PLIST(68),string)
 ...d SET(string) s string=""
 .d SET("029 "_underline)
 .s doc="" f  s doc=$o(^TMP($zn,$j,"DR",client,doc)) q:doc=""  d
 ..k DOC i '$$select^LVBCTDR(doc,"Y") m DOC=PLIST
 ..s epis="" f  s epis=$o(^TMP($zn,$j,"DR",client,doc,epis)) q:epis=""  d
 ...k VISIT i '$$select^LVBEPVIS(epis,"Y") m VISIT=PLIST
 ...s vtsRID="" f  s vtsRID=$o(^TMP($zn,$j,"DR",client,doc,epis,table,vtsRID)) q:vtsRID=""  d
 ....d SingleTest(vtsRID) s test=$p(vtsRID,"||",2)
 ....s ^TMP($zn,$j,"OUT-DATA","PIT",client,fileno,"EPIS",epis,test)=""
 .i '$d(^TMP($zn,$j)) d SET("      No Episodes to be Transmitted") q
 .d SET("399 "_underline)
 .d SET("999 ")
 .l +^TEDI("OUT-DATA","PIT",client,fileno)
 .m ^TEDI("OUT-DATA","PIT",client,fileno)=^TMP($zn,$j,"OUT-DATA","PIT",client,fileno)
 .l -^TEDI("OUT-DATA","PIT",client,fileno)
 .k ^TMP($zn,$j,"OUT-DATA","PIT",client,fileno)
 k ^TMP($zn,$j)
 q
 ; compile results for single test
SingleTest(vtsRID) n (vtsRID,VISIT,DOC,line,client,fileno,underline) s vtsRID=$g(vtsRID),epis=$p(vtsRID,"||",1),test=$p(vtsRID,"||",2)
 s line=$g(line),client=$g(client),fileno=$g(fileno),underline=$g(underline)
 s rescol=$e("Results Collected : "_$$extdate2^SSUTIL4(VISIT(12))_"  "_$e(VISIT(13)\3600+100,2,3)_":"_$e(VISIT(13)\60#60+100,2,3)_$j("",40),1,70)
 ; compile patient header
 s string=$$Line(,"100 Start Patient  :"),string=$$Line(26,VISIT(3)_","_VISIT(4),string)
 d SET(string) s string=""
 s string=$$Line(,"101 ")
 s string=$$Line(26,$s($l(VISIT(32)):VISIT(32),1:"")_$s($l(VISIT(33)):" ",1:",")_$s($l(VISIT(33)):VISIT(33),1:"")_$s($l(VISIT(34)):" ",1:",")_$s($l(VISIT(34)):VISIT(34),1:"")_$s($l(VISIT(35)):",",1:"")_$s($l(VISIT(35)):VISIT(35),1:"")_$s($l(VISIT(36)):" "_VISIT(36),1:""),string)
 d SET(string) s string=""
 s string=$$Line(,"104 "),string=$$Line(26,"Birthdate:",string),string=$$Line(37,$$extdate2^SSUTIL4(VISIT(6)),string),string=$$Line(51,"Age:",string),string=$$Line(56,"Y"_VISIT(26),string),string=$$Line(63,"Sex:",string),string=$$Line(68,VISIT(5),string)
 d SET(string) s string=""
 s string=$$Line(,"105 "),string=$$Line(26,"Telephone:",string),string=$$Line(37,$s($l(VISIT(43)):VISIT(43)_" (H) ",1:"")_$s($l(VISIT(44)):VISIT(44)_" (W)",1:""),string)
 d SET(string) s string=""
 s string=$$Line(,"110 Your Reference :"),string=$$Line(26,VISIT(16),string)
 d SET(string) s string=""
 s string=$$Line(,"111 Lab Reference  :"),string=$$Line(26,epis,string)
 d SET(string) s string=""
 s string=$$Line(,"112 Medicare Number:"),string=$$Line(26,VISIT(8),string)
 d SET(string) s string=""
 s string=$$Line(,"115 Phone Enquiries:"),string=$$Line(26,"",string)
 d SET(string) s string=""
 d SET("119 ")
 d %0Co
 f j=3,4,18,26 s PLIST(j)=$p($g(PLIST(j)),$c(1))
 s x=xDOC(26)_" "_$p(xDOC(4)," ")_" "_xDOC(3) f j=1:1 q:",. "'[$e(x)  s x=$e(x,2,99)
 s string=$$Line(,"121 Referred by    :"),string=$$Line(26,x,string),string=$$Line(60,xDOC(18),string)
 d SET(string) s string=""
 s x=DOC(26)_" "_$p(DOC(4)," ")_" "_DOC(3) f j=1:1 q:",. "'[$e(x)  s x=$e(x,2,99)
 s string=$$Line(,"123 Addressee      :"),string=$$Line(26,x,string),string=$$Line(60,DOC(18),string)
 d SET(string) s string=""
 s ward="" d %0Do
 s string=$$Line(,"130 Ward           :"),string=$$Line(26,ward,string)
 d SET(string) s string=""
 d SET("200 Start of Result:")
 i '$$getall^LVBVISSP(epis) f i=1:1:PLIST s spec=$p(PLIST(i),$c(2),3) d
 .s string=$$Line(,"201 Specimen       :"),string=$$Line(26,spec,string)
 .d SET(string) s string=""
 s string=$$Line(,"203 Requested      :"),string=$$Line(26,$$extdate2^SSUTIL4(VISIT(14)),string)
 d SET(string) s string=""
 s string=$$Line(,"204 Collected      :"),string=$$Line(26,$$extdate2^SSUTIL4(VISIT(12)),string),string=$$Line(38,$e(VISIT(13)\3600+100,2,3)_":"_$e(VISIT(13)\60#60+100,2,3),string)
 d SET(string) s string=""
 s tsname="" d %0Eo
 s string=$$Line(,"205 Name of Test   :"),string=$$Line(26,tsname,string)
 d SET(string) s string=""
 d SET("209 "_underline)
 s normal=$$Norm(vtsRID)
 s string=$$Line(,"210 Normal Result  :"),string=$$Line(26,normal,string)
 s AllTestSyn="",TSComplete="Y" i '$$fetchall^LVBVISTS(epis) m VISTS=PLIST k PLIST d
 .f i=1:1:VISTS s AllTestSyn=AllTestSyn_$s($l(AllTestSyn):",",1:"")_$p(VISTS(i),$c(1),3)
 .f i=1:1:VISTS i $p($p(VISTS(i),$c(1),6),$c(28),2)="" s TSComplete="N"
 s string=$$Line(,"211 Requested Tests:"),string=$$Line(26,AllTestSyn,string)
 d SET(string) s string=""
 s string=$$Line(,"212 RequestComplete:"),string=$$Line(26,TSComplete,string)
 d SET(string) s string=""
 i '$$SINGLE^PRTDR00(vtsRID,"P") d
 . ; translate ~BOLD and ~NORMAL to pit codes
 .s x1="" f  s x1=$o(PLIST(x1)) q:x1=""  d
 ..s PLIST(x1)=$s($e(PLIST(x1),1,4)="~BOL":"~FG04~",$e(PLIST(x1),1,4)="~NOR":"~FG99~",1:PLIST(x1))
 .d adjust(.PLIST)
 .f j=1:1:PLIST d SET("301 "_PLIST(j))
 d SET("309 ")
 d SET("390 End of Report")
 q
 ; adjust into one line
adjust(ARRAY) k array s x2=1,boldon=0
 s x1="" f  s x1=$o(ARRAY(x1)) q:x1=""  d
 .i ARRAY(x1)=$c(13) q
 .i ARRAY(x1)="!" s x2=x2+1 q
 . ; check for 'pit' bold
 .i $e(ARRAY(x1))="~" d  q
 ..i $e(ARRAY(x1),1,5)="~FG04" s boldon=1 q
 ..i $e(ARRAY(x1),1,5)="~FG99" s boldon=0 d  q
 ...s array(x2)=array(x2)_"~FG99~"
 .i $e(ARRAY(x1))="?" d  q
 .. ; if 'pit' bold exists in line add 12 chars for each one to keep correct positioning
 ..s add=0,bold=1 i $g(array(x2))'="" s bold=$l(array(x2),"~FG99~")-1,add=12*bold
 ..s tab=+$e(ARRAY(x1),2,4),tab=tab+add
 ..i $e(ARRAY(x1),5,$l(ARRAY(x1)))="" q
 ..s array(x2)=$e($g(array(x2))_$j("",tab),1,tab)_$s(boldon:"~FG04~",1:"")_$e(ARRAY(x1),5,$l(ARRAY(x1)))
 k ARRAY m ARRAY=array s ARRAY=$o(ARRAY(""),-1)
 f j=1:1:ARRAY i '$d(ARRAY(j)) s ARRAY(j)=""
 q
Norm(vtsRID) ; check if all results normal
 s norm="Y" k FORMAT i '$$getit^LVBCTTSF(,vtsRID,"Y") m FORMAT=PLIST
 i '$$results^LVBVISTS(vtsRID) d
 .k RESULT f j=1:1:PLIST s x1=$p(PLIST(j),$c(1),2),x2=$p(PLIST(j),$c(1),3),x3=$p(PLIST(j),$c(1),4) i $l(x1) s RESULT(x1)=x2_$c(1)_$p(PLIST(j),$c(1),5)_$c(1)_x3
 s cnt="" f  s cnt=$o(FORMAT(cnt)) q:cnt=""  d
 .s tc=$p(FORMAT(cnt),$c(2),10) q:tc=""  q:'$d(RESULT(tc))
 . ; check for abnormal comments
 .i $p(FORMAT(cnt),$c(2),18)="S"!($p(FORMAT(cnt),$c(2),18)="X") d  q
 ..s result=$p(RESULT(tc),$c(1),3) f j=1:1:$l(result,"|") s x1=$p(result,"|",j) d
 ...f delim="{","[" f i=2:1:$l(x1,delim) s x2=$p(x1,delim,i),x2=$tr($p(x2,$s(delim="{":"}",1:"]"),1),"""","'") i x2'="",$d(^TTAB("TC",tc,2,x2)),$p(^TTAB("TC",tc,2,x2),"\",1)="A" s norm="N"
 .k result s result=$p(RESULT(tc),$c(1),1),flag=$p(RESULT(tc),$c(1),2) i $l(result) d
 ..i flag="L"!(flag="H") s norm="N"
 q norm
 ; compile transmission global
SET(line) s line=$g(line)
 s seq=$o(^TMP($zn,$j,"OUT-DATA","PIT",client,fileno,"SEQ",""),-1)+1
 s ^TMP($zn,$j,"OUT-DATA","PIT",client,fileno,"SEQ",seq)=line
 q
 ; compile single line
Line(col,line,current) n (col,line,current) s col=$g(col),line=$g(line),current=$g(current)
 s line=$e(current_$j("",col),1,col)_line_$e(current,col+$l(line)+1,$l(current))
 q line
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Aerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(7)=$P(doc,$C(1))
 s:%mmmsqld(7)="" %mmmsqld(7)=$E(doc,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(9)=$p($g(%mmmsqld(7)),"||",1,1)
 s %mmmsqld(6)=$g(%mmmsqld(7))
 i %mmmsqld(9)'="",$d(^TTAB("DR",%mmmsqld(9)))
 e  g %0ABdun
 s %mmmsqln=$g(^TTAB("DR",%mmmsqld(9),0))
 s PLIST(18)=$p(%mmmsqln,"\",3) s PLIST(26)=$p(%mmmsqln,"\",11)
 s %mmmsqln=$g(^TTAB("DR",%mmmsqld(9)))
 s PLIST(3)=$p(%mmmsqln,"\",1) s PLIST(4)=$p(%mmmsqln,"\",2)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ac
%0ABdun 
%0AAdun 
%0Ac q
%0Aerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0BBr1 s PLIST(68)=$$CT068^at42($g(%mmmsqld(5))) q
%0Bo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Berr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(6)=$P(epis,$C(1))
 s:%mmmsqld(6)="" %mmmsqld(6)=$E(epis,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(8)=$p($g(%mmmsqld(6)),"||",1,1)
 s %mmmsqld(5)=$g(%mmmsqld(6))
 i %mmmsqld(8)'="",$d(^TEPI(%mmmsqld(8)))
 e  g %0BBdun
 s %mmmsqln=$g(^TEPI(%mmmsqld(8)))
 s PLIST(4)=$p(%mmmsqln,"\",2) s PLIST(3)=$p(%mmmsqln,"\",1)
 d %0BBr1
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Bc
%0BBdun 
%0BAdun 
%0Bc q
%0Berr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0BAdun
%0Co n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Cerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(7)=$P(VISIT(15),$C(1))
 s:%mmmsqld(7)="" %mmmsqld(7)=$E(VISIT(15),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(9)=$p($g(%mmmsqld(7)),"||",1,1)
 s %mmmsqld(6)=$g(%mmmsqld(7))
 i %mmmsqld(9)'="",$d(^TTAB("DR",%mmmsqld(9)))
 e  g %0CBdun
 s %mmmsqln=$g(^TTAB("DR",%mmmsqld(9),0))
 s xDOC(18)=$p(%mmmsqln,"\",3) s xDOC(26)=$p(%mmmsqln,"\",11)
 s %mmmsqln=$g(^TTAB("DR",%mmmsqld(9)))
 s xDOC(3)=$p(%mmmsqln,"\",1) s xDOC(4)=$p(%mmmsqln,"\",2)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Cc
%0CBdun 
%0CAdun 
%0Cc q
%0Cerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0CAdun
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(VISIT(22),$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$E(VISIT(22),2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(6)=$p($g(%mmmsqld(4)),"||",1,1)
 s %mmmsqld(3)=$g(%mmmsqld(4))
 i %mmmsqld(6)'="",$d(^TTAB("RH",%mmmsqld(6)))
 e  g %0DBdun
 s %mmmsqln=$g(^TTAB("RH",%mmmsqld(6)))
 s ward=$p(%mmmsqln,"\",1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(4)=$P(test,$C(1))
 s:%mmmsqld(4)="" %mmmsqld(4)=$E(test,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(6)=$p($g(%mmmsqld(4)),"||",1,1)
 s %mmmsqld(3)=$g(%mmmsqld(4))
 i %mmmsqld(6)'="",$d(^TTAB("TS",%mmmsqld(6)))
 e  g %0EBdun
 s %mmmsqln=$g(^TTAB("TS",%mmmsqld(6)))
 s tsname=$p(%mmmsqln,"\",1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
]]></Routine>
</Export>
