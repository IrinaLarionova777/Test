<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTQCR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTQCR ; IG 29/4/98 ; MVB Control code access for CT_QCRules
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTQCR(ROWID,skip)
 ; $$open^LVBCTQCR(type,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTQCR(type,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTQCR(type,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTQCR(type,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTQCR()
 ; $$insert^LVBCTQCR()
 ; $$update^LVBCTQCR(ROWID)
 ; $$delete^LVBCTQCR(ROWID,Comments)
 ; $$getall^LVBCTQCR(type)
 ;
  ;---&SQL(DECLARE CTQCR CURSOR FOR SELECT * FROM CT_QCRules
   ;---         WHERE ((:type [ %INTERNAL(CTQCR_DefaultSettings)) OR (:type IS NULL))
   ;---         ORDER BY CTQCR_OrderNumber)
   ;--- ** SQL PUBLIC Variables: SQLCODE, type
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_QCRules VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE CT_QCRules VALUES :PLIST() WHERE CTQCR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_QCRules WHERE CTQCR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ; Open the cursor
open(type,skip,p2,p3,p4,p5,p6,p7,p8,p9) s type=$g(type),skip=$g(skip)
  ;---&SQL(OPEN CTQCR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTQCR0o
 Q 0
 ;
 ; Fetch the data
fetch(type,skip,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s type=$g(type),skip=$g(skip)
  ;---&SQL(FETCH CTQCR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(type,skip,p2,p3,p4,p5,p6,p7,p8,p9) s type=$g(type),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(type,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(type,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (type,skip,PLIST) s type=$g(type),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(type,skip)
 f cnt=1:1 Q:$$fetch(type,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTQCR) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTQCR0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_QCRules WHERE CTQCR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 Q
 ;
getall(type) n (type,PLIST) k ^TMP($zn,$j) s type=$g(type)
 i $$open(type,"Y")
 f cnt=1:1 q:$$fetch(type,"Y")  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=$g(PLIST(j))
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 q
%CTQCR0o s $zt="%CTQCR0E" s SQLCODE=$s($g(%CTQCR0c):-101,1:0) q:SQLCODE'=0  s %CTQCR0d(10)=0 s %CTQCR0d(11)=0,%CTQCR0d(12)=""
 s %CTQCR0d(6)=$g(type),%CTQCR0d(8)=$g(type)
 s %CTQCR0t(1)=$i(^||%sql.temp)
 s %CTQCR0c=1 q
%CTQCR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTQCR0c,%CTQCR0d,%CTQCR0E,%CTQCR0l,%CTQCR0n,%CTQCR0R,%CTQCR0s,%CTQCR0t,%CTQCR0Z q
%0Afirst 
 k ^||%sql.temp(%CTQCR0t(1),0) s ^||%sql.temp(%CTQCR0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTQCR0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTQCR0t(1),0))
 s %CTQCR0s(3)=""
%0ACk1 s %CTQCR0s(3)=$o(^||%sql.temp(%CTQCR0t(1),0,%CTQCR0s(3)))
 i %CTQCR0s(3)="" g %0ACdun
 s %CTQCR0d(3)=$s(%CTQCR0s(3)=-1E14:"",1:%CTQCR0s(3))
 s %CTQCR0s(1)=""
%0ACk2 s %CTQCR0s(1)=$o(^||%sql.temp(%CTQCR0t(1),0,%CTQCR0s(3),%CTQCR0s(1)))
 i %CTQCR0s(1)="" g %0ACk1
 s %CTQCR0d(1)=$s(%CTQCR0s(1)=-1E14:"",1:%CTQCR0s(1))
 s %CTQCR0d(20)=$g(^||%sql.temp(%CTQCR0t(1),0,%CTQCR0s(3),%CTQCR0s(1)))
 s %CTQCR0d(2)=$lg(%CTQCR0d(20),3) s %CTQCR0d(4)=$lg(%CTQCR0d(20),2) s %CTQCR0d(5)=$lg(%CTQCR0d(20),1)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("QC-RULE",$p(%CTQCR0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTQCR0d(11)=1,%CTQCR0d(12)=$name(^TTAB("QC-RULE",$p(%CTQCR0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_QCRules for RowID value: "_%CTQCR0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTQCR0d(1)'="",$d(^TTAB("QC-RULE",%CTQCR0d(1)))
 e  g %0ADdun
 s %CTQCR0d(25)=$g(^TTAB("QC-RULE",%CTQCR0d(1)))
 s %CTQCR0d(4)=$p(%CTQCR0d(25),"\",3)
 g:'(((%CTQCR0d(4)'="")&&((%CTQCR0d(6)'="")&&(%CTQCR0d(6)[%CTQCR0d(4))))||(%CTQCR0d(8)="")) %0ADdun
 s %CTQCR0d(2)=$p(%CTQCR0d(25),"\",1) s %CTQCR0d(3)=$p(%CTQCR0d(25),"\",2) s %CTQCR0d(5)=$p(%CTQCR0d(25),"\",4)
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTQCR0d(10)=%CTQCR0d(10)+1,%ROWCOUNT=%CTQCR0d(10),%ROWID=%CTQCR0d(1),%CTQCR0c=10 q
%CTQCR0f i '$g(%CTQCR0c) { s SQLCODE=-102 q  } i %CTQCR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTQCR0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTQCR0d(10),%CTQCR0c=100 q  } g %0Afirst:%CTQCR0c=1
%0ADdun i $zu(115,2)=1,$g(%CTQCR0d(11))=1 { l -@%CTQCR0d(12) s %CTQCR0d(11)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTQCR0d(10),SQLCODE=100,%CTQCR0c=100 q
%CTQCR0c i '$g(%CTQCR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTQCR0d(10)),1:0) f %CTQCR0d(13)=1 { i $sortend(^||%sql.temp(%CTQCR0t(%CTQCR0d(13)),0),0) } k ^||%sql.temp(%CTQCR0t(1))
 i $zu(115,2)=1,$g(%CTQCR0d(11))=1 { l -@%CTQCR0d(12) } k %CTQCR0c,%CTQCR0d,%CTQCR0E,%CTQCR0l,%CTQCR0n,%CTQCR0R,%CTQCR0s,%CTQCR0t,%CTQCR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTQCR0c=100
 f %CTQCR0d(13)=1 i $sortend(^||%sql.temp(%CTQCR0t(%CTQCR0d(13)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTQCR0d(1)=""
%0ABk1 s %CTQCR0d(1)=$o(^TTAB("QC-RULE",%CTQCR0d(1)))
 i %CTQCR0d(1)="" g %0ABdun
 s %CTQCR0d(18)=$g(^TTAB("QC-RULE",%CTQCR0d(1)))
 s %CTQCR0d(4)=$p(%CTQCR0d(18),"\",3)
 g:'(((%CTQCR0d(4)'="")&&((%CTQCR0d(6)'="")&&(%CTQCR0d(6)[%CTQCR0d(4))))||(%CTQCR0d(8)="")) %0ABk1
 s %CTQCR0d(2)=$p(%CTQCR0d(18),"\",1) s %CTQCR0d(3)=$p(%CTQCR0d(18),"\",2) s %CTQCR0d(5)=$p(%CTQCR0d(18),"\",4)
 s %CTQCR0s(3)=$s(%CTQCR0d(3)'="":%CTQCR0d(3),1:-1E14),%CTQCR0s(1)=$s(%CTQCR0d(1)'="":%CTQCR0d(1),1:-1E14),%CTQCR0d(19)="",$li(%CTQCR0d(19),3)=%CTQCR0d(2),$li(%CTQCR0d(19),2)=%CTQCR0d(4),$li(%CTQCR0d(19),1)=%CTQCR0d(5),^||%sql.temp(%CTQCR0t(1),0,%CTQCR0s(3),%CTQCR0s(1))=%CTQCR0d(19)
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTQCRules.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("QC-RULE",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTQCRules.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("QC-RULE",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTQCRules.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTQCRules.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTQCRules.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTQCRules.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("QC-RULE",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTQCRules.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("QC-RULE",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTQCRules.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTQCRules.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTQCRules.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTQCRules.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTQCR0f q:SQLCODE'=0
 s PLIST(1)=%CTQCR0d(1),PLIST(2)=%CTQCR0d(1),PLIST(3)=%CTQCR0d(2),PLIST(4)=%CTQCR0d(3),PLIST(5)=%CTQCR0d(4),PLIST(6)=%CTQCR0d(5)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(7)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(7)
 i PLIST(2)'="",$d(^TTAB("QC-RULE",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(15)=$g(^TTAB("QC-RULE",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(15),"\",1) s PLIST(4)=$p(%mmmsqld(15),"\",2) s PLIST(5)=$p(%mmmsqld(15),"\",3) s PLIST(6)=$p(%mmmsqld(15),"\",4)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("QC-RULE",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTAB("QC-RULE",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_QCRules for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("QC-RULE",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(20)=$g(^TTAB("QC-RULE",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",2) s PLIST(5)=$p(%mmmsqld(20),"\",3) s PLIST(6)=$p(%mmmsqld(20),"\",4)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
