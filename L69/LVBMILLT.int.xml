<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBMILLT" type="INT" languagemode="0" generated="1"><![CDATA[
LVBMILLT ; IG 5/5/98 ; LVB Control data access for MILLT MIF_MachineLoadListPatTS
 ;
 ; supported calls:
 ;
 ; $$insert^LVBMILLT(par)
 ; $$update^LVBMILLT(ROWID)
 ; $$select^LVBMILLT(ROWID)
 ; $$delete^LVBMILLT(ROWID)
 ; $$open^LVBMILLT(par)
 ; $$fetch^LVBMILLT(par)
 ; $$close^LVBMILLT()
 ;
 ;
  ;---&sql(DECLARE MILLT CURSOR FOR SELECT * FROM MIF_MachineLoadListPatTS
   ;---         WHERE MILLT_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par) s par=$g(par)
  ;---&SQL(OPEN MILLT)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MILLT0o
 q 0
 ;
fetch(par) k PLIST s par=$g(par)
  ;---&SQL(FETCH MILLT INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE MILLT)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %MILLT0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM MIF_MachineLoadListPatTS WHERE MILLT_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
 s PLIST(2)=$o(^TMIF($p(PLIST(0),"||"),"LL",$p(PLIST(0),"||",2),"PAT",$p(PLIST(0),"||",3),"TS",""),-1)+1
  ;---&sql(INSERT INTO MIF_MachineLoadListPatTS VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE MIF_MachineLoadListPatTS VALUES :PLIST() WHERE MILLT_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM MIF_MachineLoadListPatTS WHERE MILLT_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
%MILLT0o s $zt="%MILLT0E" s SQLCODE=$s($g(%MILLT0c):-101,1:0) q:SQLCODE'=0  s %MILLT0d(11)=0 s %MILLT0d(12)=0,%MILLT0d(13)=""
 s %MILLT0d(6)=$g(par)
 s %MILLT0c=1 q
%MILLT0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %MILLT0c,%MILLT0d,%MILLT0E,%MILLT0l,%MILLT0n,%MILLT0R,%MILLT0Z q
%0Afirst 
 ; asl MOD# 2
 s %MILLT0d(1)=%MILLT0d(6)
 s %MILLT0d(8)=$p(%MILLT0d(1),"||"),%MILLT0d(9)=$p(%MILLT0d(1),"||",2),%MILLT0d(10)=$p(%MILLT0d(1),"||",3)
 i %MILLT0d(8)="" g %0ABdun
 i %MILLT0d(9)="" g %0ABdun
 i %MILLT0d(10)="" g %0ABdun
 s %MILLT0d(3)=""
%0ABk1 s %MILLT0d(3)=$o(^TMIF(%MILLT0d(8),"LL",%MILLT0d(9),"PAT",%MILLT0d(10),"TS",%MILLT0d(3)))
 i %MILLT0d(3)="" g %0ABdun
 i 1]]%MILLT0d(3) g %0ABk1
 s %MILLT0d(25)=$g(^TMIF(%MILLT0d(8),"LL",%MILLT0d(9),"PAT",%MILLT0d(10),"TS",%MILLT0d(3)))
 s %MILLT0d(4)=$p(%MILLT0d(25),"\",1) s %MILLT0d(5)=$p(%MILLT0d(25),"\",2)
 s %MILLT0d(2)=(%MILLT0d(8))_"||"_(%MILLT0d(9))_"||"_(%MILLT0d(10))_"||"_(%MILLT0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TMIF($p(%MILLT0d(2),"||",1),"LL",$p(%MILLT0d(2),"||",2),"PAT",$p(%MILLT0d(2),"||",3),"TS",$p(%MILLT0d(2),"||",4))#"S":$zu(115,4) i $t { s %MILLT0d(12)=1,%MILLT0d(13)=$name(^TMIF($p(%MILLT0d(2),"||",1),"LL",$p(%MILLT0d(2),"||",2),"PAT",$p(%MILLT0d(2),"||",3),"TS",$p(%MILLT0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineLoadListPatTS for RowID value: "_%MILLT0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %MILLT0d(8)=$p(%MILLT0d(2),"||"),%MILLT0d(9)=$p(%MILLT0d(2),"||",2),%MILLT0d(10)=$p(%MILLT0d(2),"||",3),%MILLT0d(3)=$p(%MILLT0d(2),"||",4)
 i %MILLT0d(8)'="",%MILLT0d(9)'="",%MILLT0d(10)'="",%MILLT0d(3)'="",$d(^TMIF(%MILLT0d(8),"LL",%MILLT0d(9),"PAT",%MILLT0d(10),"TS",%MILLT0d(3)))
 i '$t
 e  i 1]]%MILLT0d(3)
 i  g %0ACdun
 s %MILLT0d(37)=$g(^TMIF(%MILLT0d(8),"LL",%MILLT0d(9),"PAT",%MILLT0d(10),"TS",%MILLT0d(3)))
 s %MILLT0d(4)=$p(%MILLT0d(37),"\",1) s %MILLT0d(5)=$p(%MILLT0d(37),"\",2)
 s %MILLT0d(1)=$p(%MILLT0d(2),"||",1,3)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %MILLT0d(11)=%MILLT0d(11)+1,%ROWCOUNT=%MILLT0d(11),%ROWID=%MILLT0d(2),%MILLT0c=10 q
%MILLT0f i '$g(%MILLT0c) { s SQLCODE=-102 q  } i %MILLT0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%MILLT0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%MILLT0d(11),%MILLT0c=100 q  } g %0Afirst:%MILLT0c=1
%0ACdun i $zu(115,2)=1,$g(%MILLT0d(12))=1 { l -@%MILLT0d(13) s %MILLT0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%MILLT0d(11),SQLCODE=100,%MILLT0c=100 q
%MILLT0c i '$g(%MILLT0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%MILLT0d(11)),1:0)
 i $zu(115,2)=1,$g(%MILLT0d(12))=1 { l -@%MILLT0d(13) } k %MILLT0c,%MILLT0d,%MILLT0E,%MILLT0l,%MILLT0n,%MILLT0R,%MILLT0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %MILLT0c=100 q
%0Do d %MILLT0f q:SQLCODE'=0
 s PLIST(0)=%MILLT0d(1),PLIST(1)=%MILLT0d(2),PLIST(2)=%MILLT0d(3),PLIST(3)=%MILLT0d(4),PLIST(4)=%MILLT0d(5)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(7)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(9),"LL",%mmmsqld(10),"PAT",%mmmsqld(11),"TS",PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0FBdun
 s %mmmsqld(25)=$g(^TMIF(%mmmsqld(9),"LL",%mmmsqld(10),"PAT",%mmmsqld(11),"TS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TMIF($p(PLIST(1),"||",1),"LL",$p(PLIST(1),"||",2),"PAT",$p(PLIST(1),"||",3),"TS",$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TMIF($p(PLIST(1),"||",1),"LL",$p(PLIST(1),"||",2),"PAT",$p(PLIST(1),"||",3),"TS",$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.MIF_MachineLoadListPatTS for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",PLIST(2)'="",$d(^TMIF(%mmmsqld(9),"LL",%mmmsqld(10),"PAT",%mmmsqld(11),"TS",PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0FCdun
 s %mmmsqld(37)=$g(^TMIF(%mmmsqld(9),"LL",%mmmsqld(10),"PAT",%mmmsqld(11),"TS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(37),"\",1) s PLIST(4)=$p(%mmmsqld(37),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.MIFMachineLoadListPatTS.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TMIF(%mmmsqld(4),"LL",%mmmsqld(5),"PAT",%mmmsqld(6),"TS",%mmmsqld(7)))
 i '$t
 e  i 1]]%mmmsqld(7)
 i  g %0JBdun
 s %mmmsqld(21)=$$%getlock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(2)) i '%mmmsqld(21) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TMIF(%mmmsqld(4),"LL",%mmmsqld(5),"PAT",%mmmsqld(6),"TS",%mmmsqld(7)))
 i '$t
 e  i 1]]%mmmsqld(7)
 i  g %0JCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.MIFMachineLoadListPatTS.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(21)=1 %ReleaseLock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(21)=1 %ReleaseLock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(21))=1 %ReleaseLock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TMIF(%mmmsqld(3),"LL",%mmmsqld(4),"PAT",%mmmsqld(5),"TS",%mmmsqld(6)))
 i '$t
 e  i 1]]%mmmsqld(6)
 i  g %0LBdun
 s %mmmsqld(20)=$$%getlock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(1)) i '%mmmsqld(20) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TMIF(%mmmsqld(3),"LL",%mmmsqld(4),"PAT",%mmmsqld(5),"TS",%mmmsqld(6)))
 i '$t
 e  i 1]]%mmmsqld(6)
 i  g %0LCdun
 d %delete^User.MIFMachineLoadListPatTS.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(20)=1 %ReleaseLock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(20)=1 %ReleaseLock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(20))=1 %ReleaseLock^User.MIFMachineLoadListPatTS.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
