<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTAD" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTAD ; IG 29/4/98 ; MVB Control code access for CT_AddressCode
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTAD(ROWID,skip)
 ; $$open^LVBCTAD(name,skip,active,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTAD(name,skip,active,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTAD(name,skip,active,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTAD(name,skip,active,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTAD()
 ; $$insert^LVBCTAD()
 ; $$update^LVBCTAD(ROWID)
 ; $$delete^LVBCTAD(ROWID,Comments)
 ; $$getall^LVBCTAD(active,Continue)
 ; FIX^LVBCTAD
 ;
  ;---&SQL(DECLARE CTAD CURSOR FOR SELECT * FROM CT_AddressCode
   ;---         WHERE ((%ALPHAUP(CTAD_Title) %STARTSWITH %ALPHAUP(:name)) OR (:name IS NULL))
   ;---         AND ((CTAD_ActiveFlag = :active) OR (:active is NULL))
   ;---         ORDER BY CTAD_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, active, name
FIX k ^TTABi("ADC") s a="" f  s a=$o(^TTAB("ADC",a)) q:a=""  d
 .i '$$select(a,"Y") s PLIST(10)="Y",PLIST(11)=99999,err=$$update(a) i err w !,a," ",err
 d ##class(User.CTAddressCode).%BuildIndices()
 q
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_AddressCode VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y")
  ;---&SQL(UPDATE CT_AddressCode VALUES :PLIST() WHERE CTAD_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Fo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_AddressCode WHERE CTAD_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Ho
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(name,skip,active,p3,p4,p5,p6,p7,p8,p9) s name=$g(name),skip=$g(skip),active=$g(active)
  ;---&SQL(OPEN CTAD)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTAD0o
 q 0
 ; fetch the data
fetch(name,skip,active,p3,p4,p5,p6,p7,p8,p9) s name=$g(name),skip=$g(skip),active=$g(active) k PLIST
  ;---&SQL(FETCH CTAD INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ko
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(name,skip,active,p3,p4,p5,p6,p7,p8,p9) s name=$g(name),skip=$g(skip),active=$g(active) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(name,skip,active) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(name,skip,active,p3,p4,p5,p6,p7,p8,p9) n (name,skip,active,PLIST) s name=$g(name),skip=$g(skip),active=$g(active) k ^TMP($zn,$j)
 i $$open(name,skip,active)
 f cnt=1:1 q:$$fetch(name,skip,active)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; Close the cursor
close()  ;---&SQL(CLOSE CTAD)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTAD0c
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s ROWID=$g(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_AddressCode WHERE CTAD_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Mo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 i '$g(PLIST(11)) s PLIST(11)=99999
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
getall(active,Continue) n (active,Continue,PLIST) s active=$g(active),Continue=$g(Continue)
 i Continue="" k ^TMP($zn,$j) d
 .i $$open(,"Y",active)
 .f cnt=1:1 q:$$fetch(,"Y",active)  d
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_$p(PLIST(10),$c(1))
 .i $$close()
 k PLIST
 s (x,cnt,sum)="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^TMP($zn,$j,x)))>15000  s cnt=cnt+1,PLIST(cnt)=^(x),sum=sum+$l(^(x)) k ^(x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
%0ABr1 n cnt s cnt=0
 s %CTAD0d(8)=""
 i $g(%CTAD0d(3))'="" s cnt=cnt+1,$p(%CTAD0d(8),"|",cnt)=$g(%CTAD0d(3))
 i $g(%CTAD0d(4))'="" s cnt=cnt+1,$p(%CTAD0d(8),"|",cnt)=$g(%CTAD0d(4))
 i $g(%CTAD0d(5))'="" s cnt=cnt+1,$p(%CTAD0d(8),"|",cnt)=$g(%CTAD0d(5))
 i $g(%CTAD0d(6))'="" s cnt=cnt+1,$p(%CTAD0d(8),"|",cnt)=$g(%CTAD0d(6))
 i $g(%CTAD0d(7))'="" s cnt=cnt+1,$p(%CTAD0d(8),"|",cnt)=$g(%CTAD0d(7))
 k cnt q
%CTAD0o s $zt="%CTAD0E" s SQLCODE=$s($g(%CTAD0c):-101,1:0) q:SQLCODE'=0  s %CTAD0d(20)=0 s %CTAD0d(21)=0,%CTAD0d(22)=""
 s %CTAD0d(12)=$g(name),%CTAD0d(14)=$g(name),%CTAD0d(15)=$g(active),%CTAD0d(16)=$g(active)
 s %CTAD0t(1)=$i(^||%sql.temp)
 s %CTAD0d(19)=$zu(28,%CTAD0d(15),7)
 s %CTAD0d(13)=$zu(28,%CTAD0d(12),6)
 s %CTAD0c=1 q
%CTAD0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTAD0c,%CTAD0d,%CTAD0E,%CTAD0l,%CTAD0n,%CTAD0R,%CTAD0s,%CTAD0t,%CTAD0Z q
%0Afirst 
 k ^||%sql.temp(%CTAD0t(1),0) s ^||%sql.temp(%CTAD0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTAD0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTAD0t(1),0))
 s %CTAD0s(10)=""
%0ACk1 s %CTAD0s(10)=$o(^||%sql.temp(%CTAD0t(1),0,%CTAD0s(10)))
 i %CTAD0s(10)="" g %0ACdun
 s %CTAD0d(10)=$s(%CTAD0s(10)=-1E14:"",1:%CTAD0s(10))
 s %CTAD0s(1)=""
%0ACk2 s %CTAD0s(1)=$o(^||%sql.temp(%CTAD0t(1),0,%CTAD0s(10),%CTAD0s(1)))
 i %CTAD0s(1)="" g %0ACk1
 s %CTAD0d(1)=$s(%CTAD0s(1)=-1E14:"",1:%CTAD0s(1))
 i %CTAD0d(1)'="",$d(^TTAB("ADC",%CTAD0d(1)))
 e  g %0ACk2
 s %CTAD0d(33)=$g(^TTAB("ADC",%CTAD0d(1)))
 s %CTAD0d(2)=$p(%CTAD0d(33),"\",1) s %CTAD0d(3)=$p(%CTAD0d(33),"\",2) s %CTAD0d(4)=$p(%CTAD0d(33),"\",3) s %CTAD0d(5)=$p(%CTAD0d(33),"\",4) s %CTAD0d(6)=$p(%CTAD0d(33),"\",5) s %CTAD0d(7)=$p(%CTAD0d(33),"\",6) s %CTAD0d(9)=$p(%CTAD0d(33),"\",7)
 d %0ABr1 s %CTAD0d(11)=$zu(28,%CTAD0d(2),6) s %CTAD0d(18)=$zu(28,%CTAD0d(9),7)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("ADC",$p(%CTAD0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTAD0d(21)=1,%CTAD0d(22)=$name(^TTAB("ADC",$p(%CTAD0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_AddressCode for RowID value: "_%CTAD0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTAD0d(1)'="",$d(^TTAB("ADC",%CTAD0d(1)))
 e  g %0ADdun
 s %CTAD0d(38)=$g(^TTAB("ADC",%CTAD0d(1)))
 s %CTAD0d(2)=$p(%CTAD0d(38),"\",1) s %CTAD0d(3)=$p(%CTAD0d(38),"\",2) s %CTAD0d(4)=$p(%CTAD0d(38),"\",3) s %CTAD0d(5)=$p(%CTAD0d(38),"\",4) s %CTAD0d(6)=$p(%CTAD0d(38),"\",5) s %CTAD0d(7)=$p(%CTAD0d(38),"\",6) s %CTAD0d(9)=$p(%CTAD0d(38),"\",7) s %CTAD0d(10)=$p(%CTAD0d(38),"\",8)
 d %0ABr1 s %CTAD0d(11)=$zu(28,%CTAD0d(2),6) s %CTAD0d(18)=$zu(28,%CTAD0d(9),7)
 g:'(((%CTAD0d(11)'="")&&(($c(0)[%CTAD0d(13))||(%CTAD0d(13)=$c(32,0)&&($e(%CTAD0d(11))=$c(32)))||(%CTAD0d(13)=$e(%CTAD0d(11),1,$l(%CTAD0d(13))))))||(%CTAD0d(14)="")) %0ADdun
 g:'(((%CTAD0d(18)'=" ")&&(%CTAD0d(18)=%CTAD0d(19)))||(%CTAD0d(16)="")) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTAD0d(20)=%CTAD0d(20)+1,%ROWCOUNT=%CTAD0d(20),%ROWID=%CTAD0d(1),%CTAD0c=10 q
%CTAD0f i '$g(%CTAD0c) { s SQLCODE=-102 q  } i %CTAD0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTAD0d(20))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTAD0d(20),%CTAD0c=100 q  } g %0Afirst:%CTAD0c=1
%0ADdun i $zu(115,2)=1,$g(%CTAD0d(21))=1 { l -@%CTAD0d(22) s %CTAD0d(21)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTAD0d(20),SQLCODE=100,%CTAD0c=100 q
%CTAD0c i '$g(%CTAD0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTAD0d(20)),1:0) f %CTAD0d(23)=1 { i $sortend(^||%sql.temp(%CTAD0t(%CTAD0d(23)),0),0) } k ^||%sql.temp(%CTAD0t(1))
 i $zu(115,2)=1,$g(%CTAD0d(21))=1 { l -@%CTAD0d(22) } k %CTAD0c,%CTAD0d,%CTAD0E,%CTAD0l,%CTAD0n,%CTAD0R,%CTAD0s,%CTAD0t,%CTAD0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTAD0c=100
 f %CTAD0d(23)=1 i $sortend(^||%sql.temp(%CTAD0t(%CTAD0d(23)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTAD0d(1)=""
%0ABk1 s %CTAD0d(1)=$o(^TTAB("ADC",%CTAD0d(1)))
 i %CTAD0d(1)="" g %0ABdun
 s %CTAD0d(28)=$g(^TTAB("ADC",%CTAD0d(1)))
 s %CTAD0d(2)=$p(%CTAD0d(28),"\",1) s %CTAD0d(3)=$p(%CTAD0d(28),"\",2) s %CTAD0d(4)=$p(%CTAD0d(28),"\",3) s %CTAD0d(5)=$p(%CTAD0d(28),"\",4) s %CTAD0d(6)=$p(%CTAD0d(28),"\",5) s %CTAD0d(7)=$p(%CTAD0d(28),"\",6) s %CTAD0d(9)=$p(%CTAD0d(28),"\",7) s %CTAD0d(10)=$p(%CTAD0d(28),"\",8)
 d %0ABr1 s %CTAD0d(11)=$zu(28,%CTAD0d(2),6) s %CTAD0d(18)=$zu(28,%CTAD0d(9),7)
 g:'(((%CTAD0d(11)'="")&&(($c(0)[%CTAD0d(13))||(%CTAD0d(13)=$c(32,0)&&($e(%CTAD0d(11))=$c(32)))||(%CTAD0d(13)=$e(%CTAD0d(11),1,$l(%CTAD0d(13))))))||(%CTAD0d(14)="")) %0ABk1
 g:'(((%CTAD0d(18)'=" ")&&(%CTAD0d(18)=%CTAD0d(19)))||(%CTAD0d(16)="")) %0ABk1
 s %CTAD0s(10)=$s(%CTAD0d(10)'="":%CTAD0d(10),1:-1E14),%CTAD0s(1)=$s(%CTAD0d(1)'="":%CTAD0d(1),1:-1E14),^||%sql.temp(%CTAD0t(1),0,%CTAD0s(10),%CTAD0s(1))=""
 g %0ABk1
%0ABdun 
 q
%0Do n %i,icol,ir
 f icol=0:1:11 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTAddressCode.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Do
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("ADC",%mmmsqld(2)))
 e  g %0FBdun
 s %mmmsqld(10)=$$%getlock^User.CTAddressCode.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Fc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("ADC",%mmmsqld(2)))
 e  g %0FCdun
 k %data
 f icol=0:1:11 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTAddressCode.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTAddressCode.T1(%mmmsqld(2)) g %0Fc
%0FCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTAddressCode.T1(%mmmsqld(2)) g:SQLCODE<0 %0Fc
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTAddressCode.T1(%mmmsqld(2)) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("ADC",%mmmsqld(1)))
 e  g %0HBdun
 s %mmmsqld(9)=$$%getlock^User.CTAddressCode.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("ADC",%mmmsqld(1)))
 e  g %0HCdun
 d %delete^User.CTAddressCode.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTAddressCode.T1(%mmmsqld(1)) g %0Hc
%0HCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTAddressCode.T1(%mmmsqld(1)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTAddressCode.T1(%mmmsqld(1)) g %0Hc
%0Ko d %CTAD0f q:SQLCODE'=0
 s PLIST(1)=%CTAD0d(1),PLIST(2)=%CTAD0d(1),PLIST(3)=%CTAD0d(2),PLIST(4)=%CTAD0d(3),PLIST(5)=%CTAD0d(4),PLIST(6)=%CTAD0d(5),PLIST(7)=%CTAD0d(6),PLIST(8)=%CTAD0d(7),PLIST(9)=%CTAD0d(8),PLIST(10)=%CTAD0d(9),PLIST(11)=%CTAD0d(10)
 q
%0MBr1 n cnt s cnt=0
 s PLIST(9)=""
 i $g(PLIST(4))'="" s cnt=cnt+1,$p(PLIST(9),"|",cnt)=$g(PLIST(4))
 i $g(PLIST(5))'="" s cnt=cnt+1,$p(PLIST(9),"|",cnt)=$g(PLIST(5))
 i $g(PLIST(6))'="" s cnt=cnt+1,$p(PLIST(9),"|",cnt)=$g(PLIST(6))
 i $g(PLIST(7))'="" s cnt=cnt+1,$p(PLIST(9),"|",cnt)=$g(PLIST(7))
 i $g(PLIST(8))'="" s cnt=cnt+1,$p(PLIST(9),"|",cnt)=$g(PLIST(8))
 k cnt q
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Merr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(12)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(12)
 i PLIST(2)'="",$d(^TTAB("ADC",PLIST(2)))
 e  g %0MBdun
 s %mmmsqld(20)=$g(^TTAB("ADC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",2) s PLIST(5)=$p(%mmmsqld(20),"\",3) s PLIST(6)=$p(%mmmsqld(20),"\",4) s PLIST(7)=$p(%mmmsqld(20),"\",5) s PLIST(8)=$p(%mmmsqld(20),"\",6) s PLIST(10)=$p(%mmmsqld(20),"\",7) s PLIST(11)=$p(%mmmsqld(20),"\",8)
 d %0MBr1
 g:$zu(115,2)=0 %0MBuncommitted i $zu(115,2)=1 l +^TTAB("ADC",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TTAB("ADC",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_AddressCode for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("ADC",PLIST(2)))
 e  g %0MCdun
 s %mmmsqld(25)=$g(^TTAB("ADC",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2) s PLIST(5)=$p(%mmmsqld(25),"\",3) s PLIST(6)=$p(%mmmsqld(25),"\",4) s PLIST(7)=$p(%mmmsqld(25),"\",5) s PLIST(8)=$p(%mmmsqld(25),"\",6) s PLIST(10)=$p(%mmmsqld(25),"\",7) s PLIST(11)=$p(%mmmsqld(25),"\",8)
 d %0MBr1
%0MBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Mc
%0MCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0MBdun 
%0MAdun 
%0Mc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Merr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Mc
]]></Routine>
</Export>
