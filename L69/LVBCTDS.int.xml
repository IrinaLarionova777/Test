<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTDS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTDS ; IG 29/4/98 ; MVB Control code access for CT_Sections
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTDS(ROWID,skip)
 ; $$open^LVBCTDS(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTDS(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTDS(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTDS(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTDS()
 ; $$insert^LVBCTDS()
 ; $$update^LVBCTDS(ROWID)
 ; $$delete^LVBCTDS(ROWID,Comments)
 ; $$getall^LVBCTDS(dep)
 ;
  ;---&SQL(DECLARE CTDS CURSOR FOR SELECT * FROM CT_Sections
   ;---         WHERE ((CTDS_Department_DR = :dep) OR (:dep is NULL))
   ;---         ORDER BY CTDS_Department_DR->CTDEP_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, dep
 ; insert the data
insert() d pre("N") k PLIST(1)
  ;---&SQL(insert INTO CT_Sections VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(ROWID) d pre("Y")
  ;---&SQL(UPDATE CT_Sections VALUES :PLIST() WHERE CTDS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_Sections WHERE CTDS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 q SQLCODE
 ; open the cursor
open(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9)  ;---s dep=$g(dep),skip=$g(skip) &SQL(OPEN CTDS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 s dep=$g(dep),skip=$g(skip) Do %CTDS0o
 q 0
 ; fetch the data
fetch(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) s dep=$g(dep),skip=$g(skip) k PLIST
  ;---&SQL(FETCH CTDS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) s dep=$g(dep),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(dep,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(dep,skip,p2,p3,p4,p5,p6,p7,p8,p9) n (dep,skip,PLIST) s dep=$g(dep),skip=$g(skip) k ^TMP($zn,$j)
 i $$open(dep,skip)
 f cnt=1:1 q:$$fetch(dep,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE CTDS) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTDS0c 
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_Sections WHERE CTDS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("6,7","11")
 s (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ; post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("6,7")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(4))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBCTDEP(plist(4),"Y")
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)
 .k PLIST m PLIST=plist s PLIST(4)=X k plist
 q
getall(dep) n (dep,PLIST) k ^TMP($zn,$j) s dep=$g(dep)
 i $$open(dep,"Y")
 f cnt=1:1 q:$$fetch(dep,"Y")  s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%CTDS0o s $zt="%CTDS0E" s SQLCODE=$s($g(%CTDS0c):-101,1:0) q:SQLCODE'=0  s %CTDS0d(15)=0 s %CTDS0d(16)=0,%CTDS0d(17)="",%CTDS0d(18)=0,%CTDS0d(19)=""
 s %CTDS0d(7)=$g(dep),%CTDS0d(8)=$g(dep)
 s %CTDS0t(1)=$i(^||%sql.temp)
 s %CTDS0c=1 q
%CTDS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTDS0c,%CTDS0d,%CTDS0E,%CTDS0l,%CTDS0n,%CTDS0R,%CTDS0s,%CTDS0t,%CTDS0Z q
%0Afirst s %CTDS0d(14)=""
 k ^||%sql.temp(%CTDS0t(1),0) s ^||%sql.temp(%CTDS0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTDS0t(1),0))
 d %0ABMod
 ; asl MOD# 5
 i $sortend(^||%sql.temp(%CTDS0t(1),0))
 s %CTDS0s(11)=""
%0AEk1 s %CTDS0s(11)=$o(^||%sql.temp(%CTDS0t(1),0,%CTDS0s(11)))
 i %CTDS0s(11)="" g %0AEdun
 s %CTDS0d(11)=$s(%CTDS0s(11)=-1E14:"",1:%CTDS0s(11))
 s %CTDS0s(14)=""
%0AEk2 s %CTDS0s(14)=$o(^||%sql.temp(%CTDS0t(1),0,%CTDS0s(11),%CTDS0s(14)))
 i %CTDS0s(14)="" g %0AEk1
 s %CTDS0d(14)=$s(%CTDS0s(14)=-1E14:"",1:%CTDS0s(14))
 s %CTDS0d(42)=$g(^||%sql.temp(%CTDS0t(1),0,%CTDS0s(11),%CTDS0d(14)))
 s %CTDS0d(1)=$lg(%CTDS0d(42),6) s %CTDS0d(2)=$lg(%CTDS0d(42),2) s %CTDS0d(3)=$lg(%CTDS0d(42),1) s %CTDS0d(4)=$lg(%CTDS0d(42),5) s %CTDS0d(5)=$lg(%CTDS0d(42),4) s %CTDS0d(6)=$lg(%CTDS0d(42),3)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTDS0d(15)=%CTDS0d(15)+1,%ROWCOUNT=%CTDS0d(15),%ROWID=%CTDS0d(1),%CTDS0c=10 q
%CTDS0f i '$g(%CTDS0c) { s SQLCODE=-102 q  } i %CTDS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTDS0d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTDS0d(15),%CTDS0c=100 q  } g %0Afirst:%CTDS0c=1
 g %0AEk2
%0AEdun 
%0AAdun 
 s %ROWCOUNT=%CTDS0d(15),SQLCODE=100,%CTDS0c=100 q
%CTDS0c i '$g(%CTDS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTDS0d(15)),1:0) f %CTDS0d(20)=1 { i $sortend(^||%sql.temp(%CTDS0t(%CTDS0d(20)),0),0) } k ^||%sql.temp(%CTDS0t(1))
 i $zu(115,2)=1,$g(%CTDS0d(16))=1 { l -@%CTDS0d(17) } i $zu(115,2)=1,$g(%CTDS0d(18))=1 { l -@%CTDS0d(19) } k %CTDS0c,%CTDS0d,%CTDS0E,%CTDS0l,%CTDS0n,%CTDS0R,%CTDS0s,%CTDS0t,%CTDS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTDS0c=100
 f %CTDS0d(20)=1 i $sortend(^||%sql.temp(%CTDS0t(%CTDS0d(20)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTDS0d(1)=""
%0ABk1 s %CTDS0d(1)=$o(^TTAB("DS",%CTDS0d(1)))
 i %CTDS0d(1)="" g %0ABdun
 s %CTDS0d(25)=$g(^TTAB("DS",%CTDS0d(1)))
 s %CTDS0d(3)=$p(%CTDS0d(25),"\",2)
 g:'(((%CTDS0d(3)'="")&&(%CTDS0d(3)=%CTDS0d(7)))||(%CTDS0d(8)="")) %0ABk1
 s %CTDS0d(2)=$p(%CTDS0d(25),"\",1) s %CTDS0d(4)=$p(%CTDS0d(25),"\",3)
 s %CTDS0d(6)="" f %irep=1:1:$g(^TTAB("DS",%CTDS0d(1),"F",0)) s $li(%CTDS0d(6),%irep)=$g(^(%irep))
 s %CTDS0d(5)="" f %irep=1:1:$g(^TTAB("DS",%CTDS0d(1),"H",0)) s $li(%CTDS0d(5),%irep)=$g(^(%irep))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("DS",$p(%CTDS0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTDS0d(16)=1,%CTDS0d(17)=$name(^TTAB("DS",$p(%CTDS0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Sections for RowID value: "_%CTDS0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTDS0d(12)=$lb(""_%CTDS0d(3))
 i %CTDS0d(1)'="",$d(^TTAB("DS",%CTDS0d(1)))
 e  g %0ACdun
 s %CTDS0d(30)=$g(^TTAB("DS",%CTDS0d(1)))
 s %CTDS0d(2)=$p(%CTDS0d(30),"\",1) s %CTDS0d(3)=$p(%CTDS0d(30),"\",2) s %CTDS0d(4)=$p(%CTDS0d(30),"\",3)
 s %CTDS0d(6)="" f %irep=1:1:$g(^TTAB("DS",%CTDS0d(1),"F",0)) s $li(%CTDS0d(6),%irep)=$g(^(%irep))
 s %CTDS0d(5)="" f %irep=1:1:$g(^TTAB("DS",%CTDS0d(1),"H",0)) s $li(%CTDS0d(5),%irep)=$g(^(%irep))
 s %CTDS0d(13)=$lb(""_%CTDS0d(3))
 g:%CTDS0d(12)'=%CTDS0d(13) %0ACdun
%0ABuncommitted ;
 s %CTDS0d(10)=%CTDS0d(3)
 i %CTDS0d(10)'="",$d(^TTAB("DEP",%CTDS0d(10)))
 e  s %CTDS0d(11)="",%CTDS0d(10)="" g %0ACp7
 s %CTDS0d(35)=$g(^TTAB("DEP",%CTDS0d(10)))
 s %CTDS0d(11)=$p(%CTDS0d(35),"\",13)
%0ACp7 
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("DEP",$p(%CTDS0d(10),"||",1))#"S":$zu(115,4) i $t { s %CTDS0d(18)=1,%CTDS0d(19)=$name(^TTAB("DEP",$p(%CTDS0d(10),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Department for RowID value: "_%CTDS0d(10) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTDS0d(10)'="",$d(^TTAB("DEP",%CTDS0d(10)))
 e  s %CTDS0d(11)="",%CTDS0d(10)="" g %0ADp1
 s %CTDS0d(40)=$g(^TTAB("DEP",%CTDS0d(10)))
 s %CTDS0d(11)=$p(%CTDS0d(40),"\",13)
%0ADp1 
%0ACuncommitted ;
 s %CTDS0s(11)=$s(%CTDS0d(11)'="":%CTDS0d(11),1:-1E14),%CTDS0d(14)=%CTDS0d(14)+1,%CTDS0d(41)="",$li(%CTDS0d(41),6)=%CTDS0d(1),$li(%CTDS0d(41),2)=%CTDS0d(2),$li(%CTDS0d(41),1)=%CTDS0d(3),$li(%CTDS0d(41),5)=%CTDS0d(4),$li(%CTDS0d(41),4)=%CTDS0d(5),$li(%CTDS0d(41),3)=%CTDS0d(6),^||%sql.temp(%CTDS0t(1),0,%CTDS0s(11),%CTDS0d(14))=%CTDS0d(41)
%0ADdun i $zu(115,2)=1,$g(%CTDS0d(18))=1 { l -@%CTDS0d(19) s %CTDS0d(18)=0 }
%0ACdun i $zu(115,2)=1,$g(%CTDS0d(16))=1 { l -@%CTDS0d(17) s %CTDS0d(16)=0 }
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:7 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTSections.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("DS",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTSections.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("DS",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTSections.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTSections.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTSections.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTSections.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("DS",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTSections.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("DS",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTSections.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTSections.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTSections.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTSections.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTDS0f q:SQLCODE'=0
 s PLIST(1)=%CTDS0d(1),PLIST(2)=%CTDS0d(1),PLIST(3)=%CTDS0d(2),PLIST(4)=%CTDS0d(3),PLIST(5)=%CTDS0d(4),PLIST(6)=%CTDS0d(5),PLIST(7)=%CTDS0d(6)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(8)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(8)
 i PLIST(2)'="",$d(^TTAB("DS",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(16)=$g(^TTAB("DS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(16),"\",1) s PLIST(4)=$p(%mmmsqld(16),"\",2) s PLIST(5)=$p(%mmmsqld(16),"\",3)
 s PLIST(7)="" f %irep=1:1:$g(^TTAB("DS",PLIST(2),"F",0)) s $li(PLIST(7),%irep)=$g(^(%irep))
 s PLIST(6)="" f %irep=1:1:$g(^TTAB("DS",PLIST(2),"H",0)) s $li(PLIST(6),%irep)=$g(^(%irep))
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("DS",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("DS",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Sections for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("DS",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(21)=$g(^TTAB("DS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(21),"\",1) s PLIST(4)=$p(%mmmsqld(21),"\",2) s PLIST(5)=$p(%mmmsqld(21),"\",3)
 s PLIST(7)="" f %irep=1:1:$g(^TTAB("DS",PLIST(2),"F",0)) s $li(PLIST(7),%irep)=$g(^(%irep))
 s PLIST(6)="" f %irep=1:1:$g(^TTAB("DS",PLIST(2),"H",0)) s $li(PLIST(6),%irep)=$g(^(%irep))
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
