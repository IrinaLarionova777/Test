<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBBIRB" type="INT" languagemode="0" generated="1"><![CDATA[
LVBBIRB ; IG 30/4/98 ;MVB Control code access for BI_ReBill
 ;
 ; supported calls:
 ;
 ; $$select^LVBBIRB(ROWID)
 ; $$open^LVBBIRB(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBBIRB(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBBIRB(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBBIRB(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBBIRB()
 ; $$insert^LVBBIRB()
 ; $$update^LVBBIRB(ROWID)
 ; $$delete^LVBBIRB(ROWID)
 ; $$check^LVBBIRB(epis)
 ; $$post^LVBBIRB(date)
 ; $$episode^LVBBIRB(epis)
 ;
  ;---&SQL(DECLARE BIRB CURSOR FOR SELECT * FROM BI_ReBill
   ;---         WHERE BIRB_Date = :date
   ;---         ORDER BY BIRB_Flag)
   ;--- ** SQL PUBLIC Variables: SQLCODE, date
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO BI_ReBill VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE BI_ReBill VALUES :PLIST() WHERE BIRB_RowID=:ROWID AND ((BIRB_Flag NOT= 'Y') OR (BIRB_Flag IS NULL)))
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID) S ROWID=$G(ROWID)
  ;---&SQL(DELETE FROM BI_ReBill WHERE BIRB_RowID=:ROWID AND ((BIRB_Flag NOT= 'Y') OR (BIRB_Flag IS NULL)))
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 Q SQLCODE
 ;
 ; Open the cursor
open(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) s date=$g(date)
  ;---&SQL(OPEN BIRB)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BIRB0o
 Q 0
 ;
 ; Fetch the data
fetch(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) K PLIST s date=$g(date)
  ;---&SQL(FETCH BIRB INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) s date=$g(date) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(date) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (date,PLIST) s date=$g(date) K ^TMP($zn,$j)
 i $$open(date)
 f cnt=1:1 Q:$$fetch(date)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE BIRB) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BIRB0c 
 q 0
 ;
 ; select data by code
select(ROWID) K PLIST S ROWID=$G(ROWID)
  ;---&SQL(SELECT * INTO :PLIST() FROM BI_ReBill WHERE BIRB_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 F J=4,5 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTPC(plist(J),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTCO(plist(6),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 I $G(PLIST(3))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBEPVIS(plist(3),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))
 .K PLIST M PLIST=plist S PLIST(3)=X K plist
 I $G(PLIST(12))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTIC(plist(12),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(12)=X K plist
 I $G(PLIST(13))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTCC(plist(13),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(13)=X K plist
 Q
 ;
 ; check if episode could be Re-Billed
check(epis) n (epis,PLIST) s ok=0 k PLIST
 i 'ok,$$select^LVBEPVIS(epis,"Y") k PLIST s PLIST(1)="DE",ok=100
 i 'ok,PLIST(21)="",$d(^TBIL(9,epis)) k PLIST s PLIST(1)="NB",ok=100
 i 'ok,PLIST(86) k PLIST s PLIST(1)="DE",ok=100
 s PLIST=$o(PLIST(""),-1)
 q ok
post(date) n (date,PLIST) s date=$g(date),user=$$user^MVBSSUSR() k ^TMP($zn,$j)
 i $$LOCK^SSLOCK("Invoicing","Invoice")'=-1 q 100
 i $$open(date)
 f  q:$$fetch(date)  d
 .f j=1:1:PLIST i $d(PLIST(j)) s PLIST(j)=$p(PLIST(j),$c(1))
 .i PLIST(7)="Y" q
 .i PLIST(6)="" q
 .k REBILL m REBILL=PLIST
 .i $$LOCK^SSLOCK("Patient",REBILL(3),,,,1)
 .i '$$select^LVBEPVIS(REBILL(3),"Y") d
 ..f j=1:1:PLIST i $d(PLIST(j)) s PLIST(j)=$p(PLIST(j),$c(1))
 ..k VISIT m VISIT=PLIST
 ..s PLIST(9)=REBILL(5),PLIST(18)=REBILL(12),PLIST(27)=REBILL(13)
 ..i '$l(REBILL(8)),$l(PLIST(57)) s REBILL(4)=$p(PLIST(57),"||",1),REBILL(8)=$p(PLIST(57),"||",2)
 ..i $l(REBILL(14)) s PLIST(23)=REBILL(14)
 ..i $l(REBILL(15)) s PLIST(89)=REBILL(15)
 ..i $l(REBILL(16)) s PLIST(107)=REBILL(16)
 ..i $l(REBILL(17)) s PLIST(106)=REBILL(17)
 ..i $l(REBILL(18)) s PLIST(8)=REBILL(18)
 ..i $l(REBILL(19)) s PLIST(108)=REBILL(19)
 ..i $l(REBILL(20)) s PLIST(88)=REBILL(20)
 ..f j=21,55,56,57,59,87 s PLIST(j)=""
 ..i $$update^LVBEPVIS(REBILL(3)) q
 .. ; delete from already priced list
 ..s comp="" f  s comp=$o(^TBIL(2,comp)) q:comp=""  d
 ...s pc="" f  s pc=$o(^TBIL(2,comp,pc)) q:pc=""  k ^TBIL(2,comp,pc,REBILL(3))
 .. ; delete from manual pricing list
 ..k ^TBIL(1,REBILL(3))
 .. ; set to be priced list
 ..d BILL^at46(REBILL(3),"Y")
 .. ; debtor ajustment
 ..d check^LVBDEBVI(REBILL(3))
 .. ; event
 ..d events^LVBCOM01(REBILL(3),"RB",REBILL(4)_" "_REBILL(8)_" by "_user)
 .. ; check account fee
 ..s %routine=$p($g(^TTAB("REPORT-GENERIC","REM")),"\",1)
 ..i $l(%routine) d
 ...k PAYCODE i '$$select^LVBCTPC(REBILL(4),"Y") m PAYCODE=PLIST
 ...x "d AccountFee^"_%routine_"("""_REBILL(3)_""","""_$$mrn^LVBEPVIS(REBILL(3))_""",""Y"")"
 .. ; post rebill
 ..k PLIST m PLIST=REBILL s PLIST(7)="Y",err=$$update(PLIST(1))
 ..i err d ErrorLog^LVBCOM02("REBILL",date_" "_REBILL(3),err)
 ..i $$LOCKCLR^SSLOCK("Patient",REBILL(3))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 i $$LOCKCLR^SSLOCK("Invoicing","Invoice")
 q 0
 ; get list of all episodes which should be rebilled
episode(epis) n (epis,PLIST) s epis=$g(epis) k ^TMP($zn,$j) s (date,mrn)=""
  ;---&sql( SELECT EPVIS_DateOfCollection,EPVIS_DebtorNumber_DR INTO :date,:mrn FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
   ;--- ** SQL PUBLIC Variables: SQLCODE, date, epis, mrn
 Do %0No
 i $l(mrn),$l(date) d
 .s mrn=$p(mrn,$c(1)),date=$p(date,$c(1))
 .s ep="" f  s ep=$o(^TDEB(mrn,date,0,ep)) q:ep=""  s ^TMP($zn,$j,ep)=""
 k PLIST,^TMP($zn,$j,epis) 
 s epis="" f cnt=1:1 s epis=$o(^TMP($zn,$j,epis)) q:epis=""  s PLIST(cnt)=epis
 s PLIST=$o(PLIST(""),-1)
 q 0
%BIRB0o s $zt="%BIRB0E" s SQLCODE=$s($g(%BIRB0c):-101,1:0) q:SQLCODE'=0  s %BIRB0d(24)=0 s %BIRB0d(25)=0,%BIRB0d(26)=""
 s %BIRB0d(21)=$g(date)
 s %BIRB0t(1)=$i(^||%sql.temp)
 s %BIRB0c=1 q
%BIRB0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %BIRB0c,%BIRB0d,%BIRB0E,%BIRB0l,%BIRB0n,%BIRB0R,%BIRB0s,%BIRB0t,%BIRB0Z q
%0Afirst 
 k ^||%sql.temp(%BIRB0t(1),0) s ^||%sql.temp(%BIRB0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%BIRB0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%BIRB0t(1),0))
 s %BIRB0s(23)=""
%0ACk1 s %BIRB0s(23)=$o(^||%sql.temp(%BIRB0t(1),0,%BIRB0s(23)))
 i %BIRB0s(23)="" g %0ACdun
 s %BIRB0d(23)=$s(%BIRB0s(23)=-1E14:"",1:%BIRB0s(23))
 s %BIRB0s(1)=""
%0ACk2 s %BIRB0s(1)=$o(^||%sql.temp(%BIRB0t(1),0,%BIRB0s(23),%BIRB0s(1)))
 i %BIRB0s(1)="" g %0ACk1
 s %BIRB0d(1)=$s(%BIRB0s(1)=-1E14:"",1:%BIRB0s(1))
 s %BIRB0d(2)=$p(%BIRB0d(1),"||"),%BIRB0d(3)=$p(%BIRB0d(1),"||",2)
 i %BIRB0d(2)'="",%BIRB0d(3)'="",$d(^TRBL(%BIRB0d(2),%BIRB0d(3)))
 e  g %0ACk2
 s %BIRB0d(35)=$g(^TRBL(%BIRB0d(2),%BIRB0d(3)))
 s %BIRB0d(4)=$p(%BIRB0d(35),"\",1) s %BIRB0d(5)=$p(%BIRB0d(35),"\",2) s %BIRB0d(6)=$p(%BIRB0d(35),"\",3) s %BIRB0d(7)=$p(%BIRB0d(35),"\",4) s %BIRB0d(8)=$p(%BIRB0d(35),"\",5) s %BIRB0d(11)=$p(%BIRB0d(35),"\",6) s %BIRB0d(12)=$p(%BIRB0d(35),"\",7) s %BIRB0d(13)=$p(%BIRB0d(35),"\",8) s %BIRB0d(14)=$p(%BIRB0d(35),"\",15) s %BIRB0d(15)=$p(%BIRB0d(35),"\",9) s %BIRB0d(16)=$p(%BIRB0d(35),"\",10) s %BIRB0d(17)=$p(%BIRB0d(35),"\",11) s %BIRB0d(18)=$p(%BIRB0d(35),"\",12) s %BIRB0d(19)=$p(%BIRB0d(35),"\",13) s %BIRB0d(20)=$p(%BIRB0d(35),"\",14)
 s %BIRB0d(10)=$$CT010^at331($g(%BIRB0d(3))) s %BIRB0d(9)=$$CT009^at331($g(%BIRB0d(3)))
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TRBL($p(%BIRB0d(1),"||",1),$p(%BIRB0d(1),"||",2))#"S":$zu(115,4) i $t { s %BIRB0d(25)=1,%BIRB0d(26)=$name(^TRBL($p(%BIRB0d(1),"||",1),$p(%BIRB0d(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BI_ReBill for RowID value: "_%BIRB0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 s %BIRB0d(2)=$p(%BIRB0d(1),"||"),%BIRB0d(3)=$p(%BIRB0d(1),"||",2)
 i %BIRB0d(2)'="",%BIRB0d(3)'="",$d(^TRBL(%BIRB0d(2),%BIRB0d(3)))
 e  g %0ADdun
 s %BIRB0d(39)=$g(^TRBL(%BIRB0d(2),%BIRB0d(3)))
 s %BIRB0d(4)=$p(%BIRB0d(39),"\",1) s %BIRB0d(5)=$p(%BIRB0d(39),"\",2) s %BIRB0d(6)=$p(%BIRB0d(39),"\",3) s %BIRB0d(7)=$p(%BIRB0d(39),"\",4) s %BIRB0d(8)=$p(%BIRB0d(39),"\",5) s %BIRB0d(11)=$p(%BIRB0d(39),"\",6) s %BIRB0d(12)=$p(%BIRB0d(39),"\",7) s %BIRB0d(13)=$p(%BIRB0d(39),"\",8) s %BIRB0d(14)=$p(%BIRB0d(39),"\",15) s %BIRB0d(15)=$p(%BIRB0d(39),"\",9) s %BIRB0d(16)=$p(%BIRB0d(39),"\",10) s %BIRB0d(17)=$p(%BIRB0d(39),"\",11) s %BIRB0d(18)=$p(%BIRB0d(39),"\",12) s %BIRB0d(19)=$p(%BIRB0d(39),"\",13) s %BIRB0d(20)=$p(%BIRB0d(39),"\",14)
 s %BIRB0d(10)=$$CT010^at331($g(%BIRB0d(3))) s %BIRB0d(9)=$$CT009^at331($g(%BIRB0d(3))) s %BIRB0d(23)=$zu(28,%BIRB0d(7),7)
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %BIRB0d(24)=%BIRB0d(24)+1,%ROWCOUNT=%BIRB0d(24),%ROWID=%BIRB0d(1),%BIRB0c=10 q
%BIRB0f i '$g(%BIRB0c) { s SQLCODE=-102 q  } i %BIRB0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%BIRB0d(24))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%BIRB0d(24),%BIRB0c=100 q  } g %0Afirst:%BIRB0c=1
%0ADdun i $zu(115,2)=1,$g(%BIRB0d(25))=1 { l -@%BIRB0d(26) s %BIRB0d(25)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%BIRB0d(24),SQLCODE=100,%BIRB0c=100 q
%BIRB0c i '$g(%BIRB0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%BIRB0d(24)),1:0) f %BIRB0d(27)=1 { i $sortend(^||%sql.temp(%BIRB0t(%BIRB0d(27)),0),0) } k ^||%sql.temp(%BIRB0t(1))
 i $zu(115,2)=1,$g(%BIRB0d(25))=1 { l -@%BIRB0d(26) } k %BIRB0c,%BIRB0d,%BIRB0E,%BIRB0l,%BIRB0n,%BIRB0R,%BIRB0s,%BIRB0t,%BIRB0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %BIRB0c=100
 f %BIRB0d(27)=1 i $sortend(^||%sql.temp(%BIRB0t(%BIRB0d(27)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %BIRB0d(2)=%BIRB0d(21)
 i %BIRB0d(2)="" g %0ABdun
 s %BIRB0d(3)=""
%0ABk1 s %BIRB0d(3)=$o(^TRBL(%BIRB0d(2),%BIRB0d(3)))
 i %BIRB0d(3)="" g %0ABdun
 s %BIRB0d(31)=$g(^TRBL(%BIRB0d(2),%BIRB0d(3)))
 s %BIRB0d(4)=$p(%BIRB0d(31),"\",1) s %BIRB0d(5)=$p(%BIRB0d(31),"\",2) s %BIRB0d(6)=$p(%BIRB0d(31),"\",3) s %BIRB0d(7)=$p(%BIRB0d(31),"\",4) s %BIRB0d(8)=$p(%BIRB0d(31),"\",5) s %BIRB0d(11)=$p(%BIRB0d(31),"\",6) s %BIRB0d(12)=$p(%BIRB0d(31),"\",7) s %BIRB0d(13)=$p(%BIRB0d(31),"\",8) s %BIRB0d(14)=$p(%BIRB0d(31),"\",15) s %BIRB0d(15)=$p(%BIRB0d(31),"\",9) s %BIRB0d(16)=$p(%BIRB0d(31),"\",10) s %BIRB0d(17)=$p(%BIRB0d(31),"\",11) s %BIRB0d(18)=$p(%BIRB0d(31),"\",12) s %BIRB0d(19)=$p(%BIRB0d(31),"\",13) s %BIRB0d(20)=$p(%BIRB0d(31),"\",14)
 s %BIRB0d(1)=(%BIRB0d(2))_"||"_(%BIRB0d(3))
 s %BIRB0d(10)=$$CT010^at331($g(%BIRB0d(3))) s %BIRB0d(9)=$$CT009^at331($g(%BIRB0d(3))) s %BIRB0d(23)=$zu(28,%BIRB0d(7),7)
 s %BIRB0s(23)=$s(%BIRB0d(23)'="":%BIRB0d(23),1:-1E14),%BIRB0s(1)=$s(%BIRB0d(1)'="":%BIRB0d(1),1:-1E14),^||%sql.temp(%BIRB0t(1),0,%BIRB0s(23),%BIRB0s(1))=""
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:20 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.BIReBill.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(10)=0 s %mmmsqld(11)=""
 s %mmmsqld(3)=$g(ROWID),%mmmsqld(5)="Y"
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 s %mmmsqld(7)=$zu(28,%mmmsqld(5),7)
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(8)=$p(%mmmsqld(2),"||"),%mmmsqld(9)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TRBL(%mmmsqld(8),%mmmsqld(9)))
 e  g %0EBdun
 s %mmmsqld(15)=$g(^TRBL(%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(15),"\",4)
 s %mmmsqld(6)=$zu(28,%mmmsqld(4),7)
 g:'(((%mmmsqld(6)'=" ")&&(%mmmsqld(6)'=%mmmsqld(7)))||(%mmmsqld(6)=" ")) %0EBdun
 s %mmmsqld(16)=$$%getlock^User.BIReBill.T1(%mmmsqld(2)) i '%mmmsqld(16) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 s %mmmsqld(8)=$p(%mmmsqld(2),"||"),%mmmsqld(9)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(8)'="",%mmmsqld(9)'="",$d(^TRBL(%mmmsqld(8),%mmmsqld(9)))
 e  g %0ECdun
 s %mmmsqld(20)=$g(^TRBL(%mmmsqld(8),%mmmsqld(9)))
 s %mmmsqld(4)=$p(%mmmsqld(20),"\",4)
 s %mmmsqld(6)=$zu(28,%mmmsqld(4),7)
 g:'(%mmmsqld(2)=%mmmsqld(3)) %0ECdun
 g:'(((%mmmsqld(6)'=" ")&&(%mmmsqld(6)'=%mmmsqld(7)))||(%mmmsqld(6)=" ")) %0ECdun
 k %data
 f icol=0:1:20 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.BIReBill.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(10))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.BIReBill.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.BIReBill.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(10)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.BIReBill.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(11)=0 s %mmmsqld(12)=""
 s %mmmsqld(2)=$g(ROWID),%mmmsqld(4)="Y"
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 s %mmmsqld(6)=$zu(28,%mmmsqld(4),7)
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(7)=$p(%mmmsqld(1),"||"),%mmmsqld(8)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TRBL(%mmmsqld(7),%mmmsqld(8)))
 e  g %0GBdun
 s %mmmsqld(16)=$g(^TRBL(%mmmsqld(7),%mmmsqld(8)))
 s %mmmsqld(3)=$p(%mmmsqld(16),"\",4)
 s %mmmsqld(5)=$zu(28,%mmmsqld(3),7)
 g:'(((%mmmsqld(5)'=" ")&&(%mmmsqld(5)'=%mmmsqld(6)))||(%mmmsqld(5)=" ")) %0GBdun
 s %mmmsqld(17)=$$%getlock^User.BIReBill.T1(%mmmsqld(1)) i '%mmmsqld(17) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 s %mmmsqld(9)=$lb(""_%mmmsqld(5))
 s %mmmsqld(7)=$p(%mmmsqld(1),"||"),%mmmsqld(8)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(7)'="",%mmmsqld(8)'="",$d(^TRBL(%mmmsqld(7),%mmmsqld(8)))
 e  g %0GCdun
 s %mmmsqld(21)=$g(^TRBL(%mmmsqld(7),%mmmsqld(8)))
 s %mmmsqld(3)=$p(%mmmsqld(21),"\",4)
 s %mmmsqld(5)=$zu(28,%mmmsqld(3),7)
 s %mmmsqld(10)=$lb(""_%mmmsqld(5))
 g:%mmmsqld(9)'=%mmmsqld(10) %0GCdun
 d %delete^User.BIReBill.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(11))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.BIReBill.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.BIReBill.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(11)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.BIReBill.T1(%mmmsqld(1)) g %0Gc
%0Jo d %BIRB0f q:SQLCODE'=0
 s PLIST(1)=%BIRB0d(1),PLIST(2)=%BIRB0d(2),PLIST(3)=%BIRB0d(3),PLIST(4)=%BIRB0d(4),PLIST(5)=%BIRB0d(5),PLIST(6)=%BIRB0d(6),PLIST(7)=%BIRB0d(7),PLIST(8)=%BIRB0d(8),PLIST(9)=%BIRB0d(9),PLIST(10)=%BIRB0d(10),PLIST(11)=%BIRB0d(11),PLIST(12)=%BIRB0d(12),PLIST(13)=%BIRB0d(13),PLIST(14)=%BIRB0d(14),PLIST(15)=%BIRB0d(15),PLIST(16)=%BIRB0d(16),PLIST(17)=%BIRB0d(17),PLIST(18)=%BIRB0d(18),PLIST(19)=%BIRB0d(19),PLIST(20)=%BIRB0d(20)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(24)=0,%mmmsqld(25)=""
 s %mmmsqld(22)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(22)
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i PLIST(2)'="",PLIST(3)'="",$d(^TRBL(PLIST(2),PLIST(3)))
 e  g %0LBdun
 s %mmmsqld(29)=$g(^TRBL(PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(29),"\",1) s PLIST(5)=$p(%mmmsqld(29),"\",2) s PLIST(6)=$p(%mmmsqld(29),"\",3) s PLIST(7)=$p(%mmmsqld(29),"\",4) s PLIST(8)=$p(%mmmsqld(29),"\",5) s PLIST(11)=$p(%mmmsqld(29),"\",6) s PLIST(12)=$p(%mmmsqld(29),"\",7) s PLIST(13)=$p(%mmmsqld(29),"\",8) s PLIST(14)=$p(%mmmsqld(29),"\",15) s PLIST(15)=$p(%mmmsqld(29),"\",9) s PLIST(16)=$p(%mmmsqld(29),"\",10) s PLIST(17)=$p(%mmmsqld(29),"\",11) s PLIST(18)=$p(%mmmsqld(29),"\",12) s PLIST(19)=$p(%mmmsqld(29),"\",13) s PLIST(20)=$p(%mmmsqld(29),"\",14)
 s PLIST(10)=$$CT010^at331($g(PLIST(3))) s PLIST(9)=$$CT009^at331($g(PLIST(3)))
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TRBL($p(PLIST(1),"||",1),$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(24)=1,%mmmsqld(25)=$name(^TRBL($p(PLIST(1),"||",1),$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BI_ReBill for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s PLIST(2)=$p(PLIST(1),"||"),PLIST(3)=$p(PLIST(1),"||",2)
 i PLIST(2)'="",PLIST(3)'="",$d(^TRBL(PLIST(2),PLIST(3)))
 e  g %0LCdun
 s %mmmsqld(33)=$g(^TRBL(PLIST(2),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(33),"\",1) s PLIST(5)=$p(%mmmsqld(33),"\",2) s PLIST(6)=$p(%mmmsqld(33),"\",3) s PLIST(7)=$p(%mmmsqld(33),"\",4) s PLIST(8)=$p(%mmmsqld(33),"\",5) s PLIST(11)=$p(%mmmsqld(33),"\",6) s PLIST(12)=$p(%mmmsqld(33),"\",7) s PLIST(13)=$p(%mmmsqld(33),"\",8) s PLIST(14)=$p(%mmmsqld(33),"\",15) s PLIST(15)=$p(%mmmsqld(33),"\",9) s PLIST(16)=$p(%mmmsqld(33),"\",10) s PLIST(17)=$p(%mmmsqld(33),"\",11) s PLIST(18)=$p(%mmmsqld(33),"\",12) s PLIST(19)=$p(%mmmsqld(33),"\",13) s PLIST(20)=$p(%mmmsqld(33),"\",14)
 s PLIST(10)=$$CT010^at331($g(PLIST(3))) s PLIST(9)=$$CT009^at331($g(PLIST(3)))
%0LBuncommitted ;
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(24))=1 { l -@%mmmsqld(25) s %mmmsqld(24)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(24))=1 { l -@%mmmsqld(25) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0NBdun
 s %mmmsqld(12)=$g(^TEPI(%mmmsqld(5)))
 s date=$p(%mmmsqld(12),"\",10) s mrn=$p(%mmmsqld(12),"\",18)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TEPI($p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TEPI(%mmmsqld(5)))
 e  g %0NCdun
 s %mmmsqld(15)=$g(^TEPI(%mmmsqld(5)))
 s date=$p(%mmmsqld(15),"\",10) s mrn=$p(%mmmsqld(15),"\",18)
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
]]></Routine>
</Export>
