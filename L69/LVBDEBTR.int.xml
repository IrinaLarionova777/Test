<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBDEBTR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBDEBTR ; IG 30/6/98 ; LVB Control data access for DEBTR DEB_DebtorTransaction
 ;
 ; supported calls:
 ;
 ; $$insert^LVBDEBTR(par)
 ; $$update^LVBDEBTR(ROWID)
 ; $$select^LVBDEBTR(ROWID)
 ; $$delete^LVBDEBTR(ROWID)
 ; $$open^LVBDEBTR(par)
 ; $$fetch^LVBDEBTR(par)
 ; $$close^LVBDEBTR()
 ; $$getall^LVBDEBTR(par,epis)
 ;
  ;---&sql(DECLARE DEBTR CURSOR FOR SELECT * FROM DEB_DebtorTransaction
   ;---         WHERE DEBTR_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par) s par=$g(par)
  ;---&SQL(OPEN DEBTR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DEBTR0o
 q 0
 ;
fetch(par) k PLIST s par=$g(par)
  ;---&SQL(FETCH DEBTR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE DEBTR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DEBTR0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
 s par1=$p(RowID,"||",1),par2=$p(RowID,"||",2),par3=$p(RowID,"||",3),par4=$p(RowID,"||",4,99)
  ;---&sql( SELECT * INTO :PLIST() FROM DEB_DebtorTransaction 
   ;---         WHERE DEBTR_ParRef=:par1 
   ;---         AND DEBTR_DateOfTransaction=:par2
   ;---         AND DEBTR_Type=:par3
   ;---         AND DEBTR_TransactionRID=:par4)
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, par1, par2, par3, par4
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
  ;---&sql(INSERT INTO DEB_DebtorTransaction VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE DEB_DebtorTransaction VALUES :PLIST() WHERE DEBTR_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM DEB_DebtorTransaction WHERE DEBTR_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 q SQLCODE
 ;
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust d PostSQL^SSUTIL4("")
 q
getall(par,epis) N (par,epis,PLIST) K ^TMP($ZN,$J) s par=$g(par),epis=$g(epis)
 I $$open(par)
 s cnt=0 F  Q:$$fetch(par)  d
 .i '$d(^TDEB($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),1,$p(PLIST(1),"||",3),0,epis)) q
 .s cnt=cnt+1,^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%DEBTR0o s $zt="%DEBTR0E" s SQLCODE=$s($g(%DEBTR0c):-101,1:0) q:SQLCODE'=0  s %DEBTR0d(14)=0 s %DEBTR0d(15)=0,%DEBTR0d(16)=""
 s %DEBTR0d(11)=$g(par)
 s %DEBTR0c=1 q
%DEBTR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %DEBTR0c,%DEBTR0d,%DEBTR0E,%DEBTR0l,%DEBTR0n,%DEBTR0R,%DEBTR0Z q
%0Afirst 
 ; asl MOD# 2
 s %DEBTR0d(1)=%DEBTR0d(11)
 i %DEBTR0d(1)="" g %0ABdun
 s %DEBTR0d(3)=""
%0ABk1 s %DEBTR0d(3)=$o(^TDEB(%DEBTR0d(1),%DEBTR0d(3)))
 i %DEBTR0d(3)="" g %0ABdun
 s %DEBTR0d(7)=""
%0ABk2 s %DEBTR0d(7)=$o(^TDEB(%DEBTR0d(1),%DEBTR0d(3),1,%DEBTR0d(7)))
 i %DEBTR0d(7)="" g %0ABk1
 s %DEBTR0d(4)=""
%0ABk3 s %DEBTR0d(4)=$o(^TDEB(%DEBTR0d(1),%DEBTR0d(3),1,%DEBTR0d(7),%DEBTR0d(4)))
 i %DEBTR0d(4)="" g %0ABk2
 s %DEBTR0d(24)=$g(^TDEB(%DEBTR0d(1),%DEBTR0d(3),1,%DEBTR0d(7),%DEBTR0d(4)))
 s %DEBTR0d(5)=$p(%DEBTR0d(24),"\",4) s %DEBTR0d(6)=$p(%DEBTR0d(24),"\",3) s %DEBTR0d(9)=$p(%DEBTR0d(24),"\",5) s %DEBTR0d(10)=$p(%DEBTR0d(24),"\",2)
 s %DEBTR0d(2)=(%DEBTR0d(1))_"||"_(%DEBTR0d(3))_"||"_(%DEBTR0d(7))_"||"_(%DEBTR0d(4))
 s %DEBTR0d(8)=$$CT007^at56($g(%DEBTR0d(7)),$g(%DEBTR0d(4)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TDEB($p(%DEBTR0d(2),"||",1),$p(%DEBTR0d(2),"||",2),1,$p(%DEBTR0d(2),"||",3),$p(%DEBTR0d(2),"||",4))#"S":$zu(115,4) i $t { s %DEBTR0d(15)=1,%DEBTR0d(16)=$name(^TDEB($p(%DEBTR0d(2),"||",1),$p(%DEBTR0d(2),"||",2),1,$p(%DEBTR0d(2),"||",3),$p(%DEBTR0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DEB_DebtorTransaction for RowID value: "_%DEBTR0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %DEBTR0d(13)=$p(%DEBTR0d(2),"||"),%DEBTR0d(3)=$p(%DEBTR0d(2),"||",2),%DEBTR0d(7)=$p(%DEBTR0d(2),"||",3),%DEBTR0d(4)=$p(%DEBTR0d(2),"||",4)
 i %DEBTR0d(13)'="",%DEBTR0d(3)'="",%DEBTR0d(7)'="",%DEBTR0d(4)'="",$d(^TDEB(%DEBTR0d(13),%DEBTR0d(3),1,%DEBTR0d(7),%DEBTR0d(4)))
 e  g %0ACdun
 s %DEBTR0d(32)=$g(^TDEB(%DEBTR0d(13),%DEBTR0d(3),1,%DEBTR0d(7),%DEBTR0d(4)))
 s %DEBTR0d(5)=$p(%DEBTR0d(32),"\",4) s %DEBTR0d(6)=$p(%DEBTR0d(32),"\",3) s %DEBTR0d(9)=$p(%DEBTR0d(32),"\",5) s %DEBTR0d(10)=$p(%DEBTR0d(32),"\",2)
 s %DEBTR0d(1)=$p(%DEBTR0d(2),"||")
 s %DEBTR0d(8)=$$CT007^at56($g(%DEBTR0d(7)),$g(%DEBTR0d(4)))
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %DEBTR0d(14)=%DEBTR0d(14)+1,%ROWCOUNT=%DEBTR0d(14),%ROWID=%DEBTR0d(2),%DEBTR0c=10 q
%DEBTR0f i '$g(%DEBTR0c) { s SQLCODE=-102 q  } i %DEBTR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%DEBTR0d(14))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%DEBTR0d(14),%DEBTR0c=100 q  } g %0Afirst:%DEBTR0c=1
%0ACdun i $zu(115,2)=1,$g(%DEBTR0d(15))=1 { l -@%DEBTR0d(16) s %DEBTR0d(15)=0 }
 g %0ABk3
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%DEBTR0d(14),SQLCODE=100,%DEBTR0c=100 q
%DEBTR0c i '$g(%DEBTR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%DEBTR0d(14)),1:0)
 i $zu(115,2)=1,$g(%DEBTR0d(15))=1 { l -@%DEBTR0d(16) } k %DEBTR0c,%DEBTR0d,%DEBTR0E,%DEBTR0l,%DEBTR0n,%DEBTR0R,%DEBTR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %DEBTR0c=100 q
%0Do d %DEBTR0f q:SQLCODE'=0
 s PLIST(0)=%DEBTR0d(1),PLIST(1)=%DEBTR0d(2),PLIST(2)=%DEBTR0d(3),PLIST(3)=%DEBTR0d(4),PLIST(4)=%DEBTR0d(5),PLIST(5)=%DEBTR0d(6),PLIST(6)=%DEBTR0d(7),PLIST(7)=%DEBTR0d(8),PLIST(8)=%DEBTR0d(9),PLIST(9)=%DEBTR0d(10)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(18)=0,%mmmsqld(19)=""
 s %mmmsqld(12)=$g(par1),%mmmsqld(13)=$g(par2),%mmmsqld(14)=$g(par3),%mmmsqld(15)=$g(par4)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(0)=%mmmsqld(12)
 s PLIST(2)=%mmmsqld(13)
 s PLIST(6)=%mmmsqld(14)
 s PLIST(3)=%mmmsqld(15)
 i PLIST(0)="" g %0FBdun
 i PLIST(2)="" g %0FBdun
 i PLIST(6)="" g %0FBdun
 i PLIST(3)="" g %0FBdun
 i '$d(^TDEB(PLIST(0),PLIST(2),1,PLIST(6),PLIST(3))) g %0FBdun
 s %mmmsqld(27)=$g(^TDEB(PLIST(0),PLIST(2),1,PLIST(6),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(27),"\",4) s PLIST(5)=$p(%mmmsqld(27),"\",3) s PLIST(8)=$p(%mmmsqld(27),"\",5) s PLIST(9)=$p(%mmmsqld(27),"\",2)
 s PLIST(1)=(PLIST(0))_"||"_(PLIST(2))_"||"_(PLIST(6))_"||"_(PLIST(3))
 s PLIST(7)=$$CT007^at56($g(PLIST(6)),$g(PLIST(3)))
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TDEB($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),1,$p(PLIST(1),"||",3),$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(18)=1,%mmmsqld(19)=$name(^TDEB($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),1,$p(PLIST(1),"||",3),$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DEB_DebtorTransaction for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(17)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2),PLIST(6)=$p(PLIST(1),"||",3),PLIST(3)=$p(PLIST(1),"||",4)
 i %mmmsqld(17)'="",PLIST(2)'="",PLIST(6)'="",PLIST(3)'="",$d(^TDEB(%mmmsqld(17),PLIST(2),1,PLIST(6),PLIST(3)))
 e  g %0FCdun
 s %mmmsqld(35)=$g(^TDEB(%mmmsqld(17),PLIST(2),1,PLIST(6),PLIST(3)))
 s PLIST(4)=$p(%mmmsqld(35),"\",4) s PLIST(5)=$p(%mmmsqld(35),"\",3) s PLIST(8)=$p(%mmmsqld(35),"\",5) s PLIST(9)=$p(%mmmsqld(35),"\",2)
 s PLIST(0)=$p(PLIST(1),"||")
 s PLIST(7)=$$CT007^at56($g(PLIST(6)),$g(PLIST(3)))
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) s %mmmsqld(18)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(18))=1 { l -@%mmmsqld(19) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DEBDebtorTransaction.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TDEB(%mmmsqld(4),%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7)))
 e  g %0JBdun
 s %mmmsqld(17)=$$%getlock^User.DEBDebtorTransaction.T1(%mmmsqld(2)) i '%mmmsqld(17) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TDEB(%mmmsqld(4),%mmmsqld(5),1,%mmmsqld(6),%mmmsqld(7)))
 e  g %0JCdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.DEBDebtorTransaction.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(17)=1 %ReleaseLock^User.DEBDebtorTransaction.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(17)=1 %ReleaseLock^User.DEBDebtorTransaction.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(17))=1 %ReleaseLock^User.DEBDebtorTransaction.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TDEB(%mmmsqld(3),%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6)))
 e  g %0LBdun
 s %mmmsqld(16)=$$%getlock^User.DEBDebtorTransaction.T1(%mmmsqld(1)) i '%mmmsqld(16) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TDEB(%mmmsqld(3),%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6)))
 e  g %0LCdun
 d %delete^User.DEBDebtorTransaction.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(16)=1 %ReleaseLock^User.DEBDebtorTransaction.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(16)=1 %ReleaseLock^User.DEBDebtorTransaction.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(16))=1 %ReleaseLock^User.DEBDebtorTransaction.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
