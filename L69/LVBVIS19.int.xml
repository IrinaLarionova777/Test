<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIS19" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIS19 ; IG 2/6/98 ; Visit selection routines (for Daybook Review screen)
 ;
 ; supported calls:
 ;
 ; $$open^LVBVIS19(epis,access,user,param,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVIS19(epis,access,user,param,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVIS19(epis,access,user,param,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVIS19()
 ; $$select^LVBVIS19(epis,access)
 ; $$welcan^LVBVIS19(epis,list,access)
 ; $$pathologist^LVBVIS19(tests)
 ; $$pieces^LVBVIS19(access,num)
 ; $$print^LVBVIS19(user,param)
 ;
pieces(access,num) n (access,num) s access=$g(access),num=$g(num)
 i $$open^LVBHIVAB(access)
 f  q:$$fetch^LVBHIVAB(access)  d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 .s block=PLIST(1)
 .i $$open^LVBHIVAO(block,"Y")
 .f  q:$$fetch^LVBHIVAO(block,"Y")  s PLIST(11)=num i $$update^LVBHIVAO(PLIST(1))
 .i $$close^LVBHIVAO()
 i $$close^LVBHIVAB()
 q 0
 ; 1-Macro
 ; 2-Micro
pathologist(tests) n (tests) s tests=$g(tests),result="N"_$c(1)_"N"
 f j=1:1:$l(tests,",") s test=$p(tests,",",j) i $l(test) d
 . ;---s xx="" &SQL(SELECT CTTS_PathologistType INTO :xx FROM CT_TestSet WHERE CTTS_RowID=:test)
  . ;--- ** SQL PUBLIC Variables: SQLCODE, test, xx
 .s xx="" Do %0Ao
 .s xx=$p(xx,$c(1))
 .i (xx="MM")!(xx="MA") s $p(result,$c(1),1)="Y"
 .i (xx="MM")!(xx="MI") s $p(result,$c(1),2)="Y"
 q result
 ; param : 1.Test Set
 ;         2.User Site
 ;         3.Lab
 ;         4.Origin Site
 ;         5.Sort by : A-Accession number
 ;                     T-Test set
 ;                     E-Episode
open(epis,access,user,param,p4,p5,p6,p7,p8,p9) n (epis,access,user,param) k ^TMP($zn,$j,"create")
 s epis=$g(epis),access=$g(access),user=$g(user),param=$g(param)
 f j=1:1:$l(param,"\") s param(j)=$p(param,"\",j)
 ; check if test set - synonym
 i $l(param(1)),'$d(^TTAB("TS",param(1))) s param(1)=$$select^LVBCTSY(param(1),"TS",param(2))
 d
 .i $l(epis) d  q
 ..s x2="" f  s x2=$o(^THIRi("Review",epis,x2)) q:x2=""  d
 ...i $l(access),$e(x2,1,$l(access))'=access q
 ...d create(epis,x2)
 .s x1="" f  s x1=$o(^THIRi("Review",x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^THIRi("Review",x1,x2)) q:x2=""  d
 ...i $l(access),$e(x2,1,$l(access))'=access q
 ...d create(x1,x2)
 q 0
 ; create by episode
create(epis,access) n (epis,access,user,param)
 i $$select^LVBEPVIS(epis,"Y",user) q
 ; check user site
 i $l(param(2)),PLIST(66)'=param(2) q
 i '$$select^LVBHIVAC(epis_"||"_access,"Y") d
 .f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
 . ; check laboratory
 .i $l(param(3)),PLIST(8)'=param(3) q
 . ; check origin site
 .i $l(param(4)),PLIST(14)'=param(4) q
 . ; check test set
 .i $l(param(1)),PLIST(6)'[("||"_param(1)_"||") q
 .s sort="" d:$l($g(param(5)))  i '$l(sort) s sort=" "
 ..i param(5)="E" s sort=epis
 ..i param(5)="A" s sort=access
 ..i param(5)="T" s sort=$s(PLIST(6)[",":"",1:$p(PLIST(6),"||",2))
 .s ^TMP($zn,$j,"create",sort,epis,access)=""
 q
 ;
fetch(epis,access,user,param,p4,p5,p6,p7,p8,p9) n (epis,access,user,param,PLIST) K PLIST
 s epis=$g(epis),access=$g(access),user=$g(user),param=$g(param)
 s line=$g(^TMP($zn,$j,"create")) f j=1:1:3 s @("line"_j)=$p(line,"||",j)
 s ok=0 f  d:$l(line1)  q:ok  s line1=$o(^TMP($zn,$j,"create",line1)),(line2,line3)="" q:line1=""
 .f  d:$l(line2)  q:ok  s line2=$o(^TMP($zn,$j,"create",line1,line2)),line3="" q:line2=""
 ..f  s line3=$o(^TMP($zn,$j,"create",line1,line2,line3)) q:line3=""  s ok=1 q
 s SQLCODE=100
 i ok s SQLCODE=$$select(line2,line3)
 s ^TMP($zn,$j,"create")=line1_"||"_line2_"||"_line3
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ; Fetch all data
fetchbuffer(epis,access,user,param,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j,1)
 s epis=$g(epis),access=$g(access),user=$g(user),param=$g(param)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 s xSUM=0
 f xxx=1:1:max s SQLCODE=$$fetch(epis,access,user,param) q:SQLCODE  d  q:xSUM>15000
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 .s xSUM=xSUM+$l(^TMP($zn,$j,1,cnt))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ;
close() k ^TMP($zn,$j,"create")
 q 0
 ;
 ; PLIST : 1. Accession number RowID
 ;         2. Accession number
 ;         3. Accession number (formatted)
 ;         4. Episode
 ;         5. Patient name
 ;         6. TestSets
 ;         7. Priority
 ;         8. Patient Location
 ;         9. Date collection
 ;         10.Time collection
 ;         11.Date Received
 ;         12.Time Received
 ;         13.User site
 ;         14.Specimen
 ;         15.Anatomical site
 ;         16.MacroPathologist
 ;         17.MicroPathologist
 ;         18.Retain Specimen
 ;         19.Accession number info
 ;         20.Voice file
 ;         21.Laboratory
 ;         22.Standard CutUp
 ;         23.Episode Welcan units
 ;         24.MRN
 ;         25.list of tests with <SOP>
 ;         26.list of tests with <Collection manual>
 ;         27.Given name_Surname_Sex_DOB
 ;         28.Specialist Registar
 ;         29.Macro_Micro
 ;         30.Comments
select(epis,access) n (epis,access,PLIST) s epis=$g(epis),access=$g(access),list=""
 i $$select^LVBEPVIS(epis) q 1_$c(1)_epis
 f j=1:1:21,23:1:65,67:1:PLIST i $d(PLIST(j)) s PLIST(j)=$p(PLIST(j),$c(1))
 m xPLIST=PLIST
 i $$select^LVBHIVAC(epis_"||"_access) q 2_$c(1)_epis_"||"_access
 f j=1:1:2,4:1:6,8:1:11,13:1:16,18,20:1:PLIST i $d(PLIST(j)) s PLIST(j)=$p(PLIST(j),$c(1))
 m yPLIST=PLIST
 k PLIST
 s PLIST(1)=yPLIST(1)
 s PLIST(2)=access
 s PLIST(3)=$$AccNoFormat^LVBCOM03(access)
 s PLIST(4)=epis
 s PLIST(5)=$$NameFormat^LVBCOM03("PT",$p(xPLIST(7),$c(1),2),xPLIST(4),xPLIST(3),xPLIST(99),xPLIST(100),xPLIST(101))
 s (xxx1,xxx2,xxx3,xxx4)="" d  s PLIST(6)=xxx1,PLIST(25)=xxx2,PLIST(26)=xxx3
 .n (epis,access,xxx1,xxx2,xxx3,xxx4,dep,list)
 .i $$open^LVBHIVAT(epis_"||"_access)
 .f  q:$$fetch^LVBHIVAT(epis_"||"_access)  d
 ..s vts=$p(PLIST(2),$c(1))
 ..i '$$select^LVBCTTS($p(vts,"||",2)) d
 ...s xxx4=xxx4_$s($l(xxx4):",",1:"")_$p(vts,"||",2)
 ...s test=PLIST(4)_"["_PLIST(2)_"]"
 ...s xxx1=xxx1_$s($l(xxx1):",",1:"")_test,list=list_$s($l(list):",",1:"")_vts
 ...i $l(PLIST(58))!$l(PLIST(59)) s xxx2=xxx2_$s($l(xxx2):",",1:"")_PLIST(2)_$c(1)_PLIST(3)_$c(1)_$s($l(PLIST(59)):"Y",1:"N")_$c(1)_PLIST(58)
 ...i $l(PLIST(19))!$l(PLIST(27)) s xxx3=xxx3_$s($l(xxx3):",",1:"")_PLIST(2)_$c(1)_PLIST(3)_$c(1)_$s($l(PLIST(27)):"Y",1:"N")_$c(1)_PLIST(19)
 .i $$close^LVBHIVAT()
 s PLIST(7)=xPLIST(17)
 s PLIST(8)=xPLIST(22)
 s PLIST(9)=xPLIST(12)
 s PLIST(10)=xPLIST(13)
 s PLIST(11)=xPLIST(61)
 s PLIST(12)=xPLIST(62)
 s PLIST(13)=xPLIST(66)
 s PLIST(14)=yPLIST(3)
 s PLIST(15)=yPLIST(7)
 s PLIST(16)=yPLIST(17)
 s PLIST(17)=yPLIST(12)
 s PLIST(18)=yPLIST(13)
 s (xx1,xx2)="" d  s PLIST(19)=xx1,PLIST(22)=xx2
 .s rowid=$p(yPLIST(3),$c(1))_"||"_$p(yPLIST(8),$c(1))
 .n (epis,access,xx1,xx2,rowid,yPLIST,xxx1)
 .i $$open^LVBHIVAB(epis_"||"_access)
 .f blocks=0:1 q:$$fetch^LVBHIVAB(epis_"||"_access)
 .i $$close^LVBHIVAB()
 .i blocks s xx1=blocks_"Block"_$s(blocks=1:"",1:"s"),xx2="N"
 .i 'blocks d
 ..s xx=$$standard^LVBCTSPB($p(yPLIST(3),$c(1)),$e(access),$p(yPLIST(7),$c(1)),$p(xxx1,"||",2))
 ..f j=1:1:$l(xx,",") i $l($p(xx,",",j)) s blocks=blocks+1
 ..s xx1="SC : "_blocks_"Block"_$s(blocks=1:"",1:"s"),xx2="Y"
 s PLIST(20)=$s($d(^TEPI(epis,"VOICE")):"Y",1:"N")
 s PLIST(21)=yPLIST(8)
 s PLIST(23)=$$welcan(epis,list,access)
 s PLIST(24)=xPLIST(20)
 s PLIST(27)=xPLIST(4)_$c(1)_xPLIST(3)_$c(1)_xPLIST(5)_$c(1)_xPLIST(6)
 s PLIST(28)=yPLIST(19)
 s PLIST(29)=$$pathologist(xxx4)
 s PLIST(30)=yPLIST(11)
 s PLIST=$o(PLIST(""),-1)
 q 0
welcan(epis,list,access) n (epis,access) s epis=$g(epis),access=$g(access),(xx1,xx2,xx3)=""
  ;---&sql(SELECT EPVIS_PriorityCode_DR->CTPR_Welcan_Minute,EPVIS_Category_DR->CTPA_Welcan_Minute INTO :xx1,:xx2 FROM EP_VisitNumber WHERE EPVIS_RowID=:epis)
   ;--- ** SQL PUBLIC Variables: SQLCODE, epis, xx1, xx2
 Do %0Co
 s xx1=$p(xx1,$c(1)),xx2=$p(xx2,$c(1))
 s lab=$e(access)
  ;---&sql(SELECT CTDBL_Department_DR->CTDEP_Welcan_Minute INTO :xx3 FROM CT_DayBookLaboratory WHERE CTDBL_RowID=:lab)
   ;--- ** SQL PUBLIC Variables: SQLCODE, lab, xx3
 Do %0Eo
 s xx3=$p(xx3,$c(1))
 q (xx1+xx2+xx3)
print(user,param) n (user,param) s user=$g(user),param=$g(param) k ^TMP($zn,$j,"print")
         f j=1:1:$l(param,",") d
         .i $$START^PRTREP00(user,,"\\\\"_$p(param,",",j),"DBLA")
         .s epis=$p($p(param,",",j),"~",1),acc=$p($p(param,",",j),"~",2)
         .i '$$select^LVBHIVAC(epis_"||"_acc,"Y") d
         ..k HIVAC m HIVAC=PLIST
         ..i '$$select^LVBCTDBL(HIVAC(8)),PLIST(18)="Y" d
         ...i $$open^LVBHIVAB(epis_"||"_acc)
         ...f  q:$$fetch^LVBHIVAB(epis_"||"_acc)  d
         ....s PLIST(5)="N" f j=1:1:PLIST s PLIST(j)=$p(PLIST(j),$c(1))
         ....i $$update^LVBHIVAB(PLIST(1))
         ...i $$close^LVBHIVAB()
         q 0
 q
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(test)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(12)=$g(^TTAB("TS",%mmmsqld(3)))
 s xx=$p(%mmmsqld(12),"\",39)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("TS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("TS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_TestSet for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("TS",%mmmsqld(3)))
 e  g %0ACdun
 s %mmmsqld(17)=$g(^TTAB("TS",%mmmsqld(3)))
 s xx=$p(%mmmsqld(17),"\",39)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(12)=0,%mmmsqld(13)="",%mmmsqld(14)=0,%mmmsqld(15)="",%mmmsqld(16)=0,%mmmsqld(17)=""
 s %mmmsqld(10)=$g(epis)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(9)=%mmmsqld(10)
 i %mmmsqld(9)'="",$d(^TEPI(%mmmsqld(9)))
 e  g %0CBdun
 s %mmmsqld(20)=$g(^TEPI(%mmmsqld(9)))
 s %mmmsqld(1)=$p(%mmmsqld(20),"\",15) s %mmmsqld(4)=$p(%mmmsqld(20),"\",49)
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(9),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TEPI($p(%mmmsqld(9),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(9) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(9)'="",$d(^TEPI(%mmmsqld(9)))
 e  g %0CCdun
 s %mmmsqld(23)=$g(^TEPI(%mmmsqld(9)))
 s %mmmsqld(1)=$p(%mmmsqld(23),"\",15) s %mmmsqld(4)=$p(%mmmsqld(23),"\",49)
%0CBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("PC",%mmmsqld(2)))
 e  s %mmmsqld(2)="",xx1="" g %0CCp4
 s %mmmsqld(28)=$g(^TTAB("PC",%mmmsqld(2)))
 s xx1=$p(%mmmsqld(28),"\",5)
%0CCp4 
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^TTAB("PC",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TTAB("PC",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Priority for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("PC",%mmmsqld(2)))
 e  s %mmmsqld(2)="",xx1="" g %0CDp1
 s %mmmsqld(33)=$g(^TTAB("PC",%mmmsqld(2)))
 s xx1=$p(%mmmsqld(33),"\",5)
%0CDp1 
%0CCuncommitted ;
 s %mmmsqld(5)=%mmmsqld(4)
 i %mmmsqld(5)'="",$d(^TTAB("CTPA",%mmmsqld(5)))
 e  s %mmmsqld(5)="",xx2="" g %0CDp4
 s %mmmsqld(38)=$g(^TTAB("CTPA",%mmmsqld(5)))
 s xx2=$p(%mmmsqld(38),"\",2)
%0CDp4 
 g:$zu(115,2)=0 %0CDuncommitted i $zu(115,2)=1 l +^TTAB("CTPA",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^TTAB("CTPA",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PatientCategory for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 5
 i %mmmsqld(5)'="",$d(^TTAB("CTPA",%mmmsqld(5)))
 e  s %mmmsqld(5)="",xx2="" g %0CEp1
 s %mmmsqld(43)=$g(^TTAB("CTPA",%mmmsqld(5)))
 s xx2=$p(%mmmsqld(43),"\",2)
%0CEp1 
%0CDuncommitted ;
 s SQLCODE=0 g %0Cc
%0CEdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0CDdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(8)=0,%mmmsqld(9)="",%mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(6)=$g(lab)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^TTAB("LA",%mmmsqld(5)))
 e  g %0EBdun
 s %mmmsqld(16)=$g(^TTAB("LA",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(16),"\",8)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTAB("LA",$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("LA",$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_DayBookLaboratory for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^TTAB("LA",%mmmsqld(5)))
 e  g %0ECdun
 s %mmmsqld(21)=$g(^TTAB("LA",%mmmsqld(5)))
 s %mmmsqld(1)=$p(%mmmsqld(21),"\",8)
%0EBuncommitted ;
 s %mmmsqld(2)=%mmmsqld(1)
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  s %mmmsqld(2)="",xx3="" g %0ECp4
 s %mmmsqld(26)=$g(^TTAB("DEP",%mmmsqld(2)))
 s xx3=$p(%mmmsqld(26),"\",4)
%0ECp4 
 g:$zu(115,2)=0 %0ECuncommitted i $zu(115,2)=1 l +^TTAB("DEP",$p(%mmmsqld(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTAB("DEP",$p(%mmmsqld(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Department for RowID value: "_%mmmsqld(2) ztrap "LOCK"  }
 ; asl MOD# 4
 i %mmmsqld(2)'="",$d(^TTAB("DEP",%mmmsqld(2)))
 e  s %mmmsqld(2)="",xx3="" g %0EDp1
 s %mmmsqld(31)=$g(^TTAB("DEP",%mmmsqld(2)))
 s xx3=$p(%mmmsqld(31),"\",4)
%0EDp1 
%0ECuncommitted ;
 s SQLCODE=0 g %0Ec
%0EDdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
]]></Routine>
</Export>
