<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt1571" type="INT" languagemode="0"><![CDATA[
mt1571  ; Compiled May 31, 2007 15:24:24 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1571(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0C^mt1571
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt1571(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(2))'="" d
 . s %data(1)=$g(%data(2))
 . d insertnw^mt1571(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile^mt1572(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt1571 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0A^mt1571
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:25 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt1571(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:25 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile^mt1572(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt1572(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt1571 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt1571
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^SSU("SSUSR",1,%ROWID):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^SSU("SSUSR",1,%ROWID)
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^SSU("SSUSR",1,%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(2)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",1)=$g(%data(2))
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",2)=$g(%data(3))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",3)=$g(%data(9))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",4)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",5)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",6)=$g(%data(6))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",7)=$p($g(%data(7)),$c(1))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",8)=$p($g(%data(8)),$c(1))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",9)=$p($g(%data(10)),$c(1))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",10)=$g(%data(11))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",11)=$g(%data(12))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",12)=$g(%data(13))
 i $d(%edit(14)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",13)=$g(%data(14))
 i $d(%edit(15)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",14)=$p($g(%data(15)),$c(1))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",15)=$g(%data(16))
 i $d(%edit(17)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",16)=$g(%data(17))
 i $d(%edit(18)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",17)=$g(%data(18))
 i $d(%edit(19)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",18)=$g(%data(19))
 i $d(%edit(20)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",19)=$g(%data(20))
 i $d(%edit(21)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",20)=$p($g(%data(21)),$c(1))
 i $d(%edit(22)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",21)=$p($g(%data(22)),$c(1))
 i $d(%edit(24)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",22)=$p($g(%data(24)),$c(1))
 i $d(%edit(25)) s:'($d(tempn)#2) tempn=$g(^SSU("SSUSR",1,%data(2))) s $p(tempn,"^",23)=$p($g(%data(25)),$c(1))
 s:$d(tempn)#2 ^SSU("SSUSR",1,%data(2))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$$ALPHAUP($s($d(%edit(3)):%edit(3),1:$g(%data(3)))) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'=""
 i  i $d(^SSU("SSUSR","Name",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^SSU("SSUSR","Name",sn(1),sn(2)) k ^SSU("SSUSR","Name",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$$ALPHAUP($g(%data(3))) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'=""
 e  g map1dun
 s ^SSU("SSUSR","Name",sn(1),sn(2))=tempn
map1dun q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(157)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(157)
 q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0DBdun
 s %mmmsqld(4)=""
%0DBk1 s %mmmsqld(4)=$o(^TTAB("UA",%mmmsqld(1),1,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0DBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1581(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0DBk1
%0DBdun 
%0DAdun 
 q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0EBdun
 s %mmmsqld(4)=""
%0EBk1 s %mmmsqld(4)=$o(^TTAB("UA",%mmmsqld(1),3,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0EBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1601(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0EBk1
%0EBdun 
%0EAdun 
 q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0FBdun
 s %mmmsqld(4)=""
%0FBk1 s %mmmsqld(4)=$o(^TTAB("UA",%mmmsqld(1),2,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0FBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt1591(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0FBk1
%0FBdun 
%0FAdun 
 q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0GBdun
 s %mmmsqld(4)=""
%0GBk1 s %mmmsqld(4)=$o(^SSU("SSUSR",1,%mmmsqld(1),"CRYST",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0GBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0GBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0GBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2191(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0GBk1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0HBdun
 s %mmmsqld(4)=""
%0HBk1 s %mmmsqld(4)=$o(^SSU("SSUSR",1,%mmmsqld(1),"REP",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0HBdun
 i 1>%mmmsqld(4),%mmmsqld(4)=+%mmmsqld(4) g %0HBk1
 i %mmmsqld(4)'=+%mmmsqld(4) g %0HBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2181(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0HBk1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0IBdun
 s %mmmsqld(4)=""
%0IBk1 s %mmmsqld(4)=$o(^SSU("SSUSR",1,%mmmsqld(1),"UR",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0IBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2421(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0IBk1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0JBdun
 s %mmmsqld(4)=""
%0JBk1 s %mmmsqld(4)=$o(^TTAB("UA",%mmmsqld(1),4,%mmmsqld(4)))
 i %mmmsqld(4)="" g %0JBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt2301(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0JBk1
%0JBdun 
%0JAdun 
 q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0KBdun
 s %mmmsqld(4)=""
%0KBk1 s %mmmsqld(4)=$o(^TTAB("UA",%mmmsqld(1),"5",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0KBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt5171(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0KBk1
%0KBdun 
%0KAdun 
 q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Lerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0LBdun
 s %mmmsqld(4)=""
%0LBk1 s %mmmsqld(4)=$o(^SSU("SSUSR",1,%mmmsqld(1),"VQ",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0LBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt5241(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0LBk1
%0LBdun 
%0LAdun 
 q
%0Lerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0LAdun
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Merr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0MBdun
 s %mmmsqld(4)=""
%0MBk1 s %mmmsqld(4)=$o(^SSU("SSUSR",1,%mmmsqld(1),"PH",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0MBdun
 i %mmmsqld(4)'=+%mmmsqld(4) g %0MBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt6431(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0MBk1
%0MBdun 
%0MAdun 
 q
%0Merr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0MAdun
%0No n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val  ;  Code for SQL: 
 s %mmmsqlE=$zt,$zt="%0Nerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(%data(1),$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(%data(1),2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)="" g %0NBdun
 s %mmmsqld(4)=""
%0NBk1 s %mmmsqld(4)=$o(^SSU("SSUSR",1,%mmmsqld(1),"LOG",%mmmsqld(4)))
 i %mmmsqld(4)="" g %0NBdun
 i %mmmsqld(4)'=+%mmmsqld(4) g %0NBdun
 s %mmmsqld(3)=(%mmmsqld(1))_"||"_(%mmmsqld(4))
 d delete^mt6691(%mmmsqld(3),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
 g %0NBk1
%0NBdun 
%0NAdun 
 q
%0Nerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0NAdun
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
  d %0Do^mt1571  s %didit=1
  d %0Eo^mt1571  s %didit=1
  d %0Fo^mt1571  s %didit=1
  d %0Go^mt1571  s %didit=1
  d %0Ho^mt1571  s %didit=1
  d %0Io^mt1571  s %didit=1
  d %0Jo^mt1571  s %didit=1
  d %0Ko^mt1571  s %didit=1
  d %0Lo^mt1571  s %didit=1
  d %0Mo^mt1571  s %didit=1
  d %0No^mt1571  s %didit=1
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(157)
 q
%0OBr6 s $P(%dataold(23),$C(1))=$$CT023^at157($g(%dataold(2))) q  ;  Code for update (get old values) of table: SS_User
%0OBs1 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0OBs2 s %val=$p("No Security|SJOG|IVREA","|",$l($p("|1|2|3|","|"_%val_"|"),"|")) q
%0OBs3 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0OBs4 s %val=$p("Specimen|DayBook","|",$l($p("|S|D|","|"_%val_"|"),"|")) q
%0OBs5 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%0Oo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Oerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %dataold(2)=$p($g(%dataold(1)),"||",1,1)
 i %dataold(2)'="",$d(^SSU("SSUSR",1,%dataold(2)))
 e  g %0OBdun
 s %mmmsqln=$g(^SSU("SSUSR",1,%dataold(2)))
 s %dataold(2)=$p(%mmmsqln,"^",1) s %dataold(3)=$p(%mmmsqln,"^",2) s %dataold(4)=$p(%mmmsqln,"^",4) s %dataold(5)=$p(%mmmsqln,"^",5) s %dataold(6)=$p(%mmmsqln,"^",6) s %dataold(7)=$p(%mmmsqln,"^",7) s %dataold(8)=$p(%mmmsqln,"^",8) s %dataold(9)=$p(%mmmsqln,"^",3) s %dataold(10)=$p(%mmmsqln,"^",9)
 s %dataold(11)=$p(%mmmsqln,"^",10) s %dataold(12)=$p(%mmmsqln,"^",11) s %dataold(13)=$p(%mmmsqln,"^",12) s %dataold(14)=$p(%mmmsqln,"^",13) s %dataold(15)=$p(%mmmsqln,"^",14) s %dataold(16)=$p(%mmmsqln,"^",15) s %dataold(17)=$p(%mmmsqln,"^",16) s %dataold(18)=$p(%mmmsqln,"^",17) s %dataold(19)=$p(%mmmsqln,"^",18)
 s %dataold(20)=$p(%mmmsqln,"^",19) s %dataold(21)=$p(%mmmsqln,"^",20) s %dataold(22)=$p(%mmmsqln,"^",21) s %dataold(24)=$p(%mmmsqln,"^",22) s %dataold(25)=$p(%mmmsqln,"^",23) s:%dataold(25)'="" %dataold(25)=+%dataold(25)
 
 s %val=$P(%dataold(7),$C(1)) d %0OBs1:%val'="" s $P(%dataold(7),$C(1),2)=%val
 s %val=$P(%dataold(8),$C(1)) d %0OBs1:%val'="" s $P(%dataold(8),$C(1),2)=%val
 s %val=$P(%dataold(10),$C(1)) d %0OBs2:%val'="" s $P(%dataold(10),$C(1),2)=%val
 s %val=$P(%dataold(15),$C(1)) d %0OBs1:%val'="" s $P(%dataold(15),$C(1),2)=%val
 s %val=$P(%dataold(21),$C(1)) d %0OBs3:%val'="" s $P(%dataold(21),$C(1),2)=%val
 s %val=$P(%dataold(22),$C(1)) d %0OBs1:%val'="" s $P(%dataold(22),$C(1),2)=%val
 s %val=$P(%dataold(24),$C(1)) d %0OBs4:%val'="" s $P(%dataold(24),$C(1),2)=%val
 s %val=$P(%dataold(25),$C(1)) d %0OBs5:%val'="" s $P(%dataold(25),$C(1),2)=%val
 d %0OBr6
 s %val=$P(%dataold(23),$C(1)) d %0OBs3:%val'="" s $P(%dataold(23),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Oc
%0OBdun 
%0OAdun 
%0Oc q
%0Oerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0OAdun
getold(%dataold) g %0Oo
lookupQ d %RSQcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",6),1,6)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupQ
%RSQcuro s SQLCODE=$s($g(%RSQcurc):-101,1:0) q:SQLCODE'=0
 s %RSQcurc=1 k %RSQcurm
 s %RSQcurE=$zt,%RSQcurf=0,%RSQcure=0,%RSQcurL=""
 q
%0Qfirst   ;  init
 ; asl MOD# 2
 s %datars(2)=""
%0QBk1 s %datars(2)=$o(^SSU("SSUSR",1,%datars(2)))
 i %datars(2)="" g %0QBdun
 s %RSQcurn=$g(^SSU("SSUSR",1,%datars(2)))
 s %datars(3)=$p(%RSQcurn,"^",2)
 s %datars(1)=(%datars(2))
 s SQLCODE=0 s:SQLCODE=0 %RSQcurf=%RSQcurf+1 s %RSQcurc=10 q
%RSQcurf i '$g(%RSQcurc) s SQLCODE=-102 q
 i %RSQcurc=100 s SQLCODE=100 q
 s $zt="%0Qerr^"_$zn s $ze="" n %val g %0Qfirst:%RSQcurc=1
 g %0QBk1
%0QBdun 
%0QAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSQcurc=100 q
%RSQcurc i '$g(%RSQcurc) s SQLCODE=-102 q
 k %RSQcurc,%RSQcurd,%RSQcure,%RSQcurE,%RSQcurf,%RSQcurl,%RSQcurL,%RSQcurn,%RSQcurr,%RSQcurR s SQLCODE=0 q
%0Qerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSQcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0QAdun
lookupR d %RSRcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",6),1,6)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupR
%RSRcuro s SQLCODE=$s($g(%RSRcurc):-101,1:0) q:SQLCODE'=0
 s %RSRcurc=1 k %RSRcurm
 s %RSRcurE=$zt,%RSRcurf=0,%RSRcure=0,%RSRcurL=""
 s %RSRcurd(7)=$P(%data(2),$C(1))
 s:%RSRcurd(7)="" %RSRcurd(7)=$e(%data(2),2,99999)
 q
%0Rfirst   ;  init
 ; asl MOD# 2
 s %datars(2)=%RSRcurd(7)
 i %datars(2)'="",$d(^SSU("SSUSR",1,%datars(2))) g %0RBg1
%0RBk1 s %datars(2)=$o(^SSU("SSUSR",1,%datars(2)))
 i %datars(2)="" g %0RBdun
%0RBg1 i (%RSRcurd(7)?1n.n),":"']%datars(2) g %0RBdun
 i '(%RSRcurd(7)=$e(%datars(2),1,$l(%RSRcurd(7)))) g:(%RSRcurd(7)?1n.n) %0RBk1 g %0RBdun
 s %RSRcurn=$g(^SSU("SSUSR",1,%datars(2)))
 s %datars(3)=$p(%RSRcurn,"^",2)
 s %datars(1)=(%datars(2))
 s SQLCODE=0 s:SQLCODE=0 %RSRcurf=%RSRcurf+1 s %RSRcurc=10 q
%RSRcurf i '$g(%RSRcurc) s SQLCODE=-102 q
 i %RSRcurc=100 s SQLCODE=100 q
 s $zt="%0Rerr^"_$zn s $ze="" n %val g %0Rfirst:%RSRcurc=1
 g %0RBk1
%0RBdun 
%0RAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSRcurc=100 q
%RSRcurc i '$g(%RSRcurc) s SQLCODE=-102 q
 k %RSRcurc,%RSRcurd,%RSRcure,%RSRcurE,%RSRcurf,%RSRcurl,%RSRcurL,%RSRcurn,%RSRcurr,%RSRcurR s SQLCODE=0 q
%0Rerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSRcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0RAdun
lookupS d %RSScurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",6),1,6)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupS
%RSScuro s SQLCODE=$s($g(%RSScurc):-101,1:0) q:SQLCODE'=0
 s %RSScurc=1 k %RSScurm
 s %RSScurE=$zt,%RSScurf=0,%RSScure=0,%RSScurL=""
 s %RSScurd(8)=$P(%data(3),$C(1))
 q
%0Sfirst   ;  init
 s %RSScurd(9)=$$ALPHAUP(%RSScurd(8))
 ; asl MOD# 2
 s %RSScurd(7)=%RSScurd(9)
 i %RSScurd(7)'="",$d(^SSU("SSUSR","Name",%RSScurd(7))) g %0SBg1
%0SBk1 s %RSScurd(7)=$o(^SSU("SSUSR","Name",%RSScurd(7)))
 i %RSScurd(7)="" g %0SBdun
%0SBg1 i (%RSScurd(9)?1n.n),":"']%RSScurd(7) g %0SBdun
 i '(%RSScurd(9)=$e(%RSScurd(7),1,$l(%RSScurd(9)))) g:(%RSScurd(9)?1n.n) %0SBk1 g %0SBdun
 s %datars(2)=""
%0SBk2 s %datars(2)=$o(^SSU("SSUSR","Name",%RSScurd(7),%datars(2)))
 i %datars(2)="" g %0SBk1
 s %datars(1)=(%datars(2))
 s %datars(2)=$p($g(%datars(1)),"||",1,1)
 i %datars(2)'="",$d(^SSU("SSUSR",1,%datars(2)))
 e  g %0SBk2
 s %RSScurn=$g(^SSU("SSUSR",1,%datars(2)))
 s %datars(3)=$p(%RSScurn,"^",2)
 s SQLCODE=0 s:SQLCODE=0 %RSScurf=%RSScurf+1 s %RSScurc=10 q
%RSScurf i '$g(%RSScurc) s SQLCODE=-102 q
 i %RSScurc=100 s SQLCODE=100 q
 s $zt="%0Serr^"_$zn s $ze="" n %val g %0Sfirst:%RSScurc=1
 g %0SBk2
%0SBdun 
%0SAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSScurc=100 q
%RSScurc i '$g(%RSScurc) s SQLCODE=-102 q
 k %RSScurc,%RSScurd,%RSScure,%RSScurE,%RSScurf,%RSScurl,%RSScurL,%RSScurn,%RSScurr,%RSScurR s SQLCODE=0 q
%0Serr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSScurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0SAdun
selitmS  ; entry point to select the Row Selection Item
 i $c(1)'[$g(%data(2)) s item=2 q
 i $c(1)'[$g(%data(3)) s item=3 q
 s item=0 f  s item=$o(%data(item)) q:item=""  i $c(1)'[%data(item) s item=1 q
 s item=$s(item=1:"",1:1) q
 s item="" q
code23 ; compute code of field SSUSR_DateOfLastPasswordChange
 s $p(%data(23),$c(1))=""
 s $p(%data(23),$c(1))=$$CT023^at157($g(%data(2)))
 q
comp23 ; entry point to do computed field SSUSR_DateOfLastPasswordChange
 n %oldval q:(","_$g(trak)_",")[(",23,")
 s %oldval=$g(%data(23)) d code23 s %ok=1 i $g(%data(23))=%oldval q
 s %val=%data(23)
 i $p(%val,$c(1))=$p(%oldval,$c(1)),$p(%val,$c(1))="",$p(%val,$c(1),2)'="" s %val=$p(%val,$c(1),2) d fde21 s $p(%data(23),$c(1))=%val
 s %val=$p($g(%data(23)),$c(1)) d:%val'="" fdv21^mt1572 s:'%ok %data(23)="" 
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","SSUSR_DateOfLastPasswordChange","",%msg) q
 s %val=$p(%data(23),$c(1))
 d:%val'="" fdi21^mt1572 s $p(%data(23),$c(1),2)=%val
 i $g(%data(23))="",%oldval="" q
 s:'$d(%edit(23)) %edit(23)=%oldval k:$g(%data(23))=$g(%edit(23)) %edit(23)
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"SS_User"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="SS_User1 Row ID" d %mdiag(%oper,-106,"Fld Int","Req","SSUSR_RowId","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(2)) s %ok="Initials (Short Name)" d %mdiag(%oper,-106,"Fld Int","Req","SSUSR_Initials","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(3)) s %ok="Name" d %mdiag(%oper,-106,"Fld Int","Req","SSUSR_Name","",%ok) s %msg=%ok,%ok=0
 i $c(1,1)[$g(%data(7)) s %ok="Active" d %mdiag(%oper,-106,"Fld Int","Req","SSUSR_Active","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field SSUSR_Initials
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field SSUSR_Initials
ini2 ; internal validation code and uniqueness, also int-ext
 d fdv2^mt1572 q:'%ok
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table SS_User
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt1572 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate^mt1572 g:'%ok rowiderr:'iform
 d intext^mt1572
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp23^mt1571
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde10 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="1291",irn=157,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,157,2,1291,36,"get",%val))
 n found s found=0
 i 'found,$f("|No Security|SJOG|IVREA|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("1|2|3","|",$l($p("|No Security|SJOG|IVREA|","|"_%val_"|"),"|"))
 q
fde21 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde24 ; external to internal conversion code
 n %DIR,%dir,ifn,iform,irn s ifn="4991",irn=157,iform=0 s %DIR=$zu(5) s %dir=%DIR
 s %ok=1 i $g(SQLCODE)="form" n %DIR,%dir s %DIR=$zu(5) s %dir=%DIR d mu^%qcfrow1 d:%ok  q
 . s %newext=$g(^[%dir]mdd(1,157,2,4991,36,"get",%val))
 n found s found=0
 i 'found,$f("|Specimen|DayBook|","|"_%val_"|") s found=1
 i 'found s %val="|~~|NULL|~~|" q
 s %val=$p("S|D","|",$l($p("|Specimen|DayBook|","|"_%val_"|"),"|"))
 q
fde25 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde7 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=7 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_Active","",$g(%msg))
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=8 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_Supervisor","",$g(%msg))
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=10 d etiok
 . s %msg="" d fde10 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_PracticeSecurityType","",$g(%msg))
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) s %data(11)=%val
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) s %data(13)=%val
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) s %data(14)=%val
 i $d(%data(15)),$p(%data(15),$c(1))="",$p(%data(15),$c(1),2)'="" s %val=$p(%data(15),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=15 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_SupervisorForBB","",$g(%msg))
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) s %data(16)=%val
 i $d(%data(17)),$p(%data(17),$c(1))="",$p(%data(17),$c(1),2)'="" s %val=$p(%data(17),$c(1),2) s %data(17)=%val
 i $d(%data(18)),$p(%data(18),$c(1))="",$p(%data(18),$c(1),2)'="" s %val=$p(%data(18),$c(1),2) s %data(18)=%val
 i $d(%data(19)),$p(%data(19),$c(1))="",$p(%data(19),$c(1),2)'="" s %val=$p(%data(19),$c(1),2) s %data(19)=%val
 i $d(%data(20)),$p(%data(20),$c(1))="",$p(%data(20),$c(1),2)'="" s %val=$p(%data(20),$c(1),2) s %data(20)=%val
 i $d(%data(21)),$p(%data(21),$c(1))="",$p(%data(21),$c(1),2)'="" s %val=$p(%data(21),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=21 d etiok
 . s %msg="" d fde21 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_DateOfLastLogon","",$g(%msg))
 i $d(%data(22)),$p(%data(22),$c(1))="",$p(%data(22),$c(1),2)'="" s %val=$p(%data(22),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=22 d etiok
 . s %msg="" d fde7 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_ChangePassword","",$g(%msg))
 i $d(%data(23)),$p(%data(23),$c(1))="",$p(%data(23),$c(1),2)'="" s %val=$p(%data(23),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=23 d etiok
 . s %msg="" d fde21 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_DateOfLastPasswordChange","",$g(%msg))
 i $d(%data(24)),$p(%data(24),$c(1))="",$p(%data(24),$c(1),2)'="" s %val=$p(%data(24),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=24 d etiok
 . s %msg="" d fde24 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_PETable","",$g(%msg))
 i $d(%data(25)),$p(%data(25),$c(1))="",$p(%data(25),$c(1),2)'="" s %val=$p(%data(25),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=25 d etiok
 . s %msg="" d fde25 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","SSUSR_NumberOfFailedLogins","",$g(%msg))
 q
 g ^mt1572
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
