<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="mt401" type="INT" languagemode="0"><![CDATA[
mt401  ; Compiled June 26, 2008 14:26:27 for Cache for Windows
delete(%rowid,%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%data(1)=%rowid,tupkill=1
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt401(.%edit) i SQLCODE s SQLCODE=-106 g gunlock
 d trig0C^mt401
 d file
 g gunlock
insert(%check) n %data,%edit,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1,%edit=1
 d insertnw^mt401(+%check=1) i '%ok s SQLCODE=-104 q
winsert i $c(1)[%data(1),$g(%data(2))'="" d
 . s %data(1)=$g(%data(2))
 . d insertnw^mt401(+%check=1,0,1) i '%ok s SQLCODE=-104 q
 s %ROWID=%data(1)
 d:%check'["nolock" glock q:SQLCODE
 d:%check uniqfile(-104) i '%ok s SQLCODE=-104 g gunlock
 i +%check d required^mt401 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0A^mt401
 g gunlock
update(%rowid,%check,%copyedi) n icol,ir,tupkill,iform,%ok k %mdiag s db=$c(1),SQLCODE=0,%ok=1
 i '%copyedi f icol=0:1:16 k:'$d(%edit(icol)) %data(icol)
 s %ROWID=%rowid d:%check'["nolock" glock q:SQLCODE  d getold^mt401(.%edit) i SQLCODE s SQLCODE=-109 g gunlock
 f icol=0:1:16 i '$d(%data(icol)),$d(%edit(icol)) s %data(icol)=%edit(icol) d:$d(%edit(icol,1))  k %edit(icol)
 . f ir=1:1:%edit(icol) s %data(icol,ir)=%edit(icol,ir)
 d uniqfile(-105) i '%ok s SQLCODE=-105 g gunlock
 d updatenw^mt401(%check) i '%ok s SQLCODE=-105 g gunlock
 i +%check d required^mt401 i '%ok s SQLCODE=-108 g gunlock
 d file
 d trig0B^mt401
 g gunlock
lock(%ROWID)   ;  user entry
glock q:$c(1)[%ROWID
 l +^TTAB("CC",%ROWID):5 e  s SQLCODE=-110
 q
unlock(%ROWID)   ;  user entry
gunlock q:%check["nolock"
 q:$c(1)[%ROWID
 l -^TTAB("CC",%ROWID)
 q
file n subs,tempn,irep,x,node,sn s %file=1,sn=0
 i $g(tupkill) k ^TTAB("CC",%edit(2))
 g:$g(tupkill) maps
 s:$g(%edit) tempn=""
 i $d(%edit(3)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",1)=$g(%data(3))
 i $d(%edit(4)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",2)=$g(%data(4))
 i $d(%edit(5)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",3)=$g(%data(5))
 i $d(%edit(6)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",4)=$g(%data(6))
 i $d(%edit(7)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",5)=$g(%data(7))
 i $d(%edit(8)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",6)=$g(%data(8))
 i $d(%edit(9)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",7)=$g(%data(9))
 i $d(%edit(10)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",8)=$g(%data(10))
 i $d(%edit(11)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",9)=$p($g(%data(11)),$c(1))
 i $d(%edit(12)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",10)=$g(%data(12))
 i $d(%edit(13)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",11)=$p($g(%data(13)),$c(1))
 i $d(%edit(14)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",12)=$g(%data(14))
 i $d(%edit(16)) s:'($d(tempn)#2) tempn=$g(^TTAB("CC",%data(2))) s $p(tempn,"\",13)=$p($g(%data(16)),$c(1))
 s:$d(tempn)#2 ^TTAB("CC",%data(2))=tempn
maps ; 
 s node=1,tempn=""
 i '$g(%edit) s sn(1)=$s($d(%edit(11)):$p(%edit(11),$c(1),1),1:$p($g(%data(11)),$c(1),1)) i sn(1)'="" s sn(2)=$s($d(%edit(2)):%edit(2),1:$g(%data(2))) i sn(2)'=""
 i  i $d(^TTABi("CC",sn(1),sn(2))) s:'$g(tupkill) node=0,tempn=^TTABi("CC",sn(1),sn(2)) k ^TTABi("CC",sn(1),sn(2))
 i '$g(tupkill) s sn(1)=$p($g(%data(11)),$c(1),1) i sn(1)'="" s sn(2)=$g(%data(2)) i sn(2)'=""
 e  g map1dun
 s ^TTABi("CC",sn(1),sn(2))=tempn
map1dun q
trig0A n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0A i $d(%skip) g trgdoneA
trgdoneA q  ;  trigger done
trigA0A s %didit=1
 i $$insert^SSAUDIT(40)
 q
trig0B n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0B i $d(%skip) g trgdoneB
trgdoneB q  ;  trigger done
trigA0B s %didit=1
 i $$update^SSAUDIT(40)
 q
trig0C n %ROWID,%didit,SQLCODE s %didit="" k %skip
 d trigA0C i $d(%skip) g trgdoneC
trgdoneC q  ;  trigger done
trigA0C s %didit=1
 i $$delete^SSAUDIT(40)
 q
%0DBr4 k %dataold(15)  ;  Code for update (get old values) of table: CT_CentreCode
 n cnt s cnt=0
 i $g(%dataold(4))'="" s cnt=cnt+1,%dataold(15,cnt)=$g(%dataold(4))
 i $g(%dataold(5))'="" s cnt=cnt+1,%dataold(15,cnt)=$g(%dataold(5))
 i $g(%dataold(6))'="" s cnt=cnt+1,%dataold(15,cnt)=$g(%dataold(6))
 i $g(%dataold(7))'="" s cnt=cnt+1,%dataold(15,cnt)=$g(%dataold(7))
 k cnt
 n %i,%maxrep,%ok s %maxrep=$o(%dataold(15,""),-1) s:%maxrep'="" %dataold(15)=%maxrep
 s %maxrep=0,%ok=$g(%dataold(15))
 f %i=1:1:%ok i $g(%dataold(15,%i))'="" s %maxrep=%maxrep+1 s:%maxrep'=%i %dataold(15,%maxrep)=$g(%dataold(15,%i))
 f %i=%maxrep+1:1:%ok k %dataold(15,%i)
 s:%maxrep'="" %dataold(15)=%maxrep q
%0DBs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0DBs2 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4) q
%0DBs3 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0Do n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Derr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%rowid,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %dataold(1)=%mmmsqld(3)
 s %dataold(2)=$p($g(%dataold(1)),"||",1,1)
 i %dataold(2)'="",$d(^TTAB("CC",%dataold(2)))
 e  g %0DBdun
 s %mmmsqln=$g(^TTAB("CC",%dataold(2)))
 s %dataold(3)=$p(%mmmsqln,"\",1) s %dataold(4)=$p(%mmmsqln,"\",2) s %dataold(5)=$p(%mmmsqln,"\",3) s %dataold(6)=$p(%mmmsqln,"\",4) s %dataold(7)=$p(%mmmsqln,"\",5) s %dataold(8)=$p(%mmmsqln,"\",6) s %dataold(9)=$p(%mmmsqln,"\",7) s %dataold(10)=$p(%mmmsqln,"\",8)
 s %dataold(11)=$p(%mmmsqln,"\",9) s:%dataold(11)'="" %dataold(11)=+%dataold(11) s %dataold(12)=$p(%mmmsqln,"\",10) s %dataold(13)=$p(%mmmsqln,"\",11) s %dataold(14)=$p(%mmmsqln,"\",12) s %dataold(16)=$p(%mmmsqln,"\",13)
 
 s %val=$P(%dataold(11),$C(1)) d %0DBs1:%val'="" s $P(%dataold(11),$C(1),2)=%val
 s %val=$P(%dataold(13),$C(1)) d %0DBs2:%val'="" s $P(%dataold(13),$C(1),2)=%val
 s %val=$P(%dataold(16),$C(1)) d %0DBs3:%val'="" s $P(%dataold(16),$C(1),2)=%val
 d %0DBr4
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Dc
%0DBdun 
%0DAdun 
%0Dc q
%0Derr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0DAdun
getold(%dataold) g %0Do
lookupG d %RSGcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",4),1,4)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupG
%RSGcuro s SQLCODE=$s($g(%RSGcurc):-101,1:0) q:SQLCODE'=0
 s %RSGcurc=1 k %RSGcurm
 s %RSGcurE=$zt,%RSGcurf=0,%RSGcure=0,%RSGcurL=""
 q
%0Gfirst   ;  init
 ; asl MOD# 2
 s %datars(2)=""
%0GBk1 s %datars(2)=$o(^TTAB("CC",%datars(2)))
 i %datars(2)="" g %0GBdun
 s %RSGcurn=$g(^TTAB("CC",%datars(2)))
 s %datars(3)=$p(%RSGcurn,"\",1)
 s %datars(1)=(%datars(2))
 s SQLCODE=0 s:SQLCODE=0 %RSGcurf=%RSGcurf+1 s %RSGcurc=10 q
%RSGcurf i '$g(%RSGcurc) s SQLCODE=-102 q
 i %RSGcurc=100 s SQLCODE=100 q
 s $zt="%0Gerr^"_$zn s $ze="" n %val g %0Gfirst:%RSGcurc=1
 g %0GBk1
%0GBdun 
%0GAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSGcurc=100 q
%RSGcurc i '$g(%RSGcurc) s SQLCODE=-102 q
 k %RSGcurc,%RSGcurd,%RSGcure,%RSGcurE,%RSGcurf,%RSGcurl,%RSGcurL,%RSGcurn,%RSGcurr,%RSGcurR s SQLCODE=0 q
%0Gerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSGcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
lookupH d %RSHcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",4),1,4)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupH
%RSHcuro s SQLCODE=$s($g(%RSHcurc):-101,1:0) q:SQLCODE'=0
 s %RSHcurc=1 k %RSHcurm
 s %RSHcurE=$zt,%RSHcurf=0,%RSHcure=0,%RSHcurL=""
 s %RSHcurd(7)=$P(%data(2),$C(1))
 s:%RSHcurd(7)="" %RSHcurd(7)=$e(%data(2),2,99999)
 q
%0Hfirst   ;  init
 ; asl MOD# 2
 s %datars(2)=%RSHcurd(7)
 i %datars(2)'="",$d(^TTAB("CC",%datars(2))) g %0HBg1
%0HBk1 s %datars(2)=$o(^TTAB("CC",%datars(2)))
 i %datars(2)="" g %0HBdun
%0HBg1 i (%RSHcurd(7)?1n.n),":"']%datars(2) g %0HBdun
 i '(%RSHcurd(7)=$e(%datars(2),1,$l(%RSHcurd(7)))) g:(%RSHcurd(7)?1n.n) %0HBk1 g %0HBdun
 s %RSHcurn=$g(^TTAB("CC",%datars(2)))
 s %datars(3)=$p(%RSHcurn,"\",1)
 s %datars(1)=(%datars(2))
 s SQLCODE=0 s:SQLCODE=0 %RSHcurf=%RSHcurf+1 s %RSHcurc=10 q
%RSHcurf i '$g(%RSHcurc) s SQLCODE=-102 q
 i %RSHcurc=100 s SQLCODE=100 q
 s $zt="%0Herr^"_$zn s $ze="" n %val g %0Hfirst:%RSHcurc=1
 g %0HBk1
%0HBdun 
%0HAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSHcurc=100 q
%RSHcurc i '$g(%RSHcurc) s SQLCODE=-102 q
 k %RSHcurc,%RSHcurd,%RSHcure,%RSHcurE,%RSHcurf,%RSHcurl,%RSHcurL,%RSHcurn,%RSHcurr,%RSHcurR s SQLCODE=0 q
%0Herr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSHcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
lookupI d %RSIcurf i SQLCODE=100 s tuplen=tuplen_"done" q
 i SQLCODE'=0 s tuplen=tuplen_"done" q
 s tuplen=tuplen+1,$p(tuple(tuplen),$c(1),2)=%datars(1)
 s tuple(tuplen,1)=$e(%datars(2)_$j("",4),1,4)_"  "_$e(%datars(3)_$j("",30),1,30)
 s $p(tuple(tuplen),$c(1),1)=1,$p(tuple(tuplen),$c(1),3)=x1+1+1 i tmp'<(tresh*1) s max=0 q
 s tmp=tmp+1 g lookupI
%RSIcuro s SQLCODE=$s($g(%RSIcurc):-101,1:0) q:SQLCODE'=0
 s %RSIcurc=1 k %RSIcurm
 s %RSIcurE=$zt,%RSIcurf=0,%RSIcure=0,%RSIcurL=""
 s %RSIcurd(8)=$P(%data(3),$C(1))
 l +^mtemp s %RSIcurt(1)=$zp(^mtemp(" "))+1,^(%RSIcurt(1))="" l -^mtemp
 s %RSIcurd(9)=$$ALPHAUP(%RSIcurd(8))
 q
%0Ifirst   ;  init
 k ^mtemp(%RSIcurt(1),0)
 ; asl MOD# 3
 d %0IBMod
 s %RSIcurs(7)=""
%0ICk1 s %RSIcurs(7)=$o(^mtemp(%RSIcurt(1),0,%RSIcurs(7)))
 i %RSIcurs(7)="" g %0ICdun
 s %RSIcurd(7)=$s(%RSIcurs(7)=" ":"",1:%RSIcurs(7))
 s %RSIcurs(1)=""
%0ICk2 s %RSIcurs(1)=$o(^mtemp(%RSIcurt(1),0,%RSIcurs(7),%RSIcurs(1)))
 i %RSIcurs(1)="" g %0ICk1
 s %datars(1)=$s(%RSIcurs(1)=" ":"",1:%RSIcurs(1))
 s %RSIcurn=$g(^mtemp(%RSIcurt(1),0,%RSIcurs(7),%RSIcurs(1)))
 s %datars(2)=$p(%RSIcurn,"|~|",1) s %datars(3)=$p(%RSIcurn,"|~|",2)
 s SQLCODE=0 s:SQLCODE=0 %RSIcurf=%RSIcurf+1 s %RSIcurc=10 q
%RSIcurf i '$g(%RSIcurc) s SQLCODE=-102 q
 i %RSIcurc=100 s SQLCODE=100 q
 s $zt="%0Ierr^"_$zn s $ze="" n %val g %0Ifirst:%RSIcurc=1
 g %0ICk2
%0ICdun 
%0IAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %RSIcurc=100 q
%RSIcurc i '$g(%RSIcurc) s SQLCODE=-102 q
 f %RSIcurt=1:1:1 k ^mtemp(%RSIcurt(%RSIcurt))
 k %RSIcurc,%RSIcurd,%RSIcure,%RSIcurE,%RSIcurf,%RSIcurl,%RSIcurL,%RSIcurn,%RSIcurr,%RSIcurR,%RSIcurs,%RSIcurt s SQLCODE=0 q
%0Ierr ; Cursor-Based Error Trap Module...
 s $zt=$g(%RSIcurE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0IBMod ; asl MOD# 2
 n %RSIcurn  ; Nested NEWing for Subquery...
 s %datars(2)=""
%0IBk1 s %datars(2)=$o(^TTAB("CC",%datars(2)))
 i %datars(2)="" g %0IBdun
 s %RSIcurn=$g(^TTAB("CC",%datars(2)))
 s %datars(3)=$p(%RSIcurn,"\",1)
 s %datars(1)=(%datars(2))
 s %RSIcurd(7)=$$ALPHAUP(%datars(3))
 g:'((%RSIcurd(9))=$E((%RSIcurd(7)),1,$L((%RSIcurd(9))))) %0IBk1
 s %RSIcurs(7)=$s(%RSIcurd(7)'="":%RSIcurd(7),1:" "),%RSIcurs(1)=$s(%datars(1)'="":%datars(1),1:" "),%RSIcurn="",$p(%RSIcurn,"|~|",1)=%datars(2),$p(%RSIcurn,"|~|",2)=%datars(3),^mtemp(%RSIcurt(1),0,%RSIcurs(7),%RSIcurs(1))=%RSIcurn
 g %0IBk1
%0IBdun 
 q
selitmI  ; entry point to select the Row Selection Item
 i $c(1)'[$g(%data(2)) s item=2 q
 i $c(1)'[$g(%data(3)) s item=3 q
 s item=0 f  s item=$o(%data(item)) q:item=""  i $c(1)'[%data(item) s item=1 q
 s item=$s(item=1:"",1:1) q
 s item="" q
code15 ; compute code of field CTCC_Address
 k %data(15) s %data(15)=""
 n cnt s cnt=0
 i $g(%data(4))'="" s cnt=cnt+1,%data(15,cnt)=$g(%data(4))
 i $g(%data(5))'="" s cnt=cnt+1,%data(15,cnt)=$g(%data(5))
 i $g(%data(6))'="" s cnt=cnt+1,%data(15,cnt)=$g(%data(6))
 i $g(%data(7))'="" s cnt=cnt+1,%data(15,cnt)=$g(%data(7))
 k cnt
 q
comp15 ; entry point to do computed field CTCC_Address
 n %i,%maxrep,%oldval q:(","_$g(trak)_",")[(",15,")
 s %oldval=$g(%data(15)) f %i=1:1:%oldval s %oldval(%i)=$g(%data(15,%i))
 d code15 s %ok=1,%data(15)=$o(%data(15,""),-1)
 i '%ok s %msg=$$setmsgp^%qarzst2("fvcode",$p($g(%msql),$c(1),5),"") d %mdiag(%oper,-104,"Fld Oprs","Valid","CTCC_Address","",%msg) q
 i $g(%data(15))="",%oldval="" q
 ; pack the multi-line field
 s %maxrep=0,%ok=%data(15)
 f %i=1:1:%ok i $g(%data(15,%i))'="" s %maxrep=%maxrep+1 s:%maxrep'=%i %data(15,%maxrep)=$g(%data(15,%i))
 f %i=%maxrep+1:1:%ok k %data(15,%i)
 s %ok=1 s:%maxrep %data(15)=%maxrep
 q
%mdiag(oper,sqlcode,class,subclass,field,cursor,%msg) ; diagnostics for sql operations
 i '$d(%mdiag) s $p(%mdiag,$c(1),2,3)="NO"_$c(1)_oper
 i ($p(%mdiag,$c(1))+1)>10 s $p(%mdiag,$c(1),2)="YES" q
 s $p(%mdiag,$c(1))=$p(%mdiag,$c(1))+1,%mdiag($p(%mdiag,$c(1)))=$g(sqlcode)_$c(1)_$g(class)_$c(1)_$g(subclass)_$c(1)_"CT_CentreCode"_$c(1)_$g(field)_$c(1)_$g(cursor)_$c(1)_$g(%msg) q
 ; -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
required ; Entry point to check the required fields
 n %lang,%oper k %mdiag s %msg="",%ok=1,%oper=$s($g(%edit):"INSERT",1:"UPDATE"),%lang=$p($g(%msql),$c(1),5) s:'%lang %lang=1
 i $c(1,1)[$g(%data(1)) s %ok="CT_CentreCode Row ID" d %mdiag(%oper,-106,"Fld Int","Req","CTCC_RowId","",%ok) s %msg=%ok,%ok=0
 q
inf2 ; get value for field CTCC_Code
 i $c(1)'[$g(%data(2)),$p(%data(2),$c(1))="" s %val=$p(%data(2),$c(1),2) g ine2
 i $c(1)'[$g(%data(2)) s %val=$p(%data(2),$c(1)) g ini2
 i $c(1)'[$g(%insert(2)),$p(%insert(2),$c(1))="" s %val=$p(%insert(2),$c(1),2) g ine2
 i $c(1)'[$g(%insert(2)) s %val=$p(%insert(2),$c(1)) g ini2
 s %ok=0 q
ine2 ; external to internal conversion code for field CTCC_Code
ini2 ; internal validation code and uniqueness, also int-ext
 s %data(2)=%val
 s:$c(1)[%data(2) %ok=0 s:%ok %edit(2)=""
 q
rowiderr s %ok=0 q
insertnw(%check,iform,recheck) ; insert tuple for table CT_CentreCode
 n %based,%call,%done,%i,%icol,%irep,%irepi,%oper,%val,db,rowerr
 s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),recheck=$g(recheck),%oper="INSERT",rowerr=0 k %mdiag
 i recheck s %val=$g(%data(1)) g inrwid
 i iform s redrawit=0,idexist=2
 i '$d(rptform) n rptform s rptform=0
 s %val=""
 i $c(1)'[$g(%data(1)),$p(%data(1),$c(1))="" s %val=$p(%data(1),$c(1),2) g inrwide
 i $c(1)'[$g(%data(1)) s %val=$p(%data(1),$c(1)) g inrwid
 i $c(1)'[$g(%insert(1)),$p(%insert(1),$c(1))="" s %val=$p(%insert(1),$c(1),2) g inrwide
 i $c(1)'[$g(%insert(1)) s %val=$p(%insert(1),$c(1)) g inrwid
 s %based=""
 d inf2 i '%ok g:'iform rowiderr s rowerr=1
 s %val=$s(rowerr:"",1:$p(%data(2),$c(1))),%based=1 g inrwid
inrwide ; external to internal conversion for rowid
inrwid ; rowid in internal
 i 'rowerr d fdv1^mt401 i '%ok s rowerr=1 g rowiderr
 s %data(1)=%val
 i $c(1)[%data(1) g:'iform rowiderr s rowerr=1
 s:'$g(rowerr) %edit(1)=""
 ; set the based on fields if we did not calculate them
 ; based on already calculated and validated
 g:$g(%based) insarr
 s %val=$p(%data(1),"||",1) g:%val="" rowiderr d ini2 g:'%ok rowiderr
insarr q:$g(recheck)  ; entry point to spin through the %insert array
 s %icol=""
insloop s %icol=$o(%insert(%icol)) g insdef:%icol="",insloop:$d(%data(%icol))
 i ",1,2,"[(","_%icol_",") g insloop
 s %data(%icol)=%insert(%icol) s:+%check %edit(%icol)=""
 i $d(%insert(%icol))>9 g insrep
 g insloop
insrep ; entry point to work on repeating fields in the %insert array
 s %irep=0
insreplp s %irep=%irep+1 g:%irep>%insert(%icol) insloop
 s %data(%icol,%irep)=%insert(%icol,%irep) g insreplp
insdef ; entry point to compile all of the defaults
 d extint g:'%ok rowiderr:'iform i +%check=1 d validate g:'%ok rowiderr:'iform
 d intext^mt401
 g:+%check inscomp
insedit s %icol=""
insedlop s %icol=$o(%insert(%icol)) g inscomp:%icol="",insedlop:$d(%edit(%icol))!(",1,2,"[(","_%icol_",")) s %edit(%icol)="" g insedlop
inscomp ; entry point to calculate all computed fields
 d comp15^mt401
 s %data=%data(1) s:$g(iform) %ok=1 q
etiok i '%ok,'$d(%edit(%icol)) k %data(%icol) s %ok=1 q
 i '%ok s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
 s $p(%data(%icol),$c(1))=%val q
etiokrp i '%ok k %data(%icol,%irep) s %ok=1 q
 s $p(%data(%icol,%irep),$c(1))=%val q
etivalen s %irepi=0 f %irep=1:1:$g(%data(%icol)) i $d(%data(%icol,%irep)) s %irepi=%irepi+1,%data(%icol,%irepi)=%data(%icol,%irep)
 i '$g(%data(%icol))!%irepi s %data(%icol)=%irepi q
 k %data(%icol) q:'$d(%edit(%icol))
 f %irep=1:1:%edit(%icol) s %data(%icol,%irep)=%edit(%icol,%irep)
 s %data(%icol)=%edit(%icol) k %edit(%icol) q
fde11 ; external to internal conversion code
 s %ok=1 n num s num=$$numint^%qarzdt(%val,1,0,"",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q
fde13 ; external to internal conversion code
 s %ok=1 s %val=$$dateint^%qarzdt(%val,4,"") s:%val<0 %ok=0
 q
fde16 ; external to internal conversion code
 s %ok=1 s %val=$s("Yy"[$e(%val):"Y","Nn"[$e(%val):"N",1:"") s:%val="" %ok=0
 q
extint s %ok=1 ; entry point to do all external to internal conversion code
 i $d(%data(1)),$p(%data(1),$c(1))="",$p(%data(1),$c(1),2)'="" s %val=$p(%data(1),$c(1),2) s %data(1)=%val
 i $d(%data(2)),$p(%data(2),$c(1))="",$p(%data(2),$c(1),2)'="" s %val=$p(%data(2),$c(1),2) s %data(2)=%val
 i $d(%data(3)),$p(%data(3),$c(1))="",$p(%data(3),$c(1),2)'="" s %val=$p(%data(3),$c(1),2) s %data(3)=%val
 i $d(%data(4)),$p(%data(4),$c(1))="",$p(%data(4),$c(1),2)'="" s %val=$p(%data(4),$c(1),2) s %data(4)=%val
 i $d(%data(5)),$p(%data(5),$c(1))="",$p(%data(5),$c(1),2)'="" s %val=$p(%data(5),$c(1),2) s %data(5)=%val
 i $d(%data(6)),$p(%data(6),$c(1))="",$p(%data(6),$c(1),2)'="" s %val=$p(%data(6),$c(1),2) s %data(6)=%val
 i $d(%data(7)),$p(%data(7),$c(1))="",$p(%data(7),$c(1),2)'="" s %val=$p(%data(7),$c(1),2) s %data(7)=%val
 i $d(%data(8)),$p(%data(8),$c(1))="",$p(%data(8),$c(1),2)'="" s %val=$p(%data(8),$c(1),2) s %data(8)=%val
 i $d(%data(9)),$p(%data(9),$c(1))="",$p(%data(9),$c(1),2)'="" s %val=$p(%data(9),$c(1),2) s %data(9)=%val
 i $d(%data(10)),$p(%data(10),$c(1))="",$p(%data(10),$c(1),2)'="" s %val=$p(%data(10),$c(1),2) s %data(10)=%val
 i $d(%data(11)),$p(%data(11),$c(1))="",$p(%data(11),$c(1),2)'="" s %val=$p(%data(11),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=11 d etiok
 . s %msg="" d fde11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTCC_DisplaySequence","",$g(%msg))
 i $d(%data(12)),$p(%data(12),$c(1))="",$p(%data(12),$c(1),2)'="" s %val=$p(%data(12),$c(1),2) s %data(12)=%val
 i $d(%data(13)),$p(%data(13),$c(1))="",$p(%data(13),$c(1),2)'="" s %val=$p(%data(13),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=13 d etiok
 . s %msg="" d fde13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTCC_LicenceChange","",$g(%msg))
 i $d(%data(14)),$p(%data(14),$c(1))="",$p(%data(14),$c(1),2)'="" s %val=$p(%data(14),$c(1),2) s %data(14)=%val
 f %irep=1:1:$g(%data(15)) i $d(%data(15,%irep)),$p(%data(15,%irep),$c(1))="",$p(%data(15,%irep),$c(1),2)'="" s %val=$p(%data(15,%irep),$c(1),2) s %data(15,%irep)=%val
 i $d(%data(16)),$p(%data(16),$c(1))="",$p(%data(16),$c(1),2)'="" s %val=$p(%data(16),$c(1),2) d  g:'%ok rowiderr:'iform s %icol=16 d etiok
 . s %msg="" d fde16 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Ext->Int","CTCC_ActiveFlag","",$g(%msg))
 q
fdv1 ; DO field validation (ALL of it)
 s %ok=1 s:'$$uniq1($g(%data(1)),%val) %ok=0,%msg=$$setmsg^%qarzst("UniqueQ") q
fdv11 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTNumIn")
 q:'%ok
 i $l($p(%val,".",2))>0 s %ok=0,%msg=$$setmsg^%qarzst("DTNNDEC")
 q
fdv12 ; DO validation and additional validation code
 n nval s nval=%val d %0Ko
  i SQLCODE'=0 s %ok=0
 q
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Kerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(nval,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(nval,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(4)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(4)'="",$d(^TTAB("SCP-TYPE",%mmmsqld(4)))
 e  g %0KBdun
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Kc
%0KBdun 
%0KAdun 
%0Kc q
%0Kerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0KAdun
fdv13 ; DO validation and additional validation code
 i %val'=+%val s %ok=0,%msg=$$setmsg^%qarzst("DTDatIn")
 q
fdv16 ; DO validation and additional validation code
 i %val'="Y",%val'="N" s %ok=0,%msg=$$setmsg^%qarzst("DTYesIn")
 q
uniq1(%rowid,%unique) n SQLCODE,%val d %0Jo q SQLCODE=100
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(%unique,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(%unique,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(3)
 s %mmmsqld(5)=$p($g(%mmmsqld(1)),"||",1,1)
 i %mmmsqld(5)'="",$d(^TTAB("CC",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(2)=%mmmsqld(1)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
uniqfile(%sqcode) k %mdiag
 i %sqcode=-104,%ok,$c(1)'[$g(%data(1)),'$$uniq1($g(%data(1)),$g(%data(1))) s %ok="CTCC_RowId"_": "_$$setmsg^%qarzst("UniqueQ") d %mdiag("",%sqcode,"","","CTCC_RowId","",%ok)
 q
valok i %ok s $p(%data(%icol),$c(1))=%val q
 s %data(%icol)=%edit(%icol),%ok=1 k %edit(%icol) q
valokrp i %ok s $p(%data(%icol,%irep),$c(1))=%val q
 k %data(%icol,%irep) s %ok=1 q
validate s %ok=1 ; entry point to do all validation code
 i $d(%edit(1)),%data(1)'=%edit(1) s %icol=1 s %val=$p(%data(1),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv1 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTCC_RowId","",$g(%msg))
 i $d(%edit(11)),%data(11)'=%edit(11) s %icol=11 s %val=$p(%data(11),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv11 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTCC_DisplaySequence","",$g(%msg))
 i $d(%edit(12)),%data(12)'=%edit(12) s %icol=12 s %val=$p(%data(12),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv12 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTCC_SCPType_DR","",$g(%msg))
 i $d(%edit(13)),%data(13)'=%edit(13) s %icol=13 s %val=$p(%data(13),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv13 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTCC_LicenceChange","",$g(%msg))
 i $d(%edit(16)),%data(16)'=%edit(16) s %icol=16 s %val=$p(%data(16),$c(1)) i %val'="" d  g:'%ok rowiderr:'iform d valok
 . s %msg="" d fdv16 d:'%ok %mdiag(%oper,-104,"Fld Oprs","Val","CTCC_ActiveFlag","",$g(%msg))
 q
fdi11 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0))
 q
fdi13 s %val=+$g(%val) s:%val<1 %val="" q:%val=""  s %val=$ZDATE(%val,4,-1,4)
 q
fdi16 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"")
 q
intext ; entry point to do all internal to external conversion code
 i $d(%data(1)),%data(1)[$c(1) s %data(1)=$s($p(%data(1),$c(1))'="":$p(%data(1),$c(1)),1:$p(%data(1),$c(1),2))
 i $d(%data(2)),%data(2)[$c(1) s %data(2)=$s($p(%data(2),$c(1))'="":$p(%data(2),$c(1)),1:$p(%data(2),$c(1),2))
 i $d(%data(3)),%data(3)[$c(1) s %data(3)=$s($p(%data(3),$c(1))'="":$p(%data(3),$c(1)),1:$p(%data(3),$c(1),2))
 i $d(%data(4)),%data(4)[$c(1) s %data(4)=$s($p(%data(4),$c(1))'="":$p(%data(4),$c(1)),1:$p(%data(4),$c(1),2))
 i $d(%data(5)),%data(5)[$c(1) s %data(5)=$s($p(%data(5),$c(1))'="":$p(%data(5),$c(1)),1:$p(%data(5),$c(1),2))
 i $d(%data(6)),%data(6)[$c(1) s %data(6)=$s($p(%data(6),$c(1))'="":$p(%data(6),$c(1)),1:$p(%data(6),$c(1),2))
 i $d(%data(7)),%data(7)[$c(1) s %data(7)=$s($p(%data(7),$c(1))'="":$p(%data(7),$c(1)),1:$p(%data(7),$c(1),2))
 i $d(%data(8)),%data(8)[$c(1) s %data(8)=$s($p(%data(8),$c(1))'="":$p(%data(8),$c(1)),1:$p(%data(8),$c(1),2))
 i $d(%data(9)),%data(9)[$c(1) s %data(9)=$s($p(%data(9),$c(1))'="":$p(%data(9),$c(1)),1:$p(%data(9),$c(1),2))
 i $d(%data(10)),%data(10)[$c(1) s %data(10)=$s($p(%data(10),$c(1))'="":$p(%data(10),$c(1)),1:$p(%data(10),$c(1),2))
 i $d(%data(11)),$p(%data(11),$c(1))'="" s %val=$p(%data(11),$c(1)) d fdi11 s $p(%data(11),$c(1),2)=%val
 i $d(%data(12)),%data(12)[$c(1) s %data(12)=$s($p(%data(12),$c(1))'="":$p(%data(12),$c(1)),1:$p(%data(12),$c(1),2))
 i $d(%data(13)),$p(%data(13),$c(1))'="" s %val=$p(%data(13),$c(1)) d fdi13 s $p(%data(13),$c(1),2)=%val
 i $d(%data(14)),%data(14)[$c(1) s %data(14)=$s($p(%data(14),$c(1))'="":$p(%data(14),$c(1)),1:$p(%data(14),$c(1),2))
 f %irep=1:1:$g(%data(15)) i $d(%data(15,%irep)),%data(15,%irep)[$c(1) s %data(15,%irep)=$s($p(%data(15,%irep),$c(1))'="":$p(%data(15,%irep),$c(1)),1:$p(%data(15,%irep),$c(1),2))
 i $d(%data(16)),$p(%data(16),$c(1))'="" s %val=$p(%data(16),$c(1)) d fdi16 s $p(%data(16),$c(1),2)=%val
 q
updatenw(%check,iform) n %i,%icol,%irep,%irepi,%oldval,%oper,%val,db s %ok=1,db=$c(1),%check=+$g(%check),iform=+$g(iform),%oper="UPDATE" k %mdiag
 d:%check'=2 extint g:'%ok rowiderr:'iform i %check=1 d validate g:'%ok rowiderr:'iform
 d:%check'=2 intext^mt401 q:'%ok
 d comp15^mt401
 q
 g ^mt402
UPPER(val) d:'$d(%trans) %trans^%qarztrm q $tr(val,%trans(3),%trans(4))
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
]]></Routine>
</Export>
