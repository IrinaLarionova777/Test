<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTSP" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTSP ; IG 4/5/98 ;MVB Control code access for CT_Species
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTSP(ROWID,skip)
 ; $$open^LVBCTSP(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTSP(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTSP(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTSP(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTSP()
 ; $$insert^LVBCTSP()
 ; $$update^LVBCTSP(ROWID)
 ; $$delete^LVBCTSP(ROWID,Comments)
 ; $$getall^LVBCTSP(Continue)
 ;
  ;---&SQL(DECLARE CTSP CURSOR FOR SELECT * FROM CT_Species
   ;---         WHERE %UPPER(CTSP_Desc) %STARTSWITH :descr)
   ;--- ** SQL PUBLIC Variables: SQLCODE, descr
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_Species VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CT_Species VALUES :PLIST() WHERE CTSP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_Species WHERE CTSP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),descr=$$UPPER^SSUTIL4($g(descr))
  ;---&SQL(OPEN CTSP)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSP0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),descr=$$UPPER^SSUTIL4($g(descr)) K PLIST
  ;---&SQL(FETCH CTSP INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),descr=$g(descr) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,descr) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,descr,p2,p3,p4,p5,p6,p7,p8,p9) N (skip,descr,PLIST) s skip=$g(skip),descr=$g(descr) K ^TMP($zn,$j)
 i $$open(skip,descr)
 f cnt=1:1 Q:$$fetch(skip,descr)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTSP) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSP0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST S ROWID=$G(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_Species WHERE CTSP_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSA(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 Q
 ;
getall(Continue) n (Continue,PLIST) s Continue=$g(Continue)
 i Continue="" k ^TMP($zn,$j) d
 .i $$open("Y")
 .f cnt=1:1 q:$$fetch("Y")  d
 ..s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 .i $$close()
 k PLIST
 s (x,cnt,sum)="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^TMP($zn,$j,x)))>15000  s cnt=cnt+1,PLIST(cnt)=^(x),sum=sum+$l(^(x)) k ^(x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
%CTSP0o s $zt="%CTSP0E" s SQLCODE=$s($g(%CTSP0c):-101,1:0) q:SQLCODE'=0  s %CTSP0d(10)=0 s %CTSP0d(11)=0,%CTSP0d(12)=""
 s %CTSP0d(6)=$g(descr)
 s %CTSP0c=1 q
%CTSP0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTSP0c,%CTSP0d,%CTSP0E,%CTSP0l,%CTSP0n,%CTSP0R,%CTSP0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTSP0d(1)=""
%0ABk1 s %CTSP0d(1)=$o(^TTAB("SP",%CTSP0d(1)))
 i %CTSP0d(1)="" g %0ABdun
 s %CTSP0d(17)=$g(^TTAB("SP",%CTSP0d(1)))
 s %CTSP0d(2)=$p(%CTSP0d(17),"\",1) s %CTSP0d(3)=$p(%CTSP0d(17),"\",2) s %CTSP0d(4)=$p(%CTSP0d(17),"\",3)
 s %CTSP0d(5)=$zu(28,%CTSP0d(2),5)
 g:'(($c(0)[%CTSP0d(6))||(%CTSP0d(6)=$c(32,0)&&($e(%CTSP0d(5))=$c(32)))||(%CTSP0d(6)=$e(%CTSP0d(5),1,$l(%CTSP0d(6))))) %0ABk1
 g:'(%CTSP0d(5)'="") %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("SP",$p(%CTSP0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTSP0d(11)=1,%CTSP0d(12)=$name(^TTAB("SP",$p(%CTSP0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Species for RowID value: "_%CTSP0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTSP0d(8)=$lb(""_%CTSP0d(5))
 i %CTSP0d(1)'="",$d(^TTAB("SP",%CTSP0d(1)))
 e  g %0ACdun
 s %CTSP0d(22)=$g(^TTAB("SP",%CTSP0d(1)))
 s %CTSP0d(2)=$p(%CTSP0d(22),"\",1) s %CTSP0d(3)=$p(%CTSP0d(22),"\",2) s %CTSP0d(4)=$p(%CTSP0d(22),"\",3)
 s %CTSP0d(5)=$zu(28,%CTSP0d(2),5)
 s %CTSP0d(9)=$lb(""_%CTSP0d(5))
 g:%CTSP0d(8)'=%CTSP0d(9) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTSP0d(10)=%CTSP0d(10)+1,%ROWCOUNT=%CTSP0d(10),%ROWID=%CTSP0d(1),%CTSP0c=10 q
%CTSP0f i '$g(%CTSP0c) { s SQLCODE=-102 q  } i %CTSP0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTSP0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTSP0d(10),%CTSP0c=100 q  } g %0Afirst:%CTSP0c=1
%0ACdun i $zu(115,2)=1,$g(%CTSP0d(11))=1 { l -@%CTSP0d(12) s %CTSP0d(11)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTSP0d(10),SQLCODE=100,%CTSP0c=100 q
%CTSP0c i '$g(%CTSP0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTSP0d(10)),1:0)
 i $zu(115,2)=1,$g(%CTSP0d(11))=1 { l -@%CTSP0d(12) } k %CTSP0c,%CTSP0d,%CTSP0E,%CTSP0l,%CTSP0n,%CTSP0R,%CTSP0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTSP0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:5 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTSpecies.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("SP",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTSpecies.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("SP",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:5 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTSpecies.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTSpecies.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTSpecies.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTSpecies.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("SP",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTSpecies.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("SP",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTSpecies.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTSpecies.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTSpecies.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTSpecies.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTSP0f q:SQLCODE'=0
 s PLIST(1)=%CTSP0d(1),PLIST(2)=%CTSP0d(1),PLIST(3)=%CTSP0d(2),PLIST(4)=%CTSP0d(3),PLIST(5)=%CTSP0d(4)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(6)
 i PLIST(2)'="",$d(^TTAB("SP",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(14)=$g(^TTAB("SP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(14),"\",1) s PLIST(4)=$p(%mmmsqld(14),"\",2) s PLIST(5)=$p(%mmmsqld(14),"\",3)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("SP",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^TTAB("SP",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Species for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("SP",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(19)=$g(^TTAB("SP",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(19),"\",1) s PLIST(4)=$p(%mmmsqld(19),"\",2) s PLIST(5)=$p(%mmmsqld(19),"\",3)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
]]></Routine>
</Export>
