<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTSHI" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTSHI ; IG 29/4/98 ; LVB Control data access for CTSHI CT_Schedule_Items
 ;
 ; supported calls:
 ;
 ; $$update^LVBCTSHI(ROWID)
 ; $$select^LVBCTSHI(ROWID,skip)
 ; $$open^LVBCTSHI(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTSHI(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTSHI(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTSHI(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTSHI()
 ;
  ;---&sql(DECLARE CTSHI CURSOR FOR SELECT * FROM CT_Schedule_Items
   ;---         WHERE CTSHI_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
 i $l(par) d
 . ; add new Items
 .s x="" f  s x=$o(^TTAB("IB",x)) q:x=""  i '$d(^TSCH(par,"ITEM",x)) s ^TSCH(par,"ITEM",x)=""
 . ; delete old Items
 .s x="" f  s x=$o(TSCH(par,"ITEM",x)) q:x=""  i '$d(^TTAB("BI",x)) k ^TSCH(par,"ITEM",x)
  ;---&SQL(OPEN CTSHI)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSHI0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k PLIST
  ;---&SQL(FETCH CTSHI INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() n SQLCODE
  ;---&SQL(CLOSE CTSHI)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSHI0c
 q 0
 ;
select(ROWID,skip) s ROWId=$g(ROWId),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM CT_Schedule_Items WHERE CTSHI_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
update(ROWID) d pre("Y") s ROWID=$g(ROWID)
  ;---&sql(UPDATE CT_Schedule_Items VALUES :PLIST() WHERE CTSHI_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Ho
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
pre(xUpdate) d PreSQL^SSUTIL4("","")
 f j=2 S PLIST(j)=$$ALPHAUP^SSUTIL4(PLIST(j))
 Q
 ; Adjust certain fields
adjust d PostSQL^SSUTIL4("")
 q         
%CTSHI0o s $zt="%CTSHI0E" s SQLCODE=$s($g(%CTSHI0c):-101,1:0) q:SQLCODE'=0  s %CTSHI0d(13)=0 s %CTSHI0d(14)=0,%CTSHI0d(15)=""
 s %CTSHI0d(10)=$g(par)
 s %CTSHI0c=1 q
%CTSHI0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTSHI0c,%CTSHI0d,%CTSHI0E,%CTSHI0l,%CTSHI0n,%CTSHI0R,%CTSHI0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTSHI0d(1)=%CTSHI0d(10)
 i %CTSHI0d(1)="" g %0ABdun
 s %CTSHI0d(3)=""
%0ABk1 s %CTSHI0d(3)=$o(^TSCH(%CTSHI0d(1),"ITEM",%CTSHI0d(3)))
 i %CTSHI0d(3)="" g %0ABdun
 s %CTSHI0d(21)=$g(^TSCH(%CTSHI0d(1),"ITEM",%CTSHI0d(3)))
 s %CTSHI0d(4)=$p(%CTSHI0d(21),"\",2) s %CTSHI0d(5)=$p(%CTSHI0d(21),"\",3) s %CTSHI0d(6)=$p(%CTSHI0d(21),"\",1) s %CTSHI0d(7)=$p(%CTSHI0d(21),"\",5) s %CTSHI0d(8)=$p(%CTSHI0d(21),"\",6) s %CTSHI0d(9)=$p(%CTSHI0d(21),"\",4)
 s %CTSHI0d(2)=(%CTSHI0d(1))_"||"_(%CTSHI0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TSCH($p(%CTSHI0d(2),"||",1),"ITEM",$p(%CTSHI0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTSHI0d(14)=1,%CTSHI0d(15)=$name(^TSCH($p(%CTSHI0d(2),"||",1),"ITEM",$p(%CTSHI0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule_Items for RowID value: "_%CTSHI0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTSHI0d(12)=$p(%CTSHI0d(2),"||"),%CTSHI0d(3)=$p(%CTSHI0d(2),"||",2)
 i %CTSHI0d(12)'="",%CTSHI0d(3)'="",$d(^TSCH(%CTSHI0d(12),"ITEM",%CTSHI0d(3)))
 e  g %0ACdun
 s %CTSHI0d(27)=$g(^TSCH(%CTSHI0d(12),"ITEM",%CTSHI0d(3)))
 s %CTSHI0d(4)=$p(%CTSHI0d(27),"\",2) s %CTSHI0d(5)=$p(%CTSHI0d(27),"\",3) s %CTSHI0d(6)=$p(%CTSHI0d(27),"\",1) s %CTSHI0d(7)=$p(%CTSHI0d(27),"\",5) s %CTSHI0d(8)=$p(%CTSHI0d(27),"\",6) s %CTSHI0d(9)=$p(%CTSHI0d(27),"\",4)
 s %CTSHI0d(1)=$p(%CTSHI0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTSHI0d(13)=%CTSHI0d(13)+1,%ROWCOUNT=%CTSHI0d(13),%ROWID=%CTSHI0d(2),%CTSHI0c=10 q
%CTSHI0f i '$g(%CTSHI0c) { s SQLCODE=-102 q  } i %CTSHI0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTSHI0d(13))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTSHI0d(13),%CTSHI0c=100 q  } g %0Afirst:%CTSHI0c=1
%0ACdun i $zu(115,2)=1,$g(%CTSHI0d(14))=1 { l -@%CTSHI0d(15) s %CTSHI0d(14)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTSHI0d(13),SQLCODE=100,%CTSHI0c=100 q
%CTSHI0c i '$g(%CTSHI0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTSHI0d(13)),1:0)
 i $zu(115,2)=1,$g(%CTSHI0d(14))=1 { l -@%CTSHI0d(15) } k %CTSHI0c,%CTSHI0d,%CTSHI0E,%CTSHI0l,%CTSHI0n,%CTSHI0R,%CTSHI0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTSHI0c=100 q
%0Do d %CTSHI0f q:SQLCODE'=0
 s PLIST(0)=%CTSHI0d(1),PLIST(1)=%CTSHI0d(2),PLIST(2)=%CTSHI0d(3),PLIST(3)=%CTSHI0d(4),PLIST(4)=%CTSHI0d(5),PLIST(5)=%CTSHI0d(6),PLIST(6)=%CTSHI0d(7),PLIST(7)=%CTSHI0d(8),PLIST(8)=%CTSHI0d(9)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(11)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(11)
 s %mmmsqld(13)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(13)'="",PLIST(2)'="",$d(^TSCH(%mmmsqld(13),"ITEM",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(21)=$g(^TSCH(%mmmsqld(13),"ITEM",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(21),"\",2) s PLIST(4)=$p(%mmmsqld(21),"\",3) s PLIST(5)=$p(%mmmsqld(21),"\",1) s PLIST(6)=$p(%mmmsqld(21),"\",5) s PLIST(7)=$p(%mmmsqld(21),"\",6) s PLIST(8)=$p(%mmmsqld(21),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TSCH($p(PLIST(1),"||",1),"ITEM",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TSCH($p(PLIST(1),"||",1),"ITEM",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Schedule_Items for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(13)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(13)'="",PLIST(2)'="",$d(^TSCH(%mmmsqld(13),"ITEM",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(27)=$g(^TSCH(%mmmsqld(13),"ITEM",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(27),"\",2) s PLIST(4)=$p(%mmmsqld(27),"\",3) s PLIST(5)=$p(%mmmsqld(27),"\",1) s PLIST(6)=$p(%mmmsqld(27),"\",5) s PLIST(7)=$p(%mmmsqld(27),"\",6) s PLIST(8)=$p(%mmmsqld(27),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TSCH(%mmmsqld(4),"ITEM",%mmmsqld(5)))
 e  g %0HBdun
 s %mmmsqld(13)=$$%getlock^User.CTScheduleItems.T1(%mmmsqld(2)) i '%mmmsqld(13) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TSCH(%mmmsqld(4),"ITEM",%mmmsqld(5)))
 e  g %0HCdun
 k %data
 f icol=0:1:8 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTScheduleItems.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(13)=1 %ReleaseLock^User.CTScheduleItems.T1(%mmmsqld(2)) g %0Hc
%0HCdun 
 d:%mmmsqld(13)=1 %ReleaseLock^User.CTScheduleItems.T1(%mmmsqld(2)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(13))=1 %ReleaseLock^User.CTScheduleItems.T1(%mmmsqld(2)) g %0Hc
]]></Routine>
</Export>
