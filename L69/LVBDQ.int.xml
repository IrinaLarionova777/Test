<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBDQ" type="INT" languagemode="0" generated="1"><![CDATA[
LVBDQ ; IG 29/4/98 ; MVB Control code access for DQ_Questionare
 ;
 ; supported calls:
 ;
 ; $$select^LVBDQ(ROWID,skip)
 ; $$open^LVBDQ(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBDQ(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBDQ(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBDQ(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBDQ()
 ; $$save^LVBDQ(RowID)
 ; $$insert^LVBDQ()
 ; $$update^LVBDQ(RowID)
 ; $$result^LVBDQ(RowID)
 ;
  ;---&SQL(DECLARE DQ CURSOR FOR SELECT * FROM DQ_Questionare
   ;---         WHERE ((DQ_Date = :date) OR (:date is NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, date
save(RowID) n (RowID,PLIST) k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST s rowid=$g(RowID)
 k PLIST
 f j=1:1:$l($g(^TMP($zn,$j,1)),$c(2)) s PLIST(j)=$p(^TMP($zn,$j,1),$c(2),j)
 s PLIST=$o(PLIST(""),-1)
 i $l(rowid) d
 .i $$update(rowid),'$$delall^LVBDQF(rowid) d
 ..f j1=1:1:$l($g(^TMP($zn,$j,2)),$c(2)) s xx=$p(^TMP($zn,$j,2),$c(2),j1) i $l(xx) d
 ...k PLIST
 ...f j2=1:1:$l(xx,$c(28)) s PLIST(j2)=$p(xx,$c(28),j2)
 ...s PLIST=$o(PLIST(""),-1)
 ...i $l(PLIST(3)),$$insert^LVBDQF(rowid)
 i '$l(rowid) d
 .i '$$insert() s rowid=%ROWID d
 ..f j1=1:1:$l($g(^TMP($zn,$j,2)),$c(2)) s xx=$p(^TMP($zn,$j,2),$c(2),j1) i $l(xx) d
 ...k PLIST
 ...f j2=1:1:$l(xx,$c(28)) s PLIST(j2)=$p(xx,$c(28),j2)
 ...s PLIST=$o(PLIST(""),-1)
 ...i $l(PLIST(3)),'$$insert^LVBDQF(rowid)
 k PLIST s PLIST(1)=rowid,PLIST=$o(PLIST(""),-1)
 s result=$$result(rowid)
 d
 .n (rowid,result)
 .i '$$select(rowid) s PLIST(3)=result i $$update(rowid)
 k ^TMP($zn,$j)
 q result
result(RowID) s RowID=$g(RowID),result=0
 s x="" f  s x=$o(^TTDQ(RowID,x)) q:x=""  s xx=^(x) d
 .s fail=$p($g(^TTAB("QS",x)),"\",3) i $l(fail),(","_fail_",")[(","_xx_",") s result=100
 q result
 ; insert the data
insert() d pre("N") k PLIST(1)
 s PLIST(2)=$o(^TTDQ(""),-1)+1
  ;---&SQL(insert INTO DQ_Questionare VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; update the data
update(RowID) d pre("Y")
  ;---&SQL(UPDATE DQ_Questionare VALUES :PLIST() WHERE DQ_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Eo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; open the cursor
open(date,p1,p2,p3,p4,p5,p6,p7,p8,p9)  ;---s date=$g(date) &SQL(OPEN DQ)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 s date=$g(date) Do %DQ0o
 q 0
 ; fetch the data
fetch(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) s date=$g(date) k PLIST
  ;---&SQL(FETCH DQ INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; fetch all data
fetchbuffer(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) s date=$g(date) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(date) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(date,p1,p2,p3,p4,p5,p6,p7,p8,p9) n (date,PLIST) s date=$g(date) k ^TMP($zn,$j)
 i $$open(date)
 f cnt=1:1 q:$$fetch(date)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; close the cursor 
close()  ;---&SQL(CLOSE DQ) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %DQ0c 
 q 0
 ; select data by code
select(ROWID,skip) k PLIST s skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM DQ_Questionare WHERE DQ_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4()
 q
 ; post-filing adjustments
adjust d PostSQL^SSUTIL4("")
 q
%DQ0o s $zt="%DQ0E" s SQLCODE=$s($g(%DQ0c):-101,1:0) q:SQLCODE'=0  s %DQ0d(11)=0 s %DQ0d(12)=0,%DQ0d(13)=""
 s %DQ0d(6)=$g(date),%DQ0d(7)=$g(date)
 s %DQ0c=1 q
%DQ0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %DQ0c,%DQ0d,%DQ0E,%DQ0l,%DQ0n,%DQ0R,%DQ0Z q
%0Afirst 
 ; asl MOD# 2
 s %DQ0d(1)=""
%0ABk1 s %DQ0d(1)=$o(^TTDQ(%DQ0d(1)))
 i %DQ0d(1)="" g %0ABdun
 s %DQ0d(16)=$g(^TTDQ(%DQ0d(1)))
 s %DQ0d(3)=$p(%DQ0d(16),"\",2)
 g:'(((%DQ0d(3)'="")&&(%DQ0d(3)=%DQ0d(6)))||(%DQ0d(7)="")) %0ABk1
 s %DQ0d(2)=$p(%DQ0d(16),"\",1) s %DQ0d(4)=$p(%DQ0d(16),"\",3) s %DQ0d(5)=$p(%DQ0d(16),"\",4)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTDQ($p(%DQ0d(1),"||",1))#"S":$zu(115,4) i $t { s %DQ0d(12)=1,%DQ0d(13)=$name(^TTDQ($p(%DQ0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DQ_Questionare for RowID value: "_%DQ0d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %DQ0d(9)=$lb(""_%DQ0d(3))
 i %DQ0d(1)'="",$d(^TTDQ(%DQ0d(1)))
 e  g %0ACdun
 s %DQ0d(19)=$g(^TTDQ(%DQ0d(1)))
 s %DQ0d(2)=$p(%DQ0d(19),"\",1) s %DQ0d(3)=$p(%DQ0d(19),"\",2) s %DQ0d(4)=$p(%DQ0d(19),"\",3) s %DQ0d(5)=$p(%DQ0d(19),"\",4)
 s %DQ0d(10)=$lb(""_%DQ0d(3))
 g:%DQ0d(9)'=%DQ0d(10) %0ACdun
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %DQ0d(11)=%DQ0d(11)+1,%ROWCOUNT=%DQ0d(11),%ROWID=%DQ0d(1),%DQ0c=10 q
%DQ0f i '$g(%DQ0c) { s SQLCODE=-102 q  } i %DQ0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%DQ0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%DQ0d(11),%DQ0c=100 q  } g %0Afirst:%DQ0c=1
%0ACdun i $zu(115,2)=1,$g(%DQ0d(12))=1 { l -@%DQ0d(13) s %DQ0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%DQ0d(11),SQLCODE=100,%DQ0c=100 q
%DQ0c i '$g(%DQ0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%DQ0d(11)),1:0)
 i $zu(115,2)=1,$g(%DQ0d(12))=1 { l -@%DQ0d(13) } k %DQ0c,%DQ0d,%DQ0E,%DQ0l,%DQ0n,%DQ0R,%DQ0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %DQ0c=100 q
%0Co n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DQQuestionare.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTDQ(%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(8)=$$%getlock^User.DQQuestionare.T1(%mmmsqld(2)) i '%mmmsqld(8) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTDQ(%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.DQQuestionare.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(8)=1 %ReleaseLock^User.DQQuestionare.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(8)=1 %ReleaseLock^User.DQQuestionare.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(8))=1 %ReleaseLock^User.DQQuestionare.T1(%mmmsqld(2)) g %0Ec
%0Ho d %DQ0f q:SQLCODE'=0
 s PLIST(1)=%DQ0d(1),PLIST(2)=%DQ0d(1),PLIST(3)=%DQ0d(2),PLIST(4)=%DQ0d(3),PLIST(5)=%DQ0d(4),PLIST(6)=%DQ0d(5)
 q
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(9)=0,%mmmsqld(10)=""
 s %mmmsqld(7)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(7)
 i PLIST(2)'="",$d(^TTDQ(PLIST(2)))
 e  g %0JBdun
 s %mmmsqld(13)=$g(^TTDQ(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(13),"\",1) s PLIST(4)=$p(%mmmsqld(13),"\",2) s PLIST(5)=$p(%mmmsqld(13),"\",3) s PLIST(6)=$p(%mmmsqld(13),"\",4)
 g:$zu(115,2)=0 %0JBuncommitted i $zu(115,2)=1 l +^TTDQ($p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(9)=1,%mmmsqld(10)=$name(^TTDQ($p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DQ_Questionare for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTDQ(PLIST(2)))
 e  g %0JCdun
 s %mmmsqld(16)=$g(^TTDQ(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(16),"\",1) s PLIST(4)=$p(%mmmsqld(16),"\",2) s PLIST(5)=$p(%mmmsqld(16),"\",3) s PLIST(6)=$p(%mmmsqld(16),"\",4)
%0JBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Jc
%0JCdun i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) s %mmmsqld(9)=0 }
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(9))=1 { l -@%mmmsqld(10) } q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Jc
]]></Routine>
</Export>
