<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTREA" type="INT" languagemode="0"><![CDATA[
BVBCTREA ; IG 9/12/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:45 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$open^BVBCTREA(par,testset,use,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetch^BVBCTREA(par,testset,use,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchbuffer^BVBCTREA(par,testset,use,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchall^BVBCTREA(par,testset,use,p3,p4,p5,p6,p7,p8,p9) 
 ; $$close^BVBCTREA() 
 ; $$select^BVBCTREA(ROWID) 
 ; $$selcode^BVBCTREA(par,code) 
 ; $$delete^BVBCTREA(ROWID,Comments) 
 ; $$insert^BVBCTREA(par) 
 ; $$update^BVBCTREA(ROWID) 
 ; 
 q 
open(par,testset,use,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),testset=$g(testset),use=$g(use)
 d %CTREA0o 
 q 0
 ;
fetch(par,testset,use,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),testset=$g(testset),use=$g(use) k PLIST
nx d %0Co
 i 'SQLCODE,$l(testset),$l($g(PLIST(6))),'$d(^TTAB("TC",$g(PLIST(6)),1,testset)) g fetch+1
 s PLIST=$o(PLIST(""),-1) 
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,testset,use,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),testset=$g(testset),use=$g(use) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch(par,testset,use) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,testset,use,p3,p4,p5,p6,p7,p8,p9) N (par,testset,use,PLIST) K ^TMP($zn,$j)
 s par=$g(par),testset=$g(testset),use=$g(use)
 i $$open(par,testset,use)
 f cnt=1:1 Q:$$fetch(par,testset,use)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
close() d %CTREA0c 
 q 0 
 ; Insert the data
insert(par) K PLIST(1),PLIST(2) s PLIST(0)=par
 i '$$selseq(par,$g(PLIST(9)),$g(PLIST(8)),"") q 61
 d %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ;
 ; Update the data
update(ROWID) D pre s ROWID=$g(ROWID)
 i '$$selseq($p(ROWID,"||"),$g(PLIST(9)),$g(PLIST(8)),ROWID) q 61
 d %0Fo
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 Q SQLCODE
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ;
 ; select data by code
select(ROWID) K PLIST s ROWID=$g(ROWID)
 d %0Ho
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
selseq(par,row,seq,rowid) n (par,row,seq,rowid) K PLIST
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ;
selcode(par,code) K PLIST
 d %0Jo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 ;
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTTC(plist(6))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 Q
 ;
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%0ABs2 s %val=$s("Yy"[$e(%val):"Yes","Nn"[$e(%val):"No",1:"") q
%0ABs3 s %val=$p("Forward|Reverse|RH","|",$l($p("|F|R|RH|","|"_%val_"|"),"|")) q
%CTREA0o s SQLCODE=$s($g(%CTREA0c):-101,1:0) q:SQLCODE'=0
 s %CTREA0c=1 k %CTREA0m
 s %CTREA0E=$zt,%CTREA0f=0,%CTREA0e=0,%CTREA0L=""
 s %CTREA0d(2)=$P(par,$C(1)),%CTREA0d(5)=$P(use,$C(1)),%CTREA0d(6)=$P(use,$C(1))
 s:%CTREA0d(2)="" %CTREA0d(2)=$E(par,2,999)
 l +^mtemp s %CTREA0t(1)=$zp(^mtemp(" "))+1,^(%CTREA0t(1))="" l -^mtemp
 q
%0Afirst   ;  init
 k ^mtemp(%CTREA0t(1),0)
 ; asl MOD# 3
 d %0ABMod
 s %CTREA0s(8)=""
%0ACk1 s %CTREA0s(8)=$o(^mtemp(%CTREA0t(1),0,%CTREA0s(8)))
 i %CTREA0s(8)="" g %0ACdun
 s $P(%CTREA0d(8),$C(1))=$s(%CTREA0s(8)=-99999999999999999:"",1:%CTREA0s(8))
 s %CTREA0s(9)=""
%0ACk2 s %CTREA0s(9)=$o(^mtemp(%CTREA0t(1),0,%CTREA0s(8),%CTREA0s(9)))
 i %CTREA0s(9)="" g %0ACk1
 s $P(%CTREA0d(9),$C(1))=$s(%CTREA0s(9)=-99999999999999999:"",1:%CTREA0s(9))
 s %CTREA0s(10)=""
%0ACk3 s %CTREA0s(10)=$o(^mtemp(%CTREA0t(1),0,%CTREA0s(8),%CTREA0s(9),%CTREA0s(10)))
 i %CTREA0s(10)="" g %0ACk2
 s %CTREA0d(10)=$s(%CTREA0s(10)=" ":"",1:%CTREA0s(10))
 s %CTREA0n=$g(^mtemp(%CTREA0t(1),0,%CTREA0s(8),%CTREA0s(9),%CTREA0s(10)))
 s %CTREA0d(1)=$p(%CTREA0n,"|~|",7) s %CTREA0d(3)=$p(%CTREA0n,"|~|",8) s %CTREA0d(11)=$p(%CTREA0n,"|~|",1) s %CTREA0d(12)=$p(%CTREA0n,"|~|",2) s %CTREA0d(13)=$p(%CTREA0n,"|~|",6) s %CTREA0d(14)=$p(%CTREA0n,"|~|",4) s %CTREA0d(15)=$p(%CTREA0n,"|~|",3) s %CTREA0d(16)=$p(%CTREA0n,"|~|",5) s %CTREA0d(17)=$p(%CTREA0n,"|~|",9)
 s %val=$P(%CTREA0d(8),$C(1)) d %0ABs1:%val'="" s $P(%CTREA0d(8),$C(1),2)=%val
 s %val=$P(%CTREA0d(9),$C(1)) d %0ABs1:%val'="" s $P(%CTREA0d(9),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTREA0f=%CTREA0f+1 s %CTREA0c=10 q
%CTREA0f i '$g(%CTREA0c) s SQLCODE=-102 q
 i %CTREA0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTREA0c=1
 g %0ACk3
%0ACdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTREA0c=100 q
%CTREA0c i '$g(%CTREA0c) s SQLCODE=-102 q
 f %CTREA0t=1:1:1 k ^mtemp(%CTREA0t(%CTREA0t))
 k %CTREA0c,%CTREA0d,%CTREA0e,%CTREA0E,%CTREA0f,%CTREA0l,%CTREA0L,%CTREA0n,%CTREA0r,%CTREA0R,%CTREA0s,%CTREA0t s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTREA0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0ABMod ; asl MOD# 2
 n %CTREA0n  ; Nested NEWing for Subquery...
 s %CTREA0d(1)=$g(%CTREA0d(2))
 i %CTREA0d(1)="" g %0ABdun
 s $P(%CTREA0d(11),$C(1))=""
%0ABk1 s $P(%CTREA0d(11),$C(1))=$o(^CT("COMP",%CTREA0d(1),"REAC",$P(%CTREA0d(11),$C(1))))
 i $P(%CTREA0d(11),$C(1))="" g %0ABdun
 i 1>$P(%CTREA0d(11),$C(1)),$P(%CTREA0d(11),$C(1))=+$P(%CTREA0d(11),$C(1)) g %0ABk1
 i $P(%CTREA0d(11),$C(1))'=+$P(%CTREA0d(11),$C(1)) g %0ABdun
 s %CTREA0n=$g(^CT("COMP",%CTREA0d(1),"REAC",$P(%CTREA0d(11),$C(1))))
 s %CTREA0d(3)=$p(%CTREA0n,"^",8)
 g:'((($P(%CTREA0d(3),$C(1)))=(%CTREA0d(5)))!(%CTREA0d(6)="")) %0ABk1
 s %CTREA0d(8)=$p(%CTREA0n,"^",7) s:%CTREA0d(8)'="" %CTREA0d(8)=+%CTREA0d(8) s %CTREA0d(9)=$p(%CTREA0n,"^",6) s:%CTREA0d(9)'="" %CTREA0d(9)=+%CTREA0d(9) s %CTREA0d(12)=$p(%CTREA0n,"^",1) s %CTREA0d(13)=$p(%CTREA0n,"^",2) s %CTREA0d(14)=$p(%CTREA0n,"^",3) s %CTREA0d(15)=$p(%CTREA0n,"^",4) s %CTREA0d(16)=$p(%CTREA0n,"^",5)
 s %CTREA0d(17)=$p(%CTREA0n,"^",9)
 s %CTREA0d(10)=(%CTREA0d(1))_"||"_($P(%CTREA0d(11),$C(1)))
 s %val=$P(%CTREA0d(11),$C(1)) d %0ABs1:%val'="" s $P(%CTREA0d(11),$C(1),2)=%val
 s %val=$P(%CTREA0d(16),$C(1)) d %0ABs2:%val'="" s $P(%CTREA0d(16),$C(1),2)=%val
 s %val=$P(%CTREA0d(8),$C(1)) d %0ABs1:%val'="" s $P(%CTREA0d(8),$C(1),2)=%val
 s %val=$P(%CTREA0d(9),$C(1)) d %0ABs1:%val'="" s $P(%CTREA0d(9),$C(1),2)=%val
 s %val=$P(%CTREA0d(3),$C(1)) d %0ABs2:%val'="" s $P(%CTREA0d(3),$C(1),2)=%val
 s %val=$P(%CTREA0d(17),$C(1)) d %0ABs3:%val'="" s $P(%CTREA0d(17),$C(1),2)=%val
 s %CTREA0s(8)=$s($P(%CTREA0d(8),$C(1))'="":$P(%CTREA0d(8),$C(1)),1:-99999999999999999),%CTREA0s(9)=$s($P(%CTREA0d(9),$C(1))'="":$P(%CTREA0d(9),$C(1)),1:-99999999999999999),%CTREA0s(10)=$s(%CTREA0d(10)'="":%CTREA0d(10),1:" "),%CTREA0n="",$p(%CTREA0n,"|~|",7)=%CTREA0d(1),$p(%CTREA0n,"|~|",8)=%CTREA0d(3),$p(%CTREA0n,"|~|",1)=%CTREA0d(11),$p(%CTREA0n,"|~|",2)=%CTREA0d(12),$p(%CTREA0n,"|~|",6)=%CTREA0d(13)
 s $p(%CTREA0n,"|~|",4)=%CTREA0d(14),$p(%CTREA0n,"|~|",3)=%CTREA0d(15),$p(%CTREA0n,"|~|",5)=%CTREA0d(16),$p(%CTREA0n,"|~|",9)=%CTREA0d(17),^mtemp(%CTREA0t(1),0,%CTREA0s(8),%CTREA0s(9),%CTREA0s(10))=%CTREA0n
 g %0ABk1
%0ABdun 
 q
%0Co d %CTREA0f q:SQLCODE'=0
 s PLIST(0)=%CTREA0d(1),PLIST(1)=%CTREA0d(10),PLIST(2)=%CTREA0d(11),PLIST(3)=%CTREA0d(12),PLIST(4)=%CTREA0d(13),PLIST(5)=%CTREA0d(14),PLIST(6)=%CTREA0d(15),PLIST(7)=%CTREA0d(16),PLIST(8)=%CTREA0d(9),PLIST(9)=%CTREA0d(8),PLIST(10)=%CTREA0d(3),PLIST(11)=%CTREA0d(17)
 q
%0Eo n %insert,icol,ir
 f icol=0:1:11 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1361("1")
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(4)=$p($g(%mmmsqld(3)),"||",1,1),$P(%mmmsqld(5),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s %mmmsqld(2)=$g(%mmmsqld(3))
 i %mmmsqld(4)'="",$P(%mmmsqld(5),$C(1))'="",$d(^CT("COMP",%mmmsqld(4),"REAC",$P(%mmmsqld(5),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(5),$C(1)),$P(%mmmsqld(5),$C(1))=+$P(%mmmsqld(5),$C(1))
 i  g %0FBdun
 k %data,%edit
 f icol=0:1:11 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1361(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0FBdun 
%0FAdun 
 q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(3)=$p($g(%mmmsqld(2)),"||",1,1),$P(%mmmsqld(4),$C(1))=$p($g(%mmmsqld(2)),"||",2,2)
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(3)'="",$P(%mmmsqld(4),$C(1))'="",$d(^CT("COMP",%mmmsqld(3),"REAC",$P(%mmmsqld(4),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(4),$C(1)),$P(%mmmsqld(4),$C(1))=+$P(%mmmsqld(4),$C(1))
 i  g %0GBdun
 d delete^mt1361(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(ROWID,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(16)=$p($g(%mmmsqld(3)),"||",1,1),$P(PLIST(2),$C(1))=$p($g(%mmmsqld(3)),"||",2,2)
 s PLIST(1)=$g(%mmmsqld(3))
 i %mmmsqld(16)'="",$P(PLIST(2),$C(1))'="",$d(^CT("COMP",%mmmsqld(16),"REAC",$P(PLIST(2),$C(1))))
 i '$t
 e  i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1))
 i  g %0HBdun
 s %mmmsqln=$g(^CT("COMP",%mmmsqld(16),"REAC",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1) s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s PLIST(8)=$p(%mmmsqln,"^",6) s:PLIST(8)'="" PLIST(8)=+PLIST(8) s PLIST(9)=$p(%mmmsqln,"^",7) s:PLIST(9)'="" PLIST(9)=+PLIST(9) s PLIST(10)=$p(%mmmsqln,"^",8)
 s PLIST(11)=$p(%mmmsqln,"^",9)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(9),$C(1)) d %0ABs1:%val'="" s $P(PLIST(9),$C(1),2)=%val
 s %val=$P(PLIST(8),$C(1)) d %0ABs1:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs2:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(11),$C(1)) d %0ABs3:%val'="" s $P(PLIST(11),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Hc
%0HBdun 
%0HAdun 
%0Hc q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
%0IAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(par,$C(1)),%mmmsqld(5)=$P(row,$C(1)),%mmmsqld(7)=$P(seq,$C(1)),%mmmsqld(9)=$P(rowid,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(par,2,999)
 i %mmmsqld(5)="",$L(row)>1 s %val=$E(row,2,999) d %0IAr1 s %mmmsqld(5)=%val
 i %mmmsqld(7)="",$L(seq)>1 s %val=$E(seq,2,999) d %0IAr1 s %mmmsqld(7)=%val
 s:%mmmsqld(9)="" %mmmsqld(9)=$E(rowid,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(0)=$g(%mmmsqld(3))
 i PLIST(0)="" g %0IBdun
 s $P(PLIST(2),$C(1))=""
%0IBk1 s $P(PLIST(2),$C(1))=$o(^CT("COMP",PLIST(0),"REAC",$P(PLIST(2),$C(1))))
 i $P(PLIST(2),$C(1))="" g %0IBdun
 i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1)) g %0IBk1
 i $P(PLIST(2),$C(1))'=+$P(PLIST(2),$C(1)) g %0IBdun
 s %mmmsqln=$g(^CT("COMP",PLIST(0),"REAC",$P(PLIST(2),$C(1))))
 s PLIST(9)=$p(%mmmsqln,"^",7) s:PLIST(9)'="" PLIST(9)=+PLIST(9)
 g:'(($P(PLIST(9),$C(1)))=(%mmmsqld(5))) %0IBk1
 s PLIST(8)=$p(%mmmsqln,"^",6) s:PLIST(8)'="" PLIST(8)=+PLIST(8)
 g:'(($P(PLIST(8),$C(1)))=(%mmmsqld(7))) %0IBk1
 s PLIST(3)=$p(%mmmsqln,"^",1) s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s PLIST(10)=$p(%mmmsqln,"^",8) s PLIST(11)=$p(%mmmsqln,"^",9)
 s PLIST(1)=(PLIST(0))_"||"_($P(PLIST(2),$C(1)))
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(9),$C(1)) d %0ABs1:%val'="" s $P(PLIST(9),$C(1),2)=%val
 s %val=$P(PLIST(8),$C(1)) d %0ABs1:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs2:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(11),$C(1)) d %0ABs3:%val'="" s $P(PLIST(11),$C(1),2)=%val
 g:'((PLIST(1))'=(%mmmsqld(9))) %0IBk1
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ic
 g %0IBk1
%0IBdun 
%0IAdun 
%0Ic q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(par,$C(1)),%mmmsqld(5)=$P(code,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(par,2,999)
 s:%mmmsqld(5)="" %mmmsqld(5)=$E(code,2,999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(0)=$g(%mmmsqld(3))
 i PLIST(0)="" g %0JBdun
 s $P(PLIST(2),$C(1))=""
%0JBk1 s $P(PLIST(2),$C(1))=$o(^CT("COMP",PLIST(0),"REAC",$P(PLIST(2),$C(1))))
 i $P(PLIST(2),$C(1))="" g %0JBdun
 i 1>$P(PLIST(2),$C(1)),$P(PLIST(2),$C(1))=+$P(PLIST(2),$C(1)) g %0JBk1
 i $P(PLIST(2),$C(1))'=+$P(PLIST(2),$C(1)) g %0JBdun
 s %mmmsqln=$g(^CT("COMP",PLIST(0),"REAC",$P(PLIST(2),$C(1))))
 s PLIST(3)=$p(%mmmsqln,"^",1)
 g:'((PLIST(3))=(%mmmsqld(5))) %0JBk1
 s PLIST(4)=$p(%mmmsqln,"^",2) s PLIST(5)=$p(%mmmsqln,"^",3) s PLIST(6)=$p(%mmmsqln,"^",4) s PLIST(7)=$p(%mmmsqln,"^",5) s PLIST(8)=$p(%mmmsqln,"^",6) s:PLIST(8)'="" PLIST(8)=+PLIST(8) s PLIST(9)=$p(%mmmsqln,"^",7) s:PLIST(9)'="" PLIST(9)=+PLIST(9) s PLIST(10)=$p(%mmmsqln,"^",8) s PLIST(11)=$p(%mmmsqln,"^",9)
 s PLIST(1)=(PLIST(0))_"||"_($P(PLIST(2),$C(1)))
 s %val=$P(PLIST(2),$C(1)) d %0ABs1:%val'="" s $P(PLIST(2),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(9),$C(1)) d %0ABs1:%val'="" s $P(PLIST(9),$C(1),2)=%val
 s %val=$P(PLIST(8),$C(1)) d %0ABs1:%val'="" s $P(PLIST(8),$C(1),2)=%val
 s %val=$P(PLIST(10),$C(1)) d %0ABs2:%val'="" s $P(PLIST(10),$C(1),2)=%val
 s %val=$P(PLIST(11),$C(1)) d %0ABs3:%val'="" s $P(PLIST(11),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Jc
 g %0JBk1
%0JBdun 
%0JAdun 
%0Jc q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
]]></Routine>
</Export>
