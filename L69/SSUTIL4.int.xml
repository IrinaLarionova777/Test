<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="SSUTIL4" type="INT" languagemode="0" generated="1"><![CDATA[
SSUTIL4 ; Date and Time for MVB client
 ;
 ; This routine contains code that is specific to ISM and
 ; some parts will need to be changed to run on DTM...
 ;
 ;
 ; 24/6/98
 ;
 ; Return server date and time to VB client.
 ;
datetime() q $h
 ;
date() q $p($H,",",1)
 ;
time() q $p($H,",",2)
 ;
 ; Return process ID
dollarj()       q $j
 ;
 ; Return current device
dollari()       q $i
 ;
 ;
 ; ** This code is specific to ISM it needs changed for DTM
 ; return all devices (code extracted from ISM %SS)
devices()       q $P($v(-1,$j),"^",3)
 ;
 ; ** This code is specific to ISM it needs changed for DTM
 ; return current directory
dir() q $zu(12,"")
 ;
 ; convert mm/dd/yyyy to $h format
intdate(%DS)    n (%DS)
 d INT^%DATE
 q %DN
 ; convert dd/mm/yyyy to $h format
intdate2(%DS)    n (%DS)
 s x=%DS,%DS=$p(x,"/",2)_"/"_$p(x,"/",1)_"/"_$p(x,"/",3)
 d INT^%DATE
 q %DN
 ;
 ; convert $h format to external date format (dd/mm/{yy}yy)
extdate(%val) s %val=$g(%val)
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","UTIL4")),"\",1)
 i $l(%routine),%routine=$zn s %routine=""
 i $l(%routine) s LineRoutine="extdate^"_%routine i $l($t(@LineRoutine)) x "s %val=$$extdate^"_%routine_"("""_%val_""")" q %val
 i $l(%val) s %val=%val\1 s:%val<0 %val=0 s %val=$zdate(%val,4)
 q %val
 ; convert $h format to external date format (dd mmm yyyy)
extdate1(%val,%num) s %val=$g(%val),%num=$g(%num) i %num="" s %num=4
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","UTIL4")),"\",1)
 i $l(%routine),%routine=$zn s %routine=""
 i $l(%routine) s LineRoutine="extdate1^"_%routine i $l($t(@LineRoutine)) x "s %val=$$extdate1^"_%routine_"("""_%val_"",""_%num_""")" q %val
 i $l(%val) s %val=%val\1 s:%val<0 %val=0 s %val=$zdate(%val,2,,%num)
 q %val
 ; convert $h format to external date format (dd/mm/yyyy)
extdate2(%val) s %val=$g(%val)
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","UTIL4")),"\",1)
 i $l(%routine),%routine=$zn s %routine=""
 i $l(%routine) s LineRoutine="extdate2^"_%routine i $l($t(@LineRoutine)) x "s %val=$$extdate2^"_%routine_"("""_%val_""")" q %val
 i $l(%val) s %val=%val\1 s:%val<0 %val=0 s %val=$zdate(%val,4,,4)
 q %val
 ; convert $h format to external date format (dd/mm/yy)
extdate3(%val) s %val=$g(%val)
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","UTIL4")),"\",1)
 i $l(%routine),%routine=$zn s %routine=""
 i $l(%routine) s LineRoutine="extdate3^"_%routine i $l($t(@LineRoutine)) x "s %val=$$extdate3^"_%routine_"("""_%val_""")" q %val
 i $l(%val) s %val=%val\1 s:%val<0 %val=0 s %val=$zdate(%val,4,,2)
 q %val
 ;
 ; Convert $h format to external time format
exttime(%val) s %val=$g(%val)
 ; check if 'no time nominated' character
 s NoTime=$$seldata^MVBCFSM(1,8)
 i $l(%val),$g(NoTime)=%val q %val
 i %val=" " q NoTime
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","UTIL4")),"\",1)
 i $l(%routine),%routine=$zn s %routine=""
 i $l(%routine) s LineRoutine="exttime^"_%routine i $l($t(@LineRoutine)) x "s %val=$$exttime^"_%routine_"("""_%val_""")" q %val
 i $l(%val) s %val=%val\1 s:%val<0 %val=0 s %val=$ztime(%val,2)
 q %val
 ;
 ; convert external time format to $h format
inttime(%val) 
 s %val=($p(%val,":",1)*3600)+($p(%val,":",2)*60)+($p(%val,":",3))
 q %val
 ; Return day of week from $h format date
 ; 1=Monday,7=Sunday
daynum(dollarh)      q dollarh+3#7+1
julian(date) n (date) s result=""
 s x1=$p($$extdate2(date),"/",3),result=date-$$intdate("01/01/"_x1)+1
 q result
 ;
daymonth(year,mon) 
 n month s month="31;28;31;30;31;30;31;31;30;31;30;31"
 q $s(+mon=2:'(year#4),1:0)+$p(month,";",+mon)
 ;convert number from internal to external
 ;numtype - type (1-6)
 ;numdec - number of decimal characters
extnumber(%val,length,numdec,numtype) 
 n str,space 
 s $p(space," ",20)=""
 s str=$$intext^SSNUMBER(numtype,numdec)
 x str
 s l1=$l(%val) i l1<length s %val=$e(space,1,length-l1)_%val 
 q %val
 ; convert to capital w/o punctuation
ONLYALPHA(val) q $tr($$ALPHAUP(val),"0123456789")
ALPHAUP(val) q ##class(%Library.Collation).AlphaUp(val)
 ; convert to capital
UPPER(val) q $zcvt(val,"U")
 ; convert to lower
LOWER(val) q $zcvt(val,"L")
PostSQL(list) n J,XX s list=$g(list)
 s PLIST=$o(PLIST(""),-1)
 f J=1:1:PLIST i $d(PLIST(J)) d
 .i (","_list_",")[(","_J_",") d  q
 ..k XX m XX=PLIST(J) i '$$remarks^LVBCOM01("IE",.XX) k PLIST(J) m PLIST(J)=XX
 .s PLIST(J)=$p(PLIST(J),$c(1))
 f J=1:1:PLIST s PLIST(J)=$g(PLIST(J))
 q
PreSQL(list,type) n J,XX s list=$g(list),type=$g(type),xUpdate=$g(xUpdate) i '$l(type) s type=11
 s PLIST=$o(PLIST(""),-1)
 f J=1:1:PLIST i $d(PLIST(J)) d
 .i (","_list_",")[(","_J_",") d  q
 ..k XX m XX=PLIST(J) i '$$remarks^LVBCOM01("EI",.XX,type) k PLIST(J) m PLIST(J)=XX
 .e  s PLIST(J)=$p(PLIST(J),$c(1))
 i xUpdate'="Y" f J=1:1:PLIST i $g(PLIST(J))="" k PLIST(J)
 q 
tableName(table) n (table) s table=$g(table),result=""
 i $l(table) d
 .i $d(^oddDEF(table)) s result=table q
 .s (stop,tableName)="" f  s tableName=$o(^oddDEF(tableName)) q:tableName=""  d  q:stop
 ..i $e(tableName,1,5)'="User." q
 ..i table=(+$tr($p($g(^oddDEF(tableName,4)),"-",2)," (")) s result=tableName_$c(1)_$g(^oddDEF(tableName,58)),stop=1
 q result
fieldName(table,field) n (table,field) s table=$g(table),field=$g(field),result=""
 s tableName=$p($$tableName(table),$c(1))
 i $l(tableName) d
 .i $d(^oddDEF(tableName,"a",field)) s result=tableName_$c(1)_field_$c(1)_$g(^oddDEF(tableName,"a",field,4)) q
 .s (stop,fieldName)="" f  s fieldName=$o(^oddDEF(tableName,"a",fieldName)) q:fieldName=""  d  q:stop
 ..i $g(^oddDEF(tableName,"a",fieldName,43))=field s result=tableName_$c(1)_fieldName_$c(1)_$g(^oddDEF(tableName,"a",fieldName,4)),stop=1
 q result
tableList(list) n (list,PLIST) s list=$g(list) k PLIST
 s (PLIST,tableName)="" f  s tableName=$o(^oddDEF(tableName)) q:tableName=""  d
 .i $e(tableName,1,5)'="User." q
 .s table=+$tr($p($g(^oddDEF(tableName,4)),"-",2)," (")
 .i $l(list),list'[(" "_table_" ") q
 .s PLIST=PLIST+1,PLIST(PLIST)=table_$c(2)_$g(^oddDEF(tableName,58))_$c(2)_table
 s PLIST=$o(PLIST(""),-1)
 q 0
fieldList(table) n (table,PLIST) s table=$g(table) k PLIST
 s tableName=$p($$tableName(table),$c(1))
 i $l(tableName) d
 .s (PLIST,fieldName)="" f  s fieldName=$o(^oddDEF(tableName,"a",fieldName)) q:fieldName=""  d
 ..i $g(^oddDEF(tableName,"a",fieldName,43)) d
 ...s PLIST=PLIST+1
 ...s PLIST(PLIST)=table_"||"_$g(^oddDEF(tableName,"a",fieldName,43))_$c(2)_$g(^oddDEF(tableName,"a",fieldName,4))_$c(2)_$g(^oddDEF(tableName,"a",fieldName,43))
 s PLIST=$o(PLIST(""),-1)
 q 0
lastTable() s result=""
 i '$$tableList() f j=1:1:PLIST i result<$p(PLIST(j),$c(2)) s result=$p(PLIST(j),$c(2))
 q result
extAlpha(xx) q $s(xx>26:$c(64+(xx\26))_$c(65+(xx#26)),1:$c(65+(xx#26)))
]]></Routine>
</Export>
