<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTANS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTANS ; IG 1/5/98 ; LVB Control data access for CTANS CT_AntibioticsSensitivity
 ;
 ; supported calls:
 ;
 ; $$save^LVBCTANS(ROWID)
 ; $$select^LVBCTANS(ROWID,skip)
 ; $$open^LVBCTANS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTANS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTANS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTANS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTANS()
 ; $$getall^LVBCTANS(par)
 ;
  ;---&sql(DECLARE CTANS CURSOR FOR SELECT * FROM CT_AntibioticsSensitivity
   ;---         WHERE CTANS_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN CTANS)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTANS0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH CTANS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE CTANS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTANS0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CT_AntibioticsSensitivity WHERE CTANS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
save(RowID) s RowID=$g(RowID),ant=$p(RowID,"||",1),sen=$p(RowID,"||",2)
 ; update existing record
 i $l(ant),$l(sen),$d(^TTAB("ANT",ant,sen)) d  q $s(SQLCODE:SQLCODE,1:$$select(%ROWID))
 .  ;---&sql(UPDATE CT_AntibioticsSensitivity VALUES :PLIST() WHERE CTANS_RowID=:RowID)
  .  ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 . Do %0Ho
 ; insert new record
 s PLIST(0)=$g(ant) K PLIST(1)
  ;---&sql(INSERT INTO CT_AntibioticsSensitivity VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSN(plist(2),"Y")
 .S X="" I 'SQLCODE S X=plist(1)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 q
getall(par) N (par,PLIST) K ^TMP($ZN,$J) s par=$g(par)
 I $$open(par,"Y")
 F cnt=1:1 Q:$$fetch(par,"Y")  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=$p(PLIST(j),$c(1))
 .s ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_"="_$p(PLIST(4),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%CTANS0o s $zt="%CTANS0E" s SQLCODE=$s($g(%CTANS0c):-101,1:0) q:SQLCODE'=0  s %CTANS0d(11)=0 s %CTANS0d(12)=0,%CTANS0d(13)=""
 s %CTANS0d(8)=$g(par)
 s %CTANS0c=1 q
%CTANS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTANS0c,%CTANS0d,%CTANS0E,%CTANS0l,%CTANS0n,%CTANS0R,%CTANS0Z q
%0Afirst 
 ; asl MOD# 2
 s %CTANS0d(1)=%CTANS0d(8)
 i %CTANS0d(1)="" g %0ABdun
 s %CTANS0d(3)=""
%0ABk1 s %CTANS0d(3)=$o(^TTAB("ANT",%CTANS0d(1),"RES",%CTANS0d(3)))
 i %CTANS0d(3)="" g %0ABdun
 s %CTANS0d(21)=$g(^TTAB("ANT",%CTANS0d(1),"RES",%CTANS0d(3)))
 s %CTANS0d(4)=$p(%CTANS0d(21),"\",2) s %CTANS0d(5)=$p(%CTANS0d(21),"\",3) s %CTANS0d(6)=$p(%CTANS0d(21),"\",1) s %CTANS0d(7)=$p(%CTANS0d(21),"\",4)
 s %CTANS0d(2)=(%CTANS0d(1))_"||"_("RES")
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("ANT",$p(%CTANS0d(2),"||",1),"RES",$p(%CTANS0d(2),"||",2))#"S":$zu(115,4) i $t { s %CTANS0d(12)=1,%CTANS0d(13)=$name(^TTAB("ANT",$p(%CTANS0d(2),"||",1),"RES",$p(%CTANS0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_AntibioticsSensitivity for RowID value: "_%CTANS0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTANS0d(10)=$p(%CTANS0d(2),"||"),%CTANS0d(3)=$p(%CTANS0d(2),"||",2)
 i %CTANS0d(10)'="",%CTANS0d(3)'="",$d(^TTAB("ANT",%CTANS0d(10),"RES",%CTANS0d(3)))
 e  g %0ACdun
 s %CTANS0d(29)=$g(^TTAB("ANT",%CTANS0d(10),"RES",%CTANS0d(3)))
 s %CTANS0d(4)=$p(%CTANS0d(29),"\",2) s %CTANS0d(5)=$p(%CTANS0d(29),"\",3) s %CTANS0d(6)=$p(%CTANS0d(29),"\",1) s %CTANS0d(7)=$p(%CTANS0d(29),"\",4)
 s %CTANS0d(1)=$p(%CTANS0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTANS0d(11)=%CTANS0d(11)+1,%ROWCOUNT=%CTANS0d(11),%ROWID=%CTANS0d(2),%CTANS0c=10 q
%CTANS0f i '$g(%CTANS0c) { s SQLCODE=-102 q  } i %CTANS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTANS0d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTANS0d(11),%CTANS0c=100 q  } g %0Afirst:%CTANS0c=1
%0ACdun i $zu(115,2)=1,$g(%CTANS0d(12))=1 { l -@%CTANS0d(13) s %CTANS0d(12)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%CTANS0d(11),SQLCODE=100,%CTANS0c=100 q
%CTANS0c i '$g(%CTANS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTANS0d(11)),1:0)
 i $zu(115,2)=1,$g(%CTANS0d(12))=1 { l -@%CTANS0d(13) } k %CTANS0c,%CTANS0d,%CTANS0E,%CTANS0l,%CTANS0n,%CTANS0R,%CTANS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTANS0c=100 q
%0Do d %CTANS0f q:SQLCODE'=0
 s PLIST(0)=%CTANS0d(1),PLIST(1)=%CTANS0d(2),PLIST(2)=%CTANS0d(3),PLIST(3)=%CTANS0d(4),PLIST(4)=%CTANS0d(5),PLIST(5)=%CTANS0d(6),PLIST(6)=%CTANS0d(7)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(9)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(9)
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^TTAB("ANT",%mmmsqld(11),"RES",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(21)=$g(^TTAB("ANT",%mmmsqld(11),"RES",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(21),"\",2) s PLIST(4)=$p(%mmmsqld(21),"\",3) s PLIST(5)=$p(%mmmsqld(21),"\",1) s PLIST(6)=$p(%mmmsqld(21),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("ANT",$p(PLIST(1),"||",1),"RES",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TTAB("ANT",$p(PLIST(1),"||",1),"RES",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_AntibioticsSensitivity for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(11)'="",PLIST(2)'="",$d(^TTAB("ANT",%mmmsqld(11),"RES",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(29)=$g(^TTAB("ANT",%mmmsqld(11),"RES",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(29),"\",2) s PLIST(4)=$p(%mmmsqld(29),"\",3) s PLIST(5)=$p(%mmmsqld(29),"\",1) s PLIST(6)=$p(%mmmsqld(29),"\",4)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("ANT",%mmmsqld(4),"RES",%mmmsqld(5)))
 e  g %0HBdun
 s %mmmsqld(15)=$$%getlock^User.CTAntibioticsSensitivity.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("ANT",%mmmsqld(4),"RES",%mmmsqld(5)))
 e  g %0HCdun
 k %data
 f icol=0:1:6 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTAntibioticsSensitivity.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTAntibioticsSensitivity.T1(%mmmsqld(2)) g %0Hc
%0HCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTAntibioticsSensitivity.T1(%mmmsqld(2)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTAntibioticsSensitivity.T1(%mmmsqld(2)) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:6 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTAntibioticsSensitivity.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
]]></Routine>
</Export>
