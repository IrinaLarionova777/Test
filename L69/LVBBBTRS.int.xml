<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBBBTRS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBBBTRS ; IG 1/5/98 ; LVB Control data access for BBTRS CTBB_TransactionStatus
 ;
 ; supported calls:
 ;
 ; $$insert^LVBBBTRS(par)
 ; $$delete^LVBBBTRS(ROWID,Comments)
 ; $$update^LVBBBTRS(ROWID)
 ; $$select^LVBBBTRS(ROWID,skip)
 ; $$open^LVBBBTRS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBBBTRS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBBBTRS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBBBTRS(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBBBTRS()
 ; $$getall^LVBBBTRS(par,module,sb,type,exp,user)
 ; $$check^LVBBBTRS(par,sb,sa)
 ;
  ;---&sql(DECLARE BBTRS CURSOR FOR SELECT * FROM CTBB_TransactionStatus
   ;---         WHERE BBTRS_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
  ;---&SQL(OPEN BBTRS)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBTRS0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
  ;---&SQL(FETCH BBTRS INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE BBTRS)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBTRS0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM CTBB_TransactionStatus WHERE BBTRS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1)
 s PLIST(2)=$o(^TTAB("BB-TR",par,"STATUS",""),-1)+1
  ;---&sql(INSERT INTO CTBB_TransactionStatus VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE CTBB_TransactionStatus VALUES :PLIST() WHERE BBTRS_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(RowID,Comments) s RowID=$g(RowID),^TMP("Comments",$j)=$g(Comments)
  ;---&sql(DELETE FROM CTBB_TransactionStatus WHERE BBTRS_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("Comments",$j)
 q SQLCODE
check(par,sb,sa) n (par,sb,sa) s par=$g(par),sb=$g(sb),sa=$g(sa)
  ;---&sql(SELECT BBTRS_RowID INTO :%ROWID FROM CTBB_TransactionStatus
   ;---         WHERE BBTRS_ParRef=:par
   ;---           AND BBTRS_StatusBefore_DR = :sb
   ;---           AND BBTRS_StatusAfter_DR = :sa)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par, sa, sb
 Do %0No
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 f j=3,4 I $G(PLIST(j))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBST(plist(j),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(j)=X K plist
 q
getall(par,module,sb,type,exp,user) n (par,module,sb,type,exp,user,PLIST) k ^TMP($zn,$j)
 s par=$g(par),module=$g(module),sb=$g(sb),type=$g(type),exp=$g(exp),user=$g(user)
  ;---s uType="" &sql(SELECT SSUSR_SupervisorForBB INTO :uType FROM SS_User WHERE SSUSR_RowID=:user)
   ;--- ** SQL PUBLIC Variables: SQLCODE, uType, user
 s uType="" Do %0Po
 s uType=$p(uType,$c(1))
 i $$open(par)
 s cnt=0 f  q:$$fetch(par)  d
 . ; different user
 .i uType'="Y",$p(PLIST(6),$c(1))="Y" q
 . ; different module
 .i $l(module),$p($p(PLIST(8),$c(1)),",",module)'="Y" q
 . ; different type
 .i type'="ANY" s stop=0 d  i stop q
 ..i $l(type),$p($p(PLIST(9),$c(1)),",",$tr(type,"ACIEQ","12345"))'="Y" s stop=1 q
 ..i '$l(type),"N,N,N,N,N"'[$p(PLIST(9),$c(1),1) s stop=1 q
 . ; different status before
 .i $p(PLIST(3),$c(1))'=sb q
 . ; if unit expired display only status after->OUT
 .i exp="Y",$l($p(PLIST(4),$c(1))),$p($g(^TTAB("BB-ST",$p(PLIST(4),$c(1)))),"\",2)'="OUT" q
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s cnt=cnt+1,^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(4),$c(1),2)_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 Q 0
 ;
 q
%BBTRS0o s $zt="%BBTRS0E" s SQLCODE=$s($g(%BBTRS0c):-101,1:0) q:SQLCODE'=0  s %BBTRS0d(14)=0 s %BBTRS0d(15)=0,%BBTRS0d(16)=""
 s %BBTRS0d(11)=$g(par)
 s %BBTRS0c=1 q
%BBTRS0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %BBTRS0c,%BBTRS0d,%BBTRS0E,%BBTRS0l,%BBTRS0n,%BBTRS0R,%BBTRS0Z q
%0Afirst 
 ; asl MOD# 2
 s %BBTRS0d(1)=%BBTRS0d(11)
 i %BBTRS0d(1)="" g %0ABdun
 s %BBTRS0d(3)=""
%0ABk1 s %BBTRS0d(3)=$o(^TTAB("BB-TR",%BBTRS0d(1),"STATUS",%BBTRS0d(3)))
 i %BBTRS0d(3)="" g %0ABdun
 s %BBTRS0d(24)=$g(^TTAB("BB-TR",%BBTRS0d(1),"STATUS",%BBTRS0d(3)))
 s %BBTRS0d(4)=$p(%BBTRS0d(24),"\",1) s %BBTRS0d(5)=$p(%BBTRS0d(24),"\",2) s %BBTRS0d(6)=$p(%BBTRS0d(24),"\",3) s %BBTRS0d(7)=$p(%BBTRS0d(24),"\",5) s %BBTRS0d(8)=$p(%BBTRS0d(24),"\",4) s %BBTRS0d(9)=$p(%BBTRS0d(24),"\",6) s %BBTRS0d(10)=$p(%BBTRS0d(24),"\",7)
 s %BBTRS0d(2)=(%BBTRS0d(1))_"||"_(%BBTRS0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("BB-TR",$p(%BBTRS0d(2),"||",1),"STATUS",$p(%BBTRS0d(2),"||",2))#"S":$zu(115,4) i $t { s %BBTRS0d(15)=1,%BBTRS0d(16)=$name(^TTAB("BB-TR",$p(%BBTRS0d(2),"||",1),"STATUS",$p(%BBTRS0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_TransactionStatus for RowID value: "_%BBTRS0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %BBTRS0d(13)=$p(%BBTRS0d(2),"||"),%BBTRS0d(3)=$p(%BBTRS0d(2),"||",2)
 i %BBTRS0d(13)'="",%BBTRS0d(3)'="",$d(^TTAB("BB-TR",%BBTRS0d(13),"STATUS",%BBTRS0d(3)))
 e  g %0ACdun
 s %BBTRS0d(32)=$g(^TTAB("BB-TR",%BBTRS0d(13),"STATUS",%BBTRS0d(3)))
 s %BBTRS0d(4)=$p(%BBTRS0d(32),"\",1) s %BBTRS0d(5)=$p(%BBTRS0d(32),"\",2) s %BBTRS0d(6)=$p(%BBTRS0d(32),"\",3) s %BBTRS0d(7)=$p(%BBTRS0d(32),"\",5) s %BBTRS0d(8)=$p(%BBTRS0d(32),"\",4) s %BBTRS0d(9)=$p(%BBTRS0d(32),"\",6) s %BBTRS0d(10)=$p(%BBTRS0d(32),"\",7)
 s %BBTRS0d(1)=$p(%BBTRS0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %BBTRS0d(14)=%BBTRS0d(14)+1,%ROWCOUNT=%BBTRS0d(14),%ROWID=%BBTRS0d(2),%BBTRS0c=10 q
%BBTRS0f i '$g(%BBTRS0c) { s SQLCODE=-102 q  } i %BBTRS0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%BBTRS0d(14))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%BBTRS0d(14),%BBTRS0c=100 q  } g %0Afirst:%BBTRS0c=1
%0ACdun i $zu(115,2)=1,$g(%BBTRS0d(15))=1 { l -@%BBTRS0d(16) s %BBTRS0d(15)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%BBTRS0d(14),SQLCODE=100,%BBTRS0c=100 q
%BBTRS0c i '$g(%BBTRS0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%BBTRS0d(14)),1:0)
 i $zu(115,2)=1,$g(%BBTRS0d(15))=1 { l -@%BBTRS0d(16) } k %BBTRS0c,%BBTRS0d,%BBTRS0E,%BBTRS0l,%BBTRS0n,%BBTRS0R,%BBTRS0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %BBTRS0c=100 q
%0Do d %BBTRS0f q:SQLCODE'=0
 s PLIST(0)=%BBTRS0d(1),PLIST(1)=%BBTRS0d(2),PLIST(2)=%BBTRS0d(3),PLIST(3)=%BBTRS0d(4),PLIST(4)=%BBTRS0d(5),PLIST(5)=%BBTRS0d(6),PLIST(6)=%BBTRS0d(7),PLIST(7)=%BBTRS0d(8),PLIST(8)=%BBTRS0d(9),PLIST(9)=%BBTRS0d(10)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(15)=0,%mmmsqld(16)=""
 s %mmmsqld(12)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(12)
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(14)'="",PLIST(2)'="",$d(^TTAB("BB-TR",%mmmsqld(14),"STATUS",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(24)=$g(^TTAB("BB-TR",%mmmsqld(14),"STATUS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(24),"\",1) s PLIST(4)=$p(%mmmsqld(24),"\",2) s PLIST(5)=$p(%mmmsqld(24),"\",3) s PLIST(6)=$p(%mmmsqld(24),"\",5) s PLIST(7)=$p(%mmmsqld(24),"\",4) s PLIST(8)=$p(%mmmsqld(24),"\",6) s PLIST(9)=$p(%mmmsqld(24),"\",7)
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TTAB("BB-TR",$p(PLIST(1),"||",1),"STATUS",$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(15)=1,%mmmsqld(16)=$name(^TTAB("BB-TR",$p(PLIST(1),"||",1),"STATUS",$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_TransactionStatus for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(14)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(14)'="",PLIST(2)'="",$d(^TTAB("BB-TR",%mmmsqld(14),"STATUS",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(32)=$g(^TTAB("BB-TR",%mmmsqld(14),"STATUS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(32),"\",1) s PLIST(4)=$p(%mmmsqld(32),"\",2) s PLIST(5)=$p(%mmmsqld(32),"\",3) s PLIST(6)=$p(%mmmsqld(32),"\",5) s PLIST(7)=$p(%mmmsqld(32),"\",4) s PLIST(8)=$p(%mmmsqld(32),"\",6) s PLIST(9)=$p(%mmmsqld(32),"\",7)
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) s %mmmsqld(15)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(15))=1 { l -@%mmmsqld(16) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:9 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTBBTransactionStatus.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("BB-TR",%mmmsqld(4),"STATUS",%mmmsqld(5)))
 e  g %0JBdun
 s %mmmsqld(15)=$$%getlock^User.CTBBTransactionStatus.T1(%mmmsqld(2)) i '%mmmsqld(15) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("BB-TR",%mmmsqld(4),"STATUS",%mmmsqld(5)))
 e  g %0JCdun
 k %data
 f icol=0:1:9 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTBBTransactionStatus.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(15)=1 %ReleaseLock^User.CTBBTransactionStatus.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(15)=1 %ReleaseLock^User.CTBBTransactionStatus.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(15))=1 %ReleaseLock^User.CTBBTransactionStatus.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("BB-TR",%mmmsqld(3),"STATUS",%mmmsqld(4)))
 e  g %0LBdun
 s %mmmsqld(14)=$$%getlock^User.CTBBTransactionStatus.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("BB-TR",%mmmsqld(3),"STATUS",%mmmsqld(4)))
 e  g %0LCdun
 d %delete^User.CTBBTransactionStatus.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.CTBBTransactionStatus.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.CTBBTransactionStatus.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.CTBBTransactionStatus.T1(%mmmsqld(1)) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(4)=$g(par),%mmmsqld(6)=$g(sb),%mmmsqld(8)=$g(sa)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)="" g %0NBdun
 s %mmmsqld(10)=""
%0NBk1 s %mmmsqld(10)=$o(^TTAB("BB-TR",%mmmsqld(3),"STATUS",%mmmsqld(10)))
 i %mmmsqld(10)="" g %0NBdun
 s %mmmsqld(23)=$g(^TTAB("BB-TR",%mmmsqld(3),"STATUS",%mmmsqld(10)))
 s %mmmsqld(5)=$p(%mmmsqld(23),"\",1)
 g:'(%mmmsqld(5)=%mmmsqld(6)) %0NBk1
 g:'(%mmmsqld(5)'="") %0NBk1
 s %mmmsqld(7)=$p(%mmmsqld(23),"\",2)
 g:'(%mmmsqld(7)=%mmmsqld(8)) %0NBk1
 g:'(%mmmsqld(7)'="") %0NBk1
 s %ROWID=(%mmmsqld(3))_"||"_(%mmmsqld(10))
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^TTAB("BB-TR",$p(%ROWID,"||",1),"STATUS",$p(%ROWID,"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TTAB("BB-TR",$p(%ROWID,"||",1),"STATUS",$p(%ROWID,"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CTBB_TransactionStatus for RowID value: "_%ROWID ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(11)=$lb(""_%mmmsqld(7),""_%mmmsqld(5))
 s %mmmsqld(12)=$p(%ROWID,"||"),%mmmsqld(10)=$p(%ROWID,"||",2)
 i %mmmsqld(12)'="",%mmmsqld(10)'="",$d(^TTAB("BB-TR",%mmmsqld(12),"STATUS",%mmmsqld(10)))
 e  g %0NCdun
 s %mmmsqld(31)=$g(^TTAB("BB-TR",%mmmsqld(12),"STATUS",%mmmsqld(10)))
 s %mmmsqld(5)=$p(%mmmsqld(31),"\",1) s %mmmsqld(7)=$p(%mmmsqld(31),"\",2)
 s %mmmsqld(3)=$p(%ROWID,"||")
 s %mmmsqld(13)=$lb(""_%mmmsqld(7),""_%mmmsqld(5))
 g:%mmmsqld(11)'=%mmmsqld(13) %0NCdun
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
 g %0NBk1
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
%0Po n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Perr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(user)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^SSU("SSUSR",1,%mmmsqld(3)))
 e  g %0PBdun
 s %mmmsqld(14)=$g(^SSU("SSUSR",1,%mmmsqld(3)))
 s uType=$p(%mmmsqld(14),"^",14)
 g:$zu(115,2)=0 %0PBuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^SSU("SSUSR",1,$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^SSU("SSUSR",1,%mmmsqld(3)))
 e  g %0PCdun
 s %mmmsqld(21)=$g(^SSU("SSUSR",1,%mmmsqld(3)))
 s uType=$p(%mmmsqld(21),"^",14)
%0PBuncommitted ;
 s SQLCODE=0 g %0Pc
%0PCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0PBdun 
%0PAdun 
%0Pc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Perr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Pc
]]></Routine>
</Export>
