<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVISSN" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVISSN ; IG 6/5/98 ; LVB Control data access for VISSN EP_VisitTestSetSnomedRes
 ;
 ; supported calls:
 ;
 ; $$insert^LVBVISSN(par)
 ; $$update^LVBVISSN(ROWID,app,group)
 ; $$select^LVBVISSN(ROWID)
 ; $$delete^LVBVISSN(ROWID,app,group)
 ; $$delall^LVBVISSN(par,Xgroup,app,group)
 ; $$open^LVBVISSN(par,Xgroup)
 ; $$fetch^LVBVISSN(par,Xgroup)
 ; $$close^LVBVISSN()
 ; $$getall^LVBVISSN(par,Xgroup)
 ; $$getall1^LVBVISSN(tests,selected,spec)
 ; $$savegr^LVBVISSN(par,Xgroup,app,group)
 ; $$addTC^LVBVISSN(list,TCode,mc)
 ;
  ;---&sql(DECLARE VISSN CURSOR FOR SELECT * FROM EP_VisitTestSetSnomedRes
   ;---         WHERE VISSN_ParRef = :par
   ;---         AND ((VISSN_Group = :Xgroup) OR (:Xgroup IS NULL))
   ;---         ORDER BY VISSN_Group)
   ;--- ** SQL PUBLIC Variables: SQLCODE, Xgroup, par
 ;
addTC(list,TCode,mc) n (list,TCode,mc) s list=$g(list),TCode=$g(TCode),mc=$g(mc)
 s TCode=$p(TCode,$c(1),1)
 s PCode="" i '$$select^LVBCTMCL(mc,"Y") s PCode=PLIST(4)
 f j1=1:1:$l(list,",") d
 .s x=$p(list,",",j1),ok=1
 .s test=$p(x,"||",2) i '$$select^LVBCTTS(test,"Y")," M O "[(" "_PLIST(38)_" ") d
 ..i $$open(x)
 ..s max=0 f  q:$$fetch(x)  s max=$s(max>PLIST(4):max,1:PLIST(4)) i $p(PLIST(3),$c(1))=TCode s ok=0 q
 ..i $$close()
 ..i ok d
 ...k PLIST s PLIST(3)=TCode,PLIST(4)=max+1
 ...i '$$insert(x),$l(PCode) k PLIST s PLIST(3)=PCode,PLIST(4)=max+1 i '$$insert(x)
 q 0
open(par,Xgroup) s par=$g(par),Xgroup=$g(Xgroup)
  ;---&SQL(OPEN VISSN)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISSN0o
 q 0
 ;
fetch(par,Xgroup) k PLIST s par=$g(par),Xgroup=$g(Xgroup)
  ;---&SQL(FETCH VISSN INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
close()  ;---&SQL(CLOSE VISSN)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %VISSN0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM EP_VisitTestSetSnomedRes WHERE VISSN_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) k PLIST(1),PLIST(2)
 s x1=$p(PLIST(0),"||",1),x2=$p(PLIST(0),"||",2),x3=$p(PLIST(0),"||",3)
 i $l(x1),$l(x2),$l(x3) s PLIST(2)=$o(^TEPI(x1,1,x2,x3,"SNOMED",""),-1)+1
  ;---&sql(INSERT INTO EP_VisitTestSetSnomedRes VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID,app,group) d pre("Y") s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(UPDATE EP_VisitTestSetSnomedRes VALUES :PLIST() WHERE VISSN_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Jo
 k ^TMP("FUNCTION",$j)
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID,app,group) s RowID=$g(RowID),app=$g(app),group=$g(group)
 s ^TMP("FUNCTION",$j)=app_$c(1)_group
  ;---&sql(DELETE FROM EP_VisitTestSetSnomedRes WHERE VISSN_RowID = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Lo
 k ^TMP("FUNCTION",$j)
 q SQLCODE
delall(par,Xgroup,app,group) s par=$g(par),Xgroup=$g(Xgroup),app=$g(app),group=$g(group)
 i $$open(par,Xgroup)
 f  q:$$fetch(par,Xgroup)  i $$delete(PLIST(1),app,group)
 i $$close()
 q 0
 ; Adjust certain fields
pre(xUpdate) d PreSQL^SSUTIL4()
 q
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 i $g(PLIST(3))'="" d
 .k plist m plist=PLIST k PLIST
 .s SQLCODE=$$select^LVBTSNO(plist(3))
 .s X="" i 'SQLCODE s X=PLIST(2)_$c(1)_PLIST(3)_$c(1)_PLIST(6)_$c(1)_PLIST(7)
 .k PLIST m PLIST=plist s PLIST(3)=X k plist
 q
 ;
getall(par,Xgroup) n (par,Xgroup,PLIST) k ^TMP($zn,$j) s par=$g(par),Xgroup=$g(Xgroup)
 i $$open(par,Xgroup)
 f cnt=1:1 q:$$fetch(par,Xgroup)  d
 .s str=$p(PLIST(3),$c(1),2)_$c(28)_$p(PLIST(4),$c(1),1)_$c(28)_$p(PLIST(3),$c(1),3)_$c(28)_$p(PLIST(3),$c(1),4)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1),1)_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; get all groups and return common groups/codes
getall1(tests,selected,spec) n (tests,selected,spec,PLIST) s tests=$g(tests),selected=$g(selected),spec=$g(spec)
 k ^TMP($zn,$j)
 i $l(spec),'$$select^LVBCTSPE(spec,"Y"),$l(PLIST(7)) s selected=PLIST(7) s ^TMP($zn,$j,PLIST(7))="Y"
 i $l(tests) d
 .s cnt=0,list="" f i=1:1:$l(tests,",") s vtsRID=$p(tests,",",i) i $l(vtsRID) s cnt=cnt+1 d
 .. ; find T-codes only
 ..i $$open(vtsRID)
 ..f  q:$$fetch(vtsRID)   i $p(PLIST(3),"-",1)="T" s ^TMP($zn,$j,$p(PLIST(3),$c(1)),vtsRID,$p(PLIST(4),$c(1)))=""
 ..i $$close()
 .s x1="" f  s x1=$o(^TMP($zn,$j,x1)) q:x1=""  d
 ..s x2="" f j=0:1 s x2=$o(^TMP($zn,$j,x1,x2)) q:x2=""
 ..i j'=cnt,$g(^TMP($zn,$j,x1))'="Y" k ^TMP($zn,$j,x1)
 . ; check for currently selected group
 .s x1="" f  s x1=$o(^TMP($zn,$j,x1)) q:x1=""  s ^(x1)="" i selected=x1 s ^(x1)="Y"
 .s x1=$o(^TMP($zn,$j,""))
 .s x2=$o(^TMP($zn,$j,""),-1)
 .i $l(x1),$l(x2),x1=x2 s ^TMP($zn,$j,x1)="Y"
 s x1="" f  s x1=$o(^TMP($zn,$j,x1)) q:x1=""  d
 .s (cnt,x2)="" f  s x2=$o(^TMP($zn,$j,x1,x2)) q:x2=""  d
 ..s x3="" f  s x3=$o(^TMP($zn,$j,x1,x2,x3)) q:x3=""  d
 ...s xx=$p(^TMP($zn,$j,x1),$c(28),2)
 ...s cnt=cnt+1,$p(xx,",",cnt)=(x2_"||"_x3)
 ...s $p(^TMP($zn,$j,x1),$c(28),2)=xx
 k PLIST
 s x1="" f cnt=1:1 s x1=$o(^TMP($zn,$j,x1)) q:x1=""  d
 .s PLIST(cnt)=x1_$c(2)_$p($g(^TSNO(x1)),"\",7)_$c(2)_x1_"   "_$p($g(^TSNO(x1)),"\")_$c(2)_^TMP($zn,$j,x1)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; save group
savegr(par,Xgroup,app,group) n (par,Xgroup,app,group,PLIST) s par=$g(par),Xgroup=$g(Xgroup),app=$g(app),group=$g(group)
 k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST
 i $l(Xgroup),$$delall(par,Xgroup,app,group)
 i '$l(Xgroup) d  s Xgroup=$s('$l(Xgroup):1,1:Xgroup+1)
 .i $$open(par)
 .f cnt=1:1 q:$$fetch(par)  i $p(PLIST(4),$c(1),1)>Xgroup s Xgroup=$p(PLIST(4),$c(1),1)
 .i $$close()
 s xx1="" f  s xx1=$o(^TMP($zn,$j,xx1)) q:xx1=""  i $l(^(xx1)) d
 .k PLIST s PLIST(3)=^(xx1),PLIST(4)=Xgroup i $$insert(par)
 k PLIST s PLIST(1)=Xgroup,PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%VISSN0o s $zt="%VISSN0E" s SQLCODE=$s($g(%VISSN0c):-101,1:0) q:SQLCODE'=0  s %VISSN0d(13)=0 s %VISSN0d(14)=0,%VISSN0d(15)=""
 s %VISSN0d(6)=$g(par),%VISSN0d(7)=$g(Xgroup),%VISSN0d(8)=$g(Xgroup)
 s %VISSN0t(1)=$i(^||%sql.temp)
 s %VISSN0c=1 q
%VISSN0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %VISSN0c,%VISSN0d,%VISSN0E,%VISSN0l,%VISSN0n,%VISSN0R,%VISSN0s,%VISSN0t,%VISSN0Z q
%0Afirst 
 k ^||%sql.temp(%VISSN0t(1),0) s ^||%sql.temp(%VISSN0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%VISSN0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%VISSN0t(1),0))
 s %VISSN0s(5)=""
%0ACk1 s %VISSN0s(5)=$o(^||%sql.temp(%VISSN0t(1),0,%VISSN0s(5)))
 i %VISSN0s(5)="" g %0ACdun
 s %VISSN0d(5)=$s(%VISSN0s(5)=-1E14:"",1:%VISSN0s(5))
 s %VISSN0s(2)=""
%0ACk2 s %VISSN0s(2)=$o(^||%sql.temp(%VISSN0t(1),0,%VISSN0s(5),%VISSN0s(2)))
 i %VISSN0s(2)="" g %0ACk1
 s %VISSN0d(2)=$s(%VISSN0s(2)=-1E14:"",1:%VISSN0s(2))
 s %VISSN0d(28)=$g(^||%sql.temp(%VISSN0t(1),0,%VISSN0s(5),%VISSN0s(2)))
 s %VISSN0d(1)=$lg(%VISSN0d(28),2) s %VISSN0d(3)=$lg(%VISSN0d(28),1) s %VISSN0d(4)=$lg(%VISSN0d(28),3)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TEPI($p(%VISSN0d(2),"||",1),1,$p(%VISSN0d(2),"||",2),$p(%VISSN0d(2),"||",3),"SNOMED",$p(%VISSN0d(2),"||",4))#"S":$zu(115,4) i $t { s %VISSN0d(14)=1,%VISSN0d(15)=$name(^TEPI($p(%VISSN0d(2),"||",1),1,$p(%VISSN0d(2),"||",2),$p(%VISSN0d(2),"||",3),"SNOMED",$p(%VISSN0d(2),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitTestSetSnomedRes for RowID value: "_%VISSN0d(2) ztrap "LOCK"  }
 ; asl MOD# 4
 s %VISSN0d(10)=$p(%VISSN0d(2),"||"),%VISSN0d(11)=$p(%VISSN0d(2),"||",2),%VISSN0d(12)=$p(%VISSN0d(2),"||",3),%VISSN0d(3)=$p(%VISSN0d(2),"||",4)
 i %VISSN0d(10)'="",%VISSN0d(11)'="",%VISSN0d(12)'="",%VISSN0d(3)'="",$d(^TEPI(%VISSN0d(10),1,%VISSN0d(11),%VISSN0d(12),"SNOMED",%VISSN0d(3)))
 i '$t
 e  i 1]]%VISSN0d(3)
 i  g %0ADdun
 s %VISSN0d(38)=$g(^TEPI(%VISSN0d(10),1,%VISSN0d(11),%VISSN0d(12),"SNOMED",%VISSN0d(3)))
 s %VISSN0d(5)=$p(%VISSN0d(38),"\",2)
 g:'(((%VISSN0d(5)'="")&&(%VISSN0d(5)=%VISSN0d(7)))||(%VISSN0d(8)="")) %0ADdun
 s %VISSN0d(4)=$p(%VISSN0d(38),"\",1)
 s %VISSN0d(1)=$p(%VISSN0d(2),"||",1,3)
 g:'(%VISSN0d(1)=%VISSN0d(6)) %0ADdun
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %VISSN0d(13)=%VISSN0d(13)+1,%ROWCOUNT=%VISSN0d(13),%ROWID=%VISSN0d(2),%VISSN0c=10 q
%VISSN0f i '$g(%VISSN0c) { s SQLCODE=-102 q  } i %VISSN0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%VISSN0d(13))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%VISSN0d(13),%VISSN0c=100 q  } g %0Afirst:%VISSN0c=1
%0ADdun i $zu(115,2)=1,$g(%VISSN0d(14))=1 { l -@%VISSN0d(15) s %VISSN0d(14)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%VISSN0d(13),SQLCODE=100,%VISSN0c=100 q
%VISSN0c i '$g(%VISSN0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%VISSN0d(13)),1:0) f %VISSN0d(16)=1 { i $sortend(^||%sql.temp(%VISSN0t(%VISSN0d(16)),0),0) } k ^||%sql.temp(%VISSN0t(1))
 i $zu(115,2)=1,$g(%VISSN0d(14))=1 { l -@%VISSN0d(15) } k %VISSN0c,%VISSN0d,%VISSN0E,%VISSN0l,%VISSN0n,%VISSN0R,%VISSN0s,%VISSN0t,%VISSN0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %VISSN0c=100
 f %VISSN0d(16)=1 i $sortend(^||%sql.temp(%VISSN0t(%VISSN0d(16)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %VISSN0d(1)=%VISSN0d(6)
 s %VISSN0d(10)=$p(%VISSN0d(1),"||"),%VISSN0d(11)=$p(%VISSN0d(1),"||",2),%VISSN0d(12)=$p(%VISSN0d(1),"||",3)
 i %VISSN0d(10)="" g %0ABdun
 i %VISSN0d(11)="" g %0ABdun
 i %VISSN0d(12)="" g %0ABdun
 s %VISSN0d(3)=""
%0ABk1 s %VISSN0d(3)=$o(^TEPI(%VISSN0d(10),1,%VISSN0d(11),%VISSN0d(12),"SNOMED",%VISSN0d(3)))
 i %VISSN0d(3)="" g %0ABdun
 i 1]]%VISSN0d(3) g %0ABk1
 s %VISSN0d(26)=$g(^TEPI(%VISSN0d(10),1,%VISSN0d(11),%VISSN0d(12),"SNOMED",%VISSN0d(3)))
 s %VISSN0d(5)=$p(%VISSN0d(26),"\",2)
 g:'(((%VISSN0d(5)'="")&&(%VISSN0d(5)=%VISSN0d(7)))||(%VISSN0d(8)="")) %0ABk1
 s %VISSN0d(4)=$p(%VISSN0d(26),"\",1)
 s %VISSN0d(2)=(%VISSN0d(10))_"||"_(%VISSN0d(11))_"||"_(%VISSN0d(12))_"||"_(%VISSN0d(3))
 s %VISSN0s(5)=$s(%VISSN0d(5)'="":%VISSN0d(5),1:-1E14),%VISSN0s(2)=$s(%VISSN0d(2)'="":%VISSN0d(2),1:-1E14),%VISSN0d(27)="",$li(%VISSN0d(27),2)=%VISSN0d(1),$li(%VISSN0d(27),1)=%VISSN0d(3),$li(%VISSN0d(27),3)=%VISSN0d(4),^||%sql.temp(%VISSN0t(1),0,%VISSN0s(5),%VISSN0s(2))=%VISSN0d(27)
 g %0ABk1
%0ABdun 
 q
%0Do d %VISSN0f q:SQLCODE'=0
 s PLIST(0)=%VISSN0d(1),PLIST(1)=%VISSN0d(2),PLIST(2)=%VISSN0d(3),PLIST(3)=%VISSN0d(4),PLIST(4)=%VISSN0d(5)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(12)=0,%mmmsqld(13)=""
 s %mmmsqld(7)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(9),1,%mmmsqld(10),%mmmsqld(11),"SNOMED",PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0FBdun
 s %mmmsqld(23)=$g(^TEPI(%mmmsqld(9),1,%mmmsqld(10),%mmmsqld(11),"SNOMED",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(23),"\",1) s PLIST(4)=$p(%mmmsqld(23),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TEPI($p(PLIST(1),"||",1),1,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"SNOMED",$p(PLIST(1),"||",4))#"S":$zu(115,4) i $t { s %mmmsqld(12)=1,%mmmsqld(13)=$name(^TEPI($p(PLIST(1),"||",1),1,$p(PLIST(1),"||",2),$p(PLIST(1),"||",3),"SNOMED",$p(PLIST(1),"||",4)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitTestSetSnomedRes for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),%mmmsqld(11)=$p(PLIST(1),"||",3),PLIST(2)=$p(PLIST(1),"||",4)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",%mmmsqld(11)'="",PLIST(2)'="",$d(^TEPI(%mmmsqld(9),1,%mmmsqld(10),%mmmsqld(11),"SNOMED",PLIST(2)))
 i '$t
 e  i 1]]PLIST(2)
 i  g %0FCdun
 s %mmmsqld(33)=$g(^TEPI(%mmmsqld(9),1,%mmmsqld(10),%mmmsqld(11),"SNOMED",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(33),"\",1) s PLIST(4)=$p(%mmmsqld(33),"\",2)
 s PLIST(0)=$p(PLIST(1),"||",1,3)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) s %mmmsqld(12)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(12))=1 { l -@%mmmsqld(13) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.EPVisitTestSetSnomedRes.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Jerr" s %mmmsqld(8)=0 s %mmmsqld(9)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6),"SNOMED",%mmmsqld(7)))
 i '$t
 e  i 1]]%mmmsqld(7)
 i  g %0JBdun
 s %mmmsqld(19)=$$%getlock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(2)) i '%mmmsqld(19) s SQLCODE=-110 g %0Jc
 ; asl MOD# 3
 s %mmmsqld(4)=$p(%mmmsqld(2),"||"),%mmmsqld(5)=$p(%mmmsqld(2),"||",2),%mmmsqld(6)=$p(%mmmsqld(2),"||",3),%mmmsqld(7)=$p(%mmmsqld(2),"||",4)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",%mmmsqld(7)'="",$d(^TEPI(%mmmsqld(4),1,%mmmsqld(5),%mmmsqld(6),"SNOMED",%mmmsqld(7)))
 i '$t
 e  i 1]]%mmmsqld(7)
 i  g %0JCdun
 k %data
 f icol=0:1:4 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(8))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(19)=1 %ReleaseLock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(2)) g %0Jc
%0JCdun 
 d:%mmmsqld(19)=1 %ReleaseLock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(2)) g:SQLCODE<0 %0Jc
%0JBdun 
%0JAdun 
%0Jc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(8)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Jerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(19))=1 %ReleaseLock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(2)) g %0Jc
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(7)=0 s %mmmsqld(8)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(3),1,%mmmsqld(4),%mmmsqld(5),"SNOMED",%mmmsqld(6)))
 i '$t
 e  i 1]]%mmmsqld(6)
 i  g %0LBdun
 s %mmmsqld(18)=$$%getlock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(1)) i '%mmmsqld(18) s SQLCODE=-110 g %0Lc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3),%mmmsqld(6)=$p(%mmmsqld(1),"||",4)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",%mmmsqld(6)'="",$d(^TEPI(%mmmsqld(3),1,%mmmsqld(4),%mmmsqld(5),"SNOMED",%mmmsqld(6)))
 i '$t
 e  i 1]]%mmmsqld(6)
 i  g %0LCdun
 d %delete^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(7))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(18)=1 %ReleaseLock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(1)) g %0Lc
%0LCdun 
 d:%mmmsqld(18)=1 %ReleaseLock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(1)) g:SQLCODE<0 %0Lc
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(7)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(18))=1 %ReleaseLock^User.EPVisitTestSetSnomedRes.T1(%mmmsqld(1)) g %0Lc
]]></Routine>
</Export>
