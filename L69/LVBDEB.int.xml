<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBDEB" type="INT" languagemode="0" generated="1"><![CDATA[
LVBDEB ; IG 24/06/98 ; LVB Control data access for DEB_Debtor
 ;
 ; supported calls:
 ;
 ; $$select^LVBDEB(RowID)
 ; $$insert^LVBDEB()
 ; $$update^LVBDEB(RowID)
 ; $$delete^LVBDEB(RowID)
 ; $$new^LVBDEB(pref)
 ; $$link^LVBDEB(epis,deb,app,group)
 ; $$history^LVBDEB(deb,flag,type)
 ; $$save^LVBDEB(deb)
 ; $$check^LVBDEB(deb)
 ; $$tests^LVBDEB(deb)
 ; $$donors^LVBDEB(deb)
 ; $$getkids^LVBDEB(mother,father,type)
 ;
donors(mrn) n (mrn) s mrn=$g(mrn),result=""
 i $l(mrn) d
 .s date="" f  s date=$o(^TDEB(mrn,date)) q:date=""  d
 ..s epis="" f  s epis=$o(^TDEB(mrn,date,0,epis)) q:epis=""  d
 ...s donor=$$seldata^LVBEPVIS(epis,46) i $l(donor) s donor(donor)=""
 .s donor="" f  s donor=$o(donor(donor)) q:donor=""  s result=result_$s($l(result):",",1:"")_donor
 q result
tests(mrn) n (mrn) s mrn=$g(mrn),result=""
 i $l(mrn) s date="" f  s date=$o(^TDEB(mrn,date)) q:date=""  d
 .s epis="" f  s epis=$o(^TDEB(mrn,date,0,epis)) q:epis=""  d
 ..s ts="" f  s ts=$o(^TEPI(epis,1,ts)) q:ts=""  s test(ts)=""
 s ts="" f  s ts=$o(test(ts)) q:ts=""  s result=result_$s($l(result):",",1:"")_ts
 q result
invoices(mrn) n (mrn,PLIST) s mrn=$g(mrn)
 i $l(mrn) s date="" f  s date=$o(^TDEB(mrn,date)) q:date=""  d
 .s epis="" f  s epis=$o(^TDEB(mrn,date,0,epis)) q:epis=""  d
 ..s x=$$invoice^LVBEPVIS(epis) i $l(x),'$d(invoices(x)) s PLIST=$o(PLIST(""),-1)+1,PLIST(PLIST)=x,invoices(x)=""
 s PLIST=$o(PLIST(""),-1)
 q 0
 ; PLIST: 1 - MRN
 ;        2 - Name
 ;        3 - DOB
 ;        4 - Sex
 ;        5 - Blood Group
 ;        6 - Mother's MRN
 ;        7 - Father's MRN
getkids(mother,father) n (mother,father,PLIST) s mother=$g(mother),father=$g(father) k ^TMP($zn,$j)
 i $l(mother) s x="" f  s x=$o(^TDEBj("MOTHER",mother,x)) q:x=""  s ^TMP($zn,$j,0,x)=""
 i $l(father) s x="" f  s x=$o(^TDEBj("FATHER",father,x)) q:x=""  s ^TMP($zn,$j,0,x)=""
 s x="" f  s x=$o(^TMP($zn,$j,0,x)) q:x=""  i '$$select(x) d
 .d
 ..K plist M plist=PLIST K PLIST
 ..S SQLCODE=$$select^LVBEPVIS(plist(4),"Y")
 ..S X="" I 'SQLCODE d
 ...I $G(PLIST(5))'="" D
 ....K plist1 M plist1=PLIST K PLIST
 ....S SQLCODE=$$select^LVBCTSP(plist1(5),"Y")
 ....S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 ....K PLIST M PLIST=plist1 S PLIST(5)=X K plist1
 ...S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("PT",$p(PLIST(7),$c(1),2),PLIST(4),PLIST(3),PLIST(99),PLIST(100),PLIST(101))_$c(1)_PLIST(6)_$c(1)_$p(PLIST(5),$c(1),2)
 ..K PLIST M PLIST=plist S PLIST(4)=X K plist
 .s str="",$p(str,$c(28),1)=x
 .s $p(str,$c(28),2)=$p(PLIST(4),$c(1),2)
 .s $p(str,$c(28),3)=$p(PLIST(4),$c(1),3)
 .s $p(str,$c(28),4)=$p(PLIST(4),$c(1),4)
 .s $p(str,$c(28),5)=$s($l(PLIST(9)):PLIST(9),$l(PLIST(16)):PLIST(16),1:PLIST(15))
 .s $p(str,$c(28),6)=PLIST(12)
 .s $p(str,$c(28),7)=PLIST(13)
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1,^TMP($zn,$j,1,cnt)=str
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q 0
save(deb) n (deb,PLIST) k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST
 i $l($g(^TMP($zn,$j,5))) k PLIST s PLIST(1)=$s(^(5)="***Empty***":"",1:^(5)),PLIST=1 i $$history(deb,2,5)
 i $l($g(^TMP($zn,$j,6))) k PLIST s PLIST(1)=$s(^(6)="***Empty***":"",1:^(6)),PLIST=1 i $$history(deb,2,1)
 i $l($g(^TMP($zn,$j,7))) k PLIST s PLIST(1)=$s(^(7)="***Empty***":"",1:^(7)),PLIST=1 i $$history(deb,2,0)
 i $l($g(^TMP($zn,$j,9))) k PLIST s PLIST(1)=$s(^(9)="***Empty***":"",1:^(9)),PLIST=1 i $$history(deb,2,3)
 i $l($g(^TMP($zn,$j,10))) k PLIST s PLIST(1)=$s(^(10)="***Empty***":"",1:^(10)),PLIST=1 i $$history(deb,2,4)
 i $l($g(^TMP($zn,$j,11))) k PLIST s PLIST(1)=$s(^(11)="***Empty***":"",1:^(11)),PLIST=1 i $$history(deb,2,6)
 i $l($g(^TMP($zn,$j,12))) k PLIST s PLIST(1)=$s(^(12)="***Empty***":"",1:^(12)),PLIST=1 i $$history(deb,2,7)
 i $l($g(^TMP($zn,$j,13))) k PLIST s PLIST(1)=$s(^(13)="***Empty***":"",1:^(13)),PLIST=1 i $$history(deb,2,8)
 i $l($g(^TMP($zn,$j,15))) k PLIST s PLIST(1)=$s(^(15)="***Empty***":"",1:^(15)),PLIST=1 i $$history(deb,2,9)
 i $l($g(^TMP($zn,$j,16))) k PLIST s PLIST(1)=$s(^(16)="***Empty***":"",1:^(16)),PLIST=1 i $$history(deb,2,10)
 k ^TMP($zn,$j)
 q 0
 ; flag:1-Select
 ;      2-Update
 ; type: -Clinical
 ;      1-Accounts
 ;      2-Departmental
 ;      3-Blood Group
 ;      4-Family Doctor
 ;      5-Warning
 ;      6-Genotype
 ;      7-Mother's MRN
 ;      8-father's MRN
 ;      9-Blood Group Entered
 ;     10-Blood Group Original
history(deb,flag,type) n (deb,flag,type,PLIST) s deb=$g(deb),flag=$g(flag),type=+$g(type)
 i flag=1 s result="" d
 .i type=0 i '$$select(deb,"Y") s result=PLIST(7)
 .i type=1 i '$$select(deb,"Y") s result=PLIST(6)
 .i type=2 i '$$select^LVBDEBDH(deb) s result=PLIST(3)
 .i type=3 i '$$select(deb) s result=PLIST(9)
 .i type=4 i '$$select(deb) s result=PLIST(10)
 .i type=5 i '$$select(deb) s result=PLIST(5)
 .i type=6 i '$$select(deb) s result=PLIST(11)
 .i type=7 i '$$select(deb) s result=PLIST(12)
 .i type=8 i '$$select(deb) s result=PLIST(13)
 .i type=9 i '$$select(deb) s result=PLIST(15)
 .i type=10 i '$$select(deb) s result=PLIST(16)
 .k PLIST s PLIST(1)=result
 i flag=2 d
 .i (type=0)!(type=1) f j=1 k XX m XX=PLIST(j) i '$$remarks^LVBCOM01("EI",.XX,11) k PLIST(j) m PLIST(j)=XX
 . ;---i type=0 &sql(UPDATE DEB_Debtor SET DEB_HistoryClinical = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=0 Do %0Ao
 . ;---i type=1 &sql(UPDATE DEB_Debtor SET DEB_HistoryAccounts = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=1 Do %0Co
 .i type=2 k xx m xx=PLIST d
 ..i $$delete^LVBDEBDH(deb)
 ..k PLIST s PLIST(2)=$p(deb,"||",2),PLIST(3)=$g(xx(1)) w !,$$insert^LVBDEBDH($p(deb,"||")) ; i
 . ;---i type=3 &sql(UPDATE DEB_Debtor SET DEB_BloodGroup_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=3 Do %0Eo
 . ;---i type=4 &sql(UPDATE DEB_Debtor SET DEB_FamilyDoctor_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=4 Do %0Go
 . ;---i type=5 &sql(UPDATE DEB_Debtor SET DEB_PatientWarning_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=5 Do %0Io
 . ;---i type=6 &sql(UPDATE DEB_Debtor SET DEB_Genotype_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=6 Do %0Ko
 . ;---i type=7 &sql(UPDATE DEB_Debtor SET DEB_MotherMRN_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=7 Do %0Mo
 . ;---i type=8 &sql(UPDATE DEB_Debtor SET DEB_FatherMRN_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=8 Do %0Oo
 . ;---i type=9 &sql(UPDATE DEB_Debtor SET DEB_BloodGroupEntered_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=9 Do %0Qo
 . ;---i type=10 &sql(UPDATE DEB_Debtor SET DEB_BloodGroupOriginal_DR = :PLIST(1) WHERE DEB_RowID = :deb)
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, deb
 .i type=10 Do %0So
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
  ;---&sql( SELECT * INTO :PLIST() FROM DEB_Debtor WHERE DEB_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Uo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=4 s result=$p($g(^TDEB(ROWID)),"\",2) q
 .i data=9 s result=$p($g(^TDEB(ROWID)),"\",4) q
 .i data=10 s result=$p($g(^TDEB(ROWID)),"\",5) q
 .i data=12 s result=$p($g(^TDEB(ROWID)),"\",7) q
 .i data=16 s result=$p($g(^TDEB(ROWID)),"\",10) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
insert() K PLIST(1) d pre("N")
  ;---&sql(INSERT INTO DEB_Debtor VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Wo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
update(RowID) d pre("Y") s RowID=$g(RowID)
  ;---&sql(UPDATE DEB_Debtor VALUES :PLIST() WHERE DEB_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Yo
 i 'SQLCODE q $$select(RowID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
delete(RowID) s RowID=$g(RowID)
  ;---&SQL(DELETE FROM DEB_Debtor WHERE DEB_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %00o
 Q SQLCODE
 ;
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("6,7")
 i $g(skip)="Y" q
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTPW(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$C(1)_PLIST(4)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 f j=9,15,16 I $G(PLIST(j))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBBG(plist(j),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(j)=X K plist
 I $G(PLIST(10))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDR(plist(10),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("DR",PLIST(26),PLIST(4),PLIST(3),PLIST(49),PLIST(50),PLIST(51))
 .K PLIST M PLIST=plist S PLIST(10)=X K plist
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBBBG(plist(11),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 F J=12,13 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBDEB(plist(J),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$p(PLIST(4),$c(1),2)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 I $g(PLIST(18))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(18),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(18)=X K plist
 q
pre(xUpdate) d PreSQL^SSUTIL4("6,7","11")
 q
 ; get new number
new(pref) s pref=$g(pref)
 s %routine=$p($g(^TTAB("REPORT-GENERIC","DEB")),"\",1)
 s LineRoutine="new^"_%routine i $l($t(@LineRoutine)) d  q 0
 .x "s ok=$$new^"_%routine_"("""_pref_""")"
nx k PLIST s PLIST=1
 i pref="" s PLIST(1)=$$next("^CF(""DEB-CNT"")")
 i pref'="" s PLIST(1)=pref_$$next("^CF(""DEB-CNT"",pref)")
 ; check if number already exists
 i PLIST(1)'="",$d(^TDEB(PLIST(1))) g nx
 q 0
next(glo) n a
 l +@glo
 s a=$g(@glo)+1,@glo=a
 l -@glo
 q a
 ; change debtor in visit
link(epis,deb,app,group) n (epis,deb,app,group) s epis=$g(epis),deb=$g(deb),app=$g(app),group=$g(group)
 ; if debtor not passed, create new
 i deb="" s err=$$new(),deb=PLIST(1)
 i '$d(^TDEB(deb)) k PLIST s PLIST(2)=deb i $$insert() q 61
 f j=1:1:$l(epis,"^") s ep=$p(epis,"^",j) i $l(ep),$d(^TEPI(ep)) d
 .n (ep,deb,app,group) i '$$select^LVBEPVIS(ep,"Y") d
 ..i $$LOCK^SSLOCK("Patient",ep,,,,1)
 ..s olddeb=$p(PLIST(20),$c(1)),PLIST(20)=deb i $$update^LVBEPVIS(ep,app,group)
 ..i $$LOCKCLR^SSLOCK("Patient",ep)
 .. ; check if there are no more episodes belongs to it
 ..i $l(olddeb) s ok=0 d
 ...s date="" f  s date=$o(^TDEB(olddeb,date)) q:date=""  i date,$d(^TDEB(olddeb,date,0)) s ok=1 q
 ...i ok q
 ... ; copy old debtor number notes
 ...s x=0 f  s x=$o(^TDEB(olddeb,"ACC",x)) q:x=""  s line=^(x) d
 ....s x1=$o(^TDEB(deb,"ACC",""),-1)+1,^TDEB(deb,"ACC",x1)=line,^TDEB(deb,"ACC",0)=x1
 ... ; copy old debtor number notes
 ...s x=0 f  s x=$o(^TDEB(olddeb,"HIS",x)) q:x=""  s line=^(x) d
 ....s x1=$o(^TDEB(deb,"HIS",""),-1)+1,^TDEB(deb,"HIS",x1)=line,^TDEB(deb,"HIS",0)=x1
 ... ; delete old debtor number
 ...i $$delete(olddeb)
 q 0
 ; check debtor number
 ; return code = ReturnCode_$c(1)_Flag1_$c(1)_Flag2
 ; Return Code - 10 - exist in TDEB              - MRN - last visit
 ;               20 - exist in THOS              - MRN - multiple THOS data
 ;               30 - exist in Labtrak as HRN    -     - multiple Labtrak MRN's and last visits
 ;               50 - does not exist but valid   - MRN - single THOS data
 ;              100 - invalid MRN
 ; Flag1       - Search DB : H - LVBHOSP
 ;                           L - LVBEPVIS
 ; Flag2       - Accept Hospital DB MRN as LabTrak MRN
check(deb,step) n (deb,step,PLIST) s ok=0
 ; check specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC","DEB")),"\",1) i $l(%routine) x "s ok=$$check^"_%routine_"("""_deb_""","""_step_""")"
 q ok
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ac
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0ACdun
 k %data
 s %data(7)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Ac
%0ACdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Ac
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Ac
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0CBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Cc
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0CCdun
 k %data
 s %data(6)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Cc
%0CCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Cc
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0EBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0ECdun
 k %data
 s %data(9)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Ec
%0ECdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0GCdun
 k %data
 s %data(10)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0IBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0ICdun
 k %data
 s %data(5)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Ic
%0ICdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Ic
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Kerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0KBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Kc
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0KCdun
 k %data
 s %data(11)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Kc
%0KCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Kc
%0KBdun 
%0KAdun 
%0Kc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Kerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Kc
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Merr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0MBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Mc
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0MCdun
 k %data
 s %data(12)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Mc
%0MCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Mc
%0MBdun 
%0MAdun 
%0Mc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Merr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Mc
%0Oo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Oerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0OBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Oc
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0OCdun
 k %data
 s %data(13)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Oc
%0OCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Oc
%0OBdun 
%0OAdun 
%0Oc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Oerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Oc
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0QBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Qc
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0QCdun
 k %data
 s %data(15)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Qc
%0QCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Qc
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Qc
%0So n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Serr" s %mmmsqld(5)=0 s %mmmsqld(6)=""
 s %mmmsqld(2)=$g(PLIST(1)),%mmmsqld(4)=$g(deb)
 n %data
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0SBdun
 s %mmmsqld(9)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(3)) i '%mmmsqld(9) s SQLCODE=-110 g %0Sc
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TDEB(%mmmsqld(3)))
 e  g %0SCdun
 k %data
 s %data(16)=$g(%mmmsqld(2))
 d %update^User.DEBDebtor.T1(%mmmsqld(3),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(5))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Sc
%0SCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g:SQLCODE<0 %0Sc
%0SBdun 
%0SAdun 
%0Sc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(5)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Serr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(3)) g %0Sc
%0Uo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Uerr" s %mmmsqld(21)=0,%mmmsqld(22)=""
 s %mmmsqld(19)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(19)
 i PLIST(2)'="",$d(^TDEB(PLIST(2)))
 e  g %0UBdun
 s %mmmsqld(25)=$g(^TDEB(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2) s PLIST(5)=$p(%mmmsqld(25),"\",3) s PLIST(9)=$p(%mmmsqld(25),"\",4) s PLIST(10)=$p(%mmmsqld(25),"\",5) s PLIST(11)=$p(%mmmsqld(25),"\",6) s PLIST(12)=$p(%mmmsqld(25),"\",7) s PLIST(13)=$p(%mmmsqld(25),"\",8) s PLIST(14)=$p(%mmmsqld(25),"\",9) s PLIST(15)=$p(%mmmsqld(25),"\",11) s PLIST(16)=$p(%mmmsqld(25),"\",10) s PLIST(17)=$p(%mmmsqld(25),"\",12) s PLIST(18)=$p(%mmmsqld(25),"\",13)
 s PLIST(6)="" f %irep=1:1:$g(^TDEB(PLIST(2),"ACC",0)) s $li(PLIST(6),%irep)=$g(^(%irep))
 s PLIST(7)="" f %irep=1:1:$g(^TDEB(PLIST(2),"HIS",0)) s $li(PLIST(7),%irep)=$g(^(%irep))
 s PLIST(8)=$$CT008^at43($g(PLIST(2)))
 g:$zu(115,2)=0 %0UBuncommitted i $zu(115,2)=1 l +^TDEB($p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(21)=1,%mmmsqld(22)=$name(^TDEB($p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.DEB_Debtor for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TDEB(PLIST(2)))
 e  g %0UCdun
 s %mmmsqld(28)=$g(^TDEB(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(28),"\",1) s PLIST(4)=$p(%mmmsqld(28),"\",2) s PLIST(5)=$p(%mmmsqld(28),"\",3) s PLIST(9)=$p(%mmmsqld(28),"\",4) s PLIST(10)=$p(%mmmsqld(28),"\",5) s PLIST(11)=$p(%mmmsqld(28),"\",6) s PLIST(12)=$p(%mmmsqld(28),"\",7) s PLIST(13)=$p(%mmmsqld(28),"\",8) s PLIST(14)=$p(%mmmsqld(28),"\",9) s PLIST(15)=$p(%mmmsqld(28),"\",11) s PLIST(16)=$p(%mmmsqld(28),"\",10) s PLIST(17)=$p(%mmmsqld(28),"\",12) s PLIST(18)=$p(%mmmsqld(28),"\",13)
 s PLIST(6)="" f %irep=1:1:$g(^TDEB(PLIST(2),"ACC",0)) s $li(PLIST(6),%irep)=$g(^(%irep))
 s PLIST(7)="" f %irep=1:1:$g(^TDEB(PLIST(2),"HIS",0)) s $li(PLIST(7),%irep)=$g(^(%irep))
 s PLIST(8)=$$CT008^at43($g(PLIST(2)))
%0UBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Uc
%0UCdun i $zu(115,2)=1,$g(%mmmsqld(21))=1 { l -@%mmmsqld(22) s %mmmsqld(21)=0 }
%0UBdun 
%0UAdun 
%0Uc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(21))=1 { l -@%mmmsqld(22) } q
%0Uerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Uc
%0Wo n %i,icol,ir
 f icol=0:1:18 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.DEBDebtor.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Wo
%0Yo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Yerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TDEB(%mmmsqld(2)))
 e  g %0YBdun
 s %mmmsqld(8)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(2)) i '%mmmsqld(8) s SQLCODE=-110 g %0Yc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TDEB(%mmmsqld(2)))
 e  g %0YCdun
 k %data
 f icol=0:1:18 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.DEBDebtor.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(8)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(2)) g %0Yc
%0YCdun 
 d:%mmmsqld(8)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(2)) g:SQLCODE<0 %0Yc
%0YBdun 
%0YAdun 
%0Yc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Yerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(8))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(2)) g %0Yc
%00o n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%00err" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TDEB(%mmmsqld(1)))
 e  g %00Bdun
 s %mmmsqld(7)=$$%getlock^User.DEBDebtor.T1(%mmmsqld(1)) i '%mmmsqld(7) s SQLCODE=-110 g %00c
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TDEB(%mmmsqld(1)))
 e  g %00Cdun
 d %delete^User.DEBDebtor.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(7)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(1)) g %00c
%00Cdun 
 d:%mmmsqld(7)=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(1)) g:SQLCODE<0 %00c
%00Bdun 
%00Adun 
%00c s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%00err s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(7))=1 %ReleaseLock^User.DEBDebtor.T1(%mmmsqld(1)) g %00c
]]></Routine>
</Export>
