<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="BVBCTBGR" type="INT" languagemode="0"><![CDATA[
BVBCTBGR ; IG 11/5/98 ; BVB Control data access for Code Tables   ; Compiled May 22, 2000 13:23:17 for Cache for Windows
 ; 
 ; supported calls: 
 ;
 ; $$select^BVBCTBGR(ROWID)
 ; $$update^BVBCTBGR(ROWID)
 ; $$delete^BVBCTBGR(ROWID,Comments)
 ; $$insert^BVBCTBGR()
 ; $$selcode^BVBCTBGR(CODE)
 ; $$selseq^BVBCTBGR(SEQ)
 ; $$open^BVBCTBGR(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetch^BVBCTBGR(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchbuffer^BVBCTBGR(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$fetchall^BVBCTBGR(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) 
 ; $$close^BVBCTBGR() 
 ; $$getall^BVBCTBGR() 
 ; 
open(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9)  d %CTBGR0o 
 q 0
 ;
fetch(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST
 d %0Co
 s PLIST=$o(PLIST(""),-1) 
 q SQLCODE
 ; Fetch all data
fetchbuffer(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100)
 f xxx=1:1:max s SQLCODE=$$fetch() q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (PLIST) K ^TMP($zn,$j)
 i $$open()
 f cnt=1:1 Q:$$fetch()  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ; 
 ; 
close() d %CTBGR0c 
 q 0 
 ;
select(ROWID) k PLIST S ROWID=$G(ROWID)
 d %0Eo 
 s PLIST=$O(PLIST(""),-1) 
 q SQLCODE 
 ;        
selcode(CODE) k PLIST S CODE=$G(CODE)
 d %0Fo 
 s PLIST=$O(PLIST(""),-1) 
 q SQLCODE 
 ;        
selseq(SEQ) k PLIST S SEQ=$G(SEQ)
 d %0Go 
 s PLIST=$O(PLIST(""),-1) 
 q SQLCODE 
insert() K PLIST(1)
 d %0Ho
 I 'SQLCODE Q $$select(%ROWID)
 Q SQLCODE
 ; Update the data
update(ROWID) k PLIST(1) S ROWID=$G(ROWID)
 d %0Io
 s PLIST=$o(PLIST(""),-1)
 I 'SQLCODE q $$select(%ROWID)
 Q SQLCODE
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Jo
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
getall() N (PLIST) K ^TMP($ZN,$J)
 I $$open()
 F cnt=1:1 Q:$$fetch()  S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 q
%0ABs1 i %val'=+%val s %val=""
 e  s %val=$fn(%val,"")
 q
%CTBGR0o s SQLCODE=$s($g(%CTBGR0c):-101,1:0) q:SQLCODE'=0
 s %CTBGR0c=1 k %CTBGR0m
 s %CTBGR0E=$zt,%CTBGR0f=0,%CTBGR0e=0,%CTBGR0L=""
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s $P(%CTBGR0d(2),$C(1))=""
%0ABk1 s $P(%CTBGR0d(2),$C(1))=$o(^CT("BG",0,"Seq",$P(%CTBGR0d(2),$C(1))))
 i $P(%CTBGR0d(2),$C(1))="" g %0ABdun
 i $P(%CTBGR0d(2),$C(1))'=+$P(%CTBGR0d(2),$C(1)) g %0ABdun
 s $P(%CTBGR0d(3),$C(1))=""
%0ABk2 s $P(%CTBGR0d(3),$C(1))=$o(^CT("BG",0,"Seq",$P(%CTBGR0d(2),$C(1)),$P(%CTBGR0d(3),$C(1))))
 i $P(%CTBGR0d(3),$C(1))="" g %0ABk1
 i $P(%CTBGR0d(3),$C(1))'=+$P(%CTBGR0d(3),$C(1)) g %0ABk1
 s %val=$P(%CTBGR0d(2),$C(1)) d %0ABs1:%val'="" s $P(%CTBGR0d(2),$C(1),2)=%val
 s %val=$P(%CTBGR0d(3),$C(1)) d %0ABs1:%val'="" s $P(%CTBGR0d(3),$C(1),2)=%val
 i $P(%CTBGR0d(3),$C(1))'="",$d(^CT("BG",$P(%CTBGR0d(3),$C(1))))
 i '$t
 e  i 1>$P(%CTBGR0d(3),$C(1)),$P(%CTBGR0d(3),$C(1))=+$P(%CTBGR0d(3),$C(1))
 i  g %0ABk2
 s %CTBGR0n=$g(^CT("BG",$P(%CTBGR0d(3),$C(1))))
 s %CTBGR0d(4)=$p(%CTBGR0n,"^",1) s %CTBGR0d(5)=$p(%CTBGR0n,"^",2) s %CTBGR0d(6)=$p(%CTBGR0n,"^",3) s %CTBGR0d(7)=$p(%CTBGR0n,"^",4) s %CTBGR0d(8)=$p(%CTBGR0n,"^",5)
 s SQLCODE=0 s:SQLCODE=0 %CTBGR0f=%CTBGR0f+1 s %CTBGR0c=10 q
%CTBGR0f i '$g(%CTBGR0c) s SQLCODE=-102 q
 i %CTBGR0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTBGR0c=1
 g %0ABk2
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTBGR0c=100 q
%CTBGR0c i '$g(%CTBGR0c) s SQLCODE=-102 q
 k %CTBGR0c,%CTBGR0d,%CTBGR0e,%CTBGR0E,%CTBGR0f,%CTBGR0l,%CTBGR0L,%CTBGR0n,%CTBGR0r,%CTBGR0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTBGR0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTBGR0f q:SQLCODE'=0
 s PLIST(1)=%CTBGR0d(3),PLIST(2)=%CTBGR0d(4),PLIST(3)=%CTBGR0d(5),PLIST(4)=%CTBGR0d(6),PLIST(5)=%CTBGR0d(7),PLIST(6)=%CTBGR0d(8),PLIST(7)=%CTBGR0d(2)
 q
%0EAr1 n num s num=$$numint^%qarzdt(%val,1,"","",1) s:(num="")&(%val'="") %ok=0 s %val=num
 q  
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(1),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(1),$C(1))'="",$d(^CT("BG",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0EBdun
 s %mmmsqln=$g(^CT("BG",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5) s PLIST(7)=$p(%mmmsqln,"^",6) s:PLIST(7)'="" PLIST(7)=+PLIST(7)
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs1:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
ALPHAUP(val,remove) d:'$d(%trans) %trans^%qarztrm q:'$d(remove) $tr(val,%trans(1),%trans(2)) q $tr(val,$tr(%trans(1),remove),%trans(2))
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ferr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(CODE,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$E(CODE,2,999)
 s SQLCODE=100
   ;  init
 s %mmmsqld(12)=$$ALPHAUP(%mmmsqld(3))
 ; asl MOD# 2
 s %mmmsqld(11)=$g(%mmmsqld(12))
 i %mmmsqld(11)="" g %0FBdun
 s $P(PLIST(1),$C(1))=""
%0FBk1 s $P(PLIST(1),$C(1))=$o(^CT("BG",0,"Code",%mmmsqld(11),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0FBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0FBdun
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("BG",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0FBk1
 s %mmmsqln=$g(^CT("BG",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5) s PLIST(7)=$p(%mmmsqln,"^",6) s:PLIST(7)'="" PLIST(7)=+PLIST(7)
 s %val=$P(PLIST(7),$C(1)) d %0ABs1:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Fc
 g %0FBk1
%0FBdun 
%0FAdun 
%0Fc q
%0Ferr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0FAdun
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(SEQ,$C(1))
 i %mmmsqld(3)="",$L(SEQ)>1 s %val=$E(SEQ,2,999) d %0EAr1 s %mmmsqld(3)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(PLIST(7),$C(1))=$g(%mmmsqld(3))
 i $P(PLIST(7),$C(1))="" g %0GBdun
 s $P(PLIST(1),$C(1))=""
%0GBk1 s $P(PLIST(1),$C(1))=$o(^CT("BG",0,"Seq",$P(PLIST(7),$C(1)),$P(PLIST(1),$C(1))))
 i $P(PLIST(1),$C(1))="" g %0GBdun
 i $P(PLIST(1),$C(1))'=+$P(PLIST(1),$C(1)) g %0GBdun
 s %val=$P(PLIST(7),$C(1)) d %0ABs1:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s %val=$P(PLIST(1),$C(1)) d %0ABs1:%val'="" s $P(PLIST(1),$C(1),2)=%val
 i $P(PLIST(1),$C(1))'="",$d(^CT("BG",$P(PLIST(1),$C(1))))
 i '$t
 e  i 1>$P(PLIST(1),$C(1)),$P(PLIST(1),$C(1))=+$P(PLIST(1),$C(1))
 i  g %0GBk1
 s %mmmsqln=$g(^CT("BG",$P(PLIST(1),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"^",1) s PLIST(3)=$p(%mmmsqln,"^",2) s PLIST(4)=$p(%mmmsqln,"^",3) s PLIST(5)=$p(%mmmsqln,"^",4) s PLIST(6)=$p(%mmmsqln,"^",5)
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Gc
 g %0GBk1
%0GBdun 
%0GAdun 
%0Gc q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %insert,icol,ir
 f icol=0:1:7 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt1311("1")
 q
%0Io n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Ierr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(ROWID,$C(1))
 i %mmmsqld(3)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(3)=%val
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s $P(%mmmsqld(2),$C(1))=$g(%mmmsqld(3))
 i $P(%mmmsqld(2),$C(1))'="",$d(^CT("BG",$P(%mmmsqld(2),$C(1))))
 i '$t
 e  i 1>$P(%mmmsqld(2),$C(1)),$P(%mmmsqld(2),$C(1))=+$P(%mmmsqld(2),$C(1))
 i  g %0IBdun
 s %val=$P(%mmmsqld(2),$C(1)) d %0ABs1:%val'="" s $P(%mmmsqld(2),$C(1),2)=%val
 k %data,%edit
 f icol=0:1:7 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt1311(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0IBdun 
%0IAdun 
 q
%0Ierr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0IAdun
%0Jo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Jerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 i %mmmsqld(2)="",$L(ROWID)>1 s %val=$E(ROWID,2,999) d %0EAr1 s %mmmsqld(2)=%val
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=$g(%mmmsqld(2))
 i %mmmsqld(1)'="",$d(^CT("BG",%mmmsqld(1)))
 i '$t
 e  i 1>%mmmsqld(1),%mmmsqld(1)=+%mmmsqld(1)
 i  g %0JBdun
 d delete^mt1311(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0JBdun 
%0JAdun 
 q
%0Jerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0JAdun
]]></Routine>
</Export>
