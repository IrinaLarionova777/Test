<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBVIS18" type="INT" languagemode="0" generated="1"><![CDATA[
LVBVIS18 ; IG 2/6/98 ; Visit selection routines - Pack Acceptance module
 ;
 ; supported calls:
 ;
 ; $$open^LVBVIS18(type,site,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBVIS18(type,site,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBVIS18(type,site,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBVIS18()
 ; $$getall^LVBVIS18(type,site)
 ;
open(type,site,p2,p3,p4,p5,p6,p7,p8,p9) s ^TMP($zn,$j,"open")=""
 q 0
 ;
 ; PLIST : 1.Episode
 ;         2.BBP_RowID
 ;         3.Access flag
 ;         4.Fail flag
 ;
fetch(type,site,p2,p3,p4,p5,p6,p7,p8,p9) n (type,site,PLIST) s type=$g(type),site=$g(site)
 s xx=$g(^TMP($zn,$j,"open")) f j=1 s @("x"_j)=$p(xx,"\",j)
 s found=""  f  s x1=$o(^TEPIi("BBP",x1)) q:x1=""  d  q:found
 .i $l(site) s xx="" d  i site'=$p(xx,$c(1)) q
 .. ;---&sql(SELECT EPVIS_UserSite_DR INTO :xx FROM EP_VisitNumber WHERE EPVIS_RowID=:x1)
  .. ;--- ** SQL PUBLIC Variables: SQLCODE, x1, xx
 ..Do %0Ao
 .s found=1
 k PLIST s SQLCODE=100 i $l(x1) d
 .s SQLCODE=0
 .k VISTS i '$$getall^LVBVISTS(x1,,,,,,,,"ALL") m VISTS=PLIST
 .k PLIST
 .s PLIST(1)=x1,PLIST(2)=$p(x1,"_",2)_"||"_$p(x1,"_",3)
 .s PLIST(3)="Y" f j=1:1:VISTS i $p($p(VISTS(j),$c(2),4),$c(28),33)'="A" s PLIST(3)="N" q
 .s PLIST(4)="" i PLIST(3)="Y" f j=1:1:VISTS d  q:PLIST(4)="Y"
 ..s ep=$p($p($p($p(VISTS(j),$c(2),4),$c(28),1),$c(1)),"||",1)
 ..s ts=$p($p($p($p(VISTS(j),$c(2),4),$c(28),1),$c(1)),"||",2)
 ..s tscnt=$p($p($p($p(VISTS(j),$c(2),4),$c(28),1),$c(1)),"||",3)
 ..s ti="" f  s ti=$o(^TEPI(ep,1,ts,tscnt,"DATA",ti)) q:ti=""  d  q:PLIST(4)="Y"  
 ...s res="{"_$p(^(ti),"\")_"}",PLIST(4)=$$check^LVBVIS16(ti,res) q:PLIST(4)="Y"
 ...s x="" f  s x=$o(^TEPI(ep,1,ts,tscnt,"DATA",ti,"REM",x)) q:x=""  s res=^(x),PLIST(4)=$$check^LVBVIS16(ti,res) q:PLIST(4)="Y"
 s PLIST=$o(PLIST(""),-1)
 s ^TMP($zn,$j,"open")=x1
 i 'SQLCODE,type="P",PLIST(4)="Y" g fetch+1
 i 'SQLCODE,type="F",PLIST(4)'="Y" g fetch+1
 q SQLCODE
 ; Fetch all data
fetchbuffer(type,site,p2,p3,p4,p5,p6,p7,p8,p9) s type=$g(type),site=$g(site) k ^TMP($zn,$j,1)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 s xSUM=0
 f xxx=1:1:max s SQLCODE=$$fetch(type,site) q:SQLCODE  d  q:xSUM>15000
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 .s xSUM=xSUM+$l(^TMP($zn,$j,1,cnt))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
 ;
close() k ^TMP($zn,$j,"open")
 q 0
getall(type,site) n (type,site,PLIST) s type=$g(type),site=$g(site) k ^TMP($zn,$j)
 i $$open(type,site)
 f cnt=1:1 q:$$fetch(type,site)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2,2,2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k TMP($zn,$j)
 q 0
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(x1)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0ABdun
 s %mmmsqld(10)=$g(^TEPI(%mmmsqld(3)))
 s xx=$p(%mmmsqld(10),"\",36)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TEPI($p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TEPI($p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.EP_VisitNumber for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TEPI(%mmmsqld(3)))
 e  g %0ACdun
 s %mmmsqld(13)=$g(^TEPI(%mmmsqld(3)))
 s xx=$p(%mmmsqld(13),"\",36)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
]]></Routine>
</Export>
