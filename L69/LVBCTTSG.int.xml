<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTTSG" type="INT" languagemode="0"><![CDATA[
LVBCTTSG ; IG 1/5/98 ; LVB Control data access for CTTSG CT_TestSetReflexConditions  ; Compiled August 14, 2006 14:13:09 for Cache for Windows
 ;
 ; supported calls:
 ;
 ; $$insert^LVBCTTSG(par)
 ; $$delete^LVBCTTSG(ROWID,Comments)
 ; $$update^LVBCTTSG(ROWID)
 ; $$select^LVBCTTSG(ROWID,skip)
 ; $$open^LVBCTTSG(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTTSG(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTTSG(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTTSG(par,skip,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTTSG()
 ; $$select1^LVBCTTSG(titem,stcom)
 ;
 
 ;
open(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip)
 d %CTTSG0o
 q 0
 ;
fetch(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par),skip=$g(skip)
 d %0Co
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,p2,p3,p4,p5,p6,p7,p8,p9) N (par,skip,PLIST) s par=$g(par),skip=$g(skip) K ^TMP($zn,$j)
 i $$open(par,skip)
 f cnt=1:1 Q:$$fetch(par,skip)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close() d %CTTSG0c
 q 0
 ;
select(RowID,skip) k PLIST s RowID=$g(RowID),skip=$g(skip)
 d %0Eo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
insert(par) d pre s PLIST(0)=$g(par) K PLIST(1)
 d %0Fo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ;
update(RowID) d pre s RowID=$g(RowID)
 d %0Go
 i 'SQLCODE q $$select(%ROWID)
 q SQLCODE
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
 d %0Ho
 k ^TMP("Comments",$j)
 q SQLCODE
 ;
pre f j=6,7 i $l(PLIST(j)) s PLIST(j)=+PLIST(j)
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1),1)
 i $g(skip)="Y" q
 ;
 I $G(PLIST(4))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSP(plist(4),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(4)=X K plist
 ;
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTDR(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_$$NameFormat^LVBCOM03("DR",PLIST(26),PLIST(4),PLIST(3),PLIST(49),PLIST(50),PLIST(51))_$C(1)_PLIST(5)_$C(1)_PLIST(18)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 ;
 q
 ;
 q
%0ABs1 s %val=$s(%val'=+%val:"",1:$fn(%val,"",0)) q
%0ABs2 s %val=$s(%val'=+%val:"",1:$fn(%val,"")) q
%CTTSG0o s SQLCODE=$s($g(%CTTSG0c):-101,1:0) q:SQLCODE'=0
 s %CTTSG0c=1 k %CTTSG0m
 s %CTTSG0E=$zt,%CTTSG0f=0,%CTTSG0e=0,%CTTSG0L=""
 s %CTTSG0d(2)=$P(par,$C(1))
 s:%CTTSG0d(2)="" %CTTSG0d(2)=$e(par,2,99999)
 q
%0Afirst   ;  init
 ; asl MOD# 2
 s %CTTSG0d(1)=$g(%CTTSG0d(2))
 i %CTTSG0d(1)="" g %0ABdun
 s $P(%CTTSG0d(6),$C(1))=""
%0ABk1 s $P(%CTTSG0d(6),$C(1))=$o(^TTAB("TS",%CTTSG0d(1),"RF",$P(%CTTSG0d(6),$C(1))))
 i $P(%CTTSG0d(6),$C(1))="" g %0ABdun
 i $P(%CTTSG0d(6),$C(1))'=+$P(%CTTSG0d(6),$C(1)) g %0ABdun
 s %CTTSG0n=$g(^TTAB("TS",%CTTSG0d(1),"RF",$P(%CTTSG0d(6),$C(1))))
 s %CTTSG0d(5)=$p(%CTTSG0n,"\",5) s %CTTSG0d(7)=$p(%CTTSG0n,"\",1) s %CTTSG0d(8)=$p(%CTTSG0n,"\",2) s %CTTSG0d(9)=$p(%CTTSG0n,"\",3) s:%CTTSG0d(9)'="" %CTTSG0d(9)=+%CTTSG0d(9) s %CTTSG0d(10)=$p(%CTTSG0n,"\",4) s:%CTTSG0d(10)'="" %CTTSG0d(10)=+%CTTSG0d(10)
 s %CTTSG0d(4)=(%CTTSG0d(1))_"||"_($P(%CTTSG0d(6),$C(1)))
 
 s %val=$P(%CTTSG0d(6),$C(1)) d %0ABs1:%val'="" s $P(%CTTSG0d(6),$C(1),2)=%val
 s %val=$P(%CTTSG0d(9),$C(1)) d %0ABs2:%val'="" s $P(%CTTSG0d(9),$C(1),2)=%val
 s %val=$P(%CTTSG0d(10),$C(1)) d %0ABs2:%val'="" s $P(%CTTSG0d(10),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %CTTSG0f=%CTTSG0f+1 s %CTTSG0c=10 q
%CTTSG0f i '$g(%CTTSG0c) s SQLCODE=-102 q
 i %CTTSG0c=100 s SQLCODE=100 q
 s $zt="%0Aerr^"_$zn s $ze="" n %val g %0Afirst:%CTTSG0c=1
 g %0ABk1
%0ABdun 
%0AAdun 
 s:$g(SQLCODE)'<0 SQLCODE=100 s %CTTSG0c=100 q
%CTTSG0c i '$g(%CTTSG0c) s SQLCODE=-102 q
 k %CTTSG0c,%CTTSG0d,%CTTSG0e,%CTTSG0E,%CTTSG0f,%CTTSG0l,%CTTSG0L,%CTTSG0n,%CTTSG0r,%CTTSG0R s SQLCODE=0 q
%0Aerr ; Cursor-Based Error Trap Module...
 s $zt=$g(%CTTSG0E),SQLCODE=-20603,%msg=$ze s $ze="" g %0AAdun
%0Co d %CTTSG0f q:SQLCODE'=0
 s PLIST(0)=%CTTSG0d(1),PLIST(1)=%CTTSG0d(4),PLIST(2)=%CTTSG0d(5),PLIST(3)=%CTTSG0d(6),PLIST(4)=%CTTSG0d(7),PLIST(5)=%CTTSG0d(8),PLIST(6)=%CTTSG0d(9),PLIST(7)=%CTTSG0d(10)
 q
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Eerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(RowID,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(3)
 s %mmmsqld(12)=$p($g(PLIST(1)),"||",1,1),$P(PLIST(3),$C(1))=$p($g(PLIST(1)),"||",2,2)
 i %mmmsqld(12)'="",$P(PLIST(3),$C(1))'="",$d(^TTAB("TS",%mmmsqld(12),"RF",$P(PLIST(3),$C(1))))
 e  g %0EBdun
 s %mmmsqln=$g(^TTAB("TS",%mmmsqld(12),"RF",$P(PLIST(3),$C(1))))
 s PLIST(2)=$p(%mmmsqln,"\",5) s PLIST(4)=$p(%mmmsqln,"\",1) s PLIST(5)=$p(%mmmsqln,"\",2) s PLIST(6)=$p(%mmmsqln,"\",3) s:PLIST(6)'="" PLIST(6)=+PLIST(6) s PLIST(7)=$p(%mmmsqln,"\",4) s:PLIST(7)'="" PLIST(7)=+PLIST(7)
 s PLIST(0)=$p(PLIST(1),"||",1,1)
 
 s %val=$P(PLIST(3),$C(1)) d %0ABs1:%val'="" s $P(PLIST(3),$C(1),2)=%val
 s %val=$P(PLIST(6),$C(1)) d %0ABs2:%val'="" s $P(PLIST(6),$C(1),2)=%val
 s %val=$P(PLIST(7),$C(1)) d %0ABs2:%val'="" s $P(PLIST(7),$C(1),2)=%val
 s SQLCODE=0 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1 g %0Ec
%0EBdun 
%0EAdun 
%0Ec q
%0Eerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0EAdun
%0Fo n %insert,icol,ir
 f icol=0:1:7 i $D(PLIST(icol)) s %insert(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %insert(icol,ir)=PLIST(icol,ir)
 d insert^mt3681("1")
 q
%0Go n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Gerr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(3)=$P(RowID,$C(1))
 s:%mmmsqld(3)="" %mmmsqld(3)=$e(RowID,2,99999)
 n %data,%edit,icol,ir
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 s %mmmsqld(4)=$p($g(%mmmsqld(2)),"||",1,1),%mmmsqld(5)=$p($g(%mmmsqld(2)),"||",2,2)
 i %mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TTAB("TS",%mmmsqld(4),"RF",%mmmsqld(5)))
 e  g %0GBdun
 k %data,%edit
 f icol=0:1:7 i $D(PLIST(icol)) s %data(icol)=PLIST(icol) i $D(PLIST(icol,1)) f ir=1:1:PLIST(icol) s %data(icol,ir)=PLIST(icol,ir)
 d update^mt3681(%mmmsqld(2),"1",1)
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0GBdun 
%0GAdun 
 q
%0Gerr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0GAdun
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqle,%mmmsqlE,%mmmsqlf,%mmmsqll,%mmmsqlL,%mmmsqlm,%mmmsqln,%mmmsqlp,%mmmsqlr,%mmmsqlR,%mmmsqls,%mmmsqlt,%val
 s %mmmsqlE=$zt,$zt="%0Herr^"_$zn,%mmmsqlf=0 s $ze=""
 s %mmmsqld(2)=$P(ROWID,$C(1))
 s:%mmmsqld(2)="" %mmmsqld(2)=$e(ROWID,2,99999)
 s SQLCODE=100
   ;  init
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p($g(%mmmsqld(1)),"||",1,1),%mmmsqld(4)=$p($g(%mmmsqld(1)),"||",2,2)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",$d(^TTAB("TS",%mmmsqld(3),"RF",%mmmsqld(4)))
 e  g %0HBdun
 d delete^mt3681(%mmmsqld(1),"1")
 q:SQLCODE<0
 s:SQLCODE=0 %mmmsqlf=%mmmsqlf+1
%0HBdun 
%0HAdun 
 q
%0Herr ; Non Cursor-Based Error Trap Module...
 s $zt=$g(%mmmsqlE),SQLCODE=-20603,%msg=$ze s $ze="" g %0HAdun
]]></Routine>
</Export>
