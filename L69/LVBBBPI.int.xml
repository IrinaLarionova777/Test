<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBBBPI" type="INT" languagemode="0" generated="1"><![CDATA[
LVBBBPI ; IG 6/5/98 ; LVB Control data access for BBPI BBP_PackAdditionalInfo
 ;
 ; supported calls:
 ;
 ; $$save^LVBBBPI(par)
 ; $$insert^LVBBBPI(par)
 ; $$delete^LVBBBPI(ROWID)
 ; $$select^LVBBBPI(ROWID)
 ; $$open^LVBBBPI(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBBBPI(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBBBPI(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBBBPI(par,p1,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBBBPI()
 ; $$getall^LVBBBPI(par)
 ;
  ;---&sql(DECLARE BBPI CURSOR FOR SELECT * FROM BBP_PackAdditionalInfo
   ;---         WHERE BBPI_ParRef = :par)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
save(par) n (par,PLIST) s par=$g(par) k ^TMP($zn,$j) m ^TMP($zn,$j)=PLIST
 s x1=$p(par,"||",1),x2=$p(par,"||",2) i $l(x1),$l(x2) d
 .k ^TBBP(x1,x2,"AI")
 .s x="" f  s x=$o(^TMP($zn,$j,x)) q:x=""  d
 ..k PLIST s PLIST(2)=^(x),PLIST=$o(PLIST(""),-1) i $$insert(par)
 k PLIST,^TMP($zn,$j)
 q 0
open(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par)
  ;---&SQL(OPEN BBPI)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBPI0o
 q 0
 ;
fetch(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) k PLIST s par=$g(par)
  ;---&SQL(FETCH BBPI INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,p1,p2,p3,p4,p5,p6,p7,p8,p9) N (par,PLIST) s par=$g(par) K ^TMP($zn,$j)
 i $$open(par)
 f cnt=1:1 Q:$$fetch(par)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE BBPI)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %BBPI0c
 q 0
 ;
select(RowID) k PLIST s RowID=$g(RowID)
  ;---&sql( SELECT * INTO :PLIST() FROM BBP_PackAdditionalInfo WHERE BBPI_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM BBP_PackAdditionalInfo WHERE BBPI_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Ho
 k ^TMP("Comments",$j)
 Q SQLCODE
insert(par) s PLIST(0)=$g(par) d pre("N") K PLIST(1)
  ;---&sql(INSERT INTO BBP_PackAdditionalInfo VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Jo
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
pre(xUpdate) d PreSQL^SSUTIL4("4","111")
 q
 ;
 ; Post-filing adjustments
adjust d PostSQL^SSUTIL4("4")
 q
getall(par) n (par,PLIST) k ^TMP($zn,$j) s par=$g(par)
 i $$open(par)
 f cnt=1:1 q:$$fetch(par)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(2),$c(1),2)_$c(2)_$p(PLIST(2),$c(1))_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
%BBPI0o s $zt="%BBPI0E" s SQLCODE=$s($g(%BBPI0c):-101,1:0) q:SQLCODE'=0  s %BBPI0d(10)=0 s %BBPI0d(11)=0,%BBPI0d(12)=""
 s %BBPI0d(6)=$g(par)
 s %BBPI0c=1 q
%BBPI0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %BBPI0c,%BBPI0d,%BBPI0E,%BBPI0l,%BBPI0n,%BBPI0R,%BBPI0Z q
%0Afirst 
 ; asl MOD# 2
 s %BBPI0d(1)=%BBPI0d(6)
 s %BBPI0d(8)=$p(%BBPI0d(1),"||"),%BBPI0d(9)=$p(%BBPI0d(1),"||",2)
 i %BBPI0d(8)="" g %0ABdun
 i %BBPI0d(9)="" g %0ABdun
 s %BBPI0d(3)=""
%0ABk1 s %BBPI0d(3)=$o(^TBBP(%BBPI0d(8),%BBPI0d(9),"AI",%BBPI0d(3)))
 i %BBPI0d(3)="" g %0ABdun
 s %BBPI0d(19)=$g(^TBBP(%BBPI0d(8),%BBPI0d(9),"AI",%BBPI0d(3)))
 s %BBPI0d(4)=$p(%BBPI0d(19),"\",1)
 s %BBPI0d(5)="" f %irep=1:1:$g(^TBBP(%BBPI0d(8),%BBPI0d(9),"AI",%BBPI0d(3),"REM",0)) s $li(%BBPI0d(5),%irep)=$g(^(%irep))
 s %BBPI0d(2)=(%BBPI0d(8))_"||"_(%BBPI0d(9))_"||"_(%BBPI0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TBBP($p(%BBPI0d(2),"||",1),$p(%BBPI0d(2),"||",2),"AI",$p(%BBPI0d(2),"||",3))#"S":$zu(115,4) i $t { s %BBPI0d(11)=1,%BBPI0d(12)=$name(^TBBP($p(%BBPI0d(2),"||",1),$p(%BBPI0d(2),"||",2),"AI",$p(%BBPI0d(2),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BBP_PackAdditionalInfo for RowID value: "_%BBPI0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %BBPI0d(8)=$p(%BBPI0d(2),"||"),%BBPI0d(9)=$p(%BBPI0d(2),"||",2),%BBPI0d(3)=$p(%BBPI0d(2),"||",3)
 i %BBPI0d(8)'="",%BBPI0d(9)'="",%BBPI0d(3)'="",$d(^TBBP(%BBPI0d(8),%BBPI0d(9),"AI",%BBPI0d(3)))
 e  g %0ACdun
 s %BBPI0d(26)=$g(^TBBP(%BBPI0d(8),%BBPI0d(9),"AI",%BBPI0d(3)))
 s %BBPI0d(4)=$p(%BBPI0d(26),"\",1)
 s %BBPI0d(5)="" f %irep=1:1:$g(^TBBP(%BBPI0d(8),%BBPI0d(9),"AI",%BBPI0d(3),"REM",0)) s $li(%BBPI0d(5),%irep)=$g(^(%irep))
 s %BBPI0d(1)=$p(%BBPI0d(2),"||",1,2)
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %BBPI0d(10)=%BBPI0d(10)+1,%ROWCOUNT=%BBPI0d(10),%ROWID=%BBPI0d(2),%BBPI0c=10 q
%BBPI0f i '$g(%BBPI0c) { s SQLCODE=-102 q  } i %BBPI0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%BBPI0d(10))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%BBPI0d(10),%BBPI0c=100 q  } g %0Afirst:%BBPI0c=1
%0ACdun i $zu(115,2)=1,$g(%BBPI0d(11))=1 { l -@%BBPI0d(12) s %BBPI0d(11)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%BBPI0d(10),SQLCODE=100,%BBPI0c=100 q
%BBPI0c i '$g(%BBPI0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%BBPI0d(10)),1:0)
 i $zu(115,2)=1,$g(%BBPI0d(11))=1 { l -@%BBPI0d(12) } k %BBPI0c,%BBPI0d,%BBPI0E,%BBPI0l,%BBPI0n,%BBPI0R,%BBPI0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %BBPI0c=100 q
%0Do d %BBPI0f q:SQLCODE'=0
 s PLIST(0)=%BBPI0d(1),PLIST(1)=%BBPI0d(2),PLIST(2)=%BBPI0d(3),PLIST(3)=%BBPI0d(4),PLIST(4)=%BBPI0d(5)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(7)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(7)
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",PLIST(2)'="",$d(^TBBP(%mmmsqld(9),%mmmsqld(10),"AI",PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(19)=$g(^TBBP(%mmmsqld(9),%mmmsqld(10),"AI",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(19),"\",1)
 s PLIST(4)="" f %irep=1:1:$g(^TBBP(%mmmsqld(9),%mmmsqld(10),"AI",PLIST(2),"REM",0)) s $li(PLIST(4),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||",1,2)
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^TBBP($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),"AI",$p(PLIST(1),"||",3))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TBBP($p(PLIST(1),"||",1),$p(PLIST(1),"||",2),"AI",$p(PLIST(1),"||",3)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.BBP_PackAdditionalInfo for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(9)=$p(PLIST(1),"||"),%mmmsqld(10)=$p(PLIST(1),"||",2),PLIST(2)=$p(PLIST(1),"||",3)
 i %mmmsqld(9)'="",%mmmsqld(10)'="",PLIST(2)'="",$d(^TBBP(%mmmsqld(9),%mmmsqld(10),"AI",PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(26)=$g(^TBBP(%mmmsqld(9),%mmmsqld(10),"AI",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(26),"\",1)
 s PLIST(4)="" f %irep=1:1:$g(^TBBP(%mmmsqld(9),%mmmsqld(10),"AI",PLIST(2),"REM",0)) s $li(PLIST(4),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||",1,2)
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Herr" s %mmmsqld(6)=0 s %mmmsqld(7)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TBBP(%mmmsqld(3),%mmmsqld(4),"AI",%mmmsqld(5)))
 e  g %0HBdun
 s %mmmsqld(14)=$$%getlock^User.BBPPackAdditionalInfo.T1(%mmmsqld(1)) i '%mmmsqld(14) s SQLCODE=-110 g %0Hc
 ; asl MOD# 3
 s %mmmsqld(3)=$p(%mmmsqld(1),"||"),%mmmsqld(4)=$p(%mmmsqld(1),"||",2),%mmmsqld(5)=$p(%mmmsqld(1),"||",3)
 i %mmmsqld(3)'="",%mmmsqld(4)'="",%mmmsqld(5)'="",$d(^TBBP(%mmmsqld(3),%mmmsqld(4),"AI",%mmmsqld(5)))
 e  g %0HCdun
 d %delete^User.BBPPackAdditionalInfo.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(6))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(14)=1 %ReleaseLock^User.BBPPackAdditionalInfo.T1(%mmmsqld(1)) g %0Hc
%0HCdun 
 d:%mmmsqld(14)=1 %ReleaseLock^User.BBPPackAdditionalInfo.T1(%mmmsqld(1)) g:SQLCODE<0 %0Hc
%0HBdun 
%0HAdun 
%0Hc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(6)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Herr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(14))=1 %ReleaseLock^User.BBPPackAdditionalInfo.T1(%mmmsqld(1)) g %0Hc
%0Jo n %i,icol,ir
 f icol=0:1:4 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.BBPPackAdditionalInfo.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Jo
]]></Routine>
</Export>
