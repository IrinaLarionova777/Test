<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIF44404" type="INT" languagemode="0" generated="1"><![CDATA[
MIF44404(mi)	; ML 12/1/99 ; ASTM protocol - Fusion - Darwin
	s mi=$g(mi) i '$l(mi) q
	k ^TMIF(mi,10) s $zt="err^MIF000"
	i $$select^LVBMIMP(mi) q
	f j=1:1:PLIST s @("par"_j)=PLIST(j)
	s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4),etb=$c(23)
	s lf=$c(10),cr=$c(13),nak=$c(21),(result,epis)=""
	i $$start^MIF000() q
	f  d Main i $$stop^MIF000() q
	c par4
	q
Main	r *R:10 e  d  q
	.d:" L "[(" "_par9_" ") loadlist^MIF000(mi),Send
	.d:" BU "[(" "_par9_" ") ORDER
	i $c(R)=enq d
	.d trace^MIF000(mi,"ENQ","H<--M")
	.d ACK
	.k ^TMP($zn,$j,"records") s recordOLD=""
	.f  r *R:10 q:$c(R)=eot  q:R=-1  d
	..i $c(R)'=stx q
	..s record=$$read^MIF000("",lf) q:'$l(record)
	..s record=$e(record,1,$l(record)-1)
	..d trace^MIF000(mi,$tr(record,$c(13,3)," "),"H<--M")
	.. ; check record validity
	..s et=$s(record[etx:etx,1:etb),chsum=$p(record,et,2),chrecord=$p(record,et,1)_et
	..i $$CHSUM(chrecord)'=chsum d  q
	...w nak,*-3 d trace^MIF000(mi,"NAK - Incorrect Checksum","H-->M")
	..d ACK
	..s record=recordOLD_$p($e(record,2,$l(record)),et,1)
	..i et=etb s recordOLD=$p(record,cr,$l(record,cr)),record=$p(record,cr,1,$l(record,cr)-1)
	..i et=etx s recordOLD=""
	..f j=1:1:$l(record,cr) s x=$p(record,cr,j) i $l(x) s cnt=$o(^TMP($zn,$j,"records",""),-1)+1,^TMP($zn,$j,"records",cnt)=x
	.d trace^MIF000(mi,$s($c(R)=eot:"EOT",1:R),"H<--M")
	.s cnt="" f  s cnt=$o(^TMP($zn,$j,"records",cnt)) q:cnt=""  d
	..s record=^(cnt)
	.. ; query record
	..i $e(record)="Q" d  q
	...s epis=$p($p(record,"|",3),"^",2)
	...i $l(epis),$d(^TEPI(epis,1)) s ^TMP($zn,$j,"ENQ",epis)="" q
	...s suffix=$e(epis,$l(epis)),epis=$e(epis,1,$l(epis)-1)
	...i $l(epis),$d(^TEPI(epis,1)) s ^TMP($zn,$j,"ENQ",epis)=suffix q
	.. ; header record
	..i $e(record)="H" d  q
	...d Last s (sample,epis,surname,result,date,time,ftype,QC)=""
	.. ; patient record
	..i $e(record)="P" d  q
	...s surname=$tr($tr($p(record,"|",6)," "),"^"," ")
	.. ; order record
	..i $e(record)="O" d  q
	...s epis=$tr($p($p(record,"|",3),"^",1)," "),ftype=$p(record,"|",16)
	... ; check if received id is QC
	...s QC="" i $l(epis) s QC=$$findQC^MIF000(mi,epis)
	.. ; result record
	..i $e(record)="R" d  q
	...s x1=$tr($p($p(record,"|",3),"+",2)," "),x2=$tr($p(record,"|",4)," "),x3=$p($p(record,"|",7),"^",2)
	... ; convert flags required : 4 - '>', 5 - '<'
	...s x3=$s(x3=4:">",x3=5:"<",1:"")
	... ; add fluid type to channel id
	...i $l(x1),$l(x2) s result=result_x1_ftype_$c(par10)_x3_x2_$c(par10)_x3_$c(par11)
	... ; date and time
	...i $l($tr($p(record,"|",13)," ")) d
	....s date=$$intdate^SSUTIL4($e($p(record,"|",13),5,6)_"/"_$e($p(record,"|",13),7,8)_"/"_$e($p(record,"|",13),1,4))
	....s time=($e($p(record,"|",13),9,10)*3600)+($e($p(record,"|",13),11,12)*60)+$e($p(record,"|",13),13,14)
	...d Last s result=""
	.. ; last record
	..i $e(record)="L" d  q
	...d Last
	...s (sample,epis,surname,result,date,time,ftype,QC)=""
	.d trace^MIF000(mi,$s($c(R)=eot:"EOT",1:R),"H<--M")
	.d ORDER1
	q
Last	; file result if exist
	i epis?1.99AN,$l(result) d file^MIF000(mi,sample,epis,surname,result,date,time,QC)
	q
ORDER	; create list of orders if exists
	d scanall^MIF000(mi)
	s epis="" f  s epis=$o(^TMP("MIF-SCAN",$j,mi,epis)) q:epis=""  d SET(epis,"SCAN","")
	q:'$d(^TMIF(mi,10))
	s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="L|1|N"
	d Send k ^TMIF(mi,10)
	k ^TMIF("MIF-SCAN",$j,mi)
	q
ORDER1	; create list of orders if exists
	s epis="" f  s epis=$o(^TMP($zn,$j,"ENQ",epis)) q:epis=""  s suffix=$p(^(epis),"|") d
	.k ^TMP("MIF-SINGLE",$j,mi)
	.d scanone^MIF000(mi,epis,,,suffix)
	.d SET(epis,"QUERY",suffix)
	.s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="L|1|N"
	.k ^TMP("MIF-SINGLE",$j,mi)
	.k ^TMP($zn,$j,"ENQ",epis)
	.d Send
	k ^TMIF(mi,10)
	k ^TMIF("MIF-SINGLE",$j,mi)
SAVE(mi)	; create loadlist records
	s epis=^TMP("MIF000",$j,"LL","EPISODE"),epis=$p(epis,$c(1),1)
	s sample=^TMP("MIF000",$j,"LL","SAMPLE")
	d SET(epis,"LOAD","")
	s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="L|1|F"
	q 0
PATDET(epis)	; set patient details record
	i '$$select^LVBEPVIS(epis,"Y") d  q
	.f j=1:1:PLIST i $d(PLIST) s PLIST(j)=$p(PLIST(j),$c(1))
	.s sex=$s($g(PLIST(5))="M":"M",$g(PLIST(5))="F":"F",1:"U")
	.s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="P|1||||"_$e($g(PLIST(3)),1,20)_"^"_$e($g(PLIST(4)),1,15)_"|||"_sex_"|||||||||"
	s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="P|1||||^||||||||"
	q
SET(epis,mode,suffix)	; set record to be sent to instrument
	k tcx s (tc,tcx,ftype)=""
	; process a single episode scan
	i mode="QUERY",$d(^TMP("MIF-SINGLE",$j,mi,epis)) d
	.f  s tc=$o(^TMP("MIF-SINGLE",$j,mi,epis_suffix,tc)) q:tc=""  s tcx=tcx_$e(tc,1,3)_"+1\",ftype=$e(tc,4)
	.i $l(tcx) s tcx="1.0+"_$e(tcx,1,$l(tcx)-1)
	; process an all episode scan
	i mode="SCAN",$d(^TMP("MIF-SCAN",$j,mi,epis)) d
	.f  s tc=$o(^TMP("MIF-SCAN",$j,mi,epis_suffix,tc)) q:tc=""  s tcx=tcx_$e(tc,1,3)_"+1\",ftype=$e(tc,4)
	.i $l(tcx) s tcx="1.0+"_$e(tcx,1,$l(tcx)-1)
	; process a load list episode scan
	i mode="LOAD" d
	.f  s tc=$o(^TMP("MIF000",$j,"LL","TEST",tc)) q:tc=""  s tcx=tcx_$e(tc,1,3)_"+1\",ftype=$e(tc,4)
	.i $l(tcx) s tcx="1.0+"_$e(tcx,1,$l(tcx)-1)
	i $l(tcx) d
	.d PATDET(epis)
	. ; if no fluid type default to '1' - serum/plasma
	.i $l(tcx)>170 d
	..s cnt=0 f  d  q:$l(tcx)<171
	...f j=1:1 d  q:$l(tcx)<171
	....i $l($p(tcx,"\",1,j))>170 s cnt=cnt+1,tcx(cnt)=$p(tcx,"\",1,j-1) s tcx="1.0+"_$p(tcx,"\",j,$l(tcx,"\"))
	....i tcx="1.0+" s tcx=""
	..i tcx="1.0+" s tcx=""
	.i tcx'="" s cnt=cnt+1,tcx(cnt)=tcx
	.f j=1:1 q:'$d(tcx(j))  s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="O|"_j_"|"_epis_suffix_"||^^^"_tcx(j)_"|R||||||"_$s(j=1:"N",1:"A")_"||||"_$s(ftype'="":ftype,1:1)_"|"
	q
Send	; send list of orders if exists
	q:'$d(^TMIF(mi,10))
	; read in spare characters
	f  r *x:1 q:x=-1
	w enq,*-3 d trace^MIF000(mi,"ENQ","H-->M") f j=1:1:10 r *R:1 i $c(R)=ack!($c(R)=enq) q
	i $c(R)=enq d trace^MIF000(mi,"ENQ","H<--M") q
	i $c(R)'=ack d  q
	.d trace^MIF000(mi,R,"H<--M") w eot,*-3 d trace^MIF000(mi,"EOT","H-->M")
	d trace^MIF000(mi,"ACK","H<--M")
	q:$$SEND("1H|\^&|||LABTRAK|||||||P|1")
	s x="" f FRAME=2:1 s x=$O(^TMIF(mi,10,x)) q:x=""  q:$$SEND(FRAME#8_^TMIF(mi,10,x))
	h 1 w eot,*-3 d trace^MIF000(mi,"EOT","H-->M")
	k ^TMIF(mi,10)
	q
SEND(str)	; send string to instrument
	s str=str_cr_etx,chsum=$$CHSUM(str)
	w stx,str,chsum,cr,lf,*-3 s str=$e(str,1,$l(str)-2) d trace^MIF000(mi,str_" "_chsum,"H-->M")
	f j=1:1:6 r *R:10 i ($c(R)=ack)!($c(R)=eot) q
	i $c(R)=ack d trace^MIF000(mi,"ACK","H<--M") q 0
	i $c(R)=eot d trace^MIF000(mi,"EOT","H<--M") q 0
	d trace^MIF000(mi,R,"H<--M")
	q 1
CHSUM(x)	; calculate check sum
	n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y)
	s z=$e("0123456789ABCDEF",z#256\16+1)_$e("0123456789ABCDEF",z#16+1)
	q z
ACK	; send 'ack' to instrument
	w ack,*-3
	d trace^MIF000(mi,"ACK","H-->M")
	q
NEXTTRAY(tray)	
	q tray
]]></Routine>
</Export>
