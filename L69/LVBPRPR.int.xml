<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBPRPR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBPRPR ; IG 10/07/98 ; LVB Control data access for PR_Report
 ;
 ; supported calls:
 ;
 ; $$select^LVBPRPR(rowid,skip)
 ; $$select1^LVBPRPR(rowid,skip)
 ; $$open^LVBPRPR(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBPRPR(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBPRPR(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBPRPR(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTPRPR()
 ; $$update^LVBPRPR(rowid)
 ; $$delete^LVBPRPR(rowid)
 ; $$insert^LVBPRPR()
 ; $$count^LVBPRPR()
 ; $$delrep^LVBPRPR(rowid)
 ; $$updrep^LVBPRPR(rowid,type,dest,days,copies,f1,f2)
 ;
 ; fix all indexes
FIX k ^PRi 
 d ##class(User.PRReport).%BuildIndices()
 d ##class(User.PRReportDestination).%BuildIndices()
 q
insert() d pre("N") K PLIST(1)
 i $d(^PR)#10=0 s ^PR=$o(^PR(""),-1)
 f  s PLIST(14)=$i(^PR) q:'$d(^PR(PLIST(14)))
  ;---&SQL(insert INTO PR_Report VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ao
 I 'SQLCODE Q $$select(%ROWID,"Y")
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
select(rowid,skip) K PLIST s rowid=$g(rowid),skip=$g(skip)
  ;---&sql(SELECT * INTO :PLIST() FROM  PR_Report WHERE PRPR_Rowid=:rowid)
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE, rowid
 Do %0Co
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 Q SQLCODE
 ; specific select for the grid
select1(rowid,skip) K PLIST,REPORT,DEST s rowid=$g(rowid),skip=$g(skip),row=$p(rowid,"||",1),chdest=$p(rowid,"||",2)
 i $l(row),'$$select(row) M REPORT=PLIST
 i $l(chdest),'$$select^LVBPRPRD(rowid) M DEST=PLIST
 S SQLCODE=100 K PLIST
 I $D(REPORT) D
 .S SQLCODE=0 M PLIST=REPORT
 .I $D(DEST) D
 ..I $L(DEST(1)) S PLIST(1)=DEST(1)
 ..I $L(DEST(3)) S PLIST(8)=DEST(3)
 ..I $L(DEST(4)) S PLIST(14)=DEST(4)
 ..I $L(DEST(5)) S PLIST(6)=DEST(5)
 ..S PLIST(4)=DEST(6),PLIST(5)=DEST(7)
 ..S PLIST(15)=DEST(8),PLIST(16)=DEST(9)
 .i " TBL DQR "[(" "_$p(PLIST(7),$c(1))_" ") s PLIST(10)=""
 S PLIST=$O(PLIST(""),-1)
 Q SQLCODE
count() n  s count=0
 i $$open("R")
 f  q:$$fetch("R")  S count=count+1
 i $$close()
 q count
 ;
 ; par - 1.Status
 ;       2.Report code
 ;       3.Report number
 ;       4.Destination
 ;       5.User
 ;       6.Search field
open(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),xUser=$g(xUser) f j=1:1:6 s @("par"_j)=$p(par,"||",j)
 s (row,chdest)="" i $l(par3) s row=+par3
 q 0
fetch(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),xUser=$g(xUser) f j=1:1:6 s @("par"_j)=$p(par,"||",j)
 K PLIST s row=$g(row),chdest=$g(chdest),ok=1
 d
 . ; if status and destination are entered
 .i " ED S P R I D "[(" "_$g(par1)_" "),$l(par4) d  q
 ..f  d:$l(row)  q:'ok  s row=$o(^PRi("STATUS-DEST",par1,par4,row),-1) q:row=""
 ...f  s chdest=$o(^PRi("STATUS-DEST",par1,par4,row,chdest)) q:chdest=""  d  q:'ok
 ....s ok=$$val(row_"||"_chdest,par,xUser)
 . ; if status is entered
 .i " ED S P R I D "[(" "_$g(par1)_" "),'$l(par4) d  q
 ..f  d:$l(row)  q:'ok  s row=$o(^PRi("STATUS",par1,row),-1) q:row=""
 ...f  s chdest=$o(^PRi("STATUS",par1,row,chdest)) q:chdest=""  d  q:'ok
 ....s ok=$$val(row_"||"_chdest,par,xUser)
 . ; if status is entered
 .i " E C "[(" "_$g(par1)_" "),'$l(par4) d  q
 ..f  s row=$o(^PRi("STATUS",par1,row),-1) q:row=""  d  q:'ok
 ...s ok=$$val(row,par,xUser)
 . ; if destination is entered
 .i '$l(par1),$l(par4) d  q
 ..f  d:$l(row)  q:'ok  s row=$o(^PRi("DEST",par4,row),-1) q:row=""
 ...f  s chdest=$o(^PRi("DEST",par4,row,chdest)) q:chdest=""  d  q:'ok
 ....s ok=$$val(row_"||"_chdest,par,xUser)
 . ; if report code is entered
 .i '$l(par1),$l(par2) d  q
 ..f  d:$l(row)  q:'ok  s row=$o(^PRi("REPORT",par2,row),-1) q:row=""
 ...f  s chdest=$o(^PR(row,1,"DEST",chdest)) q:chdest=""  d:chdest  q:'ok
 ....s ok=$$val(row_"||"_chdest,par,xUser)
 . ;
 .i '$l(par1),'$l(par2),'$l(par4),par3["+" d  q
 ..f  d:$l(row)  q:'ok  s row=$o(^PR(row)) q:row=""
 ...f  s chdest=$o(^PR(row,1,"DEST",chdest)) q:chdest=""  i chdest d  q:'ok
 ....s ok=$$val(row_"||"_chdest,par,xUser)
 . ;
 .i '$l(par1),'$l(par2),'$l(par4),par3'["+" d  q
 ..f  d:$l(row)  q:'ok  q:$l(par3)  s row=$o(^PR(row),-1) q:row=""
 ...f  s chdest=$o(^PR(row,1,"DEST",chdest)) q:chdest=""  i chdest d  q:'ok
 ....s ok=$$val(row_"||"_chdest,par,xUser)
 i ok q 100
 q $$select1(row_"||"_chdest)
 ; Fetch all data
fetchbuffer(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9) s par=$g(par),xUser=$g(xUser) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,xUser) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,xUser,p2,p3,p4,p5,p6,p7,p8,p9) N (par,xUser,PLIST) s par=$g(par),xUser=$g(xUser) K ^TMP($zn,$j)
 i $$open(par,xUser)
 f cnt=1:1 Q:$$fetch(par,xUser)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
close() q 0
 ; validate report
 ; 0-valid , 1-invalid
val(rowid,par,xUser) n (rowid,par,xUser) s rowid=$g(rowid),par=$g(par),xUser=$g(xUser)
 f j=1:1:6 s @("par"_j)=$p(par,"||",j)
 s row=$p(rowid,"||",1),chdest=$p(rowid,"||",2)
 i $l(row),'$$select(row) m REPORT=PLIST
 i $l(chdest),'$$select^LVBPRPRD(rowid) m DEST=PLIST
 s stat=$p($g(REPORT(6)),$c(1)) i stat="R" s stat=$p($g(DEST(5)),$c(1))
 s report=$p($g(REPORT(7)),$c(1)),field=$p($g(REPORT(12)),$c(1))
 s dest=$p($g(DEST(3)),$c(1)),site=""
  ;---&SQL(SELECT CTPD_Site_DR INTO :site FROM CT_PrintDestination WHERE CTPD_RowID=:dest)
   ;--- ** SQL PUBLIC Variables: SQLCODE, dest, site
 Do %0Eo
 s user=$p($g(REPORT(11)),$c(1))
 ; check user site
 i $$ValUser^LVBCTUSL(xUser,site) q 100
 ; check all parameters
 i $l(par1),par1'=stat q 1
 i $l(par2),par2'=report q 2
 i $l(par4),par4'=dest q 4
 i $l(par5),par5'=user q 5
 i $l(par6),field'[par6 q 6
 q 0
update(RowID) d pre("Y") k PLIST(1) s RowID=$g(RowID)
  ;---&sql(UPDATE PR_Report VALUES :PLIST() WHERE PRPR_Rowid = :RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Go
 i 'SQLCODE q $$select(%ROWID,"Y")
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; type - R-Print
 ;        S-Suspend
updrep(rowid,type,dest,days,copies,f1,f2) n (rowid,type,dest,days,copies,f1,f2,PLIST)
 s rowid=$g(rowid),type=$g(type),dest=$g(dest),days=$g(days),copies=$g(copies),f1=$g(f1),f2=$g(f2)
 s row=$p(rowid,"||",1),chdest=$p(rowid,"||",2)
 ; save days
 i $l(row),$l(days),'$$select(row,"Y") s PLIST(13)=days i $$update(row)
 ; suspend report for destination
 i $l(rowid),type="S",'$$select^LVBPRPRD(rowid) s PLIST(5)="S" i $$update^LVBPRPRD(rowid)
 ; print report to destination
 i $l(row),type="R" s line="" d
 .i $$open^LVBPRPRD(row)
 .f  q:$$fetch^LVBPRPRD(row)  i dest=$p(PLIST(3),$c(1)) s line=PLIST(1) q
 .i $$close^LVBPRPRD()
 . ; record if destination exist --> update it
 .i $l(line) d
 ..k PLIST i $$select^LVBPRPRD(line) q
 ..s PLIST(4)=copies,PLIST(5)="R",PLIST(8)=f1,PLIST(9)=f2
 ..s PLIST=$o(PLIST(""),-1)
 ..i $$update^LVBPRPRD(line)
 . ; record if destination does not exist --> insert it
 .i '$l(line) d
 ..k PLIST s PLIST(3)=dest,PLIST(4)=copies,PLIST(5)="R",PLIST(8)=f1,PLIST(9)=f2
 ..i $$insert^LVBPRPRD(row)
 q 0
delete(RowID) s RowID=$g(RowID)
  ;---&sql(DELETE FROM PR_Report WHERE PRPR_Rowid = :RowID)
   ;--- ** SQL PUBLIC Variables: RowID, SQLCODE
 Do %0Io
 q SQLCODE
delrep(rowid) s rowid=$g(rowid),row=$p(rowid,"||",1),chdest=$p(rowid,"||",2)
 ; delete report if only report id send to MUMPS
 i '$l(chdest),$$delete(row)
 ; delete report/destination
 i $l(row),$l(chdest),$$delete^LVBPRPRD(rowid)
 ; delete report if no more destinations
 i $l(row),$o(^PR(row,1,"DEST",0))="",$$delete(row)
 q 0
pre(xUpdate) d PreSQL^SSUTIL4("","")
 i $g(PLIST(8))'=""
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 ;
 i $g(skip)="Y" q
 ;
 I $G(PLIST(7))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^MVBSSRG(plist(7))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(7)=X K plist
 I $G(PLIST(8))'="",$l(PLIST(8),"||")'=3 D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTPD(plist(8))
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)_$C(1)_PLIST(6)_$C(1)_PLIST(13)
 .K PLIST M PLIST=plist S PLIST(8)=X K plist
 I $G(PLIST(11))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(11),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(11)=X K plist
 q
%0Ao n %i,icol,ir
 f icol=0:1:14 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.PRReport.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ao
%0Co n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Cerr" s %mmmsqld(17)=0,%mmmsqld(18)=""
 s %mmmsqld(15)=$g(rowid)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(14)=%mmmsqld(15)
 i PLIST(14)'="",$d(^PR(PLIST(14)))
 i '$t
 e  i 1]]PLIST(14)
 i  g %0CBdun
 s %mmmsqld(21)=$g(^PR(PLIST(14)))
 s PLIST(2)=$p(%mmmsqld(21),"^",1) s PLIST(3)=$p(%mmmsqld(21),"^",2) s PLIST(4)=$p(%mmmsqld(21),"^",3) s PLIST(5)=$p(%mmmsqld(21),"^",4) s PLIST(6)=$p(%mmmsqld(21),"^",5) s PLIST(7)=$p(%mmmsqld(21),"^",6) s PLIST(8)=$p(%mmmsqld(21),"^",7) s PLIST(9)=$p(%mmmsqld(21),"^",8) s PLIST(11)=$p(%mmmsqld(21),"^",10) s PLIST(12)=$p(%mmmsqld(21),"^",11) s PLIST(13)=$p(%mmmsqld(21),"^",12)
 s PLIST(10)=$g(^PR(PLIST(14),"PAR"))
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^PR($p(PLIST(14),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(17)=1,%mmmsqld(18)=$name(^PR($p(PLIST(14),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.PR_Report for RowID value: "_PLIST(14) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(14)'="",$d(^PR(PLIST(14)))
 i '$t
 e  i 1]]PLIST(14)
 i  g %0CCdun
 s %mmmsqld(24)=$g(^PR(PLIST(14)))
 s PLIST(2)=$p(%mmmsqld(24),"^",1) s PLIST(3)=$p(%mmmsqld(24),"^",2) s PLIST(4)=$p(%mmmsqld(24),"^",3) s PLIST(5)=$p(%mmmsqld(24),"^",4) s PLIST(6)=$p(%mmmsqld(24),"^",5) s PLIST(7)=$p(%mmmsqld(24),"^",6) s PLIST(8)=$p(%mmmsqld(24),"^",7) s PLIST(9)=$p(%mmmsqld(24),"^",8) s PLIST(11)=$p(%mmmsqld(24),"^",10) s PLIST(12)=$p(%mmmsqld(24),"^",11) s PLIST(13)=$p(%mmmsqld(24),"^",12)
 s PLIST(10)=$g(^PR(PLIST(14),"PAR"))
%0CBuncommitted ;
 s PLIST(1)=PLIST(14)
 s SQLCODE=0 g %0Cc
%0CCdun i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) s %mmmsqld(17)=0 }
%0CBdun 
%0CAdun 
%0Cc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(17))=1 { l -@%mmmsqld(18) } q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Cc
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(dest)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("CTDS",%mmmsqld(3)))
 e  g %0EBdun
 s %mmmsqld(12)=$g(^TTAB("CTDS",%mmmsqld(3)))
 s site=$p(%mmmsqld(12),"\",8)
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTAB("CTDS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("CTDS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_PrintDestination for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("CTDS",%mmmsqld(3)))
 e  g %0ECdun
 s %mmmsqld(17)=$g(^TTAB("CTDS",%mmmsqld(3)))
 s site=$p(%mmmsqld(17),"\",8)
%0EBuncommitted ;
 s SQLCODE=0 g %0Ec
%0ECdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(RowID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^PR(%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  g %0GBdun
 s %mmmsqld(8)=$$%getlock^User.PRReport.T1(%mmmsqld(2)) i '%mmmsqld(8) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^PR(%mmmsqld(2)))
 i '$t
 e  i 1]]%mmmsqld(2)
 i  g %0GCdun
 k %data
 f icol=0:1:14 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.PRReport.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(8)=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(8)=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(8))=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(RowID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^PR(%mmmsqld(1)))
 i '$t
 e  i 1]]%mmmsqld(1)
 i  g %0IBdun
 s %mmmsqld(7)=$$%getlock^User.PRReport.T1(%mmmsqld(1)) i '%mmmsqld(7) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^PR(%mmmsqld(1)))
 i '$t
 e  i 1]]%mmmsqld(1)
 i  g %0ICdun
 d %delete^User.PRReport.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(7)=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(7)=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(7))=1 %ReleaseLock^User.PRReport.T1(%mmmsqld(1)) g %0Ic
]]></Routine>
</Export>
