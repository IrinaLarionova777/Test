<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBQCMTL3" type="INT" languagemode="0" generated="1"><![CDATA[
LVBQCMTL3 ; ML 16/6/2000 ; MVB Control code access for QC_MLTTestCodeLevel - Data review
 ;
 ; supported calls:
 ;
 ; $$open^LVBQCMTL3(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9)
 ; $$fetch^LVBQCMTL3(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBQCMTL3(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9)
 ; $$fetchall^LVBQCMTL3(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9)
 ; $$close^LVBQCMTL3()
 ; $$getall^LVBQCMTL3(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9)
 ; open the cursor
open(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9) k ^TMP($zn,$j,0),^TMP($zn,$j,10)
 s material=$g(material),lot=$g(lot),type=$g(type),wsmach=$g(wsmach),tg=$g(tg)
 s DRange=$g(DRange),DFrom=$p(DRange,"/"),DTo=$p(DRange,"/",2)
 s x2="" f  s x2=$o(^TTQC(material,"LOT",lot,"TYPE",x2)) q:x2=""  d
 .i $l(type),type'=x2 q
 .s x3="" f  s x3=$o(^TTQC(material,"LOT",lot,"TYPE",x2,x3)) q:x3=""  d
 ..i $l(wsmach),wsmach'=x3 q
 ..s x4="" f  s x4=$o(^TTQC(material,"LOT",lot,"TYPE",x2,x3,"TEST",x4)) q:x4=""  d
 ...i $l(tg) d  i tg'=xtg q
 ....s rowid=material_"||"_lot_"||"_x2_"||"_x3_"||"_x4
 ....  ;---&SQL(SELECT QCMTT_TestItemGroup_DR INTO :xtg FROM QC_MLTTestCode WHERE QCMTT_RowID=:rowid)
  ....  ;--- ** SQL PUBLIC Variables: SQLCODE, rowid, xtg
 .... Do %0Ao
 ....s xtg=$p(xtg,$c(1))
 ...s x5="" f  s x5=$o(^TTQC(material,"LOT",lot,"TYPE",x2,x3,"TEST",x4,"DATA",x5)) q:x5=""  d
 ....s rowid=material_"||"_lot_"||"_x2_"||"_x3_"||"_x4_"||"_x5,(xx5,xx6)=3
 ....i '$$select^LVBQCMTL(rowid,"Y") d
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,5)=PLIST(3),xx5=$l($p(PLIST(3),".",2))
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,6)=PLIST(4),xx6=$l($p(PLIST(4),".",2))
 ....s (sVALUE0,sNUMBER0,sSQUARE01,sSQUARE02)=""
 ....s (sVALUE1,sNUMBER1,sSQUARE11,sSQUARE12)=""
 ....s x6="" f  s x6=$o(^TTQC(material,"LOT",lot,"TYPE",x2,x3,"TEST",x4,"DATA",x5,x6)) q:x6=""  d
 .....s x7="" f  s x7=$o(^TTQC(material,"LOT",lot,"TYPE",x2,x3,"TEST",x4,"DATA",x5,x6,x7)) q:x7=""  s xx=^(x7) d
 ......i $p(xx,"\",1)="" q
 ......i $p(xx,"\",1)'?.N.1".".N q
 ......i $p(xx,"\",2)="Y" q
 ......s sVALUE1=sVALUE1+xx
 ......s sSQUARE11=sSQUARE11+(xx**2)
 ......s sNUMBER1=sNUMBER1+1
 ......i (x6<DFrom)!(x6>DTo) q
 ......s sVALUE0=sVALUE0+xx
 ......s sSQUARE01=sSQUARE01+(xx**2)
 ......s sNUMBER0=sNUMBER0+1
 ....i sNUMBER0 d
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,1)=$j(sVALUE0/sNUMBER0,0,xx5)
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,4)=sNUMBER0
 .....s sSQUARE02=sVALUE0*sVALUE0
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,2)=""
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,3)=""
 .....i sNUMBER0-1,sSQUARE01-(sSQUARE02/sNUMBER0)'<0 d
 ......s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,2)=$j($zsqr((sSQUARE01-(sSQUARE02/sNUMBER0))/(sNUMBER0-1)),0,xx6)
 ......i ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,1) s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,3)=$j(^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,2)/^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,1)*100,0,2)
 .....i sNUMBER0-1,sSQUARE01-(sSQUARE02/sNUMBER0)<0 d
 ......s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,2)=$j($zsqr(((sSQUARE02/sNUMBER0)-sSQUARE01)/(sNUMBER0-1)),0,xx6)
 ......i ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,1) s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,3)=$j(^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,2)/^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,1)*100,0,2)
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,11)=$j(sVALUE1/sNUMBER1,0,xx5)
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,14)=sNUMBER1
 .....s sSQUARE12=sVALUE1*sVALUE1
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,12)=""
 .....s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,13)=""
 .....i sNUMBER1-1,sSQUARE11-(sSQUARE12/sNUMBER1)'<0 d
 ......s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,12)=$j($zsqr((sSQUARE11-(sSQUARE12/sNUMBER1))/(sNUMBER1-1)),0,xx6)
 ......i ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,11) s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,13)=$j(^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,12)/^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,11)*100,0,2)
 .....i sNUMBER1-1,sSQUARE11-(sSQUARE12/sNUMBER1)<0 d
 ......s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,12)=$j($zsqr(((sSQUARE12/sNUMBER1)-sSQUARE11)/(sNUMBER1-1)),0,xx6)
 ......i ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,11) s ^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,13)=$j(^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,12)/^TMP($zn,$j,10,material,lot,x2,x3,x4,x5,11)*100,0,2)
 ; sort
 k ^TMP($zn,$j,0)
 s x0="" f  s x0=$o(^TMP($zn,$j,10,x0)) q:x0=""  d
 .s x1="" f  s x1=$o(^TMP($zn,$j,10,x0,x1)) q:x1=""  d
 ..s x2="" f  s x2=$o(^TMP($zn,$j,10,x0,x1,x2)) q:x2=""  d
 ...s x3="" f  s x3=$o(^TMP($zn,$j,10,x0,x1,x2,x3)) q:x3=""  d
 ....s x4="" f  s x4=$o(^TMP($zn,$j,10,x0,x1,x2,x3,x4)) q:x4=""  d
 .....s cnt=$o(^TMP($zn,$j,0,""),-1)+1
 .....s ^TMP($zn,$j,0,cnt)=x0_"||"_x1_"||"_x2_"||"_x3_"||"_x4
 .....s x5="" f  s x5=$o(^TMP($zn,$j,10,x0,x1,x2,x3,x4,x5)) q:x5=""  d
 ......m ^TMP($zn,$j,0,cnt,x5)=^TMP($zn,$j,10,x0,x1,x2,x3,x4,x5)
 s ^TMP($zn,$j,0)="" k ^TMP($zn,$j,10)
 q 0
 ; PLIST - 1.RowID
 ;         2.Test Item
 ;         3.Machine/Worksheet
 ;         4,5,6.Level(1,2,3)
 ;         4.1.[Date Range]Mean
 ;         4.2.[Date Range]SD
 ;         4.3.[Date Range]CV
 ;         4.4.[Date Range]No of points
 ;         4.5.Fixed Mean
 ;         4.6.Fixed SD
 ;         4.11.[Total]Mean
 ;         4.12.[Total]SD
 ;         4.13.[Total]CV
 ;         4.14.[Total]No of points
fetch(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9) s SQLCODE=100 k ^TMP($zn,$j,2)
 s line=$g(^TMP($zn,$j,0)),line=$o(^TMP($zn,$j,0,line)) i $l(line) d
 .s SQLCODE=0,^TMP($zn,$j,0)=line
 .s rowid=$g(^TMP($zn,$j,0,line))
 .s ^TMP($zn,$j,2,1)=rowid
 .s ti=$p(rowid,"||",5) i '$$selskip^LVBCTTC(ti) s ^TMP($zn,$j,2,2)=PLIST(2)_$c(1)_PLIST(3)
 .s x1=$p(rowid,"||",3),x2=$p(rowid,"||",4)
 .i x1="W",'$$select^LVBWKS(x2) s ^TMP($zn,$j,2,3)=PLIST(2)_$c(1)_PLIST(3)
 .i x1="M",'$$select^LVBMIMP(x2) s ^TMP($zn,$j,2,3)=PLIST(2)_$c(1)_PLIST(3)
 .f j1=1,2,3 f j2=1:1:14 s $p(^TMP($zn,$j,2,3+j1),$c(27),j2)=$g(^TMP($zn,$j,0,line,j1,j2))
 k PLIST m PLIST=^TMP($zn,$j,2) k ^TMP($zn,$j,2)
 s PLIST=$o(PLIST(""),-1) 
 q SQLCODE 
 ; fetch all data
fetchbuffer(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9) k ^TMP($zn,$j,1)
 s material=$g(material),lot=$g(lot),type=$g(type),wsmach=$g(wsmach),tg=$g(tg),DRange=$g(DRange)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(material,lot,type,wsmach,tg,DRange) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,1,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j,1) k ^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(material,lot,type,wsmach,tg,DRange,p6,p7,p8,p9) k ^TMP($zn,$j,1)
 n (PLIST,material,lot,type,wsmach,tg,DRange)
 s material=$g(material),lot=$g(lot),type=$g(type),wsmach=$g(wsmach),tg=$g(tg),DRange=$g(DRange)
 i $$open(material,lot,type,wsmach,tg,DRange)
 f cnt=1:1 q:$$fetch(material,lot,type,wsmach,tg,DRange)  s ^TMP($zn,$j,1,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,1,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j,1)
 s PLIST=$o(PLIST(""),-1)
 q 0
 ; close the cursor 
close() k ^TMP($zn,$j,0)
 q 0
getall(material,lot,type,wsmach,tg,DRange) n (material,lot,type,wsmach,tg,DRange,PLIST) k ^TMP($zn,$j,7)
 i $$open(material,lot,type,wsmach,tg,DRange)
 f cnt=1:1 q:$$fetch(material,lot,type,wsmach,tg,DRange)  d
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .s ^TMP($zn,$j,7,cnt)=$p(PLIST(1),$c(1))_$c(2)_$c(2)_$c(2)_str
 i $$close()
 k PLIST m PLIST=^TMP($zn,$j,7)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j,7)
 q 0
%0Ao n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Aerr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(4)=$g(rowid)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3),%mmmsqld(9)=$p(%mmmsqld(3),"||",4),%mmmsqld(10)=$p(%mmmsqld(3),"||",5)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",%mmmsqld(9)'="",%mmmsqld(10)'="",$d(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7),"TYPE",%mmmsqld(8),%mmmsqld(9),"TEST",%mmmsqld(10)))
 e  g %0ABdun
 s %mmmsqld(25)=$g(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7),"TYPE",%mmmsqld(8),%mmmsqld(9),"TEST",%mmmsqld(10)))
 s xtg=$p(%mmmsqld(25),"\",2)
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTQC($p(%mmmsqld(3),"||",1),"LOT",$p(%mmmsqld(3),"||",2),"TYPE",$p(%mmmsqld(3),"||",3),$p(%mmmsqld(3),"||",4),"TEST",$p(%mmmsqld(3),"||",5))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TTQC($p(%mmmsqld(3),"||",1),"LOT",$p(%mmmsqld(3),"||",2),"TYPE",$p(%mmmsqld(3),"||",3),$p(%mmmsqld(3),"||",4),"TEST",$p(%mmmsqld(3),"||",5)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.QC_MLTTestCode for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(6)=$p(%mmmsqld(3),"||"),%mmmsqld(7)=$p(%mmmsqld(3),"||",2),%mmmsqld(8)=$p(%mmmsqld(3),"||",3),%mmmsqld(9)=$p(%mmmsqld(3),"||",4),%mmmsqld(10)=$p(%mmmsqld(3),"||",5)
 i %mmmsqld(6)'="",%mmmsqld(7)'="",%mmmsqld(8)'="",%mmmsqld(9)'="",%mmmsqld(10)'="",$d(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7),"TYPE",%mmmsqld(8),%mmmsqld(9),"TEST",%mmmsqld(10)))
 e  g %0ACdun
 s %mmmsqld(38)=$g(^TTQC(%mmmsqld(6),"LOT",%mmmsqld(7),"TYPE",%mmmsqld(8),%mmmsqld(9),"TEST",%mmmsqld(10)))
 s xtg=$p(%mmmsqld(38),"\",2)
%0ABuncommitted ;
 s SQLCODE=0 g %0Ac
%0ACdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0ABdun 
%0AAdun 
%0Ac s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Ac
]]></Routine>
</Export>
