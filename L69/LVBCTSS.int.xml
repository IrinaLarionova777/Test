<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTSS" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTSS ; IG 30/4/98 ;MVB Control code access for CT_SuperSet
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTSS(ROWID,skip,site)
 ; $$open^LVBCTSS(skip,user,code,desc,content,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTSS(skip,user,code,desc,content,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTSS(skip,user,code,desc,content,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTSS(skip,user,code,desc,content,p5,p6,p7,p8,p9)
 ; $$close^LVBCTSS()
 ; $$insert^LVBCTSS()
 ; $$update^LVBCTSS(ROWID)
 ; $$delete^LVBCTSS(ROWID,Comments)
 ; $$getall^LVBCTSS(user,Continue)
 ;
  ;---&SQL(DECLARE CTSS1 CURSOR FOR SELECT * FROM CT_SuperSet
   ;---         WHERE ((%ALPHAUP(CTSS_CODE) %STARTSWITH :code) OR (:code IS NULL))
   ;---         AND ((%UPPER(CTSS_Desc) %STARTSWITH :desc) OR (:desc is NULL))
   ;---         ORDER BY CTSS_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, code, desc
  ;---&SQL(DECLARE CTSS2 CURSOR FOR SELECT * FROM CT_SuperSet
   ;---         WHERE ((%ALPHAUP(CTSS_CODE) [ :code) OR (:code IS NULL))
   ;---         AND ((%UPPER(CTSS_Desc) [ :desc) OR (:desc is NULL))
   ;---         ORDER BY CTSS_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE, code, desc
FIX k ^TTABi("SUPTS") s a="" f  s a=$o(^TTAB("SUPTS",a)) q:a=""  d
 .i '$$select(a,"Y") s PLIST(5)=99999,err=$$update(a) i err w !,a," ",err
 d ##class(User.CTSuperSet).%BuildIndices()
 q
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_SuperSet VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE CT_SuperSet VALUES :PLIST() WHERE CTSS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Go
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_SuperSet WHERE CTSS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Io
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(skip,user,code,desc,content,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),code=$$UPPER^SSUTIL4($g(code)),desc=$$UPPER^SSUTIL4($g(desc)),content=$g(content)
  ;---i '$l(content) &SQL(OPEN CTSS1)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i '$l(content) Do %CTSS10o
  ;---i $l(content) &SQL(OPEN CTSS2)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 i $l(content) Do %CTSS20o
 Q 0
 ;
 ; Fetch the data
fetch(skip,user,code,desc,content,p5,p6,p7,p8,p9) K PLIST s skip=$g(skip),user=$g(user),code=$$UPPER^SSUTIL4($g(code)),desc=$$UPPER^SSUTIL4($g(desc)),content=$g(content)
  ;---i '$l(content) f  &SQL(FETCH CTSS1 INTO :PLIST())  q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i '$l(content) f  Do %0Mo  q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
  ;---i $l(content) f  &SQL(FETCH CTSS2 INTO :PLIST())  q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 i $l(content) f  Do %0No  q:SQLCODE  q:$$ValUser(user,$p(PLIST(1),$c(1)))'=60
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(skip,user,code,desc,content,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user),code=$g(code),desc=$g(desc),content=$g(content) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,user,code,desc,content) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,user,code,desc,content,p5,p6,p7,p8,p9) N (skip,user,code,desc,content,PLIST) s skip=$g(skip),user=$g(user),code=$g(code),desc=$g(desc),content=$g(content) K ^TMP($zn,$j)
 i $$open(skip,user,code,desc,content)
 f cnt=1:1 Q:$$fetch(skip,user,code,desc,content)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTSS1) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSS10c 
  ;---&SQL(CLOSE CTSS2)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTSS20c
 q 0
 ;
 ; select data by code
select(ROWID,skip,site) K PLIST S ROWID=$$ALPHAUP^SSUTIL4(ROWID),skip=$g(skip),site=$g(site)
 ; check synonym
 i $l(ROWID),'$d(^TTAB("SUPTS",ROWID)) s xx=$$select^LVBCTSY(ROWID,"SS",site) i $l(xx) s ROWID=xx
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_SuperSet WHERE CTSS_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Qo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 i '$g(PLIST(5)) s PLIST(5)=99999
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTUSL(plist(6),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 ;
 Q
 ;
getall(user,Continue) n (user,Continue,PLIST) s user=$g(user),Continue=$g(Continue)
 i Continue'="Y" d
 .k ^TMP($zn,$j)
 .i $$open("Y",user)
 .f cnt=1:1 q:$$fetch("Y",user)  d
 ..s ^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_$p(PLIST(4),$c(1))
 .i $$close()
 k PLIST s (sum,x)="" f j=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^(x)))>15000  s PLIST(j)=^(x),sum=sum+$l(^(x)) k ^TMP($zn,$j,x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
 ;
 ; check user - superset
ValUser(user,code) n (user,code) s user=$g(user),code=$g(code),(ok,ok1,ok2)=0
 ; check user site
  ;---s site="" &SQL(SELECT CTSS_UserSite_DR INTO :site FROM CT_SuperSet WHERE CTSS_RowID=:code)
   ;--- ** SQL PUBLIC Variables: SQLCODE, code, site
 s site="" Do %0So
 s site=$p(site,$c(1)) i $l(site) s ok1=$$ValUser^LVBCTUSL(user,site)
 ; check department
 s x="" f  s x=$o(^TTAB("SUPTS",code,"ITM",x)) q:x=""  s ts=$p(^(x),"\",1),dep($e(ts))=""
 s dep=$o(dep("")) i $o(dep(dep))="" s ok2=$$ValUser^LVBCTDEP(user,dep)
 s ok=$s(ok1>ok2:ok1,1:ok2)
 q ok
%CTSS10o s $zt="%CTSS10E" s SQLCODE=$s($g(%CTSS10c):-101,1:0) q:SQLCODE'=0  s %CTSS10d(18)=0 s %CTSS10d(19)=0,%CTSS10d(20)=""
 s %CTSS10d(9)=$g(code),%CTSS10d(10)=$g(code),%CTSS10d(12)=$g(desc),%CTSS10d(13)=$g(desc)
 s %CTSS10t(1)=$i(^||%sql.temp)
 s %CTSS10c=1 q
%CTSS10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTSS10c,%CTSS10d,%CTSS10E,%CTSS10l,%CTSS10n,%CTSS10R,%CTSS10s,%CTSS10t,%CTSS10Z q
%0Afirst s %CTSS10d(17)=""
 k ^||%sql.temp(%CTSS10t(1),0) s ^||%sql.temp(%CTSS10t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTSS10t(1),0))
 d %0ABMod
 ; asl MOD# 4
 i $sortend(^||%sql.temp(%CTSS10t(1),0))
 s %CTSS10s(4)=""
%0ADk1 s %CTSS10s(4)=$o(^||%sql.temp(%CTSS10t(1),0,%CTSS10s(4)))
 i %CTSS10s(4)="" g %0ADdun
 s %CTSS10d(4)=$s(%CTSS10s(4)=-1E14:"",1:%CTSS10s(4))
 s %CTSS10s(17)=""
%0ADk2 s %CTSS10s(17)=$o(^||%sql.temp(%CTSS10t(1),0,%CTSS10s(4),%CTSS10s(17)))
 i %CTSS10s(17)="" g %0ADk1
 s %CTSS10d(17)=$s(%CTSS10s(17)=-1E14:"",1:%CTSS10s(17))
 s %CTSS10d(33)=$g(^||%sql.temp(%CTSS10t(1),0,%CTSS10s(4),%CTSS10d(17)))
 s %CTSS10d(1)=$lg(%CTSS10d(33),4) s %CTSS10d(2)=$lg(%CTSS10d(33),2) s %CTSS10d(3)=$lg(%CTSS10d(33),5) s %CTSS10d(5)=$lg(%CTSS10d(33),6) s %CTSS10d(6)=$lg(%CTSS10d(33),3) s %CTSS10d(7)=$lg(%CTSS10d(33),1)
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTSS10d(18)=%CTSS10d(18)+1,%ROWCOUNT=%CTSS10d(18),%ROWID=%CTSS10d(1),%CTSS10c=10 q
%CTSS10f i '$g(%CTSS10c) { s SQLCODE=-102 q  } i %CTSS10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTSS10d(18))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTSS10d(18),%CTSS10c=100 q  } g %0Afirst:%CTSS10c=1
 g %0ADk2
%0ADdun 
%0AAdun 
 s %ROWCOUNT=%CTSS10d(18),SQLCODE=100,%CTSS10c=100 q
%CTSS10c i '$g(%CTSS10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTSS10d(18)),1:0) f %CTSS10d(21)=1 { i $sortend(^||%sql.temp(%CTSS10t(%CTSS10d(21)),0),0) } k ^||%sql.temp(%CTSS10t(1))
 i $zu(115,2)=1,$g(%CTSS10d(19))=1 { l -@%CTSS10d(20) } k %CTSS10c,%CTSS10d,%CTSS10E,%CTSS10l,%CTSS10n,%CTSS10R,%CTSS10s,%CTSS10t,%CTSS10Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTSS10c=100
 f %CTSS10d(21)=1 i $sortend(^||%sql.temp(%CTSS10t(%CTSS10d(21)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTSS10d(1)=""
%0ABk1 s %CTSS10d(1)=$o(^TTAB("SUPTS",%CTSS10d(1)))
 i %CTSS10d(1)="" g %0ABdun
 s %CTSS10d(26)=$g(^TTAB("SUPTS",%CTSS10d(1)))
 s %CTSS10d(2)=$p(%CTSS10d(26),"\",1) s %CTSS10d(3)=$p(%CTSS10d(26),"\",2) s %CTSS10d(4)=$p(%CTSS10d(26),"\",3) s %CTSS10d(5)=$p(%CTSS10d(26),"\",4) s %CTSS10d(6)=$p(%CTSS10d(26),"\",5) s %CTSS10d(7)=$p(%CTSS10d(26),"\",6)
 s %CTSS10d(11)=$zu(28,%CTSS10d(2),5) s %CTSS10d(8)=$zu(28,%CTSS10d(1),6)
 g:'((($c(0)[%CTSS10d(9))||(%CTSS10d(9)=$c(32,0)&&($e(%CTSS10d(8))=$c(32)))||(%CTSS10d(9)=$e(%CTSS10d(8),1,$l(%CTSS10d(9)))))||(%CTSS10d(10)="")) %0ABk1
 g:'(((%CTSS10d(11)'="")&&(($c(0)[%CTSS10d(12))||(%CTSS10d(12)=$c(32,0)&&($e(%CTSS10d(11))=$c(32)))||(%CTSS10d(12)=$e(%CTSS10d(11),1,$l(%CTSS10d(12))))))||(%CTSS10d(13)="")) %0ABk1
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTAB("SUPTS",$p(%CTSS10d(1),"||",1))#"S":$zu(115,4) i $t { s %CTSS10d(19)=1,%CTSS10d(20)=$name(^TTAB("SUPTS",$p(%CTSS10d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_SuperSet for RowID value: "_%CTSS10d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %CTSS10d(15)=$lb(""_%CTSS10d(8),""_%CTSS10d(11))
 i %CTSS10d(1)'="",$d(^TTAB("SUPTS",%CTSS10d(1)))
 e  g %0ACdun
 s %CTSS10d(31)=$g(^TTAB("SUPTS",%CTSS10d(1)))
 s %CTSS10d(2)=$p(%CTSS10d(31),"\",1) s %CTSS10d(3)=$p(%CTSS10d(31),"\",2) s %CTSS10d(4)=$p(%CTSS10d(31),"\",3) s %CTSS10d(5)=$p(%CTSS10d(31),"\",4) s %CTSS10d(6)=$p(%CTSS10d(31),"\",5) s %CTSS10d(7)=$p(%CTSS10d(31),"\",6)
 s %CTSS10d(11)=$zu(28,%CTSS10d(2),5) s %CTSS10d(8)=$zu(28,%CTSS10d(1),6)
 s %CTSS10d(16)=$lb(""_%CTSS10d(8),""_%CTSS10d(11))
 g:%CTSS10d(15)'=%CTSS10d(16) %0ACdun
%0ABuncommitted ;
 s %CTSS10s(4)=$s(%CTSS10d(4)'="":%CTSS10d(4),1:-1E14),%CTSS10d(17)=%CTSS10d(17)+1,%CTSS10d(32)="",$li(%CTSS10d(32),4)=%CTSS10d(1),$li(%CTSS10d(32),2)=%CTSS10d(2),$li(%CTSS10d(32),5)=%CTSS10d(3),$li(%CTSS10d(32),6)=%CTSS10d(5),$li(%CTSS10d(32),3)=%CTSS10d(6),$li(%CTSS10d(32),1)=%CTSS10d(7),^||%sql.temp(%CTSS10t(1),0,%CTSS10s(4),%CTSS10d(17))=%CTSS10d(32)
%0ACdun i $zu(115,2)=1,$g(%CTSS10d(19))=1 { l -@%CTSS10d(20) s %CTSS10d(19)=0 }
 g %0ABk1
%0ABdun 
 q
%CTSS20o s $zt="%CTSS20E" s SQLCODE=$s($g(%CTSS20c):-101,1:0) q:SQLCODE'=0  s %CTSS20d(15)=0 s %CTSS20d(16)=0,%CTSS20d(17)=""
 s %CTSS20d(9)=$g(code),%CTSS20d(10)=$g(code),%CTSS20d(12)=$g(desc),%CTSS20d(13)=$g(desc)
 s %CTSS20t(1)=$i(^||%sql.temp)
 s %CTSS20c=1 q
%CTSS20E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTSS20c,%CTSS20d,%CTSS20E,%CTSS20l,%CTSS20n,%CTSS20R,%CTSS20s,%CTSS20t,%CTSS20Z q
%0Cfirst 
 k ^||%sql.temp(%CTSS20t(1),0) s ^||%sql.temp(%CTSS20t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTSS20t(1),0))
 ; asl MOD# 3
 d %0CBMod
 i $sortend(^||%sql.temp(%CTSS20t(1),0))
 s %CTSS20s(4)=""
%0CCk1 s %CTSS20s(4)=$o(^||%sql.temp(%CTSS20t(1),0,%CTSS20s(4)))
 i %CTSS20s(4)="" g %0CCdun
 s %CTSS20d(4)=$s(%CTSS20s(4)=-1E14:"",1:%CTSS20s(4))
 s %CTSS20s(1)=""
%0CCk2 s %CTSS20s(1)=$o(^||%sql.temp(%CTSS20t(1),0,%CTSS20s(4),%CTSS20s(1)))
 i %CTSS20s(1)="" g %0CCk1
 s %CTSS20d(1)=$s(%CTSS20s(1)=-1E14:"",1:%CTSS20s(1))
 s %CTSS20d(25)=$g(^||%sql.temp(%CTSS20t(1),0,%CTSS20s(4),%CTSS20s(1)))
 s %CTSS20d(2)=$lg(%CTSS20d(25),2) s %CTSS20d(3)=$lg(%CTSS20d(25),4) s %CTSS20d(5)=$lg(%CTSS20d(25),5) s %CTSS20d(6)=$lg(%CTSS20d(25),3) s %CTSS20d(7)=$lg(%CTSS20d(25),1)
 g:$zu(115,2)=0 %0CCuncommitted i $zu(115,2)=1 l +^TTAB("SUPTS",$p(%CTSS20d(1),"||",1))#"S":$zu(115,4) i $t { s %CTSS20d(16)=1,%CTSS20d(17)=$name(^TTAB("SUPTS",$p(%CTSS20d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_SuperSet for RowID value: "_%CTSS20d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTSS20d(1)'="",$d(^TTAB("SUPTS",%CTSS20d(1)))
 e  g %0CDdun
 s %CTSS20d(30)=$g(^TTAB("SUPTS",%CTSS20d(1)))
 s %CTSS20d(2)=$p(%CTSS20d(30),"\",1) s %CTSS20d(3)=$p(%CTSS20d(30),"\",2) s %CTSS20d(4)=$p(%CTSS20d(30),"\",3) s %CTSS20d(5)=$p(%CTSS20d(30),"\",4) s %CTSS20d(6)=$p(%CTSS20d(30),"\",5) s %CTSS20d(7)=$p(%CTSS20d(30),"\",6)
 s %CTSS20d(11)=$zu(28,%CTSS20d(2),5) s %CTSS20d(8)=$zu(28,%CTSS20d(1),6)
 g:'(((%CTSS20d(9)'="")&&(%CTSS20d(8)[%CTSS20d(9)))||(%CTSS20d(10)="")) %0CDdun
 g:'(((%CTSS20d(12)'="")&&((%CTSS20d(11)'="")&&(%CTSS20d(11)[%CTSS20d(12))))||(%CTSS20d(13)="")) %0CDdun
%0CCuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTSS20d(15)=%CTSS20d(15)+1,%ROWCOUNT=%CTSS20d(15),%ROWID=%CTSS20d(1),%CTSS20c=10 q
%CTSS20f i '$g(%CTSS20c) { s SQLCODE=-102 q  } i %CTSS20c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%CTSS20d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTSS20d(15),%CTSS20c=100 q  } g %0Cfirst:%CTSS20c=1
%0CDdun i $zu(115,2)=1,$g(%CTSS20d(16))=1 { l -@%CTSS20d(17) s %CTSS20d(16)=0 }
 g %0CCk2
%0CCdun 
%0CAdun 
 s %ROWCOUNT=%CTSS20d(15),SQLCODE=100,%CTSS20c=100 q
%CTSS20c i '$g(%CTSS20c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTSS20d(15)),1:0) f %CTSS20d(18)=1 { i $sortend(^||%sql.temp(%CTSS20t(%CTSS20d(18)),0),0) } k ^||%sql.temp(%CTSS20t(1))
 i $zu(115,2)=1,$g(%CTSS20d(16))=1 { l -@%CTSS20d(17) } k %CTSS20c,%CTSS20d,%CTSS20E,%CTSS20l,%CTSS20n,%CTSS20R,%CTSS20s,%CTSS20t,%CTSS20Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTSS20c=100
 f %CTSS20d(18)=1 i $sortend(^||%sql.temp(%CTSS20t(%CTSS20d(18)),0),0)
 q
%0CBMod ; asl MOD# 2
 s %CTSS20d(1)=""
%0CBk1 s %CTSS20d(1)=$o(^TTAB("SUPTS",%CTSS20d(1)))
 i %CTSS20d(1)="" g %0CBdun
 s %CTSS20d(23)=$g(^TTAB("SUPTS",%CTSS20d(1)))
 s %CTSS20d(2)=$p(%CTSS20d(23),"\",1) s %CTSS20d(3)=$p(%CTSS20d(23),"\",2) s %CTSS20d(4)=$p(%CTSS20d(23),"\",3) s %CTSS20d(5)=$p(%CTSS20d(23),"\",4) s %CTSS20d(6)=$p(%CTSS20d(23),"\",5) s %CTSS20d(7)=$p(%CTSS20d(23),"\",6)
 s %CTSS20d(11)=$zu(28,%CTSS20d(2),5) s %CTSS20d(8)=$zu(28,%CTSS20d(1),6)
 g:'(((%CTSS20d(9)'="")&&(%CTSS20d(8)[%CTSS20d(9)))||(%CTSS20d(10)="")) %0CBk1
 g:'(((%CTSS20d(12)'="")&&((%CTSS20d(11)'="")&&(%CTSS20d(11)[%CTSS20d(12))))||(%CTSS20d(13)="")) %0CBk1
 s %CTSS20s(4)=$s(%CTSS20d(4)'="":%CTSS20d(4),1:-1E14),%CTSS20s(1)=$s(%CTSS20d(1)'="":%CTSS20d(1),1:-1E14),%CTSS20d(24)="",$li(%CTSS20d(24),2)=%CTSS20d(2),$li(%CTSS20d(24),4)=%CTSS20d(3),$li(%CTSS20d(24),5)=%CTSS20d(5),$li(%CTSS20d(24),3)=%CTSS20d(6),$li(%CTSS20d(24),1)=%CTSS20d(7),^||%sql.temp(%CTSS20t(1),0,%CTSS20s(4),%CTSS20s(1))=%CTSS20d(24)
 g %0CBk1
%0CBdun 
 q
%0Eo n %i,icol,ir
 f icol=0:1:8 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTSuperSet.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Eo
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("SUPTS",%mmmsqld(2)))
 e  g %0GBdun
 s %mmmsqld(10)=$$%getlock^User.CTSuperSet.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("SUPTS",%mmmsqld(2)))
 e  g %0GCdun
 k %data
 f icol=0:1:8 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTSuperSet.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTSuperSet.T1(%mmmsqld(2)) g %0Gc
%0GCdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTSuperSet.T1(%mmmsqld(2)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTSuperSet.T1(%mmmsqld(2)) g %0Gc
%0Io n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Ierr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("SUPTS",%mmmsqld(1)))
 e  g %0IBdun
 s %mmmsqld(9)=$$%getlock^User.CTSuperSet.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Ic
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("SUPTS",%mmmsqld(1)))
 e  g %0ICdun
 d %delete^User.CTSuperSet.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTSuperSet.T1(%mmmsqld(1)) g %0Ic
%0ICdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTSuperSet.T1(%mmmsqld(1)) g:SQLCODE<0 %0Ic
%0IBdun 
%0IAdun 
%0Ic s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Ierr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTSuperSet.T1(%mmmsqld(1)) g %0Ic
%0Mo d %CTSS10f q:SQLCODE'=0
 s PLIST(1)=%CTSS10d(1),PLIST(2)=%CTSS10d(1),PLIST(3)=%CTSS10d(2),PLIST(4)=%CTSS10d(3),PLIST(5)=%CTSS10d(4),PLIST(6)=%CTSS10d(5),PLIST(7)=%CTSS10d(6),PLIST(8)=%CTSS10d(7)
 q
%0No d %CTSS20f q:SQLCODE'=0
 s PLIST(1)=%CTSS20d(1),PLIST(2)=%CTSS20d(1),PLIST(3)=%CTSS20d(2),PLIST(4)=%CTSS20d(3),PLIST(5)=%CTSS20d(4),PLIST(6)=%CTSS20d(5),PLIST(7)=%CTSS20d(6),PLIST(8)=%CTSS20d(7)
 q
%0Qo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Qerr" s %mmmsqld(11)=0,%mmmsqld(12)=""
 s %mmmsqld(9)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(9)
 i PLIST(2)'="",$d(^TTAB("SUPTS",PLIST(2)))
 e  g %0QBdun
 s %mmmsqld(17)=$g(^TTAB("SUPTS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(17),"\",1) s PLIST(4)=$p(%mmmsqld(17),"\",2) s PLIST(5)=$p(%mmmsqld(17),"\",3) s PLIST(6)=$p(%mmmsqld(17),"\",4) s PLIST(7)=$p(%mmmsqld(17),"\",5) s PLIST(8)=$p(%mmmsqld(17),"\",6)
 g:$zu(115,2)=0 %0QBuncommitted i $zu(115,2)=1 l +^TTAB("SUPTS",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(11)=1,%mmmsqld(12)=$name(^TTAB("SUPTS",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_SuperSet for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("SUPTS",PLIST(2)))
 e  g %0QCdun
 s %mmmsqld(22)=$g(^TTAB("SUPTS",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(22),"\",1) s PLIST(4)=$p(%mmmsqld(22),"\",2) s PLIST(5)=$p(%mmmsqld(22),"\",3) s PLIST(6)=$p(%mmmsqld(22),"\",4) s PLIST(7)=$p(%mmmsqld(22),"\",5) s PLIST(8)=$p(%mmmsqld(22),"\",6)
%0QBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Qc
%0QCdun i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) s %mmmsqld(11)=0 }
%0QBdun 
%0QAdun 
%0Qc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(11))=1 { l -@%mmmsqld(12) } q
%0Qerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Qc
%0So n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Serr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(code)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^TTAB("SUPTS",%mmmsqld(3)))
 e  g %0SBdun
 s %mmmsqld(12)=$g(^TTAB("SUPTS",%mmmsqld(3)))
 s site=$p(%mmmsqld(12),"\",4)
 g:$zu(115,2)=0 %0SBuncommitted i $zu(115,2)=1 l +^TTAB("SUPTS",$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^TTAB("SUPTS",$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_SuperSet for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^TTAB("SUPTS",%mmmsqld(3)))
 e  g %0SCdun
 s %mmmsqld(17)=$g(^TTAB("SUPTS",%mmmsqld(3)))
 s site=$p(%mmmsqld(17),"\",4)
%0SBuncommitted ;
 s SQLCODE=0 g %0Sc
%0SCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0SBdun 
%0SAdun 
%0Sc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Serr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Sc
]]></Routine>
</Export>
