<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBSTC" type="INT" languagemode="0" generated="1"><![CDATA[
LVBSTC ; IG 30/4/98 ;MVB Control code access for ST_StorageContainer
 ;
 ; supported calls:
 ;
 ; $$select^LVBSTC(ROWID,skip)
 ; $$open^LVBSTC(start,end,skip,specimen,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBSTC(start,end,skip,specimen,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBSTC(start,end,skip,specimen,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBSTC(start,end,skip,specimen,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBSTC()
 ; $$insert^LVBSTC()
 ; $$update^LVBSTC(ROWID)
 ; $$delete^LVBSTC(ROWID,Comments)
 ; $$getall^LVBSTC(start,end,specimen)
 ;
  ;---&SQL(DECLARE STC1 CURSOR FOR SELECT * FROM ST_StorageContainer)
   ;--- ** SQL PUBLIC Variables: SQLCODE
  ;---&SQL(DECLARE STC2 CURSOR FOR SELECT * FROM ST_StorageContainer
   ;---         WHERE ((STC_DateEnd NOT> :end) AND (STC_DateEnd IS NOT NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, end
  ;---&SQL(DECLARE STC3 CURSOR FOR SELECT * FROM ST_StorageContainer
   ;---         WHERE ((STC_DateStart NOT< :start) AND (STC_DateStart IS NOT NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, start
  ;---&SQL(DECLARE STC4 CURSOR FOR SELECT * FROM ST_StorageContainer
   ;---         WHERE ((STC_DateStart NOT< :start) AND (STC_DateStart IS NOT NULL))
   ;---         AND ((STC_DateEnd NOT> :end) AND (STC_DateEnd IS NOT NULL)))
   ;--- ** SQL PUBLIC Variables: SQLCODE, end, start
 ;
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO ST_StorageContainer VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Io
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) S ROWID=$G(ROWID) d pre("Y") 
  ;---&SQL(UPDATE ST_StorageContainer VALUES :PLIST() WHERE STC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Ko
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM ST_StorageContainer WHERE STC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Mo
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(start,end,skip,specimen,p4,p5,p6,p7,p8,p9) s start=$g(start),end=$g(end),skip=$g(skip),specimen=$g(specimen)
 d
 . ;---i $l(start),$l(end) &SQL(OPEN STC4) q
  . ;--- ** SQL PUBLIC Variables: SQLCODE
 .i $l(start),$l(end) Do %STC40o q
 . ;---e  i $l(start) &SQL(OPEN STC3) q
  . ;--- ** SQL PUBLIC Variables: SQLCODE
 .e  i $l(start) Do %STC30o q
 . ;---e  i $l(end) &SQL(OPEN STC2) q
  . ;--- ** SQL PUBLIC Variables: SQLCODE
 .e  i $l(end) Do %STC20o q
 . ;---e  &SQL(OPEN STC1) q
  . ;--- ** SQL PUBLIC Variables: SQLCODE
 .e  Do %STC10o q
 Q 0
 ;
 ; Fetch the data
fetch(start,end,skip,specimen,p4,p5,p6,p7,p8,p9) K PLIST s start=$g(start),end=$g(end),skip=$g(skip),specimen=$g(specimen)
 d
 . ;---i $l(start),$l(end) &SQL(FETCH STC4 INTO :PLIST()) q
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .i $l(start),$l(end) Do %0So q
 . ;---e  i $l(start) &SQL(FETCH STC3 INTO :PLIST()) q
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .e  i $l(start) Do %0To q
 . ;---e  i $l(end) &SQL(FETCH STC2 INTO :PLIST()) q
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .e  i $l(end) Do %0Uo q
 . ;---e  &SQL(FETCH STC1 INTO :PLIST()) q
  . ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 .e  Do %0Vo q
 S PLIST=$o(PLIST(""),-1) 
 I 'SQLCODE D adjust 
 q SQLCODE 
 ; Fetch all data
fetchbuffer(start,end,skip,specimen,p4,p5,p6,p7,p8,p9) k ^TMP($zn,$j)
 s start=$g(start),end=$g(end),skip=$g(skip),specimen=$g(specimen)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(start,end,skip,specimen) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(start,end,skip,specimen,p4,p5,p6,p7,p8,p9) N (start,end,skip,specimen,PLIST)
 s start=$g(start),end=$g(end),skip=$g(skip),specimen=$g(specimen) K ^TMP($zn,$j)
 i $$open(start,end,skip,specimen)
 f cnt=1:1 Q:$$fetch(start,end,skip,specimen)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE STC4) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %STC40c 
  ;---&SQL(CLOSE STC3) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %STC30c 
  ;---&SQL(CLOSE STC2) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %STC20c 
  ;---&SQL(CLOSE STC1) 
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %STC10c 
 q 0
 ;
 ; select data by code
select(ROWID,skip) K PLIST S ROWID=$G(ROWID),skip=$g(skip)
  ;---&SQL(SELECT * INTO :PLIST() FROM ST_StorageContainer WHERE STC_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %00o
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ;
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 q
 ;
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 i $g(skip)="Y" q
 ;
 I $G(PLIST(2))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSTC(plist(2),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(2)=X K plist
 I $G(PLIST(5))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSTP(plist(5),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(5)=X K plist
 I $G(PLIST(6))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTSPE(plist(6),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(6)=X K plist
 Q
getall(start,end,specimen) N (start,end,specimen,PLIST) K ^TMP($ZN,$J) s start=$g(start),end=$g(end),specimen=$g(specimen)
 I $$open(start,end,"Y",specimen)
 F cnt=1:1 Q:$$fetch(start,end,"Y",specimen)  D
 .s str="" f j=1:1:PLIST s $p(str,$c(28),j)=PLIST(j)
 .S ^TMP($ZN,$J,cnt)=$p(PLIST(1),$c(1))_$c(2)_$P(PLIST(3),$c(1))_$c(2)_$P(PLIST(2),$c(1))_$c(2)_str
 I $$close()
 K PLIST M PLIST=^TMP($ZN,$J)
 S PLIST=$o(PLIST(""),-1)
 K ^TMP($ZN,$J)
 Q 0
 ;
 q
%STC10o s $zt="%STC10E" s SQLCODE=$s($g(%STC10c):-101,1:0) q:SQLCODE'=0  s %STC10d(8)=0 s %STC10d(9)=0,%STC10d(10)=""
 s %STC10c=1 q
%STC10E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %STC10c,%STC10d,%STC10E,%STC10l,%STC10n,%STC10R,%STC10Z q
%0Afirst 
 ; asl MOD# 2
 s %STC10d(1)=""
%0ABk1 s %STC10d(1)=$o(^TTST(%STC10d(1)))
 i %STC10d(1)="" g %0ABdun
 s %STC10d(13)=$g(^TTST(%STC10d(1)))
 s %STC10d(2)=$p(%STC10d(13),"\",1) s %STC10d(3)=$p(%STC10d(13),"\",2) s %STC10d(4)=$p(%STC10d(13),"\",3) s %STC10d(5)=$p(%STC10d(13),"\",4)
 s %STC10d(6)=$$CT007^at619($g(%STC10d(1)))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^TTST($p(%STC10d(1),"||",1))#"S":$zu(115,4) i $t { s %STC10d(9)=1,%STC10d(10)=$name(^TTST($p(%STC10d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainer for RowID value: "_%STC10d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 i %STC10d(1)'="",$d(^TTST(%STC10d(1)))
 e  g %0ACdun
 s %STC10d(16)=$g(^TTST(%STC10d(1)))
 s %STC10d(2)=$p(%STC10d(16),"\",1) s %STC10d(3)=$p(%STC10d(16),"\",2) s %STC10d(4)=$p(%STC10d(16),"\",3) s %STC10d(5)=$p(%STC10d(16),"\",4)
 s %STC10d(6)=$$CT007^at619($g(%STC10d(1)))
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %STC10d(8)=%STC10d(8)+1,%ROWCOUNT=%STC10d(8),%ROWID=%STC10d(1),%STC10c=10 q
%STC10f i '$g(%STC10c) { s SQLCODE=-102 q  } i %STC10c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%STC10d(8))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%STC10d(8),%STC10c=100 q  } g %0Afirst:%STC10c=1
%0ACdun i $zu(115,2)=1,$g(%STC10d(9))=1 { l -@%STC10d(10) s %STC10d(9)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%STC10d(8),SQLCODE=100,%STC10c=100 q
%STC10c i '$g(%STC10c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%STC10d(8)),1:0)
 i $zu(115,2)=1,$g(%STC10d(9))=1 { l -@%STC10d(10) } k %STC10c,%STC10d,%STC10E,%STC10l,%STC10n,%STC10R,%STC10Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %STC10c=100 q
%STC20o s $zt="%STC20E" s SQLCODE=$s($g(%STC20c):-101,1:0) q:SQLCODE'=0  s %STC20d(11)=0 s %STC20d(12)=0,%STC20d(13)=""
 s %STC20d(7)=$g(end)
 s %STC20c=1 q
%STC20E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %STC20c,%STC20d,%STC20E,%STC20l,%STC20n,%STC20R,%STC20Z q
%0Cfirst 
 ; asl MOD# 2
 s %STC20d(1)=""
%0CBk1 s %STC20d(1)=$o(^TTST(%STC20d(1)))
 i %STC20d(1)="" g %0CBdun
 s %STC20d(16)=$g(^TTST(%STC20d(1)))
 s %STC20d(3)=$p(%STC20d(16),"\",2)
 g:'(%STC20d(3)']]%STC20d(7)) %0CBk1
 g:'(%STC20d(3)'="") %0CBk1
 s %STC20d(2)=$p(%STC20d(16),"\",1) s %STC20d(4)=$p(%STC20d(16),"\",3) s %STC20d(5)=$p(%STC20d(16),"\",4)
 s %STC20d(6)=$$CT007^at619($g(%STC20d(1)))
 g:$zu(115,2)=0 %0CBuncommitted i $zu(115,2)=1 l +^TTST($p(%STC20d(1),"||",1))#"S":$zu(115,4) i $t { s %STC20d(12)=1,%STC20d(13)=$name(^TTST($p(%STC20d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainer for RowID value: "_%STC20d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %STC20d(9)=$lb(""_%STC20d(3))
 i %STC20d(1)'="",$d(^TTST(%STC20d(1)))
 e  g %0CCdun
 s %STC20d(19)=$g(^TTST(%STC20d(1)))
 s %STC20d(2)=$p(%STC20d(19),"\",1) s %STC20d(3)=$p(%STC20d(19),"\",2) s %STC20d(4)=$p(%STC20d(19),"\",3) s %STC20d(5)=$p(%STC20d(19),"\",4)
 s %STC20d(6)=$$CT007^at619($g(%STC20d(1)))
 s %STC20d(10)=$lb(""_%STC20d(3))
 g:%STC20d(9)'=%STC20d(10) %0CCdun
%0CBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %STC20d(11)=%STC20d(11)+1,%ROWCOUNT=%STC20d(11),%ROWID=%STC20d(1),%STC20c=10 q
%STC20f i '$g(%STC20c) { s SQLCODE=-102 q  } i %STC20c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Cerr" i $d(%0CacheRowLimit)#2,$g(%STC20d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%STC20d(11),%STC20c=100 q  } g %0Cfirst:%STC20c=1
%0CCdun i $zu(115,2)=1,$g(%STC20d(12))=1 { l -@%STC20d(13) s %STC20d(12)=0 }
 g %0CBk1
%0CBdun 
%0CAdun 
 s %ROWCOUNT=%STC20d(11),SQLCODE=100,%STC20c=100 q
%STC20c i '$g(%STC20c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%STC20d(11)),1:0)
 i $zu(115,2)=1,$g(%STC20d(12))=1 { l -@%STC20d(13) } k %STC20c,%STC20d,%STC20E,%STC20l,%STC20n,%STC20R,%STC20Z s SQLCODE=0 q
%0Cerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %STC20c=100 q
%STC30o s $zt="%STC30E" s SQLCODE=$s($g(%STC30c):-101,1:0) q:SQLCODE'=0  s %STC30d(11)=0 s %STC30d(12)=0,%STC30d(13)=""
 s %STC30d(7)=$g(start)
 s %STC30c=1 q
%STC30E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %STC30c,%STC30d,%STC30E,%STC30l,%STC30n,%STC30R,%STC30Z q
%0Efirst 
 g:'(%STC30d(7)'="") %0EAdun
 ; asl MOD# 2
 s %STC30d(1)=""
%0EBk1 s %STC30d(1)=$o(^TTST(%STC30d(1)))
 i %STC30d(1)="" g %0EBdun
 s %STC30d(16)=$g(^TTST(%STC30d(1)))
 s %STC30d(2)=$p(%STC30d(16),"\",1)
 g:'(%STC30d(7)']]%STC30d(2)) %0EBk1
 g:'(%STC30d(2)'="") %0EBk1
 s %STC30d(3)=$p(%STC30d(16),"\",2) s %STC30d(4)=$p(%STC30d(16),"\",3) s %STC30d(5)=$p(%STC30d(16),"\",4)
 s %STC30d(6)=$$CT007^at619($g(%STC30d(1)))
 g:$zu(115,2)=0 %0EBuncommitted i $zu(115,2)=1 l +^TTST($p(%STC30d(1),"||",1))#"S":$zu(115,4) i $t { s %STC30d(12)=1,%STC30d(13)=$name(^TTST($p(%STC30d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainer for RowID value: "_%STC30d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %STC30d(9)=$lb(""_%STC30d(2))
 i %STC30d(1)'="",$d(^TTST(%STC30d(1)))
 e  g %0ECdun
 s %STC30d(19)=$g(^TTST(%STC30d(1)))
 s %STC30d(2)=$p(%STC30d(19),"\",1) s %STC30d(3)=$p(%STC30d(19),"\",2) s %STC30d(4)=$p(%STC30d(19),"\",3) s %STC30d(5)=$p(%STC30d(19),"\",4)
 s %STC30d(6)=$$CT007^at619($g(%STC30d(1)))
 s %STC30d(10)=$lb(""_%STC30d(2))
 g:%STC30d(9)'=%STC30d(10) %0ECdun
%0EBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %STC30d(11)=%STC30d(11)+1,%ROWCOUNT=%STC30d(11),%ROWID=%STC30d(1),%STC30c=10 q
%STC30f i '$g(%STC30c) { s SQLCODE=-102 q  } i %STC30c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Eerr" i $d(%0CacheRowLimit)#2,$g(%STC30d(11))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%STC30d(11),%STC30c=100 q  } g %0Efirst:%STC30c=1
%0ECdun i $zu(115,2)=1,$g(%STC30d(12))=1 { l -@%STC30d(13) s %STC30d(12)=0 }
 g %0EBk1
%0EBdun 
%0EAdun 
 s %ROWCOUNT=%STC30d(11),SQLCODE=100,%STC30c=100 q
%STC30c i '$g(%STC30c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%STC30d(11)),1:0)
 i $zu(115,2)=1,$g(%STC30d(12))=1 { l -@%STC30d(13) } k %STC30c,%STC30d,%STC30E,%STC30l,%STC30n,%STC30R,%STC30Z s SQLCODE=0 q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %STC30c=100 q
%STC40o s $zt="%STC40E" s SQLCODE=$s($g(%STC40c):-101,1:0) q:SQLCODE'=0  s %STC40d(12)=0 s %STC40d(13)=0,%STC40d(14)=""
 s %STC40d(7)=$g(start),%STC40d(8)=$g(end)
 s %STC40c=1 q
%STC40E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %STC40c,%STC40d,%STC40E,%STC40l,%STC40n,%STC40R,%STC40Z q
%0Gfirst 
 g:'(%STC40d(7)'="") %0GAdun
 ; asl MOD# 2
 s %STC40d(1)=""
%0GBk1 s %STC40d(1)=$o(^TTST(%STC40d(1)))
 i %STC40d(1)="" g %0GBdun
 s %STC40d(17)=$g(^TTST(%STC40d(1)))
 s %STC40d(2)=$p(%STC40d(17),"\",1)
 g:'(%STC40d(7)']]%STC40d(2)) %0GBk1
 g:'(%STC40d(2)'="") %0GBk1
 s %STC40d(3)=$p(%STC40d(17),"\",2)
 g:'(%STC40d(3)']]%STC40d(8)) %0GBk1
 g:'(%STC40d(3)'="") %0GBk1
 s %STC40d(4)=$p(%STC40d(17),"\",3) s %STC40d(5)=$p(%STC40d(17),"\",4)
 s %STC40d(6)=$$CT007^at619($g(%STC40d(1)))
 g:$zu(115,2)=0 %0GBuncommitted i $zu(115,2)=1 l +^TTST($p(%STC40d(1),"||",1))#"S":$zu(115,4) i $t { s %STC40d(13)=1,%STC40d(14)=$name(^TTST($p(%STC40d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainer for RowID value: "_%STC40d(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %STC40d(10)=$lb(""_%STC40d(3),""_%STC40d(2))
 i %STC40d(1)'="",$d(^TTST(%STC40d(1)))
 e  g %0GCdun
 s %STC40d(20)=$g(^TTST(%STC40d(1)))
 s %STC40d(2)=$p(%STC40d(20),"\",1) s %STC40d(3)=$p(%STC40d(20),"\",2) s %STC40d(4)=$p(%STC40d(20),"\",3) s %STC40d(5)=$p(%STC40d(20),"\",4)
 s %STC40d(6)=$$CT007^at619($g(%STC40d(1)))
 s %STC40d(11)=$lb(""_%STC40d(3),""_%STC40d(2))
 g:%STC40d(10)'=%STC40d(11) %0GCdun
%0GBuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %STC40d(12)=%STC40d(12)+1,%ROWCOUNT=%STC40d(12),%ROWID=%STC40d(1),%STC40c=10 q
%STC40f i '$g(%STC40c) { s SQLCODE=-102 q  } i %STC40c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Gerr" i $d(%0CacheRowLimit)#2,$g(%STC40d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%STC40d(12),%STC40c=100 q  } g %0Gfirst:%STC40c=1
%0GCdun i $zu(115,2)=1,$g(%STC40d(13))=1 { l -@%STC40d(14) s %STC40d(13)=0 }
 g %0GBk1
%0GBdun 
%0GAdun 
 s %ROWCOUNT=%STC40d(12),SQLCODE=100,%STC40c=100 q
%STC40c i '$g(%STC40c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%STC40d(12)),1:0)
 i $zu(115,2)=1,$g(%STC40d(13))=1 { l -@%STC40d(14) } k %STC40c,%STC40d,%STC40E,%STC40l,%STC40n,%STC40R,%STC40Z s SQLCODE=0 q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %STC40c=100 q
%0Io n %i,icol,ir
 f icol=0:1:7 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.STStorageContainer.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Io
%0Ko n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Kerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(ROWID)
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTST(%mmmsqld(2)))
 e  g %0KBdun
 s %mmmsqld(8)=$$%getlock^User.STStorageContainer.T1(%mmmsqld(2)) i '%mmmsqld(8) s SQLCODE=-110 g %0Kc
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTST(%mmmsqld(2)))
 e  g %0KCdun
 k %data
 f icol=0:1:7 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.STStorageContainer.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(8)=1 %ReleaseLock^User.STStorageContainer.T1(%mmmsqld(2)) g %0Kc
%0KCdun 
 d:%mmmsqld(8)=1 %ReleaseLock^User.STStorageContainer.T1(%mmmsqld(2)) g:SQLCODE<0 %0Kc
%0KBdun 
%0KAdun 
%0Kc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Kerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(8))=1 %ReleaseLock^User.STStorageContainer.T1(%mmmsqld(2)) g %0Kc
%0Mo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Merr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTST(%mmmsqld(1)))
 e  g %0MBdun
 s %mmmsqld(7)=$$%getlock^User.STStorageContainer.T1(%mmmsqld(1)) i '%mmmsqld(7) s SQLCODE=-110 g %0Mc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTST(%mmmsqld(1)))
 e  g %0MCdun
 d %delete^User.STStorageContainer.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(7)=1 %ReleaseLock^User.STStorageContainer.T1(%mmmsqld(1)) g %0Mc
%0MCdun 
 d:%mmmsqld(7)=1 %ReleaseLock^User.STStorageContainer.T1(%mmmsqld(1)) g:SQLCODE<0 %0Mc
%0MBdun 
%0MAdun 
%0Mc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Merr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(7))=1 %ReleaseLock^User.STStorageContainer.T1(%mmmsqld(1)) g %0Mc
%0So d %STC40f q:SQLCODE'=0
 s PLIST(1)=%STC40d(1),PLIST(2)=%STC40d(1),PLIST(3)=%STC40d(2),PLIST(4)=%STC40d(3),PLIST(5)=%STC40d(4),PLIST(6)=%STC40d(5),PLIST(7)=%STC40d(6)
 q
%0To d %STC30f q:SQLCODE'=0
 s PLIST(1)=%STC30d(1),PLIST(2)=%STC30d(1),PLIST(3)=%STC30d(2),PLIST(4)=%STC30d(3),PLIST(5)=%STC30d(4),PLIST(6)=%STC30d(5),PLIST(7)=%STC30d(6)
 q
%0Uo d %STC20f q:SQLCODE'=0
 s PLIST(1)=%STC20d(1),PLIST(2)=%STC20d(1),PLIST(3)=%STC20d(2),PLIST(4)=%STC20d(3),PLIST(5)=%STC20d(4),PLIST(6)=%STC20d(5),PLIST(7)=%STC20d(6)
 q
%0Vo d %STC10f q:SQLCODE'=0
 s PLIST(1)=%STC10d(1),PLIST(2)=%STC10d(1),PLIST(3)=%STC10d(2),PLIST(4)=%STC10d(3),PLIST(5)=%STC10d(4),PLIST(6)=%STC10d(5),PLIST(7)=%STC10d(6)
 q
%00o n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%00err" s %mmmsqld(10)=0,%mmmsqld(11)=""
 s %mmmsqld(8)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(8)
 i PLIST(2)'="",$d(^TTST(PLIST(2)))
 e  g %00Bdun
 s %mmmsqld(14)=$g(^TTST(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(14),"\",1) s PLIST(4)=$p(%mmmsqld(14),"\",2) s PLIST(5)=$p(%mmmsqld(14),"\",3) s PLIST(6)=$p(%mmmsqld(14),"\",4)
 s PLIST(7)=$$CT007^at619($g(PLIST(2)))
 g:$zu(115,2)=0 %00Buncommitted i $zu(115,2)=1 l +^TTST($p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(10)=1,%mmmsqld(11)=$name(^TTST($p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.ST_StorageContainer for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTST(PLIST(2)))
 e  g %00Cdun
 s %mmmsqld(17)=$g(^TTST(PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(17),"\",1) s PLIST(4)=$p(%mmmsqld(17),"\",2) s PLIST(5)=$p(%mmmsqld(17),"\",3) s PLIST(6)=$p(%mmmsqld(17),"\",4)
 s PLIST(7)=$$CT007^at619($g(PLIST(2)))
%00Buncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %00c
%00Cdun i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) s %mmmsqld(10)=0 }
%00Bdun 
%00Adun 
%00c s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(10))=1 { l -@%mmmsqld(11) } q
%00err s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %00c
]]></Routine>
</Export>
