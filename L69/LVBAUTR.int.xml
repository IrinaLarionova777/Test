<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBAUTR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBAUTR ; IG 29/4/98 ; LVB Control data access for AUTR AU_AuditableTablesRecords
 ;
 ; supported calls:
 ;
 ; $$insert^LVBAUTR(par)
 ; $$select^LVBAUTR(ROWID,skip)
 ; $$open^LVBAUTR(par,skip,text,class,field,p5,p6,p7,p8,p9)
 ; $$fetch^LVBAUTR(par,skip,text,class,field,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBAUTR(par,skip,text,class,field,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBAUTR(par,skip,text,class,field,p5,p6,p7,p8,p9)
 ; $$close^LVBAUTR()
 ; $$getallField^LVBAUTR(class)
 ; $$getallClass^LVBAUTR(class)
 ;
  ;---&sql(DECLARE AUTR CURSOR FOR SELECT * FROM AU_AuditableTablesRecords
   ;---         WHERE AUTR_ParRef = :par
   ;---         ORDER BY AUTR_OrderNumber Desc)
   ;--- ** SQL PUBLIC Variables: SQLCODE, par
getallField(class) s class=$g(class) n (class,PLIST)
 q $$fieldList^SSUTIL4(class)
getallClass(class) s class=$g(class) n (class,PLIST) s list=class
 s x="" f  s x=$o(^AUDIT(x)) q:x=""  i $p(^(x),"\")=class s list=list_$s($l(list):" ",1:"")_x
 i $l(list) s list=" "_list_" "
 q $$tableList^SSUTIL4(list)
 ;
open(par,skip,text,class,field,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip),text=$$UPPER^SSUTIL4($g(text)),class=$g(class),field=$g(field)
  ;---&SQL(OPEN AUTR)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %AUTR0o
 q 0
 ;
fetch(par,skip,text,class,field,p5,p6,p7,p8,p9) s par=$g(par),skip=$g(skip),text=$$UPPER^SSUTIL4($g(text)),class=$g(class),field=$g(field) k PLIST 
  ;---&SQL(FETCH AUTR INTO :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Do
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE,$l(text) d  i SQLCODE g fetch+1
 .i $l(class),class'=PLIST(10) s SQLCODE=100 q
 .i $l(field) s SQLCODE=100 d  q
 ..i $$UPPER^SSUTIL4($p(PLIST(3),$c(27),field))[text s SQLCODE=0
 ..i $$UPPER^SSUTIL4($p(PLIST(4),$c(27),field))[text s SQLCODE=0
 .s SQLCODE=100
 .i $$UPPER^SSUTIL4(PLIST(3))[text s SQLCODE=0
 .i $$UPPER^SSUTIL4(PLIST(4))[text s SQLCODE=0
 i 'SQLCODE d adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(par,skip,text,class,field,p5,p6,p7,p8,p9) k ^TMP($zn,$j) s par=$g(par),skip=$g(skip),text=$$UPPER^SSUTIL4($g(text)),class=$g(class),field=$g(field)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(par,skip,text,class,field) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(par,skip,text,class,field,p5,p6,p7,p8,p9) N (par,skip,text,class,field,PLIST)
 s par=$g(par),skip=$g(skip),text=$$UPPER^SSUTIL4($g(text)),class=$g(class),field=$g(field) K ^TMP($zn,$j)
 i $$open(par,skip,text,class,field)
 f cnt=1:1 Q:$$fetch(par,skip,text,class,field)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
close()  ;---&SQL(CLOSE AUTR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %AUTR0c
 q 0
 ;
select(RowID,skip) S RowID=$G(RowID),skip=$g(skip) k PLIST
  ;---&sql( SELECT * INTO :PLIST() FROM AU_AuditableTablesRecords WHERE AUTR_RowID=:RowID)
   ;--- ** SQL PUBLIC Variables: PLIST, RowID, SQLCODE
 Do %0Fo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE d adjust
 q SQLCODE
 ;
insert(par) d pre("N") s PLIST(0)=$g(par) K PLIST(1) s PLIST(5)=+$h,PLIST(6)=$p($h,",",2),PLIST(7)=$$user^MVBSSUSR()
 s PLIST(2)=$o(^AUDIT(par,""),-1)+1
  ;---&sql(INSERT INTO AU_AuditableTablesRecords VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Ho
 I 'SQLCODE q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
pre(xUpdate) d PreSQL^SSUTIL4("8","11")
 q
 ; Adjust certain fields
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("8")
 i $g(skip)="Y" q
 I $G(PLIST(7))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$selrow^MVBSSUSR(plist(7),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(7)=X K plist
 I $G(PLIST(10))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBAUT(plist(10),"Y")
 .S X="" I 'SQLCODE S X=PLIST(2)_$C(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(10)=X K plist
 q
%AUTR0o s $zt="%AUTR0E" s SQLCODE=$s($g(%AUTR0c):-101,1:0) q:SQLCODE'=0  s %AUTR0d(15)=0 s %AUTR0d(16)=0,%AUTR0d(17)=""
 s %AUTR0d(12)=$g(par)
 s %AUTR0c=1 q
%AUTR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %AUTR0c,%AUTR0d,%AUTR0E,%AUTR0l,%AUTR0n,%AUTR0R,%AUTR0Z q
%0Afirst 
 ; asl MOD# 2
 s %AUTR0d(1)=%AUTR0d(12)
 i %AUTR0d(1)="" g %0ABdun
 s %AUTR0d(3)=" "
%0ABk1 s %AUTR0d(3)=$zp(^AUDIT(%AUTR0d(1),%AUTR0d(3)))
 i %AUTR0d(3)="" g %0ABdun
 s %AUTR0d(21)=$g(^AUDIT(%AUTR0d(1),%AUTR0d(3)))
 s %AUTR0d(6)=$p(%AUTR0d(21),"\",3) s %AUTR0d(7)=$p(%AUTR0d(21),"\",4) s %AUTR0d(8)=$p(%AUTR0d(21),"\",5) s %AUTR0d(10)=$p(%AUTR0d(21),"\",2) s %AUTR0d(11)=$p(%AUTR0d(21),"\",1)
 s %AUTR0d(5)=$g(^AUDIT(%AUTR0d(1),%AUTR0d(3),"NEW"))
 s %AUTR0d(4)=$g(^AUDIT(%AUTR0d(1),%AUTR0d(3),"OLD"))
 s %AUTR0d(9)="" f %irep=1:1:$g(^AUDIT(%AUTR0d(1),%AUTR0d(3),"REM",0)) s $li(%AUTR0d(9),%irep)=$g(^(%irep))
 s %AUTR0d(2)=(%AUTR0d(1))_"||"_(%AUTR0d(3))
 g:$zu(115,2)=0 %0ABuncommitted i $zu(115,2)=1 l +^AUDIT($p(%AUTR0d(2),"||",1),$p(%AUTR0d(2),"||",2))#"S":$zu(115,4) i $t { s %AUTR0d(16)=1,%AUTR0d(17)=$name(^AUDIT($p(%AUTR0d(2),"||",1),$p(%AUTR0d(2),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.AU_AuditableTablesRecords for RowID value: "_%AUTR0d(2) ztrap "LOCK"  }
 ; asl MOD# 3
 s %AUTR0d(14)=$p(%AUTR0d(2),"||"),%AUTR0d(3)=$p(%AUTR0d(2),"||",2)
 i %AUTR0d(14)'="",%AUTR0d(3)'="",$d(^AUDIT(%AUTR0d(14),%AUTR0d(3)))
 e  g %0ACdun
 s %AUTR0d(25)=$g(^AUDIT(%AUTR0d(14),%AUTR0d(3)))
 s %AUTR0d(6)=$p(%AUTR0d(25),"\",3) s %AUTR0d(7)=$p(%AUTR0d(25),"\",4) s %AUTR0d(8)=$p(%AUTR0d(25),"\",5) s %AUTR0d(10)=$p(%AUTR0d(25),"\",2) s %AUTR0d(11)=$p(%AUTR0d(25),"\",1)
 s %AUTR0d(5)=$g(^AUDIT(%AUTR0d(14),%AUTR0d(3),"NEW"))
 s %AUTR0d(4)=$g(^AUDIT(%AUTR0d(14),%AUTR0d(3),"OLD"))
 s %AUTR0d(9)="" f %irep=1:1:$g(^AUDIT(%AUTR0d(14),%AUTR0d(3),"REM",0)) s $li(%AUTR0d(9),%irep)=$g(^(%irep))
 s %AUTR0d(1)=$p(%AUTR0d(2),"||")
%0ABuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %AUTR0d(15)=%AUTR0d(15)+1,%ROWCOUNT=%AUTR0d(15),%ROWID=%AUTR0d(2),%AUTR0c=10 q
%AUTR0f i '$g(%AUTR0c) { s SQLCODE=-102 q  } i %AUTR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%AUTR0d(15))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%AUTR0d(15),%AUTR0c=100 q  } g %0Afirst:%AUTR0c=1
%0ACdun i $zu(115,2)=1,$g(%AUTR0d(16))=1 { l -@%AUTR0d(17) s %AUTR0d(16)=0 }
 g %0ABk1
%0ABdun 
%0AAdun 
 s %ROWCOUNT=%AUTR0d(15),SQLCODE=100,%AUTR0c=100 q
%AUTR0c i '$g(%AUTR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%AUTR0d(15)),1:0)
 i $zu(115,2)=1,$g(%AUTR0d(16))=1 { l -@%AUTR0d(17) } k %AUTR0c,%AUTR0d,%AUTR0E,%AUTR0l,%AUTR0n,%AUTR0R,%AUTR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %AUTR0c=100 q
%0Do d %AUTR0f q:SQLCODE'=0
 s PLIST(0)=%AUTR0d(1),PLIST(1)=%AUTR0d(2),PLIST(2)=%AUTR0d(3),PLIST(3)=%AUTR0d(4),PLIST(4)=%AUTR0d(5),PLIST(5)=%AUTR0d(6),PLIST(6)=%AUTR0d(7),PLIST(7)=%AUTR0d(8),PLIST(8)=%AUTR0d(9),PLIST(9)=%AUTR0d(10),PLIST(10)=%AUTR0d(11)
 q
%0Fo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Ferr" s %mmmsqld(16)=0,%mmmsqld(17)=""
 s %mmmsqld(13)=$g(RowID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(1)=%mmmsqld(13)
 s %mmmsqld(15)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(15)'="",PLIST(2)'="",$d(^AUDIT(%mmmsqld(15),PLIST(2)))
 e  g %0FBdun
 s %mmmsqld(21)=$g(^AUDIT(%mmmsqld(15),PLIST(2)))
 s PLIST(5)=$p(%mmmsqld(21),"\",3) s PLIST(6)=$p(%mmmsqld(21),"\",4) s PLIST(7)=$p(%mmmsqld(21),"\",5) s PLIST(9)=$p(%mmmsqld(21),"\",2) s PLIST(10)=$p(%mmmsqld(21),"\",1)
 s PLIST(4)=$g(^AUDIT(%mmmsqld(15),PLIST(2),"NEW"))
 s PLIST(3)=$g(^AUDIT(%mmmsqld(15),PLIST(2),"OLD"))
 s PLIST(8)="" f %irep=1:1:$g(^AUDIT(%mmmsqld(15),PLIST(2),"REM",0)) s $li(PLIST(8),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||")
 g:$zu(115,2)=0 %0FBuncommitted i $zu(115,2)=1 l +^AUDIT($p(PLIST(1),"||",1),$p(PLIST(1),"||",2))#"S":$zu(115,4) i $t { s %mmmsqld(16)=1,%mmmsqld(17)=$name(^AUDIT($p(PLIST(1),"||",1),$p(PLIST(1),"||",2)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.AU_AuditableTablesRecords for RowID value: "_PLIST(1) ztrap "LOCK"  }
 ; asl MOD# 3
 s %mmmsqld(15)=$p(PLIST(1),"||"),PLIST(2)=$p(PLIST(1),"||",2)
 i %mmmsqld(15)'="",PLIST(2)'="",$d(^AUDIT(%mmmsqld(15),PLIST(2)))
 e  g %0FCdun
 s %mmmsqld(25)=$g(^AUDIT(%mmmsqld(15),PLIST(2)))
 s PLIST(5)=$p(%mmmsqld(25),"\",3) s PLIST(6)=$p(%mmmsqld(25),"\",4) s PLIST(7)=$p(%mmmsqld(25),"\",5) s PLIST(9)=$p(%mmmsqld(25),"\",2) s PLIST(10)=$p(%mmmsqld(25),"\",1)
 s PLIST(4)=$g(^AUDIT(%mmmsqld(15),PLIST(2),"NEW"))
 s PLIST(3)=$g(^AUDIT(%mmmsqld(15),PLIST(2),"OLD"))
 s PLIST(8)="" f %irep=1:1:$g(^AUDIT(%mmmsqld(15),PLIST(2),"REM",0)) s $li(PLIST(8),%irep)=$g(^(%irep))
 s PLIST(0)=$p(PLIST(1),"||")
%0FBuncommitted ;
 s SQLCODE=0 g %0Fc
%0FCdun i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) s %mmmsqld(16)=0 }
%0FBdun 
%0FAdun 
%0Fc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(16))=1 { l -@%mmmsqld(17) } q
%0Ferr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Fc
%0Ho n %i,icol,ir
 f icol=0:1:10 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.AUAuditableTablesRecords.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Ho
]]></Routine>
</Export>
