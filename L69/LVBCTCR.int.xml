<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="LVBCTCR" type="INT" languagemode="0" generated="1"><![CDATA[
LVBCTCR ; IG 29/4/98 ;MVB Control code access for CT_Courier
 ;
 ; supported calls:
 ;
 ; $$select^LVBCTCR(ROWID,skip)
 ; $$seldata^LVBCTCR(ROWID,data)
 ; $$open^LVBCTCR(skip,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetch^LVBCTCR(skip,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchbuffer^LVBCTCR(skip,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$fetchall^LVBCTCR(skip,user,p2,p3,p4,p5,p6,p7,p8,p9)
 ; $$close^LVBCTCR()
 ; $$insert^LVBCTCR()
 ; $$update^LVBCTCR(ROWID)
 ; $$delete^LVBCTCR(ROWID,Comments)
 ; $$getall^LVBCTCR(param,conf,user,Continue)
 ;
  ;---&SQL(DECLARE CTCR CURSOR FOR SELECT * FROM CT_Courier
   ;---         ORDER BY CTCR_DisplaySequence)
   ;--- ** SQL PUBLIC Variables: SQLCODE
 ;
FIX k ^TTABi("CR") s a="" f  s a=$o(^TTAB("CR",a)) q:a=""  d
 .i '$$select(a,"Y") s PLIST(11)=99999,PLIST(6)=$s(PLIST(6)="Y":"Y",1:"N"),err=$$update(a) i err w !,a," ",err," ",$G(%msg)_" "_$g(%mdiag(1))
 d ##class(User.CTCourier).%BuildIndices()
 q
 ; Insert the data
insert() K PLIST(1) d pre("N") 
  ;---&SQL(insert INTO CT_Courier VALUES :PLIST())
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Co
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ;
 ; Update the data
update(ROWID) D pre("Y")
  ;---&SQL(UPDATE CT_Courier VALUES :PLIST() WHERE CTCR_RowID=:PLIST(1))
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 Do %0Eo
 I 'SQLCODE Q $$select(%ROWID)
 q SQLCODE_$s('SQLCODE:"",SQLCODE'=100:" "_$g(%msg)_" "_$g(%mdiag(1)),1:"")
 ; Delete the data
delete(ROWID,Comments) s ROWID=$g(ROWID),^TMP("Comments",$j)=$g(Comments)
  ;---&SQL(DELETE FROM CT_Courier WHERE CTCR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: ROWID, SQLCODE
 Do %0Go
 k ^TMP("Comments",$j)
 Q SQLCODE
 ;
 ; Open the cursor
open(skip,user,p2,p3,p4,p5,p6,p7,p8,p9)  ;---s skip=$g(skip),user=$g(user) &SQL(OPEN CTCR)
  ;--- ** SQL PUBLIC Variables: SQLCODE
 s skip=$g(skip),user=$g(user) Do %CTCR0o
 Q 0
 ;
 ; Fetch the data
fetch(skip,user,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user) K PLIST
  ;---f  &SQL(FETCH CTCR INTO :PLIST())  q:SQLCODE  q:$$ValUser(user,$p(PLIST(9),$c(1)),$p(PLIST(5),$c(1)))'=60
   ;--- ** SQL PUBLIC Variables: PLIST, SQLCODE
 f  Do %0Jo  q:SQLCODE  q:$$ValUser(user,$p(PLIST(9),$c(1)),$p(PLIST(5),$c(1)))'=60
 S PLIST=$o(PLIST(""),-1)
 I 'SQLCODE D adjust
 q SQLCODE
 ; Fetch all data
fetchbuffer(skip,user,p2,p3,p4,p5,p6,p7,p8,p9) s skip=$g(skip),user=$g(user) k ^TMP($zn,$j)
 s max=$s($g(PLIST(1)):PLIST(1),1:100) i max>100 s max=100
 f xxx=1:1:max s SQLCODE=$$fetch(skip,user) q:SQLCODE  d
 .s cnt=$o(^TMP($zn,$j,""),-1)+1 f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 k PLIST m PLIST=^TMP($zn,$j) k ^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 q SQLCODE
fetchall(skip,user,p2,p3,p4,p5,p6,p7,p8,p9) N (skip,user,PLIST) s skip=$g(skip),user=$g(user) K ^TMP($zn,$j)
 i $$open(skip,user)
 f cnt=1:1 Q:$$fetch(skip,user)  s ^TMP($zn,$j,cnt)="" f j=1:1:PLIST s $p(^TMP($zn,$j,cnt),$c(28),j)=$g(PLIST(j))
 i $$close()
 k PLIST M PLIST=^TMP($zn,$j)
 s PLIST=$o(PLIST(""),-1)
 k ^TMP($zn,$j)
 q 0
 ;
 ; Close the cursor 
close()  ;---&SQL(CLOSE CTCR) 
  ;--- ** SQL PUBLIC Variables: SQLCODE
 Do %CTCR0c 
 q 0
 ;
 ; select data by code
select(ROWID,skip,user) K PLIST s skip=$g(skip),user=$g(user)
  ;---&SQL(SELECT * INTO :PLIST() FROM CT_Courier WHERE CTCR_RowID=:ROWID)
   ;--- ** SQL PUBLIC Variables: PLIST, ROWID, SQLCODE
 Do %0Lo
 s PLIST=$o(PLIST(""),-1)
 i 'SQLCODE D adjust
 q SQLCODE
 ; select data by code and field No
seldata(ROWID,data) n (ROWID,data) s ROWID=$g(ROWID),data=$g(data),result=""
 i $l(ROWID) d  q result
 .i data=5 s result=$p($g(^TTAB("CR",ROWID)),"\",3) q
 .i data=6 s result=$p($g(^TTAB("CR",ROWID)),"\",4) q
 .i data=8 s result=$p($g(^TTAB("CR",ROWID)),"\",6) q
 .i data=10 s result=$p($g(^TTAB("CR",ROWID)),"\",8) q
 .i '$$select(ROWID,"Y") s result=$g(PLIST(data))
 q result
 ; Pre-filing adjustments
pre(xUpdate) d PreSQL^SSUTIL4("","")
 S (PLIST(1),PLIST(2))=$$ALPHAUP^SSUTIL4(PLIST(2))
 i '$g(PLIST(11)) s PLIST(11)=99999
 q
 ; Post-filing adjustments
adjust N plist,I,J,SQLCODE,X d PostSQL^SSUTIL4("")
 f J=9 I $G(PLIST(J))'="" D
 .K plist M plist=PLIST K PLIST
 .S SQLCODE=$$select^LVBCTUSL(plist(J))
 .S X="" I 'SQLCODE S X=PLIST(2)_$c(1)_PLIST(3)
 .K PLIST M PLIST=plist S PLIST(J)=X K plist
 Q
 ;
getall(param,conf,user,Continue) n (param,conf,user,Continue,PLIST)
 s param=$g(param),conf=$g(conf),user=$g(user),Continue=$g(Continue)
 i Continue="" d
 .k ^TMP($zn,$j)
 . ; get number of test sets to print
 .i param="Y" d
 ..s cour="" f  s cour=$o(^TRPT("DR",cour)) q:cour=""  d
 ...s dh="" f  s dh=$o(^TRPT("DR",cour,dh)) q:dh=""  d
 ....s doc="" f  s doc=$o(^TRPT("DR",cour,dh,doc)) q:doc=""  d
 .....s ep="" f  s ep=$o(^TRPT("DR",cour,dh,doc,ep)) q:ep=""  s check(cour)=$g(check(cour))+1
 .
 .i $$open("Y",user)
 .s cnt=0 f  q:$$fetch("Y",user)  d
 ..i conf="Y",PLIST(5)'="Y" q
 ..s cnt=cnt+1,^TMP($zn,$j,cnt)=$p(PLIST(1),$c(1))_$c(2)_$p(PLIST(3),$c(1))_$c(2)_$p(PLIST(2),$c(1))_$c(2)_$g(check(PLIST(2)))_$c(29)_$$ValUser(user,$p(PLIST(9),$c(1)),$p(PLIST(5),$c(1)))_$c(29)_$g(PLIST(6))
 .i $$close()
 K PLIST s (sum,x)="" f cnt=1:1 s x=$o(^TMP($zn,$j,x)) q:x=""  q:(sum+$l(^(x)))>15000  s sum=sum+$l(^(x)),PLIST(cnt)=^(x) k ^(x)
 s PLIST=$o(PLIST(""),-1)
 q $s($d(^TMP($zn,$j)):0,1:100)
 ; check user - confidential run
ValUser(user,site,conf) n (user,site,conf) s user=$g(user),site=$g(site),conf=$g(conf),ok=0
 i $l(site) s ok=$$ValUser^LVBCTUSL(user,site)
 i $l(user),ok'=60 s SecurityType="" d
 .  ;---&sql(SELECT SSUSR_PracticeSecurityType INTO :SecurityType FROM SS_User WHERE SSUSR_RowId=:user)
  .  ;--- ** SQL PUBLIC Variables: SQLCODE, SecurityType, user
 . Do %0No
 .s SecurityType=$p(SecurityType,$c(1))
 .i '$l(SecurityType) s SecurityType=$p(^CF("LAB",1),"^",49)
 .i $l(SecurityType),SecurityType'=1 d
 ..  ;---&SQL(SELECT SSUSR_UserSite_DR,SSUSR_Supervisor INTO :x1,:x2 FROM SS_User WHERE SSUSR_RowID=:user)
  ..  ;--- ** SQL PUBLIC Variables: SQLCODE, user, x1, x2
 .. Do %0Po
 ..s x1=$p($g(x1),$c(1)),x2=$p($g(x2),$c(1))
 ..i $l(x1),x1'=site,ok<$s(SecurityType=3:60,SecurityType=2:50,1:0) s ok=$s(SecurityType=3:60,SecurityType=2:50,1:0)
 ..i x2'="Y",conf="Y",ok<$s(SecurityType=3:60,SecurityType=2:50,1:0) s ok=$s(SecurityType=3:60,SecurityType=2:50,1:0)
 q ok
%CTCR0o s $zt="%CTCR0E" s SQLCODE=$s($g(%CTCR0c):-101,1:0) q:SQLCODE'=0  s %CTCR0d(12)=0 s %CTCR0d(13)=0,%CTCR0d(14)=""
 s %CTCR0t(1)=$i(^||%sql.temp)
 s %CTCR0c=1 q
%CTCR0E s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) k %CTCR0c,%CTCR0d,%CTCR0E,%CTCR0l,%CTCR0n,%CTCR0R,%CTCR0s,%CTCR0t,%CTCR0Z q
%0Afirst 
 k ^||%sql.temp(%CTCR0t(1),0) s ^||%sql.temp(%CTCR0t(1),0)=$H_"^"_$J_"^"_$zu(67,11,$j)_"^"_$zu(67,12,$j)_"^"_$zu(67,15,$j)_"^"_$ZN_"^"_$zu(67,6,$j)
 i $sortbegin(^||%sql.temp(%CTCR0t(1),0))
 ; asl MOD# 3
 d %0ABMod
 i $sortend(^||%sql.temp(%CTCR0t(1),0))
 s %CTCR0s(10)=""
%0ACk1 s %CTCR0s(10)=$o(^||%sql.temp(%CTCR0t(1),0,%CTCR0s(10)))
 i %CTCR0s(10)="" g %0ACdun
 s %CTCR0d(10)=$s(%CTCR0s(10)=-1E14:"",1:%CTCR0s(10))
 s %CTCR0s(1)=""
%0ACk2 s %CTCR0s(1)=$o(^||%sql.temp(%CTCR0t(1),0,%CTCR0s(10),%CTCR0s(1)))
 i %CTCR0s(1)="" g %0ACk1
 s %CTCR0d(1)=$s(%CTCR0s(1)=-1E14:"",1:%CTCR0s(1))
 s %CTCR0d(22)=$g(^||%sql.temp(%CTCR0t(1),0,%CTCR0s(10),%CTCR0s(1)))
 s %CTCR0d(2)=$lg(%CTCR0d(22),5) s %CTCR0d(3)=$lg(%CTCR0d(22),4) s %CTCR0d(4)=$lg(%CTCR0d(22),1) s %CTCR0d(5)=$lg(%CTCR0d(22),3) s %CTCR0d(6)=$lg(%CTCR0d(22),6) s %CTCR0d(7)=$lg(%CTCR0d(22),8) s %CTCR0d(8)=$lg(%CTCR0d(22),7) s %CTCR0d(9)=$lg(%CTCR0d(22),2)
 g:$zu(115,2)=0 %0ACuncommitted i $zu(115,2)=1 l +^TTAB("CR",$p(%CTCR0d(1),"||",1))#"S":$zu(115,4) i $t { s %CTCR0d(13)=1,%CTCR0d(14)=$name(^TTAB("CR",$p(%CTCR0d(1),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Courier for RowID value: "_%CTCR0d(1) ztrap "LOCK"  }
 ; asl MOD# 4
 i %CTCR0d(1)'="",$d(^TTAB("CR",%CTCR0d(1)))
 e  g %0ADdun
 s %CTCR0d(27)=$g(^TTAB("CR",%CTCR0d(1)))
 s %CTCR0d(2)=$p(%CTCR0d(27),"\",1) s %CTCR0d(3)=$p(%CTCR0d(27),"\",2) s %CTCR0d(4)=$p(%CTCR0d(27),"\",3) s %CTCR0d(5)=$p(%CTCR0d(27),"\",4) s %CTCR0d(6)=$p(%CTCR0d(27),"\",5) s %CTCR0d(7)=$p(%CTCR0d(27),"\",6) s %CTCR0d(8)=$p(%CTCR0d(27),"\",7) s %CTCR0d(9)=$p(%CTCR0d(27),"\",8) s %CTCR0d(10)=$p(%CTCR0d(27),"\",9)
%0ACuncommitted ;
 s:$g(SQLCODE)'<0 SQLCODE=0 s %CTCR0d(12)=%CTCR0d(12)+1,%ROWCOUNT=%CTCR0d(12),%ROWID=%CTCR0d(1),%CTCR0c=10 q
%CTCR0f i '$g(%CTCR0c) { s SQLCODE=-102 q  } i %CTCR0c=100 { s SQLCODE=100 q  } s SQLCODE=0
 s $zt="%0Aerr" i $d(%0CacheRowLimit)#2,$g(%CTCR0d(12))'<%0CacheRowLimit { s SQLCODE=100,%ROWCOUNT=%CTCR0d(12),%CTCR0c=100 q  } g %0Afirst:%CTCR0c=1
%0ADdun i $zu(115,2)=1,$g(%CTCR0d(13))=1 { l -@%CTCR0d(14) s %CTCR0d(13)=0 }
 g %0ACk2
%0ACdun 
%0AAdun 
 s %ROWCOUNT=%CTCR0d(12),SQLCODE=100,%CTCR0c=100 q
%CTCR0c i '$g(%CTCR0c) { s SQLCODE=-102 q  } s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%CTCR0d(12)),1:0) f %CTCR0d(15)=1 { i $sortend(^||%sql.temp(%CTCR0t(%CTCR0d(15)),0),0) } k ^||%sql.temp(%CTCR0t(1))
 i $zu(115,2)=1,$g(%CTCR0d(13))=1 { l -@%CTCR0d(14) } k %CTCR0c,%CTCR0d,%CTCR0E,%CTCR0l,%CTCR0n,%CTCR0R,%CTCR0s,%CTCR0t,%CTCR0Z s SQLCODE=0 q
%0Aerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) s %CTCR0c=100
 f %CTCR0d(15)=1 i $sortend(^||%sql.temp(%CTCR0t(%CTCR0d(15)),0),0)
 q
%0ABMod ; asl MOD# 2
 s %CTCR0d(1)=""
%0ABk1 s %CTCR0d(1)=$o(^TTAB("CR",%CTCR0d(1)))
 i %CTCR0d(1)="" g %0ABdun
 s %CTCR0d(20)=$g(^TTAB("CR",%CTCR0d(1)))
 s %CTCR0d(2)=$p(%CTCR0d(20),"\",1) s %CTCR0d(3)=$p(%CTCR0d(20),"\",2) s %CTCR0d(4)=$p(%CTCR0d(20),"\",3) s %CTCR0d(5)=$p(%CTCR0d(20),"\",4) s %CTCR0d(6)=$p(%CTCR0d(20),"\",5) s %CTCR0d(7)=$p(%CTCR0d(20),"\",6) s %CTCR0d(8)=$p(%CTCR0d(20),"\",7) s %CTCR0d(9)=$p(%CTCR0d(20),"\",8) s %CTCR0d(10)=$p(%CTCR0d(20),"\",9)
 s %CTCR0s(10)=$s(%CTCR0d(10)'="":%CTCR0d(10),1:-1E14),%CTCR0s(1)=$s(%CTCR0d(1)'="":%CTCR0d(1),1:-1E14),%CTCR0d(21)="",$li(%CTCR0d(21),5)=%CTCR0d(2),$li(%CTCR0d(21),4)=%CTCR0d(3),$li(%CTCR0d(21),1)=%CTCR0d(4),$li(%CTCR0d(21),3)=%CTCR0d(5),$li(%CTCR0d(21),6)=%CTCR0d(6),$li(%CTCR0d(21),8)=%CTCR0d(7),$li(%CTCR0d(21),7)=%CTCR0d(8),$li(%CTCR0d(21),2)=%CTCR0d(9),^||%sql.temp(%CTCR0t(1),0,%CTCR0s(10),%CTCR0s(1))=%CTCR0d(21)
 g %0ABk1
%0ABdun 
 q
%0Co n %i,icol,ir
 f icol=0:1:11 i $d(PLIST(icol)) s %i(icol)=PLIST(icol)
 s %ROWID=$$%insert^User.CTCourier.T1(.%i,$c(0,0,0,0)),%ROWCOUNT='SQLCODE
 q  // From %0Co
%0Eo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Eerr" s %mmmsqld(4)=0 s %mmmsqld(5)=""
 s %mmmsqld(3)=$g(PLIST(1))
 n %data,icol,ir
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(2)=%mmmsqld(3)
 i %mmmsqld(2)'="",$d(^TTAB("CR",%mmmsqld(2)))
 e  g %0EBdun
 s %mmmsqld(10)=$$%getlock^User.CTCourier.T1(%mmmsqld(2)) i '%mmmsqld(10) s SQLCODE=-110 g %0Ec
 ; asl MOD# 3
 i %mmmsqld(2)'="",$d(^TTAB("CR",%mmmsqld(2)))
 e  g %0ECdun
 k %data
 f icol=0:1:11 i $d(PLIST(icol)) s %data(icol)=PLIST(icol)
 d %update^User.CTCourier.T1(%mmmsqld(2),$c(0,2,0,0),.%data,,'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(4))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(10)=1 %ReleaseLock^User.CTCourier.T1(%mmmsqld(2)) g %0Ec
%0ECdun 
 d:%mmmsqld(10)=1 %ReleaseLock^User.CTCourier.T1(%mmmsqld(2)) g:SQLCODE<0 %0Ec
%0EBdun 
%0EAdun 
%0Ec s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(4)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Eerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(10))=1 %ReleaseLock^User.CTCourier.T1(%mmmsqld(2)) g %0Ec
%0Go n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlTS,%mmmsqlTS2,%mmmsqlZ s $zt="%0Gerr" s %mmmsqld(3)=0 s %mmmsqld(4)=""
 s %mmmsqld(2)=$g(ROWID)
 s SQLCODE=100
 k:'$TLEVEL %0CacheLock If $zu(115,1)=2,'$TLEVEL { s %mmmsqlTS2=1 TSTART } If $zu(115,1) { s %mmmsqlTS=1 TSTART  }
 ; asl MOD# 2
 s %mmmsqld(1)=%mmmsqld(2)
 i %mmmsqld(1)'="",$d(^TTAB("CR",%mmmsqld(1)))
 e  g %0GBdun
 s %mmmsqld(9)=$$%getlock^User.CTCourier.T1(%mmmsqld(1)) i '%mmmsqld(9) s SQLCODE=-110 g %0Gc
 ; asl MOD# 3
 i %mmmsqld(1)'="",$d(^TTAB("CR",%mmmsqld(1)))
 e  g %0GCdun
 d %delete^User.CTCourier.T1(%mmmsqld(1),$c(0,2,0,0),'$g(%mmmsqlTS))
 i 'SQLCODE i $i(%mmmsqld(3))'<$g(%0CacheRowLimit,9223372036854775807) d:%mmmsqld(9)=1 %ReleaseLock^User.CTCourier.T1(%mmmsqld(1)) g %0Gc
%0GCdun 
 d:%mmmsqld(9)=1 %ReleaseLock^User.CTCourier.T1(%mmmsqld(1)) g:SQLCODE<0 %0Gc
%0GBdun 
%0GAdun 
%0Gc s %ROWCOUNT=$s($g(SQLCODE)'<0:+$g(%mmmsqld(3)),1:0)
 If $zu(115,1),$g(%mmmsqlTS) { TCOMMIT:SQLCODE'<0  TROLLBACK:SQLCODE<0 1 } TCOMMIT:SQLCODE=100&&(%ROWCOUNT=0)&&($g(%mmmsqlTS2))&&($zu(115,1)=2)  q
%0Gerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) d:$g(%mmmsqld(9))=1 %ReleaseLock^User.CTCourier.T1(%mmmsqld(1)) g %0Gc
%0Jo d %CTCR0f q:SQLCODE'=0
 s PLIST(1)=%CTCR0d(1),PLIST(2)=%CTCR0d(1),PLIST(3)=%CTCR0d(2),PLIST(4)=%CTCR0d(3),PLIST(5)=%CTCR0d(4),PLIST(6)=%CTCR0d(5),PLIST(7)=%CTCR0d(6),PLIST(8)=%CTCR0d(7),PLIST(9)=%CTCR0d(8),PLIST(10)=%CTCR0d(9),PLIST(11)=%CTCR0d(10)
 q
%0Lo n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Lerr" s %mmmsqld(14)=0,%mmmsqld(15)=""
 s %mmmsqld(12)=$g(ROWID)
 s SQLCODE=100
 ; asl MOD# 2
 s PLIST(2)=%mmmsqld(12)
 i PLIST(2)'="",$d(^TTAB("CR",PLIST(2)))
 e  g %0LBdun
 s %mmmsqld(20)=$g(^TTAB("CR",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(20),"\",1) s PLIST(4)=$p(%mmmsqld(20),"\",2) s PLIST(5)=$p(%mmmsqld(20),"\",3) s PLIST(6)=$p(%mmmsqld(20),"\",4) s PLIST(7)=$p(%mmmsqld(20),"\",5) s PLIST(8)=$p(%mmmsqld(20),"\",6) s PLIST(9)=$p(%mmmsqld(20),"\",7) s PLIST(10)=$p(%mmmsqld(20),"\",8) s PLIST(11)=$p(%mmmsqld(20),"\",9)
 g:$zu(115,2)=0 %0LBuncommitted i $zu(115,2)=1 l +^TTAB("CR",$p(PLIST(2),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(14)=1,%mmmsqld(15)=$name(^TTAB("CR",$p(PLIST(2),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.CT_Courier for RowID value: "_PLIST(2) ztrap "LOCK"  }
 ; asl MOD# 3
 i PLIST(2)'="",$d(^TTAB("CR",PLIST(2)))
 e  g %0LCdun
 s %mmmsqld(25)=$g(^TTAB("CR",PLIST(2)))
 s PLIST(3)=$p(%mmmsqld(25),"\",1) s PLIST(4)=$p(%mmmsqld(25),"\",2) s PLIST(5)=$p(%mmmsqld(25),"\",3) s PLIST(6)=$p(%mmmsqld(25),"\",4) s PLIST(7)=$p(%mmmsqld(25),"\",5) s PLIST(8)=$p(%mmmsqld(25),"\",6) s PLIST(9)=$p(%mmmsqld(25),"\",7) s PLIST(10)=$p(%mmmsqld(25),"\",8) s PLIST(11)=$p(%mmmsqld(25),"\",9)
%0LBuncommitted ;
 s PLIST(1)=PLIST(2)
 s SQLCODE=0 g %0Lc
%0LCdun i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) s %mmmsqld(14)=0 }
%0LBdun 
%0LAdun 
%0Lc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(14))=1 { l -@%mmmsqld(15) } q
%0Lerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Lc
%0No n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Nerr" s %mmmsqld(6)=0,%mmmsqld(7)=""
 s %mmmsqld(4)=$g(user)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(3)=%mmmsqld(4)
 i %mmmsqld(3)'="",$d(^SSU("SSUSR",1,%mmmsqld(3)))
 e  g %0NBdun
 s %mmmsqld(14)=$g(^SSU("SSUSR",1,%mmmsqld(3)))
 s SecurityType=$p(%mmmsqld(14),"^",9)
 g:$zu(115,2)=0 %0NBuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(%mmmsqld(3),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(6)=1,%mmmsqld(7)=$name(^SSU("SSUSR",1,$p(%mmmsqld(3),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User for RowID value: "_%mmmsqld(3) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(3)'="",$d(^SSU("SSUSR",1,%mmmsqld(3)))
 e  g %0NCdun
 s %mmmsqld(21)=$g(^SSU("SSUSR",1,%mmmsqld(3)))
 s SecurityType=$p(%mmmsqld(21),"^",9)
%0NBuncommitted ;
 s SQLCODE=0 g %0Nc
%0NCdun i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) s %mmmsqld(6)=0 }
%0NBdun 
%0NAdun 
%0Nc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(6))=1 { l -@%mmmsqld(7) } q
%0Nerr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Nc
%0Po n %mmmsqlc,%mmmsqld,%mmmsqlE,%mmmsqll,%mmmsqln,%mmmsqlp,%mmmsqlR,%mmmsqls,%mmmsqlt,%mmmsqlZ s $zt="%0Perr" s %mmmsqld(8)=0,%mmmsqld(9)=""
 s %mmmsqld(6)=$g(user)
 s SQLCODE=100
 ; asl MOD# 2
 s %mmmsqld(5)=%mmmsqld(6)
 i %mmmsqld(5)'="",$d(^SSU("SSUSR",1,%mmmsqld(5)))
 e  g %0PBdun
 s %mmmsqld(16)=$g(^SSU("SSUSR",1,%mmmsqld(5)))
 s x1=$p(%mmmsqld(16),"^",11) s x2=$p(%mmmsqld(16),"^",8)
 g:$zu(115,2)=0 %0PBuncommitted i $zu(115,2)=1 l +^SSU("SSUSR",1,$p(%mmmsqld(5),"||",1))#"S":$zu(115,4) i $t { s %mmmsqld(8)=1,%mmmsqld(9)=$name(^SSU("SSUSR",1,$p(%mmmsqld(5),"||",1)))_"#""SI""" } else { s SQLCODE=-114,%msg="Unable to acquire shared lock on table SQLUser.SS_User for RowID value: "_%mmmsqld(5) ztrap "LOCK"  }
 ; asl MOD# 3
 i %mmmsqld(5)'="",$d(^SSU("SSUSR",1,%mmmsqld(5)))
 e  g %0PCdun
 s %mmmsqld(23)=$g(^SSU("SSUSR",1,%mmmsqld(5)))
 s x1=$p(%mmmsqld(23),"^",11) s x2=$p(%mmmsqld(23),"^",8)
%0PBuncommitted ;
 s SQLCODE=0 g %0Pc
%0PCdun i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) s %mmmsqld(8)=0 }
%0PBdun 
%0PAdun 
%0Pc s %ROWCOUNT='SQLCODE i $zu(115,2)=1,$g(%mmmsqld(8))=1 { l -@%mmmsqld(9) } q
%0Perr s $zt="" d SQLRunTimeError^%apiSQL($ze,.SQLCODE,.%msg) g %0Pc
]]></Routine>
</Export>
