<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIF000dop" type="INT" languagemode="0"><![CDATA[
MIF000dop ; extra functions MIF000

 // обработка ошибок с перезагрузкой программы на ошибку READ and EDIT (ошибку EDIT надо сэмулировать)
err
	set $zt=""
	if $get(mi)'="" {
		do trace^MIF000(mi,$ze,"ERROR")
	    do trace^MIF000(mi,"Finished","DEBUG")
	    k ^TMP(mi,$j)
 
	    if $find($ze,"<ZEDIT>")||$find($ze,"<READ>") {
		    set programname=$piece($get(^TMIF(mi)),"\",3)
		    if programname'="" {
		          do trace^MIF000(mi,"Autostarting...","DEBUG") x "job ^"_programname
		    }
	    }
	}
	quit

 // обработка ошибок с перезагрузкой программы на любую ошибку 
err2
	set $zt=""
	if $get(mi)'="" {
		do err^MIF000
		do trace^MIF000(mi,$ze,"ERROR")
	    do trace^MIF000(mi,"Finished","DEBUG")
	    k ^TMP(mi,$j)
 
	    set programname=$piece($get(^TMIF(mi)),"\",3)
		if programname'="" {
	         do trace^MIF000(mi,"Autostarting...","DEBUG") x "job ^"_programname
		}
	}
	quit

 // по коду теста для анализатора получить соответсвующую строку epis||ts||tscnt в эпизоде 
 // если один код теста анализатора настроен на два набора тестов и оба присутсвуют в одном эпизоде, то берем первый попавшийся
getRowIdTestSet(mi,epis,testcodeAnal) public {
	set rowid=""
	// определяем код теста ЛИС
	set testcode=""
	for {
		set testcode=$order(^TMIF(mi,3,testcodeAnal,testcode)) if testcode="" quit
		// ищем набор тестов
	    set ts="",rowid=""
        for { 
	        set ts=$order(^TMIF(mi,2,testcode,0,ts))
	        if (ts="") quit
	        if '$data(^TEPI(epis,1,ts)) continue
		    set tscnt=$order(^TEPI(epis,1,ts,""))
            if tscnt'="" set rowid=epis_"||"_ts_"||"_tscnt quit
        }
        if rowid'="" quit
    }
    quit rowid
}


traceWithZTS(mi,record,way) n (mi,record,way) s mi=$g(mi),record=$g(record),way=$g(way)
 s max=$$seldata^LVBMIMP(mi,23) i 'max s max=200
 s:'$l(way) way="H<--M"
 s z=$o(^TMPmif(mi,99,""),-1)+1,^TMPmif(mi,99,z)=way_" : "_$$zts^MIF000()_" : "_record
 //s z=$o(^TMPmif(mi,99,""),-1)+1,^TMPmif(mi,99,z)=way_" : "_$tr($h,","," ")_"."_$e($p($zts,".",2),1,3)_" : "_record
 //s z=$o(^TMPmif(mi,99,""),-1)+1,^TMPmif(mi,99,z)=way_" : "_$zd(+$h,4)_" "_$zt($piece($h,",",2))_"."_$e($p($zts,".",2),1,3)_" : "_record
 f j=z-max:-1 q:'$d(^TMPmif(mi,99,j))  k ^TMPmif(mi,99,j)
 q

  // Если это номер пробирки, то вернуть номер эпизода
transEpisodeNumber(pEpisode)
	if $get(pEpisode)="" quit ""
	if $data(^TEPI(pEpisode)) quit pEpisode
	//set epis=$extract(pEpisode,1,$length(pEpisode)-2) 
	// если pEpisode это номер контейнера и к этому номеру контейнера привязан только один эпизод, то подмениваем на номер этого эпизода
	if $data(^TEPIi("Specimen-SP",pEpisode)) {
		kill PLIST
		s x="" f  s x=$o(^TEPIi("Specimen-SP",pEpisode,x)) q:x=""  s PLIST=$o(PLIST(""),-1)+1,PLIST(PLIST)=x
	    if $d(PLIST(1)),'$d(PLIST(2)) s epis=PLIST(1) if $data(^TEPI(epis)) quit epis
	    k PLIST
	}
	quit pEpisode
 
 /*
  // Пробежать по всем отправленным тестам и записать данные о заказе в класс TCLEx.Data.MIFInfoEpisode, TCLEx.Data.MIFInfoEpisodeTests
writeInfoOrder(mi,epis,suffix) public {
	
	set ok=1
	try {
		set suffix=$get(suffix)
		set info=$lb(+$h,$piece($h,",",2))
		set test=""
	    for {
		    set test=$order(^TMP("MIF-SINGLE",$j,mi,epis_suffix,test)) if test="" quit
		    set ok=$$setMIFinfo(mi,epis,test,info)
		}
	    }
     catch(exception) {
	     set ok="0"_$c(1)_$System.Status.GetErrorText(exception.AsStatus())  
     }	
     quit ok
     
}

 // Записать данные о заказе в класс TCLEx.Data.MIFInfoEpisode, TCLEx.Data.MIFInfoEpisodeTests
setMIFinfo(mi,epis,test,info) public 
{
  set ok=1
  try {
	set idepis=mi_"||"_epis
  	set objepis=##class(TCLEx.Data.MIFInfoEpisode).%OpenId(idepis)
  	set idtest=mi_"||"_epis_"||"_test
	set objepistest=##class(TCLEx.Data.MIFInfoEpisodeTest).%OpenId(idtest)
  	
	set dateOrder=$li(info,1)
	set timeOrder=$li(info,2)
	set dateResult=$li(info,3)
	set timeResult=$li(info,4)	
	
	if (dateOrder'="")||(timeOrder'="")||(dateResult'="")||(timeResult'="") {
		set createepis=0,createepistest=0
		if '$IsObject(objepis) {
			kill PLIST
			set PLIST(1)=mi_"||"_epis
			set PLIST(2)=mi
			set PLIST(3)=epis
			set PLIST(4)=dateOrder
			set PLIST(5)=timeOrder
			set PLIST(6)=dateResult
			set PLIST(7)=timeResult
		    &sql(INSERT INTO TCLEx_Data.MIF_InfoEpisode VALUES :PLIST())
		    if SQLCODE'=0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))	
		    set createepis=1
		}
	    if '$IsObject(objepistest) {
		    set PLIST(0)=mi_"||"_epis
		    set PLIST(1)=mi_"||"_epis_"||"_test
			set PLIST(2)=test
			set PLIST(3)=dateOrder
			set PLIST(4)=timeOrder
			set PLIST(5)=dateResult
			set PLIST(6)=timeResult
		    &sql(INSERT INTO TCLEx_Data.MIF_InfoEpisodeTest VALUES :PLIST())   
		    if SQLCODE'=0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		    set createepistest=1
	    }
	    if (createepistest=0) {
			kill PLIST
		    &sql(SELECT * INTO :PLIST() FROM TCLEx_Data.MIF_InfoEpisodeTest WHERE MIFinfoTest_RowId=:idepistest)
		    if dateOrder'="" set PLIST(3)=dateOrder,PLIST(4)=timeOrder
		    if dateResult'="" set PLIST(5)=dateResult,PLIST(6)=timeResult
		    &sql(UPDATE TCLEx_Data.MIF_InfoEpisodeTest VALUES :PLIST() WHERE MIFinfoTest_RowId=:idepistest)
		    if SQLCODE'=0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		}
		if (createepis=0) {
			kill PLIST
		    &sql(SELECT * INTO :PLIST() FROM TCLEx_Data.MIF_InfoEpisode WHERE MIFinfo_RowId=:idepis)
		    if SQLCODE'=0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		    if dateOrder>PLIST(4) {
			    set PLIST(4)=dateOrder,PLIST(5)=timeOrder
		    }
		    if (dateOrder=PLIST(4))&&(timeOrder>PLIST(5)) {
			    set PLIST(5)=timeOrder
		    }
		    if dateResult>PLIST(6) {
			    set PLIST(6)=dateResult,PLIST(7)=timeResult
		    }
		    if (dateResult=PLIST(6))&&(timeResult>PLIST(7)) {
			    set PLIST(7)=timeResult
		    }
		    &sql(UPDATE TCLEx_Data.MIF_InfoEpisode VALUES :PLIST() WHERE MIFinfo_RowId=:idepis)
		    if SQLCODE'=0 $$$ThrowOnError($$$ERROR($$$GeneralError),$get(%msg))
		}
	}
  }
  catch(exception) {
	  set ok="0"_$c(1)_$System.Status.GetErrorText(exception.AsStatus())  
  }	
  quit ok
	
}*/

]]></Routine>
</Export>
