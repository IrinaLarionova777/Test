<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIF000dop" type="INT" languagemode="0"><![CDATA[
MIF000dop ; extra functions MIF000

 // обработка ошибок с перезагрузкой программы на ошибку READ and EDIT (ошибку EDIT надо сэмулировать)
err
	set $zt=""
	if $get(mi)'="" {
		do trace^MIF000(mi,$ze,"ERROR")
	    do trace^MIF000(mi,"Finished","DEBUG")
	    k ^TMP(mi,$j)
 
	    if $find($ze,"<ZEDIT>")||$find($ze,"<READ>") {
		    set programname=$piece($get(^TMIF(mi)),"\",3)
		    if programname'="" {
		          do trace^MIF000(mi,"Autostarting...","DEBUG") x "job ^"_programname
		    }
	    }
	}
	quit


 // по коду теста для анализатора получить соответсвующую строку epis||ts||tscnt в эпизоде 
getRowIdTestSet(mi,epis,testcodeAnal) public {
	// определяем код теста ЛИС
	set testcode=$order(^TMIF(mi,3,testcodeAnal,""))
	if testcode="" quit ""
	// ищем набор тестов
	set ts="",rowid=""
    for {
	    set ts=$order(^TMIF(mi,2,testcode,0,ts))
	    if (ts="") quit
	    if '$data(^TEPI(epis,1,ts)) continue
		set tscnt=$order(^TEPI(epis,1,ts,""))
        if tscnt'="" set rowid=epis_"||"_ts_"||"_tscnt quit
    }
    quit rowid
}
 // Записать данные о заказе в класс TCLEx.Data.MIFInfoEpisode, TCLEx.Data.MIFInfoEpisodeTests
setMIFOrder(mi,epis,test,info) public 
{
	TSTART
	//TCLEx.Data.MIFInfoEpisode
	set idepis=mi_"||"_epis
	if ##class(TCLEx.Data.MIFInfoEpisode).%ExistsId(idepis) {
	  	set objepis=##class(TCLEx.Data.MIFInfoEpisode).%OpenId(idepis)
  	}
	else {
	    set objepis=##class(TCLEx.Data.MIFInfoEpisode).%New()	
	}
  	set id=mi_"||"_epis_"||"_test
  	if ##class(TCLEx.Data.MIFInfoEpisodeTest).%ExistsId(id) {
	  	set objepisodetest=##class(TCLEx.Data.MIFInfoEpisodeTest).%OpenId(id)
  	}
	else {
	    set objepisodetest=##class(TCLEx.Data.MIFInfoEpisodeTest).%New()	
	}
	
	
}

]]></Routine>
</Export>
