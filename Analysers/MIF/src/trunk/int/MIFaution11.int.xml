<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIFaution11" type="INT" languagemode="0"><![CDATA[
MIFaution11(mi) ; ASTM protocol с обработкой ETB
 set mi=$get(mi) if '$length(mi) quit
 kill ^TMIF(mi,10) 
 //set $ztrap="err^MIF000dop"
 set $ztrap="err^MIF000"
 if $$select^LVBMIMP(mi) quit
 for j=1:1:PLIST set @("par"_j)=PLIST(j)
 set stx=$char(2),etx=$char(3),ack=$char(6),enq=$char(5),eot=$char(4),nak=$char(21),etb=$char(23)
 set lf=$char(10),cr=$char(13)
 set (sample,epis,containernumber,surname,result,date,time,QC)=""
 if $$start^MIF000() quit
 do trace^MIF000(mi,"Started job="_$job,"DEBUG")
 //set compiled=$listget(^rINDEX($zname,"OBJ"),1)
 set tcpadr=$get(^TMIF(mi,"TCP")) // если указан ip-адрес, то host - client, иначе host - server
 for {
	 if tcpadr'="" {
		 do Main
	 } else {
		 do MainWithCatchError
	 }
	 if $$stop^MIF000() quit
	 //if $listget(^rINDEX($zname,"OBJ"))'=compiled ztrap "EDIT"  // эмуляция ошибки EDIT, если программа-драйвер изменилась
 }
 close par4
 quit
 
 // for host-client
Main 
 read *R:10
 ;i $c(R)'=enq d trace^MIF000(mi,"Waiting <ENQ> but received <"_R_">","H<--M") q
 if $char(R)'=enq quit
 set nameMachine="",nameLIS=""
 do receiveENQ
 quit

 // for host-server
MainWithCatchError 
 try {
   read *R:10
   //if $c(R)'=enq d trace^MIF000(mi,"Waiting <ENQ> but received <"_R_">","H<--M") q
   if $char(R)'=enq quit
   set nameMachine="",nameLIS=""
   do receiveENQ
 } catch {
	 do err^MIF000
 }   
 quit
 
 ;обработка полученного от прибора ENQ
receiveENQ 
 do trace^MIF000(mi,"ENQ","H<--M")
 do ACK
 set (sample,epis,containernumber,surname,result,date,time,QC)=""
 set timeSilenceStart=$piece($horolog,",",2),timeSilenceLimit=60,ok=1
 set buffer=""
 for {
	 read *R:10
	 if $char(R)=eot quit 
	 if $char(R)=enq do trace^MIF000(mi,"ENQ is recieved at the wrong time","H-->M") do EOT set ok=0 quit
	 set timeSilence=$piece($horolog,",",2)-timeSilenceStart
	 if timeSilence>timeSilenceLimit do trace^MIF000(mi,"timeSilence>timeSilenceLimit ("_timeSilence_">"_timeSilenceLimit_")","H-->M") do EOT set ok=0 quit
     if $char(R)'=stx continue
     set timeSilenceStart=$piece($horolog,",",2)
     set record=$$read^MIF000("",lf) if '$length(record)  continue
     do trace^MIF000(mi,record,"H<--M")
     set record=$extract(record,1,$length(record)-1)
     ;do trace^MIF000(mi,$tr(record,$c(13,3)," "),"H<--M")
     ; check record validity
     set endtext=$select('$find(record,etx):etb,1:etx)
     set chsum=$piece(record,endtext,2),chrecord=$piece(record,endtext,1)_endtext
     if $$CHSUM(chrecord)'=chsum do NAK continue
     do ACK
     set record=$piece(record,endtext,1)
     set record=$extract(record,2,$length(record)) ;на 1-ом месте стоит номер записи - на записях-продолжениях он мешает
     if endtext=etb {
	     set buffer=buffer_record
	     continue
     }
     set buffer=buffer_record
     if buffer="" continue
     do trace^MIF000(mi,"buffer="_buffer,"H<--M")
     for pp=1:1:$length(buffer,$char(13)) {
	     set record=$piece(buffer,$char(13),pp)
	     set timeSilenceStart=$piece($horolog,",",2)
	     if record="" continue 
	     set typerecord=$piece(record,"|",1)
	     if typerecord="" continue
	     set typerecord=$select($length(typerecord)=1:typerecord,1:$extract(typerecord,2))
	     do trace^MIF000(mi,typerecord_" "_record,"H<--M")
	     ; head record
         if typerecord="H" {
             set nameMachine=$piece(record,"|",5),nameLIS=$piece(record,"|",10)  
             continue
         }
         ; query record
         if typerecord="Q" {
	        set containernumber=$piece($piece(record,"|",3),"^",2)
 	        if $l(containernumber)=0 continue
	        set epis=containernumber 
	        if '$data(^TEPI(containernumber)) {  
	             set errors=""
		         set epis=$$GetEpisodeByNumberContainer^MIF000dop(containernumber,.errors)
		         if errors'="" do trace^MIF000(mi,"Error in function GetEpisodeByNumberContainer^MIF000dop"_errors,"DEBUG")
	        }
	        set ^TMP($zname,$job,"ENQ",containernumber)=epis
	        continue
         }    
         ; patient record
         if typerecord="P" {
            do Last set (sample,epis,surname,result,date,time,QC)=""
            set surname=$translate($translate($piece(record,"|",6),""),"^"," ") 
            continue
         }
         ; order record
         if typerecord="O" {
	        set containernumber=$translate($piece($piece(record,"|",3),"^",1)," -")
            if containernumber="" set containernumber=$translate($piece($piece(record,"|",4),"^",1)," ")
            set epis=containernumber 
	        if '$data(^TEPI(containernumber)) {  
	             set errors=""
		         set epis=$$GetEpisodeByNumberContainer^MIF000dop(containernumber,.errors)
		         if errors'="" do trace^MIF000(mi,"Error in function GetEpisodeByNumberContainer^MIF000dop"_errors,"DEBUG")
	        }            
	        // если вместо номера образца пришел идентификатор КК, то пишем его в QC, переменная epis  остается
	        if $l(containernumber) s QC=$$findQC^MIF000(mi,containernumber)
	        // если по ASTM протоколу прописано, что это данные по КК
	        if QC="" set QC=$translate($piece(record,"|",12)," ") if QC="Q" set QC="Y"
	        
            continue
         }
         ; result record
         if typerecord="R" {
            ; strip trailing spaces
            set test=$piece($piece(record,"|",3),"^",5) set test=$$DeleteLeftAndRightSpaces^KSUTIL1(test)
            if test="" continue
            
            set resQ=$piece($piece(record,"|",4),"^",1) // качественный результата
            set resKol=$piece($piece(record,"|",4),"^",2) // количественный результат
            if (resQ="")&&(resKol="") continue
            
            if '$isvalidnum(resQ) set resQ=""""_resQ_""""  // нечисловой результат в кавычках 
            if $length(resKol),$isvalidnum(resKol) set resKol=+resKol // так как перед в обработке результата перед округлением до нужного кол-во десятичных знаков проверка :i $l(tires),tires=(+tires),$l(dec) s tires=$j(tires,0,dec)  
            
            set flag=$translate($piece(record,"|",6)," ") if flag="N" set flag="" ; normal flag
            
            if ($data(^TMIF(mi,3,test)))&&(resQ'="") {
	            set result=result_test_$char(par10)_resQ_$char(par10)_flag_$char(par11) 
            }
            
            if $data(^TMIF(mi,3,test_"_2")) {
	            if (resKol'="") {
	               set result=result_test_"_2"_$char(par10)_resKol_$char(par10)_flag_$char(par11)
	            } else {
		           set result=result_test_"_2"_$char(par10)_resQ_$char(par10)_flag_$char(par11) 
	            } 
            }
            
            ; date and time
            set datetime=$piece(record,"|",12) 
            if $length($translate(datetime," ")) {
	           set date=$$intdate^SSUTIL4($extract(datetime,5,6)_"/"_$extract(datetime,7,8)_"/"_$extract(datetime,1,4))
               set time=($extract(datetime,9,10)*3600)+($extract(datetime,11,12)*60)
            }
            continue
         }
         ; last record
         if typerecord="L" {
	        do Last 
	        continue
         }
         
    }
    set buffer=""
    set timeSilenceStart=$piece($horolog,",",2)
 } 
 if ok=1 {
	 do trace^MIF000(mi,$select($char(R)=eot:"EOT",$char(R)=enq:"ENQ",1:R),"H<--M")
	 do ORDER
 }
 quit
Last ; file result if exists
 do trace^MIF000(mi,"Write results episode="_epis_": "_result_" date="_$get(date)_" time="_$get(time)_" QC="_$get(QC),"H<--H")
 if $length(epis),$length(result) do file^MIF000(mi,sample,epis,surname,result,date,time,QC)
 set (sample,epis,containernumber,surname,result,date,time,QC)=""
 quit
ORDER ; create list of orders if exists
  // посылка ранее не посланных заданий 
 set epis=""
 for {
	 set epis=$order(^TMIF(mi,10,epis)) quit:epis="" 
	 do Send(epis)
 }
  // создание и посылка новых заданий 
 set containernumber="" 
 for {
	 set containernumber=$order(^TMP($zname,$job,"ENQ",containernumber),1,episode) quit:containernumber="" 
	 if episode="" set episode=containernumber
	 do scanone^MIF000(mi,episode) 
     if $$select^LVBEPVIS(episode,"Y") kill ^TMP($zname,$job,"ENQ",containernumber) continue
     set sex=$s($g(PLIST(5))="M":"M",$g(PLIST(5))="F":"F",1:"U")
     set surname=$get(PLIST(3)),name=$get(PLIST(4)),birthday=$zdate($get(PLIST(6)),8)
     // header record
     set line=$order(^TMIF(mi,10,containernumber,""),-1)+1
     set ^TMIF(mi,10,containernumber,line)="H|\^&|||"_$select($get(nameLIS)'="":nameLIS,1:"LIS")_"|||||"_$select($get(nameMachine)'="":nameMachine,1:"Centaur")_"||P|1|" 
     // patient record
     set line=$order(^TMIF(mi,10,containernumber,""),-1)+1
     set ^TMIF(mi,10,containernumber,line)="P|1|"_containernumber_"|||"_$$Translit^KSUTIL1(surname_"^"_name)_"||"_"|"_sex_"|||||" ;_$g(PLIST(15))
     // order records
     set tc="" 
     for N=1:1 {
	     set tc=$order(^TMP("MIF-SINGLE",$job,mi,episode,tc)) if tc="" quit
         set err=""
	     if (episode'=containernumber)&&('$$IsTestCode4Container^MIF000dop(containernumber,episode,mi,tc,.err)) {
		     if $get(err)'="" do trace^MIF000(mi,"Error in function IsTestCode4Container^MIF000dop"_err,"DEBUG")
		     continue
	     }
	     do SET(containernumber,tc)     
     }
     set line=$order(^TMIF(mi,10,containernumber,""),-1)+1,^TMIF(mi,10,containernumber,line)="L|1|"_$select(N>1:"F",1:"I")
     kill ^TMP($zn,$j,"ENQ",containernumber)
     d Send(containernumber)
 }
 quit  

SET(epis,tcx) ; set record to be sent to instrument
 set line=$order(^TMIF(mi,10,epis,""),-1)+1
 set ^TMIF(mi,10,epis,line)="O|"_N_"|"_epis_"||^^^"_tcx_"|||||||A||||||||||||||Q"
 quit
 
Send(epis) ; send list of orders if exists
 do ENQ 
 for j=1:1:10 {
	 read *R:1 
	 quit:$char(R)=ack!($char(R)=enq)  
	 //d trace^MIF000(mi,"Waiting <ACK> or <EOT> (10) but received <"_R_">","H<--M")
 }
 if $char(R)=enq quit
 if $char(R)'=ack do EOT quit
 do trace^MIF000(mi,"ACK","H<--M")
 set x="" for FRAME=1:1 set x=$Order(^TMIF(mi,10,epis,x)) quit:x=""  quit:$$SEND(FRAME#8_^TMIF(mi,10,epis,x))
 if x="" kill ^TMIF(mi,10,epis)
 do EOT
 quit
 
SEND(str) ; send string to instrument
 set str=str_cr_etx,chsum=$$CHSUM(str)
 write stx,str,chsum,cr,lf,*-3 
 do trace^MIF000(mi,str_chsum,"H-->M")
 for j=1:1:6 {
	 read *R:1 
	 quit:($char(R)=ack)!($char(R)=eot)
	 //d trace^MIF000(mi,"Waiting <ACK> or <EOT> (6) but received <"_R_">","H<--M")
 }
 if $char(R)=ack do trace^MIF000(mi,"ACK","H<--M") quit 0
 if $char(R)=eot do trace^MIF000(mi,"EOT","H<--M") quit 1
 do trace^MIF000(mi,R,"H<--M")
 quit 2
 
CHSUM(x) ; calculate check sum
 new (x) set z=0 for y=1:1:$length(x) set z=z+$ascii(x,y)
 set z=$extract("0123456789ABCDEF",z#256\16+1)_$extract("0123456789ABCDEF",z#16+1)
 quit z
ACK write ack,*-3 do trace^MIF000(mi,"ACK","H-->M") quit
NAK write nak,*-3 do trace^MIF000(mi,"NAK","H-->M") quit
EOT write eot,*-3 do trace^MIF000(mi,"EOT","H-->M") quit
ENQ write enq,*-3 do trace^MIF000(mi,"ENQ","H-->M") quit
]]></Routine>
</Export>
