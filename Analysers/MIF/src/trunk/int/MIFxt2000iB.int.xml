<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIFxt2000i" type="INT" languagemode="0"><![CDATA[
MIFxt2000i(mi) ; ASTM protocol  -  XT 2000 i (Sysmex)  (Bi-Directional) (Russion Bion))
 ;host - server (для этого надо в настройках прибора не вводить ip-адрес, только порт)
 set mi=$get(mi) if '$length(mi) quit
 kill ^TMIF(mi,10) set $ztrap="err^MIF000"
 if $$select^LVBMIMP(mi) quit
 for j=1:1:PLIST set @("par"_j)=PLIST(j)
 
 do trace^MIF000(mi,"Started job="_$job,"DEBUG")
 set exec="MainJob^"_$zname
 set ans=$$start^MIFstartServer(mi,par4,par41,exec) 
 //if $$start^MIF000() quit
 if ans="client" do Main(mi) 
 close par4 // в случае сервера не нужно, но не мешает, а в случае клиента нужно
 quit

MainJob(mi,dev)
 if $get(dev)="" quit
 set $ztrap="err^MIF000"
 use $IO:(::"+D")
 do trace^MIF000(mi,"Job="_$job_" is started by tcp server","DEBUG")
 do Main(mi)
 quit
 
Main(mi)
 set $ztrap="err^MIF000"
 if $$select^LVBMIMP(mi) quit
 for j=1:1:PLIST set @("par"_j)=PLIST(j)
 set stx=$char(2),etx=$char(3),ack=$char(6),enq=$char(5),eot=$char(4),nak=$char(21),etb=$char(23)
 set lf=$char(10),cr=$char(13) 
 //d trace^MIF000(mi,"$IO="_$IO_" $P="_$P_" $ZMODE="_$ZMODE_" $ZA="_$ZA_" $ZB="_$ZB,"DEBUG")
 for {
	  if $$stop^MIF000() quit
	  read *R:10
      ;if $c(R)'=enq d trace^MIF000(mi,"Waiting <ENQ> but received <"_R_">","H<--M") continue
      if $char(R)'=enq continue
      set nameMachine="",nameLIS="",versionASTM=""
      do receiveENQ
      do ORDER 
 }
 quit

 ;обработка полученного от прибора ENQ c обработкой ETB 
receiveENQ 
 do trace^MIF000(mi,"ENQ","H<--M")
 do ACK
 set (sample,epis,surname,result,date,time,QC,containernumber)=""
 set buffer=""
 for {
	 read *R:10 
	 if $c(R)=eot quit
     if $c(R)'=stx continue
     set record=$$read^MIF000("",lf) if '$l(record)  continue
     do trace^MIF000(mi,record_lf,"H<--M")
     set record=$e(record,1,$l(record)-1) //$c(13)
     ;do trace^MIF000(mi,$tr(record,$c(13,3)," "),"H<--M")
     ; check record validity
     set endtext=$select('$find(record,etx):etb,1:etx)
     set chsum=$p(record,endtext,2),chrecord=$piece(record,endtext,1)_endtext
     if $$CHSUM(chrecord)'=chsum do NAK continue
     do ACK
     set record=$piece(record,endtext,1)
     set record=$e(record,2,$l(record)) ;на 1-ом месте стоит номер записи - на записях-продолжениях он мешает
     if endtext=etb {
	     set buffer=buffer_record
	     continue
     }
     set buffer=buffer_record
     if buffer="" continue
     //do trace^MIF000(mi,"buffer="_buffer,"H<--M")
     for pp=1:1:$length(buffer,$c(13)) {
	     set record=$piece(buffer,$c(13),pp)
	     if record="" continue 
	     set typerecord=$piece(record,"|",1)
	     if typerecord="" continue
	     set typerecord=$select($length(typerecord)=1:typerecord,1:$e(typerecord,2))
	     //do trace^MIF000(mi,typerecord_" "_record,"H<--M")
	     ; head record
         if typerecord="H" {
            set nameMachine=$piece(record,"|",5),nameLIS=$piece(record,"|",10),versionASTM=$piece(record,"|",13)  
            continue
         }
         ; query record
         if typerecord="Q" {
	        set containernumber=$$DeleteLeftAndRightSpaces^KSUTIL1($p($p(record,"|",3),"^",3))
	        Set epis=$$Episode4Container^KSMIF000(containernumber) 
	        if $l(epis) set ^TMP($zn,$j,"ENQ",epis_$char(1)_containernumber)="" 
            continue
         }    
         ; patient record
         if typerecord="P" {
            do Last s (sample,epis,surname,result,date,time,QC,containernumber)=""
            set surname=$p(record,"|",6)
            set surname=$$DeleteLeftAndRightSpaces^KSUTIL1($piece(surname,"^",2)_" "_$piece(surname,"^",3)) 
            continue
         }
         ; order record
         if typerecord="O" {
	        set containernumber=$$DeleteLeftAndRightSpaces^KSUTIL1($p($p(record,"|",4),"^",3))
	        if '$l(containernumber) set containernumber=$tr($p($p(record,"|",4),"^",1)," ")
	        set QC=$tr($p(record,"|",12)," ") 
            set QC=$select(QC="Q":"Y",1:"")
            continue
         }
         ; result record
         if typerecord="R" {
            ; strip trailing spaces
            set test=$piece($piece(record,"|",3),"^",5) set test=$$DeleteLeftAndRightSpaces^KSUTIL1(test)
            //if $extract($piece(test,"|",2),1,3)="PNG" continue
            set res=$tr($p(record,"|",4),", ","."),flag=$tr($p(record,"|",7)," ")
            if flag="N" s flag="" ; normal flag
            if $l(test),$l(res) s result=result_test_$c(par10)_res_$c(par10)_flag_$c(par11)
            ; date and time
            set datetime=$p(record,"|",13)
            if $l($tr(datetime," ")) {
	            s date=$$intdate^SSUTIL4($e(datetime,5,6)_"/"_$e(datetime,7,8)_"/"_$e(datetime,1,4))
                s time=($e(datetime,9,10)*3600)+($e(datetime,11,12)*60)
            }
            continue
         }
         ; last record
         if typerecord="L" {
	        d Last 
	        continue
         }
    }
    set buffer=""
 } 
 do trace^MIF000(mi,$s($c(R)=eot:"EOT",1:R),"H<--M")
 quit 
 
Last ; file result if exists
 do trace^MIF000(mi,"Write episode="_epis_": QC="_QC_" results="_result_" date="_date_" time="_time_"surname="_surname,"H<--H")
 if epis?1.99AN,$l(result) {
 	 do file^MIF000(mi,sample,epis,surname,result,date,time,QC)
 }
 set (sample,epis,surname,result,date,time,QC,containernumber)=""
 quit
 
ORDER ; create list of orders if exists
  // посылка ранее не посланных заданий 
 set containernumber=""
 for {
	 set containernumber=$order(^TMIF(mi,10,containernumber)) quit:containernumber="" 
	 do Send(containernumber)
 }
  // создание и посылка новых заданий 
 set episcont="" 
 for {
	 set episcont=$order(^TMP($zname,$job,"ENQ",episcont)) quit:episcont="" 
	 set epis=$piece(episcont,$char(1),1)
	 set containernumber=$piece(episcont,$char(1),2)
	 if containernumber="" set containernumber=epis
     do scanone^MIF000(mi,epis)
     if $$select^LVBEPVIS(epis,"Y") k ^TMP($zn,$j,"ENQ",episcont) continue
     set sex=$s($g(PLIST(5))="M":"M",$g(PLIST(5))="F":"F",1:"U")
     ;s sex=$s($g(PLIST(5))="М":"M",$g(PLIST(5))="Ж":"F",1:"U")
     set surname=$get(PLIST(3)),name=$get(PLIST(4)),birthday=$zdate($get(PLIST(6)),8)
     set surname=$extract(surname,1,20)
     set name=$extract(name,1,20) 
     set mrn=$get(PLIST(20)) if mrn="" set mrn=epis
     set mrn=$extract(mrn,1,15)
     // header record
     set line=$order(^TMIF(mi,10,containernumber,""),-1)+1
     set recordHead="H|\^&|||"_$select($get(nameLIS)'="":nameLIS,1:"LIS")_"|||||"_$select($get(nameMachine)'="":nameMachine,1:"")_"||||" 
     if $get(versionASTM)'="" set $piece(recordHead,"|",13)=versionASTM
     set ^TMIF(mi,10,containernumber,line)=recordHead
     // patient record
     set line=$order(^TMIF(mi,10,containernumber,""),-1)+1
     set ^TMIF(mi,10,containernumber,line)="P|1|||"_$$Translit^KSUTIL1(mrn)_"|"_$$Translit^KSUTIL1("^"_surname_"^"_name)_"||"_birthday_"|"_sex_"||||||||||||||||||" ;_$g(PLIST(15))
     // order records
     set tc="",strtest="" 
     for N=1:1 {
	     set tc=$o(^TMP("MIF-SINGLE",$j,mi,epis,tc)) 
	     if tc="" quit
	     If (epis'=containernumber)&&('$$IsTestCode4Container^KSMIF000(containernumber,mi,tc)) Quit 
	     set strtest=strtest_$select(strtest'="":"\",1:"")_"^^^^"_tc
	 }
	 do SET(containernumber,strtest)
     // terminate record
     set line=$order(^TMIF(mi,10,containernumber,""),-1)+1,^TMIF(mi,10,containernumber,line)="L|1|N"
     kill ^TMP($zname,$job,"ENQ",episcont)
     do Send(containernumber)
 }
 quit 
 
SET(epis,tcx) ; set record to be sent to instrument
 set line=$order(^TMIF(mi,10,epis,""),-1)+1
 set hh=$h
 set datetime=$zdate(+hh,8)_$tr($ztime($piece(hh,",",2),1),":","")
 set ^TMIF(mi,10,epis,line)="O|"_"1"_"|^^"_epis_"^C||"_tcx_"||"_datetime_"|||||N||||||||||||||Q"
 quit
 
Send(epis) ; send list of orders if exists
 do ENQ 
 for j=1:1:10 {
	 read *R:1 
	 quit:$char(R)=ack!($char(R)=enq)  
	 //d trace^MIF000(mi,"Waiting <ACK> or <EOT> (10) but received <"_R_">","H<--M")
 }
 if $char(R)=enq quit
 if $char(R)'=ack do EOT quit
 do trace^MIF000(mi,"ACK","H<--M")
 set x="" for FRAME=1:1 set x=$Order(^TMIF(mi,10,epis,x)) quit:x=""  quit:$$SEND(FRAME#8_^TMIF(mi,10,epis,x))
 if x="" kill ^TMIF(mi,10,epis)
 do EOT
 quit 

SEND(str) ; send string to instrument
 set str=str_cr_etx,chsum=$$CHSUM(str)
 write stx,str,chsum,cr,lf,*-3 
 do trace^MIF000(mi,str_chsum,"H-->M")
 for j=1:1:6 {
	 read *R:1 
	 quit:($c(R)=ack)!($c(R)=eot)
	 //d trace^MIF000(mi,"Waiting <ACK> or <EOT> (6) but received <"_R_">","H<--M")
 }
 if $c(R)=ack do trace^MIF000(mi,"ACK","H<--M") quit 0
 if $c(R)=eot do trace^MIF000(mi,"EOT","H<--M") quit 1
 do trace^MIF000(mi,R,"H<--M")
 quit 2
 
CHSUM(x) ; calculate check sum
 new (x) 
 set z=0 for y=1:1:$length(x) set z=z+$a(x,y)
 set z=$tr($j($zhex(z#256),2)," ","0") 
 quit z
 
ACK write ack,*-3 do trace^MIF000(mi,"ACK","H-->M") quit
NAK write nak,*-3 do trace^MIF000(mi,"NAK","H-->M") quit
EOT write eot,*-3 do trace^MIF000(mi,"EOT","H-->M") quit
ENQ write enq,*-3 do trace^MIF000(mi,"ENQ","H-->M") quit



]]></Routine>
</Export>
