<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="MIFliaison" type="INT" languagemode="0" generated="1"><![CDATA[
MIFliaison(mi) ; ASTM protocol  -  Liaison (Bi-Directional) (Russion EMC))
 s mi=$g(mi) i '$l(mi) q
 k ^TMIF(mi,10) s $zt="err^MIF000"
 i $$select^LVBMIMP(mi) q
 f j=1:1:PLIST s @("par"_j)=PLIST(j)
 s stx=$c(2),etx=$c(3),ack=$c(6),enq=$c(5),eot=$c(4),nak=$c(21)
 s lf=$c(10),cr=$c(13),(result,epis)=""
 i $$start^MIF000() q
 d trace^MIF000(mi,"Started job="_$j,"DEBUG")
 for {
	 d Main 
	 if $$stop^MIF000() quit
 }
 c par4
 quit
Main 
 read *R:10
 ;i $c(R)'=enq d trace^MIF000(mi,"Waiting <ENQ> but received <"_R_">","H<--M") q
 i $c(R)'=enq q
 do receiveENQ
 do ORDER
 quit
 ;обработка полученного от прибора ENQ
receiveENQ 
 do trace^MIF000(mi,"ENQ","H<--M")
 do ACK
 for {
	 read *R:10 
	 if $c(R)=eot quit
     if $c(R)'=stx continue
     set record=$$read^MIF000("",lf) if '$l(record)  continue
     set record=$e(record,1,$l(record)-1)
     do trace^MIF000(mi,$tr(record,$c(13,3)," "),"H<--M")
     ; check record validity
     set chsum=$p(record,etx,2),chrecord=$p(record,etx,1)_etx
     if $$CHSUM(chrecord)'=chsum do NAK continue
     do ACK
     set typerecord=$e(record,2)
     ; query record
     if typerecord="Q" {
	     set epis=$p($p(record,"|",3),"^",1)
	     if $l(epis) set ^TMP($zn,$j,"ENQ",epis)="" do trace^MIF000(mi,"reseive query epis "_epis,"H<-H") continue
         ;if $l(epis),$d(^TEPI(epis,1)) set ^TMP($zn,$j,"ENQ",epis)="" continue
         ;set suffix=$e(epis,$l(epis)),epis=$e(epis,1,$l(epis)-1)
         ;if $l(epis),$d(^TEPI(epis,1)) set ^TMP($zn,$j,"ENQ",epis)=suffix continue
         ;set epis=$p($p(record,"|",3),"^",2) if $l(epis) set ^TMP($zn,$j,"ENQ",epis)=""
         continue
     }    
     ; patient record
     if typerecord="P" {
        do Last s (sample,epis,surname,result,date,time,QC)=""
        set surname=$tr($tr($p(record,"|",6),""),"^"," ") 
        continue
     }
     ; order record
     if typerecord="O" {
	     set epis=$tr($p($p(record,"|",3),"^",1)," ") s:'$l(epis) epis=$tr($p($p(record,"|",4),"^",1)," ")
	     // если вместо номера образца пришел идентификатор КК, то пишем его в QC, переменная epis  остается
	     if $l(epis) s QC=$$findQC^MIF000(mi,epis)
	     // если по ASTM протоколу прописано, что это данные по КК
	     if QC="" set QC=$translate($piece(record,"|",12)," ") if QC="Q" set QC="Y"
         continue
     }
     ; result record
     if typerecord="R" {
         ; strip trailing spaces
         set x1=$p($p(record,"|",3),"^",4) set xx1=x1 for i=$l(x1):-1 quit:$e(x1,i)'=" "  s xx1=$e(x1,1,i-1)
         set x1=xx1,res=$tr($p(record,"|",4),", ","."),flag=$tr($p(record,"|",7)," ")
         if flag="N" s flag="" ; normal flag
         if $length(res),$isvalidnum(res) set res=+res // так как перед в обработке результата перед округлением до нужного кол-во десятичных знаков проверка :i $l(tires),tires=(+tires),$l(dec) s tires=$j(tires,0,dec)  
         // Нужно в случае наличия флага в виде >, >=, <, <= и отсутствия такого знака в результате, "приклеивать" знак к результату 
         if (flag'="")&&($find("<=>=",flag))&&('$$FindSign(res)) {
	         set res=flag_res
         }
         if $l(x1),$l(res) s result=result_x1_$c(par10)_res_$c(par10)_flag_$c(par11)
         ; date and time
         set datetime=$p(record,"|",13)
         if $l($tr(datetime," ")) {
	         s date=$$intdate^SSUTIL4($e(datetime,5,6)_"/"_$e(datetime,7,8)_"/"_$e(datetime,1,4))
             s time=($e(datetime,9,10)*3600)+($e(datetime,11,12)*60)
         }
         continue
     }
     ; last record
     if typerecord="L" {
	     d Last 
	     continue
     }
 } 
 do trace^MIF000(mi,$s($c(R)=eot:"EOT",1:R),"H<--M")
 quit
Last ; file result if exists
 if epis?1.99AN,$l(result) {
	 set len=$length(result,$char(par11))
	 set resultnew=result
	 for ii=1:1:len {
		 set resdata=$piece(result,$char(par11),ii) if resdata="" continue
		 set test=$piece(resdata,$char(par10),1),res=$piece(resdata,$char(par10),2)
		 set resultnum=$piece(res,"^",1),resultstring=$piece(res,"^",2)
		 set testdop=test_"_i"
		 ;если в настройках есть только строка для интерпретации (test_i) (качественный результат resultstring), то подмениваем код теста
		 if '$data(^TMIF(mi,3,test)),$data(^TMIF(mi,3,testdop)) {
			     set $piece(resdata,$char(par10),1)=testdop
			     set $piece(resultnew,$char(par11),ii)=resdata
		 }
		 ;если в результате есть и колич и качест результаты 
	     if (resultnum'="")&&(resultstring'="") {
		     set testdop=test_"_i"
		     set testdoplis=""
		     ;если в настройках есть и тест test и test_i, то пишем оба результата
		     if $data(^TMIF(mi,3,test)),$data(^TMIF(mi,3,testdop)) {
			     set ti=""
			     for {
				       set ti=$order(^TMIF(mi,3,testdop,ti)) quit:ti="" 
			           set xx=$get(^TMIF(mi,2,ti)),direction=$piece(xx,"\",3) ;,suffix=$piece(xx,"\",4) 
			           if '(" IL "[(" "_direction_" ")) continue
			           ;if '$data(^TMIF(mi,2,ti,1,resultstring)) continue
			           set testdoplis=ti quit
		         }
		         if testdoplis'="" {
			         set $piece(resdata,$char(par10),2)=resultnum
		             set $piece(resultnew,$char(par11),ii)=resdata
			         set resultnew=resultnew_testdop_$c(par10)_resultstring_$c(par10)_$piece(resdata,$char(par10),3)_$c(par11)
		         }
		     }
		     ;если в настройках есть только test_i, то пишем качественный результат
		     if '$data(^TMIF(mi,3,test)),$data(^TMIF(mi,3,testdop)) {
			     set $piece(resdata,$char(par10),1)=testdop
			     set $piece(resdata,$char(par10),2)=resultstring
		         set $piece(resultnew,$char(par11),ii)=resdata
		     }
	     }
	 }
	 set result=resultnew
	 do file^MIF000(mi,sample,epis,surname,result,date,time,QC)
 }
 set (sample,epis,surname,result,date,time,QC)=""
 quit
ORDER ; create list of orders if exists
 s epis="",patientnum=0,isorder=0
 for {
	 set epis=$o(^TMP($zn,$j,"ENQ",epis)) quit:epis="" 
     do scanone^MIF000(mi,epis)
     d trace^MIF000(mi,"prosess episore "_epis,"H<--M")
     if $$select^LVBEPVIS(epis,"Y") k ^TMP($zn,$j,"ENQ",epis) continue
     s sex=$s($g(PLIST(5))="M":"M",$g(PLIST(5))="F":"F",1:"U")
     set surname=$get(PLIST(3)),name=$get(PLIST(4)),birthday=$zdate($get(PLIST(6)),8) 
     ;s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="P|1|"_epis_"|||"_$$Translit^KSUTIL1(surname_"^"_name)_"||"_birthday_"|"_sex_"|||||" ;_$g(PLIST(15))
     set patientnum=patientnum+1
     s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="P|"_patientnum_"|"_epis_"|||"_$$Translit^KSUTIL1(surname_"^"_name)_"||"_"|"_sex_"|||||" ;_$g(PLIST(15))
     s tc="" f N=1:1 s tc=$o(^TMP("MIF-SINGLE",$j,mi,epis,tc)) q:tc=""  d SET(epis,tc) set isorder=1
     k ^TMP($zn,$j,"ENQ",epis)
 }
 s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="L|1|"_$s(isorder=1:"N",1:"I")
 d Send
 quit
SET(epis,tcx) ; set record to be sent to instrument
 set ll=$length(tcx)
 if $e(tcx,ll-1,ll)="_i" set tcx=$e(tcx,1,ll-2)
 s line=$o(^TMIF(mi,10,""),-1)+1,^TMIF(mi,10,line)="O|"_N_"|"_epis_"||^^^"_tcx_"|||||||||||||||||||||O"
 q
Send ; send list of orders if exists
 d ENQ f j=1:1:10 r *R:1 quit:$c(R)=ack!($c(R)=enq)  ;d trace^MIF000(mi,"Waiting <ACK> or <EOT> (10) but received <"_R_">","H<--M")
 i $c(R)=enq q
 i $c(R)'=ack d EOT q
 d trace^MIF000(mi,"ACK","H<--M")
 q:$$SEND("1H|\^&|||LIS|||||Liaison|") //|P|1|"_$Translate($ZDateTime($Horolog,8)," :"))
 s x="" f FRAME=2:1 s x=$O(^TMIF(mi,10,x)) q:x=""  q:$$SEND(FRAME#8_^TMIF(mi,10,x))
 i x="" k ^TMIF(mi,10)
 d EOT
 q
SEND(str) ; send string to instrument
 s str=str_cr_etx,chsum=$$CHSUM(str)
 w stx,str,chsum,cr,lf,*-3 d trace^MIF000(mi,str_chsum,"H-->M")
 f j=1:1:6 r *R:1 q:($c(R)=ack)!($c(R)=eot)  ;d trace^MIF000(mi,"Waiting <ACK> or <EOT> (6) but received <"_R_">","H<--M")
 i $c(R)=ack d trace^MIF000(mi,"ACK","H<--M") q 0
 i $c(R)=eot d trace^MIF000(mi,"EOT","H<--M") q 1
 d trace^MIF000(mi,R,"H<--M")
 q 2
CHSUM(x) ; calculate check sum
 n (x) s z=0 f y=1:1:$l(x) s z=z+$a(x,y)
 s z=$e("0123456789ABCDEF",z#256\16+1)_$e("0123456789ABCDEF",z#16+1)
 q z
ACK w ack,*-3 d trace^MIF000(mi,"ACK","H-->M") q
NAK w nak,*-3 d trace^MIF000(mi,"NAK","H-->M") q
EOT w eot,*-3 d trace^MIF000(mi,"EOT","H-->M") q
ENQ w enq,*-3 d trace^MIF000(mi,"ENQ","H-->M") q

FindSign(str) 
	new i,ans
	set ans=0
	for i=1:1:$length(str) {
		set pp=$extract(str,i,i)
		if "<>="[pp {
			set ans=1
			quit
		} 
	}
	quit ans
]]></Routine>
</Export>
