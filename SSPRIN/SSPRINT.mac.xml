<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="SSPRINT" type="MAC" languagemode="0"><![CDATA[
SSPRINT ; DE-SPOOLER - Print Controller for Cache
 ; The intention is that any report can be generated by
 ; the same program irrespective of wether it will go to
 ; a UNIX/NT printer or windows device.
 ;
 ; This program handles de-spooling through M/Cache
 ;
 ; Any changes here should be applied to the VB function
 ; which performs the same functionality
 ; SSPRINT.BAS
 ;
 ;
 ; Process a spooled report
 ; ROWID - report RowID
 ; dest  - report destination
 ; file  - print to file for a local/FAX
 ; FAX   - FAX parameters (number,recipient)
print(ROWID,dest,file,FAX) N REPORT,DEST,DEVICE,STAT S FAX=$G(FAX),$ZT="ERROR^"_$zn
 I $$select^MVBCFLAB(1) Q SQLCODE_"^MVBCFLAB_^1"
 F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 M CFLAB=PLIST
 I $$select^LVBPRPR(ROWID) Q SQLCODE_"^LVBPRPR_^"_ROWID
 F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 M REPORT=PLIST
 ;
 s dest=$g(dest) i dest="" s dest=$g(REPORT(8))
 ; get number of copies
 s copies=$$copies(ROWID,dest)
 ; Get the destination details
 I $$select^LVBCTPD(dest) Q SQLCODE_"^LVBCTPD"
 F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 ; translate [27] to $c(27)
 f J=14,15 i $l(PLIST(J)) d  s PLIST(J)=X
 .s X="" f I=1:1:$l(PLIST(J)) d
 ..i $e(PLIST(J),I)="[",$f(PLIST(J),"]",I) s X=X_$c($e(PLIST(J),I+1,$f(PLIST(J),"]",I-2))),I=$f(PLIST(J),"]",I-2)-1
 ..e  s X=X_$e(PLIST(J),I)
 M DEST=PLIST
  
 ; Get the Device and Device parameters
 S ERROR="" D  I $L(ERROR) Q ERROR
 . ; if printing to a file for specific printer
 .i $l($g(file)) d  q
 ..i '$l(CFLAB(33)) s DEVICE(1)=file,DEST(10)="NSW"
 ..e  s DEVICE(1)=file,DEST(10)="NSWK\"_CFLAB(33)_"\"
 . ; device details
 .S DEV=$P(DEST(4),$c(1),1),DEVICE(1)=DEV i '$l(DEST(10)) s DEST(10)="W"
 .I DEV="" S ERROR="100^SSREP" Q
  
 ; Get the stationery details
 I $L(REPORT(8)) S ERR="" D  I $L(ERR) Q ERR
 .I $$select^LVBCTPSF(REPORT(8)) S ERR=SQLCODE_"^CTPSF" Q
 .F J=1:1:PLIST I $D(PLIST(J)) S PLIST(J)=$P(PLIST(J),$C(1))
 .M STAT=PLIST
  
 //s ^test("print1",$i(^test("print")))=ROWID_"*"_DEVICE(1)_"*"_DEST(10)

 Q $$DEVICE(ROWID,DEVICE(1),DEST(10))
  
ERROR I $ZE'["NOTOPEN" D BACK^%ETN Q 100
 Q 4
  
 ; Device sections
DEVICE(ROWID,DEVNAME,PAR) ;
 s return=$$OPEN(DEVNAME,PAR)
 //s ^test("print",$i(^test("print")))="return="_return 
 i return,$$seldata^MVBCFLAB(1,154) d  q return ; Unable to open device
 .i $l(DEST(2)),$d(^TTAB("CTDS",DEST(2))) d
 ..s $p(^TTAB("CTDS",DEST(2)),"\",6)=$p(^TTAB("CTDS",DEST(2)),"\",6)+1
 ..i $p(^TTAB("CTDS",DEST(2)),"\",6)>$$seldata^MVBCFLAB(1,154) s $p(^TTAB("CTDS",DEST(2)),"\",10)="N",$p(^TTAB("CTDS",DEST(2)),"\",5)="Number of maximum retries reached"
 i $l(DEST(2)),$d(^TTAB("CTDS",DEST(2))) f j=5,6 s $p(^TTAB("CTDS",DEST(2)),"\",j)=""
 
 ; switch modes (eg. postscript to hp, A5 to A4)
 i DEST(14)'="" u DEVNAME w DEST(14)
 
 S REPORT(9)=$P(^PR(+ROWID),"^",8)
 I $G(REPORT(9))="" S REPORT(9)="M"
 
 I $P(REPORT(9),$C(1),1)="M" f count=1:1:copies D PRINTM(+ROWID,DEVNAME,"PRT")
 I $E($P(REPORT(9),$C(1),1))="I" f count=1:1:copies D PRINTI(+ROWID,DEVNAME,"PRT")
 
 ; switch modes (eg. hp to postscript, A4 to A5)
 i DEST(15)'="" w DEST(15)
 
 s return=$$CLOSE(DEVNAME) i return q return ; Unable to close device
 Q 0
  
OPEN(DEVNAME,PAR) 
 //s ^test("opendev1",$i(^test("opendev1")))=$t_"*"_DEVNAME_"*"_$g(PAR)
 i $l(PAR,":")>1 S PARp1=$p(PAR,":",1),PARp2=$p(PAR,":",2),PARp3=$p(PAR,":",3) O DEVNAME:(PARp1:PARp2:PARp3):2   Q 4 ; Timeout
 i $l(PAR,":")'>1 O DEVNAME:(PAR):2 E  Q 4 ; Timeout
 //s ^test("opendev",$i(^test("opendev")))=$t_"*"_DEVNAME_"*"_$g(PAR)
 i $l(CFLAB(33)) u DEVNAME s zzz=$$SetIO^%NLS(CFLAB(33)) 
 ; dial in for Modem
 i DEST(6)="M",$$DIAL() Q 5 ; Cannot connect to a modem
 ; set up parameters for FAXing
 I $L(FAX) S FAX1=$P(FAX,$C(1),1),FAX2=$P(FAX,$C(1),2) D
 .n (DEVNAME,FAX1,FAX2)
 .i $$fax^LVBCOM03(FAX1,FAX2,,,"Y")
 .s PLIST=$g(PLIST) f j=1:1:PLIST U DEVNAME W $g(PLIST(j)),!
 Q 0
OPENERR C DEVNAME       
 Q 4 ;Unable to open device
  
CLOSE(DEVNAME) 
 ; hangup for Modem
 i DEST(6)="M",$$HANGUP() Q 5 ; Cannot close a connection
 C DEVNAME
 Q 0
 ;
 ; Scan report and interpret simple commands
PRINTI(ROWID,DEVNAME,SECTION) N LINE,LINECNT,DATA,PAGECNT
 U DEVNAME S (LINE,PAGECNT,HEADER)=0,LINECNT=9999
 F  S LINE=$O(^PR(ROWID,SECTION,LINE)) Q:LINE=""  D
 .S DATA=^(LINE) D
 ..I $E(DATA)="#" S HEADER=0,DATA=$e(DATA,2,999) q:'$l(DATA)
 ..I 'HEADER S HEADER=1 D PHEADER(ROWID,DEVNAME,"HDR",.LINECNT,.PAGECNT)
 ..I $E(DATA)="!",$G(STAT(4)),LINECNT>STAT(4) D PHEADER(ROWID,DEVNAME,"HDR",.LINECNT,.PAGECNT)
 .D PDATA(DATA,.LINECNT)
 i LINECNT w #
 Q
 ;
PHEADER(ROWID,DEVNAME,SECTION,LINECNT,PAGECNT)   ;
 S XXX=0 I $E($G(DATA),1,10)="~NO-HEADER" S XXX=1,DATA=$E(DATA,11,999)
 N LINE,DATA U DEVNAME
 S LINE=0,LINECNT=0,PAGECNT=PAGECNT+1
 I $D(first) W # h:$g(DEST(6))="M" 5
 S first=1
 I 'XXX D
 .I PAGECNT=1 F  S LINE=$O(^PR(ROWID,"H1",LINE)) Q:LINE=""  D PDATA(^(LINE),.LINECNT)
 .I PAGECNT>1 F  S LINE=$O(^PR(ROWID,"H2",LINE)) Q:LINE=""  D PDATA(^(LINE),.LINECNT)
 .F  S LINE=$O(^PR(ROWID,SECTION,LINE)) Q:LINE=""  D PDATA(^(LINE),.LINECNT)
 Q
 ;
PDATA(DATA,LINECNT)     n n
 ; Page throw does not force heading on next page
 i $e(DATA,1,5)="~PAGE" W PAGECNT q
 i $e(DATA)="#" w:LINECNT>0 # w $e(DATA,2,999) q
 i $e(DATA)="@" x $e(DATA,2,999) q
 i $e(DATA)="!" w $c(10,13),$e(DATA,2,999) s LINECNT=LINECNT+1 q
 i $e(DATA)="?",$tr($e(DATA,2,4)," ")?.3N s n=+$e(DATA,2,4) w ?n,$e(DATA,5,999) q
 i $e(DATA)="~",$L($G(DEST(12))) S X1=$P(DATA,"=",1),X2=$P(DATA,"=",2) D TRANSLATE(DEST(12),X1,X2) q
 W DATA
 q
 ;
 ; Scan report and send print image to device
PRINTM(ROWID,DEVNAME,SECTION)   ;
 N LINE,DATA
 U DEVNAME
 S LINE=0
 F  S LINE=$O(^PR(ROWID,SECTION,LINE)) Q:LINE=""  D
 . S DATA=^(LINE)
 . i $e(DATA,1,6)="~WAIT=" s wait=+$e(DATA,7,8) i wait c DEVNAME h wait o DEVNAME:(DEST(10)) u DEVNAME
 . W DATA
 Q
 ;
ADD(ROWID,SECTION,DATA) N LINECNT
 I $L(ROWID),$L(SECTION) D
 .S LINECNT=$o(^PR(ROWID,SECTION,""),-1)+1
 .i DATA="#",$g(^PR(ROWID,SECTION,LINECNT-1))="!" s LINECNT=LINECNT-1
 .S ^PR(ROWID,SECTION,LINECNT)=DATA
 Q
  
copies(rep,dest) ;get number of copies for report destination
 n (rep,dest)
 s found=0,copies=1
 s des=0 f  s des=$o(^PR(+rep,1,"DEST",des)) q:des=""  q:found  s s=^(des) d
 .i $p(s,"^")=dest s found=1,copies=$p(s,"^",2)
 s:'copies copies=1
 q copies
  
 ; translate var and value for destination into destination specific code
TRANSLATE(xDEST,xVAR,xVALUE) N (xDEST,xVAR,xVALUE,DEVNAME,file)
 u DEVNAME
 i $l(xDEST),$l(xVAR),$d(^SS("PRINT","TYPE",xDEST,xVAR)) d
 .s xx=^(xVAR)
 .f  q:xx'["xx"  s xx=$p(xx,"xx",1)_xVALUE_$p(xx,"xx",2,$l(xx,"xx"))
 .f  s xx1=$f(xx,"{"),xx2=$f(xx,"}") q:xx2'>xx1  d
 ..x "s var="_$e(xx,xx1,xx2-2)
 ..s xx=$e(xx,1,xx1-2)_var_$e(xx,xx2,$l(xx))
 .i xx["$SSPRINTV" d @($tr(xx,"$","^")_"("""_xVALUE_""")")
 .i xx'["$SSPRINTV" w xx
 q
  
DIAL() U DEVNAME S OK=5
 F  R R:2 Q:'$T  D LOG("<BEFORE SETM>"_R)
 W "AT&FE0V1Q0",*13 D LOG("ATZ") H 10
 F I=1:1:20 R R:2 D LOG("<AFTER ATZ - 1>"_R) Q:R["OK"  Q:R["ERROR"
 I R["OK" D
 .F  R R:2 Q:'$T  D LOG("<AFTER ATZ - 2>"_R)
 .W "ATDT",DEST(7),*13 D LOG("ATDT"_DEST(7)) H 20
 .F I=1:1:20 R R:2 D LOG("<AFTER DIAL - 1>"_R) Q:R["CONNECT"  Q:R["ERROR"
 .I R["CONNECT" D
 ..F  R R:2 Q:'$T  D LOG("<AFTER DIAL - 2>"_R)
 ..D LOG("<OK>") H 8 S OK=0
 Q OK
  
HANGUP() U DEVNAME W # S OK=5
 F  R R:5 Q:'$T  D LOG("<BEFORE +++>"_R)
 F Z=1:1:2 D  Q:R["OK"  H 2
 .W "+++" H 2 D LOG("<+++ - 1>")
 .F I=1:1:3 R R:3 D LOG("<AFTER +++ - 1>"_R) I R["OK" Q
 .I R'["OK" D
 ..F I=1:1:3 W "+" H 1
 ..D LOG("<+++ - 2>")
 ..F I=1:1:3 R R:3 D LOG("<AFTER +++ - 2>"_R) I R["OK" Q
 D LOG("<END>") F  R R:1 Q:'$T  D LOG("<AFTER END>"_R)
 H 3 W "ATH",*13 D LOG("<ATH>")
 F I=1:1:5 R R:5 D LOG("<AFTER ATH>"_R) I R["OK" Q
 I R["OK" D LOG("<HUP>") S OK=0
 E  D LOG("<NOHUP>")
 Q OK
  
LOG(R) S LOG=$O(^PR(ROWID,"LOG",""),-1)+1,^PR(ROWID,"LOG",LOG)=$H_" = "_R
 K ^PR(ROWID,"LOG",LOG-200)
 Q
 
 ; Get translated var and value for destination into destination specific code
getESEQ(xDEST,xVAR,xVALUE) 
 N (xDEST,xVAR,xVALUE,DEVNAME,file,PLIST,xx)
 S PLIST(1)="",PLIST=1
 i $l(xDEST),$l(xVAR),$d(^SS("PRINT","TYPE",xDEST,xVAR)) d
 .s xx=^(xVAR)
 .f  q:xx'["xx"  s xx=$p(xx,"xx",1)_xVALUE_$p(xx,"xx",2,$l(xx,"xx"))
 .f  s xx1=$f(xx,"{"),xx2=$f(xx,"}") q:xx2'>xx1  d
 ..x "s var="_$e(xx,xx1,xx2-2)
 ..s xx=$e(xx,1,xx1-2)_var_$e(xx,xx2,$l(xx))
 .i xx["$SSPRINTV"  s PLIST(1)="" ; This is NOT supported
 .i xx'["$SSPRINTV" s PLIST(1)=xx,PLIST=1
 q 0
  
]]></Routine>
</Export>
