<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="Client12.LIS.Client">
<Super>%RegisteredObject</Super>
<TimeCreated>63071,49764.016161</TimeCreated>

<Method name="SendResult">
<Description>
output : (0/1/2)^текст ошибки или сообщения (0-ошибка, 1 - все хорошо, 2 - результаты отвергаются, не надо переотправлять</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&pObjClient:Client12.LIS.ClientSoap,pOrderId:%String,pTestId:%String,pParameter:%String,pDateOfAuthorisation:%String,pValue:%String,pResultInfo:%String,pDoctorAuthorisation:%String,pComment:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set ok=1
    Try {
	    // объект для вызова WebService
	    if '$IsObject($get(pObjClient)) {
		  //set ^testCON($i(^testCON))=$h_"."_$p($zts,".",2)_"SendResult: pObjClient="_$g(pObjClient)
		  set ok=..CreateObjectClient(.pObjClient)
		  set eventDesc="Создание объекта для коннекта к вебсервису (Client12.LIS.ClientSoap)SR"
		  do ##class(Client12.MISExchange).LogEvent("CreateObjectClient",$select('ok:"error",1:""),eventDesc,ok,"","","") 
		  if 'ok {
			  set ok="0^"_$system.Status.GetErrorText(ok)
			  quit
		  }
	    } 
        
        Set ok=pObjClient.SendResult($get(pOrderId), $get(pTestId), $get(pParameter), $get(pDateOfAuthorisation), $get(pValue), $get(pResultInfo), $get(pDoctorAuthorisation), $get(pComment))
        }
    Catch {
        If $ZERROR["<ZSOAP>" {
            Set ok="0^"_$system.Status.GetErrorText($get(%objlasterror))
            } 
            Else {
            Set ok="0^"_$zerror
        }
    }
    Quit ok
]]></Implementation>
</Method>

<Method name="SendOrderStatus">
<Description>
output : (0/1/2)^текст ошибки или сообщения (0-ошибка, 1 - все хорошо, 2 - статус отвергается, но не надо переотправлять</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&pObjClient:Client12.LIS.ClientSoap,pOrderId:%String,pStatus:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set ok=1
    Try {
        // объект для вызова WebService
	    if '$IsObject($get(pObjClient)) {
		     //set ^testCON($i(^testCON))=$h_"."_$p($zts,".",2)_"SendOrderStatus : pObjClient="_$g(pObjClient)
		  set ok=..CreateObjectClient(.pObjClient)
		  set eventDesc="Создание объекта для коннекта к вебсервису (Client12.LIS.ClientSoap)SOS"
		  do ##class(Client12.MISExchange).LogEvent("CreateObjectClient",$select('ok:"error",1:""),eventDesc,ok,"","","") 
		  if 'ok {
			  set ok="0^"_$system.Status.GetErrorText(ok)
			  quit
		  }
	    } 
        Set ok=pObjClient.SendOrderStatus(pOrderId,pStatus)
        }
    Catch {
        If $ZERROR["<ZSOAP>" {
            Set ok="0^"_$system.Status.GetErrorText($get(%objlasterror))
            } 
            Else {
            Set ok="0^"_$zerror
        }
    }
    Quit ok
]]></Implementation>
</Method>

<Method name="SendMSG">
<Description>
output : (0/1/2)^текст ошибки или сообщения (0-ошибка, 1 - все хорошо, 2 - результаты отвергаются, не надо переотправлять</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&pObjClient:Client12.LIS.ClientSoap,pText:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set ok=1
    Try {
	    
	     // объект для вызова WebService
	    if '$IsObject($get(pObjClient)) {
		  //set ^testCON($i(^testCON))=$h_"."_$p($zts,".",2)_"SendMSG: pObjClient="_$g(pObjClient)
		  set ok=..CreateObjectClient(.pObjClient)
		  set eventDesc="Создание объекта для коннекта к вебсервису (Client12.LIS.ClientSoap)SR"
		  do ##class(Client12.MISExchange).LogEvent("CreateObjectClient",$select('ok:"error",1:""),eventDesc,ok,"","","") 
		  if 'ok {
			  set ok="0^"_$system.Status.GetErrorText(ok)
			  quit
		  }
	    } 
        
	    
	    if $get(pText)'="" {
	        Set ok=pObjClient.SendMSG(pText)
	        //s ^test(111,$i(^test(111)))=ok_"*"_pText
        }
    }
    Catch {
        If $ZERROR["<ZSOAP>" {
            Set ok="0^"_$system.Status.GetErrorText($get(%objlasterror))
            } 
            Else {
            Set ok="0^"_$zerror
        }
    }
    
    Quit ok
]]></Implementation>
</Method>

<Method name="SendCanceledTestSet">
<Description>
output : (0/1/2)^текст ошибки или сообщения (0-ошибка, 1 - все хорошо, 2 - результаты отвергаются, не надо переотправлять</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&pObjClient:Client12.LIS.ClientSoap,pOrderId:%String,pTestSet:%String,pReason:%String,pDateOfAuthorisation:%String,pDoctor:%String,pComment:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set ok=1
    Try {
	    // объект для вызова WebService
	    if '$IsObject($get(pObjClient)) {
		  //set ^testCON($i(^testCON))=$h_"."_$p($zts,".",2)_"SendResult: pObjClient="_$g(pObjClient)
		  set ok=..CreateObjectClient(.pObjClient)
		  set eventDesc="Создание объекта для коннекта к вебсервису (Client12.LIS.ClientSoap)SR"
		  do ##class(Client12.MISExchange).LogEvent("CreateObjectClient",$select('ok:"error",1:""),eventDesc,ok,"","","") 
		  if 'ok {
			  set ok="0^"_$system.Status.GetErrorText(ok)
			  quit
		  }
	    } 
        
        Set ok=pObjClient.SendCanceledTestSet($get(pOrderId), $get(pTestSet), $get(pReason), $get(pDateOfAuthorisation), $get(pDoctor), $get(pComment))
        }
    Catch {
        If $ZERROR["<ZSOAP>" {
            Set ok="0^"_$system.Status.GetErrorText($get(%objlasterror))
            } 
            Else {
            Set ok="0^"_$zerror
        }
    }
    Quit ok
]]></Implementation>
</Method>

<Method name="CreateObjectClient">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&pObjClient:Client12.LIS.ClientSoap]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pObjClient="",ok=1
    Try {
           Set pObjClient=##class(Client12.LIS.ClientSoap).%New()
	       set eventDesc="Создание объекта для коннекта к вебсервису (Client12.LIS.ClientSoap)COC"
		   do ##class(Client12.MISExchange).LogEvent("Client12.MISExchange2","",eventDesc,1,"","","") 
	       // это нужно, если используем доступ по паролю в web-приложении
	       set user="_SYSTEM" //"MISService"
           set pwd="SYS" //"MISService" 
           set utoken=##class(%SOAP.Security.UsernameToken).Create(user,pwd) 
           set ok=pObjClient.SecurityOut.AddSecurityElement(utoken)
           
           //set pObjClient.HttpProxyPort = "3333"
	       //set pObjClient.HttpProxyServer = "127.0.0.1"
        }
    Catch {
        If $ZERROR["<ZSOAP>" {
            Set ok=$get(%objlasterror)
            } 
            Else {
            Set ok=$$$ERROR($$$CacheError,$ZERROR)
        }
    }
    
    Quit ok
]]></Implementation>
</Method>
</Class>
</Export>
