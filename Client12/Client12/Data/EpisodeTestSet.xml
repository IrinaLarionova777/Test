<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="Client12.Data.EpisodeTestSet">
<ClassType>persistent</ClassType>
<ProcedureBlock>0</ProcedureBlock>
<SqlTableName>EpisodeTestSet</SqlTableName>
<StorageStrategy>SQLStorage</StorageStrategy>
<Super>%Persistent</Super>
<TimeCreated>63070,51662.978238</TimeCreated>

<Index name="RowIDBasedIDKeyIndex">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>TestSet,TestSetCounter</Properties>
<Unique>1</Unique>
</Index>

<Property name="EpisodeOrder">
<Description>
Client12_Episode Parent Reference</Description>
<Type>Client12.Data.EpisodeOrder</Type>
<Cardinality>parent</Cardinality>
<Inverse>EpisodeTestSet</Inverse>
<Relationship>1</Relationship>
<Required>1</Required>
<SqlFieldName>EpisodeOrder</SqlFieldName>
</Property>

<UDLText name="T">
<Content><![CDATA[
// Property TestSet As User.CTTestSet [ Required, SqlColumnNumber = 3, SqlFieldName = TestSet ];

]]></Content>
</UDLText>

<Property name="TestSet">
<Description>
TestSet</Description>
<Type>%String</Type>
<Required>1</Required>
<SqlColumnNumber>2</SqlColumnNumber>
<SqlFieldName>TestSet</SqlFieldName>
</Property>

<Property name="TestSetCounter">
<Description>
Test Counter</Description>
<Type>%String</Type>
<Required>1</Required>
<SqlColumnNumber>3</SqlColumnNumber>
<SqlFieldName>TestSetCounter</SqlFieldName>
<Parameter name="COLLATION" value="Exact"/>
<Parameter name="MAXLEN" value="100"/>
<Parameter name="TRUNCATE" value="0"/>
</Property>

<Property name="DateTimeOfAuthorisation">
<Type>%String</Type>
<Required>1</Required>
<SqlColumnNumber>4</SqlColumnNumber>
<SqlFieldName>DateTimeOfAuthorisation</SqlFieldName>
<Parameter name="COLLATION" value="Exact"/>
<Parameter name="MAXLEN" value="50"/>
<Parameter name="TRUNCATE" value="0"/>
</Property>

<Property name="Status">
<Description>
       0 - набор тестов не авторизован, или вообще нет результатов (такой статус может оказаться после деавторизации и после отмены причины отмены
       1 - набор тестов авторизован, и не отправлен в МИС
       2 - набор тестов авторизован, и отправлен в МИС
       3 - набор тестов отменен, Статус существовал, конда причины отмены не отправлялись в МИС
       4 - не используется (на тетсовой базу могут быть записи с таким статусом )
       5 - набор тестов отменен, и сообщение об отмене НЕ отправлено в МИС 
       6 - набор тестов отменен, и сообщение об отмене отправлено в МИС</Description>
<Type>%String</Type>
<Required>1</Required>
<SqlColumnNumber>5</SqlColumnNumber>
<SqlFieldName>Status</SqlFieldName>
<Parameter name="COLLATION" value="Exact"/>
<Parameter name="MAXLEN" value="2"/>
<Parameter name="TRUNCATE" value="0"/>
</Property>

<UDLText name="T">
<Content><![CDATA[
// Property Priority As %String(COLLATION = "Exact", DISPLAYLIST = ",CITO", MAXLEN = 15, TRUNCATE = 1, VALUELIST = "N,Y") [ Required, SqlColumnNumber = 6, SqlFieldName = Priority ];

]]></Content>
</UDLText>

<Property name="Priority">
<Type>%String</Type>
<Required>1</Required>
<SqlColumnNumber>6</SqlColumnNumber>
<SqlFieldName>Priority</SqlFieldName>
<Parameter name="COLLATION" value="Exact"/>
<Parameter name="MAXLEN" value="1"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="DateTimeOfSendToMIS">
<Type>%String</Type>
<SqlColumnNumber>7</SqlColumnNumber>
<SqlFieldName>DateTimeOfSendToMIS</SqlFieldName>
<Parameter name="COLLATION" value="Exact"/>
<Parameter name="MAXLEN" value="50"/>
<Parameter name="TRUNCATE" value="0"/>
</Property>

<UDLText name="T">
<Content><![CDATA[
/*
ClassMethod Insert(pEpisode As %String, pOrderId As %String, pTestSet As %String, pTestSetCounter As %String, pDateTimeOfAuthorisation As %String, pStatus As %String, pPriority As %String) As %Status
{
	set ok=$$$OK
	try {
		&sql(INSERT INTO Client12_Data.EpisodeTestSet (Episode,OrderId,TestSet,TestSetCounter,DateTimeOfAuthorisation,Status,Priority) VALUES (:pEpisode,:pOrderId,:pTestSet,:pTestSetCounter,:pDateTimeOfAuthorisation,:pStatus,:pPriority))
		if SQLCODE'=0 {
			set ok=$$$ERROR($$$SQLError,$g(%msg)_" "_$g(%mdiag(1)))
		}
	} catch(e) {
		set ok=e.AsStatus()
	}
	quit ok
}*/
]]></Content>
</UDLText>

<Method name="SaveStatus">
<ClassMethod>1</ClassMethod>
<FormalSpec>pEpisode:%String,pOrderId:%String,pTestSet:%String,pTestSetCounter:%String,pStatus:%String</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ok=$$$OK
	try {
		/*
		&sql(UPDATE Client12_Data.EpisodeTestSet (Status) VALUES (:pStatus) WHERE ((Episode=:pEpisode) and (TestSet=:pTestSet) and (TestSetCounter=:pTestSetCounter)))
		if SQLCODE'=0 {
			set ok=$$$ERROR($$$SQLError,$g(%msg)_" "_$g(%mdiag(1))_" "_$get(%objlasterror))
		}*/
		set id=pEpisode_"||"_pOrderId_"||"_pTestSet_"||"_pTestSetCounter
		/*
		S o="",idlog=$I(^log) 
		for  { 
		   S o=$zobjnext(o) Q:o=""  S ^log(idlog,"oref",o)="" 
		   S ^log(idlog,"$zobjcnt(o,1)",o)=$zobjcnt(o,1)
		   S ^log(idlog,"$zobjcnt(o,2)",o)=$zobjcnt(o,2)
		   S ^log(idlog,"$zobjcnt(o,3)",o)=$zobjcnt(o,3)
		}*/
		set obj=##class(Client12.Data.EpisodeTestSet).%OpenId(id)
		if $IsObject(obj) {
			set obj.Status=pStatus
			
			// Если отправлены все результаты понабору тестов, то записываем дату и время отправки (фактически дату и время проставления кода 2 или 6) 
			if (pStatus=2)||(pStatus=6) {
				set obj.DateTimeOfSendToMIS=$h
			}
			
			do obj.%SetModified(1)
			set ok=obj.%Save()
			kill obj
		} else {
		    set ok=$$$ERROR($$$GeneralError,"Не найден объект класса Client12.Data.EpisodeTestSet id="_id)
		}	
	} catch(e) {
		set ok=e.AsStatus()
	}
	quit ok
]]></Implementation>
</Method>

<Method name="SaveData">
<ClassMethod>1</ClassMethod>
<FormalSpec>pTestSetId:%String,pDateTimeOfAuthorisation:%String,pStatus:%String,pPriority:%String</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ok=$$$OK
	try {
		if ##class(Client12.Data.EpisodeTestSet).%ExistsId(pTestSetId) {
			set objts=##class(Client12.Data.EpisodeTestSet).%OpenId(pTestSetId,0)
		} else {
		    set objts=##class(Client12.Data.EpisodeTestSet).%New()
		    set ok=objts.EpisodeOrderSetObjectId($piece(pTestSetId,"||",1,2))
		  	if 'ok quit
		  	//set ok=objts.TestSetSetObjectId($piece(pTestSetId,"||",2))
		  	//if 'ok quit
		  	set objts.TestSet=$piece(pTestSetId,"||",3)
		  	set objts.TestSetCounter=$piece(pTestSetId,"||",4)
		}
		set objts.DateTimeOfAuthorisation=pDateTimeOfAuthorisation
		set objts.Status=pStatus
		// Если отправлены все результаты понабору тестов, то записываем дату и время отправки (фактически дату и время проставления кода 2 Или 6) 
		if (pStatus=2)||(pStatus=6) {
			set obj.DateTimeOfSendToMIS=$h
		}
		if $get(pPriority)'="" 	set objts.Priority=pPriority
		do objts.%SetModified(1)
		//s ^test(555,pTestSetId)=objts.DateTimeOfAuthorisation_"*"_objts.Status_"*"_objts.Priority
		set ok=objts.%Save()	
		
	} catch(e) {
		set ok=e.AsStatus()
	}
	quit ok
]]></Implementation>
</Method>

<Method name="SavePriority">
<ClassMethod>1</ClassMethod>
<FormalSpec>pTestSetId:%String,pPriority:%String</FormalSpec>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ok=$$$OK
	try {
		set obj=##class(Client12.Data.EpisodeTestSet).%OpenId(pTestSetId)
		if $IsObject(obj) {
			set obj.Priority=pPriority
			do obj.%SetModified(1)
			set ok=obj.%Save()
			kill obj
		} else {
		    set ok=$$$ERROR($$$GeneralError,"Не найден объект класса Client12.Data.EpisodeTestSet id="_id)
		}	
	} catch(e) {
		set ok=e.AsStatus()
	}
	quit ok
]]></Implementation>
</Method>

<Storage name="SQLStorage">
<Type>%CacheSQLStorage</Type>
<SqlRowIdName>Client12_EpisodeTestSet_RowID</SqlRowIdName>
<StreamLocation>^Client12.EpisodeTestSetStream</StreamLocation>
<SQLMap name="DataMaster">
<Type>data</Type>
<Global>^ECUBE</Global>
<Subscript name="1">
<Expression>"Epis"</Expression>
</Subscript>
<Subscript name="2">
<Expression>{Episode.Episode}</Expression>
</Subscript>
<Subscript name="3">
<Expression>{EpisodeOrder.OrderId}</Expression>
</Subscript>
<Subscript name="4">
<Expression>{TestSet}</Expression>
</Subscript>
<Subscript name="5">
<Expression>{TestSetCounter}</Expression>
</Subscript>
<RowIdSpec name="1">
<Expression>{L2}</Expression>
<Field>Episode.Episode</Field>
</RowIdSpec>
<RowIdSpec name="2">
<Expression>{L3}</Expression>
<Field>EpisodeOrder.OrderId</Field>
</RowIdSpec>
<RowIdSpec name="3">
<Expression>{L4}</Expression>
<Field>TestSet</Field>
</RowIdSpec>
<RowIdSpec name="4">
<Expression>{L5}</Expression>
<Field>TestSetCounter</Field>
</RowIdSpec>
<Data name="DateTimeOfAuthorisation">
<Piece>1</Piece>
</Data>
<Data name="DateTimeOfSendToMIS">
<Piece>4</Piece>
</Data>
<Data name="Priority">
<Piece>3</Piece>
</Data>
<Data name="Status">
<Piece>2</Piece>
</Data>
</SQLMap>
<SQLMap name="IndexToStatus">
<Type>index</Type>
<Global>^ECUBE</Global>
<Subscript name="1">
<Expression>"Status"</Expression>
</Subscript>
<Subscript name="2">
<Expression>{Status}</Expression>
</Subscript>
<Subscript name="3">
<Expression>{Priority}</Expression>
</Subscript>
<Subscript name="4">
<Expression>{DateTimeOfAuthorisation}</Expression>
</Subscript>
<Subscript name="5">
<Expression>{Episode.Episode}</Expression>
</Subscript>
<Subscript name="6">
<Expression>{EpisodeOrder.OrderId}</Expression>
</Subscript>
<Subscript name="7">
<Expression>{TestSet}</Expression>
</Subscript>
<Subscript name="8">
<Expression>{TestSetCounter}</Expression>
</Subscript>
<RowIdSpec name="1">
<Expression>{L5}</Expression>
<Field>Episode.Episode</Field>
</RowIdSpec>
<RowIdSpec name="2">
<Expression>{L6}</Expression>
<Field>EpisodeOrder.OrderId</Field>
</RowIdSpec>
<RowIdSpec name="3">
<Expression>{L7}</Expression>
<Field>TestSet</Field>
</RowIdSpec>
<RowIdSpec name="4">
<Expression>{L8}</Expression>
<Field>TestSetCounter</Field>
</RowIdSpec>
</SQLMap>
</Storage>
</Class>
</Export>
