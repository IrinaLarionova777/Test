<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="JasperWrap.menuTree">
<Super>%ZEN.Component.page</Super>
<TimeCreated>62725,42374.368715</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
//Parameter APPLICATION = "JasperWrap.Application";

]]></Content>
</UDLText>

<Parameter name="PAGENAME">
<Description>
Class name of application this page belongs to.
Displayed name of this page.</Description>
</Parameter>

<Parameter name="DOMAIN">
<Description>
Domain used for localization.</Description>
</Parameter>

<Property name="TypeUse">
<Description>
type of use : view menu or edit menu</Description>
<Type>%String</Type>
<InitialExpression>"view"</InitialExpression>
</Property>

<Property name="User">
<Description>
user</Description>
<Type>%String</Type>
</Property>

<Property name="URLJasper">
<Description>
класс запуска системы Jasper+Cache </Description>
<Type>%String</Type>
<InitialExpression>"JasperWrap.genReportJasper.cls"</InitialExpression>
</Property>

<XData name="Style">
<Description>
Этот блок Style содержит определение CSS стиля страницы.</Description>
<Data><![CDATA[
<style type="text/css">
.DynaTreeItem {
	<!--font-size: 12pt;-->
	background: #C5D6D6;
	color: black;
	<!--font-family: Verdana;-->
	font-family: "lucida sans unicode";
	font-size: 1.3em;
	font-weight: bold;
	padding: 5px;
}
/* style for title bar */
#title {
	background: #C5D6D6;
	color: black;
	font-family: Verdana;
	font-size: 1.5em;
	font-weight: bold;
	padding: 5px;
	border-bottom: 1px solid black;
	text-align: left;
}
</style>
]]></Data>
</XData>

<XData name="Contents">
<Description>
This XML block defines the contents of this page.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<page xmlns="http://www.intersystems.com/zen" title="">
<hidden id="currentMenuItem" value="" />
<hgroup>
<spacer width="10" />
<vgroup width="100%">
<label id="title" value="Меню отчетов" />
<hgroup>
<button id="newItem" caption="Создать"  onclick="zenPage.operationWithItem('new')" />
<button id="editItem" caption="Редактировать"  onclick="zenPage.operationWithItem('edit')" />
<button id="help" caption="Помощь"  onclick="zenPage.showHelp()" />
</hgroup>
<spacer height="10" />
<spacer width="10" />
<dynaTree id="tree"
OnGetTreeInfo="GetTreeInfo"  
showLines="true"
onclick="zenPage.treeClick(zenThis);" 
/>
</vgroup>
</hgroup>
</page>
]]></Data>
</XData>

<Method name="%OnBeforeCreatePage">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set ok=$$$OK
 try {
    // если совсем нет глобали с описанием мен, тосоздаем первое субменю
	 set glob=..GetGlobalOfMenu()
	 if glob'=""&&('$data(@glob)) {
	    set @glob@(1)="Отчеты"_$char(0,0,0)_"submenu"
	 }
     } catch(exception) 
  {
	   set ok=exception.AsStatus()	
  }
  quit ok
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set ok=$$$OK
 try {
	 // type of use menu : view or edit
	 set typeuse="view"
	 if $data(%request.Data("typeuse")) set typeuse=%request.Get("typeuse") 
	 if (typeuse="")||((typeuse'="view")&&(typeuse'="edit")) set typeuse="view"
	 set ..TypeUse=typeuse
	 
	 // user
	 set user=""
	 if $data(%request.Data("user")) set user=%request.Get("user") 
	 if $IsObject(%session) set %session.Data("curUser")=user
	 set ..User=user
	 
	 set ..URLJasper=..getURLJasper()
	 
	 if typeuse="view" {
		 set ..%GetComponentById("newItem").hidden=1
		 set ..%GetComponentById("editItem").hidden=1
		 set ..%GetComponentById("help").hidden=1
	 }
  } catch(exception) 
  {
	   set ok=exception.AsStatus()	
  }
  quit ok
]]></Implementation>
</Method>

<Method name="GetTreeInfo">
<FormalSpec><![CDATA[pRoot:%String,*pTree,&pParms]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set ok=$$$OK
 try {  
    kill pTree
    set countNode=0
    kill vsp
    set ref=..GetGlobalOfMenu() // глобаль с описанием меню
    set len=$length(ref) if $extract(ref,len)=")" set len=len-1
	set pattern=$extract(ref,1,len)
    set id=$query(@ref@("")) 
    if id'=""&&($extract(id,1,len)=pattern) {
	        do ..node(id, .countNode, .pTree, .vsp )
	        for {
		        set id=$query(@id) if id=""||($extract(id,1,len)'=pattern) quit
		        do ..node(id, .countNode, .pTree, .vsp )
            }
            //k ^test("pTree") m ^test("pTree")=pTree
     }
   	} catch(exception) 
  {
	   set ok=exception.AsStatus()	
  }
  quit ok
]]></Implementation>
</Method>

<Method name="node">
<FormalSpec><![CDATA[id:%String,&countNode:%String,&pTree:%String,&vsp:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set ok=$$$OK
 try {  
        set info=$get(@id)
        set titleItem=$piece(info,$char(0),1)
        set nameJRXML=$piece(info,$char(0),2)
        set desc=$piece(info,$char(0),3)
        set typeItem=$piece(info,$char(0),4)
        set typeItem=$select($data(@id)'<10:"submenu",1:"item") // иначе пустое submenu является ссылкой на все дерево
        set countNode=countNode+1
	    set nameparent=$select($length(id,",")>1:$piece(id,",",1,$length(id,",")-1),1:$piece(id,"(",1))
	    if $find(nameparent,"(")&&($extract(nameparent,$length(nameparent))'=")") set nameparent=nameparent_")"
	    set levelParent=+$get(vsp(nameparent))
	    set vsp(id)=countNode
        Set pTree(levelParent,"ch",countNode) = ""
        set url="" //$select(typeItem="item":..getURLreportS(nameJRXML),1:"")
        Set pTree(countNode) = $LB(titleItem,nameJRXML_$char(1)_id_$char(1)_nameparent_$char(1)_typeItem,$select(typeItem="item":0,1:1),url,1,,desc)

   	} catch(exception) 
  {
	   set ok=exception.AsStatus()	
  }
  quit ok
]]></Implementation>
</Method>

<Method name="treeClick">
<Description>
treeClick</Description>
<FormalSpec>tree</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	tree.setNodeStyle(tree.getSelectedIndex(),'color: red;');
	var typeuse=this.TypeUse;
	//alert(typeuse);
	if (typeuse=="edit") {
		var currentMenuItem=this.getComponentById('currentMenuItem');
        var prevIndex=currentMenuItem.value; 		
        if (prevIndex+''!='') {
	        tree.setNodeStyle(prevIndex,'color: green;');
        } 
        var curIndex=tree.getSelectedIndex();
        
        tree.setNodeStyle(curIndex,'color: red;');
        currentMenuItem.value=curIndex;
        //alert(this.getComponentById('currentMenuItem').value);
	} 
	else {
		var value=tree.getProperty('value');
		var splitvalue=value.split(String.fromCharCode(1));
		var nameJRXML="";
		if (splitvalue.length>0) {
			nameJRXML=splitvalue[0];
		}
		if (splitvalue.length>2) {
			typeItem=splitvalue[3];
		}
		if (typeItem=="item") {
			var url=zenPage.getURLreport(nameJRXML);
		    if ((url != null)&&(url != '')) {
			    window.open(url); //,'_newtab');
			    //alert("ggg");
		    }
		} 
	}
]]></Implementation>
</Method>

<Method name="operationWithItem">
<FormalSpec>operation</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var currentMenuItem=this.getComponentById("currentMenuItem").value;
	currentMenuItem=currentMenuItem+'';  // надо превратить число в строку, чтобы работала проверка на ''
	if ((currentMenuItem==null)||(currentMenuItem==''))
	 {
		if (operation=="edit") alert("Выберите пункт меню для редактирования");
		if (operation=="new") alert("Выберите субменю или элемент меню, после которого вставить новый элемент");
		return;
	}
	var tree=this.getComponentById("tree");
	var value=tree.getNodeValue(currentMenuItem);
	var glob="";
	if (value != null) {
		var splitvalue=value.split(String.fromCharCode(1));
		if (splitvalue.length>1) glob=splitvalue[1];
	}
	// если operation="edit" or "new" - окно
	var url="JasperWrap.menuTreeEdit.cls?glob="+glob+"&operation="+operation;
	//zenPage.gotoPage(url);
	zenPage.launchPopupWindow(
	    zenLink(url),
	    'Редактировать запись',
	    'status,scrollbars,resizable,width=1000,height=550'
	    ,null,this);
	tree.refreshContents();
]]></Implementation>
</Method>

<Method name="showHelp">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var help='';
	var delimeter="\n"
	help=help+""+delimeter;
	help=help+"Создания нового элемента меню или субменю."+delimeter;
	help=help+" 1 способ: Отметить субменю (клик на субменю), в которое хотим вставить новый элемент, затем нажать кнопку 'Создать'. Новый элемент вставится последним в выбранном субменю."+delimeter;
 	help=help+" 2 способ: Отметить элемент меню (клик на элементе), после которого хотим вставить новый элемент, затем нажать кнопку 'Создать'. Новый элемент вставится после выбранного элемента."+delimeter;
 	help=help+""+delimeter;
 	help=help+"Редактирование элемента меню или субменю."+delimeter;
 	help=help+" Отметить элемент меню или субменю, затем нажать кнопку 'Редактировать'."+delimeter;
 	help=help+""+delimeter;
 	help=help+"Удаление элемента меню или субменю."+delimeter;
 	help=help+" Отметить элемент меню или субменю, затем нажать кнопку 'Редактировать'. В появившемся окне нажать кнопку 'Удалить'."+delimeter;

 	alert(help);
]]></Implementation>
</Method>

<Method name="GetGlobalOfMenu">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  //quit $name(^menu)
  quit $name(^Settings("Jasper","Menu"))
]]></Implementation>
</Method>

<Method name="getURLreport">
<FormalSpec>nameJRXML:%String</FormalSpec>
<Language>javascript</Language>
<ReturnType>%String</ReturnType>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var url='';
	if ((nameJRXML!=null)&&(nameJRXML!='')) {
	   url=zenPage.URLJasper+"?user="+zenPage.User+"&fileJRXML="+nameJRXML+".jrxml"+"&reportKey="+nameJRXML
	}
	return url;
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
Method getURLreportS(nameJRXML As %String) As %String 
{
	set nameJRXML=$get(nameJRXML)
	quit ..URLJasper_"?user="_..User_"&fileJRXML="_nameJRXML_".jrxml"_"&reportKey="_nameJRXML
}
*/
]]></Content>
</UDLText>

<Method name="getURLJasper">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit "JasperWrap.genReportJasper.cls"
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^JasperWrap.menuTreeD</DataLocation>
<DefaultData>menuTreeDefaultData</DefaultData>
<IdLocation>^JasperWrap.menuTreeD</IdLocation>
<IndexLocation>^JasperWrap.menuTreeI</IndexLocation>
<StreamLocation>^JasperWrap.menuTreeS</StreamLocation>
<Data name="menuTreeDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>typeUse</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
