<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24" zv="Cache for Windows (x86-64) 2010.2.5 (Build 902U)" ts="2012-02-24 18:18:35">
<Class name="java.awt.Color">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.awt.Paint,java.io.Serializable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.Color
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.Color",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getRGB">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRGB
	Quit ..%Execute0R(..Gateway,"getRGB",%this)
]]></Implementation>
</Method>

<Method name="getHSBColor">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHSBColor
	Quit ..%Execute3R(p0,"getHSBColor","java.awt.Color",p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getRGBColorComponents">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRGBColorComponents
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getRGBColorComponents",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[F",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getColor">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColor
	Quit:$D(p2) ..%ExecuteOLR2(p0,"getColor","java.awt.Color",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"getColor","java.awt.Color",p1)
	Quit ..%ExecuteOLR0(p0,"getColor","java.awt.Color")
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getColorComponents">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColorComponents
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getColorComponents",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getColorComponents",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getColorComponents",%this)
]]></Implementation>
</Method>

<Method name="getComponents">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getComponents
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getComponents",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getComponents",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getComponents",%this)
]]></Implementation>
</Method>

<Method name="RGBtoHSB">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: RGBtoHSB
	Do ..%PreInvoke(p0,"java.awt.Color")
	Set x=$zobjexport("RGBtoHSB",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Do ..%WriteArray(p0,"[F",p4)
	Set x=..%GetObject(p0)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	Do ..%PostInvoke(p0)
	Quit x
]]></Implementation>
</Method>

<Method name="getAlpha">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAlpha
	Quit ..%Execute0R(..Gateway,"getAlpha",%this)
]]></Implementation>
</Method>

<Method name="decode">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: decode
	Quit ..%Execute1R(p0,"decode","java.awt.Color",p1)
]]></Implementation>
</Method>

<Method name="getBlue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBlue
	Quit ..%Execute0R(..Gateway,"getBlue",%this)
]]></Implementation>
</Method>

<Method name="getRed">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRed
	Quit ..%Execute0R(..Gateway,"getRed",%this)
]]></Implementation>
</Method>

<Method name="getGreen">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGreen
	Quit ..%Execute0R(..Gateway,"getGreen",%this)
]]></Implementation>
</Method>

<Method name="getColorSpace">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColorSpace
	Quit ..%Execute0R(..Gateway,"getColorSpace",%this)
]]></Implementation>
</Method>

<Method name="createContext">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createContext
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("createContext",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="darker">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: darker
	Quit ..%Execute0R(..Gateway,"darker",%this)
]]></Implementation>
</Method>

<Method name="getTransparency">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTransparency
	Quit ..%Execute0R(..Gateway,"getTransparency",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="HSBtoRGB">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: HSBtoRGB
	Quit ..%Execute3R(p0,"HSBtoRGB","java.awt.Color",p1,p2,p3)
]]></Implementation>
</Method>

<Method name="brighter">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: brighter
	Quit ..%Execute0R(..Gateway,"brighter",%this)
]]></Implementation>
</Method>

<Method name="getRGBComponents">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRGBComponents
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getRGBComponents",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[F",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Parameter name="lightGray">
<Type>STRING</Type>
<Default>java.awt.Color[r=192,g=192,b=192]</Default>
</Parameter>

<Parameter name="LIGHTuGRAY">
<Type>STRING</Type>
<Default>java.awt.Color[r=192,g=192,b=192]</Default>
</Parameter>

<Parameter name="darkGray">
<Type>STRING</Type>
<Default>java.awt.Color[r=64,g=64,b=64]</Default>
</Parameter>

<Parameter name="DARKuGRAY">
<Type>STRING</Type>
<Default>java.awt.Color[r=64,g=64,b=64]</Default>
</Parameter>
</Class>


<Class name="java.awt.Dimension">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.awt.geom.Dimension2D,java.io.Serializable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.Dimension
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.Dimension",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getHeight">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeight
	Quit ..%Execute0R(..Gateway,"getHeight",%this)
]]></Implementation>
</Method>

<Method name="setSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSize
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setSize",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setSize",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setSize",%this) Quit
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getWidth">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWidth
	Quit ..%Execute0R(..Gateway,"getWidth",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSize
	Quit ..%Execute0R(..Gateway,"getSize",%this)
]]></Implementation>
</Method>

<Method name="setwidth">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"setwidth",p1,%this)
]]></Implementation>
</Method>

<Method name="setheight">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"setheight",p1,%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.Paint">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.awt.Transparency</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="createContext">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createContext
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("createContext",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.PaintContext">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getColorModel">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColorModel
	Quit ..%Execute0R(..Gateway,"getColorModel",%this)
]]></Implementation>
</Method>

<Method name="dispose">
<Implementation><![CDATA[
	#; Corresponding Java method: dispose
	Do ..%Execute0(..Gateway,"dispose",%this)
]]></Implementation>
</Method>

<Method name="getRaster">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRaster
	Quit ..%Execute4R(..Gateway,"getRaster",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.Point">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.awt.geom.Point2D,java.io.Serializable</Super>
<TimeChanged>62511,62358</TimeChanged>
<TimeCreated>62511,62358</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.Point
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.Point",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="setLocation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLocation
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setLocation",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setLocation",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setLocation",%this) Quit
]]></Implementation>
</Method>

<Method name="getLocation">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLocation
	Quit ..%Execute0R(..Gateway,"getLocation",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getY
	Quit ..%Execute0R(..Gateway,"getY",%this)
]]></Implementation>
</Method>

<Method name="getX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getX
	Quit ..%Execute0R(..Gateway,"getX",%this)
]]></Implementation>
</Method>

<Method name="translate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: translate
	Do ..%Execute2(..Gateway,"translate",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="move">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: move
	Do ..%Execute2(..Gateway,"move",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setx">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"setx",p1,%this)
]]></Implementation>
</Method>

<Method name="sety">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"sety",p1,%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.Rectangle">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.awt.geom.Rectangle2D,java.awt.Shape,java.io.Serializable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.Rectangle
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.Rectangle",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="setRect">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRect
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setRect",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setRect",%this) Quit
]]></Implementation>
</Method>

<Method name="reshape">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: reshape
	Do ..%Execute4(..Gateway,"reshape",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="createUnion">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createUnion
	Quit ..%Execute1R(..Gateway,"createUnion",%this,p0)
]]></Implementation>
</Method>

<Method name="resize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: resize
	Do ..%Execute2(..Gateway,"resize",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setLocation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLocation
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setLocation",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setLocation",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setLocation",%this) Quit
]]></Implementation>
</Method>

<Method name="outcode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: outcode
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"outcode",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"outcode",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="getHeight">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeight
	Quit ..%Execute0R(..Gateway,"getHeight",%this)
]]></Implementation>
</Method>

<Method name="intersects">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersects
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"intersects",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"intersects",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"intersects",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"intersects",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"intersects",%this)
]]></Implementation>
</Method>

<Method name="getBounds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds
	Quit ..%Execute0R(..Gateway,"getBounds",%this)
]]></Implementation>
</Method>

<Method name="getWidth">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWidth
	Quit ..%Execute0R(..Gateway,"getWidth",%this)
]]></Implementation>
</Method>

<Method name="getSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSize
	Quit ..%Execute0R(..Gateway,"getSize",%this)
]]></Implementation>
</Method>

<Method name="move">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: move
	Do ..%Execute2(..Gateway,"move",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="intersection">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersection
	Quit ..%Execute1R(..Gateway,"intersection",%this,p0)
]]></Implementation>
</Method>

<Method name="setSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSize
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setSize",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setSize",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setSize",%this) Quit
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="setBounds">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBounds
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setBounds",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setBounds",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setBounds",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setBounds",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setBounds",%this) Quit
]]></Implementation>
</Method>

<Method name="getLocation">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLocation
	Quit ..%Execute0R(..Gateway,"getLocation",%this)
]]></Implementation>
</Method>

<Method name="createIntersection">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createIntersection
	Quit ..%Execute1R(..Gateway,"createIntersection",%this,p0)
]]></Implementation>
</Method>

<Method name="grow">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: grow
	Do ..%Execute2(..Gateway,"grow",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="inside">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: inside
	Quit ..%Execute2R(..Gateway,"inside",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getY
	Quit ..%Execute0R(..Gateway,"getY",%this)
]]></Implementation>
</Method>

<Method name="getX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getX
	Quit ..%Execute0R(..Gateway,"getX",%this)
]]></Implementation>
</Method>

<Method name="getBounds2D">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds2D
	Quit ..%Execute0R(..Gateway,"getBounds2D",%this)
]]></Implementation>
</Method>

<Method name="translate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: translate
	Do ..%Execute2(..Gateway,"translate",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="setx">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"setx",p1,%this)
]]></Implementation>
</Method>

<Method name="sety">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"sety",p1,%this)
]]></Implementation>
</Method>

<Method name="setwidth">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"setwidth",p1,%this)
]]></Implementation>
</Method>

<Method name="setheight">
<FormalSpec>p1:%Library.ObjectHandle</FormalSpec>
<Implementation><![CDATA[	Do ..%ExecuteSetter(..Gateway,"setheight",p1,%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.RenderingHints">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.util.Map,java.lang.Cloneable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.RenderingHints
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.RenderingHints",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit ..%Execute2R(..Gateway,"put",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="entrySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: entrySet
	Quit ..%Execute0R(..Gateway,"entrySet",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="keySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keySet
	Quit ..%Execute0R(..Gateway,"keySet",%this)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Do ..%Execute1(..Gateway,"add",%this,p0)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="containsKey">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsKey
	Quit ..%Execute1R(..Gateway,"containsKey",%this,p0)
]]></Implementation>
</Method>

<Method name="values">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(..Gateway,"values",%this)
]]></Implementation>
</Method>

<Method name="containsValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsValue
	Quit ..%Execute1R(..Gateway,"containsValue",%this,p0)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="putAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: putAll
	Do ..%Execute1(..Gateway,"putAll",%this,p0)
]]></Implementation>
</Method>

<Parameter name="KEYuANTIALIASING">
<Type>STRING</Type>
<Default>Global antialiasing enable key</Default>
</Parameter>

<Parameter name="VALUEuANTIALIASuON">
<Type>STRING</Type>
<Default>Antialiased rendering mode</Default>
</Parameter>

<Parameter name="VALUEuANTIALIASuOFF">
<Type>STRING</Type>
<Default>Nonantialiased rendering mode</Default>
</Parameter>

<Parameter name="VALUEuANTIALIASuDEFAULT">
<Type>STRING</Type>
<Default>Default antialiasing rendering mode</Default>
</Parameter>

<Parameter name="KEYuRENDERING">
<Type>STRING</Type>
<Default>Global rendering quality key</Default>
</Parameter>

<Parameter name="VALUEuRENDERuSPEED">
<Type>STRING</Type>
<Default>Fastest rendering methods</Default>
</Parameter>

<Parameter name="VALUEuRENDERuQUALITY">
<Type>STRING</Type>
<Default>Highest quality rendering methods</Default>
</Parameter>

<Parameter name="VALUEuRENDERuDEFAULT">
<Type>STRING</Type>
<Default>Default rendering methods</Default>
</Parameter>

<Parameter name="KEYuDITHERING">
<Type>STRING</Type>
<Default>Dithering quality key</Default>
</Parameter>

<Parameter name="VALUEuDITHERuDISABLE">
<Type>STRING</Type>
<Default>Nondithered rendering mode</Default>
</Parameter>

<Parameter name="VALUEuDITHERuENABLE">
<Type>STRING</Type>
<Default>Dithered rendering mode</Default>
</Parameter>

<Parameter name="VALUEuDITHERuDEFAULT">
<Type>STRING</Type>
<Default>Default dithering mode</Default>
</Parameter>

<Parameter name="KEYuTEXTuANTIALIASING">
<Type>STRING</Type>
<Default>Text-specific antialiasing enable key</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuON">
<Type>STRING</Type>
<Default>Antialiased text mode</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuOFF">
<Type>STRING</Type>
<Default>Nonantialiased text mode</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuDEFAULT">
<Type>STRING</Type>
<Default>Default antialiasing text mode</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuGASP">
<Type>STRING</Type>
<Default>gasp antialiasing text mode</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuLCDuHRGB">
<Type>STRING</Type>
<Default>LCD HRGB antialiasing text mode</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuLCDuHBGR">
<Type>STRING</Type>
<Default>LCD HBGR antialiasing text mode</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuLCDuVRGB">
<Type>STRING</Type>
<Default>LCD VRGB antialiasing text mode</Default>
</Parameter>

<Parameter name="VALUEuTEXTuANTIALIASuLCDuVBGR">
<Type>STRING</Type>
<Default>LCD VBGR antialiasing text mode</Default>
</Parameter>

<Parameter name="KEYuTEXTuLCDuCONTRAST">
<Type>STRING</Type>
<Default>Text-specific LCD contrast key</Default>
</Parameter>

<Parameter name="KEYuFRACTIONALMETRICS">
<Type>STRING</Type>
<Default>Fractional metrics enable key</Default>
</Parameter>

<Parameter name="VALUEuFRACTIONALMETRICSuOFF">
<Type>STRING</Type>
<Default>Integer text metrics mode</Default>
</Parameter>

<Parameter name="VALUEuFRACTIONALMETRICSuON">
<Type>STRING</Type>
<Default>Fractional text metrics mode</Default>
</Parameter>

<Parameter name="VALUEuFRACTIONALMETRICSuDEFAULT">
<Type>STRING</Type>
<Default>Default fractional text metrics mode</Default>
</Parameter>

<Parameter name="KEYuINTERPOLATION">
<Type>STRING</Type>
<Default>Image interpolation method key</Default>
</Parameter>

<Parameter name="VALUEuINTERPOLATIONuBILINEAR">
<Type>STRING</Type>
<Default>Bilinear image interpolation mode</Default>
</Parameter>

<Parameter name="VALUEuINTERPOLATIONuBICUBIC">
<Type>STRING</Type>
<Default>Bicubic image interpolation mode</Default>
</Parameter>

<Parameter name="KEYuALPHAuINTERPOLATION">
<Type>STRING</Type>
<Default>Alpha blending interpolation method key</Default>
</Parameter>

<Parameter name="VALUEuALPHAuINTERPOLATIONuSPEED">
<Type>STRING</Type>
<Default>Fastest alpha blending methods</Default>
</Parameter>

<Parameter name="KEYuCOLORuRENDERING">
<Type>STRING</Type>
<Default>Color rendering quality key</Default>
</Parameter>

<Parameter name="VALUEuCOLORuRENDERuSPEED">
<Type>STRING</Type>
<Default>Fastest color rendering mode</Default>
</Parameter>

<Parameter name="VALUEuCOLORuRENDERuQUALITY">
<Type>STRING</Type>
<Default>Highest quality color rendering mode</Default>
</Parameter>

<Parameter name="VALUEuCOLORuRENDERuDEFAULT">
<Type>STRING</Type>
<Default>Default color rendering mode</Default>
</Parameter>

<Parameter name="KEYuSTROKEuCONTROL">
<Type>STRING</Type>
<Default>Stroke normalization control key</Default>
</Parameter>

<Parameter name="VALUEuSTROKEuDEFAULT">
<Type>STRING</Type>
<Default>Default stroke normalization</Default>
</Parameter>

<Parameter name="VALUEuSTROKEuNORMALIZE">
<Type>STRING</Type>
<Default>Normalize strokes for consistent rendering</Default>
</Parameter>

<Parameter name="VALUEuSTROKEuPURE">
<Type>STRING</Type>
<Default>Pure stroke conversion for accurate paths</Default>
</Parameter>
</Class>


<Class name="java.awt.Shape">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="intersects">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersects
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"intersects",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"intersects",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"intersects",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"intersects",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"intersects",%this)
]]></Implementation>
</Method>

<Method name="getBounds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds
	Quit ..%Execute0R(..Gateway,"getBounds",%this)
]]></Implementation>
</Method>

<Method name="getBounds2D">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds2D
	Quit ..%Execute0R(..Gateway,"getBounds2D",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"contains",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"contains",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"contains",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"contains",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"contains",%this)
]]></Implementation>
</Method>

<Method name="getPathIterator">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPathIterator
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getPathIterator",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getPathIterator",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getPathIterator",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.Transparency">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,62358</TimeChanged>
<TimeCreated>62511,62358</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getTransparency">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTransparency
	Quit ..%Execute0R(..Gateway,"getTransparency",%this)
]]></Implementation>
</Method>

<Parameter name="OPAQUE">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="BITMASK">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="TRANSLUCENT">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>
</Class>


<Class name="java.awt.color.ColorSpace">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,62358</TimeChanged>
<TimeCreated>62511,62358</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getNumComponents">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumComponents
	Quit ..%Execute0R(..Gateway,"getNumComponents",%this)
]]></Implementation>
</Method>

<Method name="getType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getType
	Quit ..%Execute0R(..Gateway,"getType",%this)
]]></Implementation>
</Method>

<Method name="getMinValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinValue
	Quit ..%Execute1R(..Gateway,"getMinValue",%this,p0)
]]></Implementation>
</Method>

<Method name="getMaxValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxValue
	Quit ..%Execute1R(..Gateway,"getMaxValue",%this,p0)
]]></Implementation>
</Method>

<Method name="fromCIEXYZ">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: fromCIEXYZ
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("fromCIEXYZ",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[F",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute1R(..Gateway,"getName",%this,p0)
]]></Implementation>
</Method>

<Method name="fromRGB">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: fromRGB
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("fromRGB",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[F",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="toRGB">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toRGB
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("toRGB",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[F",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="toCIEXYZ">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toCIEXYZ
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("toCIEXYZ",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[F",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInstance
	Quit ..%Execute1R(p0,"getInstance","java.awt.color.ColorSpace",p1)
]]></Implementation>
</Method>

<Method name="isCSusRGB">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCS_sRGB
	Quit ..%Execute0R(..Gateway,"isCS_sRGB",%this)
]]></Implementation>
</Method>

<Parameter name="TYPEuXYZ">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="TYPEuLab">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="TYPEuLuv">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="TYPEuYCbCr">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="TYPEuYxy">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="TYPEuRGB">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="TYPEuGRAY">
<Type>INTEGER</Type>
<Default>6</Default>
</Parameter>

<Parameter name="TYPEuHSV">
<Type>INTEGER</Type>
<Default>7</Default>
</Parameter>

<Parameter name="TYPEuHLS">
<Type>INTEGER</Type>
<Default>8</Default>
</Parameter>

<Parameter name="TYPEuCMYK">
<Type>INTEGER</Type>
<Default>9</Default>
</Parameter>

<Parameter name="TYPEuCMY">
<Type>INTEGER</Type>
<Default>11</Default>
</Parameter>

<Parameter name="TYPEu2CLR">
<Type>INTEGER</Type>
<Default>12</Default>
</Parameter>

<Parameter name="TYPEu3CLR">
<Type>INTEGER</Type>
<Default>13</Default>
</Parameter>

<Parameter name="TYPEu4CLR">
<Type>INTEGER</Type>
<Default>14</Default>
</Parameter>

<Parameter name="TYPEu5CLR">
<Type>INTEGER</Type>
<Default>15</Default>
</Parameter>

<Parameter name="TYPEu6CLR">
<Type>INTEGER</Type>
<Default>16</Default>
</Parameter>

<Parameter name="TYPEu7CLR">
<Type>INTEGER</Type>
<Default>17</Default>
</Parameter>

<Parameter name="TYPEu8CLR">
<Type>INTEGER</Type>
<Default>18</Default>
</Parameter>

<Parameter name="TYPEu9CLR">
<Type>INTEGER</Type>
<Default>19</Default>
</Parameter>

<Parameter name="TYPEuACLR">
<Type>INTEGER</Type>
<Default>20</Default>
</Parameter>

<Parameter name="TYPEuBCLR">
<Type>INTEGER</Type>
<Default>21</Default>
</Parameter>

<Parameter name="TYPEuCCLR">
<Type>INTEGER</Type>
<Default>22</Default>
</Parameter>

<Parameter name="TYPEuDCLR">
<Type>INTEGER</Type>
<Default>23</Default>
</Parameter>

<Parameter name="TYPEuECLR">
<Type>INTEGER</Type>
<Default>24</Default>
</Parameter>

<Parameter name="TYPEuFCLR">
<Type>INTEGER</Type>
<Default>25</Default>
</Parameter>

<Parameter name="CSusRGB">
<Type>INTEGER</Type>
<Default>1000</Default>
</Parameter>

<Parameter name="CSuLINEARuRGB">
<Type>INTEGER</Type>
<Default>1004</Default>
</Parameter>

<Parameter name="CSuCIEXYZ">
<Type>INTEGER</Type>
<Default>1001</Default>
</Parameter>

<Parameter name="CSuPYCC">
<Type>INTEGER</Type>
<Default>1002</Default>
</Parameter>

<Parameter name="CSuGRAY">
<Type>INTEGER</Type>
<Default>1003</Default>
</Parameter>
</Class>


<Class name="java.awt.geom.AffineTransform">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Cloneable,java.io.Serializable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.geom.AffineTransform
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.geom.AffineTransform",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Do:$D(p6) ..%OverloadWrite(..Gateway,p6)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="scale">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: scale
	Do ..%Execute2(..Gateway,"scale",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="rotate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: rotate
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"rotate",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"rotate",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"rotate",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"rotate",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"rotate",%this) Quit
]]></Implementation>
</Method>

<Method name="getScaleInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getScaleInstance
	Quit ..%Execute2R(p0,"getScaleInstance","java.awt.geom.AffineTransform",p1,p2)
]]></Implementation>
</Method>

<Method name="setToRotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setToRotation
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setToRotation",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setToRotation",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setToRotation",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setToRotation",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setToRotation",%this) Quit
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getRotateInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRotateInstance
	Quit:$D(p4) ..%ExecuteOLR4(p0,"getRotateInstance","java.awt.geom.AffineTransform",p1,p2,p3,p4)
	Quit:$D(p3) ..%ExecuteOLR3(p0,"getRotateInstance","java.awt.geom.AffineTransform",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"getRotateInstance","java.awt.geom.AffineTransform",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"getRotateInstance","java.awt.geom.AffineTransform",p1)
	Quit ..%ExecuteOLR0(p0,"getRotateInstance","java.awt.geom.AffineTransform")
]]></Implementation>
</Method>

<Method name="getScaleY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getScaleY
	Quit ..%Execute0R(..Gateway,"getScaleY",%this)
]]></Implementation>
</Method>

<Method name="getScaleX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getScaleX
	Quit ..%Execute0R(..Gateway,"getScaleX",%this)
]]></Implementation>
</Method>

<Method name="createTransformedShape">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createTransformedShape
	Quit ..%Execute1R(..Gateway,"createTransformedShape",%this,p0)
]]></Implementation>
</Method>

<Method name="concatenate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: concatenate
	Do ..%Execute1(..Gateway,"concatenate",%this,p0)
]]></Implementation>
</Method>

<Method name="invert">
<Implementation><![CDATA[
	#; Corresponding Java method: invert
	Do ..%Execute0(..Gateway,"invert",%this)
]]></Implementation>
</Method>

<Method name="transform">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: transform
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("transform",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="setToTranslation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setToTranslation
	Do ..%Execute2(..Gateway,"setToTranslation",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getType
	Quit ..%Execute0R(..Gateway,"getType",%this)
]]></Implementation>
</Method>

<Method name="deltaTransform">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: deltaTransform
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("deltaTransform",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getDeterminant">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeterminant
	Quit ..%Execute0R(..Gateway,"getDeterminant",%this)
]]></Implementation>
</Method>

<Method name="setToShear">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setToShear
	Do ..%Execute2(..Gateway,"setToShear",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="isIdentity">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isIdentity
	Quit ..%Execute0R(..Gateway,"isIdentity",%this)
]]></Implementation>
</Method>

<Method name="inverseTransform">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: inverseTransform
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("inverseTransform",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="getQuadrantRotateInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getQuadrantRotateInstance
	Quit:$D(p3) ..%ExecuteOLR3(p0,"getQuadrantRotateInstance","java.awt.geom.AffineTransform",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"getQuadrantRotateInstance","java.awt.geom.AffineTransform",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"getQuadrantRotateInstance","java.awt.geom.AffineTransform",p1)
	Quit ..%ExecuteOLR0(p0,"getQuadrantRotateInstance","java.awt.geom.AffineTransform")
]]></Implementation>
</Method>

<Method name="setTransform">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTransform
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setTransform",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="quadrantRotate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: quadrantRotate
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"quadrantRotate",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"quadrantRotate",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"quadrantRotate",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"quadrantRotate",%this) Quit
]]></Implementation>
</Method>

<Method name="setToIdentity">
<Implementation><![CDATA[
	#; Corresponding Java method: setToIdentity
	Do ..%Execute0(..Gateway,"setToIdentity",%this)
]]></Implementation>
</Method>

<Method name="createInverse">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createInverse
	Quit ..%Execute0R(..Gateway,"createInverse",%this)
]]></Implementation>
</Method>

<Method name="preConcatenate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: preConcatenate
	Do ..%Execute1(..Gateway,"preConcatenate",%this,p0)
]]></Implementation>
</Method>

<Method name="getTranslateInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTranslateInstance
	Quit ..%Execute2R(p0,"getTranslateInstance","java.awt.geom.AffineTransform",p1,p2)
]]></Implementation>
</Method>

<Method name="getTranslateX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTranslateX
	Quit ..%Execute0R(..Gateway,"getTranslateX",%this)
]]></Implementation>
</Method>

<Method name="getTranslateY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTranslateY
	Quit ..%Execute0R(..Gateway,"getTranslateY",%this)
]]></Implementation>
</Method>

<Method name="getShearX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getShearX
	Quit ..%Execute0R(..Gateway,"getShearX",%this)
]]></Implementation>
</Method>

<Method name="getShearY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getShearY
	Quit ..%Execute0R(..Gateway,"getShearY",%this)
]]></Implementation>
</Method>

<Method name="setToScale">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setToScale
	Do ..%Execute2(..Gateway,"setToScale",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="shear">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: shear
	Do ..%Execute2(..Gateway,"shear",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getMatrix">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: getMatrix
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getMatrix",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[D",p0)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="getShearInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getShearInstance
	Quit ..%Execute2R(p0,"getShearInstance","java.awt.geom.AffineTransform",p1,p2)
]]></Implementation>
</Method>

<Method name="translate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: translate
	Do ..%Execute2(..Gateway,"translate",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="setToQuadrantRotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setToQuadrantRotation
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setToQuadrantRotation",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setToQuadrantRotation",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setToQuadrantRotation",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setToQuadrantRotation",%this) Quit
]]></Implementation>
</Method>

<Parameter name="TYPEuIDENTITY">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="TYPEuTRANSLATION">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="TYPEuUNIFORMuSCALE">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="TYPEuGENERALuSCALE">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="TYPEuMASKuSCALE">
<Type>INTEGER</Type>
<Default>6</Default>
</Parameter>

<Parameter name="TYPEuFLIP">
<Type>INTEGER</Type>
<Default>64</Default>
</Parameter>

<Parameter name="TYPEuQUADRANTuROTATION">
<Type>INTEGER</Type>
<Default>8</Default>
</Parameter>

<Parameter name="TYPEuGENERALuROTATION">
<Type>INTEGER</Type>
<Default>16</Default>
</Parameter>

<Parameter name="TYPEuMASKuROTATION">
<Type>INTEGER</Type>
<Default>24</Default>
</Parameter>

<Parameter name="TYPEuGENERALuTRANSFORM">
<Type>INTEGER</Type>
<Default>32</Default>
</Parameter>
</Class>


<Class name="java.awt.geom.Dimension2D">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Cloneable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="getHeight">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeight
	Quit ..%Execute0R(..Gateway,"getHeight",%this)
]]></Implementation>
</Method>

<Method name="setSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSize
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setSize",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setSize",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setSize",%this) Quit
]]></Implementation>
</Method>

<Method name="getWidth">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWidth
	Quit ..%Execute0R(..Gateway,"getWidth",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.geom.Line2D">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.awt.Shape,java.lang.Cloneable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"contains",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"contains",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"contains",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"contains",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"contains",%this)
]]></Implementation>
</Method>

<Method name="linesIntersect">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle,&p7:%Library.ObjectHandle,&p8:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: linesIntersect
	Do ..%PreInvoke(p0,"java.awt.geom.Line2D")
	Set x=$zobjexport("linesIntersect",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport(p5,18)
	Set x=$zobjexport(p6,18)
	Set x=$zobjexport(p7,18)
	Set x=$zobjexport(p8,18)
	Set x=..%GetObject(p0)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p5=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p6=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p7=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p8=..%ReadArrayArgument(p0)
	Do ..%PostInvoke(p0)
	Quit x
]]></Implementation>
</Method>

<Method name="setLine">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLine
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setLine",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setLine",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setLine",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setLine",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setLine",%this) Quit
]]></Implementation>
</Method>

<Method name="getX2">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getX2
	Quit ..%Execute0R(..Gateway,"getX2",%this)
]]></Implementation>
</Method>

<Method name="getPathIterator">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPathIterator
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getPathIterator",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getPathIterator",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getPathIterator",%this)
]]></Implementation>
</Method>

<Method name="getY1">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getY1
	Quit ..%Execute0R(..Gateway,"getY1",%this)
]]></Implementation>
</Method>

<Method name="getP1">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getP1
	Quit ..%Execute0R(..Gateway,"getP1",%this)
]]></Implementation>
</Method>

<Method name="getY2">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getY2
	Quit ..%Execute0R(..Gateway,"getY2",%this)
]]></Implementation>
</Method>

<Method name="getX1">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getX1
	Quit ..%Execute0R(..Gateway,"getX1",%this)
]]></Implementation>
</Method>

<Method name="intersectsLine">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersectsLine
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"intersectsLine",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"intersectsLine",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"intersectsLine",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"intersectsLine",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"intersectsLine",%this)
]]></Implementation>
</Method>

<Method name="intersects">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersects
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"intersects",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"intersects",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"intersects",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"intersects",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"intersects",%this)
]]></Implementation>
</Method>

<Method name="getBounds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds
	Quit ..%Execute0R(..Gateway,"getBounds",%this)
]]></Implementation>
</Method>

<Method name="getP2">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getP2
	Quit ..%Execute0R(..Gateway,"getP2",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.geom.PathIterator">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="isDone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDone
	Quit ..%Execute0R(..Gateway,"isDone",%this)
]]></Implementation>
</Method>

<Method name="getWindingRule">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWindingRule
	Quit ..%Execute0R(..Gateway,"getWindingRule",%this)
]]></Implementation>
</Method>

<Method name="currentSegment">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: currentSegment
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"currentSegment",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"currentSegment",%this)
]]></Implementation>
</Method>

<Method name="next">
<Implementation><![CDATA[
	#; Corresponding Java method: next
	Do ..%Execute0(..Gateway,"next",%this)
]]></Implementation>
</Method>

<Parameter name="WINDuEVENuODD">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="WINDuNONuZERO">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="SEGuMOVETO">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="SEGuLINETO">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="SEGuQUADTO">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="SEGuCUBICTO">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="SEGuCLOSE">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>
</Class>


<Class name="java.awt.geom.Point2D">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Cloneable</Super>
<TimeChanged>62511,62358</TimeChanged>
<TimeCreated>62511,62358</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="setLocation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLocation
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setLocation",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setLocation",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setLocation",%this) Quit
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getY
	Quit ..%Execute0R(..Gateway,"getY",%this)
]]></Implementation>
</Method>

<Method name="getX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getX
	Quit ..%Execute0R(..Gateway,"getX",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.geom.Rectangle2D">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.awt.geom.RectangularShape</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="setRect">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRect
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setRect",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setRect",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setRect",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setRect",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setRect",%this) Quit
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"contains",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"contains",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"contains",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"contains",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"contains",%this)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"add",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"add",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"add",%this) Quit
]]></Implementation>
</Method>

<Method name="getPathIterator">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPathIterator
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getPathIterator",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getPathIterator",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getPathIterator",%this)
]]></Implementation>
</Method>

<Method name="setFrame">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFrame
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setFrame",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setFrame",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setFrame",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setFrame",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setFrame",%this) Quit
]]></Implementation>
</Method>

<Method name="createUnion">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createUnion
	Quit ..%Execute1R(..Gateway,"createUnion",%this,p0)
]]></Implementation>
</Method>

<Method name="outcode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: outcode
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"outcode",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"outcode",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"outcode",%this)
]]></Implementation>
</Method>

<Method name="createIntersection">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createIntersection
	Quit ..%Execute1R(..Gateway,"createIntersection",%this,p0)
]]></Implementation>
</Method>

<Method name="intersectsLine">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersectsLine
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"intersectsLine",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"intersectsLine",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"intersectsLine",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"intersectsLine",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"intersectsLine",%this)
]]></Implementation>
</Method>

<Method name="intersects">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersects
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"intersects",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"intersects",%this)
]]></Implementation>
</Method>

<Method name="union">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: union
	Do ..%Execute3(p0,"union","java.awt.geom.Rectangle2D",p1,p2,p3)
]]></Implementation>
</Method>

<Method name="intersect">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: intersect
	Do ..%Execute3(p0,"intersect","java.awt.geom.Rectangle2D",p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getBounds2D">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds2D
	Quit ..%Execute0R(..Gateway,"getBounds2D",%this)
]]></Implementation>
</Method>

<Parameter name="OUTuLEFT">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="OUTuTOP">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="OUTuRIGHT">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="OUTuBOTTOM">
<Type>INTEGER</Type>
<Default>8</Default>
</Parameter>
</Class>


<Class name="java.awt.geom.RectangularShape">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.awt.Shape,java.lang.Cloneable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getCenterY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCenterY
	Quit ..%Execute0R(..Gateway,"getCenterY",%this)
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="getMaxY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxY
	Quit ..%Execute0R(..Gateway,"getMaxY",%this)
]]></Implementation>
</Method>

<Method name="getCenterX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCenterX
	Quit ..%Execute0R(..Gateway,"getCenterX",%this)
]]></Implementation>
</Method>

<Method name="getMaxX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxX
	Quit ..%Execute0R(..Gateway,"getMaxX",%this)
]]></Implementation>
</Method>

<Method name="getMinX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinX
	Quit ..%Execute0R(..Gateway,"getMinX",%this)
]]></Implementation>
</Method>

<Method name="getMinY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinY
	Quit ..%Execute0R(..Gateway,"getMinY",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"contains",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"contains",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"contains",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"contains",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"contains",%this)
]]></Implementation>
</Method>

<Method name="setFrameFromCenter">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFrameFromCenter
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setFrameFromCenter",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setFrameFromCenter",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setFrameFromCenter",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setFrameFromCenter",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setFrameFromCenter",%this) Quit
]]></Implementation>
</Method>

<Method name="getPathIterator">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPathIterator
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getPathIterator",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getPathIterator",%this)
]]></Implementation>
</Method>

<Method name="setFrame">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFrame
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setFrame",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setFrame",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setFrame",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setFrame",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setFrame",%this) Quit
]]></Implementation>
</Method>

<Method name="setFrameFromDiagonal">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFrameFromDiagonal
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setFrameFromDiagonal",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setFrameFromDiagonal",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setFrameFromDiagonal",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setFrameFromDiagonal",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setFrameFromDiagonal",%this) Quit
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="getHeight">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeight
	Quit ..%Execute0R(..Gateway,"getHeight",%this)
]]></Implementation>
</Method>

<Method name="getFrame">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFrame
	Quit ..%Execute0R(..Gateway,"getFrame",%this)
]]></Implementation>
</Method>

<Method name="intersects">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intersects
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"intersects",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"intersects",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"intersects",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"intersects",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"intersects",%this)
]]></Implementation>
</Method>

<Method name="getBounds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds
	Quit ..%Execute0R(..Gateway,"getBounds",%this)
]]></Implementation>
</Method>

<Method name="getY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getY
	Quit ..%Execute0R(..Gateway,"getY",%this)
]]></Implementation>
</Method>

<Method name="getX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getX
	Quit ..%Execute0R(..Gateway,"getX",%this)
]]></Implementation>
</Method>

<Method name="getWidth">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWidth
	Quit ..%Execute0R(..Gateway,"getWidth",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.image.ColorModel">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.awt.Transparency</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.image.ColorModel
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.image.ColorModel",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getRGB">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRGB
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getRGB",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getRGB",%this)
]]></Implementation>
</Method>

<Method name="getDataElement">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataElement
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getDataElement",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDataElement",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDataElement",%this)
]]></Implementation>
</Method>

<Method name="createCompatibleSampleModel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createCompatibleSampleModel
	Quit ..%Execute2R(..Gateway,"createCompatibleSampleModel",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getComponents">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getComponents
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getComponents",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getComponents",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getComponents",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getComponents",%this)
]]></Implementation>
</Method>

<Method name="isCompatibleSampleModel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCompatibleSampleModel
	Quit ..%Execute1R(..Gateway,"isCompatibleSampleModel",%this,p0)
]]></Implementation>
</Method>

<Method name="getAlpha">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAlpha
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getAlpha",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getAlpha",%this)
]]></Implementation>
</Method>

<Method name="getRGBdefault">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRGBdefault
	Quit ..%Execute0R(p0,"getRGBdefault","java.awt.image.ColorModel")
]]></Implementation>
</Method>

<Method name="isCompatibleRaster">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCompatibleRaster
	Quit ..%Execute1R(..Gateway,"isCompatibleRaster",%this,p0)
]]></Implementation>
</Method>

<Method name="getDataElements">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataElements
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getDataElements",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getDataElements",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDataElements",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDataElements",%this)
]]></Implementation>
</Method>

<Method name="getRed">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRed
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getRed",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getRed",%this)
]]></Implementation>
</Method>

<Method name="getGreen">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGreen
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getGreen",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getGreen",%this)
]]></Implementation>
</Method>

<Method name="getColorSpace">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColorSpace
	Quit ..%Execute0R(..Gateway,"getColorSpace",%this)
]]></Implementation>
</Method>

<Method name="finalize">
<Implementation><![CDATA[
	#; Corresponding Java method: finalize
	Do ..%Execute0(..Gateway,"finalize",%this)
]]></Implementation>
</Method>

<Method name="hasAlpha">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasAlpha
	Quit ..%Execute0R(..Gateway,"hasAlpha",%this)
]]></Implementation>
</Method>

<Method name="getNumComponents">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumComponents
	Quit ..%Execute0R(..Gateway,"getNumComponents",%this)
]]></Implementation>
</Method>

<Method name="getAlphaRaster">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAlphaRaster
	Quit ..%Execute1R(..Gateway,"getAlphaRaster",%this,p0)
]]></Implementation>
</Method>

<Method name="getPixelSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPixelSize
	Quit ..%Execute0R(..Gateway,"getPixelSize",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="createCompatibleWritableRaster">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createCompatibleWritableRaster
	Quit ..%Execute2R(..Gateway,"createCompatibleWritableRaster",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getUnnormalizedComponents">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUnnormalizedComponents
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getUnnormalizedComponents",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[F",p0)
	Set x=$zobjexport(p1,18)
	Do ..%WriteArray(..Gateway,"[I",p2)
	Set x=$zobjexport(p3,18)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getTransferType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTransferType
	Quit ..%Execute0R(..Gateway,"getTransferType",%this)
]]></Implementation>
</Method>

<Method name="coerceData">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: coerceData
	Quit ..%Execute2R(..Gateway,"coerceData",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getNormalizedComponents">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNormalizedComponents
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"getNormalizedComponents",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getNormalizedComponents",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getNormalizedComponents",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getNormalizedComponents",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getNormalizedComponents",%this)
]]></Implementation>
</Method>

<Method name="getBlue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBlue
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBlue",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBlue",%this)
]]></Implementation>
</Method>

<Method name="isAlphaPremultiplied">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAlphaPremultiplied
	Quit ..%Execute0R(..Gateway,"isAlphaPremultiplied",%this)
]]></Implementation>
</Method>

<Method name="getTransparency">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTransparency
	Quit ..%Execute0R(..Gateway,"getTransparency",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getNumColorComponents">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumColorComponents
	Quit ..%Execute0R(..Gateway,"getNumColorComponents",%this)
]]></Implementation>
</Method>

<Method name="getComponentSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getComponentSize
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getComponentSize",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getComponentSize",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.image.DataBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,62358</TimeChanged>
<TimeCreated>62511,62358</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="setElemFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setElemFloat
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setElemFloat",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setElemFloat",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setElemFloat",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setElemFloat",%this) Quit
]]></Implementation>
</Method>

<Method name="getElem">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getElem
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getElem",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getElem",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getElem",%this)
]]></Implementation>
</Method>

<Method name="getDataType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataType
	Quit ..%Execute0R(..Gateway,"getDataType",%this)
]]></Implementation>
</Method>

<Method name="setElem">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setElem
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setElem",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setElem",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setElem",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setElem",%this) Quit
]]></Implementation>
</Method>

<Method name="getNumBanks">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumBanks
	Quit ..%Execute0R(..Gateway,"getNumBanks",%this)
]]></Implementation>
</Method>

<Method name="setElemDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setElemDouble
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setElemDouble",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setElemDouble",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setElemDouble",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setElemDouble",%this) Quit
]]></Implementation>
</Method>

<Method name="getDataTypeSize">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataTypeSize
	Quit ..%Execute1R(p0,"getDataTypeSize","java.awt.image.DataBuffer",p1)
]]></Implementation>
</Method>

<Method name="getOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getOffset
	Quit ..%Execute0R(..Gateway,"getOffset",%this)
]]></Implementation>
</Method>

<Method name="getElemDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getElemDouble
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getElemDouble",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getElemDouble",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getElemDouble",%this)
]]></Implementation>
</Method>

<Method name="getSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSize
	Quit ..%Execute0R(..Gateway,"getSize",%this)
]]></Implementation>
</Method>

<Method name="getElemFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getElemFloat
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getElemFloat",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getElemFloat",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getElemFloat",%this)
]]></Implementation>
</Method>

<Method name="getOffsets">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getOffsets
	Quit ..%Execute0R(..Gateway,"getOffsets",%this)
]]></Implementation>
</Method>

<Parameter name="TYPEuBYTE">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="TYPEuUSHORT">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="TYPEuSHORT">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="TYPEuINT">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="TYPEuFLOAT">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="TYPEuDOUBLE">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="TYPEuUNDEFINED">
<Type>INTEGER</Type>
<Default>32</Default>
</Parameter>
</Class>


<Class name="java.awt.image.Raster">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getSamples">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSamples
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getSamples",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getSampleDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleDouble
	Quit ..%Execute3R(..Gateway,"getSampleDouble",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="createWritableRaster">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createWritableRaster
	Quit:$D(p3) ..%ExecuteOLR3(p0,"createWritableRaster","java.awt.image.Raster",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"createWritableRaster","java.awt.image.Raster",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"createWritableRaster","java.awt.image.Raster",p1)
	Quit ..%ExecuteOLR0(p0,"createWritableRaster","java.awt.image.Raster")
]]></Implementation>
</Method>

<Method name="getSampleModel">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleModel
	Quit ..%Execute0R(..Gateway,"getSampleModel",%this)
]]></Implementation>
</Method>

<Method name="getNumBands">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumBands
	Quit ..%Execute0R(..Gateway,"getNumBands",%this)
]]></Implementation>
</Method>

<Method name="getDataBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataBuffer
	Quit ..%Execute0R(..Gateway,"getDataBuffer",%this)
]]></Implementation>
</Method>

<Method name="createPackedRaster">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createPackedRaster
	Do ..%PreInvoke(p0,"java.awt.image.Raster")
	Set x=$zobjexport("createPackedRaster",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6),18)
	Do:$D(p1) ..%OverloadWrite(p0,p1)
	Do:$D(p2) ..%OverloadWrite(p0,p2)
	Do:$D(p3) ..%OverloadWrite(p0,p3)
	Do:$D(p4) ..%OverloadWrite(p0,p4)
	Do:$D(p5) ..%OverloadWrite(p0,p5)
	Do:$D(p6) ..%OverloadWrite(p0,p6)
	Set x=..%GetObject(p0)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(p0)
	If $D(p6) Set:$zobjexport(17) p6=..%ReadArrayArgument(p0)
	Do ..%PostInvoke(p0)
	Quit x
]]></Implementation>
</Method>

<Method name="getSampleModelTranslateX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleModelTranslateX
	Quit ..%Execute0R(..Gateway,"getSampleModelTranslateX",%this)
]]></Implementation>
</Method>

<Method name="getHeight">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeight
	Quit ..%Execute0R(..Gateway,"getHeight",%this)
]]></Implementation>
</Method>

<Method name="createBandedRaster">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle,&p7:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createBandedRaster
	Do ..%PreInvoke(p0,"java.awt.image.Raster")
	Set x=$zobjexport("createBandedRaster",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6)+$D(p7),18)
	Do:$D(p1) ..%OverloadWrite(p0,p1)
	Do:$D(p2) ..%OverloadWrite(p0,p2)
	Do:$D(p3) ..%OverloadWrite(p0,p3)
	Do:$D(p4) ..%OverloadWrite(p0,p4)
	Do:$D(p5) ..%OverloadWrite(p0,p5)
	Do:$D(p6) ..%OverloadWrite(p0,p6)
	Do:$D(p7) ..%OverloadWrite(p0,p7)
	Set x=..%GetObject(p0)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(p0)
	If $D(p6) Set:$zobjexport(17) p6=..%ReadArrayArgument(p0)
	If $D(p7) Set:$zobjexport(17) p7=..%ReadArrayArgument(p0)
	Do ..%PostInvoke(p0)
	Quit x
]]></Implementation>
</Method>

<Method name="getSampleModelTranslateY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleModelTranslateY
	Quit ..%Execute0R(..Gateway,"getSampleModelTranslateY",%this)
]]></Implementation>
</Method>

<Method name="getDataElements">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataElements
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getDataElements",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getBounds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds
	Quit ..%Execute0R(..Gateway,"getBounds",%this)
]]></Implementation>
</Method>

<Method name="createChild">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createChild
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("createChild",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport(p5,18)
	Do ..%WriteArray(..Gateway,"[I",p6)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p6=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getWidth">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWidth
	Quit ..%Execute0R(..Gateway,"getWidth",%this)
]]></Implementation>
</Method>

<Method name="getPixels">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPixels
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getPixels",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="createRaster">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createRaster
	Quit ..%Execute3R(p0,"createRaster","java.awt.image.Raster",p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getParent">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParent
	Quit ..%Execute0R(..Gateway,"getParent",%this)
]]></Implementation>
</Method>

<Method name="createCompatibleWritableRaster">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createCompatibleWritableRaster
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"createCompatibleWritableRaster",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"createCompatibleWritableRaster",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"createCompatibleWritableRaster",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"createCompatibleWritableRaster",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"createCompatibleWritableRaster",%this)
]]></Implementation>
</Method>

<Method name="getMinX">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinX
	Quit ..%Execute0R(..Gateway,"getMinX",%this)
]]></Implementation>
</Method>

<Method name="getPixel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPixel
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getPixel",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getPixel",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getPixel",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getPixel",%this)
]]></Implementation>
</Method>

<Method name="getMinY">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinY
	Quit ..%Execute0R(..Gateway,"getMinY",%this)
]]></Implementation>
</Method>

<Method name="getTransferType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTransferType
	Quit ..%Execute0R(..Gateway,"getTransferType",%this)
]]></Implementation>
</Method>

<Method name="getSample">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSample
	Quit ..%Execute3R(..Gateway,"getSample",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="createTranslatedChild">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createTranslatedChild
	Quit ..%Execute2R(..Gateway,"createTranslatedChild",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getSampleFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleFloat
	Quit ..%Execute3R(..Gateway,"getSampleFloat",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getNumDataElements">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumDataElements
	Quit ..%Execute0R(..Gateway,"getNumDataElements",%this)
]]></Implementation>
</Method>

<Method name="createInterleavedRaster">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle,&p7:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createInterleavedRaster
	Do ..%PreInvoke(p0,"java.awt.image.Raster")
	Set x=$zobjexport("createInterleavedRaster",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6)+$D(p7),18)
	Do:$D(p1) ..%OverloadWrite(p0,p1)
	Do:$D(p2) ..%OverloadWrite(p0,p2)
	Do:$D(p3) ..%OverloadWrite(p0,p3)
	Do:$D(p4) ..%OverloadWrite(p0,p4)
	Do:$D(p5) ..%OverloadWrite(p0,p5)
	Do:$D(p6) ..%OverloadWrite(p0,p6)
	Do:$D(p7) ..%OverloadWrite(p0,p7)
	Set x=..%GetObject(p0)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(p0)
	If $D(p6) Set:$zobjexport(17) p6=..%ReadArrayArgument(p0)
	If $D(p7) Set:$zobjexport(17) p7=..%ReadArrayArgument(p0)
	Do ..%PostInvoke(p0)
	Quit x
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.image.SampleModel">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,62358</TimeChanged>
<TimeCreated>62511,62358</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.awt.image.SampleModel
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.awt.image.SampleModel",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getDataType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataType
	Quit ..%Execute0R(..Gateway,"getDataType",%this)
]]></Implementation>
</Method>

<Method name="getSamples">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSamples
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getSamples",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Do:$D(p6) ..%OverloadWrite(..Gateway,p6)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	If $D(p6) Set:$zobjexport(17) p6=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="createCompatibleSampleModel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createCompatibleSampleModel
	Quit ..%Execute2R(..Gateway,"createCompatibleSampleModel",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getSampleDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleDouble
	Quit ..%Execute4R(..Gateway,"getSampleDouble",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getSampleSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleSize
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getSampleSize",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getSampleSize",%this)
]]></Implementation>
</Method>

<Method name="getPixel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPixel
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"getPixel",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getPixel",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getPixel",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getPixel",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getPixel",%this)
]]></Implementation>
</Method>

<Method name="createSubsetSampleModel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createSubsetSampleModel
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("createSubsetSampleModel",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[I",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getTransferType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTransferType
	Quit ..%Execute0R(..Gateway,"getTransferType",%this)
]]></Implementation>
</Method>

<Method name="getNumBands">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumBands
	Quit ..%Execute0R(..Gateway,"getNumBands",%this)
]]></Implementation>
</Method>

<Method name="createDataBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createDataBuffer
	Quit ..%Execute0R(..Gateway,"createDataBuffer",%this)
]]></Implementation>
</Method>

<Method name="getSample">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSample
	Quit ..%Execute4R(..Gateway,"getSample",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getHeight">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeight
	Quit ..%Execute0R(..Gateway,"getHeight",%this)
]]></Implementation>
</Method>

<Method name="getSampleFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSampleFloat
	Quit ..%Execute4R(..Gateway,"getSampleFloat",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getNumDataElements">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumDataElements
	Quit ..%Execute0R(..Gateway,"getNumDataElements",%this)
]]></Implementation>
</Method>

<Method name="setDataElements">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDataElements
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setDataElements",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="setSample">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSample
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setSample",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="setSamples">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSamples
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setSamples",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Do:$D(p6) ..%OverloadWrite(..Gateway,p6)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	If $D(p6) Set:$zobjexport(17) p6=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="getDataElements">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDataElements
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getDataElements",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="setPixel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setPixel
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setPixel",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setPixel",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setPixel",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setPixel",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setPixel",%this) Quit
]]></Implementation>
</Method>

<Method name="getWidth">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWidth
	Quit ..%Execute0R(..Gateway,"getWidth",%this)
]]></Implementation>
</Method>

<Method name="setPixels">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setPixels
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setPixels",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="getPixels">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPixels
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getPixels",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>
</Class>


<Class name="java.awt.image.WritableRaster">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.awt.image.Raster</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="setRect">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRect
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setRect",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setRect",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setRect",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setRect",%this) Quit
]]></Implementation>
</Method>

<Method name="setSample">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSample
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setSample",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setSample",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setSample",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setSample",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setSample",%this) Quit
]]></Implementation>
</Method>

<Method name="setDataElements">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDataElements
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setDataElements",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="setSamples">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSamples
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setSamples",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="getWritableParent">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWritableParent
	Quit ..%Execute0R(..Gateway,"getWritableParent",%this)
]]></Implementation>
</Method>

<Method name="setPixel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setPixel
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setPixel",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setPixel",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setPixel",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setPixel",%this) Quit
]]></Implementation>
</Method>

<Method name="setPixels">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setPixels
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setPixels",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="createWritableTranslatedChild">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createWritableTranslatedChild
	Quit ..%Execute2R(..Gateway,"createWritableTranslatedChild",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="createWritableChild">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createWritableChild
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("createWritableChild",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport(p5,18)
	Do ..%WriteArray(..Gateway,"[I",p6)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p6=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>
</Class>




<Class name="java.beans.PropertyChangeEvent">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.EventObject</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.beans.PropertyChangeEvent
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.beans.PropertyChangeEvent",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getNewValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNewValue
	Quit ..%Execute0R(..Gateway,"getNewValue",%this)
]]></Implementation>
</Method>

<Method name="getPropertyName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPropertyName
	Quit ..%Execute0R(..Gateway,"getPropertyName",%this)
]]></Implementation>
</Method>

<Method name="setPropagationId">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setPropagationId
	Do ..%Execute1(..Gateway,"setPropagationId",%this,p0)
]]></Implementation>
</Method>

<Method name="getOldValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getOldValue
	Quit ..%Execute0R(..Gateway,"getOldValue",%this)
]]></Implementation>
</Method>

<Method name="getPropagationId">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPropagationId
	Quit ..%Execute0R(..Gateway,"getPropagationId",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.beans.PropertyChangeListener">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.EventListener</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="propertyChange">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: propertyChange
	Do ..%Execute1(..Gateway,"propertyChange",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.beans.PropertyChangeSupport">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.beans.PropertyChangeSupport
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.beans.PropertyChangeSupport",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="removePropertyChangeListener">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: removePropertyChangeListener
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"removePropertyChangeListener",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"removePropertyChangeListener",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"removePropertyChangeListener",%this) Quit
]]></Implementation>
</Method>

<Method name="getPropertyChangeListeners">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPropertyChangeListeners
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getPropertyChangeListeners",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getPropertyChangeListeners",%this)
]]></Implementation>
</Method>

<Method name="hasListeners">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasListeners
	Quit ..%Execute1R(..Gateway,"hasListeners",%this,p0)
]]></Implementation>
</Method>

<Method name="addPropertyChangeListener">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: addPropertyChangeListener
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"addPropertyChangeListener",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"addPropertyChangeListener",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"addPropertyChangeListener",%this) Quit
]]></Implementation>
</Method>

<Method name="fireIndexedPropertyChange">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: fireIndexedPropertyChange
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"fireIndexedPropertyChange",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"fireIndexedPropertyChange",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"fireIndexedPropertyChange",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"fireIndexedPropertyChange",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"fireIndexedPropertyChange",%this) Quit
]]></Implementation>
</Method>

<Method name="firePropertyChange">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: firePropertyChange
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"firePropertyChange",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"firePropertyChange",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"firePropertyChange",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"firePropertyChange",%this) Quit
]]></Implementation>
</Method>
</Class>




<Class name="java.io.Closeable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.File">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable,java.lang.Comparable</Super>
<TimeChanged>62340,63163</TimeChanged>
<TimeCreated>62340,63163</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.io.File
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.io.File",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="listRoots">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: listRoots
	Quit ..%Execute0R(p0,"listRoots","java.io.File")
]]></Implementation>
</Method>

<Method name="setReadOnly">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setReadOnly
	Quit ..%Execute0R(..Gateway,"setReadOnly",%this)
]]></Implementation>
</Method>

<Method name="getAbsoluteFile">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAbsoluteFile
	Quit ..%Execute0R(..Gateway,"getAbsoluteFile",%this)
]]></Implementation>
</Method>

<Method name="getCanonicalPath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCanonicalPath
	Quit ..%Execute0R(..Gateway,"getCanonicalPath",%this)
]]></Implementation>
</Method>

<Method name="getCanonicalFile">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCanonicalFile
	Quit ..%Execute0R(..Gateway,"getCanonicalFile",%this)
]]></Implementation>
</Method>

<Method name="listFiles">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: listFiles
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"listFiles",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"listFiles",%this)
]]></Implementation>
</Method>

<Method name="renameTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: renameTo
	Quit ..%Execute1R(..Gateway,"renameTo",%this,p0)
]]></Implementation>
</Method>

<Method name="setReadable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setReadable
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"setReadable",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"setReadable",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"setReadable",%this)
]]></Implementation>
</Method>

<Method name="getParentFile">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParentFile
	Quit ..%Execute0R(..Gateway,"getParentFile",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getFreeSpace">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFreeSpace
	Quit ..%Execute0R(..Gateway,"getFreeSpace",%this)
]]></Implementation>
</Method>

<Method name="setExecutable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setExecutable
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"setExecutable",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"setExecutable",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"setExecutable",%this)
]]></Implementation>
</Method>

<Method name="deleteOnExit">
<Implementation><![CDATA[
	#; Corresponding Java method: deleteOnExit
	Do ..%Execute0(..Gateway,"deleteOnExit",%this)
]]></Implementation>
</Method>

<Method name="canWrite">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: canWrite
	Quit ..%Execute0R(..Gateway,"canWrite",%this)
]]></Implementation>
</Method>

<Method name="delete">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: delete
	Quit ..%Execute0R(..Gateway,"delete",%this)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="canRead">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: canRead
	Quit ..%Execute0R(..Gateway,"canRead",%this)
]]></Implementation>
</Method>

<Method name="getPath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPath
	Quit ..%Execute0R(..Gateway,"getPath",%this)
]]></Implementation>
</Method>

<Method name="getUsableSpace">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUsableSpace
	Quit ..%Execute0R(..Gateway,"getUsableSpace",%this)
]]></Implementation>
</Method>

<Method name="lastModified">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lastModified
	Quit ..%Execute0R(..Gateway,"lastModified",%this)
]]></Implementation>
</Method>

<Method name="getParent">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParent
	Quit ..%Execute0R(..Gateway,"getParent",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="createTempFile">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createTempFile
	Quit:$D(p3) ..%ExecuteOLR3(p0,"createTempFile","java.io.File",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"createTempFile","java.io.File",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"createTempFile","java.io.File",p1)
	Quit ..%ExecuteOLR0(p0,"createTempFile","java.io.File")
]]></Implementation>
</Method>

<Method name="mkdirs">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: mkdirs
	Quit ..%Execute0R(..Gateway,"mkdirs",%this)
]]></Implementation>
</Method>

<Method name="mkdir">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: mkdir
	Quit ..%Execute0R(..Gateway,"mkdir",%this)
]]></Implementation>
</Method>

<Method name="list">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: list
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"list",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"list",%this)
]]></Implementation>
</Method>

<Method name="isAbsolute">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAbsolute
	Quit ..%Execute0R(..Gateway,"isAbsolute",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="setWritable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setWritable
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"setWritable",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"setWritable",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"setWritable",%this)
]]></Implementation>
</Method>

<Method name="isHidden">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isHidden
	Quit ..%Execute0R(..Gateway,"isHidden",%this)
]]></Implementation>
</Method>

<Method name="canExecute">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: canExecute
	Quit ..%Execute0R(..Gateway,"canExecute",%this)
]]></Implementation>
</Method>

<Method name="isDirectory">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirectory
	Quit ..%Execute0R(..Gateway,"isDirectory",%this)
]]></Implementation>
</Method>

<Method name="getTotalSpace">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTotalSpace
	Quit ..%Execute0R(..Gateway,"getTotalSpace",%this)
]]></Implementation>
</Method>

<Method name="isFile">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isFile
	Quit ..%Execute0R(..Gateway,"isFile",%this)
]]></Implementation>
</Method>

<Method name="createNewFile">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createNewFile
	Quit ..%Execute0R(..Gateway,"createNewFile",%this)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="exists">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: exists
	Quit ..%Execute0R(..Gateway,"exists",%this)
]]></Implementation>
</Method>

<Method name="getAbsolutePath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAbsolutePath
	Quit ..%Execute0R(..Gateway,"getAbsolutePath",%this)
]]></Implementation>
</Method>

<Method name="toURI">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toURI
	Quit ..%Execute0R(..Gateway,"toURI",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="toURL">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toURL
	Quit ..%Execute0R(..Gateway,"toURL",%this)
]]></Implementation>
</Method>

<Method name="setLastModified">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setLastModified
	Quit ..%Execute1R(..Gateway,"setLastModified",%this,p0)
]]></Implementation>
</Method>

<Parameter name="separatorChar">
<Type>STRING</Type>
<Default>\</Default>
</Parameter>

<Parameter name="separator">
<Type>STRING</Type>
<Default>\</Default>
</Parameter>

<Parameter name="pathSeparatorChar">
<Type>STRING</Type>
<Default>;</Default>
</Parameter>

<Parameter name="pathSeparator">
<Type>STRING</Type>
<Default>;</Default>
</Parameter>
</Class>


<Class name="java.io.FileFilter">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62340,63163</TimeChanged>
<TimeCreated>62340,63163</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="accept">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: accept
	Quit ..%Execute1R(..Gateway,"accept",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.FilenameFilter">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62340,63163</TimeChanged>
<TimeCreated>62340,63163</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="accept">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: accept
	Quit ..%Execute2R(..Gateway,"accept",%this,p0,p1)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.FilterOutputStream">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.io.OutputStream</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.io.FilterOutputStream
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.io.FilterOutputStream",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="flush">
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Do ..%Execute0(..Gateway,"flush",%this)
]]></Implementation>
</Method>

<Method name="write">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: write
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"write",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"write",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"write",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"write",%this) Quit
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.Flushable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="flush">
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Do ..%Execute0(..Gateway,"flush",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.InputStream">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Closeable</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.io.InputStream
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.io.InputStream",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="markSupported">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: markSupported
	Quit ..%Execute0R(..Gateway,"markSupported",%this)
]]></Implementation>
</Method>

<Method name="read">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: read
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"read",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"read",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"read",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"read",%this)
]]></Implementation>
</Method>

<Method name="reset">
<Implementation><![CDATA[
	#; Corresponding Java method: reset
	Do ..%Execute0(..Gateway,"reset",%this)
]]></Implementation>
</Method>

<Method name="mark">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: mark
	Do ..%Execute1(..Gateway,"mark",%this,p0)
]]></Implementation>
</Method>

<Method name="available">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: available
	Quit ..%Execute0R(..Gateway,"available",%this)
]]></Implementation>
</Method>

<Method name="skip">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: skip
	Quit ..%Execute1R(..Gateway,"skip",%this,p0)
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.OutputStream">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Closeable,java.io.Flushable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.io.OutputStream
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.io.OutputStream",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="flush">
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Do ..%Execute0(..Gateway,"flush",%this)
]]></Implementation>
</Method>

<Method name="write">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: write
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"write",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"write",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"write",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"write",%this) Quit
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.PrintStream">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.io.FilterOutputStream,java.lang.Appendable,java.io.Closeable</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.io.PrintStream
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.io.PrintStream",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="printf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: printf
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"printf",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"printf",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"printf",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"printf",%this)
]]></Implementation>
</Method>

<Method name="append">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: append
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"append",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"append",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"append",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"append",%this)
]]></Implementation>
</Method>

<Method name="checkError">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: checkError
	Quit ..%Execute0R(..Gateway,"checkError",%this)
]]></Implementation>
</Method>

<Method name="flush">
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Do ..%Execute0(..Gateway,"flush",%this)
]]></Implementation>
</Method>

<Method name="println">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: println
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"println",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"println",%this) Quit
]]></Implementation>
</Method>

<Method name="write">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: write
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"write",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"write",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"write",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"write",%this) Quit
]]></Implementation>
</Method>

<Method name="format">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: format
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"format",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"format",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"format",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"format",%this)
]]></Implementation>
</Method>

<Method name="print">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: print
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"print",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"print",%this) Quit
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.PrintWriter">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.io.Writer</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.io.PrintWriter
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.io.PrintWriter",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="printf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: printf
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"printf",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"printf",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"printf",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"printf",%this)
]]></Implementation>
</Method>

<Method name="append">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: append
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"append",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"append",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"append",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"append",%this)
]]></Implementation>
</Method>

<Method name="checkError">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: checkError
	Quit ..%Execute0R(..Gateway,"checkError",%this)
]]></Implementation>
</Method>

<Method name="flush">
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Do ..%Execute0(..Gateway,"flush",%this)
]]></Implementation>
</Method>

<Method name="println">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: println
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"println",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"println",%this) Quit
]]></Implementation>
</Method>

<Method name="write">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: write
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"write",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"write",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"write",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"write",%this) Quit
]]></Implementation>
</Method>

<Method name="format">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: format
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"format",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"format",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"format",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"format",%this)
]]></Implementation>
</Method>

<Method name="print">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: print
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"print",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"print",%this) Quit
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.Reader">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Readable,java.io.Closeable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="markSupported">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: markSupported
	Quit ..%Execute0R(..Gateway,"markSupported",%this)
]]></Implementation>
</Method>

<Method name="read">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: read
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"read",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"read",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"read",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"read",%this)
]]></Implementation>
</Method>

<Method name="reset">
<Implementation><![CDATA[
	#; Corresponding Java method: reset
	Do ..%Execute0(..Gateway,"reset",%this)
]]></Implementation>
</Method>

<Method name="mark">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: mark
	Do ..%Execute1(..Gateway,"mark",%this,p0)
]]></Implementation>
</Method>

<Method name="skip">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: skip
	Quit ..%Execute1R(..Gateway,"skip",%this,p0)
]]></Implementation>
</Method>

<Method name="ready">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: ready
	Quit ..%Execute0R(..Gateway,"ready",%this)
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.io.Serializable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>
</Class>


<Class name="java.io.Writer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Appendable,java.io.Closeable,java.io.Flushable</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="append">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: append
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"append",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"append",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"append",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"append",%this)
]]></Implementation>
</Method>

<Method name="flush">
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Do ..%Execute0(..Gateway,"flush",%this)
]]></Implementation>
</Method>

<Method name="write">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: write
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"write",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"write",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"write",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"write",%this) Quit
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>
</Class>




<Class name="java.lang.Appendable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="append">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: append
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"append",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"append",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"append",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"append",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Boolean">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable,java.lang.Comparable</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Boolean
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Boolean",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getBoolean">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBoolean
	Quit ..%Execute1R(p0,"getBoolean","java.lang.Boolean",p1)
]]></Implementation>
</Method>

<Method name="parseBoolean">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parseBoolean
	Quit ..%Execute1R(p0,"parseBoolean","java.lang.Boolean",p1)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.lang.Boolean",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.lang.Boolean")
]]></Implementation>
</Method>

<Method name="booleanValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: booleanValue
	Quit ..%Execute0R(..Gateway,"booleanValue",%this)
]]></Implementation>
</Method>

<Parameter name="TRUE">
<Type>STRING</Type>
<Default>true</Default>
</Parameter>

<Parameter name="FALSE">
<Type>STRING</Type>
<Default>false</Default>
</Parameter>

<Parameter name="TYPE">
<Type>STRING</Type>
<Default>boolean</Default>
</Parameter>
</Class>


<Class name="java.lang.CharSequence">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="subSequence">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subSequence
	Quit ..%Execute2R(..Gateway,"subSequence",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="charAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: charAt
	Quit ..%Execute1R(..Gateway,"charAt",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Class">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable,java.lang.reflect.GenericDeclaration,java.lang.reflect.Type,java.lang.reflect.AnnotatedElement</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getClasses">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClasses
	Quit ..%Execute0R(..Gateway,"getClasses",%this)
]]></Implementation>
</Method>

<Method name="getDeclaringClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaringClass
	Quit ..%Execute0R(..Gateway,"getDeclaringClass",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredConstructors">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredConstructors
	Quit ..%Execute0R(..Gateway,"getDeclaredConstructors",%this)
]]></Implementation>
</Method>

<Method name="getEnclosingConstructor">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEnclosingConstructor
	Quit ..%Execute0R(..Gateway,"getEnclosingConstructor",%this)
]]></Implementation>
</Method>

<Method name="getEnumConstants">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEnumConstants
	Quit ..%Execute0R(..Gateway,"getEnumConstants",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredField">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredField
	Quit ..%Execute1R(..Gateway,"getDeclaredField",%this,p0)
]]></Implementation>
</Method>

<Method name="getPackage">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPackage
	Quit ..%Execute0R(..Gateway,"getPackage",%this)
]]></Implementation>
</Method>

<Method name="getProtectionDomain">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getProtectionDomain
	Quit ..%Execute0R(..Gateway,"getProtectionDomain",%this)
]]></Implementation>
</Method>

<Method name="getFields">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFields
	Quit ..%Execute0R(..Gateway,"getFields",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredAnnotations
	Quit ..%Execute0R(..Gateway,"getDeclaredAnnotations",%this)
]]></Implementation>
</Method>

<Method name="getConstructor">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getConstructor
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getConstructor",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Class;",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getClassLoader">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClassLoader
	Quit ..%Execute0R(..Gateway,"getClassLoader",%this)
]]></Implementation>
</Method>

<Method name="getEnclosingMethod">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEnclosingMethod
	Quit ..%Execute0R(..Gateway,"getEnclosingMethod",%this)
]]></Implementation>
</Method>

<Method name="getMethods">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMethods
	Quit ..%Execute0R(..Gateway,"getMethods",%this)
]]></Implementation>
</Method>

<Method name="getGenericSuperclass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericSuperclass
	Quit ..%Execute0R(..Gateway,"getGenericSuperclass",%this)
]]></Implementation>
</Method>

<Method name="getSimpleName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSimpleName
	Quit ..%Execute0R(..Gateway,"getSimpleName",%this)
]]></Implementation>
</Method>

<Method name="isPrimitive">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isPrimitive
	Quit ..%Execute0R(..Gateway,"isPrimitive",%this)
]]></Implementation>
</Method>

<Method name="getResource">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResource
	Quit ..%Execute1R(..Gateway,"getResource",%this,p0)
]]></Implementation>
</Method>

<Method name="getDeclaredMethod">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredMethod
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getDeclaredMethod",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Class;",p1)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getDeclaredMethods">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredMethods
	Quit ..%Execute0R(..Gateway,"getDeclaredMethods",%this)
]]></Implementation>
</Method>

<Method name="forName">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: forName
	Quit:$D(p3) ..%ExecuteOLR3(p0,"forName","java.lang.Class",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"forName","java.lang.Class",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"forName","java.lang.Class",p1)
	Quit ..%ExecuteOLR0(p0,"forName","java.lang.Class")
]]></Implementation>
</Method>

<Method name="getSuperclass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSuperclass
	Quit ..%Execute0R(..Gateway,"getSuperclass",%this)
]]></Implementation>
</Method>

<Method name="isAnnotation">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAnnotation
	Quit ..%Execute0R(..Gateway,"isAnnotation",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredFields">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredFields
	Quit ..%Execute0R(..Gateway,"getDeclaredFields",%this)
]]></Implementation>
</Method>

<Method name="getField">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getField
	Quit ..%Execute1R(..Gateway,"getField",%this,p0)
]]></Implementation>
</Method>

<Method name="getDeclaredConstructor">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredConstructor
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getDeclaredConstructor",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Class;",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getEnclosingClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEnclosingClass
	Quit ..%Execute0R(..Gateway,"getEnclosingClass",%this)
]]></Implementation>
</Method>

<Method name="getGenericInterfaces">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericInterfaces
	Quit ..%Execute0R(..Gateway,"getGenericInterfaces",%this)
]]></Implementation>
</Method>

<Method name="cast">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: cast
	Quit ..%Execute1R(..Gateway,"cast",%this,p0)
]]></Implementation>
</Method>

<Method name="getModifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getModifiers
	Quit ..%Execute0R(..Gateway,"getModifiers",%this)
]]></Implementation>
</Method>

<Method name="isInterface">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isInterface
	Quit ..%Execute0R(..Gateway,"isInterface",%this)
]]></Implementation>
</Method>

<Method name="isEnum">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEnum
	Quit ..%Execute0R(..Gateway,"isEnum",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="isArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isArray
	Quit ..%Execute0R(..Gateway,"isArray",%this)
]]></Implementation>
</Method>

<Method name="isLocalClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isLocalClass
	Quit ..%Execute0R(..Gateway,"isLocalClass",%this)
]]></Implementation>
</Method>

<Method name="getCanonicalName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCanonicalName
	Quit ..%Execute0R(..Gateway,"getCanonicalName",%this)
]]></Implementation>
</Method>

<Method name="asSubclass">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asSubclass
	Quit ..%Execute1R(..Gateway,"asSubclass",%this,p0)
]]></Implementation>
</Method>

<Method name="getInterfaces">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInterfaces
	Quit ..%Execute0R(..Gateway,"getInterfaces",%this)
]]></Implementation>
</Method>

<Method name="getSigners">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSigners
	Quit ..%Execute0R(..Gateway,"getSigners",%this)
]]></Implementation>
</Method>

<Method name="isSynthetic">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSynthetic
	Quit ..%Execute0R(..Gateway,"isSynthetic",%this)
]]></Implementation>
</Method>

<Method name="isAssignableFrom">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAssignableFrom
	Quit ..%Execute1R(..Gateway,"isAssignableFrom",%this,p0)
]]></Implementation>
</Method>

<Method name="newInstance">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: newInstance
	Quit ..%Execute0R(..Gateway,"newInstance",%this)
]]></Implementation>
</Method>

<Method name="desiredAssertionStatus">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: desiredAssertionStatus
	Quit ..%Execute0R(..Gateway,"desiredAssertionStatus",%this)
]]></Implementation>
</Method>

<Method name="getAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotations
	Quit ..%Execute0R(..Gateway,"getAnnotations",%this)
]]></Implementation>
</Method>

<Method name="getAnnotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotation
	Quit ..%Execute1R(..Gateway,"getAnnotation",%this,p0)
]]></Implementation>
</Method>

<Method name="getResourceAsStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResourceAsStream
	Quit ..%Execute1R(..Gateway,"getResourceAsStream",%this,p0)
]]></Implementation>
</Method>

<Method name="getMethod">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMethod
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getMethod",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Class;",p1)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getComponentType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getComponentType
	Quit ..%Execute0R(..Gateway,"getComponentType",%this)
]]></Implementation>
</Method>

<Method name="isAnonymousClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAnonymousClass
	Quit ..%Execute0R(..Gateway,"isAnonymousClass",%this)
]]></Implementation>
</Method>

<Method name="isInstance">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isInstance
	Quit ..%Execute1R(..Gateway,"isInstance",%this,p0)
]]></Implementation>
</Method>

<Method name="isMemberClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isMemberClass
	Quit ..%Execute0R(..Gateway,"isMemberClass",%this)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="getTypeParameters">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTypeParameters
	Quit ..%Execute0R(..Gateway,"getTypeParameters",%this)
]]></Implementation>
</Method>

<Method name="isAnnotationPresent">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAnnotationPresent
	Quit ..%Execute1R(..Gateway,"isAnnotationPresent",%this,p0)
]]></Implementation>
</Method>

<Method name="getConstructors">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getConstructors
	Quit ..%Execute0R(..Gateway,"getConstructors",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredClasses">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredClasses
	Quit ..%Execute0R(..Gateway,"getDeclaredClasses",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.ClassLoader">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getSystemResources">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSystemResources
	Quit ..%Execute1R(p0,"getSystemResources","java.lang.ClassLoader",p1)
]]></Implementation>
</Method>

<Method name="getResourceAsStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResourceAsStream
	Quit ..%Execute1R(..Gateway,"getResourceAsStream",%this,p0)
]]></Implementation>
</Method>

<Method name="getParent">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParent
	Quit ..%Execute0R(..Gateway,"getParent",%this)
]]></Implementation>
</Method>

<Method name="clearAssertionStatus">
<Implementation><![CDATA[
	#; Corresponding Java method: clearAssertionStatus
	Do ..%Execute0(..Gateway,"clearAssertionStatus",%this)
]]></Implementation>
</Method>

<Method name="loadClass">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: loadClass
	Quit ..%Execute1R(..Gateway,"loadClass",%this,p0)
]]></Implementation>
</Method>

<Method name="getSystemResourceAsStream">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSystemResourceAsStream
	Quit ..%Execute1R(p0,"getSystemResourceAsStream","java.lang.ClassLoader",p1)
]]></Implementation>
</Method>

<Method name="setDefaultAssertionStatus">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDefaultAssertionStatus
	Do ..%Execute1(..Gateway,"setDefaultAssertionStatus",%this,p0)
]]></Implementation>
</Method>

<Method name="getResources">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResources
	Quit ..%Execute1R(..Gateway,"getResources",%this,p0)
]]></Implementation>
</Method>

<Method name="setPackageAssertionStatus">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setPackageAssertionStatus
	Do ..%Execute2(..Gateway,"setPackageAssertionStatus",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getSystemResource">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSystemResource
	Quit ..%Execute1R(p0,"getSystemResource","java.lang.ClassLoader",p1)
]]></Implementation>
</Method>

<Method name="getSystemClassLoader">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSystemClassLoader
	Quit ..%Execute0R(p0,"getSystemClassLoader","java.lang.ClassLoader")
]]></Implementation>
</Method>

<Method name="getResource">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResource
	Quit ..%Execute1R(..Gateway,"getResource",%this,p0)
]]></Implementation>
</Method>

<Method name="setClassAssertionStatus">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setClassAssertionStatus
	Do ..%Execute2(..Gateway,"setClassAssertionStatus",%this,p0,p1)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Cloneable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>
</Class>


<Class name="java.lang.Comparable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit ..%Execute1R(..Gateway,"compareTo",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Double">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Number,java.lang.Comparable</Super>
<TimeChanged>62210,61091</TimeChanged>
<TimeCreated>62210,61091</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-04-17 01:15:30.742</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Double
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Double",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="longBitsToDouble">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longBitsToDouble
	Quit ..%Execute1R(p0,"longBitsToDouble","java.lang.Double",p1)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="compare">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compare
	Quit ..%Execute2R(p0,"compare","java.lang.Double",p1,p2)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="doubleValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleValue
	Quit ..%Execute0R(..Gateway,"doubleValue",%this)
]]></Implementation>
</Method>

<Method name="byteValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: byteValue
	Quit ..%Execute0R(..Gateway,"byteValue",%this)
]]></Implementation>
</Method>

<Method name="toHexString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toHexString
	Quit ..%Execute1R(p0,"toHexString","java.lang.Double",p1)
]]></Implementation>
</Method>

<Method name="shortValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shortValue
	Quit ..%Execute0R(..Gateway,"shortValue",%this)
]]></Implementation>
</Method>

<Method name="parseDouble">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parseDouble
	Quit ..%Execute1R(p0,"parseDouble","java.lang.Double",p1)
]]></Implementation>
</Method>

<Method name="longValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValue
	Quit ..%Execute0R(..Gateway,"longValue",%this)
]]></Implementation>
</Method>

<Method name="doubleToLongBits">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleToLongBits
	Quit ..%Execute1R(p0,"doubleToLongBits","java.lang.Double",p1)
]]></Implementation>
</Method>

<Method name="doubleToRawLongBits">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleToRawLongBits
	Quit ..%Execute1R(p0,"doubleToRawLongBits","java.lang.Double",p1)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.lang.Double",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.lang.Double")
]]></Implementation>
</Method>

<Method name="floatValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatValue
	Quit ..%Execute0R(..Gateway,"floatValue",%this)
]]></Implementation>
</Method>

<Method name="intValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValue
	Quit ..%Execute0R(..Gateway,"intValue",%this)
]]></Implementation>
</Method>

<Parameter name="POSITIVEuINFINITY">
<Type>STRING</Type>
<Default>Infinity</Default>
</Parameter>

<Parameter name="NEGATIVEuINFINITY">
<Type>STRING</Type>
<Default>-Infinity</Default>
</Parameter>

<Parameter name="NaN">
<Type>STRING</Type>
<Default>NaN</Default>
</Parameter>

<Parameter name="MAXuVALUE">
<Type>STRING</Type>
<Default>1.7976931348623157E308</Default>
</Parameter>

<Parameter name="MINuNORMAL">
<Type>STRING</Type>
<Default>2.2250738585072014E-308</Default>
</Parameter>

<Parameter name="MINuVALUE">
<Type>STRING</Type>
<Default>4.9E-324</Default>
</Parameter>

<Parameter name="MAXuEXPONENT">
<Type>INTEGER</Type>
<Default>1023</Default>
</Parameter>

<Parameter name="MINuEXPONENT">
<Type>INTEGER</Type>
<Default>-1022</Default>
</Parameter>

<Parameter name="SIZE">
<Type>INTEGER</Type>
<Default>64</Default>
</Parameter>

<Parameter name="TYPE">
<Type>STRING</Type>
<Default>double</Default>
</Parameter>
</Class>


<Class name="java.lang.Enum">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Comparable,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getDeclaringClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaringClass
	Quit ..%Execute0R(..Gateway,"getDeclaringClass",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="name">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: name
	Quit ..%Execute0R(..Gateway,"name",%this)
]]></Implementation>
</Method>

<Method name="ordinal">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: ordinal
	Quit ..%Execute0R(..Gateway,"ordinal",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit ..%Execute2R(p0,"valueOf","java.lang.Enum",p1,p2)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Exception">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Throwable</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Exception
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Exception",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Float">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Number,java.lang.Comparable</Super>
<TimeChanged>62309,81427</TimeChanged>
<TimeCreated>62309,81427</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Float
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Float",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="intBitsToFloat">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intBitsToFloat
	Quit ..%Execute1R(p0,"intBitsToFloat","java.lang.Float",p1)
]]></Implementation>
</Method>

<Method name="compare">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compare
	Quit ..%Execute2R(p0,"compare","java.lang.Float",p1,p2)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="doubleValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleValue
	Quit ..%Execute0R(..Gateway,"doubleValue",%this)
]]></Implementation>
</Method>

<Method name="byteValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: byteValue
	Quit ..%Execute0R(..Gateway,"byteValue",%this)
]]></Implementation>
</Method>

<Method name="toHexString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toHexString
	Quit ..%Execute1R(p0,"toHexString","java.lang.Float",p1)
]]></Implementation>
</Method>

<Method name="floatToRawIntBits">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatToRawIntBits
	Quit ..%Execute1R(p0,"floatToRawIntBits","java.lang.Float",p1)
]]></Implementation>
</Method>

<Method name="shortValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shortValue
	Quit ..%Execute0R(..Gateway,"shortValue",%this)
]]></Implementation>
</Method>

<Method name="longValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValue
	Quit ..%Execute0R(..Gateway,"longValue",%this)
]]></Implementation>
</Method>

<Method name="floatToIntBits">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatToIntBits
	Quit ..%Execute1R(p0,"floatToIntBits","java.lang.Float",p1)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.lang.Float",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.lang.Float")
]]></Implementation>
</Method>

<Method name="floatValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatValue
	Quit ..%Execute0R(..Gateway,"floatValue",%this)
]]></Implementation>
</Method>

<Method name="parseFloat">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parseFloat
	Quit ..%Execute1R(p0,"parseFloat","java.lang.Float",p1)
]]></Implementation>
</Method>

<Method name="intValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValue
	Quit ..%Execute0R(..Gateway,"intValue",%this)
]]></Implementation>
</Method>

<Parameter name="POSITIVEuINFINITY">
<Type>STRING</Type>
<Default>Infinity</Default>
</Parameter>

<Parameter name="NEGATIVEuINFINITY">
<Type>STRING</Type>
<Default>-Infinity</Default>
</Parameter>

<Parameter name="NaN">
<Type>STRING</Type>
<Default>NaN</Default>
</Parameter>

<Parameter name="MAXuVALUE">
<Type>STRING</Type>
<Default>3.4028235E38</Default>
</Parameter>

<Parameter name="MINuNORMAL">
<Type>STRING</Type>
<Default>1.17549435E-38</Default>
</Parameter>

<Parameter name="MINuVALUE">
<Type>STRING</Type>
<Default>1.4E-45</Default>
</Parameter>

<Parameter name="MAXuEXPONENT">
<Type>INTEGER</Type>
<Default>127</Default>
</Parameter>

<Parameter name="MINuEXPONENT">
<Type>INTEGER</Type>
<Default>-126</Default>
</Parameter>

<Parameter name="SIZE">
<Type>INTEGER</Type>
<Default>32</Default>
</Parameter>

<Parameter name="TYPE">
<Type>STRING</Type>
<Default>float</Default>
</Parameter>
</Class>


<Class name="java.lang.Integer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Number,java.lang.Comparable</Super>
<TimeChanged>62309,81435</TimeChanged>
<TimeCreated>62309,81435</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Integer
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Integer",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="parseInt">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parseInt
	Quit:$D(p2) ..%ExecuteOLR2(p0,"parseInt","java.lang.Integer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"parseInt","java.lang.Integer",p1)
	Quit ..%ExecuteOLR0(p0,"parseInt","java.lang.Integer")
]]></Implementation>
</Method>

<Method name="rotateLeft">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rotateLeft
	Quit ..%Execute2R(p0,"rotateLeft","java.lang.Integer",p1,p2)
]]></Implementation>
</Method>

<Method name="reverseBytes">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reverseBytes
	Quit ..%Execute1R(p0,"reverseBytes","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="doubleValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleValue
	Quit ..%Execute0R(..Gateway,"doubleValue",%this)
]]></Implementation>
</Method>

<Method name="toHexString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toHexString
	Quit ..%Execute1R(p0,"toHexString","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="rotateRight">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rotateRight
	Quit ..%Execute2R(p0,"rotateRight","java.lang.Integer",p1,p2)
]]></Implementation>
</Method>

<Method name="shortValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shortValue
	Quit ..%Execute0R(..Gateway,"shortValue",%this)
]]></Implementation>
</Method>

<Method name="getInteger">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInteger
	Quit:$D(p2) ..%ExecuteOLR2(p0,"getInteger","java.lang.Integer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"getInteger","java.lang.Integer",p1)
	Quit ..%ExecuteOLR0(p0,"getInteger","java.lang.Integer")
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p2) ..%ExecuteOLR2(p0,"valueOf","java.lang.Integer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.lang.Integer",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.lang.Integer")
]]></Implementation>
</Method>

<Method name="intValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValue
	Quit ..%Execute0R(..Gateway,"intValue",%this)
]]></Implementation>
</Method>

<Method name="reverse">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reverse
	Quit ..%Execute1R(p0,"reverse","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="lowestOneBit">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lowestOneBit
	Quit ..%Execute1R(p0,"lowestOneBit","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="byteValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: byteValue
	Quit ..%Execute0R(..Gateway,"byteValue",%this)
]]></Implementation>
</Method>

<Method name="numberOfLeadingZeros">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: numberOfLeadingZeros
	Quit ..%Execute1R(p0,"numberOfLeadingZeros","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="numberOfTrailingZeros">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: numberOfTrailingZeros
	Quit ..%Execute1R(p0,"numberOfTrailingZeros","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="highestOneBit">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: highestOneBit
	Quit ..%Execute1R(p0,"highestOneBit","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="bitCount">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: bitCount
	Quit ..%Execute1R(p0,"bitCount","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="signum">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: signum
	Quit ..%Execute1R(p0,"signum","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="toOctalString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toOctalString
	Quit ..%Execute1R(p0,"toOctalString","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="decode">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: decode
	Quit ..%Execute1R(p0,"decode","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Method name="longValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValue
	Quit ..%Execute0R(..Gateway,"longValue",%this)
]]></Implementation>
</Method>

<Method name="floatValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatValue
	Quit ..%Execute0R(..Gateway,"floatValue",%this)
]]></Implementation>
</Method>

<Method name="toBinaryString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toBinaryString
	Quit ..%Execute1R(p0,"toBinaryString","java.lang.Integer",p1)
]]></Implementation>
</Method>

<Parameter name="MINuVALUE">
<Type>INTEGER</Type>
<Default>-2147483648</Default>
</Parameter>

<Parameter name="MAXuVALUE">
<Type>INTEGER</Type>
<Default>2147483647</Default>
</Parameter>

<Parameter name="TYPE">
<Type>STRING</Type>
<Default>int</Default>
</Parameter>

<Parameter name="SIZE">
<Type>INTEGER</Type>
<Default>32</Default>
</Parameter>
</Class>


<Class name="java.lang.Iterable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Long">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Number,java.lang.Comparable</Super>
<TimeChanged>62309,81442</TimeChanged>
<TimeCreated>62309,81442</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Long
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Long",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="rotateLeft">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rotateLeft
	Quit ..%Execute2R(p0,"rotateLeft","java.lang.Long",p1,p2)
]]></Implementation>
</Method>

<Method name="reverseBytes">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reverseBytes
	Quit ..%Execute1R(p0,"reverseBytes","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="doubleValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleValue
	Quit ..%Execute0R(..Gateway,"doubleValue",%this)
]]></Implementation>
</Method>

<Method name="getLong">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLong
	Quit:$D(p2) ..%ExecuteOLR2(p0,"getLong","java.lang.Long",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"getLong","java.lang.Long",p1)
	Quit ..%ExecuteOLR0(p0,"getLong","java.lang.Long")
]]></Implementation>
</Method>

<Method name="toHexString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toHexString
	Quit ..%Execute1R(p0,"toHexString","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="rotateRight">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rotateRight
	Quit ..%Execute2R(p0,"rotateRight","java.lang.Long",p1,p2)
]]></Implementation>
</Method>

<Method name="shortValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shortValue
	Quit ..%Execute0R(..Gateway,"shortValue",%this)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p2) ..%ExecuteOLR2(p0,"valueOf","java.lang.Long",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.lang.Long",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.lang.Long")
]]></Implementation>
</Method>

<Method name="intValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValue
	Quit ..%Execute0R(..Gateway,"intValue",%this)
]]></Implementation>
</Method>

<Method name="reverse">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reverse
	Quit ..%Execute1R(p0,"reverse","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="lowestOneBit">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lowestOneBit
	Quit ..%Execute1R(p0,"lowestOneBit","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="byteValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: byteValue
	Quit ..%Execute0R(..Gateway,"byteValue",%this)
]]></Implementation>
</Method>

<Method name="numberOfLeadingZeros">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: numberOfLeadingZeros
	Quit ..%Execute1R(p0,"numberOfLeadingZeros","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="numberOfTrailingZeros">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: numberOfTrailingZeros
	Quit ..%Execute1R(p0,"numberOfTrailingZeros","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="parseLong">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parseLong
	Quit:$D(p2) ..%ExecuteOLR2(p0,"parseLong","java.lang.Long",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"parseLong","java.lang.Long",p1)
	Quit ..%ExecuteOLR0(p0,"parseLong","java.lang.Long")
]]></Implementation>
</Method>

<Method name="highestOneBit">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: highestOneBit
	Quit ..%Execute1R(p0,"highestOneBit","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="bitCount">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: bitCount
	Quit ..%Execute1R(p0,"bitCount","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="signum">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: signum
	Quit ..%Execute1R(p0,"signum","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="toOctalString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toOctalString
	Quit ..%Execute1R(p0,"toOctalString","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="decode">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: decode
	Quit ..%Execute1R(p0,"decode","java.lang.Long",p1)
]]></Implementation>
</Method>

<Method name="longValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValue
	Quit ..%Execute0R(..Gateway,"longValue",%this)
]]></Implementation>
</Method>

<Method name="floatValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatValue
	Quit ..%Execute0R(..Gateway,"floatValue",%this)
]]></Implementation>
</Method>

<Method name="toBinaryString">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toBinaryString
	Quit ..%Execute1R(p0,"toBinaryString","java.lang.Long",p1)
]]></Implementation>
</Method>

<Parameter name="MINuVALUE">
<Type>STRING</Type>
<Default>-9223372036854775808</Default>
</Parameter>

<Parameter name="MAXuVALUE">
<Type>STRING</Type>
<Default>9223372036854775807</Default>
</Parameter>

<Parameter name="TYPE">
<Type>STRING</Type>
<Default>long</Default>
</Parameter>

<Parameter name="SIZE">
<Type>INTEGER</Type>
<Default>64</Default>
</Parameter>
</Class>


<Class name="java.lang.Number">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Number
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Number",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="shortValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shortValue
	Quit ..%Execute0R(..Gateway,"shortValue",%this)
]]></Implementation>
</Method>

<Method name="longValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValue
	Quit ..%Execute0R(..Gateway,"longValue",%this)
]]></Implementation>
</Method>

<Method name="doubleValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleValue
	Quit ..%Execute0R(..Gateway,"doubleValue",%this)
]]></Implementation>
</Method>

<Method name="floatValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatValue
	Quit ..%Execute0R(..Gateway,"floatValue",%this)
]]></Implementation>
</Method>

<Method name="byteValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: byteValue
	Quit ..%Execute0R(..Gateway,"byteValue",%this)
]]></Implementation>
</Method>

<Method name="intValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValue
	Quit ..%Execute0R(..Gateway,"intValue",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Object">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Object
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Object",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClass
	Quit ..%Execute0R(..Gateway,"getClass",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="notify">
<Implementation><![CDATA[
	#; Corresponding Java method: notify
	Do ..%Execute0(..Gateway,"notify",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="wait">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: wait
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"wait",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"wait",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"wait",%this) Quit
]]></Implementation>
</Method>

<Method name="notifyAll">
<Implementation><![CDATA[
	#; Corresponding Java method: notifyAll
	Do ..%Execute0(..Gateway,"notifyAll",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Package">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.reflect.AnnotatedElement</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotations
	Quit ..%Execute0R(..Gateway,"getAnnotations",%this)
]]></Implementation>
</Method>

<Method name="getSpecificationVendor">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSpecificationVendor
	Quit ..%Execute0R(..Gateway,"getSpecificationVendor",%this)
]]></Implementation>
</Method>

<Method name="getAnnotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotation
	Quit ..%Execute1R(..Gateway,"getAnnotation",%this,p0)
]]></Implementation>
</Method>

<Method name="isCompatibleWith">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCompatibleWith
	Quit ..%Execute1R(..Gateway,"isCompatibleWith",%this,p0)
]]></Implementation>
</Method>

<Method name="getPackages">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPackages
	Quit ..%Execute0R(p0,"getPackages","java.lang.Package")
]]></Implementation>
</Method>

<Method name="getImplementationTitle">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getImplementationTitle
	Quit ..%Execute0R(..Gateway,"getImplementationTitle",%this)
]]></Implementation>
</Method>

<Method name="getPackage">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPackage
	Quit ..%Execute1R(p0,"getPackage","java.lang.Package",p1)
]]></Implementation>
</Method>

<Method name="getSpecificationVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSpecificationVersion
	Quit ..%Execute0R(..Gateway,"getSpecificationVersion",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredAnnotations
	Quit ..%Execute0R(..Gateway,"getDeclaredAnnotations",%this)
]]></Implementation>
</Method>

<Method name="getImplementationVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getImplementationVersion
	Quit ..%Execute0R(..Gateway,"getImplementationVersion",%this)
]]></Implementation>
</Method>

<Method name="isSealed">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSealed
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"isSealed",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"isSealed",%this)
]]></Implementation>
</Method>

<Method name="getImplementationVendor">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getImplementationVendor
	Quit ..%Execute0R(..Gateway,"getImplementationVendor",%this)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="isAnnotationPresent">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAnnotationPresent
	Quit ..%Execute1R(..Gateway,"isAnnotationPresent",%this,p0)
]]></Implementation>
</Method>

<Method name="getSpecificationTitle">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSpecificationTitle
	Quit ..%Execute0R(..Gateway,"getSpecificationTitle",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Readable">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="read">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: read
	Quit ..%Execute1R(..Gateway,"read",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.StackTraceElement">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.StackTraceElement
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.StackTraceElement",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getMethodName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMethodName
	Quit ..%Execute0R(..Gateway,"getMethodName",%this)
]]></Implementation>
</Method>

<Method name="getFileName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFileName
	Quit ..%Execute0R(..Gateway,"getFileName",%this)
]]></Implementation>
</Method>

<Method name="getClassName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClassName
	Quit ..%Execute0R(..Gateway,"getClassName",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getLineNumber">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLineNumber
	Quit ..%Execute0R(..Gateway,"getLineNumber",%this)
]]></Implementation>
</Method>

<Method name="isNativeMethod">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isNativeMethod
	Quit ..%Execute0R(..Gateway,"isNativeMethod",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.String">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable,java.lang.Comparable,java.lang.CharSequence</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.String
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.String",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="contentEquals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contentEquals
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"contentEquals",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"contentEquals",%this)
]]></Implementation>
</Method>

<Method name="codePointBefore">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: codePointBefore
	Quit ..%Execute1R(..Gateway,"codePointBefore",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="indexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: indexOf
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"indexOf",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"indexOf",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"indexOf",%this)
]]></Implementation>
</Method>

<Method name="toUpperCase">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toUpperCase
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toUpperCase",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toUpperCase",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="matches">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: matches
	Quit ..%Execute1R(..Gateway,"matches",%this,p0)
]]></Implementation>
</Method>

<Method name="substring">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: substring
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"substring",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"substring",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"substring",%this)
]]></Implementation>
</Method>

<Method name="equalsIgnoreCase">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equalsIgnoreCase
	Quit ..%Execute1R(..Gateway,"equalsIgnoreCase",%this,p0)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="replaceFirst">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replaceFirst
	Quit ..%Execute2R(..Gateway,"replaceFirst",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="codePointAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: codePointAt
	Quit ..%Execute1R(..Gateway,"codePointAt",%this,p0)
]]></Implementation>
</Method>

<Method name="getChars">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: getChars
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getChars",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Do ..%WriteArray(..Gateway,"[C",p2)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p3) ..%ExecuteOLR3(p0,"valueOf","java.lang.String",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"valueOf","java.lang.String",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.lang.String",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.lang.String")
]]></Implementation>
</Method>

<Method name="copyValueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: copyValueOf
	Quit:$D(p3) ..%ExecuteOLR3(p0,"copyValueOf","java.lang.String",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"copyValueOf","java.lang.String",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"copyValueOf","java.lang.String",p1)
	Quit ..%ExecuteOLR0(p0,"copyValueOf","java.lang.String")
]]></Implementation>
</Method>

<Method name="trim">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: trim
	Quit ..%Execute0R(..Gateway,"trim",%this)
]]></Implementation>
</Method>

<Method name="codePointCount">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: codePointCount
	Quit ..%Execute2R(..Gateway,"codePointCount",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="charAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: charAt
	Quit ..%Execute1R(..Gateway,"charAt",%this,p0)
]]></Implementation>
</Method>

<Method name="subSequence">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subSequence
	Quit ..%Execute2R(..Gateway,"subSequence",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBytes
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"getBytes",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getBytes",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getBytes",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBytes",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBytes",%this)
]]></Implementation>
</Method>

<Method name="startsWith">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: startsWith
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"startsWith",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"startsWith",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"startsWith",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="lastIndexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lastIndexOf
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"lastIndexOf",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"lastIndexOf",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"lastIndexOf",%this)
]]></Implementation>
</Method>

<Method name="offsetByCodePoints">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: offsetByCodePoints
	Quit ..%Execute2R(..Gateway,"offsetByCodePoints",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="format">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: format
	Quit:$D(p3) ..%ExecuteOLR3(p0,"format","java.lang.String",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"format","java.lang.String",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"format","java.lang.String",p1)
	Quit ..%ExecuteOLR0(p0,"format","java.lang.String")
]]></Implementation>
</Method>

<Method name="concat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: concat
	Quit ..%Execute1R(..Gateway,"concat",%this,p0)
]]></Implementation>
</Method>

<Method name="replace">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replace
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"replace",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"replace",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"replace",%this)
]]></Implementation>
</Method>

<Method name="compareToIgnoreCase">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareToIgnoreCase
	Quit ..%Execute1R(..Gateway,"compareToIgnoreCase",%this,p0)
]]></Implementation>
</Method>

<Method name="toCharArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toCharArray
	Quit ..%Execute0R(..Gateway,"toCharArray",%this)
]]></Implementation>
</Method>

<Method name="toLowerCase">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toLowerCase
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toLowerCase",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toLowerCase",%this)
]]></Implementation>
</Method>

<Method name="intern">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intern
	Quit ..%Execute0R(..Gateway,"intern",%this)
]]></Implementation>
</Method>

<Method name="split">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: split
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"split",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"split",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"split",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="replaceAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replaceAll
	Quit ..%Execute2R(..Gateway,"replaceAll",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="endsWith">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: endsWith
	Quit ..%Execute1R(..Gateway,"endsWith",%this,p0)
]]></Implementation>
</Method>

<Method name="regionMatches">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: regionMatches
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("regionMatches",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Parameter name="CASEuINSENSITIVEuORDER">
<Type>STRING</Type>
<Default>java.lang.String$CaseInsensitiveComparator@1cd66ea</Default>
</Parameter>
</Class>


<Class name="java.lang.StringBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.io.Serializable,java.lang.CharSequence</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.StringBuffer
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.StringBuffer",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="subSequence">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subSequence
	Quit ..%Execute2R(..Gateway,"subSequence",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="append">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: append
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"append",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"append",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"append",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"append",%this)
]]></Implementation>
</Method>

<Method name="reverse">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reverse
	Quit ..%ExecuteOLR0(..Gateway,"reverse",%this)
]]></Implementation>
</Method>

<Method name="codePointBefore">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: codePointBefore
	Quit ..%Execute1R(..Gateway,"codePointBefore",%this,p0)
]]></Implementation>
</Method>

<Method name="deleteCharAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: deleteCharAt
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"deleteCharAt",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"deleteCharAt",%this)
]]></Implementation>
</Method>

<Method name="trimToSize">
<Implementation><![CDATA[
	#; Corresponding Java method: trimToSize
	Do ..%Execute0(..Gateway,"trimToSize",%this)
]]></Implementation>
</Method>

<Method name="lastIndexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lastIndexOf
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"lastIndexOf",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"lastIndexOf",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"lastIndexOf",%this)
]]></Implementation>
</Method>

<Method name="indexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: indexOf
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"indexOf",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"indexOf",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"indexOf",%this)
]]></Implementation>
</Method>

<Method name="offsetByCodePoints">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: offsetByCodePoints
	Quit ..%Execute2R(..Gateway,"offsetByCodePoints",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="replace">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replace
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"replace",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"replace",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"replace",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"replace",%this)
]]></Implementation>
</Method>

<Method name="setCharAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setCharAt
	Do ..%Execute2(..Gateway,"setCharAt",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="substring">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: substring
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"substring",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"substring",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"substring",%this)
]]></Implementation>
</Method>

<Method name="ensureCapacity">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: ensureCapacity
	Do ..%Execute1(..Gateway,"ensureCapacity",%this,p0)
]]></Implementation>
</Method>

<Method name="delete">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: delete
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"delete",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"delete",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"delete",%this)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="capacity">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: capacity
	Quit ..%Execute0R(..Gateway,"capacity",%this)
]]></Implementation>
</Method>

<Method name="codePointAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: codePointAt
	Quit ..%Execute1R(..Gateway,"codePointAt",%this,p0)
]]></Implementation>
</Method>

<Method name="getChars">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: getChars
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getChars",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Do ..%WriteArray(..Gateway,"[C",p2)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="appendCodePoint">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: appendCodePoint
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"appendCodePoint",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"appendCodePoint",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="setLength">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLength
	Do ..%Execute1(..Gateway,"setLength",%this,p0)
]]></Implementation>
</Method>

<Method name="insert">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: insert
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"insert",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"insert",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"insert",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"insert",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"insert",%this)
]]></Implementation>
</Method>

<Method name="codePointCount">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: codePointCount
	Quit ..%Execute2R(..Gateway,"codePointCount",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="charAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: charAt
	Quit ..%Execute1R(..Gateway,"charAt",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.Throwable">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.lang.Throwable
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.lang.Throwable",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getMessage">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMessage
	Quit ..%Execute0R(..Gateway,"getMessage",%this)
]]></Implementation>
</Method>

<Method name="getCause">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCause
	Quit ..%Execute0R(..Gateway,"getCause",%this)
]]></Implementation>
</Method>

<Method name="getStackTrace">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getStackTrace
	Quit ..%Execute0R(..Gateway,"getStackTrace",%this)
]]></Implementation>
</Method>

<Method name="setStackTrace">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setStackTrace
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setStackTrace",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.StackTraceElement;",p0)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="initCause">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: initCause
	Quit ..%Execute1R(..Gateway,"initCause",%this,p0)
]]></Implementation>
</Method>

<Method name="fillInStackTrace">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: fillInStackTrace
	Quit ..%Execute0R(..Gateway,"fillInStackTrace",%this)
]]></Implementation>
</Method>

<Method name="printStackTrace">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: printStackTrace
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"printStackTrace",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"printStackTrace",%this) Quit
]]></Implementation>
</Method>

<Method name="getLocalizedMessage">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLocalizedMessage
	Quit ..%Execute0R(..Gateway,"getLocalizedMessage",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.annotation.Annotation">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="annotationType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: annotationType
	Quit ..%Execute0R(..Gateway,"annotationType",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>
</Class>




<Class name="java.lang.reflect.AccessibleObject">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.reflect.AnnotatedElement</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotations
	Quit ..%Execute0R(..Gateway,"getAnnotations",%this)
]]></Implementation>
</Method>

<Method name="isAccessible">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAccessible
	Quit ..%Execute0R(..Gateway,"isAccessible",%this)
]]></Implementation>
</Method>

<Method name="getAnnotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotation
	Quit ..%Execute1R(..Gateway,"getAnnotation",%this,p0)
]]></Implementation>
</Method>

<Method name="isAnnotationPresent">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAnnotationPresent
	Quit ..%Execute1R(..Gateway,"isAnnotationPresent",%this,p0)
]]></Implementation>
</Method>

<Method name="getDeclaredAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredAnnotations
	Quit ..%Execute0R(..Gateway,"getDeclaredAnnotations",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.reflect.AnnotatedElement">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotations
	Quit ..%Execute0R(..Gateway,"getAnnotations",%this)
]]></Implementation>
</Method>

<Method name="getAnnotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotation
	Quit ..%Execute1R(..Gateway,"getAnnotation",%this,p0)
]]></Implementation>
</Method>

<Method name="isAnnotationPresent">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAnnotationPresent
	Quit ..%Execute1R(..Gateway,"isAnnotationPresent",%this,p0)
]]></Implementation>
</Method>

<Method name="getDeclaredAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredAnnotations
	Quit ..%Execute0R(..Gateway,"getDeclaredAnnotations",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.reflect.Constructor">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.reflect.AccessibleObject,java.lang.reflect.GenericDeclaration,java.lang.reflect.Member</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getDeclaringClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaringClass
	Quit ..%Execute0R(..Gateway,"getDeclaringClass",%this)
]]></Implementation>
</Method>

<Method name="getParameterTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterTypes
	Quit ..%Execute0R(..Gateway,"getParameterTypes",%this)
]]></Implementation>
</Method>

<Method name="getParameterAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterAnnotations
	Quit ..%Execute0R(..Gateway,"getParameterAnnotations",%this)
]]></Implementation>
</Method>

<Method name="getAnnotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotation
	Quit ..%Execute1R(..Gateway,"getAnnotation",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toGenericString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toGenericString
	Quit ..%Execute0R(..Gateway,"toGenericString",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredAnnotations
	Quit ..%Execute0R(..Gateway,"getDeclaredAnnotations",%this)
]]></Implementation>
</Method>

<Method name="isSynthetic">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSynthetic
	Quit ..%Execute0R(..Gateway,"isSynthetic",%this)
]]></Implementation>
</Method>

<Method name="getExceptionTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getExceptionTypes
	Quit ..%Execute0R(..Gateway,"getExceptionTypes",%this)
]]></Implementation>
</Method>

<Method name="getGenericParameterTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericParameterTypes
	Quit ..%Execute0R(..Gateway,"getGenericParameterTypes",%this)
]]></Implementation>
</Method>

<Method name="getModifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getModifiers
	Quit ..%Execute0R(..Gateway,"getModifiers",%this)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="getTypeParameters">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTypeParameters
	Quit ..%Execute0R(..Gateway,"getTypeParameters",%this)
]]></Implementation>
</Method>

<Method name="getGenericExceptionTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericExceptionTypes
	Quit ..%Execute0R(..Gateway,"getGenericExceptionTypes",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="newInstance">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: newInstance
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("newInstance",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Object;",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="isVarArgs">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isVarArgs
	Quit ..%Execute0R(..Gateway,"isVarArgs",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.reflect.Field">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.reflect.AccessibleObject,java.lang.reflect.Member</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="setFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFloat
	Do ..%Execute2(..Gateway,"setFloat",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getDeclaringClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaringClass
	Quit ..%Execute0R(..Gateway,"getDeclaringClass",%this)
]]></Implementation>
</Method>

<Method name="getDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDouble
	Quit ..%Execute1R(..Gateway,"getDouble",%this,p0)
]]></Implementation>
</Method>

<Method name="getBoolean">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBoolean
	Quit ..%Execute1R(..Gateway,"getBoolean",%this,p0)
]]></Implementation>
</Method>

<Method name="set">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: set
	Do ..%Execute2(..Gateway,"set",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLong
	Quit ..%Execute1R(..Gateway,"getLong",%this,p0)
]]></Implementation>
</Method>

<Method name="getDeclaredAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredAnnotations
	Quit ..%Execute0R(..Gateway,"getDeclaredAnnotations",%this)
]]></Implementation>
</Method>

<Method name="setBoolean">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBoolean
	Do ..%Execute2(..Gateway,"setBoolean",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="isSynthetic">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSynthetic
	Quit ..%Execute0R(..Gateway,"isSynthetic",%this)
]]></Implementation>
</Method>

<Method name="setDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDouble
	Do ..%Execute2(..Gateway,"setDouble",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setShort
	Do ..%Execute2(..Gateway,"setShort",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getType
	Quit ..%Execute0R(..Gateway,"getType",%this)
]]></Implementation>
</Method>

<Method name="setInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setInt
	Do ..%Execute2(..Gateway,"setInt",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getChar">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getChar
	Quit ..%Execute1R(..Gateway,"getChar",%this,p0)
]]></Implementation>
</Method>

<Method name="setLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLong
	Do ..%Execute2(..Gateway,"setLong",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setChar">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setChar
	Do ..%Execute2(..Gateway,"setChar",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getShort
	Quit ..%Execute1R(..Gateway,"getShort",%this,p0)
]]></Implementation>
</Method>

<Method name="getAnnotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotation
	Quit ..%Execute1R(..Gateway,"getAnnotation",%this,p0)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="getInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInt
	Quit ..%Execute1R(..Gateway,"getInt",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getByte">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getByte
	Quit ..%Execute1R(..Gateway,"getByte",%this,p0)
]]></Implementation>
</Method>

<Method name="toGenericString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toGenericString
	Quit ..%Execute0R(..Gateway,"toGenericString",%this)
]]></Implementation>
</Method>

<Method name="isEnumConstant">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEnumConstant
	Quit ..%Execute0R(..Gateway,"isEnumConstant",%this)
]]></Implementation>
</Method>

<Method name="getModifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getModifiers
	Quit ..%Execute0R(..Gateway,"getModifiers",%this)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="getGenericType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericType
	Quit ..%Execute0R(..Gateway,"getGenericType",%this)
]]></Implementation>
</Method>

<Method name="setByte">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setByte
	Do ..%Execute2(..Gateway,"setByte",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFloat
	Quit ..%Execute1R(..Gateway,"getFloat",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.reflect.GenericDeclaration">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getTypeParameters">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTypeParameters
	Quit ..%Execute0R(..Gateway,"getTypeParameters",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.reflect.Member">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getDeclaringClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaringClass
	Quit ..%Execute0R(..Gateway,"getDeclaringClass",%this)
]]></Implementation>
</Method>

<Method name="getModifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getModifiers
	Quit ..%Execute0R(..Gateway,"getModifiers",%this)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="isSynthetic">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSynthetic
	Quit ..%Execute0R(..Gateway,"isSynthetic",%this)
]]></Implementation>
</Method>

<Parameter name="PUBLIC">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="DECLARED">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>
</Class>


<Class name="java.lang.reflect.Method">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.reflect.AccessibleObject,java.lang.reflect.GenericDeclaration,java.lang.reflect.Member</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getDeclaringClass">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaringClass
	Quit ..%Execute0R(..Gateway,"getDeclaringClass",%this)
]]></Implementation>
</Method>

<Method name="getParameterTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterTypes
	Quit ..%Execute0R(..Gateway,"getParameterTypes",%this)
]]></Implementation>
</Method>

<Method name="getParameterAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterAnnotations
	Quit ..%Execute0R(..Gateway,"getParameterAnnotations",%this)
]]></Implementation>
</Method>

<Method name="isBridge">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isBridge
	Quit ..%Execute0R(..Gateway,"isBridge",%this)
]]></Implementation>
</Method>

<Method name="getAnnotation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAnnotation
	Quit ..%Execute1R(..Gateway,"getAnnotation",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getGenericReturnType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericReturnType
	Quit ..%Execute0R(..Gateway,"getGenericReturnType",%this)
]]></Implementation>
</Method>

<Method name="getReturnType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getReturnType
	Quit ..%Execute0R(..Gateway,"getReturnType",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toGenericString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toGenericString
	Quit ..%Execute0R(..Gateway,"toGenericString",%this)
]]></Implementation>
</Method>

<Method name="getDeclaredAnnotations">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDeclaredAnnotations
	Quit ..%Execute0R(..Gateway,"getDeclaredAnnotations",%this)
]]></Implementation>
</Method>

<Method name="isSynthetic">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSynthetic
	Quit ..%Execute0R(..Gateway,"isSynthetic",%this)
]]></Implementation>
</Method>

<Method name="getExceptionTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getExceptionTypes
	Quit ..%Execute0R(..Gateway,"getExceptionTypes",%this)
]]></Implementation>
</Method>

<Method name="getDefaultValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefaultValue
	Quit ..%Execute0R(..Gateway,"getDefaultValue",%this)
]]></Implementation>
</Method>

<Method name="getGenericParameterTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericParameterTypes
	Quit ..%Execute0R(..Gateway,"getGenericParameterTypes",%this)
]]></Implementation>
</Method>

<Method name="getModifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getModifiers
	Quit ..%Execute0R(..Gateway,"getModifiers",%this)
]]></Implementation>
</Method>

<Method name="invoke">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: invoke
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("invoke",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Object;",p1)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="getTypeParameters">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTypeParameters
	Quit ..%Execute0R(..Gateway,"getTypeParameters",%this)
]]></Implementation>
</Method>

<Method name="getGenericExceptionTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericExceptionTypes
	Quit ..%Execute0R(..Gateway,"getGenericExceptionTypes",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="isVarArgs">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isVarArgs
	Quit ..%Execute0R(..Gateway,"isVarArgs",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.lang.reflect.Type">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>
</Class>


<Class name="java.lang.reflect.TypeVariable">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.reflect.Type</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="getGenericDeclaration">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGenericDeclaration
	Quit ..%Execute0R(..Gateway,"getGenericDeclaration",%this)
]]></Implementation>
</Method>

<Method name="getBounds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBounds
	Quit ..%Execute0R(..Gateway,"getBounds",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.math.BigDecimal">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Number,java.lang.Comparable</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.math.BigDecimal
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.math.BigDecimal",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="scale">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: scale
	Quit ..%Execute0R(..Gateway,"scale",%this)
]]></Implementation>
</Method>

<Method name="toPlainString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toPlainString
	Quit ..%Execute0R(..Gateway,"toPlainString",%this)
]]></Implementation>
</Method>

<Method name="toBigInteger">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toBigInteger
	Quit ..%Execute0R(..Gateway,"toBigInteger",%this)
]]></Implementation>
</Method>

<Method name="pow">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: pow
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"pow",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"pow",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"pow",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="round">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: round
	Quit ..%Execute1R(..Gateway,"round",%this,p0)
]]></Implementation>
</Method>

<Method name="doubleValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleValue
	Quit ..%Execute0R(..Gateway,"doubleValue",%this)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"add",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"add",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"add",%this)
]]></Implementation>
</Method>

<Method name="scaleByPowerOfTen">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: scaleByPowerOfTen
	Quit ..%Execute1R(..Gateway,"scaleByPowerOfTen",%this,p0)
]]></Implementation>
</Method>

<Method name="toBigIntegerExact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toBigIntegerExact
	Quit ..%Execute0R(..Gateway,"toBigIntegerExact",%this)
]]></Implementation>
</Method>

<Method name="remainder">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remainder
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"remainder",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"remainder",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"remainder",%this)
]]></Implementation>
</Method>

<Method name="toEngineeringString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toEngineeringString
	Quit ..%Execute0R(..Gateway,"toEngineeringString",%this)
]]></Implementation>
</Method>

<Method name="unscaledValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: unscaledValue
	Quit ..%Execute0R(..Gateway,"unscaledValue",%this)
]]></Implementation>
</Method>

<Method name="abs">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: abs
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"abs",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"abs",%this)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p2) ..%ExecuteOLR2(p0,"valueOf","java.math.BigDecimal",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.math.BigDecimal",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.math.BigDecimal")
]]></Implementation>
</Method>

<Method name="intValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValue
	Quit ..%Execute0R(..Gateway,"intValue",%this)
]]></Implementation>
</Method>

<Method name="min">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: min
	Quit ..%Execute1R(..Gateway,"min",%this,p0)
]]></Implementation>
</Method>

<Method name="plus">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: plus
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"plus",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"plus",%this)
]]></Implementation>
</Method>

<Method name="movePointRight">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: movePointRight
	Quit ..%Execute1R(..Gateway,"movePointRight",%this,p0)
]]></Implementation>
</Method>

<Method name="negate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: negate
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"negate",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"negate",%this)
]]></Implementation>
</Method>

<Method name="intValueExact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValueExact
	Quit ..%Execute0R(..Gateway,"intValueExact",%this)
]]></Implementation>
</Method>

<Method name="precision">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: precision
	Quit ..%Execute0R(..Gateway,"precision",%this)
]]></Implementation>
</Method>

<Method name="max">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: max
	Quit ..%Execute1R(..Gateway,"max",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="ulp">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: ulp
	Quit ..%Execute0R(..Gateway,"ulp",%this)
]]></Implementation>
</Method>

<Method name="setScale">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setScale
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"setScale",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"setScale",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"setScale",%this)
]]></Implementation>
</Method>

<Method name="movePointLeft">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: movePointLeft
	Quit ..%Execute1R(..Gateway,"movePointLeft",%this,p0)
]]></Implementation>
</Method>

<Method name="multiply">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: multiply
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"multiply",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"multiply",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"multiply",%this)
]]></Implementation>
</Method>

<Method name="divide">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: divide
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"divide",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"divide",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"divide",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"divide",%this)
]]></Implementation>
</Method>

<Method name="divideToIntegralValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: divideToIntegralValue
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"divideToIntegralValue",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"divideToIntegralValue",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"divideToIntegralValue",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="divideAndRemainder">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: divideAndRemainder
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"divideAndRemainder",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"divideAndRemainder",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"divideAndRemainder",%this)
]]></Implementation>
</Method>

<Method name="byteValueExact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: byteValueExact
	Quit ..%Execute0R(..Gateway,"byteValueExact",%this)
]]></Implementation>
</Method>

<Method name="subtract">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subtract
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"subtract",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"subtract",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"subtract",%this)
]]></Implementation>
</Method>

<Method name="signum">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: signum
	Quit ..%Execute0R(..Gateway,"signum",%this)
]]></Implementation>
</Method>

<Method name="longValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValue
	Quit ..%Execute0R(..Gateway,"longValue",%this)
]]></Implementation>
</Method>

<Method name="stripTrailingZeros">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: stripTrailingZeros
	Quit ..%Execute0R(..Gateway,"stripTrailingZeros",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="floatValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatValue
	Quit ..%Execute0R(..Gateway,"floatValue",%this)
]]></Implementation>
</Method>

<Method name="longValueExact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValueExact
	Quit ..%Execute0R(..Gateway,"longValueExact",%this)
]]></Implementation>
</Method>

<Method name="shortValueExact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shortValueExact
	Quit ..%Execute0R(..Gateway,"shortValueExact",%this)
]]></Implementation>
</Method>

<Parameter name="ZERO">
<Type>STRING</Type>
<Default>0</Default>
</Parameter>

<Parameter name="ONE">
<Type>STRING</Type>
<Default>1</Default>
</Parameter>

<Parameter name="TEN">
<Type>STRING</Type>
<Default>10</Default>
</Parameter>

<Parameter name="ROUNDuUP">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="ROUNDuDOWN">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="ROUNDuCEILING">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="ROUNDuFLOOR">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="ROUNDuHALFuUP">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="ROUNDuHALFuDOWN">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="ROUNDuHALFuEVEN">
<Type>INTEGER</Type>
<Default>6</Default>
</Parameter>

<Parameter name="ROUNDuUNNECESSARY">
<Type>INTEGER</Type>
<Default>7</Default>
</Parameter>
</Class>


<Class name="java.math.BigInteger">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Number,java.lang.Comparable</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.math.BigInteger
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.math.BigInteger",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getLowestSetBit">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLowestSetBit
	Quit ..%Execute0R(..Gateway,"getLowestSetBit",%this)
]]></Implementation>
</Method>

<Method name="modInverse">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: modInverse
	Quit ..%Execute1R(..Gateway,"modInverse",%this,p0)
]]></Implementation>
</Method>

<Method name="pow">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: pow
	Quit ..%Execute1R(..Gateway,"pow",%this,p0)
]]></Implementation>
</Method>

<Method name="shiftLeft">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shiftLeft
	Quit ..%Execute1R(..Gateway,"shiftLeft",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="doubleValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doubleValue
	Quit ..%Execute0R(..Gateway,"doubleValue",%this)
]]></Implementation>
</Method>

<Method name="probablePrime">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: probablePrime
	Quit ..%Execute2R(p0,"probablePrime","java.math.BigInteger",p1,p2)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit ..%Execute1R(..Gateway,"add",%this,p0)
]]></Implementation>
</Method>

<Method name="remainder">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remainder
	Quit ..%Execute1R(..Gateway,"remainder",%this,p0)
]]></Implementation>
</Method>

<Method name="modPow">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: modPow
	Quit ..%Execute2R(..Gateway,"modPow",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="isProbablePrime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isProbablePrime
	Quit ..%Execute1R(..Gateway,"isProbablePrime",%this,p0)
]]></Implementation>
</Method>

<Method name="abs">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: abs
	Quit ..%Execute0R(..Gateway,"abs",%this)
]]></Implementation>
</Method>

<Method name="toByteArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toByteArray
	Quit ..%Execute0R(..Gateway,"toByteArray",%this)
]]></Implementation>
</Method>

<Method name="andNot">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: andNot
	Quit ..%Execute1R(..Gateway,"andNot",%this,p0)
]]></Implementation>
</Method>

<Method name="flipBit">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: flipBit
	Quit ..%Execute1R(..Gateway,"flipBit",%this,p0)
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit ..%Execute1R(p0,"valueOf","java.math.BigInteger",p1)
]]></Implementation>
</Method>

<Method name="intValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: intValue
	Quit ..%Execute0R(..Gateway,"intValue",%this)
]]></Implementation>
</Method>

<Method name="shiftRight">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: shiftRight
	Quit ..%Execute1R(..Gateway,"shiftRight",%this,p0)
]]></Implementation>
</Method>

<Method name="min">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: min
	Quit ..%Execute1R(..Gateway,"min",%this,p0)
]]></Implementation>
</Method>

<Method name="testBit">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: testBit
	Quit ..%Execute1R(..Gateway,"testBit",%this,p0)
]]></Implementation>
</Method>

<Method name="setBit">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setBit
	Quit ..%Execute1R(..Gateway,"setBit",%this,p0)
]]></Implementation>
</Method>

<Method name="negate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: negate
	Quit ..%Execute0R(..Gateway,"negate",%this)
]]></Implementation>
</Method>

<Method name="xor">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: xor
	Quit ..%Execute1R(..Gateway,"xor",%this,p0)
]]></Implementation>
</Method>

<Method name="max">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: max
	Quit ..%Execute1R(..Gateway,"max",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="or">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: or
	Quit ..%Execute1R(..Gateway,"or",%this,p0)
]]></Implementation>
</Method>

<Method name="mod">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: mod
	Quit ..%Execute1R(..Gateway,"mod",%this,p0)
]]></Implementation>
</Method>

<Method name="multiply">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: multiply
	Quit ..%Execute1R(..Gateway,"multiply",%this,p0)
]]></Implementation>
</Method>

<Method name="divide">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: divide
	Quit ..%Execute1R(..Gateway,"divide",%this,p0)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="clearBit">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clearBit
	Quit ..%Execute1R(..Gateway,"clearBit",%this,p0)
]]></Implementation>
</Method>

<Method name="divideAndRemainder">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: divideAndRemainder
	Quit ..%Execute1R(..Gateway,"divideAndRemainder",%this,p0)
]]></Implementation>
</Method>

<Method name="bitLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: bitLength
	Quit ..%Execute0R(..Gateway,"bitLength",%this)
]]></Implementation>
</Method>

<Method name="and">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: and
	Quit ..%Execute1R(..Gateway,"and",%this,p0)
]]></Implementation>
</Method>

<Method name="not">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: not
	Quit ..%Execute0R(..Gateway,"not",%this)
]]></Implementation>
</Method>

<Method name="subtract">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subtract
	Quit ..%Execute1R(..Gateway,"subtract",%this,p0)
]]></Implementation>
</Method>

<Method name="bitCount">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: bitCount
	Quit ..%Execute0R(..Gateway,"bitCount",%this)
]]></Implementation>
</Method>

<Method name="signum">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: signum
	Quit ..%Execute0R(..Gateway,"signum",%this)
]]></Implementation>
</Method>

<Method name="longValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: longValue
	Quit ..%Execute0R(..Gateway,"longValue",%this)
]]></Implementation>
</Method>

<Method name="toString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toString",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="floatValue">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: floatValue
	Quit ..%Execute0R(..Gateway,"floatValue",%this)
]]></Implementation>
</Method>

<Method name="nextProbablePrime">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextProbablePrime
	Quit ..%Execute0R(..Gateway,"nextProbablePrime",%this)
]]></Implementation>
</Method>

<Method name="gcd">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: gcd
	Quit ..%Execute1R(..Gateway,"gcd",%this,p0)
]]></Implementation>
</Method>

<Parameter name="ZERO">
<Type>STRING</Type>
<Default>0</Default>
</Parameter>

<Parameter name="ONE">
<Type>STRING</Type>
<Default>1</Default>
</Parameter>

<Parameter name="TEN">
<Type>STRING</Type>
<Default>10</Default>
</Parameter>
</Class>


<Class name="java.math.MathContext">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.math.MathContext
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.math.MathContext",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getPrecision">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPrecision
	Quit ..%Execute0R(..Gateway,"getPrecision",%this)
]]></Implementation>
</Method>

<Method name="getRoundingMode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRoundingMode
	Quit ..%Execute0R(..Gateway,"getRoundingMode",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Parameter name="UNLIMITED">
<Type>STRING</Type>
<Default>precision=0 roundingMode=HALF_UP</Default>
</Parameter>

<Parameter name="DECIMAL32">
<Type>STRING</Type>
<Default>precision=7 roundingMode=HALF_EVEN</Default>
</Parameter>

<Parameter name="DECIMAL64">
<Type>STRING</Type>
<Default>precision=16 roundingMode=HALF_EVEN</Default>
</Parameter>

<Parameter name="DECIMAL128">
<Type>STRING</Type>
<Default>precision=34 roundingMode=HALF_EVEN</Default>
</Parameter>
</Class>


<Class name="java.math.RoundingMode">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Enum</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="values">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(p0,"values","java.math.RoundingMode")
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p2) ..%ExecuteOLR2(p0,"valueOf","java.math.RoundingMode",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.math.RoundingMode",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.math.RoundingMode")
]]></Implementation>
</Method>

<Parameter name="UP">
<Type>STRING</Type>
<Default>UP</Default>
</Parameter>

<Parameter name="DOWN">
<Type>STRING</Type>
<Default>DOWN</Default>
</Parameter>

<Parameter name="CEILING">
<Type>STRING</Type>
<Default>CEILING</Default>
</Parameter>

<Parameter name="FLOOR">
<Type>STRING</Type>
<Default>FLOOR</Default>
</Parameter>

<Parameter name="HALFuUP">
<Type>STRING</Type>
<Default>HALF_UP</Default>
</Parameter>

<Parameter name="HALFuDOWN">
<Type>STRING</Type>
<Default>HALF_DOWN</Default>
</Parameter>

<Parameter name="HALFuEVEN">
<Type>STRING</Type>
<Default>HALF_EVEN</Default>
</Parameter>

<Parameter name="UNNECESSARY">
<Type>STRING</Type>
<Default>UNNECESSARY</Default>
</Parameter>
</Class>




<Class name="java.net.ContentHandler">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.net.ContentHandler
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.net.ContentHandler",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getContent">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getContent
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getContent",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getContent",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getContent",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.net.ContentHandlerFactory">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="createContentHandler">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createContentHandler
	Quit ..%Execute1R(..Gateway,"createContentHandler",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.net.FileNameMap">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getContentTypeFor">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getContentTypeFor
	Quit ..%Execute1R(..Gateway,"getContentTypeFor",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.net.Proxy.Type">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Enum</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="values">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(p0,"values","java.net.Proxy$Type")
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p2) ..%ExecuteOLR2(p0,"valueOf","java.net.Proxy$Type",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.net.Proxy$Type",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.net.Proxy$Type")
]]></Implementation>
</Method>

<Parameter name="DIRECT">
<Type>STRING</Type>
<Default>DIRECT</Default>
</Parameter>

<Parameter name="HTTP">
<Type>STRING</Type>
<Default>HTTP</Default>
</Parameter>

<Parameter name="SOCKS">
<Type>STRING</Type>
<Default>SOCKS</Default>
</Parameter>
</Class>


<Class name="java.net.Proxy">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.net.Proxy
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.net.Proxy",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="address">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: address
	Quit ..%Execute0R(..Gateway,"address",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="type">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: type
	Quit ..%Execute0R(..Gateway,"type",%this)
]]></Implementation>
</Method>

<Parameter name="NOuPROXY">
<Type>STRING</Type>
<Default>DIRECT</Default>
</Parameter>
</Class>


<Class name="java.net.SocketAddress">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.net.SocketAddress
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.net.SocketAddress",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="java.net.URI">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Comparable,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle,&p7:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.net.URI
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.net.URI",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6)+$D(p7),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Do:$D(p6) ..%OverloadWrite(..Gateway,p6)
	Do:$D(p7) ..%OverloadWrite(..Gateway,p7)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="toASCIIString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toASCIIString
	Quit ..%Execute0R(..Gateway,"toASCIIString",%this)
]]></Implementation>
</Method>

<Method name="getScheme">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getScheme
	Quit ..%Execute0R(..Gateway,"getScheme",%this)
]]></Implementation>
</Method>

<Method name="getAuthority">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAuthority
	Quit ..%Execute0R(..Gateway,"getAuthority",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getFragment">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFragment
	Quit ..%Execute0R(..Gateway,"getFragment",%this)
]]></Implementation>
</Method>

<Method name="getQuery">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getQuery
	Quit ..%Execute0R(..Gateway,"getQuery",%this)
]]></Implementation>
</Method>

<Method name="normalize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: normalize
	Quit ..%Execute0R(..Gateway,"normalize",%this)
]]></Implementation>
</Method>

<Method name="getPort">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPort
	Quit ..%Execute0R(..Gateway,"getPort",%this)
]]></Implementation>
</Method>

<Method name="getPath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPath
	Quit ..%Execute0R(..Gateway,"getPath",%this)
]]></Implementation>
</Method>

<Method name="getRawUserInfo">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRawUserInfo
	Quit ..%Execute0R(..Gateway,"getRawUserInfo",%this)
]]></Implementation>
</Method>

<Method name="getRawPath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRawPath
	Quit ..%Execute0R(..Gateway,"getRawPath",%this)
]]></Implementation>
</Method>

<Method name="resolve">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: resolve
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"resolve",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"resolve",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getSchemeSpecificPart">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSchemeSpecificPart
	Quit ..%Execute0R(..Gateway,"getSchemeSpecificPart",%this)
]]></Implementation>
</Method>

<Method name="parseServerAuthority">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parseServerAuthority
	Quit ..%Execute0R(..Gateway,"parseServerAuthority",%this)
]]></Implementation>
</Method>

<Method name="getUserInfo">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUserInfo
	Quit ..%Execute0R(..Gateway,"getUserInfo",%this)
]]></Implementation>
</Method>

<Method name="isOpaque">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isOpaque
	Quit ..%Execute0R(..Gateway,"isOpaque",%this)
]]></Implementation>
</Method>

<Method name="isAbsolute">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAbsolute
	Quit ..%Execute0R(..Gateway,"isAbsolute",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="getHost">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHost
	Quit ..%Execute0R(..Gateway,"getHost",%this)
]]></Implementation>
</Method>

<Method name="relativize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: relativize
	Quit ..%Execute1R(..Gateway,"relativize",%this,p0)
]]></Implementation>
</Method>

<Method name="create">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: create
	Quit ..%Execute1R(p0,"create","java.net.URI",p1)
]]></Implementation>
</Method>

<Method name="getRawQuery">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRawQuery
	Quit ..%Execute0R(..Gateway,"getRawQuery",%this)
]]></Implementation>
</Method>

<Method name="getRawAuthority">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRawAuthority
	Quit ..%Execute0R(..Gateway,"getRawAuthority",%this)
]]></Implementation>
</Method>

<Method name="getRawFragment">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRawFragment
	Quit ..%Execute0R(..Gateway,"getRawFragment",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="toURL">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toURL
	Quit ..%Execute0R(..Gateway,"toURL",%this)
]]></Implementation>
</Method>

<Method name="getRawSchemeSpecificPart">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRawSchemeSpecificPart
	Quit ..%Execute0R(..Gateway,"getRawSchemeSpecificPart",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.net.URL">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.net.URL
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.net.URL",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getFile">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFile
	Quit ..%Execute0R(..Gateway,"getFile",%this)
]]></Implementation>
</Method>

<Method name="toExternalForm">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toExternalForm
	Quit ..%Execute0R(..Gateway,"toExternalForm",%this)
]]></Implementation>
</Method>

<Method name="getProtocol">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getProtocol
	Quit ..%Execute0R(..Gateway,"getProtocol",%this)
]]></Implementation>
</Method>

<Method name="getContent">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getContent
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getContent",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getContent",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getAuthority">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAuthority
	Quit ..%Execute0R(..Gateway,"getAuthority",%this)
]]></Implementation>
</Method>

<Method name="sameFile">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: sameFile
	Quit ..%Execute1R(..Gateway,"sameFile",%this,p0)
]]></Implementation>
</Method>

<Method name="getUserInfo">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUserInfo
	Quit ..%Execute0R(..Gateway,"getUserInfo",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getDefaultPort">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefaultPort
	Quit ..%Execute0R(..Gateway,"getDefaultPort",%this)
]]></Implementation>
</Method>

<Method name="getHost">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHost
	Quit ..%Execute0R(..Gateway,"getHost",%this)
]]></Implementation>
</Method>

<Method name="getQuery">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getQuery
	Quit ..%Execute0R(..Gateway,"getQuery",%this)
]]></Implementation>
</Method>

<Method name="getPort">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPort
	Quit ..%Execute0R(..Gateway,"getPort",%this)
]]></Implementation>
</Method>

<Method name="openConnection">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: openConnection
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"openConnection",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"openConnection",%this)
]]></Implementation>
</Method>

<Method name="getPath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPath
	Quit ..%Execute0R(..Gateway,"getPath",%this)
]]></Implementation>
</Method>

<Method name="setURLStreamHandlerFactory">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setURLStreamHandlerFactory
	Do ..%Execute1(p0,"setURLStreamHandlerFactory","java.net.URL",p1)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="toURI">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toURI
	Quit ..%Execute0R(..Gateway,"toURI",%this)
]]></Implementation>
</Method>

<Method name="openStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: openStream
	Quit ..%Execute0R(..Gateway,"openStream",%this)
]]></Implementation>
</Method>

<Method name="getRef">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRef
	Quit ..%Execute0R(..Gateway,"getRef",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.net.URLConnection">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="setFileNameMap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFileNameMap
	Do ..%Execute1(p0,"setFileNameMap","java.net.URLConnection",p1)
]]></Implementation>
</Method>

<Method name="getContentType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getContentType
	Quit ..%Execute0R(..Gateway,"getContentType",%this)
]]></Implementation>
</Method>

<Method name="connect">
<Implementation><![CDATA[
	#; Corresponding Java method: connect
	Do ..%Execute0(..Gateway,"connect",%this)
]]></Implementation>
</Method>

<Method name="getReadTimeout">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getReadTimeout
	Quit ..%Execute0R(..Gateway,"getReadTimeout",%this)
]]></Implementation>
</Method>

<Method name="guessContentTypeFromStream">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: guessContentTypeFromStream
	Quit ..%Execute1R(p0,"guessContentTypeFromStream","java.net.URLConnection",p1)
]]></Implementation>
</Method>

<Method name="getDoInput">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDoInput
	Quit ..%Execute0R(..Gateway,"getDoInput",%this)
]]></Implementation>
</Method>

<Method name="guessContentTypeFromName">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: guessContentTypeFromName
	Quit ..%Execute1R(p0,"guessContentTypeFromName","java.net.URLConnection",p1)
]]></Implementation>
</Method>

<Method name="setUseCaches">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setUseCaches
	Do ..%Execute1(..Gateway,"setUseCaches",%this,p0)
]]></Implementation>
</Method>

<Method name="setReadTimeout">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setReadTimeout
	Do ..%Execute1(..Gateway,"setReadTimeout",%this,p0)
]]></Implementation>
</Method>

<Method name="getDefaultUseCaches">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefaultUseCaches
	Quit ..%Execute0R(..Gateway,"getDefaultUseCaches",%this)
]]></Implementation>
</Method>

<Method name="getIfModifiedSince">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getIfModifiedSince
	Quit ..%Execute0R(..Gateway,"getIfModifiedSince",%this)
]]></Implementation>
</Method>

<Method name="setDoInput">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDoInput
	Do ..%Execute1(..Gateway,"setDoInput",%this,p0)
]]></Implementation>
</Method>

<Method name="getHeaderFields">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeaderFields
	Quit ..%Execute0R(..Gateway,"getHeaderFields",%this)
]]></Implementation>
</Method>

<Method name="getDefaultRequestProperty">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefaultRequestProperty
	Quit ..%Execute1R(p0,"getDefaultRequestProperty","java.net.URLConnection",p1)
]]></Implementation>
</Method>

<Method name="getAllowUserInteraction">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAllowUserInteraction
	Quit ..%Execute0R(..Gateway,"getAllowUserInteraction",%this)
]]></Implementation>
</Method>

<Method name="getContentEncoding">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getContentEncoding
	Quit ..%Execute0R(..Gateway,"getContentEncoding",%this)
]]></Implementation>
</Method>

<Method name="getHeaderFieldKey">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeaderFieldKey
	Quit ..%Execute1R(..Gateway,"getHeaderFieldKey",%this,p0)
]]></Implementation>
</Method>

<Method name="setIfModifiedSince">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setIfModifiedSince
	Do ..%Execute1(..Gateway,"setIfModifiedSince",%this,p0)
]]></Implementation>
</Method>

<Method name="setDefaultUseCaches">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDefaultUseCaches
	Do ..%Execute1(..Gateway,"setDefaultUseCaches",%this,p0)
]]></Implementation>
</Method>

<Method name="getExpiration">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getExpiration
	Quit ..%Execute0R(..Gateway,"getExpiration",%this)
]]></Implementation>
</Method>

<Method name="getDoOutput">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDoOutput
	Quit ..%Execute0R(..Gateway,"getDoOutput",%this)
]]></Implementation>
</Method>

<Method name="getHeaderFieldInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeaderFieldInt
	Quit ..%Execute2R(..Gateway,"getHeaderFieldInt",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getDefaultAllowUserInteraction">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefaultAllowUserInteraction
	Quit ..%Execute0R(p0,"getDefaultAllowUserInteraction","java.net.URLConnection")
]]></Implementation>
</Method>

<Method name="setAllowUserInteraction">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setAllowUserInteraction
	Do ..%Execute1(..Gateway,"setAllowUserInteraction",%this,p0)
]]></Implementation>
</Method>

<Method name="getFileNameMap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFileNameMap
	Quit ..%Execute0R(p0,"getFileNameMap","java.net.URLConnection")
]]></Implementation>
</Method>

<Method name="setContentHandlerFactory">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setContentHandlerFactory
	Do ..%Execute1(p0,"setContentHandlerFactory","java.net.URLConnection",p1)
]]></Implementation>
</Method>

<Method name="getContent">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getContent
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getContent",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getContent",%this)
]]></Implementation>
</Method>

<Method name="getRequestProperty">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRequestProperty
	Quit ..%Execute1R(..Gateway,"getRequestProperty",%this,p0)
]]></Implementation>
</Method>

<Method name="getContentLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getContentLength
	Quit ..%Execute0R(..Gateway,"getContentLength",%this)
]]></Implementation>
</Method>

<Method name="getOutputStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getOutputStream
	Quit ..%Execute0R(..Gateway,"getOutputStream",%this)
]]></Implementation>
</Method>

<Method name="setDefaultAllowUserInteraction">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDefaultAllowUserInteraction
	Do ..%Execute1(p0,"setDefaultAllowUserInteraction","java.net.URLConnection",p1)
]]></Implementation>
</Method>

<Method name="setDefaultRequestProperty">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDefaultRequestProperty
	Do ..%Execute2(p0,"setDefaultRequestProperty","java.net.URLConnection",p1,p2)
]]></Implementation>
</Method>

<Method name="getPermission">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPermission
	Quit ..%Execute0R(..Gateway,"getPermission",%this)
]]></Implementation>
</Method>

<Method name="getDate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDate
	Quit ..%Execute0R(..Gateway,"getDate",%this)
]]></Implementation>
</Method>

<Method name="getConnectTimeout">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getConnectTimeout
	Quit ..%Execute0R(..Gateway,"getConnectTimeout",%this)
]]></Implementation>
</Method>

<Method name="addRequestProperty">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: addRequestProperty
	Do ..%Execute2(..Gateway,"addRequestProperty",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getHeaderFieldDate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeaderFieldDate
	Quit ..%Execute2R(..Gateway,"getHeaderFieldDate",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getInputStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInputStream
	Quit ..%Execute0R(..Gateway,"getInputStream",%this)
]]></Implementation>
</Method>

<Method name="setConnectTimeout">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setConnectTimeout
	Do ..%Execute1(..Gateway,"setConnectTimeout",%this,p0)
]]></Implementation>
</Method>

<Method name="setRequestProperty">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRequestProperty
	Do ..%Execute2(..Gateway,"setRequestProperty",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getRequestProperties">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRequestProperties
	Quit ..%Execute0R(..Gateway,"getRequestProperties",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="setDoOutput">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDoOutput
	Do ..%Execute1(..Gateway,"setDoOutput",%this,p0)
]]></Implementation>
</Method>

<Method name="getURL">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getURL
	Quit ..%Execute0R(..Gateway,"getURL",%this)
]]></Implementation>
</Method>

<Method name="getLastModified">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLastModified
	Quit ..%Execute0R(..Gateway,"getLastModified",%this)
]]></Implementation>
</Method>

<Method name="getHeaderField">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHeaderField
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getHeaderField",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getHeaderField",%this)
]]></Implementation>
</Method>

<Method name="getUseCaches">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUseCaches
	Quit ..%Execute0R(..Gateway,"getUseCaches",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.net.URLStreamHandler">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.net.URLStreamHandler
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.net.URLStreamHandler",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="java.net.URLStreamHandlerFactory">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="createURLStreamHandler">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createURLStreamHandler
	Quit ..%Execute1R(..Gateway,"createURLStreamHandler",%this,p0)
]]></Implementation>
</Method>
</Class>




<Class name="java.nio.Buffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="limit">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: limit
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"limit",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"limit",%this)
]]></Implementation>
</Method>

<Method name="position">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: position
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"position",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"position",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="mark">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: mark
	Quit ..%Execute0R(..Gateway,"mark",%this)
]]></Implementation>
</Method>

<Method name="rewind">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rewind
	Quit ..%Execute0R(..Gateway,"rewind",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="clear">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Quit ..%Execute0R(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="remaining">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remaining
	Quit ..%Execute0R(..Gateway,"remaining",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="hasRemaining">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasRemaining
	Quit ..%Execute0R(..Gateway,"hasRemaining",%this)
]]></Implementation>
</Method>

<Method name="isReadOnly">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isReadOnly
	Quit ..%Execute0R(..Gateway,"isReadOnly",%this)
]]></Implementation>
</Method>

<Method name="reset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reset
	Quit ..%Execute0R(..Gateway,"reset",%this)
]]></Implementation>
</Method>

<Method name="capacity">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: capacity
	Quit ..%Execute0R(..Gateway,"capacity",%this)
]]></Implementation>
</Method>

<Method name="flip">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: flip
	Quit ..%Execute0R(..Gateway,"flip",%this)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%Execute0R(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.ByteBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.nio.Buffer,java.lang.Comparable</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"put",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"put",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"put",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"put",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="getDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDouble
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDouble",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDouble",%this)
]]></Implementation>
</Method>

<Method name="putChar">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: putChar
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"putChar",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"putChar",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"putChar",%this)
]]></Implementation>
</Method>

<Method name="asLongBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asLongBuffer
	Quit ..%Execute0R(..Gateway,"asLongBuffer",%this)
]]></Implementation>
</Method>

<Method name="allocateDirect">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocateDirect
	Quit ..%Execute1R(p0,"allocateDirect","java.nio.ByteBuffer",p1)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="asReadOnlyBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asReadOnlyBuffer
	Quit ..%Execute0R(..Gateway,"asReadOnlyBuffer",%this)
]]></Implementation>
</Method>

<Method name="putShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: putShort
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"putShort",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"putShort",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"putShort",%this)
]]></Implementation>
</Method>

<Method name="getLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLong
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getLong",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getLong",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="putLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: putLong
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"putLong",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"putLong",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"putLong",%this)
]]></Implementation>
</Method>

<Method name="putFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: putFloat
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"putFloat",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"putFloat",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"putFloat",%this)
]]></Implementation>
</Method>

<Method name="compact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compact
	Quit ..%Execute0R(..Gateway,"compact",%this)
]]></Implementation>
</Method>

<Method name="asIntBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asIntBuffer
	Quit ..%Execute0R(..Gateway,"asIntBuffer",%this)
]]></Implementation>
</Method>

<Method name="asFloatBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asFloatBuffer
	Quit ..%Execute0R(..Gateway,"asFloatBuffer",%this)
]]></Implementation>
</Method>

<Method name="putInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: putInt
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"putInt",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"putInt",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"putInt",%this)
]]></Implementation>
</Method>

<Method name="order">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: order
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"order",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"order",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="getChar">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getChar
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getChar",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getChar",%this)
]]></Implementation>
</Method>

<Method name="asShortBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asShortBuffer
	Quit ..%Execute0R(..Gateway,"asShortBuffer",%this)
]]></Implementation>
</Method>

<Method name="wrap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wrap
	Quit:$D(p3) ..%ExecuteOLR3(p0,"wrap","java.nio.ByteBuffer",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"wrap","java.nio.ByteBuffer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"wrap","java.nio.ByteBuffer",p1)
	Quit ..%ExecuteOLR0(p0,"wrap","java.nio.ByteBuffer")
]]></Implementation>
</Method>

<Method name="getShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getShort
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getShort",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getShort",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"get",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"get",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"get",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"get",%this)
]]></Implementation>
</Method>

<Method name="duplicate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: duplicate
	Quit ..%Execute0R(..Gateway,"duplicate",%this)
]]></Implementation>
</Method>

<Method name="getInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInt
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getInt",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getInt",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="allocate">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocate
	Quit ..%Execute1R(p0,"allocate","java.nio.ByteBuffer",p1)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="putDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: putDouble
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"putDouble",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"putDouble",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"putDouble",%this)
]]></Implementation>
</Method>

<Method name="asCharBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asCharBuffer
	Quit ..%Execute0R(..Gateway,"asCharBuffer",%this)
]]></Implementation>
</Method>

<Method name="slice">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: slice
	Quit ..%Execute0R(..Gateway,"slice",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFloat
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getFloat",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getFloat",%this)
]]></Implementation>
</Method>

<Method name="asDoubleBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asDoubleBuffer
	Quit ..%Execute0R(..Gateway,"asDoubleBuffer",%this)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%ExecuteOLR0(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.ByteOrder">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="nativeOrder">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nativeOrder
	Quit ..%Execute0R(p0,"nativeOrder","java.nio.ByteOrder")
]]></Implementation>
</Method>

<Parameter name="BIGuENDIAN">
<Type>STRING</Type>
<Default>BIG_ENDIAN</Default>
</Parameter>

<Parameter name="LITTLEuENDIAN">
<Type>STRING</Type>
<Default>LITTLE_ENDIAN</Default>
</Parameter>
</Class>


<Class name="java.nio.CharBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.nio.Buffer,java.lang.Comparable,java.lang.Appendable,java.lang.CharSequence,java.lang.Readable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="subSequence">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subSequence
	Quit ..%Execute2R(..Gateway,"subSequence",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="wrap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wrap
	Quit:$D(p3) ..%ExecuteOLR3(p0,"wrap","java.nio.CharBuffer",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"wrap","java.nio.CharBuffer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"wrap","java.nio.CharBuffer",p1)
	Quit ..%ExecuteOLR0(p0,"wrap","java.nio.CharBuffer")
]]></Implementation>
</Method>

<Method name="append">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: append
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"append",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"append",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"append",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"append",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"put",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"put",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"put",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"put",%this)
]]></Implementation>
</Method>

<Method name="duplicate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: duplicate
	Quit ..%Execute0R(..Gateway,"duplicate",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"get",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"get",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"get",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"get",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="allocate">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocate
	Quit ..%Execute1R(p0,"allocate","java.nio.CharBuffer",p1)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="asReadOnlyBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asReadOnlyBuffer
	Quit ..%Execute0R(..Gateway,"asReadOnlyBuffer",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="compact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compact
	Quit ..%Execute0R(..Gateway,"compact",%this)
]]></Implementation>
</Method>

<Method name="order">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: order
	Quit ..%Execute0R(..Gateway,"order",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="read">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: read
	Quit ..%Execute1R(..Gateway,"read",%this,p0)
]]></Implementation>
</Method>

<Method name="slice">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: slice
	Quit ..%Execute0R(..Gateway,"slice",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="charAt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: charAt
	Quit ..%Execute1R(..Gateway,"charAt",%this,p0)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%ExecuteOLR0(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.DoubleBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.nio.Buffer,java.lang.Comparable</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="wrap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wrap
	Quit:$D(p3) ..%ExecuteOLR3(p0,"wrap","java.nio.DoubleBuffer",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"wrap","java.nio.DoubleBuffer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"wrap","java.nio.DoubleBuffer",p1)
	Quit ..%ExecuteOLR0(p0,"wrap","java.nio.DoubleBuffer")
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"put",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"put",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"put",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"put",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"get",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"get",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"get",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"get",%this)
]]></Implementation>
</Method>

<Method name="duplicate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: duplicate
	Quit ..%Execute0R(..Gateway,"duplicate",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="allocate">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocate
	Quit ..%Execute1R(p0,"allocate","java.nio.DoubleBuffer",p1)
]]></Implementation>
</Method>

<Method name="asReadOnlyBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asReadOnlyBuffer
	Quit ..%Execute0R(..Gateway,"asReadOnlyBuffer",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="compact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compact
	Quit ..%Execute0R(..Gateway,"compact",%this)
]]></Implementation>
</Method>

<Method name="order">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: order
	Quit ..%Execute0R(..Gateway,"order",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="slice">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: slice
	Quit ..%Execute0R(..Gateway,"slice",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%ExecuteOLR0(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.FloatBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.nio.Buffer,java.lang.Comparable</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="wrap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wrap
	Quit:$D(p3) ..%ExecuteOLR3(p0,"wrap","java.nio.FloatBuffer",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"wrap","java.nio.FloatBuffer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"wrap","java.nio.FloatBuffer",p1)
	Quit ..%ExecuteOLR0(p0,"wrap","java.nio.FloatBuffer")
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"put",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"put",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"put",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"put",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"get",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"get",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"get",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"get",%this)
]]></Implementation>
</Method>

<Method name="duplicate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: duplicate
	Quit ..%Execute0R(..Gateway,"duplicate",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="allocate">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocate
	Quit ..%Execute1R(p0,"allocate","java.nio.FloatBuffer",p1)
]]></Implementation>
</Method>

<Method name="asReadOnlyBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asReadOnlyBuffer
	Quit ..%Execute0R(..Gateway,"asReadOnlyBuffer",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="compact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compact
	Quit ..%Execute0R(..Gateway,"compact",%this)
]]></Implementation>
</Method>

<Method name="order">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: order
	Quit ..%Execute0R(..Gateway,"order",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="slice">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: slice
	Quit ..%Execute0R(..Gateway,"slice",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%ExecuteOLR0(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.IntBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.nio.Buffer,java.lang.Comparable</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="wrap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wrap
	Quit:$D(p3) ..%ExecuteOLR3(p0,"wrap","java.nio.IntBuffer",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"wrap","java.nio.IntBuffer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"wrap","java.nio.IntBuffer",p1)
	Quit ..%ExecuteOLR0(p0,"wrap","java.nio.IntBuffer")
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"put",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"put",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"put",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"put",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"get",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"get",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"get",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"get",%this)
]]></Implementation>
</Method>

<Method name="duplicate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: duplicate
	Quit ..%Execute0R(..Gateway,"duplicate",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="allocate">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocate
	Quit ..%Execute1R(p0,"allocate","java.nio.IntBuffer",p1)
]]></Implementation>
</Method>

<Method name="asReadOnlyBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asReadOnlyBuffer
	Quit ..%Execute0R(..Gateway,"asReadOnlyBuffer",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="compact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compact
	Quit ..%Execute0R(..Gateway,"compact",%this)
]]></Implementation>
</Method>

<Method name="order">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: order
	Quit ..%Execute0R(..Gateway,"order",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="slice">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: slice
	Quit ..%Execute0R(..Gateway,"slice",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%ExecuteOLR0(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.LongBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.nio.Buffer,java.lang.Comparable</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="wrap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wrap
	Quit:$D(p3) ..%ExecuteOLR3(p0,"wrap","java.nio.LongBuffer",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"wrap","java.nio.LongBuffer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"wrap","java.nio.LongBuffer",p1)
	Quit ..%ExecuteOLR0(p0,"wrap","java.nio.LongBuffer")
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"put",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"put",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"put",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"put",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"get",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"get",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"get",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"get",%this)
]]></Implementation>
</Method>

<Method name="duplicate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: duplicate
	Quit ..%Execute0R(..Gateway,"duplicate",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="allocate">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocate
	Quit ..%Execute1R(p0,"allocate","java.nio.LongBuffer",p1)
]]></Implementation>
</Method>

<Method name="asReadOnlyBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asReadOnlyBuffer
	Quit ..%Execute0R(..Gateway,"asReadOnlyBuffer",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="compact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compact
	Quit ..%Execute0R(..Gateway,"compact",%this)
]]></Implementation>
</Method>

<Method name="order">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: order
	Quit ..%Execute0R(..Gateway,"order",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="slice">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: slice
	Quit ..%Execute0R(..Gateway,"slice",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%ExecuteOLR0(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.ShortBuffer">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.nio.Buffer,java.lang.Comparable</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="wrap">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wrap
	Quit:$D(p3) ..%ExecuteOLR3(p0,"wrap","java.nio.ShortBuffer",p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR2(p0,"wrap","java.nio.ShortBuffer",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"wrap","java.nio.ShortBuffer",p1)
	Quit ..%ExecuteOLR0(p0,"wrap","java.nio.ShortBuffer")
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"put",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"put",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"put",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"put",%this)
]]></Implementation>
</Method>

<Method name="isDirect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDirect
	Quit ..%Execute0R(..Gateway,"isDirect",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"get",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"get",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"get",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"get",%this)
]]></Implementation>
</Method>

<Method name="duplicate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: duplicate
	Quit ..%Execute0R(..Gateway,"duplicate",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="allocate">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allocate
	Quit ..%Execute1R(p0,"allocate","java.nio.ShortBuffer",p1)
]]></Implementation>
</Method>

<Method name="asReadOnlyBuffer">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: asReadOnlyBuffer
	Quit ..%Execute0R(..Gateway,"asReadOnlyBuffer",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="hasArray">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasArray
	Quit ..%Execute0R(..Gateway,"hasArray",%this)
]]></Implementation>
</Method>

<Method name="compact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compact
	Quit ..%Execute0R(..Gateway,"compact",%this)
]]></Implementation>
</Method>

<Method name="order">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: order
	Quit ..%Execute0R(..Gateway,"order",%this)
]]></Implementation>
</Method>

<Method name="arrayOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: arrayOffset
	Quit ..%Execute0R(..Gateway,"arrayOffset",%this)
]]></Implementation>
</Method>

<Method name="slice">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: slice
	Quit ..%Execute0R(..Gateway,"slice",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="array">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: array
	Quit ..%ExecuteOLR0(..Gateway,"array",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.charset.Charset">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Comparable</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="availableCharsets">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: availableCharsets
	Quit ..%Execute0R(p0,"availableCharsets","java.nio.charset.Charset")
]]></Implementation>
</Method>

<Method name="newDecoder">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: newDecoder
	Quit ..%Execute0R(..Gateway,"newDecoder",%this)
]]></Implementation>
</Method>

<Method name="encode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: encode
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"encode",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"encode",%this)
]]></Implementation>
</Method>

<Method name="isSupported">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSupported
	Quit ..%Execute1R(p0,"isSupported","java.nio.charset.Charset",p1)
]]></Implementation>
</Method>

<Method name="newEncoder">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: newEncoder
	Quit ..%Execute0R(..Gateway,"newEncoder",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="canEncode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: canEncode
	Quit ..%Execute0R(..Gateway,"canEncode",%this)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="isRegistered">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isRegistered
	Quit ..%Execute0R(..Gateway,"isRegistered",%this)
]]></Implementation>
</Method>

<Method name="aliases">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: aliases
	Quit ..%Execute0R(..Gateway,"aliases",%this)
]]></Implementation>
</Method>

<Method name="decode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: decode
	Quit ..%Execute1R(..Gateway,"decode",%this,p0)
]]></Implementation>
</Method>

<Method name="name">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: name
	Quit ..%Execute0R(..Gateway,"name",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="defaultCharset">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: defaultCharset
	Quit ..%Execute0R(p0,"defaultCharset","java.nio.charset.Charset")
]]></Implementation>
</Method>

<Method name="displayName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: displayName
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"displayName",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"displayName",%this)
]]></Implementation>
</Method>

<Method name="forName">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: forName
	Quit ..%Execute1R(p0,"forName","java.nio.charset.Charset",p1)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.charset.CharsetDecoder">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="replacement">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replacement
	Quit ..%Execute0R(..Gateway,"replacement",%this)
]]></Implementation>
</Method>

<Method name="detectedCharset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: detectedCharset
	Quit ..%Execute0R(..Gateway,"detectedCharset",%this)
]]></Implementation>
</Method>

<Method name="isAutoDetecting">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAutoDetecting
	Quit ..%Execute0R(..Gateway,"isAutoDetecting",%this)
]]></Implementation>
</Method>

<Method name="charset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: charset
	Quit ..%Execute0R(..Gateway,"charset",%this)
]]></Implementation>
</Method>

<Method name="malformedInputAction">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: malformedInputAction
	Quit ..%Execute0R(..Gateway,"malformedInputAction",%this)
]]></Implementation>
</Method>

<Method name="onMalformedInput">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: onMalformedInput
	Quit ..%Execute1R(..Gateway,"onMalformedInput",%this,p0)
]]></Implementation>
</Method>

<Method name="onUnmappableCharacter">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: onUnmappableCharacter
	Quit ..%Execute1R(..Gateway,"onUnmappableCharacter",%this,p0)
]]></Implementation>
</Method>

<Method name="isCharsetDetected">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCharsetDetected
	Quit ..%Execute0R(..Gateway,"isCharsetDetected",%this)
]]></Implementation>
</Method>

<Method name="flush">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Quit ..%Execute1R(..Gateway,"flush",%this,p0)
]]></Implementation>
</Method>

<Method name="maxCharsPerByte">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: maxCharsPerByte
	Quit ..%Execute0R(..Gateway,"maxCharsPerByte",%this)
]]></Implementation>
</Method>

<Method name="decode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: decode
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"decode",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"decode",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"decode",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"decode",%this)
]]></Implementation>
</Method>

<Method name="reset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reset
	Quit ..%Execute0R(..Gateway,"reset",%this)
]]></Implementation>
</Method>

<Method name="averageCharsPerByte">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: averageCharsPerByte
	Quit ..%Execute0R(..Gateway,"averageCharsPerByte",%this)
]]></Implementation>
</Method>

<Method name="replaceWith">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replaceWith
	Quit ..%Execute1R(..Gateway,"replaceWith",%this,p0)
]]></Implementation>
</Method>

<Method name="unmappableCharacterAction">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: unmappableCharacterAction
	Quit ..%Execute0R(..Gateway,"unmappableCharacterAction",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.charset.CharsetEncoder">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="encode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: encode
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"encode",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"encode",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"encode",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"encode",%this)
]]></Implementation>
</Method>

<Method name="replacement">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replacement
	Quit ..%Execute0R(..Gateway,"replacement",%this)
]]></Implementation>
</Method>

<Method name="isLegalReplacement">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isLegalReplacement
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isLegalReplacement",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[B",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="averageBytesPerChar">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: averageBytesPerChar
	Quit ..%Execute0R(..Gateway,"averageBytesPerChar",%this)
]]></Implementation>
</Method>

<Method name="charset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: charset
	Quit ..%Execute0R(..Gateway,"charset",%this)
]]></Implementation>
</Method>

<Method name="canEncode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: canEncode
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"canEncode",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"canEncode",%this)
]]></Implementation>
</Method>

<Method name="malformedInputAction">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: malformedInputAction
	Quit ..%Execute0R(..Gateway,"malformedInputAction",%this)
]]></Implementation>
</Method>

<Method name="onMalformedInput">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: onMalformedInput
	Quit ..%Execute1R(..Gateway,"onMalformedInput",%this,p0)
]]></Implementation>
</Method>

<Method name="onUnmappableCharacter">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: onUnmappableCharacter
	Quit ..%Execute1R(..Gateway,"onUnmappableCharacter",%this,p0)
]]></Implementation>
</Method>

<Method name="maxBytesPerChar">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: maxBytesPerChar
	Quit ..%Execute0R(..Gateway,"maxBytesPerChar",%this)
]]></Implementation>
</Method>

<Method name="flush">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: flush
	Quit ..%Execute1R(..Gateway,"flush",%this,p0)
]]></Implementation>
</Method>

<Method name="reset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: reset
	Quit ..%Execute0R(..Gateway,"reset",%this)
]]></Implementation>
</Method>

<Method name="replaceWith">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: replaceWith
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("replaceWith",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[B",p0)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="unmappableCharacterAction">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: unmappableCharacterAction
	Quit ..%Execute0R(..Gateway,"unmappableCharacterAction",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.nio.charset.CoderResult">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="isMalformed">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isMalformed
	Quit ..%Execute0R(..Gateway,"isMalformed",%this)
]]></Implementation>
</Method>

<Method name="isOverflow">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isOverflow
	Quit ..%Execute0R(..Gateway,"isOverflow",%this)
]]></Implementation>
</Method>

<Method name="malformedForLength">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: malformedForLength
	Quit ..%Execute1R(p0,"malformedForLength","java.nio.charset.CoderResult",p1)
]]></Implementation>
</Method>

<Method name="throwException">
<Implementation><![CDATA[
	#; Corresponding Java method: throwException
	Do ..%Execute0(..Gateway,"throwException",%this)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="isUnmappable">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isUnmappable
	Quit ..%Execute0R(..Gateway,"isUnmappable",%this)
]]></Implementation>
</Method>

<Method name="isUnderflow">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isUnderflow
	Quit ..%Execute0R(..Gateway,"isUnderflow",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="isError">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isError
	Quit ..%Execute0R(..Gateway,"isError",%this)
]]></Implementation>
</Method>

<Method name="unmappableForLength">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: unmappableForLength
	Quit ..%Execute1R(p0,"unmappableForLength","java.nio.charset.CoderResult",p1)
]]></Implementation>
</Method>

<Parameter name="UNDERFLOW">
<Type>STRING</Type>
<Default>UNDERFLOW</Default>
</Parameter>

<Parameter name="OVERFLOW">
<Type>STRING</Type>
<Default>OVERFLOW</Default>
</Parameter>
</Class>


<Class name="java.nio.charset.CodingErrorAction">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Parameter name="IGNORE">
<Type>STRING</Type>
<Default>IGNORE</Default>
</Parameter>

<Parameter name="REPLACE">
<Type>STRING</Type>
<Default>REPLACE</Default>
</Parameter>

<Parameter name="REPORT">
<Type>STRING</Type>
<Default>REPORT</Default>
</Parameter>
</Class>




<Class name="java.security.CodeSigner">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.security.CodeSigner
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.security.CodeSigner",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getSignerCertPath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSignerCertPath
	Quit ..%Execute0R(..Gateway,"getSignerCertPath",%this)
]]></Implementation>
</Method>

<Method name="getTimestamp">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimestamp
	Quit ..%Execute0R(..Gateway,"getTimestamp",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.CodeSource">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.security.CodeSource
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.security.CodeSource",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getLocation">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLocation
	Quit ..%Execute0R(..Gateway,"getLocation",%this)
]]></Implementation>
</Method>

<Method name="getCertificates">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCertificates
	Quit ..%Execute0R(..Gateway,"getCertificates",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="implies">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: implies
	Quit ..%Execute1R(..Gateway,"implies",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getCodeSigners">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCodeSigners
	Quit ..%Execute0R(..Gateway,"getCodeSigners",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.Guard">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="checkGuard">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: checkGuard
	Do ..%Execute1(..Gateway,"checkGuard",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.Key">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.io.Serializable</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getEncoded">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEncoded
	Quit ..%Execute0R(..Gateway,"getEncoded",%this)
]]></Implementation>
</Method>

<Method name="getFormat">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFormat
	Quit ..%Execute0R(..Gateway,"getFormat",%this)
]]></Implementation>
</Method>

<Method name="getAlgorithm">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAlgorithm
	Quit ..%Execute0R(..Gateway,"getAlgorithm",%this)
]]></Implementation>
</Method>

<Parameter name="serialVersionUID">
<Type>STRING</Type>
<Default>6603384152749567654</Default>
</Parameter>
</Class>


<Class name="java.security.Permission">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.security.Guard,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.security.Permission
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.security.Permission",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="newPermissionCollection">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: newPermissionCollection
	Quit ..%Execute0R(..Gateway,"newPermissionCollection",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="implies">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: implies
	Quit ..%Execute1R(..Gateway,"implies",%this,p0)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="getActions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getActions
	Quit ..%Execute0R(..Gateway,"getActions",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="checkGuard">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: checkGuard
	Do ..%Execute1(..Gateway,"checkGuard",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.PermissionCollection">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.security.PermissionCollection
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.security.PermissionCollection",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="setReadOnly">
<Implementation><![CDATA[
	#; Corresponding Java method: setReadOnly
	Do ..%Execute0(..Gateway,"setReadOnly",%this)
]]></Implementation>
</Method>

<Method name="implies">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: implies
	Quit ..%Execute1R(..Gateway,"implies",%this,p0)
]]></Implementation>
</Method>

<Method name="isReadOnly">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isReadOnly
	Quit ..%Execute0R(..Gateway,"isReadOnly",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Do ..%Execute1(..Gateway,"add",%this,p0)
]]></Implementation>
</Method>

<Method name="elements">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: elements
	Quit ..%Execute0R(..Gateway,"elements",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.Principal">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getName
	Quit ..%Execute0R(..Gateway,"getName",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.ProtectionDomain">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.security.ProtectionDomain
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.security.ProtectionDomain",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getClassLoader">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClassLoader
	Quit ..%Execute0R(..Gateway,"getClassLoader",%this)
]]></Implementation>
</Method>

<Method name="getPermissions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPermissions
	Quit ..%Execute0R(..Gateway,"getPermissions",%this)
]]></Implementation>
</Method>

<Method name="implies">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: implies
	Quit ..%Execute1R(..Gateway,"implies",%this,p0)
]]></Implementation>
</Method>

<Method name="getPrincipals">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPrincipals
	Quit ..%Execute0R(..Gateway,"getPrincipals",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getCodeSource">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCodeSource
	Quit ..%Execute0R(..Gateway,"getCodeSource",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.PublicKey">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.security.Key</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Parameter name="serialVersionUID">
<Type>STRING</Type>
<Default>7187392471159151072</Default>
</Parameter>
</Class>


<Class name="java.security.Timestamp">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.security.Timestamp
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.security.Timestamp",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getSignerCertPath">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSignerCertPath
	Quit ..%Execute0R(..Gateway,"getSignerCertPath",%this)
]]></Implementation>
</Method>

<Method name="getTimestamp">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimestamp
	Quit ..%Execute0R(..Gateway,"getTimestamp",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.cert.CertPath">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getEncoded">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEncoded
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getEncoded",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getEncoded",%this)
]]></Implementation>
</Method>

<Method name="getType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getType
	Quit ..%Execute0R(..Gateway,"getType",%this)
]]></Implementation>
</Method>

<Method name="getCertificates">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCertificates
	Quit ..%Execute0R(..Gateway,"getCertificates",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getEncodings">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEncodings
	Quit ..%Execute0R(..Gateway,"getEncodings",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.security.cert.Certificate">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,61671</TimeChanged>
<TimeCreated>62511,61671</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="getEncoded">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getEncoded
	Quit ..%Execute0R(..Gateway,"getEncoded",%this)
]]></Implementation>
</Method>

<Method name="getType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getType
	Quit ..%Execute0R(..Gateway,"getType",%this)
]]></Implementation>
</Method>

<Method name="getPublicKey">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPublicKey
	Quit ..%Execute0R(..Gateway,"getPublicKey",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="verify">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: verify
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"verify",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"verify",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"verify",%this) Quit
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>
</Class>




<Class name="java.sql.Array">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="free">
<Implementation><![CDATA[
	#; Corresponding Java method: free
	Do ..%Execute0(..Gateway,"free",%this)
]]></Implementation>
</Method>

<Method name="getBaseTypeName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBaseTypeName
	Quit ..%Execute0R(..Gateway,"getBaseTypeName",%this)
]]></Implementation>
</Method>

<Method name="getBaseType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBaseType
	Quit ..%Execute0R(..Gateway,"getBaseType",%this)
]]></Implementation>
</Method>

<Method name="getResultSet">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResultSet
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getResultSet",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getResultSet",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getResultSet",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getResultSet",%this)
]]></Implementation>
</Method>

<Method name="getArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getArray
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getArray",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getArray",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getArray",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.Blob">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="position">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: position
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"position",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"position",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"position",%this)
]]></Implementation>
</Method>

<Method name="getBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBytes
	Quit ..%Execute2R(..Gateway,"getBytes",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="free">
<Implementation><![CDATA[
	#; Corresponding Java method: free
	Do ..%Execute0(..Gateway,"free",%this)
]]></Implementation>
</Method>

<Method name="setBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setBytes
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"setBytes",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"setBytes",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"setBytes",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"setBytes",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"setBytes",%this)
]]></Implementation>
</Method>

<Method name="truncate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: truncate
	Do ..%Execute1(..Gateway,"truncate",%this,p0)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="setBinaryStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setBinaryStream
	Quit ..%Execute1R(..Gateway,"setBinaryStream",%this,p0)
]]></Implementation>
</Method>

<Method name="getBinaryStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBinaryStream
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getBinaryStream",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBinaryStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBinaryStream",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.CallableStatement">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.PreparedStatement</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="setFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFloat
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setFloat",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setFloat",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setFloat",%this) Quit
]]></Implementation>
</Method>

<Method name="getSQLXML">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSQLXML
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getSQLXML",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getSQLXML",%this)
]]></Implementation>
</Method>

<Method name="getBoolean">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBoolean
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBoolean",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBoolean",%this)
]]></Implementation>
</Method>

<Method name="wasNull">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wasNull
	Quit ..%Execute0R(..Gateway,"wasNull",%this)
]]></Implementation>
</Method>

<Method name="setBoolean">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBoolean
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setBoolean",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setBoolean",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setBoolean",%this) Quit
]]></Implementation>
</Method>

<Method name="getClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClob
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getClob",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getClob",%this)
]]></Implementation>
</Method>

<Method name="setDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDouble
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setDouble",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setDouble",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setDouble",%this) Quit
]]></Implementation>
</Method>

<Method name="getNCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNCharacterStream
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getNCharacterStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getNCharacterStream",%this)
]]></Implementation>
</Method>

<Method name="setBigDecimal">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBigDecimal
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setBigDecimal",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setBigDecimal",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setBigDecimal",%this) Quit
]]></Implementation>
</Method>

<Method name="setLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLong
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setLong",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setLong",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setLong",%this) Quit
]]></Implementation>
</Method>

<Method name="setURL">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setURL
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setURL",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setURL",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setURL",%this) Quit
]]></Implementation>
</Method>

<Method name="getObject">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getObject
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getObject",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getObject",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getObject",%this)
]]></Implementation>
</Method>

<Method name="getBigDecimal">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBigDecimal
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getBigDecimal",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBigDecimal",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBigDecimal",%this)
]]></Implementation>
</Method>

<Method name="getBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBytes
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBytes",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBytes",%this)
]]></Implementation>
</Method>

<Method name="getShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getShort
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getShort",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getShort",%this)
]]></Implementation>
</Method>

<Method name="getArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getArray
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getArray",%this)
]]></Implementation>
</Method>

<Method name="getDate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDate
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getDate",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDate",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDate",%this)
]]></Implementation>
</Method>

<Method name="setByte">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setByte
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setByte",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setByte",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setByte",%this) Quit
]]></Implementation>
</Method>

<Method name="setRowId">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRowId
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setRowId",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setRowId",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setRowId",%this) Quit
]]></Implementation>
</Method>

<Method name="getBlob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBlob
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBlob",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBlob",%this)
]]></Implementation>
</Method>

<Method name="getNString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNString
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getNString",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getNString",%this)
]]></Implementation>
</Method>

<Method name="getURL">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getURL
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getURL",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getURL",%this)
]]></Implementation>
</Method>

<Method name="getString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getString
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getString",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getString",%this)
]]></Implementation>
</Method>

<Method name="getFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFloat
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getFloat",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getFloat",%this)
]]></Implementation>
</Method>

<Method name="getDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDouble
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDouble",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDouble",%this)
]]></Implementation>
</Method>

<Method name="setBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBytes
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setBytes",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setBytes",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setBytes",%this) Quit
]]></Implementation>
</Method>

<Method name="setString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setString
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setString",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setString",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setString",%this) Quit
]]></Implementation>
</Method>

<Method name="registerOutParameter">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: registerOutParameter
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"registerOutParameter",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"registerOutParameter",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"registerOutParameter",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"registerOutParameter",%this) Quit
]]></Implementation>
</Method>

<Method name="getLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLong
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getLong",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getLong",%this)
]]></Implementation>
</Method>

<Method name="setShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setShort
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setShort",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setShort",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setShort",%this) Quit
]]></Implementation>
</Method>

<Method name="getTimestamp">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimestamp
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getTimestamp",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getTimestamp",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getTimestamp",%this)
]]></Implementation>
</Method>

<Method name="getRowId">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRowId
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getRowId",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getRowId",%this)
]]></Implementation>
</Method>

<Method name="setInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setInt
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setInt",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setInt",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setInt",%this) Quit
]]></Implementation>
</Method>

<Method name="getRef">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRef
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getRef",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getRef",%this)
]]></Implementation>
</Method>

<Method name="getNClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNClob
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getNClob",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getNClob",%this)
]]></Implementation>
</Method>

<Method name="getInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInt
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getInt",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getInt",%this)
]]></Implementation>
</Method>

<Method name="getByte">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getByte
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getByte",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getByte",%this)
]]></Implementation>
</Method>

<Method name="getCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCharacterStream
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getCharacterStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getCharacterStream",%this)
]]></Implementation>
</Method>

<Method name="getTime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTime
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getTime",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getTime",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getTime",%this)
]]></Implementation>
</Method>

<Method name="setNString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setNString
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setNString",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setNString",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setNString",%this) Quit
]]></Implementation>
</Method>

<Method name="setSQLXML">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSQLXML
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setSQLXML",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setSQLXML",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setSQLXML",%this) Quit
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.Clob">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="position">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: position
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"position",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"position",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"position",%this)
]]></Implementation>
</Method>

<Method name="free">
<Implementation><![CDATA[
	#; Corresponding Java method: free
	Do ..%Execute0(..Gateway,"free",%this)
]]></Implementation>
</Method>

<Method name="setCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setCharacterStream
	Quit ..%Execute1R(..Gateway,"setCharacterStream",%this,p0)
]]></Implementation>
</Method>

<Method name="truncate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: truncate
	Do ..%Execute1(..Gateway,"truncate",%this,p0)
]]></Implementation>
</Method>

<Method name="getSubString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSubString
	Quit ..%Execute2R(..Gateway,"getSubString",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setString
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"setString",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"setString",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"setString",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"setString",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"setString",%this)
]]></Implementation>
</Method>

<Method name="getAsciiStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAsciiStream
	Quit ..%Execute0R(..Gateway,"getAsciiStream",%this)
]]></Implementation>
</Method>

<Method name="length">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: length
	Quit ..%Execute0R(..Gateway,"length",%this)
]]></Implementation>
</Method>

<Method name="getCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCharacterStream
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getCharacterStream",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getCharacterStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getCharacterStream",%this)
]]></Implementation>
</Method>

<Method name="setAsciiStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setAsciiStream
	Quit ..%Execute1R(..Gateway,"setAsciiStream",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.Connection">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Wrapper</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="setReadOnly">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setReadOnly
	Do ..%Execute1(..Gateway,"setReadOnly",%this,p0)
]]></Implementation>
</Method>

<Method name="getTransactionIsolation">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTransactionIsolation
	Quit ..%Execute0R(..Gateway,"getTransactionIsolation",%this)
]]></Implementation>
</Method>

<Method name="releaseSavepoint">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: releaseSavepoint
	Do ..%Execute1(..Gateway,"releaseSavepoint",%this,p0)
]]></Implementation>
</Method>

<Method name="createSQLXML">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createSQLXML
	Quit ..%Execute0R(..Gateway,"createSQLXML",%this)
]]></Implementation>
</Method>

<Method name="getMetaData">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMetaData
	Quit ..%Execute0R(..Gateway,"getMetaData",%this)
]]></Implementation>
</Method>

<Method name="clearWarnings">
<Implementation><![CDATA[
	#; Corresponding Java method: clearWarnings
	Do ..%Execute0(..Gateway,"clearWarnings",%this)
]]></Implementation>
</Method>

<Method name="rollback">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: rollback
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"rollback",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"rollback",%this) Quit
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>

<Method name="nativeSQL">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nativeSQL
	Quit ..%Execute1R(..Gateway,"nativeSQL",%this,p0)
]]></Implementation>
</Method>

<Method name="getWarnings">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWarnings
	Quit ..%Execute0R(..Gateway,"getWarnings",%this)
]]></Implementation>
</Method>

<Method name="setHoldability">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setHoldability
	Do ..%Execute1(..Gateway,"setHoldability",%this,p0)
]]></Implementation>
</Method>

<Method name="commit">
<Implementation><![CDATA[
	#; Corresponding Java method: commit
	Do ..%Execute0(..Gateway,"commit",%this)
]]></Implementation>
</Method>

<Method name="prepareCall">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: prepareCall
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"prepareCall",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"prepareCall",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"prepareCall",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"prepareCall",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"prepareCall",%this)
]]></Implementation>
</Method>

<Method name="setSavepoint">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setSavepoint
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"setSavepoint",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"setSavepoint",%this)
]]></Implementation>
</Method>

<Method name="getAutoCommit">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAutoCommit
	Quit ..%Execute0R(..Gateway,"getAutoCommit",%this)
]]></Implementation>
</Method>

<Method name="isReadOnly">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isReadOnly
	Quit ..%Execute0R(..Gateway,"isReadOnly",%this)
]]></Implementation>
</Method>

<Method name="createStatement">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createStatement
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"createStatement",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"createStatement",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"createStatement",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"createStatement",%this)
]]></Implementation>
</Method>

<Method name="prepareStatement">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: prepareStatement
	Quit:$D(p3) ..%ExecuteOLR4(..Gateway,"prepareStatement",%this,p0,p1,p2,p3)
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"prepareStatement",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"prepareStatement",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"prepareStatement",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"prepareStatement",%this)
]]></Implementation>
</Method>

<Method name="setClientInfo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setClientInfo
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setClientInfo",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setClientInfo",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setClientInfo",%this) Quit
]]></Implementation>
</Method>

<Method name="isClosed">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isClosed
	Quit ..%Execute0R(..Gateway,"isClosed",%this)
]]></Implementation>
</Method>

<Method name="getHoldability">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHoldability
	Quit ..%Execute0R(..Gateway,"getHoldability",%this)
]]></Implementation>
</Method>

<Method name="createArrayOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createArrayOf
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("createArrayOf",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Object;",p1)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getCatalog">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCatalog
	Quit ..%Execute0R(..Gateway,"getCatalog",%this)
]]></Implementation>
</Method>

<Method name="setTransactionIsolation">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTransactionIsolation
	Do ..%Execute1(..Gateway,"setTransactionIsolation",%this,p0)
]]></Implementation>
</Method>

<Method name="createStruct">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createStruct
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("createStruct",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.Object;",p1)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getTypeMap">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTypeMap
	Quit ..%Execute0R(..Gateway,"getTypeMap",%this)
]]></Implementation>
</Method>

<Method name="getClientInfo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClientInfo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getClientInfo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getClientInfo",%this)
]]></Implementation>
</Method>

<Method name="setCatalog">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setCatalog
	Do ..%Execute1(..Gateway,"setCatalog",%this,p0)
]]></Implementation>
</Method>

<Method name="setTypeMap">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTypeMap
	Do ..%Execute1(..Gateway,"setTypeMap",%this,p0)
]]></Implementation>
</Method>

<Method name="createClob">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createClob
	Quit ..%Execute0R(..Gateway,"createClob",%this)
]]></Implementation>
</Method>

<Method name="setAutoCommit">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setAutoCommit
	Do ..%Execute1(..Gateway,"setAutoCommit",%this,p0)
]]></Implementation>
</Method>

<Method name="createNClob">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createNClob
	Quit ..%Execute0R(..Gateway,"createNClob",%this)
]]></Implementation>
</Method>

<Method name="isValid">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isValid
	Quit ..%Execute1R(..Gateway,"isValid",%this,p0)
]]></Implementation>
</Method>

<Method name="createBlob">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: createBlob
	Quit ..%Execute0R(..Gateway,"createBlob",%this)
]]></Implementation>
</Method>

<Parameter name="TRANSACTIONuNONE">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="TRANSACTIONuREADuUNCOMMITTED">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="TRANSACTIONuREADuCOMMITTED">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="TRANSACTIONuREPEATABLEuREAD">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="TRANSACTIONuSERIALIZABLE">
<Type>INTEGER</Type>
<Default>8</Default>
</Parameter>
</Class>


<Class name="java.sql.DatabaseMetaData">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Wrapper</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getSQLStateType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSQLStateType
	Quit ..%Execute0R(..Gateway,"getSQLStateType",%this)
]]></Implementation>
</Method>

<Method name="getJDBCMajorVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getJDBCMajorVersion
	Quit ..%Execute0R(..Gateway,"getJDBCMajorVersion",%this)
]]></Implementation>
</Method>

<Method name="supportsPositionedDelete">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsPositionedDelete
	Quit ..%Execute0R(..Gateway,"supportsPositionedDelete",%this)
]]></Implementation>
</Method>

<Method name="getColumns">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumns
	Quit ..%Execute4R(..Gateway,"getColumns",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="supportsLikeEscapeClause">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsLikeEscapeClause
	Quit ..%Execute0R(..Gateway,"supportsLikeEscapeClause",%this)
]]></Implementation>
</Method>

<Method name="getDriverMinorVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDriverMinorVersion
	Quit ..%Execute0R(..Gateway,"getDriverMinorVersion",%this)
]]></Implementation>
</Method>

<Method name="supportsTransactionIsolationLev">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsTransactionIsolationLevel
	Quit ..%Execute1R(..Gateway,"supportsTransactionIsolationLevel",%this,p0)
]]></Implementation>
</Method>

<Method name="supportsANSI92EntryLevelSQL">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsANSI92EntryLevelSQL
	Quit ..%Execute0R(..Gateway,"supportsANSI92EntryLevelSQL",%this)
]]></Implementation>
</Method>

<Method name="getResultSetHoldability">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResultSetHoldability
	Quit ..%Execute0R(..Gateway,"getResultSetHoldability",%this)
]]></Implementation>
</Method>

<Method name="supportsDataDefinitionAndDataMa">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsDataDefinitionAndDataManipulationTransactions
	Quit ..%Execute0R(..Gateway,"supportsDataDefinitionAndDataManipulationTransactions",%this)
]]></Implementation>
</Method>

<Method name="supportsCorrelatedSubqueries">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsCorrelatedSubqueries
	Quit ..%Execute0R(..Gateway,"supportsCorrelatedSubqueries",%this)
]]></Implementation>
</Method>

<Method name="getVersionColumns">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getVersionColumns
	Quit ..%Execute3R(..Gateway,"getVersionColumns",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="supportsOpenCursorsAcrossRollba">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsOpenCursorsAcrossRollback
	Quit ..%Execute0R(..Gateway,"supportsOpenCursorsAcrossRollback",%this)
]]></Implementation>
</Method>

<Method name="usesLocalFiles">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: usesLocalFiles
	Quit ..%Execute0R(..Gateway,"usesLocalFiles",%this)
]]></Implementation>
</Method>

<Method name="supportsResultSetConcurrency">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsResultSetConcurrency
	Quit ..%Execute2R(..Gateway,"supportsResultSetConcurrency",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getRowIdLifetime">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRowIdLifetime
	Quit ..%Execute0R(..Gateway,"getRowIdLifetime",%this)
]]></Implementation>
</Method>

<Method name="ownInsertsAreVisible">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: ownInsertsAreVisible
	Quit ..%Execute1R(..Gateway,"ownInsertsAreVisible",%this,p0)
]]></Implementation>
</Method>

<Method name="getImportedKeys">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getImportedKeys
	Quit ..%Execute3R(..Gateway,"getImportedKeys",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getClientInfoProperties">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClientInfoProperties
	Quit ..%Execute0R(..Gateway,"getClientInfoProperties",%this)
]]></Implementation>
</Method>

<Method name="getProcedureColumns">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getProcedureColumns
	Quit ..%Execute4R(..Gateway,"getProcedureColumns",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getFunctions">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFunctions
	Quit ..%Execute3R(..Gateway,"getFunctions",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getSQLKeywords">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSQLKeywords
	Quit ..%Execute0R(..Gateway,"getSQLKeywords",%this)
]]></Implementation>
</Method>

<Method name="getProcedureTerm">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getProcedureTerm
	Quit ..%Execute0R(..Gateway,"getProcedureTerm",%this)
]]></Implementation>
</Method>

<Method name="supportsSchemasInDataManipulati">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSchemasInDataManipulation
	Quit ..%Execute0R(..Gateway,"supportsSchemasInDataManipulation",%this)
]]></Implementation>
</Method>

<Method name="supportsSchemasInTableDefinitio">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSchemasInTableDefinitions
	Quit ..%Execute0R(..Gateway,"supportsSchemasInTableDefinitions",%this)
]]></Implementation>
</Method>

<Method name="getJDBCMinorVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getJDBCMinorVersion
	Quit ..%Execute0R(..Gateway,"getJDBCMinorVersion",%this)
]]></Implementation>
</Method>

<Method name="getTablePrivileges">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTablePrivileges
	Quit ..%Execute3R(..Gateway,"getTablePrivileges",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getMaxUserNameLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxUserNameLength
	Quit ..%Execute0R(..Gateway,"getMaxUserNameLength",%this)
]]></Implementation>
</Method>

<Method name="supportsSubqueriesInQuantifieds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSubqueriesInQuantifieds
	Quit ..%Execute0R(..Gateway,"supportsSubqueriesInQuantifieds",%this)
]]></Implementation>
</Method>

<Method name="supportsSelectForUpdate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSelectForUpdate
	Quit ..%Execute0R(..Gateway,"supportsSelectForUpdate",%this)
]]></Implementation>
</Method>

<Method name="supportsSchemasInIndexDefinitio">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSchemasInIndexDefinitions
	Quit ..%Execute0R(..Gateway,"supportsSchemasInIndexDefinitions",%this)
]]></Implementation>
</Method>

<Method name="storesMixedCaseIdentifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: storesMixedCaseIdentifiers
	Quit ..%Execute0R(..Gateway,"storesMixedCaseIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="getMaxCursorNameLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxCursorNameLength
	Quit ..%Execute0R(..Gateway,"getMaxCursorNameLength",%this)
]]></Implementation>
</Method>

<Method name="getPrimaryKeys">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPrimaryKeys
	Quit ..%Execute3R(..Gateway,"getPrimaryKeys",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="supportsSubqueriesInIns">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSubqueriesInIns
	Quit ..%Execute0R(..Gateway,"supportsSubqueriesInIns",%this)
]]></Implementation>
</Method>

<Method name="autoCommitFailureClosesAllResul">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: autoCommitFailureClosesAllResultSets
	Quit ..%Execute0R(..Gateway,"autoCommitFailureClosesAllResultSets",%this)
]]></Implementation>
</Method>

<Method name="supportsCatalogsInPrivilegeDefi">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsCatalogsInPrivilegeDefinitions
	Quit ..%Execute0R(..Gateway,"supportsCatalogsInPrivilegeDefinitions",%this)
]]></Implementation>
</Method>

<Method name="getDatabaseMajorVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDatabaseMajorVersion
	Quit ..%Execute0R(..Gateway,"getDatabaseMajorVersion",%this)
]]></Implementation>
</Method>

<Method name="supportsNonNullableColumns">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsNonNullableColumns
	Quit ..%Execute0R(..Gateway,"supportsNonNullableColumns",%this)
]]></Implementation>
</Method>

<Method name="ownDeletesAreVisible">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: ownDeletesAreVisible
	Quit ..%Execute1R(..Gateway,"ownDeletesAreVisible",%this,p0)
]]></Implementation>
</Method>

<Method name="othersUpdatesAreVisible">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: othersUpdatesAreVisible
	Quit ..%Execute1R(..Gateway,"othersUpdatesAreVisible",%this,p0)
]]></Implementation>
</Method>

<Method name="getNumericFunctions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNumericFunctions
	Quit ..%Execute0R(..Gateway,"getNumericFunctions",%this)
]]></Implementation>
</Method>

<Method name="supportsNamedParameters">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsNamedParameters
	Quit ..%Execute0R(..Gateway,"supportsNamedParameters",%this)
]]></Implementation>
</Method>

<Method name="getMaxColumnsInOrderBy">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxColumnsInOrderBy
	Quit ..%Execute0R(..Gateway,"getMaxColumnsInOrderBy",%this)
]]></Implementation>
</Method>

<Method name="dataDefinitionIgnoredInTransact">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: dataDefinitionIgnoredInTransactions
	Quit ..%Execute0R(..Gateway,"dataDefinitionIgnoredInTransactions",%this)
]]></Implementation>
</Method>

<Method name="nullsAreSortedAtStart">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nullsAreSortedAtStart
	Quit ..%Execute0R(..Gateway,"nullsAreSortedAtStart",%this)
]]></Implementation>
</Method>

<Method name="getMaxIndexLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxIndexLength
	Quit ..%Execute0R(..Gateway,"getMaxIndexLength",%this)
]]></Implementation>
</Method>

<Method name="storesUpperCaseQuotedIdentifier">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: storesUpperCaseQuotedIdentifiers
	Quit ..%Execute0R(..Gateway,"storesUpperCaseQuotedIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="supportsTableCorrelationNames">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsTableCorrelationNames
	Quit ..%Execute0R(..Gateway,"supportsTableCorrelationNames",%this)
]]></Implementation>
</Method>

<Method name="supportsStatementPooling">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsStatementPooling
	Quit ..%Execute0R(..Gateway,"supportsStatementPooling",%this)
]]></Implementation>
</Method>

<Method name="supportsSchemasInProcedureCalls">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSchemasInProcedureCalls
	Quit ..%Execute0R(..Gateway,"supportsSchemasInProcedureCalls",%this)
]]></Implementation>
</Method>

<Method name="getExtraNameCharacters">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getExtraNameCharacters
	Quit ..%Execute0R(..Gateway,"getExtraNameCharacters",%this)
]]></Implementation>
</Method>

<Method name="storesLowerCaseIdentifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: storesLowerCaseIdentifiers
	Quit ..%Execute0R(..Gateway,"storesLowerCaseIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="isReadOnly">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isReadOnly
	Quit ..%Execute0R(..Gateway,"isReadOnly",%this)
]]></Implementation>
</Method>

<Method name="supportsSubqueriesInComparisons">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSubqueriesInComparisons
	Quit ..%Execute0R(..Gateway,"supportsSubqueriesInComparisons",%this)
]]></Implementation>
</Method>

<Method name="getConnection">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getConnection
	Quit ..%Execute0R(..Gateway,"getConnection",%this)
]]></Implementation>
</Method>

<Method name="getMaxColumnsInGroupBy">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxColumnsInGroupBy
	Quit ..%Execute0R(..Gateway,"getMaxColumnsInGroupBy",%this)
]]></Implementation>
</Method>

<Method name="nullsAreSortedLow">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nullsAreSortedLow
	Quit ..%Execute0R(..Gateway,"nullsAreSortedLow",%this)
]]></Implementation>
</Method>

<Method name="othersInsertsAreVisible">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: othersInsertsAreVisible
	Quit ..%Execute1R(..Gateway,"othersInsertsAreVisible",%this,p0)
]]></Implementation>
</Method>

<Method name="supportsConvert">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsConvert
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"supportsConvert",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"supportsConvert",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"supportsConvert",%this)
]]></Implementation>
</Method>

<Method name="getBestRowIdentifier">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBestRowIdentifier
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getBestRowIdentifier",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="supportsCatalogsInProcedureCall">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsCatalogsInProcedureCalls
	Quit ..%Execute0R(..Gateway,"supportsCatalogsInProcedureCalls",%this)
]]></Implementation>
</Method>

<Method name="supportsMixedCaseQuotedIdentifi">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsMixedCaseQuotedIdentifiers
	Quit ..%Execute0R(..Gateway,"supportsMixedCaseQuotedIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="getMaxColumnsInSelect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxColumnsInSelect
	Quit ..%Execute0R(..Gateway,"getMaxColumnsInSelect",%this)
]]></Implementation>
</Method>

<Method name="getMaxCatalogNameLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxCatalogNameLength
	Quit ..%Execute0R(..Gateway,"getMaxCatalogNameLength",%this)
]]></Implementation>
</Method>

<Method name="getUDTs">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUDTs
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getUDTs",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Do ..%WriteArray(..Gateway,"[I",p3)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getMaxStatementLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxStatementLength
	Quit ..%Execute0R(..Gateway,"getMaxStatementLength",%this)
]]></Implementation>
</Method>

<Method name="getSuperTypes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSuperTypes
	Quit ..%Execute3R(..Gateway,"getSuperTypes",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getMaxCharLiteralLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxCharLiteralLength
	Quit ..%Execute0R(..Gateway,"getMaxCharLiteralLength",%this)
]]></Implementation>
</Method>

<Method name="supportsCatalogsInTableDefiniti">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsCatalogsInTableDefinitions
	Quit ..%Execute0R(..Gateway,"supportsCatalogsInTableDefinitions",%this)
]]></Implementation>
</Method>

<Method name="getMaxColumnNameLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxColumnNameLength
	Quit ..%Execute0R(..Gateway,"getMaxColumnNameLength",%this)
]]></Implementation>
</Method>

<Method name="storesLowerCaseQuotedIdentifier">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: storesLowerCaseQuotedIdentifiers
	Quit ..%Execute0R(..Gateway,"storesLowerCaseQuotedIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="supportsAlterTableWithAddColumn">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsAlterTableWithAddColumn
	Quit ..%Execute0R(..Gateway,"supportsAlterTableWithAddColumn",%this)
]]></Implementation>
</Method>

<Method name="doesMaxRowSizeIncludeBlobs">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: doesMaxRowSizeIncludeBlobs
	Quit ..%Execute0R(..Gateway,"doesMaxRowSizeIncludeBlobs",%this)
]]></Implementation>
</Method>

<Method name="supportsOpenStatementsAcrossRol">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsOpenStatementsAcrossRollback
	Quit ..%Execute0R(..Gateway,"supportsOpenStatementsAcrossRollback",%this)
]]></Implementation>
</Method>

<Method name="getMaxSchemaNameLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxSchemaNameLength
	Quit ..%Execute0R(..Gateway,"getMaxSchemaNameLength",%this)
]]></Implementation>
</Method>

<Method name="supportsDataManipulationTransac">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsDataManipulationTransactionsOnly
	Quit ..%Execute0R(..Gateway,"supportsDataManipulationTransactionsOnly",%this)
]]></Implementation>
</Method>

<Method name="getMaxBinaryLiteralLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxBinaryLiteralLength
	Quit ..%Execute0R(..Gateway,"getMaxBinaryLiteralLength",%this)
]]></Implementation>
</Method>

<Method name="supportsCoreSQLGrammar">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsCoreSQLGrammar
	Quit ..%Execute0R(..Gateway,"supportsCoreSQLGrammar",%this)
]]></Implementation>
</Method>

<Method name="supportsMultipleResultSets">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsMultipleResultSets
	Quit ..%Execute0R(..Gateway,"supportsMultipleResultSets",%this)
]]></Implementation>
</Method>

<Method name="supportsGroupByUnrelated">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsGroupByUnrelated
	Quit ..%Execute0R(..Gateway,"supportsGroupByUnrelated",%this)
]]></Implementation>
</Method>

<Method name="getMaxTablesInSelect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxTablesInSelect
	Quit ..%Execute0R(..Gateway,"getMaxTablesInSelect",%this)
]]></Implementation>
</Method>

<Method name="othersDeletesAreVisible">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: othersDeletesAreVisible
	Quit ..%Execute1R(..Gateway,"othersDeletesAreVisible",%this,p0)
]]></Implementation>
</Method>

<Method name="supportsUnion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsUnion
	Quit ..%Execute0R(..Gateway,"supportsUnion",%this)
]]></Implementation>
</Method>

<Method name="supportsCatalogsInDataManipulat">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsCatalogsInDataManipulation
	Quit ..%Execute0R(..Gateway,"supportsCatalogsInDataManipulation",%this)
]]></Implementation>
</Method>

<Method name="getDatabaseMinorVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDatabaseMinorVersion
	Quit ..%Execute0R(..Gateway,"getDatabaseMinorVersion",%this)
]]></Implementation>
</Method>

<Method name="supportsSavepoints">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSavepoints
	Quit ..%Execute0R(..Gateway,"supportsSavepoints",%this)
]]></Implementation>
</Method>

<Method name="deletesAreDetected">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: deletesAreDetected
	Quit ..%Execute1R(..Gateway,"deletesAreDetected",%this,p0)
]]></Implementation>
</Method>

<Method name="updatesAreDetected">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: updatesAreDetected
	Quit ..%Execute1R(..Gateway,"updatesAreDetected",%this,p0)
]]></Implementation>
</Method>

<Method name="supportsExpressionsInOrderBy">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsExpressionsInOrderBy
	Quit ..%Execute0R(..Gateway,"supportsExpressionsInOrderBy",%this)
]]></Implementation>
</Method>

<Method name="storesMixedCaseQuotedIdentifier">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: storesMixedCaseQuotedIdentifiers
	Quit ..%Execute0R(..Gateway,"storesMixedCaseQuotedIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="supportsTransactions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsTransactions
	Quit ..%Execute0R(..Gateway,"supportsTransactions",%this)
]]></Implementation>
</Method>

<Method name="getColumnPrivileges">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnPrivileges
	Quit ..%Execute4R(..Gateway,"getColumnPrivileges",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="usesLocalFilePerTable">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: usesLocalFilePerTable
	Quit ..%Execute0R(..Gateway,"usesLocalFilePerTable",%this)
]]></Implementation>
</Method>

<Method name="getDriverMajorVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDriverMajorVersion
	Quit ..%Execute0R(..Gateway,"getDriverMajorVersion",%this)
]]></Implementation>
</Method>

<Method name="getMaxColumnsInIndex">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxColumnsInIndex
	Quit ..%Execute0R(..Gateway,"getMaxColumnsInIndex",%this)
]]></Implementation>
</Method>

<Method name="supportsOpenCursorsAcrossCommit">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsOpenCursorsAcrossCommit
	Quit ..%Execute0R(..Gateway,"supportsOpenCursorsAcrossCommit",%this)
]]></Implementation>
</Method>

<Method name="supportsGroupBy">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsGroupBy
	Quit ..%Execute0R(..Gateway,"supportsGroupBy",%this)
]]></Implementation>
</Method>

<Method name="getDriverVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDriverVersion
	Quit ..%Execute0R(..Gateway,"getDriverVersion",%this)
]]></Implementation>
</Method>

<Method name="supportsOrderByUnrelated">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsOrderByUnrelated
	Quit ..%Execute0R(..Gateway,"supportsOrderByUnrelated",%this)
]]></Implementation>
</Method>

<Method name="dataDefinitionCausesTransaction">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: dataDefinitionCausesTransactionCommit
	Quit ..%Execute0R(..Gateway,"dataDefinitionCausesTransactionCommit",%this)
]]></Implementation>
</Method>

<Method name="insertsAreDetected">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: insertsAreDetected
	Quit ..%Execute1R(..Gateway,"insertsAreDetected",%this,p0)
]]></Implementation>
</Method>

<Method name="nullsAreSortedHigh">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nullsAreSortedHigh
	Quit ..%Execute0R(..Gateway,"nullsAreSortedHigh",%this)
]]></Implementation>
</Method>

<Method name="getMaxRowSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxRowSize
	Quit ..%Execute0R(..Gateway,"getMaxRowSize",%this)
]]></Implementation>
</Method>

<Method name="locatorsUpdateCopy">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: locatorsUpdateCopy
	Quit ..%Execute0R(..Gateway,"locatorsUpdateCopy",%this)
]]></Implementation>
</Method>

<Method name="getSchemaTerm">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSchemaTerm
	Quit ..%Execute0R(..Gateway,"getSchemaTerm",%this)
]]></Implementation>
</Method>

<Method name="supportsLimitedOuterJoins">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsLimitedOuterJoins
	Quit ..%Execute0R(..Gateway,"supportsLimitedOuterJoins",%this)
]]></Implementation>
</Method>

<Method name="getMaxTableNameLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxTableNameLength
	Quit ..%Execute0R(..Gateway,"getMaxTableNameLength",%this)
]]></Implementation>
</Method>

<Method name="ownUpdatesAreVisible">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: ownUpdatesAreVisible
	Quit ..%Execute1R(..Gateway,"ownUpdatesAreVisible",%this,p0)
]]></Implementation>
</Method>

<Method name="supportsMultipleTransactions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsMultipleTransactions
	Quit ..%Execute0R(..Gateway,"supportsMultipleTransactions",%this)
]]></Implementation>
</Method>

<Method name="supportsColumnAliasing">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsColumnAliasing
	Quit ..%Execute0R(..Gateway,"supportsColumnAliasing",%this)
]]></Implementation>
</Method>

<Method name="supportsCatalogsInIndexDefiniti">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsCatalogsInIndexDefinitions
	Quit ..%Execute0R(..Gateway,"supportsCatalogsInIndexDefinitions",%this)
]]></Implementation>
</Method>

<Method name="supportsUnionAll">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsUnionAll
	Quit ..%Execute0R(..Gateway,"supportsUnionAll",%this)
]]></Implementation>
</Method>

<Method name="supportsStoredFunctionsUsingCal">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsStoredFunctionsUsingCallSyntax
	Quit ..%Execute0R(..Gateway,"supportsStoredFunctionsUsingCallSyntax",%this)
]]></Implementation>
</Method>

<Method name="getFunctionColumns">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFunctionColumns
	Quit ..%Execute4R(..Gateway,"getFunctionColumns",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getExportedKeys">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getExportedKeys
	Quit ..%Execute3R(..Gateway,"getExportedKeys",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="allTablesAreSelectable">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allTablesAreSelectable
	Quit ..%Execute0R(..Gateway,"allTablesAreSelectable",%this)
]]></Implementation>
</Method>

<Method name="getIdentifierQuoteString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getIdentifierQuoteString
	Quit ..%Execute0R(..Gateway,"getIdentifierQuoteString",%this)
]]></Implementation>
</Method>

<Method name="supportsResultSetType">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsResultSetType
	Quit ..%Execute1R(..Gateway,"supportsResultSetType",%this,p0)
]]></Implementation>
</Method>

<Method name="getDefaultTransactionIsolation">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefaultTransactionIsolation
	Quit ..%Execute0R(..Gateway,"getDefaultTransactionIsolation",%this)
]]></Implementation>
</Method>

<Method name="getCatalogs">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCatalogs
	Quit ..%Execute0R(..Gateway,"getCatalogs",%this)
]]></Implementation>
</Method>

<Method name="getProcedures">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getProcedures
	Quit ..%Execute3R(..Gateway,"getProcedures",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getURL">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getURL
	Quit ..%Execute0R(..Gateway,"getURL",%this)
]]></Implementation>
</Method>

<Method name="supportsDifferentTableCorrelati">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsDifferentTableCorrelationNames
	Quit ..%Execute0R(..Gateway,"supportsDifferentTableCorrelationNames",%this)
]]></Implementation>
</Method>

<Method name="getDriverName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDriverName
	Quit ..%Execute0R(..Gateway,"getDriverName",%this)
]]></Implementation>
</Method>

<Method name="getMaxStatements">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxStatements
	Quit ..%Execute0R(..Gateway,"getMaxStatements",%this)
]]></Implementation>
</Method>

<Method name="supportsMultipleOpenResults">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsMultipleOpenResults
	Quit ..%Execute0R(..Gateway,"supportsMultipleOpenResults",%this)
]]></Implementation>
</Method>

<Method name="supportsBatchUpdates">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsBatchUpdates
	Quit ..%Execute0R(..Gateway,"supportsBatchUpdates",%this)
]]></Implementation>
</Method>

<Method name="getAttributes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAttributes
	Quit ..%Execute4R(..Gateway,"getAttributes",%this,p0,p1,p2,p3)
]]></Implementation>
</Method>

<Method name="getUserName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUserName
	Quit ..%Execute0R(..Gateway,"getUserName",%this)
]]></Implementation>
</Method>

<Method name="getDatabaseProductName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDatabaseProductName
	Quit ..%Execute0R(..Gateway,"getDatabaseProductName",%this)
]]></Implementation>
</Method>

<Method name="getMaxProcedureNameLength">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxProcedureNameLength
	Quit ..%Execute0R(..Gateway,"getMaxProcedureNameLength",%this)
]]></Implementation>
</Method>

<Method name="getTableTypes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTableTypes
	Quit ..%Execute0R(..Gateway,"getTableTypes",%this)
]]></Implementation>
</Method>

<Method name="getDatabaseProductVersion">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDatabaseProductVersion
	Quit ..%Execute0R(..Gateway,"getDatabaseProductVersion",%this)
]]></Implementation>
</Method>

<Method name="isCatalogAtStart">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCatalogAtStart
	Quit ..%Execute0R(..Gateway,"isCatalogAtStart",%this)
]]></Implementation>
</Method>

<Method name="supportsResultSetHoldability">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsResultSetHoldability
	Quit ..%Execute1R(..Gateway,"supportsResultSetHoldability",%this,p0)
]]></Implementation>
</Method>

<Method name="getCatalogSeparator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCatalogSeparator
	Quit ..%Execute0R(..Gateway,"getCatalogSeparator",%this)
]]></Implementation>
</Method>

<Method name="getTypeInfo">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTypeInfo
	Quit ..%Execute0R(..Gateway,"getTypeInfo",%this)
]]></Implementation>
</Method>

<Method name="supportsANSI92FullSQL">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsANSI92FullSQL
	Quit ..%Execute0R(..Gateway,"supportsANSI92FullSQL",%this)
]]></Implementation>
</Method>

<Method name="getTables">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTables
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getTables",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Do ..%WriteArray(..Gateway,"[Ljava.lang.String;",p3)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="supportsMinimumSQLGrammar">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsMinimumSQLGrammar
	Quit ..%Execute0R(..Gateway,"supportsMinimumSQLGrammar",%this)
]]></Implementation>
</Method>

<Method name="allProceduresAreCallable">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: allProceduresAreCallable
	Quit ..%Execute0R(..Gateway,"allProceduresAreCallable",%this)
]]></Implementation>
</Method>

<Method name="supportsSubqueriesInExists">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSubqueriesInExists
	Quit ..%Execute0R(..Gateway,"supportsSubqueriesInExists",%this)
]]></Implementation>
</Method>

<Method name="supportsGetGeneratedKeys">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsGetGeneratedKeys
	Quit ..%Execute0R(..Gateway,"supportsGetGeneratedKeys",%this)
]]></Implementation>
</Method>

<Method name="supportsOuterJoins">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsOuterJoins
	Quit ..%Execute0R(..Gateway,"supportsOuterJoins",%this)
]]></Implementation>
</Method>

<Method name="storesUpperCaseIdentifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: storesUpperCaseIdentifiers
	Quit ..%Execute0R(..Gateway,"storesUpperCaseIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="nullsAreSortedAtEnd">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nullsAreSortedAtEnd
	Quit ..%Execute0R(..Gateway,"nullsAreSortedAtEnd",%this)
]]></Implementation>
</Method>

<Method name="supportsIntegrityEnhancementFac">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsIntegrityEnhancementFacility
	Quit ..%Execute0R(..Gateway,"supportsIntegrityEnhancementFacility",%this)
]]></Implementation>
</Method>

<Method name="supportsPositionedUpdate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsPositionedUpdate
	Quit ..%Execute0R(..Gateway,"supportsPositionedUpdate",%this)
]]></Implementation>
</Method>

<Method name="getIndexInfo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getIndexInfo
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getIndexInfo",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="getSearchStringEscape">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSearchStringEscape
	Quit ..%Execute0R(..Gateway,"getSearchStringEscape",%this)
]]></Implementation>
</Method>

<Method name="supportsMixedCaseIdentifiers">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsMixedCaseIdentifiers
	Quit ..%Execute0R(..Gateway,"supportsMixedCaseIdentifiers",%this)
]]></Implementation>
</Method>

<Method name="supportsANSI92IntermediateSQL">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsANSI92IntermediateSQL
	Quit ..%Execute0R(..Gateway,"supportsANSI92IntermediateSQL",%this)
]]></Implementation>
</Method>

<Method name="getSuperTables">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSuperTables
	Quit ..%Execute3R(..Gateway,"getSuperTables",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getSystemFunctions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSystemFunctions
	Quit ..%Execute0R(..Gateway,"getSystemFunctions",%this)
]]></Implementation>
</Method>

<Method name="supportsAlterTableWithDropColum">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsAlterTableWithDropColumn
	Quit ..%Execute0R(..Gateway,"supportsAlterTableWithDropColumn",%this)
]]></Implementation>
</Method>

<Method name="supportsExtendedSQLGrammar">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsExtendedSQLGrammar
	Quit ..%Execute0R(..Gateway,"supportsExtendedSQLGrammar",%this)
]]></Implementation>
</Method>

<Method name="getCatalogTerm">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCatalogTerm
	Quit ..%Execute0R(..Gateway,"getCatalogTerm",%this)
]]></Implementation>
</Method>

<Method name="supportsGroupByBeyondSelect">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsGroupByBeyondSelect
	Quit ..%Execute0R(..Gateway,"supportsGroupByBeyondSelect",%this)
]]></Implementation>
</Method>

<Method name="getMaxColumnsInTable">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxColumnsInTable
	Quit ..%Execute0R(..Gateway,"getMaxColumnsInTable",%this)
]]></Implementation>
</Method>

<Method name="supportsStoredProcedures">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsStoredProcedures
	Quit ..%Execute0R(..Gateway,"supportsStoredProcedures",%this)
]]></Implementation>
</Method>

<Method name="getMaxConnections">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxConnections
	Quit ..%Execute0R(..Gateway,"getMaxConnections",%this)
]]></Implementation>
</Method>

<Method name="getTimeDateFunctions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimeDateFunctions
	Quit ..%Execute0R(..Gateway,"getTimeDateFunctions",%this)
]]></Implementation>
</Method>

<Method name="getStringFunctions">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getStringFunctions
	Quit ..%Execute0R(..Gateway,"getStringFunctions",%this)
]]></Implementation>
</Method>

<Method name="getCrossReference">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCrossReference
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getCrossReference",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport(p5,18)
	Set x=..%GetObject(..Gateway)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="supportsSchemasInPrivilegeDefin">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsSchemasInPrivilegeDefinitions
	Quit ..%Execute0R(..Gateway,"supportsSchemasInPrivilegeDefinitions",%this)
]]></Implementation>
</Method>

<Method name="nullPlusNonNullIsNull">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nullPlusNonNullIsNull
	Quit ..%Execute0R(..Gateway,"nullPlusNonNullIsNull",%this)
]]></Implementation>
</Method>

<Method name="supportsFullOuterJoins">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsFullOuterJoins
	Quit ..%Execute0R(..Gateway,"supportsFullOuterJoins",%this)
]]></Implementation>
</Method>

<Method name="supportsOpenStatementsAcrossCom">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: supportsOpenStatementsAcrossCommit
	Quit ..%Execute0R(..Gateway,"supportsOpenStatementsAcrossCommit",%this)
]]></Implementation>
</Method>

<Method name="getSchemas">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSchemas
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getSchemas",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getSchemas",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getSchemas",%this)
]]></Implementation>
</Method>

<Parameter name="procedureResultUnknown">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="procedureNoResult">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="procedureReturnsResult">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="procedureColumnUnknown">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="procedureColumnIn">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="procedureColumnInOut">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="procedureColumnOut">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="procedureColumnReturn">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="procedureColumnResult">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="procedureNoNulls">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="procedureNullable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="procedureNullableUnknown">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="columnNoNulls">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="columnNullable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="columnNullableUnknown">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="bestRowTemporary">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="bestRowTransaction">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="bestRowSession">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="bestRowUnknown">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="bestRowNotPseudo">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="bestRowPseudo">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="versionColumnUnknown">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="versionColumnNotPseudo">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="versionColumnPseudo">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="importedKeyCascade">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="importedKeyRestrict">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="importedKeySetNull">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="importedKeyNoAction">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="importedKeySetDefault">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="importedKeyInitiallyDeferred">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="importedKeyInitiallyImmediate">
<Type>INTEGER</Type>
<Default>6</Default>
</Parameter>

<Parameter name="importedKeyNotDeferrable">
<Type>INTEGER</Type>
<Default>7</Default>
</Parameter>

<Parameter name="typeNoNulls">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="typeNullable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="typeNullableUnknown">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="typePredNone">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="typePredChar">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="typePredBasic">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="typeSearchable">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="tableIndexStatistic">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="tableIndexClustered">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="tableIndexHashed">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="tableIndexOther">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="attributeNoNulls">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="attributeNullable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="attributeNullableUnknown">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="sqlStateXOpen">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="sqlStateSQL">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="sqlStateSQL99">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="functionColumnUnknown">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="functionColumnIn">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="functionColumnInOut">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="functionColumnOut">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="functionReturn">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="functionColumnResult">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="functionNoNulls">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="functionNullable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="functionNullableUnknown">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="functionResultUnknown">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="functionNoTable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="functionReturnsTable">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>
</Class>


<Class name="java.sql.NClob">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Clob</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>
</Class>


<Class name="java.sql.ParameterMetaData">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Wrapper</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getPrecision">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPrecision
	Quit ..%Execute1R(..Gateway,"getPrecision",%this,p0)
]]></Implementation>
</Method>

<Method name="getParameterMode">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterMode
	Quit ..%Execute1R(..Gateway,"getParameterMode",%this,p0)
]]></Implementation>
</Method>

<Method name="getScale">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getScale
	Quit ..%Execute1R(..Gateway,"getScale",%this,p0)
]]></Implementation>
</Method>

<Method name="getParameterCount">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterCount
	Quit ..%Execute0R(..Gateway,"getParameterCount",%this)
]]></Implementation>
</Method>

<Method name="isNullable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isNullable
	Quit ..%Execute1R(..Gateway,"isNullable",%this,p0)
]]></Implementation>
</Method>

<Method name="getParameterClassName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterClassName
	Quit ..%Execute1R(..Gateway,"getParameterClassName",%this,p0)
]]></Implementation>
</Method>

<Method name="isSigned">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSigned
	Quit ..%Execute1R(..Gateway,"isSigned",%this,p0)
]]></Implementation>
</Method>

<Method name="getParameterTypeName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterTypeName
	Quit ..%Execute1R(..Gateway,"getParameterTypeName",%this,p0)
]]></Implementation>
</Method>

<Method name="getParameterType">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterType
	Quit ..%Execute1R(..Gateway,"getParameterType",%this,p0)
]]></Implementation>
</Method>

<Parameter name="parameterNoNulls">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="parameterNullable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="parameterNullableUnknown">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="parameterModeUnknown">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="parameterModeIn">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="parameterModeInOut">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="parameterModeOut">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>
</Class>


<Class name="java.sql.PreparedStatement">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Statement</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="setFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFloat
	Do ..%Execute2(..Gateway,"setFloat",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBytes
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("setBytes",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p0,18)
	Do ..%WriteArray(..Gateway,"[B",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="setString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setString
	Do ..%Execute2(..Gateway,"setString",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getMetaData">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMetaData
	Quit ..%Execute0R(..Gateway,"getMetaData",%this)
]]></Implementation>
</Method>

<Method name="setBlob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBlob
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setBlob",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setBlob",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setBlob",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setBlob",%this) Quit
]]></Implementation>
</Method>

<Method name="setNClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setNClob
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setNClob",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setNClob",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setNClob",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setNClob",%this) Quit
]]></Implementation>
</Method>

<Method name="setNCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setNCharacterStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setNCharacterStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setNCharacterStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setNCharacterStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setNCharacterStream",%this) Quit
]]></Implementation>
</Method>

<Method name="setBoolean">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBoolean
	Do ..%Execute2(..Gateway,"setBoolean",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setBinaryStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBinaryStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setBinaryStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setBinaryStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setBinaryStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setBinaryStream",%this) Quit
]]></Implementation>
</Method>

<Method name="setDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDouble
	Do ..%Execute2(..Gateway,"setDouble",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setShort
	Do ..%Execute2(..Gateway,"setShort",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setObject">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setObject
	If $D(p3) Do ..%ExecuteOL4(..Gateway,"setObject",%this,p0,p1,p2,p3) Quit
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setObject",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setObject",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setObject",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setObject",%this) Quit
]]></Implementation>
</Method>

<Method name="setBigDecimal">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setBigDecimal
	Do ..%Execute2(..Gateway,"setBigDecimal",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setInt
	Do ..%Execute2(..Gateway,"setInt",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="clearParameters">
<Implementation><![CDATA[
	#; Corresponding Java method: clearParameters
	Do ..%Execute0(..Gateway,"clearParameters",%this)
]]></Implementation>
</Method>

<Method name="setURL">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setURL
	Do ..%Execute2(..Gateway,"setURL",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLong
	Do ..%Execute2(..Gateway,"setLong",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setArray
	Do ..%Execute2(..Gateway,"setArray",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setTime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTime
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setTime",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setTime",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setTime",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setTime",%this) Quit
]]></Implementation>
</Method>

<Method name="setRef">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRef
	Do ..%Execute2(..Gateway,"setRef",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setTimestamp">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTimestamp
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setTimestamp",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setTimestamp",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setTimestamp",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setTimestamp",%this) Quit
]]></Implementation>
</Method>

<Method name="executeQuery">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: executeQuery
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"executeQuery",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"executeQuery",%this)
]]></Implementation>
</Method>

<Method name="setUnicodeStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setUnicodeStream
	Do ..%Execute3(..Gateway,"setUnicodeStream",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="addBatch">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: addBatch
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"addBatch",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"addBatch",%this) Quit
]]></Implementation>
</Method>

<Method name="setDate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDate
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setDate",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setDate",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setDate",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setDate",%this) Quit
]]></Implementation>
</Method>

<Method name="getParameterMetaData">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameterMetaData
	Quit ..%Execute0R(..Gateway,"getParameterMetaData",%this)
]]></Implementation>
</Method>

<Method name="setCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setCharacterStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setCharacterStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setCharacterStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setCharacterStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setCharacterStream",%this) Quit
]]></Implementation>
</Method>

<Method name="setNull">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setNull
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setNull",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setNull",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setNull",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setNull",%this) Quit
]]></Implementation>
</Method>

<Method name="setNString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setNString
	Do ..%Execute2(..Gateway,"setNString",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setByte">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setByte
	Do ..%Execute2(..Gateway,"setByte",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setRowId">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRowId
	Do ..%Execute2(..Gateway,"setRowId",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="setAsciiStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setAsciiStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setAsciiStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setAsciiStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setAsciiStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setAsciiStream",%this) Quit
]]></Implementation>
</Method>

<Method name="setClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setClob
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"setClob",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"setClob",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"setClob",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"setClob",%this) Quit
]]></Implementation>
</Method>

<Method name="setSQLXML">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSQLXML
	Do ..%Execute2(..Gateway,"setSQLXML",%this,p0,p1)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.Ref">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getBaseTypeName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBaseTypeName
	Quit ..%Execute0R(..Gateway,"getBaseTypeName",%this)
]]></Implementation>
</Method>

<Method name="setObject">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setObject
	Do ..%Execute1(..Gateway,"setObject",%this,p0)
]]></Implementation>
</Method>

<Method name="getObject">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getObject
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getObject",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getObject",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.ResultSet">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Wrapper</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="updateBoolean">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateBoolean
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateBoolean",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateBoolean",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateBoolean",%this) Quit
]]></Implementation>
</Method>

<Method name="last">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: last
	Quit ..%Execute0R(..Gateway,"last",%this)
]]></Implementation>
</Method>

<Method name="getSQLXML">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSQLXML
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getSQLXML",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getSQLXML",%this)
]]></Implementation>
</Method>

<Method name="getBoolean">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBoolean
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBoolean",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBoolean",%this)
]]></Implementation>
</Method>

<Method name="updateNClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateNClob
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateNClob",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateNClob",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateNClob",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateNClob",%this) Quit
]]></Implementation>
</Method>

<Method name="getCursorName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCursorName
	Quit ..%Execute0R(..Gateway,"getCursorName",%this)
]]></Implementation>
</Method>

<Method name="moveToInsertRow">
<Implementation><![CDATA[
	#; Corresponding Java method: moveToInsertRow
	Do ..%Execute0(..Gateway,"moveToInsertRow",%this)
]]></Implementation>
</Method>

<Method name="wasNull">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: wasNull
	Quit ..%Execute0R(..Gateway,"wasNull",%this)
]]></Implementation>
</Method>

<Method name="updateBigDecimal">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateBigDecimal
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateBigDecimal",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateBigDecimal",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateBigDecimal",%this) Quit
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>

<Method name="getStatement">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getStatement
	Quit ..%Execute0R(..Gateway,"getStatement",%this)
]]></Implementation>
</Method>

<Method name="getClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getClob
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getClob",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getClob",%this)
]]></Implementation>
</Method>

<Method name="cancelRowUpdates">
<Implementation><![CDATA[
	#; Corresponding Java method: cancelRowUpdates
	Do ..%Execute0(..Gateway,"cancelRowUpdates",%this)
]]></Implementation>
</Method>

<Method name="updateDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateDouble
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateDouble",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateDouble",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateDouble",%this) Quit
]]></Implementation>
</Method>

<Method name="updateInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateInt
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateInt",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateInt",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateInt",%this) Quit
]]></Implementation>
</Method>

<Method name="getNCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNCharacterStream
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getNCharacterStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getNCharacterStream",%this)
]]></Implementation>
</Method>

<Method name="afterLast">
<Implementation><![CDATA[
	#; Corresponding Java method: afterLast
	Do ..%Execute0(..Gateway,"afterLast",%this)
]]></Implementation>
</Method>

<Method name="getAsciiStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAsciiStream
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getAsciiStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getAsciiStream",%this)
]]></Implementation>
</Method>

<Method name="updateNCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateNCharacterStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateNCharacterStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateNCharacterStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateNCharacterStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateNCharacterStream",%this) Quit
]]></Implementation>
</Method>

<Method name="isClosed">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isClosed
	Quit ..%Execute0R(..Gateway,"isClosed",%this)
]]></Implementation>
</Method>

<Method name="updateRow">
<Implementation><![CDATA[
	#; Corresponding Java method: updateRow
	Do ..%Execute0(..Gateway,"updateRow",%this)
]]></Implementation>
</Method>

<Method name="rowUpdated">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rowUpdated
	Quit ..%Execute0R(..Gateway,"rowUpdated",%this)
]]></Implementation>
</Method>

<Method name="getRow">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRow
	Quit ..%Execute0R(..Gateway,"getRow",%this)
]]></Implementation>
</Method>

<Method name="getObject">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getObject
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getObject",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getObject",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getObject",%this)
]]></Implementation>
</Method>

<Method name="setFetchDirection">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFetchDirection
	Do ..%Execute1(..Gateway,"setFetchDirection",%this,p0)
]]></Implementation>
</Method>

<Method name="getBigDecimal">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBigDecimal
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getBigDecimal",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBigDecimal",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBigDecimal",%this)
]]></Implementation>
</Method>

<Method name="getBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBytes
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBytes",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBytes",%this)
]]></Implementation>
</Method>

<Method name="isLast">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isLast
	Quit ..%Execute0R(..Gateway,"isLast",%this)
]]></Implementation>
</Method>

<Method name="moveToCurrentRow">
<Implementation><![CDATA[
	#; Corresponding Java method: moveToCurrentRow
	Do ..%Execute0(..Gateway,"moveToCurrentRow",%this)
]]></Implementation>
</Method>

<Method name="updateAsciiStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateAsciiStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateAsciiStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateAsciiStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateAsciiStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateAsciiStream",%this) Quit
]]></Implementation>
</Method>

<Method name="getShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getShort
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getShort",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getShort",%this)
]]></Implementation>
</Method>

<Method name="updateTimestamp">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateTimestamp
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateTimestamp",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateTimestamp",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateTimestamp",%this) Quit
]]></Implementation>
</Method>

<Method name="updateByte">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateByte
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateByte",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateByte",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateByte",%this) Quit
]]></Implementation>
</Method>

<Method name="updateTime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateTime
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateTime",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateTime",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateTime",%this) Quit
]]></Implementation>
</Method>

<Method name="getHoldability">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHoldability
	Quit ..%Execute0R(..Gateway,"getHoldability",%this)
]]></Implementation>
</Method>

<Method name="updateBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateBytes
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateBytes",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateBytes",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateBytes",%this) Quit
]]></Implementation>
</Method>

<Method name="findColumn">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: findColumn
	Quit ..%Execute1R(..Gateway,"findColumn",%this,p0)
]]></Implementation>
</Method>

<Method name="beforeFirst">
<Implementation><![CDATA[
	#; Corresponding Java method: beforeFirst
	Do ..%Execute0(..Gateway,"beforeFirst",%this)
]]></Implementation>
</Method>

<Method name="relative">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: relative
	Quit ..%Execute1R(..Gateway,"relative",%this,p0)
]]></Implementation>
</Method>

<Method name="getArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getArray
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getArray",%this)
]]></Implementation>
</Method>

<Method name="updateRef">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateRef
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateRef",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateRef",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateRef",%this) Quit
]]></Implementation>
</Method>

<Method name="refreshRow">
<Implementation><![CDATA[
	#; Corresponding Java method: refreshRow
	Do ..%Execute0(..Gateway,"refreshRow",%this)
]]></Implementation>
</Method>

<Method name="getDate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDate
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getDate",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDate",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDate",%this)
]]></Implementation>
</Method>

<Method name="getFetchSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFetchSize
	Quit ..%Execute0R(..Gateway,"getFetchSize",%this)
]]></Implementation>
</Method>

<Method name="updateSQLXML">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateSQLXML
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateSQLXML",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateSQLXML",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateSQLXML",%this) Quit
]]></Implementation>
</Method>

<Method name="isAfterLast">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAfterLast
	Quit ..%Execute0R(..Gateway,"isAfterLast",%this)
]]></Implementation>
</Method>

<Method name="getBlob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBlob
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBlob",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBlob",%this)
]]></Implementation>
</Method>

<Method name="getURL">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getURL
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getURL",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getURL",%this)
]]></Implementation>
</Method>

<Method name="getNString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNString
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getNString",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getNString",%this)
]]></Implementation>
</Method>

<Method name="getString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getString
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getString",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getString",%this)
]]></Implementation>
</Method>

<Method name="updateRowId">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateRowId
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateRowId",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateRowId",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateRowId",%this) Quit
]]></Implementation>
</Method>

<Method name="getFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFloat
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getFloat",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getFloat",%this)
]]></Implementation>
</Method>

<Method name="updateBinaryStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateBinaryStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateBinaryStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateBinaryStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateBinaryStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateBinaryStream",%this) Quit
]]></Implementation>
</Method>

<Method name="getDouble">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDouble
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDouble",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDouble",%this)
]]></Implementation>
</Method>

<Method name="next">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: next
	Quit ..%Execute0R(..Gateway,"next",%this)
]]></Implementation>
</Method>

<Method name="getMetaData">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMetaData
	Quit ..%Execute0R(..Gateway,"getMetaData",%this)
]]></Implementation>
</Method>

<Method name="clearWarnings">
<Implementation><![CDATA[
	#; Corresponding Java method: clearWarnings
	Do ..%Execute0(..Gateway,"clearWarnings",%this)
]]></Implementation>
</Method>

<Method name="getLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLong
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getLong",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getLong",%this)
]]></Implementation>
</Method>

<Method name="updateLong">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateLong
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateLong",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateLong",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateLong",%this) Quit
]]></Implementation>
</Method>

<Method name="insertRow">
<Implementation><![CDATA[
	#; Corresponding Java method: insertRow
	Do ..%Execute0(..Gateway,"insertRow",%this)
]]></Implementation>
</Method>

<Method name="absolute">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: absolute
	Quit ..%Execute1R(..Gateway,"absolute",%this,p0)
]]></Implementation>
</Method>

<Method name="getFetchDirection">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFetchDirection
	Quit ..%Execute0R(..Gateway,"getFetchDirection",%this)
]]></Implementation>
</Method>

<Method name="updateArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateArray
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateArray",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateArray",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateArray",%this) Quit
]]></Implementation>
</Method>

<Method name="rowDeleted">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rowDeleted
	Quit ..%Execute0R(..Gateway,"rowDeleted",%this)
]]></Implementation>
</Method>

<Method name="rowInserted">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: rowInserted
	Quit ..%Execute0R(..Gateway,"rowInserted",%this)
]]></Implementation>
</Method>

<Method name="getTimestamp">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimestamp
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getTimestamp",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getTimestamp",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getTimestamp",%this)
]]></Implementation>
</Method>

<Method name="getType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getType
	Quit ..%Execute0R(..Gateway,"getType",%this)
]]></Implementation>
</Method>

<Method name="getRowId">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRowId
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getRowId",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getRowId",%this)
]]></Implementation>
</Method>

<Method name="getWarnings">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWarnings
	Quit ..%Execute0R(..Gateway,"getWarnings",%this)
]]></Implementation>
</Method>

<Method name="getRef">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRef
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getRef",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getRef",%this)
]]></Implementation>
</Method>

<Method name="updateObject">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateObject
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateObject",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateObject",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateObject",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateObject",%this) Quit
]]></Implementation>
</Method>

<Method name="updateNString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateNString
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateNString",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateNString",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateNString",%this) Quit
]]></Implementation>
</Method>

<Method name="getNClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNClob
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getNClob",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getNClob",%this)
]]></Implementation>
</Method>

<Method name="updateCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateCharacterStream
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateCharacterStream",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateCharacterStream",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateCharacterStream",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateCharacterStream",%this) Quit
]]></Implementation>
</Method>

<Method name="isBeforeFirst">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isBeforeFirst
	Quit ..%Execute0R(..Gateway,"isBeforeFirst",%this)
]]></Implementation>
</Method>

<Method name="previous">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: previous
	Quit ..%Execute0R(..Gateway,"previous",%this)
]]></Implementation>
</Method>

<Method name="getInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInt
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getInt",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getInt",%this)
]]></Implementation>
</Method>

<Method name="getUnicodeStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUnicodeStream
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getUnicodeStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getUnicodeStream",%this)
]]></Implementation>
</Method>

<Method name="getByte">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getByte
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getByte",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getByte",%this)
]]></Implementation>
</Method>

<Method name="updateShort">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateShort
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateShort",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateShort",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateShort",%this) Quit
]]></Implementation>
</Method>

<Method name="getConcurrency">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getConcurrency
	Quit ..%Execute0R(..Gateway,"getConcurrency",%this)
]]></Implementation>
</Method>

<Method name="getCharacterStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCharacterStream
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getCharacterStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getCharacterStream",%this)
]]></Implementation>
</Method>

<Method name="setFetchSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFetchSize
	Do ..%Execute1(..Gateway,"setFetchSize",%this,p0)
]]></Implementation>
</Method>

<Method name="isFirst">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isFirst
	Quit ..%Execute0R(..Gateway,"isFirst",%this)
]]></Implementation>
</Method>

<Method name="deleteRow">
<Implementation><![CDATA[
	#; Corresponding Java method: deleteRow
	Do ..%Execute0(..Gateway,"deleteRow",%this)
]]></Implementation>
</Method>

<Method name="updateBlob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateBlob
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateBlob",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateBlob",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateBlob",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateBlob",%this) Quit
]]></Implementation>
</Method>

<Method name="updateDate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateDate
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateDate",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateDate",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateDate",%this) Quit
]]></Implementation>
</Method>

<Method name="updateClob">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateClob
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"updateClob",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateClob",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateClob",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateClob",%this) Quit
]]></Implementation>
</Method>

<Method name="getTime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTime
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getTime",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getTime",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getTime",%this)
]]></Implementation>
</Method>

<Method name="updateString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateString
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateString",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateString",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateString",%this) Quit
]]></Implementation>
</Method>

<Method name="first">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: first
	Quit ..%Execute0R(..Gateway,"first",%this)
]]></Implementation>
</Method>

<Method name="updateNull">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateNull
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateNull",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateNull",%this) Quit
]]></Implementation>
</Method>

<Method name="updateFloat">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: updateFloat
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"updateFloat",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"updateFloat",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"updateFloat",%this) Quit
]]></Implementation>
</Method>

<Method name="getBinaryStream">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBinaryStream
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getBinaryStream",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getBinaryStream",%this)
]]></Implementation>
</Method>

<Parameter name="FETCHuFORWARD">
<Type>INTEGER</Type>
<Default>1000</Default>
</Parameter>

<Parameter name="FETCHuREVERSE">
<Type>INTEGER</Type>
<Default>1001</Default>
</Parameter>

<Parameter name="FETCHuUNKNOWN">
<Type>INTEGER</Type>
<Default>1002</Default>
</Parameter>

<Parameter name="TYPEuFORWARDuONLY">
<Type>INTEGER</Type>
<Default>1003</Default>
</Parameter>

<Parameter name="TYPEuSCROLLuINSENSITIVE">
<Type>INTEGER</Type>
<Default>1004</Default>
</Parameter>

<Parameter name="TYPEuSCROLLuSENSITIVE">
<Type>INTEGER</Type>
<Default>1005</Default>
</Parameter>

<Parameter name="CONCURuREADuONLY">
<Type>INTEGER</Type>
<Default>1007</Default>
</Parameter>

<Parameter name="CONCURuUPDATABLE">
<Type>INTEGER</Type>
<Default>1008</Default>
</Parameter>

<Parameter name="HOLDuCURSORSuOVERuCOMMIT">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="CLOSEuCURSORSuATuCOMMIT">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>
</Class>


<Class name="java.sql.ResultSetMetaData">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Wrapper</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getColumnDisplaySize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnDisplaySize
	Quit ..%Execute1R(..Gateway,"getColumnDisplaySize",%this,p0)
]]></Implementation>
</Method>

<Method name="isCurrency">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCurrency
	Quit ..%Execute1R(..Gateway,"isCurrency",%this,p0)
]]></Implementation>
</Method>

<Method name="isWritable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isWritable
	Quit ..%Execute1R(..Gateway,"isWritable",%this,p0)
]]></Implementation>
</Method>

<Method name="getColumnClassName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnClassName
	Quit ..%Execute1R(..Gateway,"getColumnClassName",%this,p0)
]]></Implementation>
</Method>

<Method name="getTableName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTableName
	Quit ..%Execute1R(..Gateway,"getTableName",%this,p0)
]]></Implementation>
</Method>

<Method name="isDefinitelyWritable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isDefinitelyWritable
	Quit ..%Execute1R(..Gateway,"isDefinitelyWritable",%this,p0)
]]></Implementation>
</Method>

<Method name="isSigned">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSigned
	Quit ..%Execute1R(..Gateway,"isSigned",%this,p0)
]]></Implementation>
</Method>

<Method name="getSchemaName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSchemaName
	Quit ..%Execute1R(..Gateway,"getSchemaName",%this,p0)
]]></Implementation>
</Method>

<Method name="isAutoIncrement">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isAutoIncrement
	Quit ..%Execute1R(..Gateway,"isAutoIncrement",%this,p0)
]]></Implementation>
</Method>

<Method name="getColumnTypeName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnTypeName
	Quit ..%Execute1R(..Gateway,"getColumnTypeName",%this,p0)
]]></Implementation>
</Method>

<Method name="getColumnType">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnType
	Quit ..%Execute1R(..Gateway,"getColumnType",%this,p0)
]]></Implementation>
</Method>

<Method name="isSearchable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSearchable
	Quit ..%Execute1R(..Gateway,"isSearchable",%this,p0)
]]></Implementation>
</Method>

<Method name="getColumnCount">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnCount
	Quit ..%Execute0R(..Gateway,"getColumnCount",%this)
]]></Implementation>
</Method>

<Method name="getColumnLabel">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnLabel
	Quit ..%Execute1R(..Gateway,"getColumnLabel",%this,p0)
]]></Implementation>
</Method>

<Method name="getPrecision">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getPrecision
	Quit ..%Execute1R(..Gateway,"getPrecision",%this,p0)
]]></Implementation>
</Method>

<Method name="getCatalogName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCatalogName
	Quit ..%Execute1R(..Gateway,"getCatalogName",%this,p0)
]]></Implementation>
</Method>

<Method name="getColumnName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getColumnName
	Quit ..%Execute1R(..Gateway,"getColumnName",%this,p0)
]]></Implementation>
</Method>

<Method name="getScale">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getScale
	Quit ..%Execute1R(..Gateway,"getScale",%this,p0)
]]></Implementation>
</Method>

<Method name="isReadOnly">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isReadOnly
	Quit ..%Execute1R(..Gateway,"isReadOnly",%this,p0)
]]></Implementation>
</Method>

<Method name="isNullable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isNullable
	Quit ..%Execute1R(..Gateway,"isNullable",%this,p0)
]]></Implementation>
</Method>

<Method name="isCaseSensitive">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isCaseSensitive
	Quit ..%Execute1R(..Gateway,"isCaseSensitive",%this,p0)
]]></Implementation>
</Method>

<Parameter name="columnNoNulls">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="columnNullable">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="columnNullableUnknown">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>
</Class>


<Class name="java.sql.RowId">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getBytes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBytes
	Quit ..%Execute0R(..Gateway,"getBytes",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.RowIdLifetime">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Enum</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="values">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(p0,"values","java.sql.RowIdLifetime")
]]></Implementation>
</Method>

<Method name="valueOf">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: valueOf
	Quit:$D(p2) ..%ExecuteOLR2(p0,"valueOf","java.sql.RowIdLifetime",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"valueOf","java.sql.RowIdLifetime",p1)
	Quit ..%ExecuteOLR0(p0,"valueOf","java.sql.RowIdLifetime")
]]></Implementation>
</Method>

<Parameter name="ROWIDuUNSUPPORTED">
<Type>STRING</Type>
<Default>ROWID_UNSUPPORTED</Default>
</Parameter>

<Parameter name="ROWIDuVALIDuOTHER">
<Type>STRING</Type>
<Default>ROWID_VALID_OTHER</Default>
</Parameter>

<Parameter name="ROWIDuVALIDuSESSION">
<Type>STRING</Type>
<Default>ROWID_VALID_SESSION</Default>
</Parameter>

<Parameter name="ROWIDuVALIDuTRANSACTION">
<Type>STRING</Type>
<Default>ROWID_VALID_TRANSACTION</Default>
</Parameter>

<Parameter name="ROWIDuVALIDuFOREVER">
<Type>STRING</Type>
<Default>ROWID_VALID_FOREVER</Default>
</Parameter>
</Class>


<Class name="java.sql.SQLException">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Exception,java.lang.Iterable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.sql.SQLException
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.sql.SQLException",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getErrorCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getErrorCode
	Quit ..%Execute0R(..Gateway,"getErrorCode",%this)
]]></Implementation>
</Method>

<Method name="getNextException">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNextException
	Quit ..%Execute0R(..Gateway,"getNextException",%this)
]]></Implementation>
</Method>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>

<Method name="getSQLState">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSQLState
	Quit ..%Execute0R(..Gateway,"getSQLState",%this)
]]></Implementation>
</Method>

<Method name="setNextException">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setNextException
	Do ..%Execute1(..Gateway,"setNextException",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.SQLWarning">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.SQLException</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.sql.SQLWarning
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.sql.SQLWarning",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="setNextWarning">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setNextWarning
	Do ..%Execute1(..Gateway,"setNextWarning",%this,p0)
]]></Implementation>
</Method>

<Method name="getNextWarning">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getNextWarning
	Quit ..%Execute0R(..Gateway,"getNextWarning",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.SQLXML">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="free">
<Implementation><![CDATA[
	#; Corresponding Java method: free
	Do ..%Execute0(..Gateway,"free",%this)
]]></Implementation>
</Method>

<Method name="setCharacterStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setCharacterStream
	Quit ..%Execute0R(..Gateway,"setCharacterStream",%this)
]]></Implementation>
</Method>

<Method name="setResult">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setResult
	Quit ..%Execute1R(..Gateway,"setResult",%this,p0)
]]></Implementation>
</Method>

<Method name="setString">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setString
	Do ..%Execute1(..Gateway,"setString",%this,p0)
]]></Implementation>
</Method>

<Method name="getCharacterStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCharacterStream
	Quit ..%Execute0R(..Gateway,"getCharacterStream",%this)
]]></Implementation>
</Method>

<Method name="getString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getString
	Quit ..%Execute0R(..Gateway,"getString",%this)
]]></Implementation>
</Method>

<Method name="getSource">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSource
	Quit ..%Execute1R(..Gateway,"getSource",%this,p0)
]]></Implementation>
</Method>

<Method name="setBinaryStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setBinaryStream
	Quit ..%Execute0R(..Gateway,"setBinaryStream",%this)
]]></Implementation>
</Method>

<Method name="getBinaryStream">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getBinaryStream
	Quit ..%Execute0R(..Gateway,"getBinaryStream",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.Savepoint">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getSavepointName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSavepointName
	Quit ..%Execute0R(..Gateway,"getSavepointName",%this)
]]></Implementation>
</Method>

<Method name="getSavepointId">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSavepointId
	Quit ..%Execute0R(..Gateway,"getSavepointId",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.Statement">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.sql.Wrapper</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="clearBatch">
<Implementation><![CDATA[
	#; Corresponding Java method: clearBatch
	Do ..%Execute0(..Gateway,"clearBatch",%this)
]]></Implementation>
</Method>

<Method name="clearWarnings">
<Implementation><![CDATA[
	#; Corresponding Java method: clearWarnings
	Do ..%Execute0(..Gateway,"clearWarnings",%this)
]]></Implementation>
</Method>

<Method name="cancel">
<Implementation><![CDATA[
	#; Corresponding Java method: cancel
	Do ..%Execute0(..Gateway,"cancel",%this)
]]></Implementation>
</Method>

<Method name="setMaxFieldSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setMaxFieldSize
	Do ..%Execute1(..Gateway,"setMaxFieldSize",%this,p0)
]]></Implementation>
</Method>

<Method name="getResultSetConcurrency">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResultSetConcurrency
	Quit ..%Execute0R(..Gateway,"getResultSetConcurrency",%this)
]]></Implementation>
</Method>

<Method name="getQueryTimeout">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getQueryTimeout
	Quit ..%Execute0R(..Gateway,"getQueryTimeout",%this)
]]></Implementation>
</Method>

<Method name="close">
<Implementation><![CDATA[
	#; Corresponding Java method: close
	Do ..%Execute0(..Gateway,"close",%this)
]]></Implementation>
</Method>

<Method name="getFetchDirection">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFetchDirection
	Quit ..%Execute0R(..Gateway,"getFetchDirection",%this)
]]></Implementation>
</Method>

<Method name="executeBatch">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: executeBatch
	Quit ..%Execute0R(..Gateway,"executeBatch",%this)
]]></Implementation>
</Method>

<Method name="getMaxFieldSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxFieldSize
	Quit ..%Execute0R(..Gateway,"getMaxFieldSize",%this)
]]></Implementation>
</Method>

<Method name="getGeneratedKeys">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGeneratedKeys
	Quit ..%Execute0R(..Gateway,"getGeneratedKeys",%this)
]]></Implementation>
</Method>

<Method name="getResultSetHoldability">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResultSetHoldability
	Quit ..%Execute0R(..Gateway,"getResultSetHoldability",%this)
]]></Implementation>
</Method>

<Method name="getWarnings">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getWarnings
	Quit ..%Execute0R(..Gateway,"getWarnings",%this)
]]></Implementation>
</Method>

<Method name="getMaxRows">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaxRows
	Quit ..%Execute0R(..Gateway,"getMaxRows",%this)
]]></Implementation>
</Method>

<Method name="getConnection">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getConnection
	Quit ..%Execute0R(..Gateway,"getConnection",%this)
]]></Implementation>
</Method>

<Method name="setPoolable">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setPoolable
	Do ..%Execute1(..Gateway,"setPoolable",%this,p0)
]]></Implementation>
</Method>

<Method name="isClosed">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isClosed
	Quit ..%Execute0R(..Gateway,"isClosed",%this)
]]></Implementation>
</Method>

<Method name="setEscapeProcessing">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setEscapeProcessing
	Do ..%Execute1(..Gateway,"setEscapeProcessing",%this,p0)
]]></Implementation>
</Method>

<Method name="setFetchDirection">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFetchDirection
	Do ..%Execute1(..Gateway,"setFetchDirection",%this,p0)
]]></Implementation>
</Method>

<Method name="execute">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: execute
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"execute",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"execute",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"execute",%this)
]]></Implementation>
</Method>

<Method name="setFetchSize">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFetchSize
	Do ..%Execute1(..Gateway,"setFetchSize",%this,p0)
]]></Implementation>
</Method>

<Method name="getResultSetType">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResultSetType
	Quit ..%Execute0R(..Gateway,"getResultSetType",%this)
]]></Implementation>
</Method>

<Method name="setQueryTimeout">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setQueryTimeout
	Do ..%Execute1(..Gateway,"setQueryTimeout",%this,p0)
]]></Implementation>
</Method>

<Method name="getResultSet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getResultSet
	Quit ..%Execute0R(..Gateway,"getResultSet",%this)
]]></Implementation>
</Method>

<Method name="executeQuery">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: executeQuery
	Quit ..%Execute1R(..Gateway,"executeQuery",%this,p0)
]]></Implementation>
</Method>

<Method name="isPoolable">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isPoolable
	Quit ..%Execute0R(..Gateway,"isPoolable",%this)
]]></Implementation>
</Method>

<Method name="addBatch">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: addBatch
	Do ..%Execute1(..Gateway,"addBatch",%this,p0)
]]></Implementation>
</Method>

<Method name="executeUpdate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: executeUpdate
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"executeUpdate",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"executeUpdate",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"executeUpdate",%this)
]]></Implementation>
</Method>

<Method name="setMaxRows">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setMaxRows
	Do ..%Execute1(..Gateway,"setMaxRows",%this,p0)
]]></Implementation>
</Method>

<Method name="getUpdateCount">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getUpdateCount
	Quit ..%Execute0R(..Gateway,"getUpdateCount",%this)
]]></Implementation>
</Method>

<Method name="getFetchSize">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFetchSize
	Quit ..%Execute0R(..Gateway,"getFetchSize",%this)
]]></Implementation>
</Method>

<Method name="getMoreResults">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMoreResults
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getMoreResults",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getMoreResults",%this)
]]></Implementation>
</Method>

<Method name="setCursorName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setCursorName
	Do ..%Execute1(..Gateway,"setCursorName",%this,p0)
]]></Implementation>
</Method>

<Parameter name="CLOSEuCURRENTuRESULT">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="KEEPuCURRENTuRESULT">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="CLOSEuALLuRESULTS">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="SUCCESSuNOuINFO">
<Type>INTEGER</Type>
<Default>-2</Default>
</Parameter>

<Parameter name="EXECUTEuFAILED">
<Type>INTEGER</Type>
<Default>-3</Default>
</Parameter>

<Parameter name="RETURNuGENERATEDuKEYS">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="NOuGENERATEDuKEYS">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>
</Class>


<Class name="java.sql.Struct">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getSQLTypeName">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSQLTypeName
	Quit ..%Execute0R(..Gateway,"getSQLTypeName",%this)
]]></Implementation>
</Method>

<Method name="getAttributes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAttributes
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getAttributes",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getAttributes",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.sql.Wrapper">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="unwrap">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: unwrap
	Quit ..%Execute1R(..Gateway,"unwrap",%this,p0)
]]></Implementation>
</Method>

<Method name="isWrapperFor">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isWrapperFor
	Quit ..%Execute1R(..Gateway,"isWrapperFor",%this,p0)
]]></Implementation>
</Method>
</Class>




<Class name="java.text.AttributedCharacterIterator.Attribute">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Parameter name="LANGUAGE">
<Type>STRING</Type>
<Default>java.text.AttributedCharacterIterator$Attribute(language)</Default>
</Parameter>

<Parameter name="READING">
<Type>STRING</Type>
<Default>java.text.AttributedCharacterIterator$Attribute(reading)</Default>
</Parameter>

<Parameter name="INPUTuMETHODuSEGMENT">
<Type>STRING</Type>
<Default>java.text.AttributedCharacterIterator$Attribute(input_method_segment)</Default>
</Parameter>
</Class>




<Class name="java.util.AbstractCollection">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.util.Collection</Super>
<TimeChanged>62340,63163</TimeChanged>
<TimeCreated>62340,63163</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>

<Method name="toArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toArray
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toArray",%this)
]]></Implementation>
</Method>

<Method name="addAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: addAll
	Quit ..%Execute1R(..Gateway,"addAll",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="containsAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsAll
	Quit ..%Execute1R(..Gateway,"containsAll",%this,p0)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit ..%Execute1R(..Gateway,"add",%this,p0)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="retainAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: retainAll
	Quit ..%Execute1R(..Gateway,"retainAll",%this,p0)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="removeAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: removeAll
	Quit ..%Execute1R(..Gateway,"removeAll",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.AbstractList">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.AbstractCollection,java.util.List</Super>
<TimeChanged>62340,63163</TimeChanged>
<TimeCreated>62340,63163</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>

<Method name="addAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: addAll
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"addAll",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"addAll",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"remove",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"remove",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="set">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: set
	Quit ..%Execute2R(..Gateway,"set",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="listIterator">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: listIterator
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"listIterator",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"listIterator",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="lastIndexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lastIndexOf
	Quit ..%Execute1R(..Gateway,"lastIndexOf",%this,p0)
]]></Implementation>
</Method>

<Method name="indexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: indexOf
	Quit ..%Execute1R(..Gateway,"indexOf",%this,p0)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"add",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"add",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"add",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="subList">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subList
	Quit ..%Execute2R(..Gateway,"subList",%this,p0,p1)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.AbstractMap">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.util.Map</Super>
<TimeChanged>62328,57434</TimeChanged>
<TimeCreated>62328,57434</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit ..%Execute2R(..Gateway,"put",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="entrySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: entrySet
	Quit ..%Execute0R(..Gateway,"entrySet",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="keySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keySet
	Quit ..%Execute0R(..Gateway,"keySet",%this)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="containsKey">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsKey
	Quit ..%Execute1R(..Gateway,"containsKey",%this,p0)
]]></Implementation>
</Method>

<Method name="values">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(..Gateway,"values",%this)
]]></Implementation>
</Method>

<Method name="containsValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsValue
	Quit ..%Execute1R(..Gateway,"containsValue",%this,p0)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="putAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: putAll
	Do ..%Execute1(..Gateway,"putAll",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.AbstractSequentialList">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.AbstractList</Super>
<TimeChanged>62340,63163</TimeChanged>
<TimeCreated>62340,63163</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>

<Method name="addAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: addAll
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"addAll",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"addAll",%this)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"remove",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"remove",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="set">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: set
	Quit ..%Execute2R(..Gateway,"set",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="listIterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: listIterator
	Quit ..%ExecuteOLR0(..Gateway,"listIterator",%this)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"add",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"add",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.ArrayList">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.AbstractList,java.util.List,java.util.RandomAccess,java.lang.Cloneable,java.io.Serializable</Super>
<TimeChanged>62403,70088</TimeChanged>
<TimeCreated>62403,70088</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.ArrayList
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.ArrayList",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="toArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toArray
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toArray",%this)
]]></Implementation>
</Method>

<Method name="addAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: addAll
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"addAll",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"addAll",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"addAll",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"remove",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"remove",%this)
]]></Implementation>
</Method>

<Method name="set">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: set
	Quit ..%Execute2R(..Gateway,"set",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="trimToSize">
<Implementation><![CDATA[
	#; Corresponding Java method: trimToSize
	Do ..%Execute0(..Gateway,"trimToSize",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="lastIndexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lastIndexOf
	Quit ..%Execute1R(..Gateway,"lastIndexOf",%this,p0)
]]></Implementation>
</Method>

<Method name="indexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: indexOf
	Quit ..%Execute1R(..Gateway,"indexOf",%this,p0)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"add",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"add",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"add",%this)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="ensureCapacity">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: ensureCapacity
	Do ..%Execute1(..Gateway,"ensureCapacity",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Calendar">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable,java.lang.Cloneable,java.lang.Comparable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="getTimeZone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimeZone
	Quit ..%Execute0R(..Gateway,"getTimeZone",%this)
]]></Implementation>
</Method>

<Method name="getMinimalDaysInFirstWeek">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinimalDaysInFirstWeek
	Quit ..%Execute0R(..Gateway,"getMinimalDaysInFirstWeek",%this)
]]></Implementation>
</Method>

<Method name="getLeastMaximum">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLeastMaximum
	Quit ..%Execute1R(..Gateway,"getLeastMaximum",%this,p0)
]]></Implementation>
</Method>

<Method name="getGreatestMinimum">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getGreatestMinimum
	Quit ..%Execute1R(..Gateway,"getGreatestMinimum",%this,p0)
]]></Implementation>
</Method>

<Method name="before">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: before
	Quit ..%Execute1R(..Gateway,"before",%this,p0)
]]></Implementation>
</Method>

<Method name="set">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: set
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("set",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="setLenient">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setLenient
	Do ..%Execute1(..Gateway,"setLenient",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Do ..%Execute2(..Gateway,"add",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="getTimeInMillis">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimeInMillis
	Quit ..%Execute0R(..Gateway,"getTimeInMillis",%this)
]]></Implementation>
</Method>

<Method name="getFirstDayOfWeek">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getFirstDayOfWeek
	Quit ..%Execute0R(..Gateway,"getFirstDayOfWeek",%this)
]]></Implementation>
</Method>

<Method name="setMinimalDaysInFirstWeek">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setMinimalDaysInFirstWeek
	Do ..%Execute1(..Gateway,"setMinimalDaysInFirstWeek",%this,p0)
]]></Implementation>
</Method>

<Method name="after">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: after
	Quit ..%Execute1R(..Gateway,"after",%this,p0)
]]></Implementation>
</Method>

<Method name="clear">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"clear",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"clear",%this) Quit
]]></Implementation>
</Method>

<Method name="getActualMinimum">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getActualMinimum
	Quit ..%Execute1R(..Gateway,"getActualMinimum",%this,p0)
]]></Implementation>
</Method>

<Method name="roll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: roll
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"roll",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"roll",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"roll",%this) Quit
]]></Implementation>
</Method>

<Method name="getAvailableLocales">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAvailableLocales
	Quit ..%Execute0R(p0,"getAvailableLocales","java.util.Calendar")
]]></Implementation>
</Method>

<Method name="setTimeZone">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTimeZone
	Do ..%Execute1(..Gateway,"setTimeZone",%this,p0)
]]></Implementation>
</Method>

<Method name="setTime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTime
	Do ..%Execute1(..Gateway,"setTime",%this,p0)
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="isSet">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isSet
	Quit ..%Execute1R(..Gateway,"isSet",%this,p0)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="getDisplayNames">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDisplayNames
	Quit ..%Execute3R(..Gateway,"getDisplayNames",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="isLenient">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isLenient
	Quit ..%Execute0R(..Gateway,"isLenient",%this)
]]></Implementation>
</Method>

<Method name="getMaximum">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMaximum
	Quit ..%Execute1R(..Gateway,"getMaximum",%this,p0)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="getInstance">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getInstance
	Quit:$D(p2) ..%ExecuteOLR2(p0,"getInstance","java.util.Calendar",p1,p2)
	Quit:$D(p1) ..%ExecuteOLR1(p0,"getInstance","java.util.Calendar",p1)
	Quit ..%ExecuteOLR0(p0,"getInstance","java.util.Calendar")
]]></Implementation>
</Method>

<Method name="setTimeInMillis">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTimeInMillis
	Do ..%Execute1(..Gateway,"setTimeInMillis",%this,p0)
]]></Implementation>
</Method>

<Method name="getMinimum">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinimum
	Quit ..%Execute1R(..Gateway,"getMinimum",%this,p0)
]]></Implementation>
</Method>

<Method name="getTime">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTime
	Quit ..%Execute0R(..Gateway,"getTime",%this)
]]></Implementation>
</Method>

<Method name="getDisplayName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDisplayName
	Quit ..%Execute3R(..Gateway,"getDisplayName",%this,p0,p1,p2)
]]></Implementation>
</Method>

<Method name="getActualMaximum">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getActualMaximum
	Quit ..%Execute1R(..Gateway,"getActualMaximum",%this,p0)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="setFirstDayOfWeek">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setFirstDayOfWeek
	Do ..%Execute1(..Gateway,"setFirstDayOfWeek",%this,p0)
]]></Implementation>
</Method>

<Parameter name="ERA">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="YEAR">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="MONTH">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="WEEKuOFuYEAR">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="WEEKuOFuMONTH">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="DATE">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="DAYuOFuMONTH">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="DAYuOFuYEAR">
<Type>INTEGER</Type>
<Default>6</Default>
</Parameter>

<Parameter name="DAYuOFuWEEK">
<Type>INTEGER</Type>
<Default>7</Default>
</Parameter>

<Parameter name="DAYuOFuWEEKuINuMONTH">
<Type>INTEGER</Type>
<Default>8</Default>
</Parameter>

<Parameter name="AMuPM">
<Type>INTEGER</Type>
<Default>9</Default>
</Parameter>

<Parameter name="HOUR">
<Type>INTEGER</Type>
<Default>10</Default>
</Parameter>

<Parameter name="HOURuOFuDAY">
<Type>INTEGER</Type>
<Default>11</Default>
</Parameter>

<Parameter name="MINUTE">
<Type>INTEGER</Type>
<Default>12</Default>
</Parameter>

<Parameter name="SECOND">
<Type>INTEGER</Type>
<Default>13</Default>
</Parameter>

<Parameter name="MILLISECOND">
<Type>INTEGER</Type>
<Default>14</Default>
</Parameter>

<Parameter name="ZONEuOFFSET">
<Type>INTEGER</Type>
<Default>15</Default>
</Parameter>

<Parameter name="DSTuOFFSET">
<Type>INTEGER</Type>
<Default>16</Default>
</Parameter>

<Parameter name="FIELDuCOUNT">
<Type>INTEGER</Type>
<Default>17</Default>
</Parameter>

<Parameter name="SUNDAY">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="MONDAY">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="TUESDAY">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="WEDNESDAY">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="THURSDAY">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="FRIDAY">
<Type>INTEGER</Type>
<Default>6</Default>
</Parameter>

<Parameter name="SATURDAY">
<Type>INTEGER</Type>
<Default>7</Default>
</Parameter>

<Parameter name="JANUARY">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="FEBRUARY">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="MARCH">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>

<Parameter name="APRIL">
<Type>INTEGER</Type>
<Default>3</Default>
</Parameter>

<Parameter name="MAY">
<Type>INTEGER</Type>
<Default>4</Default>
</Parameter>

<Parameter name="JUNE">
<Type>INTEGER</Type>
<Default>5</Default>
</Parameter>

<Parameter name="JULY">
<Type>INTEGER</Type>
<Default>6</Default>
</Parameter>

<Parameter name="AUGUST">
<Type>INTEGER</Type>
<Default>7</Default>
</Parameter>

<Parameter name="SEPTEMBER">
<Type>INTEGER</Type>
<Default>8</Default>
</Parameter>

<Parameter name="OCTOBER">
<Type>INTEGER</Type>
<Default>9</Default>
</Parameter>

<Parameter name="NOVEMBER">
<Type>INTEGER</Type>
<Default>10</Default>
</Parameter>

<Parameter name="DECEMBER">
<Type>INTEGER</Type>
<Default>11</Default>
</Parameter>

<Parameter name="UNDECIMBER">
<Type>INTEGER</Type>
<Default>12</Default>
</Parameter>

<Parameter name="AM">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="PM">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="ALLuSTYLES">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="SHORT">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>

<Parameter name="LONG">
<Type>INTEGER</Type>
<Default>2</Default>
</Parameter>
</Class>


<Class name="java.util.Collection">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Iterable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>

<Method name="toArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toArray
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toArray",%this)
]]></Implementation>
</Method>

<Method name="addAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: addAll
	Quit ..%Execute1R(..Gateway,"addAll",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="containsAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsAll
	Quit ..%Execute1R(..Gateway,"containsAll",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit ..%Execute1R(..Gateway,"add",%this,p0)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="retainAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: retainAll
	Quit ..%Execute1R(..Gateway,"retainAll",%this,p0)
]]></Implementation>
</Method>

<Method name="removeAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: removeAll
	Quit ..%Execute1R(..Gateway,"removeAll",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Comparator">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63985</TimeChanged>
<TimeCreated>62321,63985</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="compare">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compare
	Quit ..%Execute2R(..Gateway,"compare",%this,p0,p1)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Date">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable,java.lang.Cloneable,java.lang.Comparable</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.Date
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.Date",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5)+$D(p6),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Do:$D(p6) ..%OverloadWrite(..Gateway,p6)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="toLocaleString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toLocaleString
	Quit ..%Execute0R(..Gateway,"toLocaleString",%this)
]]></Implementation>
</Method>

<Method name="getSeconds">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSeconds
	Quit ..%Execute0R(..Gateway,"getSeconds",%this)
]]></Implementation>
</Method>

<Method name="setYear">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setYear
	Do ..%Execute1(..Gateway,"setYear",%this,p0)
]]></Implementation>
</Method>

<Method name="before">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: before
	Quit ..%Execute1R(..Gateway,"before",%this,p0)
]]></Implementation>
</Method>

<Method name="getHours">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getHours
	Quit ..%Execute0R(..Gateway,"getHours",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getDay">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDay
	Quit ..%Execute0R(..Gateway,"getDay",%this)
]]></Implementation>
</Method>

<Method name="getTimezoneOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimezoneOffset
	Quit ..%Execute0R(..Gateway,"getTimezoneOffset",%this)
]]></Implementation>
</Method>

<Method name="getYear">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getYear
	Quit ..%Execute0R(..Gateway,"getYear",%this)
]]></Implementation>
</Method>

<Method name="setMinutes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setMinutes
	Do ..%Execute1(..Gateway,"setMinutes",%this,p0)
]]></Implementation>
</Method>

<Method name="after">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: after
	Quit ..%Execute1R(..Gateway,"after",%this,p0)
]]></Implementation>
</Method>

<Method name="UTC">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: UTC
	Do ..%PreInvoke(p0,"java.util.Date")
	Set x=$zobjexport("UTC",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport(p5,18)
	Set x=$zobjexport(p6,18)
	Set x=..%GetObject(p0)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p5=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p6=..%ReadArrayArgument(p0)
	Do ..%PostInvoke(p0)
	Quit x
]]></Implementation>
</Method>

<Method name="parse">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parse
	Quit ..%Execute1R(p0,"parse","java.util.Date",p1)
]]></Implementation>
</Method>

<Method name="setTime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setTime
	Do ..%Execute1(..Gateway,"setTime",%this,p0)
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="compareTo">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: compareTo
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"compareTo",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"compareTo",%this)
]]></Implementation>
</Method>

<Method name="setSeconds">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSeconds
	Do ..%Execute1(..Gateway,"setSeconds",%this,p0)
]]></Implementation>
</Method>

<Method name="setMonth">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setMonth
	Do ..%Execute1(..Gateway,"setMonth",%this,p0)
]]></Implementation>
</Method>

<Method name="setDate">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDate
	Do ..%Execute1(..Gateway,"setDate",%this,p0)
]]></Implementation>
</Method>

<Method name="getDate">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDate
	Quit ..%Execute0R(..Gateway,"getDate",%this)
]]></Implementation>
</Method>

<Method name="getTime">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTime
	Quit ..%Execute0R(..Gateway,"getTime",%this)
]]></Implementation>
</Method>

<Method name="setHours">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setHours
	Do ..%Execute1(..Gateway,"setHours",%this,p0)
]]></Implementation>
</Method>

<Method name="getMonth">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMonth
	Quit ..%Execute0R(..Gateway,"getMonth",%this)
]]></Implementation>
</Method>

<Method name="toGMTString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toGMTString
	Quit ..%Execute0R(..Gateway,"toGMTString",%this)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getMinutes">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getMinutes
	Quit ..%Execute0R(..Gateway,"getMinutes",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Dictionary">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.Dictionary
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.Dictionary",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit ..%Execute2R(..Gateway,"put",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="keys">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keys
	Quit ..%Execute0R(..Gateway,"keys",%this)
]]></Implementation>
</Method>

<Method name="elements">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: elements
	Quit ..%Execute0R(..Gateway,"elements",%this)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Enumeration">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="hasMoreElements">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasMoreElements
	Quit ..%Execute0R(..Gateway,"hasMoreElements",%this)
]]></Implementation>
</Method>

<Method name="nextElement">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextElement
	Quit ..%Execute0R(..Gateway,"nextElement",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.EventListener">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>
</Class>


<Class name="java.util.EventObject">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62321,63984</TimeChanged>
<TimeCreated>62321,63984</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.EventObject
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.EventObject",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getSource">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getSource
	Quit ..%Execute0R(..Gateway,"getSource",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.HashMap">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.AbstractMap,java.util.Map,java.lang.Cloneable,java.io.Serializable</Super>
<TimeChanged>62328,57434</TimeChanged>
<TimeCreated>62328,57434</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.HashMap
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.HashMap",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit ..%Execute2R(..Gateway,"put",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="entrySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: entrySet
	Quit ..%Execute0R(..Gateway,"entrySet",%this)
]]></Implementation>
</Method>

<Method name="keySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keySet
	Quit ..%Execute0R(..Gateway,"keySet",%this)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="containsKey">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsKey
	Quit ..%Execute1R(..Gateway,"containsKey",%this,p0)
]]></Implementation>
</Method>

<Method name="values">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(..Gateway,"values",%this)
]]></Implementation>
</Method>

<Method name="containsValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsValue
	Quit ..%Execute1R(..Gateway,"containsValue",%this,p0)
]]></Implementation>
</Method>

<Method name="putAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: putAll
	Do ..%Execute1(..Gateway,"putAll",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Hashtable">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.Dictionary,java.util.Map,java.lang.Cloneable,java.io.Serializable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.Hashtable
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.Hashtable",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit ..%Execute2R(..Gateway,"put",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="keys">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keys
	Quit ..%Execute0R(..Gateway,"keys",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="entrySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: entrySet
	Quit ..%Execute0R(..Gateway,"entrySet",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="keySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keySet
	Quit ..%Execute0R(..Gateway,"keySet",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="containsKey">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsKey
	Quit ..%Execute1R(..Gateway,"containsKey",%this,p0)
]]></Implementation>
</Method>

<Method name="values">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(..Gateway,"values",%this)
]]></Implementation>
</Method>

<Method name="containsValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsValue
	Quit ..%Execute1R(..Gateway,"containsValue",%this,p0)
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="putAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: putAll
	Do ..%Execute1(..Gateway,"putAll",%this,p0)
]]></Implementation>
</Method>

<Method name="elements">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: elements
	Quit ..%Execute0R(..Gateway,"elements",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Iterator">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61669</TimeChanged>
<TimeCreated>62511,61669</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="remove">
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Do ..%Execute0(..Gateway,"remove",%this)
]]></Implementation>
</Method>

<Method name="hasNext">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasNext
	Quit ..%Execute0R(..Gateway,"hasNext",%this)
]]></Implementation>
</Method>

<Method name="next">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: next
	Quit ..%Execute0R(..Gateway,"next",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.List">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.Collection</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>

<Method name="toArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toArray
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toArray",%this)
]]></Implementation>
</Method>

<Method name="addAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: addAll
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"addAll",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"addAll",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"addAll",%this)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"remove",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"remove",%this)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="set">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: set
	Quit ..%Execute2R(..Gateway,"set",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="containsAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsAll
	Quit ..%Execute1R(..Gateway,"containsAll",%this,p0)
]]></Implementation>
</Method>

<Method name="listIterator">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: listIterator
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"listIterator",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"listIterator",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="lastIndexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lastIndexOf
	Quit ..%Execute1R(..Gateway,"lastIndexOf",%this,p0)
]]></Implementation>
</Method>

<Method name="indexOf">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: indexOf
	Quit ..%Execute1R(..Gateway,"indexOf",%this,p0)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"add",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"add",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"add",%this)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="retainAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: retainAll
	Quit ..%Execute1R(..Gateway,"retainAll",%this,p0)
]]></Implementation>
</Method>

<Method name="subList">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subList
	Quit ..%Execute2R(..Gateway,"subList",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="removeAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: removeAll
	Quit ..%Execute1R(..Gateway,"removeAll",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.ListIterator">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.Iterator</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="nextIndex">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextIndex
	Quit ..%Execute0R(..Gateway,"nextIndex",%this)
]]></Implementation>
</Method>

<Method name="previousIndex">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: previousIndex
	Quit ..%Execute0R(..Gateway,"previousIndex",%this)
]]></Implementation>
</Method>

<Method name="previous">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: previous
	Quit ..%Execute0R(..Gateway,"previous",%this)
]]></Implementation>
</Method>

<Method name="remove">
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Do ..%Execute0(..Gateway,"remove",%this)
]]></Implementation>
</Method>

<Method name="hasPrevious">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasPrevious
	Quit ..%Execute0R(..Gateway,"hasPrevious",%this)
]]></Implementation>
</Method>

<Method name="set">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: set
	Do ..%Execute1(..Gateway,"set",%this,p0)
]]></Implementation>
</Method>

<Method name="hasNext">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasNext
	Quit ..%Execute0R(..Gateway,"hasNext",%this)
]]></Implementation>
</Method>

<Method name="next">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: next
	Quit ..%Execute0R(..Gateway,"next",%this)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Do ..%Execute1(..Gateway,"add",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Locale">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.lang.Cloneable,java.io.Serializable</Super>
<TimeChanged>62511,62359</TimeChanged>
<TimeCreated>62511,62359</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.Locale
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.Locale",18)
	Set x=$zobjexport($D(p1)+$D(p2)+$D(p3),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="getISO3Country">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getISO3Country
	Quit ..%Execute0R(..Gateway,"getISO3Country",%this)
]]></Implementation>
</Method>

<Method name="getISO3Language">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getISO3Language
	Quit ..%Execute0R(..Gateway,"getISO3Language",%this)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="getDisplayCountry">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDisplayCountry
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDisplayCountry",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDisplayCountry",%this)
]]></Implementation>
</Method>

<Method name="getISOLanguages">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getISOLanguages
	Quit ..%Execute0R(p0,"getISOLanguages","java.util.Locale")
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="getDisplayVariant">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDisplayVariant
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDisplayVariant",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDisplayVariant",%this)
]]></Implementation>
</Method>

<Method name="getISOCountries">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getISOCountries
	Quit ..%Execute0R(p0,"getISOCountries","java.util.Locale")
]]></Implementation>
</Method>

<Method name="setDefault">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDefault
	Do ..%Execute1(p0,"setDefault","java.util.Locale",p1)
]]></Implementation>
</Method>

<Method name="getLanguage">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getLanguage
	Quit ..%Execute0R(..Gateway,"getLanguage",%this)
]]></Implementation>
</Method>

<Method name="getDisplayName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDisplayName
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDisplayName",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDisplayName",%this)
]]></Implementation>
</Method>

<Method name="getDefault">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefault
	Quit ..%Execute0R(p0,"getDefault","java.util.Locale")
]]></Implementation>
</Method>

<Method name="getCountry">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getCountry
	Quit ..%Execute0R(..Gateway,"getCountry",%this)
]]></Implementation>
</Method>

<Method name="getDisplayLanguage">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDisplayLanguage
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDisplayLanguage",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDisplayLanguage",%this)
]]></Implementation>
</Method>

<Method name="getAvailableLocales">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAvailableLocales
	Quit ..%Execute0R(p0,"getAvailableLocales","java.util.Locale")
]]></Implementation>
</Method>

<Method name="toString">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toString
	Quit ..%Execute0R(..Gateway,"toString",%this)
]]></Implementation>
</Method>

<Method name="getVariant">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getVariant
	Quit ..%Execute0R(..Gateway,"getVariant",%this)
]]></Implementation>
</Method>

<Parameter name="ENGLISH">
<Type>STRING</Type>
<Default>en</Default>
</Parameter>

<Parameter name="FRENCH">
<Type>STRING</Type>
<Default>fr</Default>
</Parameter>

<Parameter name="GERMAN">
<Type>STRING</Type>
<Default>de</Default>
</Parameter>

<Parameter name="ITALIAN">
<Type>STRING</Type>
<Default>it</Default>
</Parameter>

<Parameter name="JAPANESE">
<Type>STRING</Type>
<Default>ja</Default>
</Parameter>

<Parameter name="KOREAN">
<Type>STRING</Type>
<Default>ko</Default>
</Parameter>

<Parameter name="CHINESE">
<Type>STRING</Type>
<Default>zh</Default>
</Parameter>

<Parameter name="SIMPLIFIEDuCHINESE">
<Type>STRING</Type>
<Default>zh_CN</Default>
</Parameter>

<Parameter name="TRADITIONALuCHINESE">
<Type>STRING</Type>
<Default>zh_TW</Default>
</Parameter>

<Parameter name="FRANCE">
<Type>STRING</Type>
<Default>fr_FR</Default>
</Parameter>

<Parameter name="GERMANY">
<Type>STRING</Type>
<Default>de_DE</Default>
</Parameter>

<Parameter name="ITALY">
<Type>STRING</Type>
<Default>it_IT</Default>
</Parameter>

<Parameter name="JAPAN">
<Type>STRING</Type>
<Default>ja_JP</Default>
</Parameter>

<Parameter name="KOREA">
<Type>STRING</Type>
<Default>ko_KR</Default>
</Parameter>

<Parameter name="CHINA">
<Type>STRING</Type>
<Default>zh_CN</Default>
</Parameter>

<Parameter name="PRC">
<Type>STRING</Type>
<Default>zh_CN</Default>
</Parameter>

<Parameter name="TAIWAN">
<Type>STRING</Type>
<Default>zh_TW</Default>
</Parameter>

<Parameter name="UK">
<Type>STRING</Type>
<Default>en_GB</Default>
</Parameter>

<Parameter name="US">
<Type>STRING</Type>
<Default>en_US</Default>
</Parameter>

<Parameter name="CANADA">
<Type>STRING</Type>
<Default>en_CA</Default>
</Parameter>

<Parameter name="CANADAuFRENCH">
<Type>STRING</Type>
<Default>fr_CA</Default>
</Parameter>

<Parameter name="ROOT">
<Type>STRING</Type>
<Default>null</Default>
</Parameter>
</Class>


<Class name="java.util.Map">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="put">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: put
	Quit ..%Execute2R(..Gateway,"put",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="get">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: get
	Quit ..%Execute1R(..Gateway,"get",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="entrySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: entrySet
	Quit ..%Execute0R(..Gateway,"entrySet",%this)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="keySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keySet
	Quit ..%Execute0R(..Gateway,"keySet",%this)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="containsKey">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsKey
	Quit ..%Execute1R(..Gateway,"containsKey",%this,p0)
]]></Implementation>
</Method>

<Method name="values">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(..Gateway,"values",%this)
]]></Implementation>
</Method>

<Method name="containsValue">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsValue
	Quit ..%Execute1R(..Gateway,"containsValue",%this,p0)
]]></Implementation>
</Method>

<Method name="putAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: putAll
	Do ..%Execute1(..Gateway,"putAll",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Properties">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.Hashtable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.Properties
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.Properties",18)
	Set x=$zobjexport($D(p1)+$D(p2),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="store">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: store
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"store",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"store",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"store",%this) Quit
]]></Implementation>
</Method>

<Method name="save">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: save
	Do ..%Execute2(..Gateway,"save",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="loadFromXML">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: loadFromXML
	Do ..%Execute1(..Gateway,"loadFromXML",%this,p0)
]]></Implementation>
</Method>

<Method name="stringPropertyNames">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: stringPropertyNames
	Quit ..%Execute0R(..Gateway,"stringPropertyNames",%this)
]]></Implementation>
</Method>

<Method name="getProperty">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getProperty
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getProperty",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getProperty",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getProperty",%this)
]]></Implementation>
</Method>

<Method name="storeToXML">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: storeToXML
	If $D(p2) Do ..%ExecuteOL3(..Gateway,"storeToXML",%this,p0,p1,p2) Quit
	If $D(p1) Do ..%ExecuteOL2(..Gateway,"storeToXML",%this,p0,p1) Quit
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"storeToXML",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"storeToXML",%this) Quit
]]></Implementation>
</Method>

<Method name="list">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: list
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"list",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"list",%this) Quit
]]></Implementation>
</Method>

<Method name="load">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: load
	If $D(p0) Do ..%ExecuteOL1(..Gateway,"load",%this,p0) Quit
	Do ..%ExecuteOL0(..Gateway,"load",%this) Quit
]]></Implementation>
</Method>

<Method name="setProperty">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: setProperty
	Quit ..%Execute2R(..Gateway,"setProperty",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="propertyNames">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: propertyNames
	Quit ..%Execute0R(..Gateway,"propertyNames",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.Random">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable</Super>
<TimeChanged>62321,63987</TimeChanged>
<TimeCreated>62321,63987</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.Random
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.Random",18)
	Set x=$zobjexport($D(p1),18)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="nextGaussian">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextGaussian
	Quit ..%Execute0R(..Gateway,"nextGaussian",%this)
]]></Implementation>
</Method>

<Method name="setSeed">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setSeed
	Do ..%Execute1(..Gateway,"setSeed",%this,p0)
]]></Implementation>
</Method>

<Method name="nextDouble">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextDouble
	Quit ..%Execute0R(..Gateway,"nextDouble",%this)
]]></Implementation>
</Method>

<Method name="nextLong">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextLong
	Quit ..%Execute0R(..Gateway,"nextLong",%this)
]]></Implementation>
</Method>

<Method name="nextBytes">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: nextBytes
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("nextBytes",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(..Gateway,"[B",p0)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(..Gateway,fun,id)
	Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
]]></Implementation>
</Method>

<Method name="nextBoolean">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextBoolean
	Quit ..%Execute0R(..Gateway,"nextBoolean",%this)
]]></Implementation>
</Method>

<Method name="nextFloat">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextFloat
	Quit ..%Execute0R(..Gateway,"nextFloat",%this)
]]></Implementation>
</Method>

<Method name="nextInt">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: nextInt
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"nextInt",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"nextInt",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.RandomAccess">
<ProcedureBlock>1</ProcedureBlock>
<Super>%Net.Remote.Proxy</Super>
<TimeChanged>62403,70087</TimeChanged>
<TimeCreated>62403,70087</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>
</Class>


<Class name="java.util.Set">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.Collection</Super>
<TimeChanged>62511,61670</TimeChanged>
<TimeCreated>62511,61670</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:46:23.814</Default>
</Parameter>

<Method name="iterator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: iterator
	Quit ..%Execute0R(..Gateway,"iterator",%this)
]]></Implementation>
</Method>

<Method name="toArray">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: toArray
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"toArray",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"toArray",%this)
]]></Implementation>
</Method>

<Method name="addAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: addAll
	Quit ..%Execute1R(..Gateway,"addAll",%this,p0)
]]></Implementation>
</Method>

<Method name="remove">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: remove
	Quit ..%Execute1R(..Gateway,"remove",%this,p0)
]]></Implementation>
</Method>

<Method name="equals">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: equals
	Quit ..%Execute1R(..Gateway,"equals",%this,p0)
]]></Implementation>
</Method>

<Method name="containsAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: containsAll
	Quit ..%Execute1R(..Gateway,"containsAll",%this,p0)
]]></Implementation>
</Method>

<Method name="hashCode">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hashCode
	Quit ..%Execute0R(..Gateway,"hashCode",%this)
]]></Implementation>
</Method>

<Method name="contains">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: contains
	Quit ..%Execute1R(..Gateway,"contains",%this,p0)
]]></Implementation>
</Method>

<Method name="add">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: add
	Quit ..%Execute1R(..Gateway,"add",%this,p0)
]]></Implementation>
</Method>

<Method name="size">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: size
	Quit ..%Execute0R(..Gateway,"size",%this)
]]></Implementation>
</Method>

<Method name="clear">
<Implementation><![CDATA[
	#; Corresponding Java method: clear
	Do ..%Execute0(..Gateway,"clear",%this)
]]></Implementation>
</Method>

<Method name="isEmpty">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isEmpty
	Quit ..%Execute0R(..Gateway,"isEmpty",%this)
]]></Implementation>
</Method>

<Method name="retainAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: retainAll
	Quit ..%Execute1R(..Gateway,"retainAll",%this,p0)
]]></Implementation>
</Method>

<Method name="removeAll">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: removeAll
	Quit ..%Execute1R(..Gateway,"removeAll",%this,p0)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.SortedMap">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.Map</Super>
<TimeChanged>62309,81401</TimeChanged>
<TimeCreated>62309,81401</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-04 15:48:28.294</Default>
</Parameter>

<Method name="tailMap">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: tailMap
	Quit ..%Execute1R(..Gateway,"tailMap",%this,p0)
]]></Implementation>
</Method>

<Method name="values">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: values
	Quit ..%Execute0R(..Gateway,"values",%this)
]]></Implementation>
</Method>

<Method name="firstKey">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: firstKey
	Quit ..%Execute0R(..Gateway,"firstKey",%this)
]]></Implementation>
</Method>

<Method name="entrySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: entrySet
	Quit ..%Execute0R(..Gateway,"entrySet",%this)
]]></Implementation>
</Method>

<Method name="headMap">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: headMap
	Quit ..%Execute1R(..Gateway,"headMap",%this,p0)
]]></Implementation>
</Method>

<Method name="keySet">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: keySet
	Quit ..%Execute0R(..Gateway,"keySet",%this)
]]></Implementation>
</Method>

<Method name="comparator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: comparator
	Quit ..%Execute0R(..Gateway,"comparator",%this)
]]></Implementation>
</Method>

<Method name="subMap">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subMap
	Quit ..%Execute2R(..Gateway,"subMap",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="lastKey">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: lastKey
	Quit ..%Execute0R(..Gateway,"lastKey",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.SortedSet">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.util.Set</Super>
<TimeChanged>62321,63985</TimeChanged>
<TimeCreated>62321,63985</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="last">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: last
	Quit ..%Execute0R(..Gateway,"last",%this)
]]></Implementation>
</Method>

<Method name="headSet">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: headSet
	Quit ..%Execute1R(..Gateway,"headSet",%this,p0)
]]></Implementation>
</Method>

<Method name="tailSet">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: tailSet
	Quit ..%Execute1R(..Gateway,"tailSet",%this,p0)
]]></Implementation>
</Method>

<Method name="comparator">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: comparator
	Quit ..%Execute0R(..Gateway,"comparator",%this)
]]></Implementation>
</Method>

<Method name="subSet">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: subSet
	Quit ..%Execute2R(..Gateway,"subSet",%this,p0,p1)
]]></Implementation>
</Method>

<Method name="first">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: first
	Quit ..%Execute0R(..Gateway,"first",%this)
]]></Implementation>
</Method>
</Class>


<Class name="java.util.TimeZone">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object,java.io.Serializable,java.lang.Cloneable</Super>
<TimeChanged>62321,63986</TimeChanged>
<TimeCreated>62321,63986</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-08-07 16:42:41.762</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: java.util.TimeZone
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("java.util.TimeZone",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getTimeZone">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getTimeZone
	Quit ..%Execute1R(p0,"getTimeZone","java.util.TimeZone",p1)
]]></Implementation>
</Method>

<Method name="clone">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: clone
	Quit ..%Execute0R(..Gateway,"clone",%this)
]]></Implementation>
</Method>

<Method name="getID">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getID
	Quit ..%Execute0R(..Gateway,"getID",%this)
]]></Implementation>
</Method>

<Method name="setID">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setID
	Do ..%Execute1(..Gateway,"setID",%this,p0)
]]></Implementation>
</Method>

<Method name="getAvailableIDs">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getAvailableIDs
	Quit:$D(p1) ..%ExecuteOLR1(p0,"getAvailableIDs","java.util.TimeZone",p1)
	Quit ..%ExecuteOLR0(p0,"getAvailableIDs","java.util.TimeZone")
]]></Implementation>
</Method>

<Method name="hasSameRules">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: hasSameRules
	Quit ..%Execute1R(..Gateway,"hasSameRules",%this,p0)
]]></Implementation>
</Method>

<Method name="useDaylightTime">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: useDaylightTime
	Quit ..%Execute0R(..Gateway,"useDaylightTime",%this)
]]></Implementation>
</Method>

<Method name="inDaylightTime">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: inDaylightTime
	Quit ..%Execute1R(..Gateway,"inDaylightTime",%this,p0)
]]></Implementation>
</Method>

<Method name="getDSTSavings">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDSTSavings
	Quit ..%Execute0R(..Gateway,"getDSTSavings",%this)
]]></Implementation>
</Method>

<Method name="setDefault">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setDefault
	Do ..%Execute1(p0,"setDefault","java.util.TimeZone",p1)
]]></Implementation>
</Method>

<Method name="getDisplayName">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDisplayName
	Quit:$D(p2) ..%ExecuteOLR3(..Gateway,"getDisplayName",%this,p0,p1,p2)
	Quit:$D(p1) ..%ExecuteOLR2(..Gateway,"getDisplayName",%this,p0,p1)
	Quit:$D(p0) ..%ExecuteOLR1(..Gateway,"getDisplayName",%this,p0)
	Quit ..%ExecuteOLR0(..Gateway,"getDisplayName",%this)
]]></Implementation>
</Method>

<Method name="getDefault">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getDefault
	Quit ..%Execute0R(p0,"getDefault","java.util.TimeZone")
]]></Implementation>
</Method>

<Method name="getOffset">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getOffset
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("getOffset",18)
	Set x=$zobjexport($D(p0)+$D(p1)+$D(p2)+$D(p3)+$D(p4)+$D(p5),18)
	Do:$D(p0) ..%OverloadWrite(..Gateway,p0)
	Do:$D(p1) ..%OverloadWrite(..Gateway,p1)
	Do:$D(p2) ..%OverloadWrite(..Gateway,p2)
	Do:$D(p3) ..%OverloadWrite(..Gateway,p3)
	Do:$D(p4) ..%OverloadWrite(..Gateway,p4)
	Do:$D(p5) ..%OverloadWrite(..Gateway,p5)
	Set x=..%GetObject(..Gateway)
	If $D(p0) Set:$zobjexport(17) p0=..%ReadArrayArgument(..Gateway)
	If $D(p1) Set:$zobjexport(17) p1=..%ReadArrayArgument(..Gateway)
	If $D(p2) Set:$zobjexport(17) p2=..%ReadArrayArgument(..Gateway)
	If $D(p3) Set:$zobjexport(17) p3=..%ReadArrayArgument(..Gateway)
	If $D(p4) Set:$zobjexport(17) p4=..%ReadArrayArgument(..Gateway)
	If $D(p5) Set:$zobjexport(17) p5=..%ReadArrayArgument(..Gateway)
	Do ..%PostInvoke(..Gateway)
	Quit x
]]></Implementation>
</Method>

<Method name="setRawOffset">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setRawOffset
	Do ..%Execute1(..Gateway,"setRawOffset",%this,p0)
]]></Implementation>
</Method>

<Method name="getRawOffset">
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getRawOffset
	Quit ..%Execute0R(..Gateway,"getRawOffset",%this)
]]></Implementation>
</Method>

<Parameter name="SHORT">
<Type>INTEGER</Type>
<Default>0</Default>
</Parameter>

<Parameter name="LONG">
<Type>INTEGER</Type>
<Default>1</Default>
</Parameter>
</Class>


</Export>
