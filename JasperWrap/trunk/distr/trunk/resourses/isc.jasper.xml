<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24" zv="Cache for Windows (x86-64) 2010.2.5 (Build 902U)" ts="2012-09-12 18:47:19">
<Class name="isc.WordToPDF.CreatePDFfromWordEMC">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62662,52362</TimeChanged>
<TimeCreated>62662,52362</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2012-07-24 13:16:23.345</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isc.WordToPDF.CreatePDFfromWordEMC
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isc.WordToPDF.CreatePDFfromWordEMC",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CreatePDFfromWord">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle,&p7:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: CreatePDFfromWord
	Do ..%PreInvoke(p0,"isc.WordToPDF.CreatePDFfromWordEMC")
	Set x=$zobjexport("CreatePDFfromWord",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport(p5,18)
	Set x=$zobjexport(p6,18)
	Set x=$zobjexport(p7,18)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p5=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p6=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p7=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>

<Method name="DocToPDF">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: DocToPDF
	Do ..%Execute2(p0,"DocToPDF","isc.WordToPDF.CreatePDFfromWordEMC",p1,p2)
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: main
	Do ..%PreInvoke(p0,"isc.WordToPDF.CreatePDFfromWordEMC")
	Set x=$zobjexport("main",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(p0,"[Ljava.lang.String;",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>
</Class>


<Class name="isc.jasper.Func">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62346,45164</TimeChanged>
<TimeCreated>62346,45164</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-09-12 10:48:37.08</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isc.jasper.Func
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isc.jasper.Func",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="pathForJasper">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: pathForJasper
	Quit ..%Execute1R(p0,"pathForJasper","isc.jasper.Func",p1)
]]></Implementation>
</Method>

<Method name="parsingStringOnPiece">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: parsingStringOnPiece
	Quit ..%Execute2R(p0,"parsingStringOnPiece","isc.jasper.Func",p1,p2)
]]></Implementation>
</Method>

<Method name="PieceDelimeter">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: PieceDelimeter
	Quit ..%Execute3R(p0,"PieceDelimeter","isc.jasper.Func",p1,p2,p3)
]]></Implementation>
</Method>

<Method name="Piece">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: Piece
	Quit ..%Execute2R(p0,"Piece","isc.jasper.Func",p1,p2)
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: main
	Do ..%PreInvoke(p0,"isc.jasper.Func")
	Set x=$zobjexport("main",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(p0,"[Ljava.lang.String;",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>
</Class>


<Class name="isc.jasper.JasperFacade">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62511,63180.587801</TimeChanged>
<TimeCreated>62300,39023</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-07-28 10:45:08.203</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isc.jasper.JasperFacade
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isc.jasper.JasperFacade",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="execute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: execute
	Quit ..%Execute4R(p0,"execute","isc.jasper.JasperFacade",p1,p2,p3,p4)
]]></Implementation>
</Method>

<Method name="executeAndSave">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle,&p5:%Library.ObjectHandle,&p6:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: executeAndSave
	s ^test(7,$i(^test(7)))=p1_"|"_p2_"|"_p3_"|"_p4_"|"_p5_"|"_p6
	Do ..%PreInvoke(p0,"isc.jasper.JasperFacade")
	Set x=$zobjexport("executeAndSave",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport(p5,18)
	Set x=$zobjexport(p6,18)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p5=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p6=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>

<Method name="save">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: executeAndSave
	Do ..%PreInvoke(p0,"isc.jasper.JasperFacade")
	Set x=$zobjexport("save",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>

<Method name="setParametersReport">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method:setParametersReport
	Do ..%PreInvoke(p0,"isc.jasper.JasperFacade")
	Set x=$zobjexport("setParametersReport",18)
	Set x=$zobjexport(-1,18)
	Set x=$zobjexport(p1,18)
	Set x=$zobjexport(p2,18)
	Set x=$zobjexport(p3,18)
	Set x=$zobjexport(p4,18)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p2=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p3=..%ReadArrayArgument(p0)
	Set:$zobjexport(17) p4=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: main
	Do ..%PreInvoke(p0,"isc.jasper.JasperFacade")
	Set x=$zobjexport("main",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(p0,"[Ljava.lang.String;",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>
</Class>


<Class name="isc.jasper.JasperFacadeDop">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62410,65183</TimeChanged>
<TimeCreated>62410,65183</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-11-15 17:06:01.315</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isc.jasper.JasperFacadeDop
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isc.jasper.JasperFacadeDop",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getParameters">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParameters
	Quit ..%Execute1R(p0,"getParameters","isc.jasper.JasperFacadeDop",p1)
]]></Implementation>
</Method>

<Method name="getParametersFromSpecialFile">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: getParametersFromSpecialFile
	Quit ..%Execute1R(p0,"getParametersFromSpecialFile","isc.jasper.JasperFacadeDop",p1)
]]></Implementation>
</Method>

<Method name="setParametersReport">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle,&p3:%Library.ObjectHandle,&p4:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: setParametersReport
	Do ..%Execute4(p0,"setParametersReport","isc.jasper.JasperFacadeDop",p1,p2,p3,p4)
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: main
	Do ..%PreInvoke(p0,"isc.jasper.JasperFacadeDop")
	Set x=$zobjexport("main",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(p0,"[Ljava.lang.String;",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>
</Class>


<Class name="isc.jodconverter.jodconverterFacade">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62657,46486</TimeChanged>
<TimeCreated>62657,46486</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2012-07-19 11:45:47.461</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isc.jodconverter.jodconverterFacade
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isc.jodconverter.jodconverterFacade",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="DocToPDF">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: DocToPDF
	Do ..%Execute2(p0,"DocToPDF","isc.jodconverter.jodconverterFacade",p1,p2)
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: main
	Do ..%PreInvoke(p0,"isc.jodconverter.jodconverterFacade")
	Set x=$zobjexport("main",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(p0,"[Ljava.lang.String;",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>
</Class>


<Class name="isc.pdfbox.PdfboxFacade">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62370,58450</TimeChanged>
<TimeCreated>62370,58450</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2011-09-29 15:10:18.0</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isc.pdfbox.PdfboxFacade
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isc.pdfbox.PdfboxFacade",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="listPrinters">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: listPrinters
	Quit ..%Execute0R(p0,"listPrinters","isc.pdfbox.PdfboxFacade")
]]></Implementation>
</Method>

<Method name="print">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: print
	Do ..%Execute2(p0,"print","isc.pdfbox.PdfboxFacade",p1,p2)
]]></Implementation>
</Method>

<Method name="printSilent">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle,&p2:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: printSilent
	Do ..%Execute2(p0,"printSilent","isc.pdfbox.PdfboxFacade",p1,p2)
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: main
	Do ..%PreInvoke(p0,"isc.pdfbox.PdfboxFacade")
	Set x=$zobjexport("main",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(p0,"[Ljava.lang.String;",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>
</Class>


<Class name="isc.utils.processUtils">
<ProcedureBlock>1</ProcedureBlock>
<Super>java.lang.Object</Super>
<TimeChanged>62690,52853</TimeChanged>
<TimeCreated>62690,52853</TimeCreated>

<Parameter name="IMPORTTIMESTAMP">
<Type>STRING</Type>
<Default>2012-08-21 13:41:13.921</Default>
</Parameter>

<Method name="%OnNew">
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isc.utils.processUtils
	Quit:'$D(p0) $$$OK
	Set ..Gateway=p0
	Do ..%PreInvoke(..Gateway,%this)
	Set x=$zobjexport("isc.utils.processUtils",18)
	Set x=$zobjexport(0,18)
	Set x=$zobjexport("Y3",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y3" ..%ProcessError(..Gateway,fun,id)
	Do:fun'="Y5" ..%PostInvoke(..Gateway)
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="isRunning">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<ReturnType>%Library.ObjectHandle</ReturnType>
<Implementation><![CDATA[
	#; Corresponding Java method: isRunning
	Quit ..%Execute1R(p0,"isRunning","isc.utils.processUtils",p1)
]]></Implementation>
</Method>

<Method name="msgBox">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: msgBox
	Do ..%Execute1(p0,"msgBox","isc.utils.processUtils",p1)
]]></Implementation>
</Method>

<Method name="executeProcess">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: executeProcess
	Do ..%Execute1(p0,"executeProcess","isc.utils.processUtils",p1)
]]></Implementation>
</Method>

<Method name="main">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&p0:%Library.ObjectHandle,&p1:%Library.ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	#; Corresponding Java method: main
	Do ..%PreInvoke(p0,"isc.utils.processUtils")
	Set x=$zobjexport("main",18)
	Set x=$zobjexport(-1,18)
	Do ..%WriteArray(p0,"[Ljava.lang.String;",p1)
	Set x=$zobjexport("Y1",8)
	Set id=$zobjexport(9),fun=$zobjexport(15)
	Do:fun'="Y1" ..%ProcessError(p0,fun,id)
	Set:$zobjexport(17) p1=..%ReadArrayArgument(p0)
	Do:fun'="Y5" ..%PostInvoke(p0)
]]></Implementation>
</Method>
</Class>
</Export>
