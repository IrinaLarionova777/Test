<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="REPORTSPB" type="INT" languagemode="0"><![CDATA[
REPORTSPB ;SPARM; Сервичная программа для создания отчетов ;@gol;
 ; 
 quit
 ;==================================================================================================================
 ; Возвращает имя cache-программы для формирования отчета 
ROUTINE(report) s report=$G(report)
 New %routine
 s report=$G(^TMP("REPORTSPB",$j)) q:report="" ""        
 s %routine=$p($g(^TTAB("REPORT-GENERIC",report)),"\",1)
 i $l(%routine) s LineRoutine="START^"_%routine i $l($t(@LineRoutine)) q %routine
 q ""   
 ;=====================================================================================================================
 ; Формирование VB-формы для отчета (задаем входные параметры для формирования отчета)
 ; par : pathExecuteTiDoc_$char(0)_pathExecuteToExcel
FORM(report,user,par)
 s report=$G(report),user=$G(user) 
 New %routine
 s report=$G(^TMP("REPORTSPB",$j)) q:report="" ""        
 s %routine=$p($g(^TTAB("REPORT-GENERIC",report)),"\",1)
 s mas=""
 i $l(%routine) s LineRoutine="FORM^"_%routine i $l($t(@LineRoutine)) x "s mas=$$FORM^"_%routine_"("""_user_""")" 
 ;s ^test(1)=$g(report)_"*"_$g(par)_"*"_$extract($p($g(^TTAB("REPORT-GENERIC",report)),"\",8),1,8)
 if $extract($p($g(^TTAB("REPORT-GENERIC",report)),"\",8),1,8)="ReportVB" {
	 if mas'="" {
		 do ChangeColon(mas,report)
		 // определить, нужны ли checkbox for excel and word
		 // Проверить, надо ли активизировать ли checkboxes for Word and Excel
		 // par : pathExecuteTiDoc_$char(0)_pathExecuteToExcel
		 if '$data(@mas@("form")) set @mas@("form")=":500:300:Формиров.:Выход" 
		 set strform=@mas@("form")
		 set ok=$$CheckFlagsWordExcel(report,$get(par),.strform) 
		 if ok set @mas@("form")=strform 
	 }
 }
 q mas
 ;===================================================================================================================== 
 // Раньше в строке описания параметра использовался разделитель ":", в новой dll (RepoerVB.dll) переходим на использование разделителя $char(0)
ChangeColon(mas,report)
 new par,rec
 if ($get(mas)="")||('$data(@mas)) quit
 set par=""
 for {
     set par=$order(@mas@(par),1,rec) if par="" quit
     if rec[$char(0) continue
     set @mas@(par)=$translate(rec,":",$char(0))
     /*
     if par="form" {
	     set $piece(@mas@(par),$char(0),7)=$select($$GetViwer2(report)="EXCEL":1,1:0)
     }*/	 
 }
 quit 
 ;=====================================================================================================================
 ; Формирование отчета согласно заданным критериям (передаются из формы VB)
START(report,user,par)
 s report=$G(report),user=$G(user),par=$G(par)
 //s ^test("start")=report_"*"_user_"*"_par_"*"_$j
 New %routine
 ; достаем код отчета, ктр. формируется в $$select^LVBCTCLR(RowID)
 s report=$G(^TMP("REPORTSPB",$j)) q:report="" ""        
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC",report)),"\",1)
 s err=""
 i $l(%routine) s LineRoutine="START^"_%routine i $l($t(@LineRoutine)) x "s err=$$START^"_%routine_"("""_user_""","""_par_""")" 
 ;k ^TEMP($J)
 ;kill ^TMP("REPORTSPB",$j)
 q err   
 ;=====================================================================================================================
 ; Формирование отчета согласно заданным критериям (передаются из формы VB)
STARTjob(report,user,par)
 s report=$G(report),user=$G(user),par=$G(par)
 //s ^test("start")=report_"*"_user_"*"_par_"*"_$j
 New %routine
 ; достаем код отчета, ктр. формируется в $$select^LVBCTCLR(RowID)
 s report=$G(^TMP("REPORTSPB",$j)) q:report="" ""        
 ; check client specific routine
 s %routine=$p($g(^TTAB("REPORT-GENERIC",report)),"\",1)
 job jobSTART(report,user,par,%routine,$j)
 q 1
 ;===================================================================================================================== 
 //^TEMP($j,"%processing")=$j process _$char(1)_flagEndProcess
jobSTART(report,user,par,routine,job)
 //s ^test("par2")=report_"*"_user_"*"_par_"*"_routine_"*"_job_"*"_$j
 set ^TEMP(job,"%processing")=$j_$char(2)_routine // need for terminate process if press X in screen progress bar
 kill ^TEMP($j) merge ^TEMP($j)=^TEMP(job) //так как там пользуются всеми данными по параметрам
 set err=""
 //if report="CLNRUS29"  i $l(routine) s LineRoutine="START^"_routine i $l($t(@LineRoutine)) x "s err=$$START^"_routine_"("""_user_""","""_par_""","""_report_""")" 
 //if report'="CLNRUS29"  i $l(routine) s LineRoutine="START^"_routine i $l($t(@LineRoutine)) x "s err=$$START^"_routine_"("""_user_""","""_par_""")" 
 i $l(routine) s LineRoutine="START^"_routine i $l($t(@LineRoutine)) x "s err=$$START^"_routine_"("""_user_""","""_par_""")" 
 set $piece(^TEMP(job,"%processing"),$char(1),2)=err
 //s ^test("reterr")=$g(err)
 kill ^TEMP($j)
 quit
 ;===================================================================================================================== 
 ; output: не пусто - закончился, "" - не закончился
TestProcessEnd()
 //s ^test("testjob",$h)=$j_"*"_$get(^TEMP($j,"%processing"))
 set outputOfProcess=$piece($get(^TEMP($j,"%processing")),$char(1),2)
 if outputOfProcess'="" set $piece(^TEMP($j,"%processing"),$char(1),1)=""  // Есть проблема (не могу в VB разделить события закрытия окна по таймеру и крестиком руками) - поэтому пытаюсь отрегулировать этим наличием номера работы в этом месте
 Quit $select(outputOfProcess'="":outputOfProcess,1:"")  
 ;=====================================================================================================================
 //  Удаление временных глобалов. Вызывается из VB при нажатии кнопки Отмена или Х
 // transfer name temp glob globTemp - unuselessly - suppose ^TEMP($j) так как формирование отчета в процессе job, а там пользуются значениями параметров )
KillTemp(globTemp)
 //s ^test("killtemp")=$g(globTemp) 
 kill ^TEMP($j,"%processing") 
 if $get(globTemp)'="" kill @globTemp
 else  kill ^TEMP($J)
 kill ^TMP("REPORTSPB",$j)
 quit ""
 ;=====================================================================================================================
 //  Удаление временных глобалов START^routine. 
KillTempJob()
 new info,job,routine
 set info=$piece($get(^TEMP($j,"%processing")),$char(1),1)
 set job=$piece(info,$char(2),1)
 set routine=$piece(info,$char(2),2)
 if $get(job)'="" kill ^TEMP(job) if $get(routine)'="" kill ^TEMP(routine,job)
 quit "" 
 ;=====================================================================================================================
 // Terminate process with $j=job (вызывается при закрытии окна Progress Bar крестиком)
KillProcess()
 new Process,jobChild,info
 // проверяем , не закончилось ди формирование отчета
 set info=$get(^TEMP($j,"%processing"))
 if $piece(info,$char(1),2)'="" quit ""
 set jobChild=$piece($piece(info,$char(1),1) ,$char(2),1)
 if +jobChild=0 quit ""
 s Process=##CLASS(%SYS.ProcessQuery).%OpenId(jobChild)
 if '$IsObject(Process) quit ""
 if Process.UserName '= "UnknownUser" quit "" 
 if Process.ClientExecutableName'="" quit ""  
 ;if Process.Routine'=$piece($piece(info,$char(1),1) ,$char(2),2) quit ""  // нельзя это проверять, так как программа меняется
 kill Process
 do $zu(4,jobChild) //s ^test("killprosess",$h)="$j="_$j_" kill process="_jobChild
 if $$KillTempJob()
 set $piece(^TEMP($j,"%processing"),$char(1),1)=""
 quit "" 
 ;=====================================================================================================================
 ; Old
KILL() k ^TEMP($J),^TMP("REPORTSPB",$j) 
 q ""
 ;=====================================================================================================================
 ; для работы с формой VB
getKey(key,glob)    
 s key=$G(key),glob=$G(glob) q:glob="" ""
 k PLIST
 s PLIST(1)=$O(@glob@(key))
 q ""
getItem(key,item,glob)
 s key=$G(key),glob=$G(glob),item=$G(item) q:glob=""  q:key="" ""
 k PLIST
 s PLIST(1)=$O(@glob@(key,item))
 q ""
getParam(key,item,glob)
 s key=$G(key),glob=$G(glob),item=$G(item) q:glob="" ""
 k PLIST
 s:item'="" PLIST(1)=$G(@glob@(key,item))
 s:item="" PLIST(1)=$G(@glob@(key))
 q ""
 ; получить значения параметра через PLIST ( для убыстрения процесса) 
 ; output: 0 - если больше нечего пердать, 100 - есть есть еще что передать
getValueOfParamByList(key,glob,continue)
 k PLIST
 s key=$G(key),glob=$G(glob),continue=$G(continue) q:glob="" ""
 set limit=15000
 
 if continue=""  do  ;
 .kill ^TMP($zn,$j,"params")
 .set item="" for  set item=$order(@glob@(key,item),1,record) quit:item=""  do  ;
 ..set ^TMP($zn,$j,"params",item)=record
 
 set PLIST(1)="",continue="",len=0
 set item="" for  set item=$order(^TMP($zn,$j,"params",item),1,record) quit:(item="")||(continue="Y")  do  ;
 .set rec=item_$char(1)_record_$char(28)
 .set len=len+$length(rec)
 .if len>limit set continue="Y" quit
 .set PLIST(1)=PLIST(1)_rec
 .kill ^TMP($zn,$j,"params",item)

 set PLIST=$order(PLIST(""),-1)
 q $s('$d(^TMP($zn,$j,"params")):0,1:100)
 ;=====================================================================================
 ; Разборка входных параметров, ктр. передаются из формы VB в Массив
PARAM(PAR,Mas)
 s PAR=$G(PAR),Mas=$G(Mas,"mas")
 New str,str1,str2,str3,j,j2,j3,row,column
 k @Mas 
 f j=1:1:$l(PAR,$c(2)) s str=$p(PAR,$c(2),j),str1=$P(str,$C(3),1),str2=$P(str,$C(3),2) d:str1'=""
 . i str1'="zzflex" s @Mas@(str1)=str2 quit
 . i str1="zzflex" do  quit
 .. f j2=1:1:$l(str2,$c(4)) s row=$p(str2,$c(4),j2) d:row'=""
 ... f j3=1:1:$l(row,$c(1)) s column=$p(row,$c(1),j3) d:column'=""
 .... s @Mas@(str1,j2,j3)=column   
 q
 ;=====================================================================================
 ; Запись результирующего файла на сервер с возвратом пути: \\server\...\user\FileName.htm
 ; output: 0/100 (0-ok,100-ошибка)^Description error^fileResult^execute
WriteFileLabTrakClient(Glob,FileXSL,Client,pPar) 
  New (Glob,FileXSL,Client,pPar)
  ;s ^test("par")=$g(Glob)_"*"_$g(FileXSL)_"*"_$g(Client)_"*"_$g(pPar)
  set returnValue=""   
  try {
    // проверяем, надо ли формировать open xml for openoffice
    set flagOpenXML=0,exec="EXPLORER"
    if $get(pPar)["iiiFormatReport" {
	   set strformatReport=$piece($piece(pPar,"iiiFormatReport",2),$char(2),1)
	   if strformatReport'="" {
		 set formatReport=$piece(strformatReport,$char(3),2)
		 set execReport=$piece(strformatReport,$char(3),3)
		 if (formatReport="excel")&&((execReport["swriter.exe")||(execReport["scalc.exe")) {
			 set flagOpenXML=1
		 }
		 set exec=$select(formatReport="excel":"EXCEL",formatReport="word":"WINWORD",1:"EXPLORER")
	   }
    }
   // S $ZT="Err^"_$zn
 S R=$C(1)
 S Glob=$G(Glob) 
 if Glob="" {
	 set returnValue="100^Имя глобала <пусто>"
	 quit
 }
 S Client=$G(Client) ;Q:Client="" "*Имя клиента(пользователя) <пусто>"  
 s Client="Clients"
 s NameFile=$$NameFile()
 S PathWrite=$$Path() 
 i $E(PathWrite)="*" {
	 set returnValue="100^"_PathWrite
	 quit
 }
 set resultExtension = ".htm"
 if $d(@Glob@("WriteFileLabTrakClientExtension")) = 1 {
    set resultExtension = @Glob@("WriteFileLabTrakClientExtension")
    kill @Glob@("WriteFileLabTrakClientExtension")
 }
 set ok=##class(%File).DirectoryExists(PathWrite_"\"_Client)
 if 'ok {
	 set ok=##class(%File).CreateDirectory(PathWrite_"\"_Client)
	 if 'ok {
	    set returnValue="100^Не удалось создать директорию "_PathWrite_"\"_Client
	    quit	 
	 }
 }

 set fileXML=PathWrite_"\"_Client_"\"_NameFile_".xml"
 S %Ret=$$XML(Glob,fileXML,NameFile_".xsl") 
 if %Ret'="OK" {
	 set returnValue="100^"_%Ret
	 quit
 }
 set ok=##class(%File).Exists(PathWrite_"\XSL\"_FileXSL)
 if 'ok {
	 set returnValue="100^"_"Не удалось создать XML файл"
	 quit
 }

 set tempFileXSL=PathWrite_"\"_Client_"\"_NameFile_".xsl"
 if flagOpenXML=1 {
	 set FileXSL=$piece(FileXSL,".",1,$length(FileXSL,".")-1)_"excel.xsl"
 }
 set fileXSL=PathWrite_"\"_Client_"\"_FileXSL
 S %Ret=$ZF(-1,"copy "_PathWrite_"\XSL\"_FileXSL_" "_tempFileXSL)
 if %Ret'=0 {
	 set returnValue="100^"_"Не удалост скопировать "_"copy "_PathWrite_"\XSL\"_FileXSL_" "_tempFileXSL //Файл "_nameFileXSL_" не скопирован из "_PathWrite_"\XSL\ в "_PathWrite_"\"_Client_"\"
	 quit
 }

  // проверяем, надо ли формировать open xml for openoffice
 if flagOpenXML=1 {
	set resultFile=PathWrite_"\"_Client_"\"_NameFile_".xml"
	;s ^test("ee0")=$g(fileXML)_"*"_$g(fileXSL)_"*"_$g(resultFile)
	set ok=##class(TCLEx.Report.FunctionsJava).ExportToExcel(fileXML, tempFileXSL, ##class(%File).GetDirectory(resultFile), resultFile, PathWrite_"\"_Client_"\"_NameFile_".log", 1)
	if 'ok {
		set returnValue="100^"_$system.Status.GetErrorText(ok)
		quit
	} else {
		set returnValue="0^^"_resultFile_"^"_exec
	}
 }
 else {
	 set ok=##class(%File).Exists(PathWrite_"\Script\test.wsf")
     if 'ok {
	     set returnValue="100^"_"Не существует файл "_PathWrite_"\Script\test.wsf"
	     quit
     }
     S %Ret=$$DelFile(PathWrite_"\"_Client_"\"_NameFile_".htm.err")
     if %Ret'=0 {
	     set returnValue="100^Ошибка: Запрет на удаление файла ошибок "_PathWrite_"\"_Client_"\"_NameFile_".htm.err"
	     quit
     }
     S %Ret=$ZF(-1,"wscript.exe /T:900 """_PathWrite_"\Script\test.wsf"" //job:subXML """_PathWrite_"\"_Client_"\"_NameFile_".xml"" """_PathWrite_"\"_Client_"\"_NameFile_".xsl"" """_PathWrite_"\"_Client_"\"_NameFile_resultExtension_"""")
     set exist=##class(%File).Exists(PathWrite_"\"_Client_"\"_NameFile_".htm.err")
     I %Ret=1 {
        if exist=1 set returnValue="100^Ошибка выполнения Script test.wsf "_%Ret_" См.файл "_PathWrite_"\"_Client_"\"_NameFile_".htm.err"
        else  set returnValue="100^Не удается создать файл! ЗАКРОЙТЕ Microsoft (Word,Excel) нажмите на OK и выполните задание заново "
        quit 
     }
     if %Ret'=0 {
	     set returnValue="100^Ошибка: Неизвестный код возврата выполнения test.wsf="_%Ret
	     quit
     }
     set returnValue="0^^"_PathWrite_"\"_Client_"\"_NameFile_resultExtension_"^"_exec //EXCEL"  ;"^WINWORD  ;^EXCEL"  ;^EXPLORER"
 }
 } catch(e) { 
     set returnValue="100^"_$ze
 }
 if +returnValue'=0 do ##class(TCLEx.Function.General).WriteError($piece(returnValue,"^",2),$zn)
 quit returnValue

 ;=====================================================================================
 ; Формирование узла ошибок для вывода в отчете
ErrTempFXML(OutObj,temp)
 N Var1,Var2,NN
 S OutObj=$G(OutObj,$NA(^TEMP($J,"XML","User",1,"Er")))
 S temp=$G(temp,$NA(^TEMP($J,"Er")))
 S @OutObj@(1,"Er")="Ошибки"
 S Var1="",NN=1 F  S Var1=$O(@temp@(Var1)) Q:Var1=""  D
 . S Var2=$g(@temp@(Var1))
 . S NN=NN+1,@OutObj@(NN,"Er")=$$TrXML(Var1)_" "_$$TrXML(Var2)
 Q
 ;=====================================================================================
 ; Формирование внешнего XML-файла
XML(Par1,Par2,Par3)
 New MasI,Path,MasO,qqo,qqc,qqw,Lev
 S MasI=$G(Par1) Q:MasI="" "Mas <пусто>"
 S Path=$G(Par2) Q:Path="" "Path <пусто>"
 S MasO="^TEMP($J,""OutXML"")"
 K @MasO
 D Prolog(MasO,$G(Par3))
 S qqo="",Lev=0 F  S qqo=$O(@MasI@(qqo)) Q:qqo=""  D
 . S qqc="" F  S qqc=$O(@MasI@(qqo,qqc)) Q:qqc=""  D
 .. D Mes("<O"_qqo_$S($G(@MasI@(qqo,qqc))="":"",1:" "_$G(@MasI@(qqo,qqc)))_">",MasO)
 .. S qqw="" F  S qqw=$O(@MasI@(qqo,qqc,qqw)) Q:qqw=""  D
 ... I $D(@MasI@(qqo,qqc,qqw))<10 D
 .... S Lev=Lev+1 
 .... D Mes($J(" ",Lev)_"<"_qqw_">"_$$TrXML($G(@MasI@(qqo,qqc,qqw)))_"</"_qqw_">",MasO)
 .... S Lev=Lev-1
 ... E  D FormXML($NA(@MasI@(qqo,qqc,qqw)),qqw,MasO)
 .. D Mes("</O"_qqo_">",MasO)
 D Epilog(MasO)
 S %Ret=$$WriteFile(MasO,Path)
 Q %Ret
FormXML(MasI,qqo,MasO)
 N qqc,qqw
 S Lev=Lev+1
 S qqc="" F  S qqc=$O(@MasI@(qqc)) Q:qqc=""  D
 . D Mes($J(" ",Lev)_"<O"_qqo_$S($G(@MasI@(qqc))="":"",1:" "_$G(@MasI@(qqc)))_">",MasO)
 . S qqw="" F  S qqw=$O(@MasI@(qqc,qqw)) Q:qqw=""  D
 .. I $D(@MasI@(qqc,qqw))<10 D
 ... S Lev=Lev+1 
 ... D Mes($J(" ",Lev)_"<"_qqw_">"_$$TrXML($G(@MasI@(qqc,qqw)))_"</"_qqw_">",MasO)
 ... S Lev=Lev-1
 .. E  D FormXML($NA(@MasI@(qqc,qqw)),qqw,MasO)
 . D Mes($J(" ",Lev)_"</O"_qqo_">",$NA(@MasO))
 S Lev=Lev-1
 Q
TrXML(Val)
 s Val=$G(Val) q:Val="" ""
 N bb,Str,n s Str=""
 f n=1:1:$L(Val) s bb=$e(Val,n) d  s Str=Str_bb  ; 
 .i bb="&" s bb="&amp;" q
 .i bb="<" s bb="&lt;" q
 .i bb=">" s bb="&gt;" q
 .i bb="'" s bb="&apos;" q
 .i bb="""" s bb="&quot;" q
 .i $a(bb)=13 q
 .i $a(bb)=10 q
 .i $a(bb)=9 q
 .i $a(bb)=0 s bb="&" q
 .i $a(bb)<32 s bb="&#"_$a(bb)_";" q
 q Str   
 ;       
Prolog(Par1,Par2) 
 New Mas,FileXSL
 S Mas=$G(Par1)  Q:Mas=""
 s FileXSL=$G(Par2) s:FileXSL="" FileXSL="Print.xsl"
 ;D Mes("<?xml version='1.0' encoding='windows-1251'?>",Mas)  ;@@@ Для 1251 под cache5
 D Mes("<?xml version='1.0' encoding='UTF-8'?>",Mas) 		  ;@@@ Для юникода под cache2008
 D Mes("<?xml-stylesheet type='text/xsl' href='"_FileXSL_"'?>",Mas)
 D Mes("<baseO>",Mas)
 Q
Epilog(Par1)
 N Mas
 S Mas=$G(Par1)  Q:Mas=""
 D Mes("</baseO>",Mas)
 Q
Mes(Str,Par1) 
 S Str=$G(Str),Par1=$G(Par1)
 S @Par1@($O(@Par1@(""),-1)+1)=Str
 Q
WriteFile(Mas,File)         
 S File=$G(File) Q:File="" "$$WriteFile - Значение File <пусто>"
 O File:"WN":5
 Q:'$T "Не открыть файл "_File
 U File
 New i,N
 S N=$O(@Mas@(""),-1)
 S i="" F  S i=$O(@Mas@(i)) Q:i=""  D
 . W @Mas@(i)
 . W:i'=N !
 C File
 Q "OK"
 ;=====================================================================================
 ;обработчик ошибок
Err new ind,DateTime 
 S DateTime=$zd(+$H,4)_" "_$zt($P($H,",",2),2)
 s ind=$o(^ERRORS($zn,$j,""),-1)+1 s ^ERRORS($zn,$j,ind)=DateTime_" => "_$ZE
 Q:$Q $G(^ERRORS($zn,$j,ind))
 Q
ERROR D BACK^%ETN
 q 
 ;-------------------------------------------------------             
Path() ;CF_SystemDefaults - Путь для отчетов (Path to Reports Local) CFSM_PathToReportsLocal
 N Dir,j
 S Dir=$P(^CF("SM",1),"^",26)    ;CFSM_PathToReportsLocal - Text 30 No No No 30 "^"26    => \\medserver\L64\Reports
 Q:Dir="" "*Не установлен путь для Локальных отчетов в Параметрах системы"
 i $E(Dir,$l(Dir))="\" s Dir=$E(Dir,1,$l(Dir)-1)
 q Dir   
 ;-------------------------------------------------------             
ExistDir(Dir)  ; Существует ли директорий
 S $ZT="Err^H999999"
 S Dir=$G(Dir)
 set sc=##class(%File).DirectoryExists(Dir)
 ;Q $S($ZUTIL(140,7,Dir)'=16:"Не существует ресурса "_Dir,1:"")
 quit $select(sc'=1:"Не существует ресурса "_Dir,1:"")
 ;
ExistFile(File) ; Существет ли файл
 S $ZT="Err^H999999"
 S File=$G(File)
 set sc=##class(%File).Exists(File)
 ;Q $S($ZUTIL(140,4,File)'=0:"Не существует файла "_File,1:"")
 quit $select(sc'=1:"Не существует файла "_File,1:"")
 ;
CreateDir(Dir)   ; Создать ресурс
 S $ZT="Err^H999999"
 S Dir=$G(Dir)
 N %Ret
 S %Ret=$ZUTIL(140,9,Dir)
 Q $S(%Ret=-5:"Ресурс "_ $P(Dir,"\",1,$L(Dir,"\")-1)_" открыт только на чтение",%Ret'=0:"Ошибка "_%Ret_" при создании ресурса "_Dir,1:"")
 ;
DelFile(File) ; Удалить файл
 S $ZT="Err^H999999"
 S File=$G(File) Q:File="" 0
 Q:$$ExistFile(File)'="" 0
 S %Ret=$ZUTIL(140,5,File)
 Q %Ret
 ;-------------------------------------------------------             
Testnms(nms) ; возвращает
             ; 1, если все ОК
             ; 0, если область не существует
             ;-1<$zerrorcode>, если сущ., но не доступна
 n x
 s $zt="Errtestnms^"_$zn
 if $ZU(90,10,nms) s x=$D(^|nms|AnyGlobal) q 1
 q 0 ; область не существует
Errtestnms q -1_$P($ze,">")_">" ; область cущ-ет, но не доступна (как правило, ошибка <PROTECT> или <DATABASE>)
 ;-------------------------------------------------------             
DelFileTemp() ; Удаляет файлы с расширением htm
 N PathWrite,%Ret,Client
 s Client="Clients"
 S PathWrite=$$Path() i $E(PathWrite)="*" q PathWrite         
 S %Ret=$$ExistDir(PathWrite_"\"_Client) Q:%Ret'="" %Ret
 S %Ret=$$DelFiles(PathWrite_"\"_Client)
 Q "" 
DelFiles(Dir) ; Удалить файлы из ресурса
 S $ZT="Err^H999999"
 S Dir=$G(Dir)
 N %Ret,i
 For i=1:1 D  Q:%Ret=""!(i>10000)
 . S %Ret=$ZSEARCH(Dir_"\*.htm") Q:%Ret=""  S %RetDel=$ZUTIL(140,5,%Ret)
 For i=1:1 D  Q:%Ret=""!(i>10000)
 . S %Ret=$ZSEARCH(Dir_"\*.xml") Q:%Ret=""  S %RetDel=$ZUTIL(140,5,%Ret)
 For i=1:1 D  Q:%Ret=""!(i>10000)
 . S %Ret=$ZSEARCH(Dir_"\*.xsl") Q:%Ret=""  S %RetDel=$ZUTIL(140,5,%Ret)
 Q %Ret
 ;     
DelSym(Str)  ; Убрать все спец.символы
 Q $TR(Str,"./,?\+*#@%^&<>~:|![]{}-"," ")
 
 // Получить желаемую программу для просмотра результата отчета
 // нельзя пользоваться, 
GetViwer(RoutineName)
 //PRTCLNRUS13, PRTCLNRUS13a - запрос в мордочке
 set RoutineName=$get(RoutineName) 
 set returnValue=""
 if RoutineName="PRTCLNRUS02" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS05" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS05a" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS05birlab" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS07" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS09" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS12" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS13" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS13birlab" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS14" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS15" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS19" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS19a" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS22" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS26" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS28" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS29" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS30" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS33" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS34" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS35" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS38" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS39" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS40" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS41" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS44" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS46" set returnValue="WINWORD"
 if RoutineName="PRTCLNRUS57" set returnValue="EXCEL"
 if RoutineName="PRTCLNRUS59" set returnValue="EXCEL"
 if returnValue="" {
	 set returnValue="EXPLORER"  
 }
 quit returnValue
 
 // Получить желаемую программу для просмотра результата отчета
 // нельзя пользоваться, 
GetViwer2(ReportName)
 /*
 set returnValue="" 
 if $get(ReportId)="" {
	 set ReportId=$get(^TMP("REPORTSPB",$j))
 }
 if ReportId'="" {
	 set returnValue=$piece($get(^TTAB("REPORT-GENERIC",ReportId)),"\",3)
 }
 */
 //PRTCLNRUS13, PRTCLNRUS13a - запрос в мордочке
 set ReportName=$get(ReportName) 
 set returnValue=""
 if ReportName="CLNRUS02" set returnValue="WINWORD"
 if ReportName="CLNRUS05" set returnValue="EXCEL"
 if ReportName="CLNRUS05a" set returnValue="WINWORD"
 if ReportName="CLNRUS07" set returnValue="EXCEL"
 if ReportName="CLNRUS09" set returnValue="EXCEL"
 if ReportName="CLNRUS12" set returnValue="WINWORD"
 if ReportName="CLNRUS14" set returnValue="EXCEL" //"WINWORD"
 if ReportName="CLNRUS15" set returnValue="WINWORD"
 if ReportName="CLNRUS19" set returnValue="WINWORD"
 if ReportName="CLNRUS22" set returnValue="WINWORD"
 if ReportName="CLNRUS26" set returnValue="WINWORD"
 if ReportName="CLNRUS28" set returnValue="WINWORD"
 if ReportName="CLNRUS29" set returnValue="WINWORD"
 if ReportName="CLNRUS30" set returnValue="EXCEL"
 if ReportName="CLNRUS33" set returnValue="WINWORD"
 if ReportName="CLNRUS34" set returnValue="EXCEL"
 if ReportName="CLNRUS35" set returnValue="WINWORD"
 if ReportName="CLNRUS38" set returnValue="EXCEL"
 if ReportName="CLNRUS39" set returnValue="EXCEL"
 if ReportName="CLNRUS40" set returnValue="WINWORD"
 if ReportName="CLNRUS41" set returnValue="WINWORD"
 if ReportName="CLNRUS44" set returnValue="WINWORD"
 if ReportName="CLNRUS46" set returnValue="WINWORD"
 if ReportName="CLNRUS57" set returnValue="EXCEL"
 if ReportName="CLNRUS59" set returnValue="EXCEL"
 if returnValue="" {
	 set returnValue="EXPLORER"  
 }
 quit returnValue 
 
NameFile(pDop)
 quit $ZU(67,12,$j)_"_"_$zd(+$h,3)_"_"_$TR($zt($P($h,",",2),1),":","-")_"_N"_$j_$get(pDop) 

PathClient(pUser)
 set resultValue=""
 try {
	 set resultValue=$$Path()
     if $E(resultValue)="*" {
	     quit
     }
     set pUser="Clients"
     if $get(pUser)'="" {
	     set resultValue=resultValue_"\"_pUser
     }
     if '##class(%File).Exists(resultValue) {
	    set ok=##class(%File).CreateDirectoryChain(resultValue)
	    if 'ok {
		    set resultValue="* Ну удалост создать диркторию "_resultValue
	    }
     }
 } catch(e) {
	 set resultValue="*"_$ze
 } 
 quit resultValue
 
 // Получить файл с расширением doc для определения программы-обработчика файлов с расширением doc на клиенте
GetFileTestWord() 
  set path=$piece($get(^CF("SM",1)),"^",2)
  if path="" quit ""
  set file=path_ "\testdoc.doc"
  if '##class(%File).Exists(file) {
	  Set stream=##class(%FileCharacterStream).%New()
	  set stream.Filename=file
	  do stream.WriteLine("aaa")
	  set ok=stream.SaveStream()
	  if 'ok quit ""
  }
  quit file
  
 // Получить файл с расширением xls для определения программы-обработчика файлов с расширением xls на клиенте
GetFileTestExcel() 
  set path=$piece($get(^CF("SM",1)),"^",2)
  if path="" quit ""
  set file=path_ "\testexcel.xls"
  if '##class(%File).Exists(file) {
	  Set stream=##class(%FileCharacterStream).%New()
	  set stream.Filename=file
	  do stream.WriteLine("aaa")
	  set ok=stream.SaveStream()
	  if 'ok quit ""
  } 
  quit file  
  
  // Корректировка строки для @par@("form") по поводу показывать ли checkbox Word Excel
CheckFlagsWordExcel(pReport,pPar,pStrForm) public
 ;s ^test(111)=$g(pReport)_"*"_$g(pPar)
 set ok=1
 try {
	 set flagWord=0,flagExcel=0
	 set execWord=$piece(pPar,$char(0),1)
	 set execExcel=$piece(pPar,$char(0),2)
	 set pathToXSL=$$PathXSL()
	 if execWord'="" {
		 // если для обработки doc прикреплен OpenOffice, то надо проверить наличие файла xsl for Word 
		 if (execWord["scalc.exe")||(execWord["swriter.exe") {
			 if ##class(%File).Exists(pathToXSL_"\"_pReport_"word.xsl") {
				 set flagWord=1
			 }
		 } else {
			 set flagWord=1
		 } 
	 }
	 if execExcel'="" {
		 // если для обработки doc прикреплен OpenOffice, то надо проверить наличие файла xsl for Word 
		 if (execExcel["scalc.exe")||(execExcel["swriter.exe") {
			 if ##class(%File).Exists(pathToXSL_"\"_pReport_"excel.xsl") {
				 set flagExcel=1   
			 }
		 } else {
			 set flagExcel=1
		 } 
	 }
	 set defaultFormat=$$GetViwer2(pReport)
	 set $piece(pStrForm,$char(0),6)=1 // флаг вообще показывать ли вообще checkbox Word Excel (активные или неактивные)
	 set $piece(pStrForm,$char(0),7)=$select((flagWord=1)&&(defaultFormat'="WINWORD"):1,(flagWord=1)&&(defaultFormat="WINWORD"):2,1:"") // флаг, активизировать ли флаг Word
	 set $piece(pStrForm,$char(0),8)=$select((flagExcel=1)&&(defaultFormat'="EXCEL"):1,(flagExcel=1)&&(defaultFormat="EXCEL"):2,1:"") // флаг, активизировать ли флаг Excel
	 set $piece(pStrForm,$char(0),9)=$select(flagWord=1:execWord,1:"") // executiv for files doc
	 set $piece(pStrForm,$char(0),10)=$select(flagExcel=1:execExcel,1:"") // executiv for files xls
	 
 } catch(e) { set ok=e.AsStatus() }
 quit ok 
PathXSL() 
 quit $$Path()_"\XSL" 

]]></Routine>
</Export>
