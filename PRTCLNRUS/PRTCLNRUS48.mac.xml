<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTCLNRUS48" type="MAC" languagemode="0"><![CDATA[
PRTCLNRUS48 ; Отчет по контейнерам; 26.03.2011
#;==================================================================================================================
#; Формирование VB-формы для отчета (задаем входные параметры для формирования отчета)
#; Возвращает:   имя массива
#;
FORM(USER) [PLIST, PAR3] PUBLIC {
	set USER=$g(USER), Par=$na(^TEMP($J)), date1 = $zd($h, 4), $p(date1, "/") = "01" kill @Par
	set @Par@("PAR1a")="Label   : 100 : 200 : 1000 : 300 : Дата от:"
	set ^("PAR1")="DateText: 1300: 200 : 1100 : 300 :"_date1_" :True"
	set ^("PAR2a")="Label   : 100: 600 : 1000 : 300 : Дата до:"
	set ^("PAR2")="DateText: 1300: 600 : 1100 : 300 : t:True"
#; список плательщиков
	s @Par@("PAR3a")="Label   : 100 : 900 : 1000 : 300 : Плательщик:"
	;k PLIST s err=$$getall^LVBCTPC("","","","Y","","","","")
	;s cnt=1,ind="" f  s ind=$O(PLIST(ind)) q:ind=""  d
	;. s code=$P(PLIST(ind),$C(2),1) s:code'="" @Par@("PAR3",code)=code_"   "_$P(PLIST(ind),$C(2),2) s cnt=$i(cnt)
	kill @Par@("PAR3") set sc=##class(BiRLab.Function.Report).GetPayersAll($name(@Par@("PAR3")))  //do getAllPaiments^PRTCLNRUS40($name(@Par@("PAR3")))
	s @Par@("PAR3","0")="* Все плательщики"
	s @Par@("PAR3")="ListBox : 100 : 1200 : 5900 : 3000 : :True: 0 : Checkbox  "
	; настройка формы
	s ^("form")="Отчет по контейнерам ("_USER_"):500:300:Формиров.:Выход"
	quit Par
}
CREATE(REPID, PAR, USER, %msql) PUBLIC {
	kill ^TMP($zn,$j)
	quit
}
#;==================================================================================================================
#; Формирование отчета согласно заданным критериям (передаются из формы VB)
#; Формат PAR = поле $С(3) значение { $C(1) значение $C(1) значение } $C(2) поле $С(3) значение { $C(2) поле ... }
#; Возвращает:   0^сообщение^имя файла^программ для открытия файла ( EXPLORER, EXCEL, WINWORD )
#;             100^сообщение об ошибке
#;
START(USER,PAR) [PAR,PAR1,PAR2,PAR3,MSGERROR] PUBLIC {
	set USER=$g(USER),PAR=$g(PAR)
	i $G(PAR)="" q "100^нет входных параметров!"    ;при выходе из DLL была нажата кнопка Отмена
	set MSGERROR="", Mas=$na(^TEMP($zn,$j)) k @Mas, ^TEMP($J)
	d INIT(PAR)
	set MSGERROR=$g(MSGERROR)
	if $g(MSGERROR)="" {
		do BODY($g(PAR1),$g(PAR2),$g(PAR3),Mas), XML(USER, Mas)
		kill @Mas, ^TEMP($j)
	}
	q $G(MSGERROR)  ;код^сообщение (об ошибке) для возврата в DLL^имя файла^имя проги для открытия файла
}
#;------------------------------------------------
#; инициализация входных параметров
INIT(PAR) [MSGERROR,PAR,mas,PAR1,PAR2,PAR3,PAYMENT] PUBLIC {
	do PARAM^REPORTSPB(PAR,"mas")
	set j="" f  s j=$O(mas(j)) q:j=""  s @j=$g(mas(j))
	; период дат
	if $G(PAR1)="" s MSGERROR="100^Не определено значение <Дата от>" q
	if $G(PAR2)="" s MSGERROR="100^Не определено значение <Дата до>" q
	if PAR1>PAR2 s MSGERROR="100^Значение <Дата от> больше значения <Дата до>" q
#; плательщик
	if $G(PAR3)="" set MSGERROR="100^Не определено значение <Плательщик>" q
	k PAYMENT s PAYMENT=""
    set flagUseBirlab=##class(BiRLab.Function.Report).GetFlagUseBirlab()
    for i=1:1:$L(PAR3,$C(1)) {
		 s pay=$P(PAR3,$C(1),i) if pay="" continue 
         i pay="0" s PAYMENT("*")="" quit     ;* Все
         if flagUseBirlab=0 s PAYMENT(pay)=$P($G(^TTAB("BI",pay)),"\",1)
         else  s PAYMENT(pay)=##class(BiRLab.Function.Report).GetPayerInfo(pay,"nameshort",1)
         s PAYMENT=PAYMENT_$S(PAYMENT="":"",1:",")_pay_"-"_$G(PAYMENT(pay)) ;собираем значения в одну строку (для шапки)
	 }
     i $D(PAYMENT("*")) s PAYMENT="*",pay="" f  s pay=$O(^TTAB("BI",pay)) q:pay=""  s PAYMENT(pay)=""
     i '$D(PAYMENT)="" s MSGERROR="100^Не определено значение <Плательщик>" q

	if PAR1>PAR2 s MSGERROR="100^Значение <Дата от> больше значения <Дата до>"
	quit
}

 ;------------------------------------------------
 ; обработка данных...
BODY(PAR1,PAR2,PAR3, Mas)  [PAR, MSGERROR, PAYMENT] PUBLIC  
 {
 Kill ^||Report.Amount ; ***
 ; поиск по дате назначения (дата передачи набора тестов)
 ; ^TDAY(4,{EPVIS DateOfEntry},{EPVIS StatusPatient},{EPVIS VisitNumber}) 
 set date=PAR1-1 
 for {
	 set date=$order(^TDAY(4,date)) quit:date=""  quit:date>PAR2  
	 s dateOUT=$$extdate2^SSUTIL4(date)  ;dd/mm/yy
     ; --- наборы тестов --- для лаб.эпизода (ограничение по отделам)
	 set epis="" 
	 for {
		 set epis=$order(^TDAY(4,date,0,epis)) quit:epis=""  if '$Data(^TEPI(epis)) continue
		 set rec=$get(^TEPI(epis))
         ; плательщик (на уровне лаб.номера) Плательщика берем только на уровне эпизода!
         set payment="",paymentname=""
		 // при использовании BiRLab плательщик определяется по коду ЛПУ (и только на уровне EPVisitNumber) (поле EPVIS_PaymentCode_DR пусто)
		 set hospitalcode=$piece(rec,"\",20)
		 set payepisnew=##class(BiRLab.CT.PayerHospital).GetPayerByHospital(hospitalcode)
		 // для эпизодов, которые были до внедрения BiRLab
         set payepis=$piece(rec,"\",7)  //EPVIS_PaymentCode_DR 
             
         set flagBiRLab=0 
         if (payepis="")&&(payepisnew'="") 
         {
	            set flagBiRLab=1
	            set payment=payepisnew
         } 
         else  
         {
	           set payment=$select(payepis="":"?",1:payepis)
         }
	         
	     if PAYMENT'="*",'$D(PAYMENT(payment)) continue
	     
	     set cito=$piece(rec,"\",15) 
         kill vsp
         s ts=""
         for {
	         s ts=$o(^TEPI(epis,1,ts)) quit:ts="" 
	         //s dept=$e(ts,1) 
	         s tscnt="" 
	         for {
		         s tscnt=$o(^TEPI(epis,1,ts,tscnt)) quit:tscnt=""  
		         Set rects=$Get(^TEPI(epis,1,ts,tscnt))
                 //Set superset=$p(rects,"\",29)
                 //If superset'="" Set dept=$Extract(superset,1) 
                 ;If (dept="")||('$Data(DEP(dept))) continue
                 ; считаем только "РАЗРЕШЕННЫЕ" наборы тестов, а не "НАЗНАЧЕННЫЕ" !!!
                 //s status=$p(rects,"\",31) if status'="A" continue
                 /* 
                 if flagBiRLab=0 {
	                     ; плательщик (на уровне набора тестов)
                         set payment=$p(rects,"\",23) 		;VISTS_PaymentCode_DR
                         set:payment="" payment=payepis
                         ; проверяем ограничение по плательщику
                         if PAYMENT'="*",'$D(PAYMENT(payment)) continue          
                  }
                 */
                 ;
                 /*
                 Set billingitem=ts,authdate=$Piece(rects,"\",4)
                 // этот блок оставляем только для расскоментирования сртроки с проверкой дат
                 If superset'="" {
	                 Set billingitem=superset
	                 //If $Data(^||Report.Amount(billingitem,epis,payment)) continue
                     If '##class(TCLEx.Function.SuperSet).IsComplete(epis,superset) continue
                     Set authdate=##class(TCLEx.Function.SuperSet).AuthorisationDate(epis,superset)
                     ;if authdate<PAR1||(authdate>PAR2) continue  //  надо расскомментировать, но одновременно с PRTCLNRUS13b 
                     //Set ^||Report.Amount(billingitem,epis,payment)=""
                 }
                 */
                 ;Set amount=$$GetBillingItemAmount^PRTCLNRUS05a(payment,epis,authdate,billingitem,cito)
                 /*
                 set specimenData=$piece(rects,"\",47) //VISTS_SpecimenNo
                 //set ^test(46,epis,ts,tscnt)=specimenData_"|||"_$piece(rects,"\",46) 
                 if specimenData="" {
	                 if '$data(specimens(epis)) set specimens(epis)=""
                 }
                 else { 
                     for ii=1:1:$length(specimenData,";") {
	                    set specimen=$piece($piece(specimenData,";",ii),":",1)
	                    if specimen'="" if '$data(specimens(specimen)) set specimens(specimen)=""
                     }
                 }*/
                 
                 /*
                 set tc="" 
                 for  {
	                 set tc=$order(^TEPI(epis,1,ts,tscnt,"DATA",tc)) if tc="" quit
	                 set typeContainer="" // тип контейнера
	                 for {
		                 set typeContainer=$order(^TTAB("TC",tc,"SC",typeContainer)) if typeContainer="" quit
		                 set typeSpecimen="" // тип образца
		                 for {
			                 set typeSpecimen=$order(^TTAB("TC",tc,"SC",typeContainer,typeSpecimen)) if typeSpecimen="" quit
			                 set vsp(typeContainer_$c(1)_typeSpecimen)=""
		                 }
	                 }
                 }
                 */
                 set specimenData=$piece(rects,"\",47) //VISTS_SpecimenNo
                 //set ^test(46,epis,ts,tscnt)=specimenData_"|||"_$piece(rects,"\",46) 
                 if specimenData="" {
	                 if '$data(vsp(epis)) {
		                 set typeContayner=$order(^TTAB("TS",ts,"SC",""))
		                 if typeContayner'="" set vsp(epis)=typeContayner
	                 }
                 }
                 else { 
                     for ii=1:1:$length(specimenData,";") {
	                    set typeContayner=$piece($piece(specimenData,";",ii),":",2)
	                    if typeContayner="" set typeContayner=$order(^TTAB("TS",ts,"SC",""))
	                    if typeContayner'="" if '$data(vsp(typeContayner)) set vsp(typeContayner)=typeContayner
                     }
                 }
                  
	         }
         }
         if '$data(vsp) set vsp(epis)="Не указан контейнер"
         set key=""
         for {
	                 set key=$order(vsp(key)) if key="" quit
	                 set typeContainer=vsp(key)
	                 if '$data(@Mas@("REPORT", payment)) {
		                            set paymentname=##class(BiRLab.Function.Report).GetPayerInfo(payment,"nameshort",flagBiRLab)
		                            set @Mas@("REPORT", payment)=paymentname
	                 }
			         set contdesc=$select('$data(^TTAB("CON",typeContainer)):"Не указан контейнер",1:$piece($get(^TTAB("CON",typeContainer)),"\",1)_$c(1)_typeContainer)
			         set @Mas@("REPORT", payment, contdesc)=$get(@Mas@("REPORT", payment, contdesc))+1
         }
    }
 }
 //kill ^test(222) m ^test(222)=@Mas@("REPORT")
 quit
 }
#;------------------------------------------------
#; обработка данных...
BODYold(PAR1,PAR2,PAR3, Mas) [MSGERROR, SQLCODE, payment, paydesc, contdesc, visnumbercount] PUBLIC {
	&sql(DECLARE C1 CURSOR FOR
	SELECT CTPC_Code, CTPC_Desc, CTCON_Code, CTCON_Description, COUNT(*)
	INTO :payment,:paydesc,:contcode,:contdesc,:visnumbercount FROM (
	SELECT CT_PaymentCode.CTPC_Code, CT_PaymentCode.CTPC_Desc, CT_Container.CTCON_Description, CT_Container.CTCON_Code
	FROM ((((EP_VisitNumber INNER JOIN EP_VisitTestSet ON EP_VisitNumber.EPVIS_RowId = EP_VisitTestSet.VISTS_ParRef) 
	INNER JOIN CT_PaymentCode ON EP_VisitNumber.EPVIS_PaymentCode_DR = CT_PaymentCode.CTPC_RowId) 
	INNER JOIN EP_VisitTestSetData ON EP_VisitTestSet.VISTS_RowId = EP_VisitTestSetData.VISTD_ParRef) 
	INNER JOIN CT_TestCodeContainers ON EP_VisitTestSetData.VISTD_TestCode_DR = CT_TestCodeContainers.CTTCB_ParRef) 
	INNER JOIN CT_Container ON CT_TestCodeContainers.CTTCB_Container_DR = CT_Container.CTCON_RowID
	WHERE EP_VisitNumber.EPVIS_DateOfEntry BETWEEN :PAR1 AND :PAR2
	GROUP BY CT_PaymentCode.CTPC_Code, CT_PaymentCode.CTPC_Desc, EP_VisitNumber.EPVIS_VisitNumber, CT_Container.CTCON_Code
	)
	GROUP BY CTPC_Code, CTCON_Code
	ORDER BY CTPC_Desc, CTCON_Description	
	)
	&sql(OPEN C1)
	&sql(FETCH C1)
	set payCodes = $c(1)_PAR3_$c(1)
	while (SQLCODE = 0) {
		if payment]"" && contdesc]"" && (payCodes[($c(1)_payment_$c(1)) || (PAR3 = 0)) {
			set:'$d(@Mas@("REPORT", payment)) @Mas@("REPORT", payment)=paydesc
			set @Mas@("REPORT", payment, contdesc)=visnumbercount
		}
		&sql(FETCH C1)
	}
  	&sql(CLOSE C1)
}
#;--------------------------------------------------------------------------
#; Формирование XML
XML(USER, Mas) [MSGERROR,PAR,PAR1,PAR2,PAR3] PUBLIC {
	if '$D(@Mas@("REPORT")) s MSGERROR="100^Нет данных согласно заданному критерию поиска!" quit
	
	 // сортировка плательщиков по алфавиту
    kill @Mas@("sortpay")
    set payment="" f  s payment=$o(@Mas@("REPORT",payment),1,paymentname) q:payment=""  set @Mas@("sortpay",paymentname_$c(1)_payment)=""

	//m ^test("mas")=@Mas
	set MasO=$na(^TEMP($zn,$J,"XML")), total = 0
	set NGr1=0,key = $o(@Mas@("sortpay", ""))
	while key ]"" {
		set paydesc = $piece(key,$c(1),1),paymentCode=$piece(key,$c(1),2)
		set contdesc = $o(@Mas@("REPORT", paymentCode, "")), NGr1=$i(NGr1), NCol1=0
		set @MasO@("User", 1, "Gr", NGr1, "Payment") = paydesc,@MasO@("User", 1, "Gr", NGr1, "PaymentCode") = paymentCode
		while contdesc]"" {
			set NCol1=$i(NCol1), contcount = $g(@Mas@("REPORT", paymentCode, contdesc))
			set @MasO@("User", 1, "Gr", NGr1, "Col", NCol1, "ContName") = $p(contdesc,$c(1),1), ^("ContCount") = contcount
			set total = total + contcount,contdesc = $o(@Mas@("REPORT", paymentCode, contdesc))
		}
		set key = $o(@Mas@("sortpay", key))
	}	
	; входные параметры
	s date1=$o(^TDAY(4,PAR1-1)),date2=$o(^TDAY(4,PAR2+1),-1)
	S @MasO@("User",1,"Date1")=$TR($$extdate2^SSUTIL4(date1),"/",".")
	S @MasO@("User",1,"Date2")=$TR($$extdate2^SSUTIL4(date2),"/",".")
	S @MasO@("User",1,"Total")=total
	S MSGERROR=$$WriteFileLabTrakClient^REPORTSPB($NA(@MasO),"CLNRUS48.xsl",USER,$get(PAR))
	;i $E(%Ret)="*" s MSGERROR="100^Ошибка:"_$E(%Ret,2,$L(%Ret)) quit
	; Возвращаем:  0^сообщение^имя файла^программа для открытия файла ( EXPLORER, EXCEL, WINWORD ) / 100^сообщение об ошибке
	;s MSGERROR="0^^"_%Ret_"^WINWORD"  ;"^WINWORD  ;^EXCEL"  ;^EXPLORER"
	quit
}
 
]]></Routine>
</Export>
