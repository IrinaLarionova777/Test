<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTCLNRUS05birlabNew" type="MAC" languagemode="0"><![CDATA[
PRTCLNRUS05birlabNew ;SPARM; Деятельность лаборатории (по плательщикам) ;
 ; с учетом особенностей BiRLab
 q
 ; Отчет CLNRUS05  +  CLNRUS05.xsl  + DLL: CLNSPARM007.clsSTART
 ;            
 ; Тип формирования отчета: по дате выполнения / по дате назначения
 ; Обработка данных:
 ; 1) идем по индексу 
 ; 	 -  поиск по дате разрешения (дата авторизации набора тестов)
 ; 	    ^TEPIi("AUTHORISED","дата разрешения",epis,ts,tscnt) 
 ;   -  поиск по дате назначения (дата передачи набора тестов)
 ; 		^TDAY(4,{EPVIS DateOfEntry},{EPVIS StatusPatient},{EPVIS VisitNumber}) 
 ; 2) проверяем ограничение по выбранным плательщикам на уровне лаб.номера + набора тестов !
 ; 3) и считаем кол-во выполненных наб.тестов за заданный период
 ;     
 ; + расшифровка по наборам тестов
 ; + расшифровка по плательщикам
 ; + расшифровка по пациентам
 ; + расшифровка по пользователям
 ;==============================================================================================                      
FORM(USER) new (USER) s USER=$G(USER) 
 S Par=$name(^TEMP($J)) k @Par 
 /*
 set ok=##class(TCLEx.Report.Function).TestAccessUserToReport(USER) 
 if 'ok {
    set @Par@("PAR1")="Label   : 100 : 200 : 1100 : 600 : Доступ запрещен"
    set @Par@("form")="Деятельность лаборатории (по плательщикам) ("_$G(USER)_"):500:300::Выход"
    quit Par
 }*/
 ; период дат
 s @Par@("PAR1a")="Label   : 100 : 200 : 1000 : 300 : Дата от:"
 s @Par@("PAR1")="DateText: 1300: 200 : 1100 : 300 : t-7 :True"
 s @Par@("PAR2a")="Label   : 100: 600 : 1000 : 300 : Дата до:"
 s @Par@("PAR2")="DateText: 1300: 600 : 1100 : 300 : t:True"
 ; 
 ; список отделов
 s @Par@("PAR4a")="Label   : 100 : 1100 : 1000 : 300 : Отдел:"
 s default=$$ListDep^UDFSPARM001($G(USER),"VB","PAR4")
 s @Par@("PAR4")="ComboBox: 1300 : 1100 : 4700 : 300 : :True: "_default_" :List" ;Standart
 ;
 ; список плательщиков
 s @Par@("PAR3a")="Label   : 100 : 1500 : 1000 : 300 : Плательщик:"
 ;k PLIST s err=$$getall^LVBCTPC("","","","Y","","","","")
 ;s cnt=1,ind="" f  s ind=$O(PLIST(ind)) q:ind=""  d
 ;. s code=$P(PLIST(ind),$C(2),1) s:code'="" @Par@("PAR3",code)=code_"   "_$P(PLIST(ind),$C(2),2) s cnt=$i(cnt)
 kill @Par@("PAR3") set sc=##class(BiRLab.Function.Report).GetPayersAll($name(@Par@("PAR3")))  //do getAllPaiments^PRTCLNRUS40($name(@Par@("PAR3")))
 s @Par@("PAR3","0")="* Все плательщики"
 s @Par@("PAR3")="ListBox : 100 : 1800 : 5900 : 3000 : :True: 0 : Checkbox  "   
 ; 
 ; флаг "Расшифровка по наборам тестов"
 s @Par@("PAR5")="CheckBox: 100 : 5000 : 200  : 300 : : : 1 "
 s @Par@("PAR5a")="Label   : 500 : 5000 : 5000 : 300 : Расшифровка по наборам тестов:"
 ; флаг "Расшифровка по плательщикам"
 s @Par@("PAR6")="CheckBox: 100 : 5400 : 200  : 300 : : : 0 "
 s @Par@("PAR6a")="Label   : 500 : 5400 : 5000 : 300 : Расшифровка по плательщикам:"
 ; флаг "Расшифровка по пользователям"
 s @Par@("PAR7")="CheckBox: 100 : 5800 : 200  : 300 : : : 0 "
 s @Par@("PAR7a")="Label   : 500 : 5800 : 5000 : 300 : Расшифровка по пользователям (исполнителям):"
 ; флаг (радио-кнопки)
 s @Par@("PAR8")="RadioButton : 3500 : 100 : 2550 : 800 : Тип формирования отчета :True: 1 :List"    
 s @Par@("PAR8",1)="по дате выполнения"
 s @Par@("PAR8",2)="по дате назначения"
 ; флаг "Расшифровка по пациентам"
 s @Par@("PAR9")="CheckBox: 100 : 6200 : 200  : 300 : : : 0 "
 s @Par@("PAR9a")="Label   : 500 : 6200 : 5000 : 300 : Расшифровка по пациентам:"
 ; строка-подсказка
 s @Par@("PAR10a")="Label : 100 : 6600 : 6000 : 300 : ДОПОЛНИТЕЛЬНАЯ настройка для отчета ""Расшифровки по пациентам"":"
 ; Флаг "Вывести номер МК пациента"
 s @Par@("PAR11")="CheckBox: 500 : 6900 : 200  : 300 : : : 0 "
 s @Par@("PAR11a")="Label  : 900 : 6900 : 5000 : 300 : Вывести столбец ""№ МК"" пациента:"
 ; Флаг "Вывести категорию пациента"
 s @Par@("PAR12")="CheckBox: 500 : 7200 : 200  : 300 : : : 0 "
 s @Par@("PAR12a")="Label  : 900 : 7200 : 5000 : 300 : Вывести столбец ""Категория"" пациента:"
 ; Флаг "Вывести местоположение пациента"
 s @Par@("PAR13")="CheckBox: 500 : 7500 : 200  : 300 : : : 0 "
 s @Par@("PAR13a")="Label  : 900 : 7500 : 5000 : 300 : Вывести столбец ""Местоположение пациента"":"
 ; Флаг "Вывести плательщик/полис пациента"
 s @Par@("PAR14")="CheckBox: 500 : 7800 : 200  : 300 : : : 0 "
 s @Par@("PAR14a")="Label  : 900 : 7800 : 5000 : 300 : Вывести столбец ""Плательщик/полис"" пациента:"
 ; настройка формы
 s @Par@("form")="Деятельность лаборатории (по плательщикам) ("_$G(USER)_"):500:300:Формиров.:Выход"
 q "^TEMP("_$J_")" 
 ;------------------------------------------------
CREATE(REPID,PAR,USER,%msql) ; create report
 n (REPID,PAR,USER,%msql) k ^TMP($zn,$j)
 q
 ;==================================================================================================================
 ; Формирование отчета согласно заданным критериям (передаются из формы VB)
 ; Формат PAR = поле $С(3) значение { $C(1) значение $C(1) значение } $C(2) поле $С(3) значение { $C(2) поле ... }
 ; Возвращает:   0^сообщение^имя файла^программ для открытия файла ( EXPLORER, EXCEL, WINWORD )
 ;             100^сообщение об ошибке
 ; 
START(USER,PAR) n (USER,PAR)  s USER=$G(USER),PAR=$G(PAR) 
 Set oldtime=$ZH
 i $G(PAR)="" q "100^нет входных параметров!"    ;при выходе из DLL была нажата кнопка Отмена
 ;
 ;k ^zz   ;m ^zz("FORM")=^TEMP($j) s ^zz="$j="_$j_" ; $h="_$h   s ^zz("PAR")=PAR       ;@@@
 k ^TEMP($J)
 s Mas="^TEMP($zn,$J)" k @Mas
 s MSGERROR=""            
 set ok=$$INIT 
 if 'ok set MSGERROR="100^"_$system.Status.GetErrorText(ok)
 i $g(MSGERROR)'="" quit MSGERROR
 set okCreateTempGlob=0 // флаг, создана ли временная глобаль для определения цены без испльзования Birlab
 if ##class(BiRLab.Function.Report).GetFlagUseBirlab()=1 {
	 set boundDate=##class(BiRLab.Function.Report).GetDateStartUseBirlab() //$zdh("01/12/2012",4)
     set refIndex=$name(^||inv)
     /*
     if (boundDate="")||(PAR1<boundDate) {
	     do CreateIndex(refIndex) ;инверсии к CT_Schedule_PaymentCode 
	     set okCreateTempGlob=1
     }*/
 }
 //kill ^test("compare","05birlab"),^test("compare","05ras")

 i $G(FlagReport)=1 {  ;поиск по дате разрешения (дата авторизации набора тестов)
	 set ok=$$BODY1()
 }
 i $G(FlagReport)=2 {	;поиск по дате назначения (дата передачи набора тестов)
    set ok=$$BODY2()
 }
 if ok {
	 set ok=$$XML()
 }
 k ^TEMP($zn,$J),^TEMP($j)
 Set ^xxxTimeTest($zn,$I(^xxxTimeTest($zn)))=$ZH-oldtime
 if 'ok quit "100^"_$system.Status.GetErrorText(ok)	
 q $G(MSGERROR)  ;код^сообщение (об ошибке) для возврата в DLL^имя файла^имя проги для открытия файла
 ;------------------------------------------------
INIT() ; инициализация входных параметров
 set ok=1,MSGERROR=""
 try {
 d PARAM^REPORTSPB(PAR,"mas")
 s j="" f  s j=$O(mas(j)) q:j=""  s @j=$g(mas(j))
 ; период дат
 i $G(PAR1)="" s MSGERROR="100^Не определено значение <Дата от>" q
 i $G(PAR2)="" s MSGERROR="100^Не определено значение <Дата до>" q
 i PAR1>PAR2 s MSGERROR="100^Значение <Дата от> больше значения <Дата до>" q
 ; плательщик
 i $G(PAR3)="" s MSGERROR="100^Не определено значение <Плательщик>" q
 k PAYMENT s PAYMENT=""
 set flagUseBirlab=##class(BiRLab.Function.Report).GetFlagUseBirlab()
 for i=1:1:$L(PAR3,$C(1)) {
		 s pay=$P(PAR3,$C(1),i) if pay="" continue 
         i pay="0" s PAYMENT("*")="" quit     ;* Все
         if flagUseBirlab=0 s PAYMENT(pay)=$P($G(^TTAB("BI",pay)),"\",1)
         else  s PAYMENT(pay)=##class(BiRLab.Function.Report).GetPayerInfo(pay,"nameshort",1)
         s PAYMENT=PAYMENT_$S(PAYMENT="":"",1:",")_pay_"-"_$G(PAYMENT(pay)) ;собираем значения в одну строку (для шапки)
	 }
 i $D(PAYMENT("*")) s PAYMENT="*",pay="" f  s pay=$O(^TTAB("BI",pay)) q:pay=""  s PAYMENT(pay)=""
 i '$D(PAYMENT)="" s MSGERROR="100^Не определено значение <Плательщик>" q
 ; отдел
 i $G(PAR4)="" s MSGERROR="100^Не определено значение <Отдел>" q
 k DEP  s DEP=""
 if PAR4="0" do  s DEP="*"     ;* Все
 . s default=$$ListDep^UDFSPARM001($G(USER),"INIT","DEP") m DEP=^TEMP($J,"DEP")
 if PAR4'="0" do  q:MSGERROR'=""
 . i '$D(^TTAB("DEP",PAR4)) s MSGERROR="100^В Labtrake нет кода отдела <"_DEP_">" q
 . s DEP(PAR4)=$P(^TTAB("DEP",PAR4),"\",1)
 . s DEP=PAR4_" "_DEP(PAR4)
 ; Флаг "Расшифровка по наборам тестов"
 s FlagTS=+$G(PAR5)
 ; флаг "Расшифровка по плательщикам"
 s FlagPayment=+$G(PAR6)
 ; флаг "Расшифровка по пользователям"
 s FlagUser=+$G(PAR7)
 ; флаг "Тип формирования отчета" (радио-кнопки) 1-по дате выполнения"; 2-по дате назначения
 s FlagReport=+$G(PAR8) 
 i FlagReport=2&(FlagUser=1) s MSGERROR="100^Вы выбрали тип формирования отчета ""по дате назначения"". Расшифровка по пользователям в этом случае не возможна!" quit
 ; флаг "Расшифровка по пациентам"
 s FlagEpisode=+$G(PAR9)
 ; Флаг "Вывести № МК пациента"
 s FlagMRNPat=+$G(PAR11)
 ; Флаг "Вывести столбец Категория пациента"
 s FlagCategPat=+$G(PAR12)
 ; Флаг "Вывести местоположение пациента"
 s FlagLocPat=+$G(PAR13)
 ; Флаг "Вывести плательщик/полис пациента"
 s FlagPayPat=+$G(PAR14)
 ; log
 ;s ^zz("INIT")="PAR1="_PAR1_"  PAR2="_PAR2_"  PAR3="_PAR3_"  PAR4="_PAR4_"; PAR5="_PAR5_"; PAR6="_PAR6   ;@@@
 } catch(e) { set ok=e.AsStatus() }
 
 quit ok
 ;
 ;инверсии к CT_Schedule_PaymentCode
CreateIndex(pRef)
 if $get(pRef)="" quit 
 kill @pRef
 set pricelist=""
 for {
    set pricelist=$order(^TSCH(pricelist)) if pricelist="" quit
 	set payment=""
 	for {
	   set payment=$order(^TSCH(pricelist,"AMOUNT",payment)) if payment="" quit
	   if $data(@pRef@(payment)) set koefcito=+@pRef@(payment)
	   else  Set koefcito=$$CitoCoefficient^Settings.Billing(payment) set @pRef@(payment)=koefcito 
	   set pricedate=""
	   for {
	       set pricedate=$order(^TSCH(pricelist,"AMOUNT",payment,pricedate)) if pricedate="" quit
	       set @pRef@(payment,pricedate,pricelist)=""
	   }
 	} 
 }
 quit

 ;------------------------------
BODY1()  ; обработка данных...
 ; поиск по дате разрешения (дата авторизации набора тестов)
 ; ^TEPIi("AUTHORISED",{VISTS DateOfAuthorisation},{EP VisitNumber.EPVIS VisitNumber},{VISTS TestSet DR},{VISTS TestSetCounter}) 
 set ok=1
 try {
 Kill ^||Report.Amount
 set date=PAR1-1 
 for {
		 set date=$order(^TEPIi("AUTHORISED",date)) quit:date=""  quit:date>PAR2  
		 s epis="" 
		 for {
			 set epis=$order(^TEPIi("AUTHORISED",date,epis)) quit:epis=""  if '$data(^TEPI(epis)) continue
			 set rec=$get(^TEPI(epis))
			 
			 ; плательщик (на уровне лаб.номера)
			 set payment=""
			 // при использовании BiRLab плательщик определяется по коду ЛПУ (и только на уровне EPVisitNumber) (поле EPVIS_PaymentCode_DR пусто)
			 set hospitalcode=$piece(rec,"\",20)
			 set payepisnew=##class(BiRLab.CT.PayerHospital).GetPayerByHospital(hospitalcode)
			 // для эпизодов, которые были до внедрения BiRLab
             set payepis=$piece(rec,"\",7)  //EPVIS_PaymentCode_DR 
             
             set flagBiRLab=0 
             if (payepis="")&&(payepisnew'="") {
	            set flagBiRLab=1
	            set payment=payepisnew
	            if PAYMENT'="*",'$D(PAYMENT(payment)) continue
             }
             if payepis="" set payepis="?"  ;если был зарегистрирован через LT
	        
             set cito=$piece(rec,"\",15) 
             ; наборы тестов для лаб.эпизода (ограничение по отделам)
             s ts=$Order(DEP("")) 
             for  {
	             set ts=$order(^TEPIi("AUTHORISED",date,epis,ts)) quit:ts=""  
	             set dep=$e(ts,1) ;if dep="" continue  
	             ;if '$data(DEP(dep)) continue
	             set tscnt="" 
	             for {
		             set tscnt=$order(^TEPIi("AUTHORISED",date,epis,ts,tscnt)) quit:tscnt=""  
                     Set rects=$Get(^TEPI(epis,1,ts,tscnt))
                     Set superset=$p(rects,"\",29)
                     if superset'="" Set dep=$Extract(superset,1) 
                     If dep=""||('$Data(DEP(dep))) continue
                     ; считаем только "РАЗРЕШЕННЫЕ" наборы тестов, а не "НАЗНАЧЕННЫЕ" !!!
                     set status=$p(rects,"\",31) if status'="A" continue
                     
                     if flagBiRLab=0 {
	                     ; плательщик (на уровне набора тестов)
                         set payment=$p(rects,"\",23) 		;VISTS_PaymentCode_DR
                         set:payment="" payment=payepis
                         ; проверяем ограничение по плательщику
                         if PAYMENT'="*",'$D(PAYMENT(payment)) continue          
                     }
                     
                     ; VISTS_UserAuthorised DR
                     set user=$p(rects,"\",6) if user="" continue       ;если была установлена причина невыполнения
                     ;s:user="" user="?"
                     ;set supressbilling=$piece(rects,"\",34) if supressbilling="Y" continue  
                     Set billingitem=ts,authdate=$Piece(rects,"\",4)
                     if superset'="" {
	                     Set billingitem=superset
	                     If $Data(^||Report.Amount(billingitem,epis,payment)) continue
	                     if '##class(TCLEx.Function.SuperSet).IsComplete(epis,superset) continue
	                     set authdate=##class(TCLEx.Function.SuperSet).AuthorisationDate2(epis,superset)
	                     Set ^||Report.Amount(billingitem,epis,payment)="" 
	                     if authdate<PAR1||(authdate>PAR2) continue
                     }
                     // если нет взведенной глобали для пересчета цены и плательщика, то берем готовую
                     if '$data(^SpeedI.DeltaP("TCLEx.Data.EPVisitNumberExt",epis))&&($get(^TEPI(epis,1,ts,tscnt,"birlab"))'="") {
	                     set amount=+^TEPI(epis,1,ts,tscnt,"birlab")
                     } else {
	                     // расчет цены по старому биллингу
                         if (okCreateTempGlob=1)&&((boundDate="")||(authdate<boundDate)) {
	                          Set amount=$$GetBillingItemAmount(payment,epis,authdate,billingitem,cito,$name(^||inv))
                         }
                         // расчет цены по новому биллингу 
                         else {
	                         Set amount=##class(BiRLab.Function.Invoice).GetPriceEpisodeItem(epis,billingitem,authdate,.cito,.error,payment,tscnt,ts) 
	                         //if (epis=2626007648) set ^test("ss",epis,ts,tscnt)=$g(billingitem)_"*"_$g(authdate)_"*"_$g(cito)_"*"_$g(error)_"*"_$g(payment)_"*"_$g(amount)
                         }
                     }

                     ; формируем индексы для печати выходного файла
                     s @Mas@("REPORT")=$G(@Mas@("REPORT"))+1
                     s @Mas@("REPORT",dep)=$g(@Mas@("REPORT",dep))+1
                     s @Mas@("REPORT",dep,"Amount")=$g(@Mas@("REPORT",dep,"Amount"))+amount
                     s @Mas@("REPORT-Amount")=$G(@Mas@("REPORT-Amount"))+amount
                     ;s ^test("comp","new",epis_$c(1)_ts_$c(1)_tscnt)=$g(^test("comp","new",epis_$c(1)_ts_$c(1)_tscnt))+amount
                     ; Флаг "Расшифровка по наборам тестов"
                     if $G(FlagTS)=1 {
                        set @Mas@("REPORT",dep,"ts",billingitem)=$G(@Mas@("REPORT",dep,"ts",billingitem))+1
                        set @Mas@("REPORT",dep,"ts",billingitem,"Amount")=$G(@Mas@("REPORT",dep,"ts",billingitem,"Amount"))+amount
                     }
                     ; флаг "Расшифровка по плательщикам"
                     if $G(FlagPayment)=1 {
                        s @Mas@("REPORT-PAYMENT",payment)=$g(@Mas@("REPORT-PAYMENT",payment))+1
                        s @Mas@("REPORT-PAYMENT",payment,"dep",dep)=$g(@Mas@("REPORT-PAYMENT",payment,"dep",dep))+1
                        s @Mas@("REPORT-PAYMENT",payment,"Amount")=$g(@Mas@("REPORT-PAYMENT",payment,"Amount"))+amount
                        s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"Amount")=$g(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"Amount"))+amount
                        if $G(FlagTS)=1 {
                            s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem)=$G(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem))+1,@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Amount")=$G(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Amount"))+amount
                        }
                     }
                     ; флаг "Расшифровка по пациентам"
                     if $G(FlagEpisode)=1 {
                        s @Mas@("REPORT-EPIS",epis,"ts",billingitem,tscnt)=""
                        s @Mas@("REPORT-EPIS",epis,"ts")=$G(@Mas@("REPORT-EPIS",epis,"ts"))+1
                        s @Mas@("REPORT-EPIS",epis,"ts","Amount")=$G(@Mas@("REPORT-EPIS",epis,"ts","Amount"))+amount
                        s @Mas@("REPORT-EPIS",epis,"pay")=payment
                     }
                     ; флаг "Расшифровка по пользователям"
                     if $G(FlagUser)=1 {
                        s @Mas@("REPORT-USER",user,"pay",payment)=$G(@Mas@("REPORT-USER",user,"pay",payment))+1
                        s @Mas@("REPORT-USER",user)=$G(@Mas@("REPORT-USER",user))+1 
                        s @Mas@("REPORT-USER",user,"pay",payment,"Amount")=$G(@Mas@("REPORT-USER",user,"pay",payment,"Amount"))+amount
                        s @Mas@("REPORT-USER",user,"Amount")=$G(@Mas@("REPORT-USER",user,"Amount"))+amount
                        if $G(FlagTS)=1 {
                            s @Mas@("REPORT-USER",user,"pay",payment,"ts",billingitem)=$G(@Mas@("REPORT-USER",user,"pay",payment,"ts",billingitem))+1 
                            s @Mas@("REPORT-USER",user,"pay",payment,"ts",billingitem,"Amount")=$G(@Mas@("REPORT-USER",user,"pay",payment,"ts",billingitem,"Amount"))+amount
                        }
                     }
                 }
             }
      }
 }
 } catch(e) {
    set ok=e.AsStatus()	 
 }
 quit ok
 ;------------------------------------------------
BODY2()  ; обработка данных...
 ; поиск по дате назначения (дата передачи набора тестов)
 ; ^TDAY(4,{EPVIS DateOfEntry},{EPVIS StatusPatient},{EPVIS VisitNumber}) 
 set ok=1 
 try {
 Kill ^||Report.Amount 
 set date=PAR1-1 
 for {
	 set date=$order(^TDAY(4,date)) quit:date=""  quit:date>PAR2  
	 set epis="" 
	 for {
		 set epis=$order(^TDAY(4,date,0,epis)) quit:epis=""  if '$Data(^TEPI(epis)) continue
		 set rec=$get(^TEPI(epis))
         ; плательщик (на уровне лаб.номера)
         //s payepis=$p(rec,"\",7) s:$g(payepis)="" payepis="?"  ;если был зарегистрирован через LT
   		     set payment=""
			 // при использовании BiRLab плательщик определяется по коду ЛПУ (и только на уровне EPVisitNumber) (поле EPVIS_PaymentCode_DR пусто)
			 set hospitalcode=$piece(rec,"\",20)
			 set payepisnew=##class(BiRLab.CT.PayerHospital).GetPayerByHospital(hospitalcode)
			 // для эпизодов, которые были до внедрения BiRLab
             set payepis=$piece(rec,"\",7)  //EPVIS_PaymentCode_DR 
             
             set flagBiRLab=0 
             if (payepis="")&&(payepisnew'="") {
	            set flagBiRLab=1
	            set payment=payepisnew
	            if PAYMENT'="*",'$D(PAYMENT(payment)) continue
             }
             if payepis="" set payepis="?"  ;если был зарегистрирован через LT
           
         set cito=$piece(rec,"\",15) 
         ; наборы тестов для лаб.эпизода (ограничение по отделам)
         set ts=$O(DEP("")) 
         for {
	         set ts=$o(^TEPI(epis,1,ts)) quit:ts=""  
	         set dep=$e(ts,1) 
             set tscnt="",cnt=0 
             for {
	             set tscnt=$o(^TEPI(epis,1,ts,tscnt)) quit:tscnt=""  
	             Set rects=$Get(^TEPI(epis,1,ts,tscnt))
                 Set superset=$p(rects,"\",29)
                 If superset'="" Set dep=$Extract(superset,1) 
                 If (dep="")||('$Data(DEP(dep))) continue 
                 s status=$p(rects,"\",31) 
                 
                 ; плательщик (на уровне набора тестов)
                 //s payment=$piece(rects,"\",23) 		;VISTS_PaymentCode_DR
                 //s:payment="" payment=payepis
                 ; проверяем ограничение по плательщику
                 //if PAYMENT'="*",'$D(PAYMENT(payment)) continue  
                 
                 if flagBiRLab=0 {
	                     ; плательщик (на уровне набора тестов)
                         set payment=$p(rects,"\",23) 		;VISTS_PaymentCode_DR
                         set:payment="" payment=payepis
                         ; проверяем ограничение по плательщику
                         if PAYMENT'="*",'$D(PAYMENT(payment)) continue          
                  }
                 
                 ;set supressbilling=$piece(rects,"\",34) if supressbilling="Y" continue      
                 Set billingitem=ts,authdate=$Piece(rects,"\",4)
                 If superset'="" {
	                 Set billingitem=superset
                     If $Data(^||Report.Amount(billingitem,epis,payment)) continue
                     Set ^||Report.Amount(billingitem,epis,payment)=""
                     set authdate=##class(TCLEx.Function.SuperSet).AuthorisationDate2(epis,superset)
                 }
                 // расчет цены по старому биллингу
                     if (okCreateTempGlob=1)&&((boundDate="")||(authdate<boundDate)) {
	                     Set amount=$$GetBillingItemAmount(payment,epis,authdate,billingitem,cito)
                     }
                     // расчет цены по новому биллингу 
                     else {
	                     Set amount=##class(BiRLab.Function.Invoice).GetPriceEpisodeItem(epis,billingitem,authdate,.cito,.error,payment,tscnt,ts) 
	                     //if error'="" set ^test("05","error",epis,billingitem)=error
                     }

                 ; ---
                 ; считаем количество "НАЗНАЧЕННЫХ" + "РАЗРЕШЕННЫХ" наборы тестов
                 s @Mas@("REPORT",dep)=$g(@Mas@("REPORT",dep))+1
                 s @Mas@("REPORT")=$G(@Mas@("REPORT"))+1
                 if ((superset="")&&(status="A"))||((superset'="")&&(##class(TCLEx.Function.SuperSet).IsComplete(epis,superset))) {
	                 s @Mas@("REPORT",dep,"Exec")=$g(@Mas@("REPORT",dep,"Exec"))+1
                     s @Mas@("REPORT-Exec")=$G(@Mas@("REPORT-Exec"))+1
                     s @Mas@("REPORT-Exec","Amount")=$G(@Mas@("REPORT-Exec","Amount"))+amount
                     s @Mas@("REPORT",dep,"Amount") = $G(@Mas@("REPORT",dep,"Amount"))+amount
                     s @Mas@("REPORT-Amount")=$G(@Mas@("REPORT-Amount"))+amount
                 }
                 ; Флаг "Расшифровка по наборам тестов"
                 if $G(FlagTS)=1 {
	                 s @Mas@("REPORT",dep,"ts",billingitem)=$G(@Mas@("REPORT",dep,"ts",billingitem))+1
                     s @Mas@("REPORT",dep,"ts",billingitem,"Amount")=$G(@Mas@("REPORT",dep,"ts",billingitem,"Amount"))+amount
                     i status="A" s @Mas@("REPORT",dep,"ts",billingitem,"Exec")=$G(@Mas@("REPORT",dep,"ts",billingitem,"Exec"))+1,@Mas@("REPORT",dep,"ts",billingitem,"Exec-Amount")=$G(@Mas@("REPORT",dep,"ts",billingitem,"Exec-Amount"))+amount
                 }
                 ; флаг "Расшифровка по плательщикам"
                 if $G(FlagPayment)=1 {
                     s @Mas@("REPORT-PAYMENT",payment)=$g(@Mas@("REPORT-PAYMENT",payment))+1
                     s @Mas@("REPORT-PAYMENT",payment,"dep",dep)=$g(@Mas@("REPORT-PAYMENT",payment,"dep",dep))+1
                     s @Mas@("REPORT-PAYMENT",payment,"Amount")=$g(@Mas@("REPORT-PAYMENT",payment,"Amount"))+amount
                     s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"Amount")=$g(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"Amount"))+amount
                     if status="A" {
                        s @Mas@("REPORT-PAYMENT",payment,"Exec")=$g(@Mas@("REPORT-PAYMENT",payment,"Exec"))+1
                        s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"Exec")=$g(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"Exec"))+1
                        s @Mas@("REPORT-PAYMENT",payment,"Exec-Amount")=$g(@Mas@("REPORT-PAYMENT",payment,"Exec-Amount"))+amount
                        s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"Exec-Amount")=$g(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"Exec-Amount"))+amount
                     }
                     if $G(FlagTS)=1 {
                        s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem)=$G(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem))+1
                        if status="A" s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Exec")=$G(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Exec"))+1,@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Exec-Amount")=$G(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Exec-Amount"))+amount
                        else  s @Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Amount")=$G(@Mas@("REPORT-PAYMENT",payment,"dep",dep,"ts",billingitem,"Amount"))+amount
                     }
                 }
                 ; флаг "Расшифровка по пациентам"
                 if $G(FlagEpisode)=1 {
                     s @Mas@("REPORT-EPIS",epis,"ts",billingitem,tscnt)=""
                     s @Mas@("REPORT-EPIS",epis,"ts")=$G(@Mas@("REPORT-EPIS",epis,"ts"))+1
                     s @Mas@("REPORT-EPIS",epis,"ts","Amount")=$G(@Mas@("REPORT-EPIS",epis,"ts","Amount"))+amount
                     s @Mas@("REPORT-EPIS",epis,"pay")=payment
                     if status="A" s @Mas@("REPORT-EPIS",epis,"ts-Exec")=$G(@Mas@("REPORT-EPIS",epis,"ts-Exec"))+1,@Mas@("REPORT-EPIS",epis,"ts-Exec-Amount")=$G(@Mas@("REPORT-EPIS",epis,"ts-Exec-Amount"))+amount
                 }
             }
         }
	 }
 }
 } catch(e) { set ok=e.AsStatus() }
 quit ok
 ; ----------------------------------------------------- 
XML()      ; Формирование XML...
 set ok=1,MSGERROR=""
 try {
 i '$D(@Mas@("REPORT")) s MSGERROR="100^Нет данных согласно заданному критерию поиска!" quit
 ; ---
 S MasO="^TEMP($zn,$J,""XML"")"
 S NGr1=0,dep="" f  s dep=$o(@Mas@("REPORT",dep)) q:dep=""  d
 . S NGr1=$i(NGr1)
 . S @MasO@("User",1,"Gr",NGr1,"NGr")=NGr1
 . S @MasO@("User",1,"Gr",NGr1,"Name")=$P($G(^TTAB("DEP",dep)),"\",1)
 . S @MasO@("User",1,"Gr",NGr1,"Count")=+$G(@Mas@("REPORT",dep))
 . S @MasO@("User",1,"Gr",NGr1,"Amount")=+$G(@Mas@("REPORT",dep,"Amount"))
 . i $G(FlagReport)=2 S @MasO@("User",1,"Gr",NGr1,"Count-Exec")=+$G(@Mas@("REPORT",dep,"Exec"))
 . ; расшифровка кол-ва по наборам тестов
 . i $G(FlagTS)=1 do
 .. s NGr2=0,ts="" f  s ts=$o(@Mas@("REPORT",dep,"ts",ts)) q:ts=""  d
 ... S NGr2=$i(NGr2)
 ... S @MasO@("User",1,"Gr",NGr1,"GrTS",NGr2,"Name")=$e(ts_$j("",6),1,6)_$$BillingItemName(ts) 
 ... S @MasO@("User",1,"Gr",NGr1,"GrTS",NGr2,"Count")=+$G(@Mas@("REPORT",dep,"ts",ts))
 ... i $G(FlagReport)=2 S @MasO@("User",1,"Gr",NGr1,"GrTS",NGr2,"Count-Exec")=+$G(@Mas@("REPORT",dep,"ts",ts,"Exec")),@MasO@("User",1,"Gr",NGr1,"GrTS",NGr2,"Amount")=+$G(@Mas@("REPORT",dep,"ts",ts,"Exec-Amount"))
 ... e  S @MasO@("User",1,"Gr",NGr1,"GrTS",NGr2,"Amount")=+$G(@Mas@("REPORT",dep,"ts",ts,"Amount"))
 ; итоги
 S @MasO@("User",1,"ItogoTS")=+$G(@Mas@("REPORT")), @MasO@("User",1,"ItogoTSAmount")=+$G(@Mas@("REPORT-Amount"))
 i $G(FlagReport)=2 S @MasO@("User",1,"ItogoTS-Exec")=+$G(@Mas@("REPORT-Exec")) 
 ; ----
 ; флаг "Расшифровка по плательщикам"
 i $G(FlagPayment)=1 do
 . s NGr1=0,pay="" f  s pay=$O(@Mas@("REPORT-PAYMENT",pay)) q:pay=""  do
 .. S NGr1=$i(NGr1)
 .. S @MasO@("User",1,"GrPayment",NGr1,"NGr")=NGr1
 .. S @MasO@("User",1,"GrPayment",NGr1,"Name")="("_pay_") "_$P($G(^TTAB("BI",pay)),"\",1)
 .. S @MasO@("User",1,"GrPayment",NGr1,"Count")=+$G(@Mas@("REPORT-PAYMENT",pay))
 .. i $G(FlagReport)=2 S @MasO@("User",1,"GrPayment",NGr1,"Count-Exec")=+$G(@Mas@("REPORT-PAYMENT",pay,"Exec")),@MasO@("User",1,"GrPayment",NGr1,"Amount")=+$G(@Mas@("REPORT-PAYMENT",pay,"Exec-Amount"))
 .. e  S @MasO@("User",1,"GrPayment",NGr1,"Amount")=+$G(@Mas@("REPORT-PAYMENT",pay,"Amount"))
 .. ; расшифровка кол-ва по отделам
 .. s NNDep=0,dep="" f  s dep=$o(@Mas@("REPORT-PAYMENT",pay,"dep",dep)) q:dep=""  d
 ... S NNDep=$i(NNDep)
 ... S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"NameDep")=dep_"-"_$P($G(^TTAB("DEP",dep)),"\",1)
 ... S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"Count")=+$g(@Mas@("REPORT-PAYMENT",pay,"dep",dep))
 ... i $G(FlagReport)=2 S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"Count-Exec")=+$g(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"Exec")),@MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"Amount")=+$g(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"Exec-Amount"))
 ... e  S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"Amount")=+$g(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"Amount"))
 ... ; расшифровка кол-ва по наборам тестов
 ... i $G(FlagTS)=1 do
 .... s NGr2=0,ts="" f  s ts=$o(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"ts",ts)) q:ts=""  d
 ..... S NGr2=$i(NGr2)
 ..... S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"GrTS",NGr2,"Name")=$e(ts_$j("",6),1,6)_$$BillingItemName(ts) 
 ..... S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"GrTS",NGr2,"Count")=+$G(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"ts",ts))
 ..... i $G(FlagReport)=2 S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"GrTS",NGr2,"Count-Exec")=+$G(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"ts",ts,"Exec")),@MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"GrTS",NGr2,"Amount")=+$G(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"ts",ts,"Exec-Amount"))
 ..... e  S @MasO@("User",1,"GrPayment",NGr1,"GrDep",NNDep,"GrTS",NGr2,"Amount")=+$G(@Mas@("REPORT-PAYMENT",pay,"dep",dep,"ts",ts,"Amount"))
 ; ----
 ; флаг "Расшифровка по пациентам"
 i $G(FlagEpisode)=1 do
 . s NGr1=0,epis="" f  s epis=$O(@Mas@("REPORT-EPIS",epis)) q:epis=""  do
 .. i $$select^LVBEPVIS(epis) quit
 .. k VISIT m VISIT=PLIST
 .. S NGr1=$i(NGr1)
 .. S @MasO@("User",1,"GrEpis",NGr1,"NGr")=NGr1
 .. S @MasO@("User",1,"GrEpis",NGr1,"Epis")=epis
 .. S @MasO@("User",1,"GrEpis",NGr1,"FIO")=$TR($P($G(^TEPI(epis)),"\",1,2),"\"," ")
 .. s mrn=$P($G(VISIT(65)),",",2) s:mrn="" mrn=$P($G(VISIT(20)),$C(1),1)  	 ;номер МК
 .. S @MasO@("User",1,"GrEpis",NGr1,"MRN")=mrn
 .. S @MasO@("User",1,"GrEpis",NGr1,"DateCol")=$TR($$extdate2^SSUTIL4($G(VISIT(12))),"/",".") 	;Дата получения 
 .. S @MasO@("User",1,"GrEpis",NGr1,"Payment")=$P($G(VISIT(9)),$C(1),2) 	 ;плательщик
 .. S @MasO@("User",1,"GrEpis",NGr1,"Polic")=$G(VISIT(8)) 	 				 ;полис
 .. S @MasO@("User",1,"GrEpis",NGr1,"Categ")=$P($G(VISIT(94)),$c(1),2)       ;категория
 .. S @MasO@("User",1,"GrEpis",NGr1,"LocPat")=$p($G(VISIT(22)),$c(1),2)		 ;местоположение пациента
 .. S @MasO@("User",1,"GrEpis",NGr1,"Count")=+$G(@Mas@("REPORT-EPIS",epis,"ts"))
 .. i $G(FlagReport)=2 S @MasO@("User",1,"GrEpis",NGr1,"Count-Exec")=+$G(@Mas@("REPORT-EPIS",epis,"ts-Exec")),@MasO@("User",1,"GrEpis",NGr1,"Amount")=+$G(@Mas@("REPORT-EPIS",epis,"ts-Exec-Amount"))
 .. e  S @MasO@("User",1,"GrEpis",NGr1,"Amount")=+$G(@Mas@("REPORT-EPIS",epis,"ts","Amount"))
 .. s TS="",ts="" f  s ts=$o(@Mas@("REPORT-EPIS",epis,"ts",ts)) q:ts=""  d
 ... s tscnt="" f  s tscnt=$o(@Mas@("REPORT-EPIS",epis,"ts",ts,tscnt)) q:tscnt=""  d 
 .... S TS=$S(TS="":"",1:TS_", ")_ts
 .. S @MasO@("User",1,"GrEpis",NGr1,"TS")=TS
 ; ----
 ; флаг "Расшифровка по пользователям"
 i $G(FlagUser)=1 do
 . s NGr1=0,user="" f  s user=$O(@Mas@("REPORT-USER",user)) q:user=""  do
 .. S NGr1=$i(NGr1)
 .. S @MasO@("User",1,"GrUser",NGr1,"NGr")=NGr1
 .. S @MasO@("User",1,"GrUser",NGr1,"Name")=$P($G(^SSU("SSUSR",1,user)),"^",2)_"  ("_user_")"
 .. ; должность - тип персонала ^TTAB("PERTYP","PATH")=Врач-лаборант\P
 .. s type=$P($G(^SSU("SSUSR",1,user)),"^",10)
 .. S:type'="" @MasO@("User",1,"GrUser",NGr1,"TypeUser")=$P($G(^TTAB("PERTYP",type)),"\",1)
 .. S @MasO@("User",1,"GrUser",NGr1,"Count")=+$G(@Mas@("REPORT-USER",user))
 .. S @MasO@("User",1,"GrUser",NGr1,"Amount")=+$G(@Mas@("REPORT-USER",user,"Amount"))
 .. s NGr2=0,pay="" f  s pay=$o(@Mas@("REPORT-USER",user,"pay",pay)) q:pay=""  d
 ... S NGr2=$i(NGr2)
 ... S @MasO@("User",1,"GrUser",NGr1,"GrPay",NGr2,"Name")="("_pay_") "_$P($G(^TTAB("BI",pay)),"\",1) 
 ... S @MasO@("User",1,"GrUser",NGr1,"GrPay",NGr2,"Count")=+$G(@Mas@("REPORT-USER",user,"pay",pay))
 ... S @MasO@("User",1,"GrUser",NGr1,"GrPay",NGr2,"Amount")=+$G(@Mas@("REPORT-USER",user,"pay",pay,"Amount"))
 ... i $G(FlagTS)=1 do
 .... s NGr3=0,ts="" f  s ts=$o(@Mas@("REPORT-USER",user,"pay",pay,"ts",ts)) q:ts=""  d
 ..... S NGr3=$i(NGr3)
 ..... S @MasO@("User",1,"GrUser",NGr1,"GrPay",NGr2,"GrTS",NGr3,"Name")=$e(ts_$j("",6),1,6)_$$BillingItemName(ts) 
 ..... S @MasO@("User",1,"GrUser",NGr1,"GrPay",NGr2,"GrTS",NGr3,"Count")=+$G(@Mas@("REPORT-USER",user,"pay",pay,"ts",ts))
 ..... S @MasO@("User",1,"GrUser",NGr1,"GrPay",NGr2,"GrTS",NGr3,"Amount")=+$G(@Mas@("REPORT-USER",user,"pay",pay,"ts",ts,"Amount"))
 ; ---
 ; входные параметры
 s date1=$o(^TEPIi("AUTHORISED",PAR1-1)),date2=$o(^TEPIi("AUTHORISED",PAR2+1),-1)
 S @MasO@("User",1,"Date1")=$TR($$extdate2^SSUTIL4(date1),"/",".")
 S @MasO@("User",1,"Date2")=$TR($$extdate2^SSUTIL4(date2),"/",".")
 S @MasO@("User",1,"Payment")=$S($G(PAYMENT)="*":"* все",1:PAYMENT)
 S @MasO@("User",1,"Department")=$S($E($G(DEP),1)="*":"* все",1:DEP)	
 S @MasO@("User",1,"FlagTS")=+$G(FlagTS)    		; Флаг "Расшифровка по наборам тестов"
 S @MasO@("User",1,"FlagUser")=+$G(FlagUser) 		; флаг "Расшифровка по пользоватеям"
 S @MasO@("User",1,"FlagPayment")=+$G(FlagPayment) 	; флаг "Расшифровка по плательщикам"
 S @MasO@("User",1,"FlagEpisode")=+$G(FlagEpisode) 	; флаг "Расшифровка по пациентам"
 ;
 s @MasO@("User",1,"NameLaboratoty")=$P($G(^CF("SM",1)),"^",5)  ; название организации (Идентификационная строка 1)
 S @MasO@("User",1,"Footer")=$$Footer^UDFSPARM001($G(USER))     ; подвал: "дата/время печати + пользователь"
 ; "Тип формирования отчета" 1-по дате выполнения"; 2-по дате назначения
 S @MasO@("User",1,"FlagReport")=+$G(FlagReport)
 s @MasO@("User",1,"TypeReport")=$S($G(FlagReport)=1:"выполненных",$G(FlagReport)=2:"назначенных",1:"?")
 ; доп.настройка для таблицы "Расшифровка по пациентам"
 S @MasO@("User",1,"FlagLocPat")=+$G(FlagLocPat)         ;Флаг "Вывести местоположение пациента"
 S @MasO@("User",1,"FlagPayPat")=+$G(FlagPayPat)         ;Флаг "Вывести плательщик/полис пациента"
 S @MasO@("User",1,"FlagMRNPat")=+$G(FlagMRNPat)         ;Флаг "Вывести № МК пациента"
 S @MasO@("User",1,"FlagCategPat")=+$G(FlagCategPat)     ;Флаг "Вывести столбец Категория пациента"
 ;
 ;M ^zz=@MasO     ;@@@
 ;
 S MSGERROR=$$WriteFileLabTrakClient^REPORTSPB($NA(@MasO),"CLNRUS05.xsl",USER,$get(PAR))
 ;i $E(%Ret)="*" s MSGERROR="100^Ошибка:"_$E(%Ret,2,$L(%Ret)) quit
 ; Возвращаем:  0^сообщение^имя файла^программа для открытия файла ( EXPLORER, EXCEL, WINWORD ) / 100^сообщение об ошибке
 ;s MSGERROR="0^^"_%Ret_"^WINWORD"  ;"^WINWORD  ;^EXCEL"  ;^EXPLORER"
 } catch(e) { set ok=e.AsStatus() }
 if 'ok set MSGERROR="100^"_$system.Status.GetErrorText(ok)
 quit ok

	// Стоиммость pBillingItem для плательщика pPayer по эпизоду pEpis на дату авторизации pAuthDate
GetBillingItemAmount(pPayer,pEpis, pAuthDate, pBillingItem, pCito, pGlbIndex) public 
{
	//set ^test("compare","price05aBeg",pEpis,pBillingItem)=pPayer_$c(1)_pAuthDate
	If $Get(pAuthDate)=""  Quit 0  //s ^test("compare","nodate",pEpis,pBillingItem)=pPayer Quit 0
	if $get(pGlbIndex)="" set pGlbIndex=$name(^||inv)
	if '$data(@pGlbIndex) do CreateIndex(pGlbIndex)
	
	set pricedate=$order(@pGlbIndex@(pPayer,pAuthDate+0.5),-1)
	if pricedate="" Quit 0  //set ^test("compare","nopricedate",pEpis,pBillingItem)=pPayer_$c(1)_pAuthDate Quit 0
	set priceid=$order(@pGlbIndex@(pPayer,pricedate,"")) 
	if priceid="" Quit 0  //set ^test("compare","nopriceid",pEpis,pBillingItem)=pPayer_$c(1)_pAuthDate Quit 0
	if '$data(^TSCH(priceid,"AMOUNT",pPayer,pricedate,pBillingItem)) //set ^test("compare","noprice",pEpis,pBillingItem)=pPayer_$c(1)_priceid
	//set ^test("compare","price05a",pEpis,pBillingItem)=pPayer_$c(1)_pricedate_$c(1)_priceid
	set amount=$piece($get(^TSCH(priceid,"AMOUNT",pPayer,pricedate,pBillingItem)),"\",1) 

 	Set koef=1
 	If pCito="U" Set koef=+$get(@pGlbIndex@(pPayer))
	
 	Quit koef*amount 
}
 

	// Имя услуги(либо набор тестов, либо супер набор) по ее коду 
BillingItemName(pBillingItem) public {
	If $Get(pBillingItem)="" Quit ""
	Set result=""
	If ##class(User.CTTestSet).%ExistsId(pBillingItem) {
		Set testsetobj=##class(User.CTTestSet).%OpenId(pBillingItem)
		If $IsObject(testsetobj) Set result=testsetobj.CTTSName
	} Else {
		Set supersetobj=##class(User.CTSuperSet).%OpenId(pBillingItem)
		If $IsObject(supersetobj) Set result=supersetobj.CTSSDesc
	}
	Quit result
}		
]]></Routine>
</Export>
