<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTCLNRUS15" type="INT" languagemode="0"><![CDATA[
PRTCLNRUS15   ;SPARM; Сервис - Список наборов тестов;@gol;
 ;
 q
 ; Отчет CLNRUS15  +  CLNRUS15.xsl  + DLL: CLNSPARM007.clsSTART
 ;==================================================================================================================
CREATE(REPID,PAR,USER,%msql) ; create report
 n (REPID,PAR,USER,%msql) k ^TMP($zn,$j)
 q
 ;==================================================================================================================
 ; Формирование VB-формы для отчета (задаем входные параметры для формирования отчета)
 ; Возвращает:   имя массива  
 ;                        
FORM(USER) new (USER) s USER=$G(USER) 
 S Par="^TEMP($J)" k @Par 
 ; список отделов
 s @Par@("PAR1a")="Label   : 100 : 100 : 1000 : 300 : Отдел:"
 s default=$$ListDep^UDFSPARM001($G(USER),"VB","PAR1")
 s @Par@("PAR1")="ComboBox: 1000 : 100 : 4000 : 300 : :True: "_default_" :List"         ;Standart
 ; 
 ; флаг "Выводить только активные наборы тестов"
 s @Par@("PAR2")="CheckBox: 100 : 600 : 200  : 300 : : : 1 "
 s @Par@("PAR2a")="Label   : 500 : 600 : 5000 : 300 : Только активные наборы тестов:"
 ;
 ; флаги для настройки вывода полей таблицы
 s @Par@("PAR3a")="Label   : 100 : 1200 : 5000 : 300 : Дополнительная настройка полей таблицы:"
 s @Par@("PAR4")="CheckBox: 100 : 1500 : 200  : 300 : : : 0 "
 s @Par@("PAR4a")="Label   : 400 : 1500 : 3000 : 300 : Секция:"
 s @Par@("PAR5")="CheckBox: 100 : 1800 : 200  : 300 : : : 0 "
 s @Par@("PAR5a")="Label   : 400 : 1800 : 3000 : 300 : Образец:"
 s @Par@("PAR10")="CheckBox: 100 : 2100 : 200  : 300 : : : 0 "
 s @Par@("PAR10a")="Label   : 400 : 2100 : 3000 : 300 : Контейнер:"
 s @Par@("PAR6")="CheckBox: 100 : 2400 : 200  : 300 : : : 0 "
 s @Par@("PAR6a")="Label   : 400 : 2400 : 3000 : 300 : Word-шаблон:"
 s @Par@("PAR7")="CheckBox: 100 : 2700 : 200  : 300 : : : 0 "
 s @Par@("PAR7a")="Label   : 400 : 2700 : 3000 : 300 : Рабочий лист:"
 s @Par@("PAR8")="CheckBox: 100 : 3000 : 200  : 300 : : : 0 "
 s @Par@("PAR8a")="Label   : 400 : 3000 : 3000 : 300 : Анализатор:"
 s @Par@("PAR9")="CheckBox: 100 : 3300 : 200  : 300 : : : 0 "
 s @Par@("PAR9a")="Label   : 400 : 3300 : 3000 : 300 : Себестоимость/стоимость:"
 ; ---
 s @Par@("PAR11")="CheckBox: 4100 : 1500 : 200  : 300 : : : 0 "
 s @Par@("PAR11a")="Label   : 4500 : 1500 : 4000 : 300 : Номер последов.вывода на экране:"
 s @Par@("PAR12")="CheckBox: 4100 : 1800 : 200  : 300 : : : 0 "
 s @Par@("PAR12a")="Label   : 4500 : 1800 : 4000 : 300 : Номер последов.вывода при печати:"
 s @Par@("PAR13")="CheckBox: 4100 : 2100 : 200  : 300 : : : 0 "
 s @Par@("PAR13a")="Label   : 4500 : 2100 : 4000 : 300 : Наименование отчета при печати:"
 s @Par@("PAR14")="CheckBox: 4100 : 2400 : 200  : 300 : : : 0 "
 s @Par@("PAR14a")="Label   : 4500 : 2400 : 4000 : 300 : Флаг ""Не разбивать при печати"":"
 s @Par@("PAR15")="CheckBox: 4100 : 2700 : 200  : 300 : : : 0 "
 s @Par@("PAR15a")="Label   : 4500 : 2700 : 4000 : 300 : Тип отчета для врача/местоположения"
 s @Par@("PAR16")="CheckBox: 4100 : 3000 : 200  : 300 : : : 0 "
 s @Par@("PAR16a")="Label   : 4500 : 3000 : 4000 : 300 : Время выполнения"
 ; ---
 s @Par@("PAR17a")="Label   : 100 : 3800 : 5000 : 300 : Дополнительная проверка Шаблона набора тестов:"
 s @Par@("PAR18")="CheckBox: 100 : 4100 : 200  : 300 : : : 0 "
 s @Par@("PAR18a")="Label   : 500 : 4100 : 4000 : 300 :Создан ли Шаблон (Да/Нет):"
 s @Par@("PAR19")="CheckBox: 100 : 4400 : 200  : 300 : : : 0 "
 s @Par@("PAR19a")="Label   : 500 : 4400 : 4000 : 300 : Кол-во строк в шаблоне:"
 s @Par@("PAR20")="CheckBox: 100 : 4700 : 200  : 300 : : : 0 "
 s @Par@("PAR20a")="Label   : 500 : 4700 : 4000 : 300 : Есть ли Обязательные поля в Шаблоне (Да/Нет):"
 ; ---
 s @Par@("PAR21")="CheckBox: 5100 : 3800 : 200  : 300 : : : 0 "
 s @Par@("PAR21a")="Label   : 5400 : 3800 : 3000 : 300 : Национальный код услуги:"
 s @Par@("PAR22")="CheckBox: 5100 : 4100 : 200  : 200 : : : 0 "
 s @Par@("PAR22a")="Label   : 5400 : 4100 : 3000 : 500 : Полное и Сокращеное нац.наименование услуги:"
 ; -
 ; настройка формы
 s @Par@("form")="Список наборов тестов:500:300:Формиров.:Выход"
 q "^TEMP("_$J_")" 
 ;==================================================================================================================
 ; Формирование отчета согласно заданным критериям (передаются из формы VB)
 ; Формат PAR = поле $С(3) значение { $C(1) значение $C(1) значение } $C(2) поле $С(3) значение { $C(2) поле ... }
 ; Возвращает:   0^сообщение^имя файла^программ для открытия файла ( EXPLORER, EXCEL, WINWORD )
 ;             100^сообщение об ошибке
 ; 
START(USER,PAR) n (USER,PAR)  s USER=$G(USER),PAR=$G(PAR) 
 i $G(PAR)="" q "100^нет входных параметров!"    ;при выходе из DLL была нажата кнопка Отмена
 ;
 ;k ^zz   m ^zz("FORM")=^TEMP($j) s ^zz="$j="_$j_" ; $h="_$h   s ^zz("PAR")=PAR       ;@@@
 k ^TEMP($j),^TEMP($zn,$J)
 s Mas="^TEMP($zn,$J)" k @Mas
 s MSGERROR=""            
 d INIT i $g(MSGERROR)'="" quit MSGERROR
 d XML
 k ^TEMP($zn,$J),^TEMP($j)
 q $G(MSGERROR)  ;код^сообщение (об ошибке) для возврата в DLL^имя файла^имя проги для открытия файла
 ;------------------------------------------------
INIT ; инициализация входных параметров
 New mas,str,str1,str2,i,j,pay
 d PARAM^REPORTSPB(PAR,"mas")
 s j="" f  s j=$O(mas(j)) q:j=""  s @j=$g(mas(j))
 ; отдел
 i $G(PAR1)="" s MSGERROR="100^Не определено значение <Отдел>" q
 k DEP
 if PAR1="0" do     ;* Все
 . s default=$$ListDep^UDFSPARM001($G(USER),"INIT","DEP") m DEP=^TEMP($J,"DEP")
 else  do  q:MSGERROR'=""
 . i '$D(^TTAB("DEP",PAR1)) s MSGERROR="100^В Labtrake нет кода отдела <"_DEP_">" q
 . s DEP(PAR1)=""
 ; флаг "Выводить только активные наборы тестов"
 s FlagActiveTS=+$G(PAR2)
 ; флаги для настройки вывода полей таблицы
 s FlagSect=+$G(PAR4)		;Секция
 s FlagSpec=+$G(PAR5)		;Образец
 s FlagWord=+$G(PAR6)		;Word-шаблон
 s FlagWS=+$G(PAR7)			;Рабочий лист
 s FlagMIF=+$G(PAR8)		;Анализатор
 s FlagSum=+$G(PAR9)		;Себестоимость/стоимость
 s FlagCont=+$G(PAR10)		;Контейнер
 ; ---
 s FlagNP1=+$G(PAR11)		;Номер последов.вывода на экран
 s FlagNP2=+$G(PAR12)		;Номер последов.вывода при печати
 s FlagRepName=+$G(PAR13)	;Наименование отчета при печати
 s FlagSTS=+$G(PAR14)		;Флаг "Не разбивать при печати"
 s FlagDRP=+$G(PAR15)		;Тип отчета для врача/местоположения
 s FlagTime=+$G(PAR16)		;Время выполнения
 ; ---
 s FlagTSL1=+$G(PAR18)		;Создан ли Шаблон (Да/Нет):"
 s FlagTSL2=+$G(PAR19)		;Кол-во строк в шаблоне:"
 s FlagTSL3=+$G(PAR20)		;Есть ли Обязательные поля в Шаблоне (Да/Нет):"
 ; ---
 s FlagNTC=+$G(PAR21)		;Национальный код услуги
 s FlagNTCdesc=+$G(PAR22)	;Полное и Сокращеное нац.наименование услуги
 q
 ;------------------------------------------------
XML    ; обработка данных и формирование XML ...
  s Mas="^TEMP($zn,$J)" k @Mas
  S MasXML="^TEMP($zn,$J,""XML"")"
  ; 
  S NN1=0,dep="" f  s dep=$O(DEP(dep)) q:dep=""  do
  . s ts=dep f  s ts=$O(^TTAB("TS",ts)) q:ts=""  q:$E(ts,1)'=dep  do
  .. s str=$G(^TTAB("TS",ts)) q:str=""
  .. i $G(FlagActiveTS)=1 i $p(str,"\",12)="N" quit
  .. S NN1=NN1+1
  .. ; N п/п
  .. s @MasXML@("User",1,"Next",NN1,"NN")=NN1
  .. ; код набора
  .. s @MasXML@("User",1,"Next",NN1,"Code")=ts       
  .. ; наименование набора
  .. s @MasXML@("User",1,"Next",NN1,"Desc")=$p(str,"\",1)         
  .. ; синоним набора
  .. s @MasXML@("User",1,"Next",NN1,"Synon")=$p(str,"\",2)         
  .. ; флаг Active
  .. s @MasXML@("User",1,"Next",NN1,"FlagActive")=$p(str,"\",12)         
  .. ; секция
  .. i +$G(FlagSect)=1 do
  ... s Section=$p(str,"\",52)
  ... s @MasXML@("User",1,"Next",NN1,"Section")=$S(Section="":"",1:$P($G(^TTAB("DS",Section)),"\",1))
  .. ; номер последов. вывода на экран
  .. i +$G(FlagNP1)=1 s @MasXML@("User",1,"Next",NN1,"DisplaySeq")=$p(str,"\",42) 
  .. ; Номер последов. печати
  .. i +$G(FlagNP2)=1 s @MasXML@("User",1,"Next",NN1,"PrintSeq")=$p(str,"\",18) 
  .. ; Наименование отчета
  .. i +$G(FlagRepName)=1 s @MasXML@("User",1,"Next",NN1,"ReportName")=$p(str,"\",17) 
  .. ;  Флаг "Не разбивать при печати" 
  .. i +$G(FlagSTS)=1 do
  ... s x1=$p(str,"\",25) 	;Stop Test Splitting   [MultiChoice: Yes||Y, No||N, Test Body||T ] ***
  ... s @MasXML@("User",1,"Next",NN1,"StopTestSplitting")=$S(x1="Y":"Не разбивать",x1="N":"Разбивать",x1="T":"Не разбивать только тело",1:x1)
  .. ; Тип отчета для врача/местоположения - ^TTAB("RP",{CTRG Code})
  .. i +$G(FlagDRP)=1 do
  ... s typeD=$p(str,"\",21),typeH=$p(str,"\",19) ; CTTS_ReportPage_Doctor_DR/ CTTS_ReportPage_Hospital_DR (CT ReportPage)
  ... s @MasXML@("User",1,"Next",NN1,"PageDoctor")=$S(typeD="":"",1:$p($g(^TTAB("RP",typeD)),"\",1))
  ... s @MasXML@("User",1,"Next",NN1,"PageHospital")=$S(typeH="":"",1:$p($g(^TTAB("RP",typeH)),"\",1))
  .. ; ---
  .. ; Время выполнения набора тестов
  .. ; ( время на 1 исследование в день / время на каждое последующее исслед. в течении дня / с приоритетом "срочно")
  .. i +$G(FlagTime)=1 s @MasXML@("User",1,"Next",NN1,"TimeExecute")=$p(str,"\",9) ; CTTS_CompletionTime
  .. ; ---
  .. ; Национальный код услуги 
  .. i +$G(FlagNTC)=1 do
  ... s codeNTC=$p(str,"\",31)
  ... s @MasXML@("User",1,"Next",NN1,"NationalNumber")=codeNTC 		;CTTS NationalNumber
  ... s descNTC=$TR($S(codeNTC="":"",1:$P($G(^TTAB("CTNTC",codeNTC)),"\",1)),"_"," ")
  ... s synonNTC=$S(codeNTC="":"",1:$P($G(^TTAB("CTNTC",codeNTC)),"\",2))
  ... s flagNTC=$S(codeNTC="":0,'$D(^TTAB("CTNTC",codeNTC)):1,1:0)
  ... s @MasXML@("User",1,"Next",NN1,"NationalNameShort")=$g(synonNTC) 	;CTTS NationalNameShort  	
  ... s @MasXML@("User",1,"Next",NN1,"NationalNameLong")=$S(flagNTC=1:"???",1:$g(descNTC)) 	;CTTS NationalNameLong
  .. ; Word-шаблон
  .. i +$G(FlagWord)=1 do
  ... s x1=$p(str,"\",29),x2=$p(str,"\",28) ;Word RTF
  ... s x3=$p(str,"\",47),x4=$p(str,"\",48) ;Word Result (MS)
  ... i x1="Y"!(x3="Y") s @MasXML@("User",1,"Next",NN1,"Word")=$S(x1="Y":"RTF: "_x2,1:"")_" "_$S(x3="Y":"WORD: "_x4,1:"")
  .. ; Флаг "Себестоимость/стоимость"
  .. i +$G(FlagSum)=1 do
  ... s @MasXML@("User",1,"Next",NN1,"Cost")=$p(str,"\",6) 	;Test Message
  ... s @MasXML@("User",1,"Next",NN1,"Price")=$p(str,"\",4) ;Quotation Fee
  .. ; образцы
  .. i +$G(FlagSpec)=1 do
  ... s Str="",i="" f  s i=$O(^TTAB("TS",ts,1,i)) q:i=""  do
  .... s SpecDesc=$P($G(^TTAB("SPEC",i)),"\",1)
  .... s Str=$S(Str="":"",1:Str_"; ")_SpecDesc_" ("_$P($G(^TTAB("TS",ts,1,i)),"\",1)_")" 
  ... s @MasXML@("User",1,"Next",NN1,"Specimens")=Str
  .. ; контейнеры
  .. i +$G(FlagCont)=1 do
  ... s Str="",i="" f  s i=$O(^TTAB("TS",ts,"SC",i)) q:i=""  do
  .... s j="" f  s j=$O(^TTAB("TS",ts,"SC",i,j)) q:j=""  do
  ..... s ContDesc=$P($G(^TTAB("CON",i)),"\",1)
  ..... s SpecDesc=$P($G(^TTAB("SPEC",j)),"\",1)
  ..... s Str=$S(Str="":"",1:Str_"; ")_ContDesc ;_" (образец: "_SpecDesc_")"
  ... s @MasXML@("User",1,"Next",NN1,"Container")=Str
  .. ; Флаг "Рабочий лист"
  .. i +$G(FlagWS)=1 do
  ... s Str="",i="" f  s i=$O(^TTAB("TS",ts,6,i)) q:i=""  s Str=$S(Str="":"",1:Str_"; ")_"("_i_") "_$P($G(^TTAB("WS",i)),"\",1)
  ... s @MasXML@("User",1,"Next",NN1,"WorkSheet")=Str
  .. ; Флаг "Анализатор"
  .. i +$G(FlagMIF)=1 do
  ... s Str="",i="" f  s i=$O(^TMIF(i)) q:i=""  do:$D(^TMIF(i,0,ts))
  .... s Str=$S(Str="":"",1:Str_"; ")_i  ;_") "_$P($G(^TMIF(i)),"\",1)
  ... s @MasXML@("User",1,"Next",NN1,"Machine")=Str
  .. ; Дополнительная проверка Шаблона набора тестов
  .. ; Флаг "Создан ли Шаблон (Да/Нет)"
  .. i $G(FlagTSL1)=1 do
  ... s @MasXML@("User",1,"Next",NN1,"TSL-Create")=$S($D(^TTAB("TS",ts,0)):"Да",1:"НЕТ")
  .. ; Флаг "Кол-во строк в шаблоне"
  .. i $G(FlagTSL2)=1 do
  ... s Count=0,ind="" f  s ind=$O(^TTAB("TS",ts,0,ind)) q:ind=""  s Count=$i(Count)
  ... s @MasXML@("User",1,"Next",NN1,"TSL-Count")=Count
  .. ; Флаг "Есть ли Обязательные поля в Шаблоне (Да/Нет)"
  .. i $G(FlagTSL3)=1 do
  ... s Count=0,ind="" f  s ind=$O(^TTAB("TS",ts,0,ind)) q:ind=""  do
  .... s ss=^(ind),tc=$P(ss,"\",8) q:tc=""
  .... i $P(ss,"\",6)'="M" quit    ;entry type (Optional/Mandatory)
  .... s Count=$i(Count)
  ... s @MasXML@("User",1,"Next",NN1,"TSL-Mandatory")=$S(Count=0:"НЕТ",1:Count)
  ;
  ; входные параметры
  S @MasXML@("User",1,"Department")=$S(PAR1="":"",PAR1="0":"* Все",1:PAR1_" - "_$P($G(^TTAB("DEP",PAR1)),"\",1))
  S @MasXML@("User",1,"FlagActiveTS")=+$G(FlagActiveTS)	;флаг "Выводить только активные наборы тестов"
  S @MasXML@("User",1,"FlagSect")=+$G(FlagSect) 	; Секция
  S @MasXML@("User",1,"FlagSpec")=+$G(FlagSpec) 	; Образец
  S @MasXML@("User",1,"FlagCont")=+$G(FlagCont) 	; Контейнер
  S @MasXML@("User",1,"FlagWord")=+$G(FlagWord) 	; Word-шаблон
  S @MasXML@("User",1,"FlagWS")=+$G(FlagWS)    		; Рабочий лист
  S @MasXML@("User",1,"FlagMIF")=+$G(FlagMIF)   	; Анализатор
  S @MasXML@("User",1,"FlagSum")=+$G(FlagSum)  		; Себестоимость/стоимость
  S @MasXML@("User",1,"FlagNTC")=+$G(FlagNTC)  		; Национальный код услуги
  S @MasXML@("User",1,"FlagNTCdesc")=+$G(FlagNTCdesc)  	;Полное и Сокращеное нац.наименование услуги
  ; ---
  S @MasXML@("User",1,"FlagNP1")=+$G(FlagNP1)    		; Номер последов.вывода на экран
  S @MasXML@("User",1,"FlagNP2")=+$G(FlagNP2)    		; Номер последов.вывода при печати
  S @MasXML@("User",1,"FlagRepName")=+$G(FlagRepName)   ; Наименование отчета при печати
  S @MasXML@("User",1,"FlagSTS")=+$G(FlagSTS)    		; Флаг "Не разбивать при печати"
  S @MasXML@("User",1,"FlagDRP")=+$G(FlagDRP)    		; Тип отчета для врача/местоположения
  S @MasXML@("User",1,"FlagTime")=+$G(FlagTime)    		; Время выполнения
 
  ; Дополнительная проверка Шаблона набора тестов
  s @MasXML@("User",1,"FlagTSL1")=+$G(FlagTSL1)		; Создан ли Шаблон (Да/Нет):"
  s @MasXML@("User",1,"FlagTSL2")=+$G(FlagTSL2)		; Кол-во строк в шаблоне:"
  s @MasXML@("User",1,"FlagTSL3")=+$G(FlagTSL3)		; Есть ли Обязательные поля в Шаблоне (Да/Нет):"
  ;
  s @MasXML@("User",1,"NameLaboratoty")=$P($G(^CF("SM",1)),"^",5)  ; название организации (Идентификационная строка 1)
  S @MasXML@("User",1,"Footer")=$$Footer^UDFSPARM001($G(USER))     ; подвал: "дата/время печати + пользователь"
  ;
  ;log
  ;k ^zz M ^zz("XML")=@MasXML     ;@@@
  ;
  S %Ret=$$WriteFileLabTrakClient^REPORTSPB($NA(@MasXML),"CLNRUS15.xsl",USER)
  i $E(%Ret)="*" s MSGERROR="100^Ошибка:"_$E(%Ret,2,$L(%Ret)) quit
  ; Возвращаем:  0^сообщение^имя файла^программа для открытия файла ( EXPLORER, EXCEL, WINWORD ) / 100^сообщение об ошибке
  s MSGERROR="0^^"_%Ret_"^WINWORD"  ;"^WINWORD  ;^EXCEL"  ;^EXPLORER"
  quit 
  
]]></Routine>
</Export>
