<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Routine name="PRTCLNRUS54" type="INT" languagemode="0"><![CDATA[
PRTCLNRUS54   ;Отчет по контролю качества ; liv
 ;
 q
 ; Отчет CLNRUS54  +  CLNRUS54.xsl  + DLL: CLNSPARM007.clsSTART
 ;==================================================================================================================
CREATE(REPID,PAR,USER,%msql) ; create report
 n (REPID,PAR,USER,%msql) k ^TMP($zn,$j)
 q
 ;==================================================================================================================
FORM(USER) new (USER) s USER=$G(USER) 
 S Par="^TEMP($J)" k @Par 
 
  ; период дат
 s @Par@("PAR1a")="Label   : 100 : 200 : 1000 : 300 : Дата от:"
 s @Par@("PAR1")="DateText: 1300: 200 : 1100 : 300 : t-7 :True"
 s @Par@("PAR2a")="Label   : 100: 600 : 1000 : 300 : Дата до:"
 s @Par@("PAR2")="DateText: 1300: 600 : 1100 : 300 : t:True"
 
 ; список приборов
 set @Par=""
 s @Par@("PAR3a")="Label   : 100 : 1000 : 1000 : 300 : Прибор:"
 ;s @Par@("PAR3")="ListBox: 1300 : 1000 : 4000 : 300 : :True:::List"         ;Standart
 set default="0"
 s @Par@("PAR3")="ComboBox: 1300 : 1000 : 4000 : 300 : :True: "_default_" :List" ;Standart
 set id=""
 for {
	 set id=$order(^TMIF(id),1,record) if id="" quit
	 set name=$piece(record,"\",1)
	 ;set @Par@("PAR3",name_$char(4)_id)=name
	 set @Par@("PAR3",id)=name
 }
 ;if $data(@Par@("PAR3"))>1 set @Par@("PAR3",0)="Все приборы"
 ;
 ; настройка формы
 s @Par@("form")="Отчет для анализа работы прибора:500:300:Формиров.:Выход"
 m ^test("par")=@Par
 q "^TEMP("_$J_")" 
 ;==================================================================================================================
 ; Формирование отчета согласно заданным критериям (передаются из формы VB)
 ; Формат PAR = поле $С(3) значение { $C(1) значение $C(1) значение } $C(2) поле $С(3) значение { $C(2) поле ... }
 ; Возвращает:   0^сообщение^имя файла^программ для открытия файла ( EXPLORER, EXCEL, WINWORD )
 ;             100^сообщение об ошибке
 ; 
START(USER,PAR) n (USER,PAR)  s USER=$G(USER),PAR=$G(PAR) 
 s ^test("par")=PAR
 i $G(PAR)="" q "100^нет входных параметров!"    ;при выходе из DLL была нажата кнопка Отмена
 ;
 ;k ^zz   m ^zz("FORM")=^TEMP($j) s ^zz="$j="_$j_" ; $h="_$h   s ^zz("PAR")=PAR       ;@@@
 k ^TEMP($j),^TEMP($zn,$J)
 s Mas="^TEMP($zn,$J)" k @Mas
 s MSGERROR=""            
 d INIT i $g(MSGERROR)'="" quit MSGERROR
 g XML
 ;------------------------------------------------
INIT ; инициализация входных параметров
 New mas,str,str1,str2,i,j,pay
 d PARAM^REPORTSPB(PAR,"mas")
 s j="" f  s j=$O(mas(j)) q:j=""  s @j=$g(mas(j))
  ; период дат
 i $G(PAR1)="" s MSGERROR="100^Не определено значение <Дата от>" q
 i $G(PAR2)="" s MSGERROR="100^Не определено значение <Дата до>" q
 ; прибор
 i $G(PAR3)="" s MSGERROR="100^Не определено значение <Прибор>" q
 quit
 
XML   ; обработка данных и формирование XML ...

  s Mas="^TEMP($zn,$J)" k @Mas
  S MasXML="^TEMP($zn,$J,""XML"")" kill @MasXML

  kill devices set devices(PAR3)="" 
  
  set @MasXML@("User",1,"DateFrom")=$TR($$extdate2^SSUTIL4(PAR1),"/",".")
  set @MasXML@("User",1,"DateTo")=$TR($$extdate2^SSUTIL4(PAR2),"/",".")
  
  set PAR1=PAR1-0.5
  
  set mi=""
  for {
	  set mi=$order(devices(mi)) if mi="" quit
	  set devicename=$piece($get(^TMIF(mi)),"\",1)
	  kill @MasXML@("Data")
	  set material=""
	  for {
		  set material=$order(^TTQC(material)) if material="" quit
		  set lot=""
		  for {
			  set lot=$order(^TTQC(material,"LOT",lot)) if lot="" quit
			  set testcode=""
			  for {
				  set testcode=$order(^TTQC(material,"LOT",lot,"TYPE","M",mi,"TEST",testcode)) if testcode="" quit
				  set level=""
				  for {
					  set level=$order(^TTQC(material,"LOT",lot,"TYPE","M",mi,"TEST",testcode,"DATA",level)) if level="" quit
					  set date=PAR1
					  for {
						  set date=$order(^TTQC(material,"LOT",lot,"TYPE","M",mi,"TEST",testcode,"DATA",level,date)) if date=""||(date>PAR2) quit  
						  set num=""
						  for {
							  set num=$order(^TTQC(material,"LOT",lot,"TYPE","M",mi,"TEST",testcode,"DATA",level,date,num),1,record) if num="" quit
							  set time=$piece(record,"\",4),result=$piece(record,"\",1)
							  set @MasXML@("Data",testcode,material,lot,level,date_$char(1)_time_$char(1)_num)=result
							    
						  }
					  }
				  }  
			  }
		  }
	  }
	  kill @MasXML@("Data2")
      set testcode=""
      for {
	      set testcode=$order(@MasXML@("Data",testcode)) if testcode="" quit 
	      set testcodeAnal=$piece($get(^TMIF(mi,2,testcode)),"\",1) 
	      set testname=$piece($get(^TTAB("TC",testcode)),"\",1)
	      set key=testname_$char(1)_testcodeAnal_$char(1)_testcode
	      merge @MasXML@("Data2",key)=@MasXML@("Data",testcode)
      }
   
      kill @MasXML@("Data")
  
      set test="",nn=0
      for {
	    set test=$order(@MasXML@("Data2",test)) if test="" quit 
	    set testcodeAnal=$piece(test,$char(1),2)
	    set testname=$piece(test,$char(1),1)
	    set material=""
	    for {
		  set material=$order(@MasXML@("Data2",test,material)) if material="" quit
		  set materialName=$piece($get(^TTQC(material)),"\",1)
		  set lot=""
		  for {
			  set lot=$order(@MasXML@("Data2",test,material,lot)) if lot="" quit
			  set lotname=$piece($get(^TTQC(material,"LOT",lot)),"\",1)
			  set level=""
			  for {
				  set level=$order(@MasXML@("Data2",test,material,lot,level)) if level="" quit
				  set levelname=$piece($get(^TTQC(material,"LOT",lot,"LEVEL",level)),"\",1)
				  set datetime=""
				  for {
					  set datetime=$order(@MasXML@("Data2",test,material,lot,level,datetime),1,record) if datetime="" quit
					  set nn=nn+1
	                  set @MasXML@("User",1,"QC",nn,"Device")=devicename
	                  set @MasXML@("User",1,"QC",nn,"TestName")=testname
	                  set @MasXML@("User",1,"QC",nn,"TestCode")=testcodeAnal
	                  set @MasXML@("User",1,"QC",nn,"Material")=materialName
	                  set @MasXML@("User",1,"QC",nn,"LotCode")=lot
	                  set @MasXML@("User",1,"QC",nn,"LotName")=lotname
	                  set @MasXML@("User",1,"QC",nn,"Level")=level
	                  set @MasXML@("User",1,"QC",nn,"LevelName")=levelname
	                  set @MasXML@("User",1,"QC",nn,"DateTime")=$zdate($piece(datetime,$char(1),1),4)_" "_$ztime($piece(datetime,$char(1),2))
	                  set @MasXML@("User",1,"QC",nn,"Result")=record
	                  set @MasXML@("User",1,"QC",nn,"Odd")=$select(nn#2'=0:"1",1:"0")
				  }
			  }
		  }
	    }  
	  }

  }
  kill @MasXML@("Data2")	
  ;log
  k ^zz M ^zz("XML")=@MasXML     ;@@@
  ;
  S %Ret=$$WriteFileLabTrakClient^REPORTSPB($NA(@MasXML),"CLNRUS54.xsl",USER)
  i $E(%Ret)="*" q "100^Ошибка:"_$E(%Ret,2,$L(%Ret)) 
  ; Возвращаем:  0^сообщение^имя файла^программа для открытия файла ( EXPLORER, EXCEL, WINWORD ) / 100^сообщение об ошибке
  k ^TEMP($zn,$J),^TEMP($j)
  quit "0^^"_%Ret_"^EXCEL"  ;"^WINWORD  ;^EXCEL"  ;^EXPLORER"  

]]></Routine>
</Export>
