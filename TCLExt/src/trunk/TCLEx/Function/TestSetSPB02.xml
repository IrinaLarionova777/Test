<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Function.TestSetSPB02">
<Super>%RegisteredObject</Super>
<TimeCreated>63025,77715.256583</TimeCreated>

<Method name="GetResultInfo">
<Description>
Формирование буфера pGlb с отображаемым результатом по набору тестов pTestSetId</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pTestSetId:%String,pLanguage:%String,pGlb:%String</FormalSpec>
<PublicList>PLIST</PublicList>
<Implementation><![CDATA[
	Set pLanguage=$Get(pLanguage)
	Kill @pGlb
	Kill PLIST,DataIds
	Set sqlcode=$$results^LVBVISTS(pTestSetId,"","N")
	//ZW PLIST
	Set i=""
	For  {
		Set i=$Order(PLIST(i),1,vals)
		If i="" Quit
		Set tsdataid=$Piece(vals,$Char(1),1)
		Set code=$Piece(vals,$Char(1),2)
		If (tsdataid="")||(code="") Continue
		Set DataIds(code)=tsdataid
		Set @pGlb@(tsdataid,"SequenceNumber")=i
		Set @pGlb@(tsdataid,"Code")=code
		Set @pGlb@(tsdataid,"RawValue")=$Piece(vals,$Char(1),3)
		Set @pGlb@(tsdataid,"FreeText")=$$RemomeNotPrintableCharacters^KSUTIL1($Piece(vals,$Char(1),4))
		Set flag=$Piece(vals,$Char(1),5)
		If (flag="A")||(flag="H")||(flag="L") {
			Set @pGlb@(tsdataid,"Abnormal")=1
		}
	}
	If pLanguage="" {
		Set pLanguage=$Piece($Get(^CF("SM",1)),"^",10)
	}	
	//Set language=$Piece($Get(^CF("SM",1)),"^",10)
	Kill PLIST
	Set sqlcode=$$getit^LVBCTTSF(,pTestSetId,"Y",,,"",,pLanguage)
	//ZW PLIST
	Set i=""
	For  {
		Set i=$Order(PLIST(i),1,vals)
		If i="" Quit
		Set code=$Piece(vals,$Char(2),10)
		If (code="")||('$Data(DataIds(code))) Continue
		Set tsdataid=$Get(DataIds(code))
		If tsdataid="" Continue
		Set value=$Get(@pGlb@(tsdataid,"RawValue"))
		Set type=$Piece(vals,$Char(2),18)
		//W !,code,"=",type,"=",value
		If ((type="S")||(type="B1"))&&(value'="") {
			If (pLanguage'="")&&($Data(^TTAB("TC",code,"2L",value,pLanguage,"T"))) {
				Set codevalue=value
				Set value=""
				Set j=""
				For {
					Set j=$Order(^TTAB("TC",code,"2L",codevalue,pLanguage,"T",j),1,val)
					If j="" Quit
					If j=0 Continue
					If (value'="")&&('$$PunctuationCharacter^KSUTIL1($Extract(value,$Length(value)))) {
						Set value=value_" "
					}
					Set value=value_val	
				}
			} ElseIf $Data(^TTAB("TC",code,2,value,"T")) {
				Set codevalue=value
				Set value=""
				Set j=""
				For {
					Set j=$Order(^TTAB("TC",code,2,codevalue,"T",j),1,val)
					If j="" Quit
					If j=0 Continue
					If (value'="")&&('$$PunctuationCharacter^KSUTIL1($Extract(value,$Length(value)))) {
						Set value=value_" "
					}
					Set value=value_val	
				}
			}
		}
		If (type="X")&&(value="") {
			Set value=$Get(@pGlb@(tsdataid,"FreeText"))
		}
		If (type="V") {
			Set value=$Piece($Get(^TTAB("BUG",value)),"\",1)
		}		
		Set @pGlb@(tsdataid,"Value")=value
		Set @pGlb@(tsdataid,"Description")=$Piece(vals,$Char(2),3)
		Set @pGlb@(tsdataid,"Units")=$Piece(vals,$Char(2),17)
		Set @pGlb@(tsdataid,"MinRange")=$Piece(vals,$Char(2),22)
		Set @pGlb@(tsdataid,"MaxRange")=$Piece(vals,$Char(2),23)
		
		Set dataobj=##class(User.EPVisitTestSetData).%OpenId(tsdataid)
		If ($IsObject(dataobj))&&($IsObject(dataobj.VISTDComments)) {
			Set comment=""
			Set cnt=dataobj.VISTDComments.Count()
			For j=1:1:cnt {
				Set value=##class(TCLEx.Function.TestSet).CommentValue(code,dataobj.VISTDComments.GetAt(j),pLanguage)
				If (comment'="")&&('$$PunctuationCharacter^KSUTIL1($Extract(value,$Length(value)))) {
					Set comment=comment_" "
				}
				Set comment=comment_value	
			}
			Set @pGlb@(tsdataid,"Comment")=$$RemomeNotPrintableCharacters^KSUTIL1(comment)
		}	
	}
]]></Implementation>
</Method>
</Class>
</Export>
