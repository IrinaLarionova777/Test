<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Function.Bion">
<Super>%RegisteredObject</Super>
<TimeCreated>63459,45456.576067</TimeCreated>

<Method name="SetStandartCommentTest">
<Description>
Записать указанную строку в стандартный комментарий специально выделенного теста (дубликаты не вводить)
Используется в интеграции ЕМС-Бион</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pValue:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set test=..GetTestForSpecimen()
	quit $select(test="":1,1:..SetStandartCommentTest0(test,pValue))
]]></Implementation>
</Method>

<Method name="SetStandartCommentTest0">
<Description>
Записать указанную строку в стандартный комментарий по указанному тесту (дубликаты не вводить)
Используется в интеграции ЕМС-Бион</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pTest:%String="",pValue:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ok=$$$OK
	try {
		if (pTest="")||('$data(^TTAB("TC",pTest)))||($piece($get(^TTAB("TC",pTest)),"\",3)'="S") {
			set ok=$$$ERROR($$$GeneralError,"Неверный параметр "_pTest)
			quit
		}
		
		if (pValue="") {
			set ok=$$$ERROR($$$GeneralError,"Неверный параметр "_pValue)
			quit
		}
		
		// станд. комментрий не вставляем , если тест не активный
		if ($piece($get(^TTAB("TC",pTest)),"\",19)'="Y") {
			quit
		}
		
		set code=$piece(pValue,"~",1),namerus=$piece(pValue,"~",2),nameeng=$piece(pValue,"~",3)
		if (code="")||(namerus="") {
			set ok=$$$ERROR($$$GeneralError,"Неверный параметр "_pValue)
			quit
		}
		
		set rowid=pTest_"||"_code
		set ischange=0
		// если станд комм с таким кодом уже существует, то, если надо, меняем его описание
		if ##class(User.CTTestCodeStandardComm).%ExistsId(rowid) {
			set obj=##class(User.CTTestCodeStandardComm).%OpenId(rowid)
			set nameold=obj.CTTCTText.GetAt(1)
			if $zcvt(namerus,"U")'=$zcvt(nameold,"U") {
				do obj.CTTCTText.SetAt(namerus,1)
				do obj.%SetModified(1)
				set ischange=1
			}
		// или добавляем новый стандартный комментарий 
		} else {
			set obj=##class(User.CTTestCodeStandardComm).%New()
			do obj.CTTCTParRefSetObjectId(pTest)
			set obj.CTTCTCode=code
			do obj.CTTCTText.Insert(namerus)
			set obj.CTTCTFormatted="N"
			set obj.CTTCTActiveFlag="Y"
			set ischange=1
		}
		if ischange=1 {
			set ok=obj.%Save()
		}
				
		// если есть наименование на английстком, добавляем его
		if (ok=1)&&(nameeng'="")&&(##class(User.SSLanguage).%ExistsId(2))&&(##class(User.CTTestCodeStandardComm).%ExistsId(rowid)) {
			set language=2
			set rowidtransl=pTest_"||"_code_"||"_language
		    set ischange=0
		    // если перевод уже существует, то, если надо, меняем его 
		    if ##class(User.CTTestCodeStComTransl).%ExistsId(rowidtransl) {
			    set objtransl=##class(User.CTTestCodeStComTransl).%OpenId(rowidtransl)
			    set nameold=objtransl.CTTCEText.GetAt(1)
			    if $zcvt(nameeng,"U")'=$zcvt(nameold,"U") {
				    do objtransl.CTTCEText.SetAt(nameeng,1)
				    do objtransl.%SetModified(1)
				    set ischange=1
			    }
		    // или добавляем новый стандартный комментарий 
		    } else {
			    set objtransl=##class(User.CTTestCodeStComTransl).%New()
			    do objtransl.CTTCEParRefSetObjectId(rowid)
			    do objtransl.CTTCELanguageDRSetObjectId(language)
			    do objtransl.CTTCEText.Insert(nameeng)
			    set objtransl.CTTCEdoActiveFlag="Y"
			    set ischange=1
		    }
		
		    if ischange=1 {
			    set ok=objtransl.%Save()
		    }
		}
		
		/*
		set pValue=$zcvt(pValue,"U")
		// Проверяем, нет ли уже стандартного комментария с таким текстом
		set codeSC="",is=0
		for {
			set codeSC=$order(^TTAB("TC",pTest,2,codeSC)) if codeSC="" quit
			set value=$get(^TTAB("TC",pTest,2,codeSC,"T",1))
			if $zcvt(value,"U")=pValue {
				set is=1
				quit
			}
		}
		if is=1 quit
		
		// добавление нового стандартного комментария (коды паредполагаются числовыми)
		kill PLIST
		set code=$order(^TTAB("TC",pTest,2,""),-1)+1
		if $data(^TTAB("TC",pTest,2,code)) {
			set ok=$$$ERROR($$$GeneralError,"Не удалось корректно выбрать код для нового стандартного комментария (code="_$get(code)_").")
		    quit	
		}
		
		set PLIST(1)=pTest_"||"_code 
		set PLIST(2)=code
		set PLIST(3)=pValue
		set PLIST(6)="N" // CTTCT_Formatted
		set PLIST(7)="Y" // CTTCT_ActiveFlag
		s ok=$$insert^LVBCTTCT(code)
		*/
	} catch(e) { 
	      set ok=e.AsStatus() 
	      do ##class(TCLEx.Function.General).WriteError($system.Status.GetErrorText(ok),$CLASSNAME()_":SetStandartCommentTest("_$get(pTest)_","_$get(pValue)_")")
	}
	quit ok
]]></Implementation>
</Method>

<Method name="GetTestForSpecimen">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit "G2550"
]]></Implementation>
</Method>

<Method name="SpisHospitalsForEMC">
<Description>
Получить список кодов заказчиков из ЕМС (для отправки результатов) (через запятую)</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit "5261"
]]></Implementation>
</Method>

<Method name="PathToFilesForEMC">
<Description>
Путь к каталогу с файлами с результатами по эпизодам для ЕМС </Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit $g(^Settings("DRP","pathToFilesForEMC"))
]]></Implementation>
</Method>

<Method name="FileNameForEMC">
<Description>
Путь к каталогу с файлами с результатами по эпизодам для ЕМС </Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pEpisode:%String="",pLanguage:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit pEpisode_"-"_$select(pLanguage=2:"E",1:"R")_".pdf"
]]></Implementation>
</Method>
</Class>
</Export>
