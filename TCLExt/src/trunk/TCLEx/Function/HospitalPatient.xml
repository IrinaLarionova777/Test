<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Function.HospitalPatient">
<Super>%RegisteredObject</Super>
<TimeCreated>63077,65608.997993</TimeCreated>

<Method name="CreateUpdateHospitalPatient">
<Description>
Создание или корректировка HOSHospitalPatient, добавление наборов тестов в HOSHospitalPatientTestSet 
pComments - комметарий (заполняется, когда какой-нибудь набор тестов не записывается в базу по причине, что он уже существует и нельзя этот набор тестов записыватьнемколько раз)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pObjectTransport:TCLEx.Object.LabOrder,&pComments:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#dim hosppatobj As User.HOSHospitalPatients
	set ok=$$$OK set pComments=""
	try {
		     // id
		     set ok=..GetHospitalPatientId(pObjectTransport,.hospitalPatientId)
		     if 'ok {
			     quit
		     }
	
		     // Добавляем/обновляем User.HOSHospitalPatients
		     Set ok=..Order2HospitalPatient(pObjectTransport,.hosppatobj,hospitalPatientId)					
		     If 'ok {
			     Quit
		     }
		     
		     /*
		     // Удаление всех наборов тестов HospitalPatientTestSets 
		     Set ok=..DeleteExistingHospitalPatientTestSets(hospitalPatientId)
		     If 'ok {
			     Quit
		     }	
		     */
		     
		     Kill ^||HosPat.TestSets
		     Do ..HospitalPatientTestSets(hosppatobj.%Id(),$Name(^||HosPat.TestSets))	// Составляем буфер с уже имеющимися наборами тестов в User.HOSHospitalPatients
		 	 Set maxcount=$ListGet($Get(^||HosPat.TestSets),1)
		 
		     set ExtraExternalID=pObjectTransport.ExtraExternalID
		     set priority=pObjectTransport.PriorityTestSet
		     //set doctorId=pObjectTransport.Doctor
		     //set patientLocation=pObjectTransport.PatientLocation
		 
		     // Пробегаем по всем назначенным исследованиям заказа
		     set cnt=$length(pObjectTransport.TestSets,",")
		     For i=1:1:cnt {
			    Set testset=$piece(pObjectTransport.TestSets,",",i)
			    set errstr=""
			    if '..IsCorrectTestSet(testset,.errstr)	{					// Корректное исследование ?
			        if errstr'="" set ok=$System.Status.AppendStatus(ok,$$$ERROR($$$GeneralError,errstr))
				    continue
			    }
			    set flagMultipleAllowed=$piece($get(^TTAB("TS",testset)),"\",11) // флаг, может ли быть несколько одинаковых наборов тестов в одном эпизоде
			    
			    If ($Data(^||HosPat.TestSets(testset)))&&(flagMultipleAllowed'="Y") {	// Исследование уже есть в HOSHospitalPatientsTSet и не может быть несколько одинаковых наборов тестов в одном эпизоде
			        set testsetMIS =$piece($get(^TTAB("TS",testset)),"\",31)
					set pComments=pComments_$select(pComments'="":", ",1:"")_$select(testsetMIS'="":testsetMIS,1:testset)
					//Set eventDescription="Набор тестов "_testset_" уже есть в "_hosppatobj.%Id()
			        //do ##class(Client12.MISExchange).LogEvent(titleEvent,"",eventDescription,2,,,$get(ExtraExternalID))
					  /*
					  // это не надо делать, та как в Э-кубе приоритет записвается на уровне направления и не может быть двух разных ордеров в рамках одного направления с разным приоритетом
				    If $Data(^||HosPat.TestSets(testset))<10 {					// Если не супер-набор, то 1 значение набора тестов
					     Set vals=$Get(^||HosPat.TestSets(testset))				// берем ID записи
					     Set testsetid=$ListGet(vals,1)
					     set values=$listbuild(ExtraExternalID,priority,"")
					     Set ok1=..CreateUpdateHospPatTestSet(hosppatobj,testsetid,values)
					     If 'ok1 {
							set ok=$System.Status.AppendStatus(ok,ok1)
						 }
				    } Else {																	// Если супер-набор, то проходим по всем его элементам
					     Set supersetitem=""
					     For  {
						      Set supersetitem=$Order(^||HosPat.TestSets(testset,supersetitem),1,vals)
						      If supersetitem="" Quit
						      Set testsetid=$ListGet(vals,1)
						      set values=$listbuild(ExtraExternalID,priority,testset)
					          Set ok1=..CreateUpdateHospPatTestSet(hosppatobj,testsetid,values)
						      If 'ok1 {
							     set ok=$System.Status.AppendStatus(ok,ok1)
						      }
					     } 
					}	*/
				  
				} else {   // 	Исследования нет в HOSHospitalPatientsTSet или может быть несколько одинаковых наборов тестов в одном эпизоде
					If ##class(User.CTSuperSet).%ExistsId(testset) {				// Если это супер-набор
				      Set superset=testset
				      Kill ^||HosPat.SuperSet
				      Do ##class(TCLEx.Function.SuperSet).CreateItemsBuf(superset,$Name(^||HosPat.SuperSet))	// определяем элементы супер-набора
				      Set supersetitem="",supersetok=1
				      For  {
					     Set supersetitem=$Order(^||HosPat.SuperSet(supersetitem)) If supersetitem="" Quit
					     Set maxcount=maxcount+1
					     set testsetid=hospitalPatientId_"||"_supersetitem_"||"_maxcount
					     set values=$listbuild(ExtraExternalID,priority,superset)
					     Set ok1=..CreateUpdateHospPatTestSet(hosppatobj,testsetid,values)
					  	 If 'ok1 {
							set ok=$System.Status.AppendStatus(ok,ok1)
						 }	
				      }
			        } Else {														// Если обычный набор тестов (не супер-набор !!!)
				         Set maxcount=maxcount+1
				         set testsetid=hospitalPatientId_"||"_testset_"||"_maxcount
					     set values=$listbuild(ExtraExternalID,priority,"")
					     Set ok1=..CreateUpdateHospPatTestSet(hosppatobj,testsetid,values)
				         If 'ok1 {														
					         set ok=$System.Status.AppendStatus(ok,ok1)
				         }	
			        }		
			    }
    
	         }
	         // Если в HospitalPatient нет тестов , то надо его удалить
	         if ##class(User.HOSHospitalPatients).%ExistsId(hospitalPatientId) {
	             if hosppatobj.ChildHOSHospitalPatientsTSet.Count()=0 {
	                  set ok1=..DeleteHospitalPatient(hospitalPatientId) 
	                  if 'ok1 {
				          set ok=$System.Status.AppendStatus(ok,ok1)
			          }
			          Set eventDescription="Удаление объекта User.HOSHospitalPatients "_hospitalPatientId
			          do ##class(Client12.MISExchange).LogEvent(titleEvent,$select(ok1'=0:"error",1:""),eventDescription,ok1,,,$get(ExtraExternalID))
		          }
		     }		
	         
	} catch(e) {
		  set ok=e.AsStatus()
	}
	if pComments'="" set pComments="Наборы тестов "_pComments_" уже существуют в "_$get(hospitalPatientId)
	quit ok
]]></Implementation>
</Method>

<Method name="GetHospitalPatientId">
<Description>
Получить ID объекта User.HOSHospitalPatients из транзитного объекта pObjectTransport</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pObjectTransport:TCLEx.Object.LabOrder,&pHospitalPatientId:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ok=$$$OK,pHospitalPatientId=""
	try {
		     // id
		     set orderId=$select(pObjectTransport.OrderId'="":pObjectTransport.OrderId,1:pObjectTransport.EpisId)
	         set pHospitalPatientId="L"_"||"_pObjectTransport.PatientId_"||"_orderId
	} catch(e) {
		  set ok=e.AsStatus()
	}
	if (ok=1)&&($tr(pHospitalPatientId,"||","")="") {
		set ok=$$$ERROR($$$GeneralError,"Некорректный id для объекта User.HospitalPatient (пустой id) ")
	}
	quit ok
]]></Implementation>
</Method>

<Method name="Order2HospitalPatient">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pOrderObj:TCLEx.Object.LabOrder,&pHospitalPatientObject:User.HOSHospitalPatients,pHospitalPatientId:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set ok=$$$OK,pHospitalPatientObject=""
 try {
	Set pHospitalPatientObject=##class(User.HOSHospitalPatients).%OpenId(pHospitalPatientId)
	If '$IsObject(pHospitalPatientObject) {
		Set pHospitalPatientObject=##class(User.HOSHospitalPatients).%New()
		Do pHospitalPatientObject.HOSPParRefSetObjectId($piece(pHospitalPatientId,"||",1))
		Set pHospitalPatientObject.HOSPDebtorNumber=$piece(pHospitalPatientId,"||",2)
		Set pHospitalPatientObject.HOSPVisit=$piece(pHospitalPatientId,"||",3)
	}
	Set pHospitalPatientObject.HOSPLabTrakMRN=pOrderObj.HospitalMRN
	Set pHospitalPatientObject.HOSPAdmissionDate=pOrderObj.DateOfRequest
	set pHospitalPatientObject.HOSPAdmissionTime=pOrderObj.TimeOfRequest
	//Set pHospitalPatientObject.HOSPTransDate=pOrderObj.TimeOfRequest
	
	Set pHospitalPatientObject.HOSPSurname=pOrderObj.Surname
	Set pHospitalPatientObject.HOSPGivenName=pOrderObj.Name
	Set pHospitalPatientObject.HOSPExtraName1=pOrderObj.FatherName
	set pHospitalPatientObject.HOSPDOB=pOrderObj.DOB
	set pHospitalPatientObject.HOSPAddress1=pOrderObj.PatientAddress1
	
	// Если 
	if '$find(","_pHospitalPatientObject.HOSPPhoneWork_",",pOrderObj.PhoneWork) {
		set pHospitalPatientObject.HOSPPhoneWork=pHospitalPatientObject.HOSPPhoneWork_$select(pHospitalPatientObject.HOSPPhoneWork'="":",",1:"")_pOrderObj.PhoneWork
	}
	
	set pHospitalPatientObject.HOSPPhoneHome=pOrderObj.PhoneHome
	//Филиал
	set usersiteid=pOrderObj.PatientSiteDR
	if ##class(User.CTUserLocation).%ExistsId(usersiteid) {
	   do pHospitalPatientObject.HOSPPatientSiteDRSetObjectId(usersiteid)
	}
	
	// Пол
	if ##class(User.CTSpecies).%ExistsId(pOrderObj.Sex) {
		Do pHospitalPatientObject.HOSPSexDRSetObjectId(pOrderObj.Sex)
	}
	
	// Врач
	If (pOrderObj.Doctor'="")&&(##class(User.CTDoctor).%ExistsId(pOrderObj.Doctor)) {
			set ok=pHospitalPatientObject.HOSPDoctorReferringDRSetObjectId(pOrderObj.Doctor)
			//if 'ok quit
	}
	// Местоположение пациента (отделение или госпиталь)
	If (pOrderObj.PatientLocation'="")&&(##class(User.CTHospital).%ExistsId(pOrderObj.PatientLocation)) {
			set ok=pHospitalPatientObject.HOSPLocationDRSetObjectId(pOrderObj.PatientLocation)
			//if 'ok quit
	}
	
	// Приоритет в поле HOSPExtraName2 
	If (pOrderObj.Priority'="")&&(##class(User.CTPriority).%ExistsId(pOrderObj.Priority)) {
			set pHospitalPatientObject.HOSPExtraName2=pOrderObj.Priority
	}
	
	// вид обслуживания - записываем в pHospitalPatientObject.HOSPExtraName3 - потом в тип пациента (EPVisitNumber)
	if (pOrderObj.PatientType'="")&&(##class(User.CTPatientType).%ExistsId(pOrderObj.PatientType)) {
		set pHospitalPatientObject.HOSPExtraName3=pOrderObj.PatientType
	}

	// категория пациента - записываем в pHospitalPatientObject.HOPPClass - потом в тип пациента (EPVisitNumber.EPVIS_Category_DR)
	if (pOrderObj.Category'="")&&(##class(User.CTPatientCategory).%ExistsId(pOrderObj.Category)) {
		set pHospitalPatientObject.HOSPClass=pOrderObj.Category
	}
	
	set ok=pHospitalPatientObject.%Save()
 
  } catch(e) {
		  set ok=e.AsStatus()
		  set pHospitalPatientObject=""
  }
  quit ok
]]></Implementation>
</Method>

<Method name="CreateUpdateHospPatTestSet">
<Description>
Обновить значения свойств класса User.HOSHospitalPatientsTSet
Параметры:
pTestSetId - ID записи User.HOSHospitalPatientsTSet
pValues - значения свойств в формате $LB
Возвращаемое значение:
Результат обновления записи в формате %Status</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pHospitalPatientObject:User.HOSHospitalPatients,pTestSetId:%String,pValues:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set ok=$$$OK
  try {
		
	Set hosptestsetobj=""
	If pTestSetId="" {
		set ok=$$$ERROR($$$GeneralError,"Не удалось отрыть объект User.HOSHospitalPatientsTSet с ID="_pTestSetId_" !")
		quit
	}
	set testset=$piece(pTestSetId,"||",4)
	set counter=$piece(pTestSetId,"||",5)
	if ##class(User.HOSHospitalPatientsTSet).%ExistsId(pTestSetId) {
	    Set hosptestsetobj=##class(User.HOSHospitalPatientsTSet).%OpenId(pTestSetId)
	} else {
		Set hosptestsetobj=##class(User.HOSHospitalPatientsTSet).%New()
		Set hosptestsetobj.HOSPTParRef=pHospitalPatientObject
		Do hosptestsetobj.HOSPTTestSetDRSetObjectId(testset)
		Set hosptestsetobj.HOSPTCounter=counter
	}
		
	If '$IsObject(hosptestsetobj) {
		set ok=$$$ERROR($$$GeneralError,"Не удалось отрыть объект User.HOSHospitalPatientsTSet с ID="_pTestSetId_" !")
		quit
	}	
	
	Set orderId=$ListGet(pValues,1)								    // HOSPTExtraExternalID 
	Set priority=$ListGet(pValues,2)						    	// Приоритет
	Set superset=$ListGet(pValues,3)							// superset
	/*
	Set doctorcode=$ListGet(pValues,4)								// Код врача
	set language=$ListGet(pValues,5)								// Код языка
	Set patientLocation=$ListGet(pValues,6)									// Код отделения
    */

	Set hosptestsetobj.HOSPTExtraExternalID=orderId
	
	// Приоритет 
	If (priority'="")&&(##class(User.CTPriority).%ExistsId(priority)) {
		Do hosptestsetobj.HOSPTExtraPrioritySetObjectId(priority)
	}
	// Superset
	If (superset'="")&&(##class(User.CTSuperSet).%ExistsId(superset)) {
	   Do hosptestsetobj.HOSPTSuperSetDRSetObjectId(superset)
	}
    /*
	// Врач
	If (doctorcode)&&(##class(User.CTDoctor).%ExistsId(doctorcode)) {
		Do hosptestsetobj.HOSPTExtraDoctorSetObjectId(doctorcode)
	}
	// Местоположение пациента (отделение или госпиталь)
	If (patientLocation'="")&&(##class(User.CTHospital).%ExistsId(patientLocation)) {
		Do hosptestsetobj.HOSPTExtraLocationSetObjectId(patientLocation)
	}
	// Language
	If (language'="")&&(##class(User.SSLanguage).%ExistsId(language)) {
	   Do hosptestsetobj.HOSPTExtraLanguageSetObjectId(language)
	}
	*/
	set ok=hosptestsetobj.%Save()
	
  } catch(e) {
		  set ok=e.AsStatus()
  }
  quit ok
]]></Implementation>
</Method>

<Method name="HospitalPatientTestSets">
<Description>
Формируем буфер pGlb с имеющимися наборами тестов для записи  HOSHospitalPatientsTSet  с Id=pHospPatId</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pHospPatId:%String,pGlb:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Kill @pGlb
	&sql(
		Declare HospTSCursor CURSOR FOR
		Select HOSPT_ExtraExternal_ID,HOSPT_RowID,HOSPT_Counter,HOSPT_TestSet_DR,HOSPT_SuperSet_DR
		INTO :requestid,:testsetid,:count,:testset,:superset
		From SQLUser.HOS_HospitalPatientsTSet 
		Where HOSPT_ParRef=:pHospPatId
	)
	&sql(Open HospTSCursor)
	&sql(Fetch HospTSCursor)

	Set maxcount=0
	/*
	While (SQLCODE = 0) {
		If (count'="")&&(testset'="") {
			If superset="" {
				Set @pGlb@(requestid_$Char(1)_testset)=$ListBuild(testsetid)
			} Else {
				Set @pGlb@(requestid_$Char(1)_superset)=$Get(@pGlb@(superset))_$ListBuild(testsetid)
				Set @pGlb@(requestid_$Char(1)_superset,testset)=$ListBuild(testsetid)
			}		
		}
		If count>maxcount {
			Set maxcount=count
		}		
		&sql(Fetch HospTSCursor)
	}*/
	While (SQLCODE = 0) {
		If (count'="")&&(testset'="") {
			If superset="" {
				Set @pGlb@(testset)=$ListBuild(testsetid)
			} Else {
				Set @pGlb@(superset)=$Get(@pGlb@(superset))_$ListBuild(testsetid)
				Set @pGlb@(superset,testset)=$ListBuild(testsetid)
			}		
		}
		If count>maxcount {
			Set maxcount=count
		}		
		&sql(Fetch HospTSCursor)
	}
	&sql(Close HospTSCursor)
	Set @pGlb=$ListBuild(maxcount)
]]></Implementation>
</Method>

<Method name="DeleteExistingHospitalPatientTestSets">
<ClassMethod>1</ClassMethod>
<FormalSpec>pHospitalPatientId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	&Sql(
		Delete from SQLUser.HOS_HospitalPatientsTSet
		Where HOSPT_ParRef=:pHospitalPatientId 
	)
	If (SQLCODE=0)||(SQLCODE=100) Quit $$$OK
	Quit $$$ERROR($$$SQLCode,SQLCODE)
]]></Implementation>
</Method>

<Method name="DeleteHospitalPatient">
<ClassMethod>1</ClassMethod>
<FormalSpec>pHospitalPatientId:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	&Sql(
		Delete from SQLUser.HOS_HospitalPatients
		Where HOSP_RowID=:pHospitalPatientId 
	)
	If (SQLCODE=0)||(SQLCODE=100) Quit $$$OK
	Quit $$$ERROR($$$SQLCode,SQLCODE)
]]></Implementation>
</Method>

<Method name="IsCorrectTestSet">
<Description>
Является ли корректным код исследования pTestSet 
т.е. есть запись с этим кодом в User.CTSuperSet или в User.CTTestSet(для наборов также проверяем флаг активности CTTSActiveFlag)
возвращаем 1 (ok) или 0 и описание ошибки в pError</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pTestSet:%String,&pError:%String]]></FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	If pTestSet="" {
		Set pError="Не заполнен код исследования !"
		Quit 0
	}
	If ##class(User.CTSuperSet).%ExistsId(pTestSet) {
		Set obj=##class(User.CTSuperSet).%OpenId(pTestSet,0)
		If '$IsObject(obj) {
			Set pError="Неверный код исследования "_pTestSet_"!"
			Quit 0
		}
		Quit 1
		
	}	
	Set obj=##class(User.CTTestSet).%OpenId(pTestSet,0)
	If '$IsObject(obj) {
		Set pError="Неверный код исследования "_pTestSet_"!"
		Quit 0
	}
	If obj.CTTSActiveFlag'="Y" {
		Set pError="Исследование с кодом "_pTestSet_" деактивировано!"
		Quit 0
	}
	Quit 1
]]></Implementation>
</Method>

<Method name="HospitalPatientRequestId4TestSets">
<Description>
Формируем буфер pGlb с соответсвием request_id буферной таблицы наборам тестов 
для записи  HOSHospitalPatientsTSet  с Id=pHospPatId</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pHospPatId:%String,pGlb:%String</FormalSpec>
<Implementation><![CDATA[
	Kill @pGlb
	&sql(
		Declare HospTSCursor2 CURSOR FOR
		Select HOSPT_ExtraExternal_ID,HOSPT_TestSet_DR,HOSPT_SuperSet_DR,HOSPT_ExtraPriority_DR
		INTO :requestid,:testset,:superset,:cito
		From SQLUser.HOS_HospitalPatientsTSet 
		Where HOSPT_ParRef=:pHospPatId
	)
	&sql(Open HospTSCursor2)
	&sql(Fetch HospTSCursor2)

	Set maxcount=0
	While (SQLCODE = 0) {
		If (requestid'="")&&(testset'="") {
			If superset="" {
				Set @pGlb@(testset,requestid)=$ListBuild(cito)
			} Else {
				Set @pGlb@(superset,requestid)=$ListBuild(cito)
			}		
		}
		&sql(Fetch HospTSCursor2)
	}
	&sql(Close HospTSCursor2)
]]></Implementation>
</Method>

<Method name="GetEpisodeByOrderId">
<Description>
Получение ID эпизода ЛИС по ID ордера
Параметры:
pOrderId - ID ордера
Возвращаемое значение:
ID эпизода ЛИС. Пусто, если эпизода еще нет</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pOrderId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	If pOrderId="" Quit ""
	Quit $Get(^TCLEx("OrderId",pOrderId))
]]></Implementation>
</Method>

<Method name="SetEpisodeByOrderId">
<Description>
Запоминаем соответствие эпизода и ID ордера
Параметры:
pOrderId - ID ордера
pEpisode - ID эпизода ЛИС. </Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pEpisode:%String,pOrderIdString:%String</FormalSpec>
<Implementation><![CDATA[
	If (pEpisode="")||(pOrderIdString="") Quit
	for i=1:1:$length(pOrderIdString,",") {
		set orderid=$piece(pOrderIdString,",",i)
		if orderid'="" {
			Set ^TCLEx("OrderId",orderid)=pEpisode
		}
	}
]]></Implementation>
</Method>

<Method name="UpdateDoctor">
<Description>
Добавить(если нет записи)/Обновить(если отличаются данные) запись справочника User.CTDoctor по значениям
из транзитного объекта TCLEx.Object.Doctor
pFlagUpdate - 1 - update or insert</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pDoctorObject:TCLEx.Object.Doctor,&pFlagUpdate:%Boolean]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set ok=$$$OK,pFlagUpdate=0
  try {
	  if '$IsObject(pDoctorObject) {
		  set ok=$$$ERROR($$$GeneralError,"Не указан объект с описанием данных о докторе")
		  quit
	  }
	  set doctorCode=$zcvt(pDoctorObject.DoctorId,"U")
	  If doctorCode="" {
		  set ok=$$$ERROR($$$GeneralError,"Не указан код доктора")
		  Quit
	  }
	Set exists=##class(User.CTDoctor).%ExistsId(doctorCode)
	Set obj=##class(User.CTDoctor).%OpenId(doctorCode)
	If (exists)&&('$IsObject(obj)) {								// Запись блокирована другим пользователем - не пытаемся ее редактировать	
	    set ok=$$$ERROR($$$GeneralError,"Запись с кодом "_doctorCode_" в User.CTDoctor заблокирована")
	    quit
	}
	Set needupdate=0
	If 'exists {
		Set obj=##class(User.CTDoctor).%New()
		set obj.CTDRCode=doctorCode
		// Address
		if (pDoctorObject.Address'="") {
		   Set obj.CTDRAddress1=pDoctorObject.Address
	    }
	    // Кол-во копий
	    if (pDoctorObject.NoOfCopies'="")  {
		   Set obj.CTDRNoOfCopies=pDoctorObject.NoOfCopies
	    }
	    // Курьер
	    set courier=pDoctorObject.CourierId
	    if (courier'="")&&(##class(User.CTCourier).%ExistsId(courier)) {
		   set ok=obj.CTDRCourierRunDRSetObjectId(courier) 
		   set obj.CTDRPrintEnabled="Y"
	    }
	    // Interim or Full Final or ...
	    set printFormat=pDoctorObject.PrintFormatDR
	    if printFormat="" set printFormat="IF"
	    if (printFormat'="")&&(##class(User.CTPrintFormat).%ExistsId(printFormat)) {
			set ok=obj.CTDRPrintFormatDRSetObjectId(printFormat) 
		}
		set companyId=pDoctorObject.CompanyId
	    if (companyId'="")&&(##class(User.CTCompany).%ExistsId(companyId)) {
			set ok=obj.CTDRCompanyDRSetObjectId(companyId) 
		}
		set specialtyId=pDoctorObject.SpecialtyId d
	    if specialtyId="" set specialtyId="GP"
	    if (specialtyId'="")&&(##class(User.CTSpecialty).%ExistsId(specialtyId)) {
			set ok=obj.CTDRSpecialtyDRSetObjectId(specialtyId) 
		}
		set startdate=pDoctorObject.StartDate
	    if (startdate'="") {
		    set obj.CTDRStartDate=pDoctorObject.StartDate
    	}
		Set needupdate=1 
	}
	if (pDoctorObject.Surname'="")&&(obj.CTDRSurname'=pDoctorObject.Surname) {
		Set obj.CTDRSurname=pDoctorObject.Surname
		Set needupdate=1 
	}
	/*
	if (pDoctorObject.Address'="")&&(obj.CTDRAddress1'=pDoctorObject.Address) {
		Set obj.CTDRAddress1=pDoctorObject.Address
		Set needupdate=1 
	}
	if (pDoctorObject.NoOfCopies'="")&&(obj.CTDRNoOfCopies'=pDoctorObject.NoOfCopies) {
		Set obj.CTDRNoOfCopies=pDoctorObject.NoOfCopies
		Set needupdate=1 
	}
	set courier=pDoctorObject.CourierId
	if (courier'="")&&(##class(User.CTCourier).%ExistsId(courier)) {
		if (obj.CTDRCourierRunDR="")||((obj.CTDRCourierRunDR'="")&&(obj.CTDRCourierRunDR.%Id()'=courier)) {
			set ok=obj.CTDRCourierRunDRSetObjectId(courier) 
			Set needupdate=1 
	    }
	}
	set printFormat=pDoctorObject.PrintFormatDR
	if printFormat="" set printFormat="IF"
	if (printFormat'="")&&(##class(User.CTPrintFormat).%ExistsId(printFormat)) {
		if (obj.CTDRPrintFormatDR="")||((obj.CTDRPrintFormatDR'="")&&(obj.CTDRPrintFormatDR.%Id()'=printFormat)) { 
			set ok=obj.CTDRPrintFormatDRSetObjectId(printFormat) 
			Set needupdate=1 
		}
	}
	set companyId=pDoctorObject.CompanyId
	if (companyId'="")&&(##class(User.CTCompany).%ExistsId(companyId)) {
		if (obj.CTDRCompanyDR="")||((obj.CTDRCompanyDR'="")&&(obj.CTDRCompanyDR.%Id()'=companyId)) {
			set ok=obj.CTDRCompanyDRSetObjectId(companyId) 
			Set needupdate=1 
		}
	}
	set specialtyId=pDoctorObject.SpecialtyId d
	if specialtyId="" set specialtyId="GP"
	if (specialtyId'="")&&(##class(User.CTSpecialty).%ExistsId(specialtyId)) {
		if (obj.CTDRSpecialtyDR="")||((obj.CTDRSpecialtyDR'="")&&(obj.CTDRSpecialtyDR.%Id()'=specialtyId)) {
			set ok=obj.CTDRSpecialtyDRSetObjectId(specialtyId) 
			Set needupdate=1 
		}
	}
	set startdate=pDoctorObject.StartDate
	if (startdate'="")&&(obj.CTDRStartDate'=startdate) {
		set obj.CTDRStartDate=pDoctorObject.StartDate
		Set needupdate=1 
	}
	*/	
	
	If obj.CTDRActiveFlag'="Y" {
	 	Set obj.CTDRActiveFlag="Y"
		Set needupdate=1
    }
		 
	If needupdate {
		set ok=obj.%Save()
		set pFlagUpdate=1
	}
  } catch(e) {
	  set ok=e.AsStatus()
  }
  quit ok
]]></Implementation>
</Method>

<Method name="UpdatePatientLocation">
<Description>
Добавить(если нет записи)/Обновить(если отличаются данные) запись справочника User.CTHospital по значениям
pObjHospital- объект с описанием отделения или госпиталя 
pFlagUpdate - 1 - update or insert</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pObjHospital:TCLEx.Object.PatientLocation,&pFlagUpdate:%Boolean]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set ok=$$$OK,pFlagUpdate=0
  try {	
      if '$IsObject(pObjHospital) {
		  set ok=$$$ERROR($$$GeneralError,"Не указан объект с описанием местоположения пациента")
		  quit
	  }
	  set hospitalCode=$zcvt(pObjHospital.HospitalId,"U")
	  If hospitalCode="" {
		  set ok=$$$ERROR($$$GeneralError,"Не указан код местоположения пациента")
		  Quit
	  }
	  Set exists=##class(User.CTHospital).%ExistsId(hospitalCode)
	  Set obj=##class(User.CTHospital).%OpenId(hospitalCode)
	  If (exists)&&('$IsObject(obj)) {								// Запись блокирована другим пользователем - не пытаемся ее редактировать	
	    set ok=$$$ERROR($$$GeneralError,"Запись с кодом "_hospitalCode_" в User.CTHospital заблокирована")
	    quit
	  }
	  Set needupdate=0
	  If 'exists {
		Set obj=##class(User.CTHospital).%New()
		set obj.CTHOSCode=hospitalCode
		Set obj.CTHOSCumulative="N"
		Set obj.CTHOSDisplaySequence=99999
		//Set obj.CTHOSExcludeFromAutoFax="N" Нет такого поля
		set obj.CTHOSFaxEnabled="N"  // new
		//Set obj.CTHOSFaxAlways="N" // Нет такого поля
		Set obj.CTHOSUserBasedPrinting="N"
		// кол-во копий
		if (pObjHospital.NoOfCopies'="") {
		     Set obj.CTHOSNoOfCopies=pObjHospital.NoOfCopies
		}
		// Interim or Full Final or ...
		set printFormat=pObjHospital.PrintFormatDR
	    if printFormat="" set printFormat="I"
	    if (printFormat'="")&&(##class(User.CTPrintFormat).%ExistsId(printFormat)) {
			set ok=obj.CTHOSPrintFormatDRSetObjectId(printFormat) 
		}
		// Курьер
		set courier=pObjHospital.CourierId
	    if (courier'="")&&(##class(User.CTCourier).%ExistsId(courier)) {
		    set ok=obj.CTHOSCourierRunDRSetObjectId(courier)
			set obj.CTHOSPrintEnabled="Y" 
			
	    }
		Set needupdate=1  
	  }
	  /*
	  if (pObjHospital.NoOfCopies'="")&&(obj.CTHOSNoOfCopies'=pObjHospital.NoOfCopies) {
		Set obj.CTHOSNoOfCopies=pObjHospital.NoOfCopies
		Set needupdate=1
	  }
	  
	  set printFormat=pObjHospital.PrintFormatDR
	  if printFormat="" set printFormat="I"
	  if (printFormat'="")&&(##class(User.CTPrintFormat).%ExistsId(printFormat)) {
		if (obj.CTHOSPrintFormatDR="")||((obj.CTHOSPrintFormatDR'="")&&(obj.CTHOSPrintFormatDR.%Id()'=printFormat)) { 
			set ok=obj.CTHOSPrintFormatDRSetObjectId(printFormat) 
			Set needupdate=1
		}
	  }
      
	  set courier=pObjHospital.CourierId
	  if (courier'="")&&(##class(User.CTCourier).%ExistsId(courier)) {
		if (obj.CTHOSCourierRunDR="")||((obj.CTHOSCourierRunDR'="")&&(obj.CTHOSCourierRunDR.%Id()'=courier)) {
			set ok=obj.CTHOSCourierRunDRSetObjectId(courier)
			set obj.CTHOSPrintEnabled="Y" 
			Set needupdate=1
	    }
	  }
	  */	
	  If (pObjHospital.HospitalName'="")&&(obj.CTHOSName'=pObjHospital.HospitalName) {
		Set obj.CTHOSName=pObjHospital.HospitalName
		Set needupdate=1
	  }
	  If obj.CTHOSActiveFlag'="Y" {
	 	Set obj.CTHOSActiveFlag="Y"
		Set needupdate=1
	  }
	  If needupdate {
		set ok=obj.%Save()
		set pFlagUpdate=1
	  }
  } catch(e) {
	    set ok=e.AsStatus()
  }
  quit ok
]]></Implementation>
</Method>

<Method name="GetPhoneWork">
<ClassMethod>1</ClassMethod>
<FormalSpec>pHospitalPatientId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	If ($get(pHospitalPatientId)="") Quit ""
	set key=$piece(pHospitalPatientId,"||",1)
	set patientid=$piece(pHospitalPatientId,"||",2)
	set visitid=$piece(pHospitalPatientId,"||",3)
	if (key'="")&&(patientid'="")&&(visitid'="") {
		quit $piece($get(^THOS(key,"PATIENT",patientid,visitid)),"\",22)
	} else {
		quit ""
	}
]]></Implementation>
</Method>
</Class>
</Export>
