<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Function.Printer">
<Super>%RegisteredObject</Super>
<TimeCreated>62991,65851.386043</TimeCreated>

<Method name="DefaultPrinter">
<Description>
Получить принтер по умолчанию (анализируется таблицаCF_SystemDefaults поле CFSM_DefaultDestination_DR)
Возвращаемое значение:
Id принтера по умолчанию</Description>
<ClassMethod>1</ClassMethod>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	New PLIST,sqlcode
	Set sqlcode=$$select^MVBCFSM(1)
	If sqlcode'=0 Quit ""
	Quit $Get(PLIST(29))
]]></Implementation>
</Method>

<Method name="getUserDefaultPrinter">
<Description>
Получить принтер по умолчанию для пользователя 
Параметры:
pUser - ID пользователя
Возвращаемое значение:
Id принтера</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pUser</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	New PLIST,sqlcode
	Set result=""
	//Set user=..CurrentUser()
	If pUser'="" {										// Ищем принтер по умолчанию для пользователя
		Kill PLIST		
		Set sqlcode=$$selrow^MVBSSUSR(pUser)				// ( таблица SS_USER поле CTPrintDestination)
		If sqlcode=0 {
			Set result=$Piece(PLIST(13),$Char(1),1)
		}	
	}	
	Quit result
]]></Implementation>
</Method>

<Method name="getPrinterByCourierDRP">
<Description>
Получить принтер и кол-во копий (через $char(0) ) по привязке курьера к отчету DRP, если есть</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pCourier:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 set printer=""
 ; find destinations against report parameters (exact)
 set REPORT="DRP",REPPAR="C-"_pCourier_"-*"
 if $$open^LVBCTCLD(REPORT,"Y")
 For {
	 set sc=$$fetch^LVBCTCLD(REPORT,"Y") if sc!(printer'="") quit 
     k plist m plist=PLIST f j=1:1:plist i $d(plist(j)) s plist(j)=$p(plist(j),$c(1))
     set ok=0 
     if '$length(plist(3))!(plist(3)="*")
     else  if plist(3)=REPPAR set ok=1
     if ok {
        set printer=plist(4)_$char(0)_$select(+$get(plist(5))'=0:plist(5),1:1)
     }
 }
 If $$close^LVBCTCLD()
 quit printer
]]></Implementation>
</Method>

<Method name="getCourierByPrinterDRP">
<Description>
Получить курьера по принтеру (по привязке курьера к отчету DRP, если есть)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pPrinter:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 if pPrinter="" quit ""
 set courier=""
 set REPORT="DRP"
 if $$open^LVBCTCLD(REPORT,"Y")
 For {
	 set sc=$$fetch^LVBCTCLD(REPORT,"Y") if sc!(courier'="") quit 
     set printer=$get(PLIST(4)) if printer="" continue
     if printer=pPrinter {
	     set courier=$piece($get(PLIST(3)),"-",2) quit
     }
 }
 If $$close^LVBCTCLD()
 quit courier
]]></Implementation>
</Method>

<Method name="getPrinterDRP">
<Description>
Получить принтер для пользователя 
Если для пользователя принтер не задан, то берется принтер по умолчанию для системы 
Параметры:
pUser - ID пользователя
Возвращаемое значение:
Id принтера</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pCourier:%String,pUser:%String</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set result=""
	if $get(pUser)'="" {
		set result=..getUserDefaultPrinter(pUser)
	}
	if $get(pCourier)'="" {
		set result=..getPrinterByCourierDRP(pCourier)
	}
	if result="" {
		set result=..DefaultPrinter()
	}
	Quit result
]]></Implementation>
</Method>

<Method name="getCourierByUser">
<Description>
Получить курьера по пользователю </Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pUser:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set result=""
    if $Get(pUser)'="" {
	    set usersite=$$seldata^MVBSSUSR(pUser,12)
	    set result=..getCourierByUserLocation(usersite)
    }
    quit result
]]></Implementation>
</Method>

<Method name="getCourierByUserLocation">
<Description>
Получить курьера по местоположению пользователя из справочника курьеров</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pUserLocation:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set result=""
    if $Get(pUserLocation)'="" {
	   set code=""
       for {
		       set code=$order(^TTAB("CR",code)) if code="" quit
		       if $piece(^(code),"\",7)=pUserLocation set result=code quit
       }  
    }
    quit result
]]></Implementation>
</Method>

<Method name="GetPrinterByUser">
<Description>
Получить принтер по пользователю</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pUser:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set result=""
    if $Get(pUser)'="" {
	    set usersite=$$seldata^MVBSSUSR(pUser,12)
	    set result=..GetPrinterByUserLocation(usersite)
    }
    quit result
]]></Implementation>
</Method>

<Method name="GetPrinterByUserLocation">
<Description>
Получить принтер по местоположению пользователя</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pUserLocation:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set result=""
	if $get(pUserLocation)'="" {
		set code=""
		for {
			set code=$order(^TTAB("CTDS",code)) if code="" quit
			set usersite=$piece(^(code),"\",8)
			if usersite=pUserLocation set result=usersite quit
		}
		/*
	   &Sql(
		Declare PrintDestination Cursor For
		SELECT CTPD_RowID 
		INTO :code 
		FROM SQLUser.CT_PrintDestination 
		WHERE CTPD_Site_DR=:pUserLocation
	)

	&Sql(Open PrintDestination)
	&Sql(Fetch PrintDestination)
	While (SQLCODE = 0) {
		If (code'="") {
			set result=code
			quit
		}		
		&Sql(Fetch PrintDestination)
	}	
	&Sql(Close PrintDestination)
	*/
	}
	quit result
]]></Implementation>
</Method>

<Method name="getPrinterNameForJava">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodePrinter:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	set printer=..getPrinterName(pCodePrinter)
	if $extract(printer,1,5)="|PRN|" set printer=$extract(printer,6,$length(printer))
	quit printer
]]></Implementation>
</Method>

<Method name="getPrinterName">
<ClassMethod>1</ClassMethod>
<FormalSpec>pCodePrinter:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	if $get(pCodePrinter)="" quit ""
	set codeDevice=$get(^TTAB("CTDS",pCodePrinter,1))
    if codeDevice="" Quit ""
	quit $piece($get(^%IS(codeDevice,1)),"^",1)
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// if $extract(printer,1,5)="|PRN|" set namePrinter=$extract(printer,6,$length(printer))

]]></Content>
</UDLText>
</Class>
</Export>
