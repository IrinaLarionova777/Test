<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Data.EPVisitTestSetExt">
<Description>
Дополнительные данные для EPVisitTestSet</Description>
<ProcedureBlock>0</ProcedureBlock>
<SqlTableName>EPVisitTestSetExt</SqlTableName>
<StorageStrategy>SQLStorage</StorageStrategy>
<Super>%Persistent,%XML.Adaptor,%ZEN.DataModel.Adaptor</Super>
<TimeCreated>62777,45401.389895</TimeCreated>

<Index name="RowIDBasedIDKeyIndex">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>TestSet,TestSetCounter</Properties>
<Unique>1</Unique>
</Index>

<Property name="Episode">
<Description>
EP_VisitNumber Parent Reference</Description>
<Type>TCLEx.Data.EPVisitNumberExt</Type>
<Cardinality>parent</Cardinality>
<Inverse>ChildEPVisitTestSet</Inverse>
<Relationship>1</Relationship>
<Required>1</Required>
<SqlFieldName>Episode</SqlFieldName>
</Property>

<Property name="TestSet">
<Description>
Test Set</Description>
<Type>User.CTTestSet</Type>
<SqlColumnNumber>3</SqlColumnNumber>
<SqlFieldName>TestSet</SqlFieldName>
</Property>

<Property name="TestSetCounter">
<Description>
Test Set Counter</Description>
<Type>%String</Type>
<SqlColumnNumber>4</SqlColumnNumber>
<SqlFieldName>TestSetCounter</SqlFieldName>
</Property>

<Property name="Price">
<Description>
Price</Description>
<Type>%Float</Type>
<SqlColumnNumber>6</SqlColumnNumber>
<SqlFieldName>Price</SqlFieldName>
</Property>

<Property name="FlagFinalPrice">
<Description>
Флаг окончательности цены набора тестов
Кодга взводится флаг окончательности цены
1. для наборов тестов из эпизодов, которые авторизованы до даты начала действия Бирлаб
2. для наборов тестов, которые уже находятся в выставленном счете Бирлаб
3. для наборов тестов, которые отменены с неоплачиваемой причиной отмены набора тестов 
4. для неоплачиваемых наборов тестов (выведенных из оплаты ) VISTS_SupressBilling="Y" 
5. для "неглавных" наборов тестов в супернаборе (testset[superset =0) (для этих наборов тестов всегда Price=0 and FlagIsService=0 И ничего не надо пересчитывать)</Description>
<Type>%Boolean</Type>
<SqlColumnNumber>7</SqlColumnNumber>
<SqlFieldName>FlagFinalPrice</SqlFieldName>
</Property>

<Property name="SuperSet">
<Description>
SuperSet</Description>
<Type>%String</Type>
<SqlColumnNumber>8</SqlColumnNumber>
<SqlFieldName>SuperSet</SqlFieldName>
</Property>

<Property name="FlagIsService">
<Description>
FlagIsService флаг, что для данной строки (epis,ts,tscnt) считаем кол-во услуг 1 
Если это обычный набор тестов 
    если он авторизован или отменен по причине, которая является оплачиваемой или выведен из оплаты, то =1, иначе =0
Если это супернабор
    если он полностью авторизован или полностью отменен по причине, которая является оплачиваемой, то на одной из строк для супернабора этот флаг=1, на других строках=0
    иначе - на всех строках=0
Как проверяем, что набор тестов отменен: - VISTS_Reason_DR'="" and VISTS_DateOfReason'=""
Потом смотреть флаг оплачиваемости причины отмены</Description>
<Type>%Boolean</Type>
<SqlColumnNumber>9</SqlColumnNumber>
<SqlFieldName>FlagIsService</SqlFieldName>
</Property>

<Storage name="SQLStorage">
<Type>%CacheSQLStorage</Type>
<SqlRowIdName>EPVisitTestSetExt_RowId</SqlRowIdName>
<StreamLocation>^TCLEx.Data.EPVisitTestSetExtS</StreamLocation>
<SQLMap name="DataMaster">
<Type>data</Type>
<Global>^TEPIext</Global>
<Subscript name="1">
<Expression>{EPVisitNumberExt.Episode}</Expression>
</Subscript>
<Subscript name="2">
<Expression>1</Expression>
</Subscript>
<Subscript name="3">
<Expression>{TestSet}</Expression>
</Subscript>
<Subscript name="4">
<Expression>{TestSetCounter}</Expression>
</Subscript>
<RowIdSpec name="1">
<Expression>{L1}</Expression>
<Field>EPVisitNumberExt.Episode</Field>
</RowIdSpec>
<RowIdSpec name="2">
<Expression>{L3}</Expression>
<Field>TestSet</Field>
</RowIdSpec>
<RowIdSpec name="3">
<Expression>{L4}</Expression>
<Field>TestSetCounter</Field>
</RowIdSpec>
<Data name="FlagFinalPrice">
<Piece>2</Piece>
</Data>
<Data name="FlagIsService">
<Piece>4</Piece>
</Data>
<Data name="Price">
<Piece>1</Piece>
</Data>
<Data name="SuperSet">
<Piece>3</Piece>
</Data>
</SQLMap>
<SQLMap name="IndexSuperSet">
<Type>index</Type>
<Global>^TEPIextI</Global>
<PopulationType>nonnull</PopulationType>
<Structure>delimited</Structure>
<Subscript name="1">
<Expression>"SuperSet"</Expression>
</Subscript>
<Subscript name="2">
<Expression>{EPVisitNumberExt.Episode}</Expression>
</Subscript>
<Subscript name="3">
<Expression>{SuperSet}</Expression>
</Subscript>
<Subscript name="4">
<Expression>{FlagIsService}</Expression>
</Subscript>
<Subscript name="5">
<Expression>{TestSet}</Expression>
</Subscript>
<Subscript name="6">
<Expression>{TestSetCounter}</Expression>
</Subscript>
<RowIdSpec name="1">
<Expression>{L2}</Expression>
<Field>EPVisitNumberExt.Episode</Field>
</RowIdSpec>
<RowIdSpec name="2">
<Expression>{L5}</Expression>
<Field>TestSet</Field>
</RowIdSpec>
<RowIdSpec name="3">
<Expression>{L6}</Expression>
<Field>TestSetCounter</Field>
</RowIdSpec>
</SQLMap>
</Storage>
</Class>
</Export>
