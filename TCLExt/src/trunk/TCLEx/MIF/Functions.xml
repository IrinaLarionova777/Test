<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.MIF.Functions">
<Description>
Методы для работы с классами TCLEx.Data.MIFInfoEpisodeбTCLEx.Data.MIFInfoEpisodeTest</Description>
<Super>%RegisteredObject</Super>
<TimeCreated>62780,41712.994642</TimeCreated>

<Method name="writeInfoOrder">
<Description>
Пробежать по всем отправленным тестам и записать данные о заказе в класс TCLEx.Data.MIFInfoEpisode, TCLEx.Data.MIFInfoEpisodeTests</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>mi,epis,suffix</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ok=1
	try {
		set suffix=$get(suffix)
		set info=$lb(+$h,$piece($h,",",2),"","")
		set test=""
	    for {
		    set test=$order(^TMP("MIF-SINGLE",$j,mi,epis_suffix,test)) if test="" quit
		    set tc=..getTestLISfromTestAN(mi,test) 
		    if tc="" $$$ThrowOnError($$$ERROR($$$GeneralError,"Для теста "_test_" не определен код теста в ЛИС")) 
		    $$$ThrowOnError(..setMIFinfo(mi,epis,tc,info))
		}
	    }
     catch(exception) {
	     set ok=exception.AsStatus() 
     }	
     quit ok
]]></Implementation>
</Method>

<Method name="writeInfoResult">
<Description>
Записать данные о результатах в класс TCLEx.Data.MIFInfoEpisode, TCLEx.Data.MIFInfoEpisodeTests</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>mi:%String,epis:%String,test:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ok=1
	try {
		if test'="" {
			set info=$lb("","",+$h,$piece($h,",",2))
			$$$ThrowOnError(..setMIFinfo(mi,epis,test,info))
		}
    }
     catch(exception) {
	     set ok=exception.AsStatus()
     }	
     quit ok
]]></Implementation>
</Method>

<Method name="setMIFinfo">
<Description>
Записать данные о заказе в класс TCLEx.Data.MIFInfoEpisode, TCLEx.Data.MIFInfoEpisodeTests</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>mi,epis,test,info</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set ok=1
 try {
  if $data(^TEPI(epis)) { 	  
	set idepis=mi_"||"_epis
  	//set objepis=##class(TCLEx.Data.MIFInfoEpisode).%OpenId(idepis)
  	set idepistest=mi_"||"_epis_"||"_test
	//set objepistest=##class(TCLEx.Data.MIFInfoEpisodeTest).%OpenId(idepistest)
  	
	set dateOrder=$li(info,1)
	set timeOrder=$li(info,2)
	set dateResult=$li(info,3)
	set timeResult=$li(info,4)	
	
	if (dateOrder'="")||(timeOrder'="")||(dateResult'="")||(timeResult'="") {
		set createepis=0,createepistest=0
		kill PLIST
		&sql(SELECT * INTO :PLIST() FROM TCLEx_Data.MIF_InfoEpisode WHERE MIFinfo_RowId=:idepis)
		if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		if SQLCODE {
			kill PLIST
			set PLIST(1)=mi_"||"_epis
			set PLIST(2)=mi
			set PLIST(3)=epis
			set PLIST(4)=dateOrder
			set PLIST(5)=timeOrder
			set PLIST(6)=dateResult
			set PLIST(7)=timeResult
		    &sql(INSERT INTO TCLEx_Data.MIF_InfoEpisode VALUES :PLIST())
		    if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))	
		    set createepis=1
		}
		
		kill PLIST
		&sql(SELECT * INTO :PLIST() FROM TCLEx_Data.MIF_InfoEpisodeTest WHERE MIFinfoTest_RowId=:idepistest)
		if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
	    if SQLCODE {
		    set PLIST(0)=mi_"||"_epis
		    set PLIST(1)=mi_"||"_epis_"||"_test
			set PLIST(2)=test
			set PLIST(3)=dateOrder
			set PLIST(4)=timeOrder
			set PLIST(5)=dateResult
			set PLIST(6)=timeResult
		    &sql(INSERT INTO TCLEx_Data.MIF_InfoEpisodeTest VALUES :PLIST())   
		    if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		    set createepistest=1
	    }
	    
	    if (createepistest=0) {
			kill PLIST
		    &sql(SELECT * INTO :PLIST() FROM TCLEx_Data.MIF_InfoEpisodeTest WHERE MIFinfoTest_RowId=:idepistest)
		    if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		    for i=1:1:6 set PLIST(i)=$get(PLIST(i))
		    // дату и время заказа пишем только если предудущих нет или они больше записываемых (что невозможно, ну на всяк случай)
		    if dateOrder'="",timeOrder'="" {
			    if (dateOrder<PLIST(3))||(PLIST(3)="") set PLIST(3)=dateOrder,PLIST(4)=timeOrder
			    if (+dateOrder=+PLIST(3))&&(timeOrder<PLIST(4)) set PLIST(4)=timeOrder
		    }
		    // дату и время результата пишем только если предудущих нет или они меньше записываемых 
		    if dateResult'="",timeResult'="" {
			    if dateResult>PLIST(5) set PLIST(5)=dateResult,PLIST(6)=timeResult
			    if (+dateResult=+PLIST(5))&&(timeResult>PLIST(6)) set PLIST(6)=timeResult
		    }
		    &sql(UPDATE TCLEx_Data.MIF_InfoEpisodeTest VALUES :PLIST() WHERE MIFinfoTest_RowId=:idepistest)
		    if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		}
		
		if (createepis=0) {
			kill PLIST
		    &sql(SELECT * INTO :PLIST() FROM TCLEx_Data.MIF_InfoEpisode WHERE MIFinfo_RowId=:idepis)
		    if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		    for i=1:1:7 set PLIST(i)=$get(PLIST(i))
		    if dateOrder'="",timeOrder'="" {
			    if (dateOrder<PLIST(4))||(PLIST(4)="") set PLIST(4)=dateOrder,PLIST(5)=timeOrder
			    if (+dateOrder=+PLIST(4))&&(timeOrder<PLIST(5)) set PLIST(5)=timeOrder
		    }
		    // дату и время результата пишем только если предудущих нет или они меньше записываемых 
		    if dateResult'="",timeResult'="" {
			    if dateResult>PLIST(6) set PLIST(6)=dateResult,PLIST(7)=timeResult
			    if (+dateResult=+PLIST(6))&&(timeResult>PLIST(7)) set PLIST(7)=timeResult
		    }
		    &sql(UPDATE TCLEx_Data.MIF_InfoEpisode VALUES :PLIST() WHERE MIFinfo_RowId=:idepis)
		    if SQLCODE<0 $$$ThrowOnError($$$ERROR($$$GeneralError,$get(%msg)))
		}
	}
  }
 }
 catch(exception) {
	  //set ok="0"_$c(1)_$System.Status.GetErrorText(exception.AsStatus())
	  set ok=exception.AsStatus()  
 }	
 quit ok
]]></Implementation>
</Method>

<Method name="getTestLISfromTestAN">
<Description>
Получить код теста (ЛИС) по код теста (Анализатор)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>mi:%String,test:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	if ($get(mi)="")||($get(test)="") quit ""
  	quit $order(^TMIF(mi,3,test,""))
]]></Implementation>
</Method>

<Method name="getTestANfromTestLIS">
<Description>
Получить код теста (Анализатор) по коду теста (ЛИС)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>mi:%String,test:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	if ($get(mi)="")||($get(test)="") quit ""
  	quit Piece($get(^TMIF(mi,2,test)),"\",1)
]]></Implementation>
</Method>
</Class>
</Export>
