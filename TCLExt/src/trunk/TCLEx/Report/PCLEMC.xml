<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Report.PCLEMC">
<Description>
Печать результата в PCL для Биона</Description>
<Super>TCLEx.Report.AbstractPCLForm</Super>
<TimeCreated>62346,40782.878585</TimeCreated>

<Method name="RowCount">
<Description>
Число строк для отдела pDepCode</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pDepCode:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	//If (pDepCode="H")||(pDepCode="D") Quit 47
	Quit 45
]]></Implementation>
</Method>

<Method name="CreateValuesBuf">
<Description>
Загрузить значения полей, необходимых для печати результата
pEpis - эпизод
pTestSets - буфер наборов тестов 
pDepCode - отдел исследований
pLanguage - язык результата  
pRepParamGlb - глобал с данными</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pEpis:%String,&pTestSets:%String,pDepCode:%String,pLanguage:%String,pRepParamGlb:%String]]></FormalSpec>
<Implementation><![CDATA[	do ##class(TCLEx.Report.Function).CreateValuesBuf($get(pEpis),.pTestSets,$get(pDepCode),$get(pLanguage),$g(pRepParamGlb))
]]></Implementation>
</Method>

<Method name="Age">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDOB:%Date,pDateOfCollection:%Date,pLanguage:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set pLanguage=$Get(pLanguage) 
	Set result=$Select(pLanguage=2:"Unknown",1:"Неизвестен")        
	If pDOB'="" {
		Set age=..CalAge(pDOB,pDateOfCollection) ;вычисление возраста пациента  "год|месяц|день" на момент "даты забора" биоматериала
		Set ageyear=$Piece(age,"|",1)
		Set agemonth=$Piece(age,"|",2)
		Set ageday=$Piece(age,"|",3)
		If (ageyear>0) {
			 Set result=ageyear_" "_$Select(pLanguage=2:"Y.O.",1:"ЛЕТ")
		} ElseIf (agemonth>0) {
			 Set result=agemonth_" "_$Select(pLanguage=2:"M.",1:"МЕС.")
		} ElseIf (ageday>0){
			 Set result=ageday_" "_$Select(pLanguage=2:"D.",1:"ДН.")
		}			 
	}
	Quit result
]]></Implementation>
</Method>

<Method name="CalAge">
<Description>
Функция СП.Арма по вычислению возраста по дню рождения на заданную дату в формате "год|месяц|день"</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>IBirth:%Date,IToday:%Date</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 ;hack of date of birth
 s IBirth=$g(IBirth) s:IBirth>2980000 IBirth="" s:IBirth<0 IBirth="" q:'$G(IBirth) ""
 s IToday=$g(IToday) s:IToday="" IToday=$h
 s XBirth=$ZD(IBirth)
 s XToday=$ZD(IToday)
 s AgeMth=XToday-XBirth
 s AgeDay=$p(XToday,"/",2)-$p(XBirth,"/",2)
 s CurrYear=$p(XToday,"/",3) s:CurrYear<100 CurrYear=CurrYear+1900
 s BirthYear=$p(XBirth,"/",3) s:BirthYear<100 BirthYear=BirthYear+1900
 s AgeYear=CurrYear-BirthYear
 i AgeDay<0 d
 . s AgeMth=AgeMth-1
 . s AgeDay=AgeDay+$p("31,31,28,31,30,31,30,31,31,30,31,30,31",",",+XToday)
 . q:XToday'=2
 . s:((CurrYear#4)=0)&(((CurrYear#100)'=0)!((CurrYear#400)=0)) AgeDay=AgeDay+1
 i AgeMth<0 s AgeMth=AgeMth+12,AgeYear=AgeYear-1
 q AgeYear_"|"_AgeMth_"|"_AgeDay
]]></Implementation>
</Method>

<Method name="Header">
<Description>
Печать заголовка отчета в PCL формате 	</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pEpis:%String,&pTestSets:%String,pDepCode:%String,pPDF:%Boolean,pLanguage:%String,pValuesGlb:%String,pRepGlb:%String]]></FormalSpec>
<Implementation><![CDATA[
	;
	Set hospcode=$Get(@pValuesGlb@("НospitalCode"))
	;
	Do ..Add(pRepGlb,"HDR","~RESET")          
	Do ..Add(pRepGlb,"HDR","~PORTRAIT")     
	Do ..Add(pRepGlb,"HDR",$Char(27)_"&l26a")  
	;
	Set wasimage=0,dyimage=685			; сдвиг по вертикали, если не печатаем растровую графику (заголовок бланка, печать, подпись врача, если печатаем, то 0)
	s ^test(222)=pPDF
	If pPDF { ; Если вывод для последующего преобразования в pdf
		Do ..PrintLogo(pRepGlb,"HDR",hospcode,pDepCode,.wasimage)
	}	
	If wasimage Set dyimage=0 ; не нужен сдвиг по вертикали, если не печатали растровую графику (заголовок бланка, печать, подпись врача...)
	;
	Set dyrows=0 ; additional rows (если нет шапки в таблице)
	;
	Set line="",$Piece(line,"_",90)="" 
	//Set YH=950,YStep=125     ;шаг строки
	Set YH=1000,YStep=100     ;шаг строки
 	Do ..Add(pRepGlb,"PRT",$C(27)_"*v0O")          
	Do ..SetNormalFont(pRepGlb,"PRT")
	Do ..SetBoldFont(pRepGlb,"PRT")
	/*
	If $Get(@pValuesGlb@("CardNumber"))'="" {
		Do ..Line(pRepGlb,"PRT",250,YH,$Select(pLanguage=2:"Insurance card No: ",1:"Страховой полис: "))
		Do ..Line(pRepGlb,"PRT",2000,YH,$Get(@pValuesGlb@("CardNumber")))
	}
	Set YH=YH+YStep
	*/
	Do ..Line(pRepGlb,"PRT",150,YH,$Select(pLanguage=2:"Company: ",1:"Организация:"))
	Do ..Line(pRepGlb,"PRT",900,YH,$Get(@pValuesGlb@("CompanyName")))
	Do ..Line(pRepGlb,"PRT",4100,YH,$Select(pLanguage=2:"Lab.Visit: ",1:"Лаб.номер: "))
	Do ..Line(pRepGlb,"PRT",4750,YH,$Get(@pValuesGlb@("Episode")))
	Set YH=YH+(1*YStep)
	Do ..Line(pRepGlb,"PRT",150,YH,line)
	Set YH=YH+(1.5*YStep)
	Do ..Line(pRepGlb,"PRT",150,YH,$Select(pLanguage=2:"DATE:",1:"ДАТА :"))
	Do ..SetMediumFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",550,YH,$Get(@pValuesGlb@("DateOfCollection")))
	Do ..SetBoldFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",2500,YH,$Select(pLanguage=2:"PATIENT:",1:"ПАЦИЕНТ:"))
	Do ..SetFont(pRepGlb,"PRT",12,1)
	Do ..Line(pRepGlb,"PRT",3050,YH,$Get(@pValuesGlb@("FullName")))
	Do ..SetFont(pRepGlb,"PRT",10,1)
	Set YH=YH+(YStep*1.5)
	Do ..Line(pRepGlb,"PRT",150,YH,$Select(pLanguage=2:"TIME:",1:"ВРЕМЯ:"))
	Do ..SetMediumFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",550,YH,$Get(@pValuesGlb@("TimeOfCollection")))
	Do ..SetBoldFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",2500,YH,$Select(pLanguage=2:"AGE:",1:"ВОЗРАСТ:"))
	Do ..SetMediumFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",3050,YH,$Get(@pValuesGlb@("Age")))
	Do ..SetBoldFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",3700,YH,$Select(pLanguage=2:"SEX:",1:"ПОЛ:"))
	Do ..SetMediumFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",4100,YH,$Get(@pValuesGlb@("Sex")))
	Do ..SetBoldFont(pRepGlb,"PRT")
 	Set YH=YH+(YStep*1.5)
	Do ..Line(pRepGlb,"PRT",150,YH,$Select(pLanguage=2:"DR  :",1:"ВРАЧ :"))
	Do ..SetMediumFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",550,YH,$Get(@pValuesGlb@("DoctorNames")))
	//Do ..Line(pRepGlb,"PRT",650,YH,"Surname")
	Do ..SetBoldFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",2500,YH,$Select(pLanguage=2:"DOB:",1:"Д.Р.:"))
	Do ..SetMediumFont(pRepGlb,"PRT")
	Do ..Line(pRepGlb,"PRT",3050,YH,$Get(@pValuesGlb@("DOB")))
	Do ..SetBoldFont(pRepGlb,"PRT")
	Set YH=YH+YStep
	Do ..Line(pRepGlb,"PRT",150,YH,line)
	Set YH=YH+(2*YStep)

	Do ..SetFont(pRepGlb,"PRT",12,1)
	Set val=$Get(@pValuesGlb@("Department"))
	Do ..Line(pRepGlb,"PRT",$$CenterPosX^KSPCLUtils(val),YH,val) 
	Set recty=YH+(0.5*YStep\1)
	Set YH=YH+YStep
	Do ..SetNormalFont(pRepGlb,"PRT")
	/*Set YH=YH+(2*YStep)
	Do ..GotoXY(pRepGlb,"PRT",100,YH) ; Позиционируемся в нижнюю левую точку заголовка таблицы
	Do ..Add(pRepGlb,"PRT","!")
	Quit*/
	//
	Do ..GotoXY(pRepGlb,"PRT",100,recty)
	Do ..Add(pRepGlb,"PRT",$Char(27)_"*c5380H")
	Do ..Add(pRepGlb,"PRT",$Char(27)_"*c300V")
	Do ..Add(pRepGlb,"PRT",$Char(27)_"*c4G") ;4G
	Do ..Add(pRepGlb,"PRT",$Char(27)_"*c2P")
	//
	Set YH=YH+(1.5*YStep\1)
	If pLanguage=2 {
		Do ..Add(pRepGlb,"PRT","~FONTSIZE=10")
		Do ..Line(pRepGlb,"PRT",600,YH,"Constituent")
		Do ..Line(pRepGlb,"PRT",2160,YH,"Results") 
		Do ..Line(pRepGlb,"PRT",2920,YH,"Units") 
		Do ..Line(pRepGlb,"PRT",3740,YH,"Limits")
		//Do ..Line(pRepGlb,"PRT",2950,YH,"Results") 
		//Do ..Line(pRepGlb,"PRT",3715,YH,"Units") 
		//Do ..Line(pRepGlb,"PRT",4700,YH,"Limits")
		Set YH=YH+(0.7*YStep\1)
	} Else {
		Do ..Add(pRepGlb,"PRT","~FONTSIZE=10")
		Do ..Line(pRepGlb,"PRT",600,YH,"Наименование теста")
		Do ..Line(pRepGlb,"PRT",2160,YH,"Результат") 
		Do ..Line(pRepGlb,"PRT",2920,YH,"Единицы") 
		Do ..Line(pRepGlb,"PRT",3740,YH,"Референсные")
		//Do ..Line(pRepGlb,"PRT",2950,YH,"Результат") 
		//Do ..Line(pRepGlb,"PRT",3715,YH,"Единицы") 
		//Do ..Line(pRepGlb,"PRT",4700,YH,"Референсные")
		;
		Set YH=YH+(0.7*YStep\1)
		Do ..Line(pRepGlb,"PRT",2920,YH,"измерения")
		Do ..Line(pRepGlb,"PRT",3740,YH,"значения")
		//Do ..Line(pRepGlb,"PRT",3715,YH,"измерения")
		//Do ..Line(pRepGlb,"PRT",4700,YH,"значения")
	}	
	Set YH=recty+407
	Set recty=recty+290 ;300

	If 'pPDF Set recty=recty-5 ; По разному для PDF и для печати центрирование в зебре выглядит
	
	Do ..SetNormalFont(pRepGlb,"PRT")

	Set rowcount=..RowCount(pDepCode)
	For i=1:1:rowcount {
		If i#2 Continue
		Do ..GotoXY(pRepGlb,"PRT",100,YH)
		Do ..Add(pRepGlb,"PRT",$Char(27)_"*c5380H")
		Do ..Add(pRepGlb,"PRT",$Char(27)_"*c100V")
		Do ..Add(pRepGlb,"PRT",$Char(27)_"*c4G")
		Do ..Add(pRepGlb,"PRT",$Char(27)_"*c2P")
		Set YH=YH+200
	}	
	; Рамка таблицы
	Do ..Add(pRepGlb,"PRT",$C(27)_"%0B")          
	Do ..Add(pRepGlb,"PRT","IN;")          
	Do ..Add(pRepGlb,"PRT","SP1;")          
	
	Do ..Add(pRepGlb,"PRT","PA140,"_(8435-dyimage)_";")          
	Do ..Add(pRepGlb,"PRT","PD140,"_(8435-dyimage)_",7740,"_(8435-dyimage)_",7740,"_(8850-dyimage)_",140,"_(8850-dyimage)_",140,"_(8435-dyimage)_";")          
	Do ..Add(pRepGlb,"PRT","PA140,"_(2060-dyimage-dyrows)_";")          
	Do ..Add(pRepGlb,"PRT","PD140,"_(2060-dyimage-dyrows)_",7740,"_(2060-dyimage-dyrows)_",7740,"_(8435-dyimage)_",140,"_(8435-dyimage)_",140,"_(2060-dyimage-dyrows)_";")          
	
	Do ..Add(pRepGlb,"PRT",$C(27)_"%0A")
	;          
	Do ..GotoXY(pRepGlb,"PRT",100,recty) ; Позиционируемся в нижнюю левую точку заголовка таблицы
	Do ..Add(pRepGlb,"PRT","!")
]]></Implementation>
</Method>

<Method name="PrintLogo">
<Description>
Печать логотипа лаборатории или ЛПУ в заголовке
pRepGlb - глобал с отчетом
pSection - секция отчета
pHospId - ID ЛПУ
pDepCode - код отдела
pWasImage - возвращаемое по ссылке значения была ли печать изображения (вляет на сдвиг координаты Y)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pRepGlb:%String,pSection:%String,pHospId:%String,pDepCode:%String,&pWasImage:%Boolean]]></FormalSpec>
<Implementation><![CDATA[
	Set glb=$Name(^BionImg("ResultReportHeaders","EMC"))
	set pDepCode=$get(pDepCode)
	if ((pDepCode="H")||(pDepCode="Z"))&&($data(^BionImg("ResultReportHeaders","EMCpato"))) set glb=$Name(^BionImg("ResultReportHeaders","EMCpato"))
	s ^test("header")=pDepCode_"*"_$data(^BionImg("ResultReportHeaders","EMCpato"))_"*"_glb
	If ($Data(@glb))&&('pWasImage) {
		Set pWasImage=1
	}	
	Set i=""
	For  {
		Set i=$Order(@glb@(i),1,val)
		If i="" Quit
		Do ..Add(pRepGlb,pSection,val)
	}
]]></Implementation>
</Method>

<Method name="Footer">
<Description>
Формирование footer-а отчета для печати отдела эпизода
Параметры:
pEpis - ID эпизода
pTestSets - буфер печатаемых наборов тестов
pDepCode - код отдела
pPDF - =1 - вывод в PDF файл; = 0 - вывод на принтер
pPageNumber - номер страницы
pTotalPages - всего страниц
pLanguage - язык результата
pValuesGlb - глобал со значениями для печати эпизода
pRepGlb - формируемый глобал с полученными PCL командами</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pEpis:%String,&pTestSets:%String,pDepCode:%String,pPDF:%Boolean,pPageNumber:%Integer,pTotalPages:%Integer,pLanguage:%String,pValuesGlb:%String,pRepGlb:%String]]></FormalSpec>
<Implementation><![CDATA[
	Set YH=7300,YStep=125
	Do ..SetNormalFont(pRepGlb,"PRT")
	//Do ..Line(pRepGlb,"PRT",1000,YH,$Select(pLanguage=2:"DOCTOR'S SIGNATURE",1:"ВРАЧ")_" "_$get(@pRepParamGlb@("TS_AuthorisedDoctor"))_" ____________________")
	//Do ..Line(pRepGlb,"PRT",4700,YH,$Select(pLanguage=2:"STAMP",1:"ШТАМП"))
	if pPDF=1||('##class(TCLEx.Report.ZenEMC).printDoctorAuth(pDepCode)) {
		Do ..Line(pRepGlb,"PRT",1000,YH,$Select(pLanguage=2:"DOCTOR'S SIGNATURE",1:"ВРАЧ")_"     ____________________________")
	    Do ..Line(pRepGlb,"PRT",4700,YH,$Select(pLanguage=2:"STAMP",1:"ШТАМП"))
	} else {
		Do ..Line(pRepGlb,"PRT",500,YH,$Select(pLanguage=2:"DOCTOR: ",1:"ВРАЧ: ")_$extract($get(@pValuesGlb@("TS_AuthorisedDoctor"))_" ____________________________",1,100)) ;was 1000
	    Do ..Line(pRepGlb,"PRT",4700,YH,$Select(pLanguage=2:"STAMP",1:"ШТАМП"))
	}
	Set YH=YH+(3*YStep)
	Set str=""
	If $Get(@pValuesGlb@("VerificationQueue")) {
		Set str="Urgent! "
	}	
	If $Get(@pValuesGlb@("PrintingStatus"))="F" {
		Set str=str_$Select(pLanguage=2:"**** FINAL REPORT. Please File ****",1:"**** Заключительный отчет ****")
	} Else {
		Set str=str_$Select(pLanguage=2:"**** INTERIM REPORT. Please File ****",1:"**** Промежуточный отчет ****")
	}		
	Do ..Line(pRepGlb,"PRT",1900,YH,str)
	Set val=$Select(pLanguage=2:"Page",1:"Стр.")_" "_pPageNumber_"/"_pTotalPages
	Do ..SetFont(pRepGlb,"PRT",8)
	Do ..Line(pRepGlb,"PRT",4800,YH,val)
	Set YH=YH+(YStep)
	Do ..Line(pRepGlb,"PRT",4800,YH,$ZDateTime($Horolog,4,2))
	If pPageNumber'=pTotalPages {
		Do ..Add(pRepGlb,"PRT","#")
	}
]]></Implementation>
</Method>

<Method name="EpisodeResultFileName">
<Description>
Получение имени файла результата для эпизода
Параметры:
pEpis - ID эпизода
pTestSets - буфер с ID наборов тестов (если пусто,то все наборы эпизода)
pLanguage - язык отчета
pExtension - расширение файла
Возвращаемое значение:
Имя файла результата для эпизода</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pEpis:%String,&pTestSets:%String,pLanguage:%String,pExtension:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	Quit pEpis_$Select(pLanguage=2:"E",1:"R")_"."_pExtension
]]></Implementation>
</Method>

<Method name="getPrinter">
<Description>
Получить принтер  
Параметры:
pCourier - ID курьера
pUser - ID пользователя
Возвращаемое значение:
Id принтера</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pCourier,pUser</FormalSpec>
<ProcedureBlock>0</ProcedureBlock>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// при одиночной печати просто определяем принтер по пользователю, если пользователь вдруг не задан. тогда принтер по умолчанию
	//при групповой печати - принтер определяем по курьеру
	set printer=""
	if $get(pCourier)'="" {
		set printerinfo=##class(TCLEx.Function.Printer).getPrinterByCourierDRP(pCourier)
		set printer=$piece(printerinfo,$char(0),1)
	} 
	if printer="" {
		if $get(pUser)'="" {
		    set printer=##class(TCLEx.Function.Printer).getUserDefaultPrinter(pUser)
	    }
	}
	if printer="" {
	    	set printer=##class(TCLEx.Function.Printer).DefaultPrinter()
	}
	quit printer
]]></Implementation>
</Method>
</Class>
</Export>
