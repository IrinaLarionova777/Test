<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.BI.Function.RunTimeVariable">
<Super>%RegisteredObject</Super>
<TimeCreated>63476,66470.012028</TimeCreated>

<Method name="GetFilterPeriodDays">
<Description>
Получить фильтр для даты в виде дней 
Период с первого числа предпредыдущего месяца по текущий день
pMonthsBack - кол-во месяцев назад (с первого числа)
pMonthsBack=2 - Период с первого числа предпредыдущего месяца по текущий день
pMonthsBack=0 - Период с первого числа текщего месяца по текущий день</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pMonthsBack:%Integer=2</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set returnValue=""
	try {
		set cdate=$zd(+$h,8)
		set year=$extract(cdate,1,4)
		set month=+$extract(cdate,5,6)
		set day=+$extract(cdate,7,8)
		set month=month-2
		if month'>0 {
			set month=month+12
			set year=year-1
		}
		set returnValue="&["_$zdh(year_$tr($j(month,2)," ","0")_"01",8)_"]:&["_(+$h)_"]"
	} catch(e) {
		set returnValue=""
		do ##class(TCLEx.Function.General).WriteError($ze,$CLASSNAME()_":GetFirstDay()")
	} 
	
	quit returnValue
]]></Implementation>
</Method>

<Method name="GetFirstDay">
<Description>
Получить первую дату предпредыдущего месяца</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set returnValue=""
	try {
		set cdate=$zd(+$h,8)
		set year=$extract(cdate,1,4)
		set month=+$extract(cdate,5,6)
		set day=+$extract(cdate,7,8)
		set month=month-2
		if month'>0 {
			set month=month+12
			set year=year-1
		}
		set returnValue=$zdh(year_$tr($j(month,2)," ","0")_"01",8)
	} catch(e) {
		set returnValue=""
		do ##class(TCLEx.Function.General).WriteError($ze,$CLASSNAME()_":GetFirstDay()")
	} 
	
	quit returnValue
]]></Implementation>
</Method>
</Class>
</Export>
