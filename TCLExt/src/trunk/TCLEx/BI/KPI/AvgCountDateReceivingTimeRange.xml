<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.BI.KPI.AvgCountDateReceivingTimeRange">
<Description>
Таблица: строки-диапазоны времени доставки, 
столбцы-среднее количество эпизодов за календарный день, если есть фильтр по дням достаки, 
если такой фильтр не задан, то среднее за календарный день (период - от минимального до максимального фактического дня доставки, обе граничные даты дополнены до полного месяца) </Description>
<Super>TCLEx.BI.KPI.MDXAutoFiltersKPI</Super>
<TimeCreated>63403,55707.1619</TimeCreated>

<Parameter name="DOMAIN">
</Parameter>

<Parameter name="RESOURCE">
</Parameter>

<Parameter name="CUBE">
<Default>EPVISITNUMBER</Default>
</Parameter>

<XData name="KPI">
<Description>
Этот блок XData содержит определение KPI</Description>
<XMLNamespace>http://www.intersystems.com/deepsee/kpi</XMLNamespace>
<Data><![CDATA[
<kpi xmlns="http://www.intersystems.com/deepsee/kpi"
 name="KPI/Поступление заявок в лабораторию (диапазон времени доставки)" sourceType="mdx"
 caption="Поступление заявок в лабораторию (диапазон времени доставки)"
 mdx='SELECT NON EMPTY {%LABEL({%KPI("%DeepSee.AverageDay","AVGDAY",1,"%measure","%COUNT","%dimension","DxReceivingDay","%CONTEXT")},"","#")} ON 0,  NON EMPTY [ReceivingTime].[H1].[ReceivingTimeRange].Members ON 1  FROM [EPVisitNumber]'
>
<property name="Avg" displayName="Среднее за день" columnNo="1"/>
<!-- for testing : <property name="PatCount" displayName="Количество" columnNo="2"/>-->

<filter name="[RECEIVINGDATE].[H1].[RECEIVINGDAY]" displayName="Период"  filterProperty="Day" searchType="day" />
</kpi>
]]></Data>
</XData>

<Method name="%OnGetMDX">
<Description>
Implementation; can be overridden.</Description>
<FormalSpec><![CDATA[&pMDX:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	 set qDays=0
	 set stringFilters=..FilterBuilder(.qDays)
	 if qDays>0 {
		 set mdx="SELECT NON EMPTY {%LABEL({[Measures].[%COUNT]/"_qDays_"},"""",""#""),[Measures].[%COUNT]} ON 0,  NON EMPTY [ReceivingTime].[H1].[ReceivingTimeRange].Members ON 1  FROM [EPVisitNumber]"
	 } else {
		 set mdx="SELECT NON EMPTY {%LABEL({%KPI(""%DeepSee.AverageDay"",""AVGDAY"",1,""%measure"",""%COUNT"",""%dimension"",""DxReceivingDay"",""%CONTEXT"")},"""",""#""),[Measures].[%COUNT]} ON 0,  NON EMPTY [ReceivingTime].[H1].[ReceivingTimeRange].Members ON 1  FROM [EPVisitNumber]"
	 }
	 set pMDX=mdx_stringFilters
	 //set ^test("ds",777,$i(^test("ds",777)))=pMDX
     quit $$$OK
]]></Implementation>
</Method>

<Method name="FilterBuilder">
<Description><![CDATA[
Examines the filters defined in the cube, determines the current value of each, 
returns a string that can be used as the %FILTER clause.
pQdays - кол-во дней из фильтра по дню доставки
Если pQdays>0, то один mdx, иначе - другой mdx]]></Description>
<FormalSpec><![CDATA[&pQdays:%Integer]]></FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set pQdays=0
 	set tFilters=""
 	set tSC = ##class(%DeepSee.Dashboard.Utils).%GetFiltersForDataSource(..#CUBE_".cube",.tFilters)
	quit:$$$ISERR(tSC) ""
   
    //iterate through defined filters and build up usedFilters array
	set i = "",usedFilters=0
	for {
		set i = $order(tFilters(i))
		quit:i=""

	    set filter=tFilters(i)
	   	set filterName=$LI(filter,2)
		set filterValue=$PROPERTY(..%filterValues,filterName)
		
		if filterValue'="" { 
		    if $zcvt(filterName,"U")="[RECEIVINGDATE].[H1].[RECEIVINGDAY]" {
			    set date1=0,date2=0  // даты начала и окончания периода
			    set date1=..ParseFilterDate($piece(filterValue,":",1))
			    set date2=$piece(filterValue,":",2)
			    if date2'="" set date2=..ParseFilterDate(date2)
			    if date1>0 set pQdays=$select((date2>date1):date2-date1+1,(+date2=0):1,1:0)
		    }
		    set usedFilters=usedFilters+1
			do ..ParseFilterValue(filterValue,.FilterStateArray)
			// create usedFilters array
	    	//used FilterStateArray and build the string for this filter
	    	set string=..BuildString(filterName,.FilterStateArray)
	    	set usedFilters(usedFilters)=string
	    } ; end of looking at non-null filters

    } ; end of looking at defined filters
    
    set where=""
    if usedFilters>=1 {
       set where=..CombineFilterStrings(.usedFilters)
    }
    quit where
]]></Implementation>
</Method>

<Method name="ParseFilterDate">
<Description><![CDATA[
РАзбор строки типа &[NOW] or &[63234] or &[NOW-10] or &[NOW+10]]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pDate:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	if pDate="" quit ""
	set pDate=$tr(pDate,"&[] ","")
	if $isvalidnum(pDate) quit pDate
	if pDate="NOW" quit +$h
	if pDate["NOW-" {
	    set qdays=$piece(pDate,"NOW-",2)
	    quit $select(qdays>0:$h-qdays,1:+$h)
	}
	if pDate["NOW+" {
	    set qdays=$piece(pDate,"NOW+",2)
	    quit $select(qdays>0:$h+qdays,1:+$h)
	}
	quit ""
]]></Implementation>
</Method>
</Class>
</Export>
