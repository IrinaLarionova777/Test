<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.BI.UI.UserPortal.Home">
<Description><![CDATA[
Home page for the User Portal.<br/>
This provides end users a way to access reports, dashboards etc.]]></Description>
<Super>TCLEx.BI.UI.UserPortal.standartPage</Super>
<TimeCreated>62938,61882.857544</TimeCreated>

<Parameter name="PAGENAME">
<Description>
Name of this page.</Description>
<Default>DeepSee Home</Default>
</Parameter>

<Parameter name="HOMEPAGE">
<Description>
URL of home page (used in links).</Description>
<Default>_DeepSee.UserPortal.Home.zen</Default>
</Parameter>

<Parameter name="WORKLIST1VIEW">
<Description>
Starting view for worklist 1.</Description>
</Parameter>

<Parameter name="WORKLIST2VIEW">
<Description>
Starting view for worklist 2.</Description>
</Parameter>

<Property name="folderName">
<Description>
Current folder name.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="dashboardName">
<Description>
Name of the new dashboard.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="dashboardTitle">
<Description>
Title of the new dashboard.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="dashboardDescription">
<Description>
Description of the new dashboard.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="dashboardOwner">
<Description>
Owner of the currently displayed dashboard.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="dashboardResource">
<Description>
Resource for the currently displayed dashboard.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="dashboardSnapGrid">
<Description><![CDATA[
If true, the dashboard uses the new snapGrid desktop and ignores the
the <property>dashboardSnapTo</property> property.]]></Description>
<Type>%ZEN.Datatype.boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="dashboardSnapTo">
<Description>
Is dashboard in "snap to" mode.</Description>
<Type>%ZEN.Datatype.boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="dashboardGridRows">
<Description>
If dashboard uses snap grid, then this is then number of grid rows.</Description>
<Type>%ZEN.Datatype.integer</Type>
<InitialExpression>2</InitialExpression>
</Property>

<Property name="dashboardGridCols">
<Description>
If dashboard uses snap grid, then this is then number of grid columns.</Description>
<Type>%ZEN.Datatype.integer</Type>
<InitialExpression>2</InitialExpression>
</Property>

<Property name="dashboardResize">
<Description>
Does this dashboard allow the user to move and resize widgets.</Description>
<Type>%ZEN.Datatype.boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="dashboardModify">
<Description>
Does this dashboard allow the user to modify widgets.</Description>
<Type>%ZEN.Datatype.boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="dashboardKeywords">
<Description>
Keywords for the new dashboard.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="dashboardLocked">
<Description>
Locked state of the currently displayed dashboard.</Description>
<Type>%ZEN.Datatype.boolean</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="dashboardPublic">
<Description>
Public state of the currently displayed dashboard.</Description>
<Type>%ZEN.Datatype.boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Property name="selectedItemName">
<Description>
Name of selected item.</Description>
<Type>%ZEN.Datatype.string</Type>
</Property>

<Property name="folderCategory">
<Description>
Current folder category (used for filtering).</Description>
<Type>%ZEN.Datatype.string</Type>
<InitialExpression>"all"</InitialExpression>
</Property>

<XData name="Style">
<Data><![CDATA[
<style type="text/css">

#contentsLeft {
	width: 400px;
}

.EmptyMsg {
	padding: 20px;
	font-size: 20px;
	color: #808080;
}

.rowHover {
	background: #FFEEAA;
}

.fcLabel {
	font-size: 11px;
	color: #606060;
}

a.toggleButton {
	text-decoration: none;
	font-size: 20px;
	color: #606060;
}

a.toggleButton:hover {
	color: darkred;
}

a.folderCategory {
	padding-left:2px;
	padding-right:2px;
	text-decoration: none;
	font-size: 13px;
	color: #4b94cc;
	font-weight: normal;
}

a.folderCategorySelected {
	padding-left:2px;
	padding-right:2px;
	text-decoration: none;
	font-size: 13px;
	color: #404040;
	background: #FFEEAA;
	font-weight: normal;
}

a.folderCategory:hover,a.folderCategorySelected:hover {
	color: darkred;
}

</style>
]]></Data>
</XData>

<XData name="menuPane">
<Description>
This XML defines the menu for this page.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane xmlns="http://www.intersystems.com/zen">
<!--
<csMenuBar id="mainMenu" width="100px">
<csMenuBarItem caption="Menu">
<contextMenu id="fileMenu">
<csMenuItem id="newDashboard" caption="New Dashboard" title="Create a new dashboard" onclick="zenPage.newDashboard();" />
<csMenuItem id="analyzer" caption="Analyzer" title="Go to the DeepSee Analyzer" onclick="zenPage.gotoAnalyzer();" />
<csMenuSeparator/>
<csMenuItem id="register" caption="Register for Alerts" title="Sign up to receive alerts from other users" onclick="zenPage.registerUser();" />
<csMenuItem id="smp" caption="Management Portal" title="Go to the System Management Portal" onclick="zenPage.gotoSMP();" />
</contextMenu>
</csMenuBarItem>
</csMenuBar>
-->
</pane>
]]></Data>
</XData>

<XData name="contentsRightPane">
<Description>
This XML defines the main display area.</Description>
<XMLNamespace>http://www.intersystems.com/zen</XMLNamespace>
<Data><![CDATA[
<pane xmlns="http://www.intersystems.com/zen">
<html id="foldersHeader" OnDrawContent="DrawFoldersHeader"/>
<html id="foldersList" OnDrawContent="DrawFoldersList"/>
<html id="foldersFooter" OnDrawContent="DrawFoldersFooter"/>
</pane>
]]></Data>
</XData>

<Method name="DrawWorklistTitle">
<Description>
Draw the contents of the worklist title area.</Description>
<Final>1</Final>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Try {
		Set tUserName = ##class(TCLEx.BI.Utils).GetSessionUserName() //##class(%DeepSee.UserPortal.Utils).%GetUserName()
		Write $$$FormatTextHTML($$$Text("Welcome, %1"),tUserName)
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
]]></Implementation>
</Method>

<Method name="DrawFoldersHeader">
<Description>
Draw the contents of the Folders Header area.</Description>
<Final>1</Final>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Try {
		Set hlpRefresh = $$$Text("Refresh the folder list","%DeepSee")
		Set hlpSearch = $$$Text("Search for items","%DeepSee")

		Set msgRefresh = $$$Text("refresh","%DeepSee")
		Set msgSearch = $$$Text("Search","%DeepSee")
		Set msgGo = $$$Text("Go","%DeepSee")
		
		&html<<div class="foldersHeaderDiv">
		<div style="padding-bottom:3px;">
		<a class="toggleButton" id="toggle" onclick="zenPage.toggleLayout();">&laquo;</a>
		<image class="icon" style="vertical-align:bottom;height:24px;padding:2px;" title="#(hlpRefresh)#" src="deepsee/ds2_refresh_44.png" onclick="zenPage.refreshFolders();"/>
		&nbsp;&nbsp;<nobr><input id="searchBox" type="text" size="40" value="#(msgSearch)#" style="color:silver;" onfocus="zenPage.activateSearchBox();" onchange="zenPage.doSearch();" onkeypress="zenPage.searchKeyPress(event);"/>
		<input class="commandButton" title="#(hlpSearch)#" type="button" value="#(msgGo)#" onclick="zenPage.doSearch();"/></nobr>>

		// folder category buttons
		Set tCat(1) = $LB("all",$$$Text("All"),$$$Text("Show all items"))
		Set tCat(2) = $LB("personal",$$$Text("Personal"),$$$Text("Show my items"))
		Set tCat(3) = $LB("shared",$$$Text("Shared"),$$$Text("Show shared items"))
		Set tCat(4) = $LB("public",$$$Text("Public"),$$$Text("Show public items"))

		If $D(tCat) {
			Set tLabel = $$$Text("Show")
			&html<&nbsp;&nbsp;<span class="fcLabel">#(tLabel)#:</span>>
			Set k = $O(tCat(""))
			While (k'="") {
				Set tOpt = $LG(tCat(k),1)
				Set tFClass = $S(tOpt=..folderCategory:"folderCategorySelected",1:"folderCategory")
				&html<<a class="#(tFClass)#" id="fopt_#(tOpt)#" href="#" title="#($ZCVT($LG(tCat(k),3),"O","HTML"))#" onclick="zenPage.setFolderCategory('#(tOpt)#');return false;">#($ZCVT($LG(tCat(k),2),"O","HTML"))#</a>>
				Set k = $O(tCat(k))
			}
		}
		&html<</div>
		</div>>
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
]]></Implementation>
</Method>

<Method name="DrawFoldersFooter">
<Description>
Draw the contents of the Folders Footer area.</Description>
<Final>1</Final>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Try {
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
]]></Implementation>
</Method>

<Method name="DrawFoldersList">
<Description>
Draw the contents of the Folders area.</Description>
<Final>1</Final>
<FormalSpec>pSeed:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Try {
		Set tSearch = $$$UPPER(..searchKey)

		Set tFolderIconUp = "portal/disc_up_24.gif"
		Set tFolderIconDown = "portal/disc_down_24.gif"
		Set tFavIcon = "deepsee/ds2_star_44.png"
		Set tDelIcon = "deepsee/ds2_x_44.png"
		Set hlpFav = $$$Text("Add this item to the favorites list","%DeepSee")
		Set hlpDel = $$$Text("Delete this item","%DeepSee")

        set tUser=""
        if $isObject(%session) {
	        if $get(%session.Data("User","Role"))'="" set tUser=%session.Data("User","Id")
        } 

		Set tSC = ##class(TCLEx.Data.BindUserReportDeepSee).%GetFolderItemsForUser(.tList,..folderName,..searchKey,,,tUser)
		If $$$ISERR(tSC) Quit

		// check if we need to show WorkFlow inbox link
		Set tHasWorkflow = 0
		Set tWorkflowItems = 0
		Try {
			If ($System.Version.GetMajor() > 2010) {
				If (##class(%Library.EnsembleMgr).IsEnsembleNamespace()) {
					// check if user is registered for workflow
					If ($ClassMethod("EnsLib.Workflow.UserDefinition","%ExistsId",$UserName)) {
						Set tHasWorkflow = 1
						Set tWorkflowItems = ##class(EnsLib.Workflow.Engine).CountTasksForCurrentUser()
					}
				}
			}
		}
		Catch(ex) {
			Set tHasWorkflow = 0
		}

		If $D(tList) {
			// build list to display
			Set tCurrFolder = -1E14
			Set k = $O(tList(""))
			While (k'="") {
				Set tName = $LG(tList(k),1)
				Set tTitle = $LG(tList(k),9)
				Set tKeywords = $LG(tList(k),7)
				Set tOwner = $LG(tList(k),10)
				Set tResource = $LG(tList(k),11)
			
				// use title as display, if present
				If (tTitle = "") {
					Set tSearchName = tName
					Set tSortKey = $$$UPPER(tName)
				}
				Else {
					Set tSearchName = tTitle
					Set tFolder = $P(tName,"/",1,$L(tName,"/")-1)
					Set tSortKey = $$$UPPER(tFolder_$S(tFolder="":"",1:"/")_tTitle)
				}

				// apply search key, if present
				Set tSkip = 0
				if (tSearch'="") {
					If (($$$UPPER(tSearchName)'[tSearch)&&($$$UPPER(tKeywords)'[tSearch)) {
						Set tSkip = 1
					}
				}
				// apply category, if present
				If (('tSkip) && (..folderCategory'="all")) {
					Set tShow = 0
					If (..folderCategory="personal") {
						// items where owner = current user
						If (tOwner=$UserName) {
							Set tShow = 1
						}
					}
					ElseIf (..folderCategory="shared") {
						// items where owner '= current user AND there is a resource
						If ((tOwner'=$UserName)&&(tResource'="")) {
							Set tShow = 1
						}
					}
					ElseIf (..folderCategory="public") {
						// items where owner '= current user AND there is no resource
						If ((tOwner'=$UserName)&&(tResource="")) {
							Set tShow = 1
						}
					}
					Set tSkip = 'tShow
				}

				If ('tSkip) {
					Set tFolder = $P(tName,"/",1,$L(tName,"/")-1)
					If ((tFolder'="") && (tFolder '= tCurrFolder)) {
						// new folder
						Set tCurrFolder = tFolder
						Set tItems($$$UPPER(tCurrFolder)) = tFolder
					}
					Set tItems($$$UPPER(tCurrFolder),tSortKey) = tList(k)
				}
				Set k = $O(tList(k))
			}
		}

		If ($D(tList)||(tHasWorkflow)) {
			Set msgName = $$$Text("Name")
			Set msgType = $$$Text("Type")
			Set msgKeyword = $$$Text("Keywords")
			Set tTruncLen = 50

			&html<<div id="folderList">
			<table class="listTable" width="100%" cellspacing="0" border="0" cellpadding="0">>
			&html<<tr class="listHeader">
				<th>&nbsp;</th>
				<th>&nbsp;</th>
				<th width="50%">#(msgName)#</th>
				<th>#(msgType)#</th>
				<th width="25%">#(msgKeyword)#</th>
				<th>&nbsp;</th>
				</tr>>

			Set r = 0

			If (tHasWorkflow) {
				// show link to workflow inbox as first row
				Set r = r + 1
				Set tKeywords = "&nbsp;"
				Set tCls = $S(r#2:"listRowOdd",1:"listRowEven")
				Set tTip = $$$TextHTML("View the Workflow Inbox")
				Set tURL = "_DeepSee.UserPortal.Workflow.zen"
				Set tName = $$$TextHTML("Workflow Inbox") _ "&nbsp;&#151;&nbsp;"_"<i>" _ $$$FormatText($$$TextHTML("%1 item(s)"),tWorkflowItems)_"</i>"
				&html<<tr id="frow_#(r)#" class="#(tCls)#" title="#(tTip)#" onmouseover="this.className='rowHover';" onmouseout="this.className='#(tCls)#';">
				<td>&nbsp;</td>>
				&html<<td nowrap="1">>
				// &html<<image src="images/spacer.gif" style="width:24px;height:24px;"/>>
				&html<<image style="width:24px;height:24px;padding:2px;" src="deepsee/ds2_group_44.png"/>>
				&html<</td>>
				&html<
					<td><a href="#(tURL)#">#(tName)#</a></td>
					<td class="workListType" nowrap="1">#($$$Text("Inbox"))#</td>
					<td nowrap="1">&nbsp;</td>
					<td nowrap="1">&nbsp;</td>
					</tr>>

			}

			Set tCurrFolder = ""
			Set f = $O(tItems(""))
			While (f'="") {
				If (f '= -1E14) {
					// folder
					Set tName = $G(tItems(f))
					Set tIndent = $L(tName,"/")

					For p = 1:1:$L(tName,"/") {
						Set tTest = $P(tCurrFolder,"/",p)
						Set tFolderName = $P(tName,"/",p)
						Set tFName = $P(tName,"/",1,p)

						If ($$$UPPER(tTest) '= $$$UPPER(tFolderName)) {
							Set tURL = ""
							Set tTip = tName
							Set r = r + 1
							Set tFolderIndent = p-1
							Set tCls = $S(r#2:"listRowOdd",1:"listRowEven")
							&html<<tr id="frow_#(r)#" class="#(tCls)#" style="font-weight:bold;color:#404040;" title="#(tTip)#" folderName="#($ZCVT(tFName,"O","HTML"))#" expanded="1" onmouseover="this.className='rowHover';" onmouseout="this.className='#(tCls)#';">
								<td>&nbsp;</td>>
								&html<<td>
								<image src="images/spacer.gif" style="width:#(tFolderIndent*24)#px;height:24px;"/>
								<image id="icon_#(r)#" src="#(tFolderIconDown)#" style="width:24px;height:24px;" alt="+" onclick="zenPage.toggleFolder(#(r)#);"/>
								</td>>
								&html<
								<td>#(tFolderName)#</td>
								<td>#($$$Text("Folder","%DeepSee"))#</td>
								<td>&nbsp;</td>
								<td>&nbsp;</td>
								</tr>>
						}
					}
				}
				Else {
					Set tIndent = 0
				}
				Set tCurrFolder = f

				// items in folder
				Set n = $O(tItems(f,""))
				While (n'="") {
					// pItems(n) = $LB(name,type,tip,date,url,icon,keywords,public,title,createdBy)
					Set tName = $LG(tItems(f,n),1)
					Set tType = $LG(tItems(f,n),2)
					Set tTip = $LG(tItems(f,n),3)
					Set tURL = $LG(tItems(f,n),5)
					Set tIcon = $LG(tItems(f,n),6)
					Set tKeywords = $LG(tItems(f,n),7)
					Set tShortName = $P(tName,".",1)
					Set tShortName = $P(tShortName,"/",$L(tShortName,"/"))
					Set tTitle = $LG(tItems(f,n),9)
					If (tTitle'="") {
						Set tShortName = tTitle
					}
					Set r = r + 1
					Set:tKeywords="" tKeywords = "&nbsp;"
					Set tCls = $S(r#2:"listRowOdd",1:"listRowEven")
					&html<<tr id="frow_#(r)#" class="#(tCls)#" title="#(tTip)#" folderName="#($ZCVT(tName,"O","HTML"))#" onclick="zenPage.selectItem('#($ZCVT(tName,"O","HTML"))#');" onmouseover="this.className='rowHover';" onmouseout="this.className='#(tCls)#';">
					<td>&nbsp;</td>>
					&html<<td nowrap="1">>
					&html<<image src="images/spacer.gif" style="width:#(tIndent*24)#px;height:24px;"/>>
					If (tIcon '= "") {
						&html<<image style=width:20px;height:20px;" src="#(tIcon)#" alt="#(tType)#"/>>
					}
					&html<</td>>
					&html<
						<td><a href="#(tURL)#">#(tShortName)#</a></td>
						<td class="workListType">#(tType)#</td>
						<td class="workListKeyWord">#(tKeywords)#</td>
						<td nowrap="1" style="vertical-align:bottom;">
						<image style="width:18px;height:18px;opacity:0.8;" src="#(tFavIcon)#" alt="Favorite" title="#(hlpFav)#" onclick="zenPage.addToFavorites('#($ZCVT($ZCVT(tName,"O","JS"),"O","HTML"))#');"/>
						&nbsp;
						<image style="width:12px;height:12px;padding-bottom:2px;opacity:0.8;" src="#(tDelIcon)#" alt="Delete" title="#(hlpDel)#" onclick="zenPage.deleteItem('#($ZCVT($ZCVT(tName,"O","JS"),"O","HTML"))#');"/>
						&nbsp;
						</td>
						</tr>>

					Set n = $O(tItems(f,n))
				}
				Set f = $O(tItems(f))
			}
			&html<</table></div>>
		}

		If '$D(tList) {
			&html<<div class="EmptyMsg">#($$$TextHTML("Your folders are currently empty.","%DeepSee"))#</div>>
			&html<<div class="EmptyMsg">#($$$TextHTML("You can create new items using the menu.","%DeepSee"))#</div>>
			Quit
		}

	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
]]></Implementation>
</Method>

<Method name="%OnAfterCreatePage">
<Description>
Decorate the page.</Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set tSC = $$$OK

	Try {
		// check privileges
		Do CheckPortalUseAccess^%qdsUtils()

		Set tSC = ##super()
		If $$$ISERR(tSC) Quit

		// override title
		Set ..title = $ZCVT($G(^DeepSee.UserPortalSettings("PageTitle"),$$$Text("DeepSee","%DeepSee")),"O","HTML")

		// Remove smp links if not a developer
		If '$System.Security.Check("%Development","U") {
			Set tMenu = ..%GetComponentById("smp")
			If $IsObject(tMenu) {
				Do tMenu.parent.%RemoveChild(tMenu)
			}
		}

		If ('$$CheckAnalyzerViewAccess^%qdsUtils()) {
			Set tMenu = ..%GetComponentById("analyzer")
			If $IsObject(tMenu) {
				Do tMenu.parent.%RemoveChild(tMenu)
			}
		}

		// Remove new dashboard option if user cannot write
		If ('..canWrite) {
			Set tMenu = ..%GetComponentById("newDashboard")
			If $IsObject(tMenu) {
				Do tMenu.parent.%RemoveChild(tMenu)
			}
		}
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	Quit tSC
]]></Implementation>
</Method>

<Method name="%OnGetTitle">
<Description>
Get the (localized) title string for the page.
This should be implemented in a subclass.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$Text("DeepSee Portal")
]]></Implementation>
</Method>

<Method name="%OnGetPageName">
<Description>
Get the (localized) name of the page.
This should be implemented in a subclass.</Description>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit $$$Text("UserPortal Home")
]]></Implementation>
</Method>

<Method name="refreshFolders">
<Description>
Reload the folder list.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var folders = zen('foldersList');
	// reset scrolling
	folders.getEnclosingDiv().scrollTop = 0;
	folders.refreshContents();
]]></Implementation>
</Method>

<Method name="activateSearchBox">
<Description>
Activate the search text box;</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var ctrl = self.document.getElementById('searchBox');
	if (ctrl && ctrl.style.color=='silver') {
		ctrl.style.color = '';
		ctrl.value = '';
	}
]]></Implementation>
</Method>

<Method name="searchKeyPress">
<Description>
Key press in search box (work-around for ie).</Description>
<FormalSpec>evt</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	evt = evt ? evt : event;
	if (evt.keyCode == zenENTER) {
		zenPage.doSearch();
	}
]]></Implementation>
</Method>

<Method name="doSearch">
<Description>
Perform a search.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var ctrl = self.document.getElementById('searchBox');
	if (ctrl && ctrl.style.color=='silver') {
		return;
	}
	this.searchKey = ctrl.value;
	this.refreshFolders();
]]></Implementation>
</Method>

<Method name="toggleFolder">
<Description>
Hide/show folders in list.</Description>
<FormalSpec>index</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var folder = self.document.getElementById('frow_'+index);
	var folderName = folder.getAttribute('folderName');
	var expanded = !(parseInt(folder.getAttribute('expanded')) == 1);
	var icon = self.document.getElementById('icon_'+index);
	icon.src = !expanded ? 'portal/disc_up_24.gif' : 'portal/disc_down_24.gif';
	folder.setAttribute('expanded',expanded ? 1 : 0);
	
	// visit each row in the table
	var row = 0;
	while(true) {
		row++;
		var tr = self.document.getElementById('frow_'+row);
		if (!tr) break;
		
		var name = tr.getAttribute('folderName');
		if (name) {
			if ((name.substr(0,folderName.length+1) == folderName+'/') && (name!=folderName)) {
				tr.style.display = expanded ? '' : 'none';
			}
		}
	}

	// now re-apply stripes
	var n = 0;
	var row = 0;
	while(true) {
		row++;
		var tr = self.document.getElementById('frow_'+row);
		if (!tr) break;
		
		if (tr.style.display == '') {
			n++;
			tr.className = (n%2) ? 'listRowOdd' : 'listRowEven';
		}
	}
]]></Implementation>
</Method>

<Method name="onAdjustSizes">
<Description>
Adjust sizes of content area.</Description>
<FormalSpec>load,contentWidth,contentHeight</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	try {
		// folders
		var fHeader = zen('foldersHeader');
		var fList = zen('foldersList');
		var fFooter = zen('foldersFooter');
		if (fHeader && fList && fFooter) {
			var fHeaderDiv = fHeader.getEnclosingDiv();
			var fListDiv = fList.getEnclosingDiv();
			var fFooterDiv = fFooter.getEnclosingDiv();

			var flh = contentHeight - fHeaderDiv.offsetHeight - fFooterDiv.offsetHeight;
			if (flh < 0) {
				fListDiv.style.display = 'none';
			}
			else {
				fListDiv.style.display = '';
				fListDiv.style.height = flh + 'px';
				fListDiv.style.width = contentWidth + 'px';
				fHeaderDiv.style.width = contentWidth + 'px';
			}
		}
	}
	catch(ex) {
		zenExceptionHandler(ex,arguments,'Error in onAdjustSizes');
	}
]]></Implementation>
</Method>

<Method name="onPopupAction">
<Description>
This client event is fired when the a popup page launched from this page fires an action.</Description>
<FormalSpec>popupName,action,value</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	switch(popupName) {
	case 'DashboardSave':
		var msg = this.SaveDashboardToFolder();
		if (msg!="") {
			alert(msg);
		}
		else {
			// show the new dashboard
			var url = this.viewerURL;
			url = url + ((url.indexOf('?')!=-1) ? '&' : '?') + 'DASHBOARD=' + encodeURIComponent(this.dashboardName);
			zenPage.gotoPage(url);
		}
		break;
	case 'Register':
		zenPage.updateWorklistTitle();
		break;
	}
]]></Implementation>
</Method>

<Method name="newDashboard">
<Description>
Create a new dashboard.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	// show save dialog
	var parms = {
			NEW:1,
			DASHBOARD:'',
			TITLE:'',
			WORDS:'',
			DESC:''
			};
	zenLaunchPopupWindow('_DeepSee.UI.Dialog.DashboardSave.zen','DashboardSave','status,scrollbars,resizable=yes,width=700,height=600',parms);
]]></Implementation>
</Method>

<Method name="SaveDashboardToFolder">
<Description>
Save the new dashboard.</Description>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tSC = $$$OK
	Set tMsg = ""
	Try {
		// test for overwrite
		If (##class(%DeepSee.UserLibrary.Utils).%FolderItemExists(..dashboardName)) {
			Set tMsg = ..SendItemToTrash(..dashboardName)
			If (tMsg'="") Quit
		}

		// create and save dashboard
		Set tDashboard = ##class(%DeepSee.Dashboard.Definition).%New()
		Set tDashboard.fullName = ..dashboardName
		Set tDashboard.title = ..dashboardTitle
		Set tDashboard.keywords = ..dashboardKeywords
		Set tDashboard.description = ..dashboardDescription
		Set tDashboard.public = ..dashboardPublic
		Set tDashboard.locked = ..dashboardLocked
		Set tDashboard.worklistCount = ..worklistCount
		Set tDashboard.owner = ..dashboardOwner
		Set tDashboard.resource = ..dashboardResource

		// JMD1053
		Set tDashboard.snapTo = ..dashboardSnapTo
		Set tDashboard.snapGrid = ..dashboardSnapGrid

		Set tDashboard.canModify = ..dashboardModify
		Set tDashboard.canResize = ..dashboardResize
		Set tDashboard.gridRows = ..dashboardGridRows
		Set tDashboard.gridCols = ..dashboardGridCols

		Set tSC = tDashboard.%Save()
		If $$$ISERR(tSC) Quit
	}
	Catch(ex) {
		Set tSC = ex.AsStatus()
	}
	If $$$ISERR(tSC) {
		Set tMsg = $System.Status.GetOneErrorText(tSC)
	}
	Quit tMsg
]]></Implementation>
</Method>

<Method name="deleteItem">
<Description>
Delete the given item.</Description>
<FormalSpec>name</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	if (confirm('Do you want to delete this item?\n'+name,false)) {
		var msg = zenPage.SendItemToTrash(name);
		if ('' != msg) {
			alert(msg);
		}
		if (this.selectedItemName==name) {
			this.selectedItemName = '';
		}
		this.refreshFolders();
	}
]]></Implementation>
</Method>

<Method name="selectItem">
<Description>
Select the given item.</Description>
<FormalSpec>name</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	this.selectedItemName = name;

	// update details panel
	var details1 = self.document.getElementById('details1');
	var details2 = self.document.getElementById('details2');
	if (details1 || details2) {
		var html = this.getDetailsHTML();
		if (details1) {
			details1.innerHTML = html;
		}
		if (details2) {
			details2.innerHTML = html;
		}
	}
]]></Implementation>
</Method>

<Method name="gotoAnalyzer">
<Description>
Show the analyzer page.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[	zenPage.gotoPage('_DeepSee.UserPortal.Analyzer.zen');
]]></Implementation>
</Method>

<Method name="gotoSMP">
<Description>
Show the System Management portal.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[	zenPage.gotoPage('%25CSP.Portal.Home.zen');
]]></Implementation>
</Method>

<Method name="registerUser">
<Description>
Show the register user dialog.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[	zenLaunchPopupWindow('_DeepSee.UI.Dialog.RegisterUser.zen','Register','status,scrollbars,resizable=yes,width=700,height=600');
]]></Implementation>
</Method>

<Method name="updateWorklistTitle">
<Description>
Update the title for the dashboard.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var html = zen('worklistTitle');
	html.refreshContents();
]]></Implementation>
</Method>

<Method name="%OnGetWorklistOptions1">
<Description>
Return list of options for work list 1.</Description>
<FormalSpec>*pOptions,*pDefaultMode</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pDefaultMode = ""
	If +$G(^DeepSee.UserPortalSettings("Worklist")) {
		Set n = $O(^DeepSee.UserPortalSettings("Worklist","Home",1,""))
		While (n'="") {
			// $LB(name,class)
			Set pOptions($I(k)) = $LB("option"_n,^DeepSee.UserPortalSettings("Worklist","Home",1,n))
			Set:pDefaultMode="" pDefaultMode = "option"_n
			Set n = $O(^DeepSee.UserPortalSettings("Worklist","Home",1,n))
		}	
	}
	Else {
		Quit ##super(.pOptions,.pDefaultMode)
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="%OnGetWorklistOptions2">
<Description>
Return list of options for work list 2.</Description>
<FormalSpec>*pOptions,*pDefaultMode</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pDefaultMode = ""
	If +$G(^DeepSee.UserPortalSettings("Worklist")) {
		Set n = $O(^DeepSee.UserPortalSettings("Worklist","Home",2,""))
		While (n'="") {
			// $LB(name,class)
			Set pOptions($I(k)) = $LB("option"_n,^DeepSee.UserPortalSettings("Worklist","Home",2,n))
			Set:pDefaultMode="" pDefaultMode = "option"_n
			Set n = $O(^DeepSee.UserPortalSettings("Worklist","Home",2,n))
		}	
	}
	Else {
		Quit ##super(.pOptions,.pDefaultMode)
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getDetailsHTML">
<Description>
Get contents for the item details box.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var html = [];
	try {
		if (this.selectedItemName.length == '') {
			html[html.length] = '<div class="detailLabel">' + $$$Text('Details on selected item') + '</div>';
		}
		else {
			var name = this.selectedItemName;

			var info = this.GetItemDetails(name);
			if (info) {
				if (info.type && '' !== info.type) {
					html[html.length] = '<div class="detailLabel">' + $$$Text('Type') + '</div>';
					html[html.length] = '<div class="detailValue">' + zenEscapeXML(info.type) + '</div>';
				}

				if (info.folderName && '' !== info.folderName) {
					html[html.length] = '<div class="detailLabel">' + $$$Text('Folder') + '</div>';
					html[html.length] = '<div class="detailValue">' + zenEscapeXML(info.folderName) + '</div>';
				}

				if (info.title && '' !== info.title) {
					html[html.length] = '<div class="detailLabel">' + $$$Text('Name') + '</div>';
					html[html.length] = '<div class="detailValue">' + zenEscapeXML(info.title) + '</div>';
				}

				if (info.owner && '' !== info.owner) {
					html[html.length] = '<div class="detailLabel">' + $$$Text('Owner') + '</div>';
					html[html.length] = '<div class="detailValue">' + zenEscapeXML(info.owner) + '</div>';
				}

				if (info.description && '' !== info.description) {
					html[html.length] = '<div class="detailLabel">' + $$$Text('Description') + '</div>';
					html[html.length] = '<div class="detailValue">' + zenEscapeXML(info.description) + '</div>';
				}

				if (info.timeCreated && '' !== info.timeCreated) {
					html[html.length] = '<div class="detailLabel">' + $$$Text('Created on') + '</div>';
					html[html.length] = '<div class="detailValue">' + zenEscapeXML(info.timeCreated) + '</div>';
				}

				if (info.timeModified && '' !== info.timeModified) {
					html[html.length] = '<div class="detailLabel">' + $$$Text('Last modified') + '</div>';
					html[html.length] = '<div class="detailValue">' + zenEscapeXML(info.timeModified) + '</div>';
				}
			}
		}

	}
	catch(ex) {
		zenExceptionHandler(ex,arguments,'Error in updateDetails');
	}

	return html.join('');
]]></Implementation>
</Method>

<Method name="GetItemDetails">
<Description>
Get details on selected item.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pName:%String</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set tInfo = ""
	Set tItem = ##class(%DeepSee.UserLibrary.Utils).%OpenFolderItem(pName)
	If $IsObject(tItem) {
		Set tInfo = ##class(%ZEN.proxyObject).%New()
		Set tInfo.title = $S(tItem.title="":tItem.name,1:tItem.title)
		Set tInfo.folderName = tItem.folderName
		Set tInfo.owner = tItem.owner
		Set tInfo.description = tItem.description
		Set tInfo.resource = tItem.resource
		Set tInfo.type = tItem.%GetTypeName()

		Set tInfo.timeCreated = ##class(%DeepSee.UserPortal.Utils).%FormatDate(tItem.timeCreated)
		Set tInfo.timeModified = ##class(%DeepSee.UserPortal.Utils).%FormatDate(tItem.timeModified)
	}

	Quit tInfo
]]></Implementation>
</Method>

<Method name="setFolderCategory">
<Description>
Change the folder category</Description>
<FormalSpec>cat</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	if (this.folderCategory!=cat) {
		var el = self.document.getElementById('fopt_'+ this.folderCategory);
		if (el) {
			el.className = 'folderCategory';
		}
		this.folderCategory = cat;
		var el = self.document.getElementById('fopt_'+ this.folderCategory);
		if (el) {
			el.className = 'folderCategorySelected';
		}
		this.refreshFolders();
	}
]]></Implementation>
</Method>

<Method name="toggleLayout">
<Description>
Toggle display of worklist area.</Description>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var el = self.document.getElementById('toggle');
	if (el) {
		if ('undefined' != typeof this._oldworklistCount) {
			el.innerHTML = '&laquo;';
		}
		else {
			el.innerHTML = '&raquo;';
		}
	}
	this.toggleWorklists();
]]></Implementation>
</Method>
</Class>
</Export>
