<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.BI.OptimizeQuery">
<Super>%RegisteredObject</Super>
<TimeCreated>63403,66596.23618</TimeCreated>

<Method name="CreateCacheQuerys">
<Description>
Создать cache для используемых mdx запросов</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	kill queres
	set user="report"
	kill ^||query
	set n=0
	set npp=""
	for {
		set npp=$order(^DeepSee.QueryLog(user,npp),-1,query) if npp="" quit
		if query="" continue
		set queryshort=$extract(query,1,500)
		if $data(^||query(1,queryshort)) continue
		set n=n+1 if n>40 quit
		set ^||query(0,n)=query
		set ^||query(1,queryshort)=n
	}
	//set queres(1)="SELECT {[Measures].[NumberSendAwayReferrals]} ON 0,NON EMPTY [CreationDate].[H1].[CreationMonth].Members ON 1 FROM [EPVisitTestSet] %FILTER %OR([CollectionDate].[H1].[CollectionMonth].&[NOW-11]:&[NOW]) %FILTER [Measures].[NumberSendAwayReferrals]"
	//set queres(2)="SELECT {[Measures].[%COUNT],[Measures].[NumberInHouse],[Measures].[NumberSendAwayReferrals],[Measures].[NumberInternalReferrals]} ON 0,NON EMPTY ORDER([TestSets].[H1].[TestSetDescription].Members,Measures.[%COUNT],BDESC) ON 1 FROM [EPVisitTestSet] %FILTER %OR([CollectionDate].[H1].[CollectionMonth].&[NOW-11]:&[NOW])"
	
	//set n=n+1 set queres(n)="SELECT NON EMPTY [MEASURES].[%COUNT] ON 0,NON EMPTY ORDER([ANALYZER].[H1].[ANALYZER].MEMBERS,[MEASURES].[%COUNT],BDESC) ON 1 FROM [EPVISITTESTSETDATA] WHERE %OR([EPVISITTESTSET].[CREATIONDATE].[H1].[CREATIONMONTH].&[NOW-11]:[EPVISITTESTSET].[CREATIONDATE].[H1].[CREATIONMONTH].&[NOW])"
	//set n=n+1 set queres(n)="SELECT [MEASURES].[%COUNT] ON 0,NON EMPTY [ANALYZER].[H1].[ANALYZER].MEMBERS ON 1 FROM [EPVISITTESTSETDATA] WHERE %OR([EPVISITTESTSET].[CREATIONDATE].[H1].[CREATIONMONTH].&[NOW-11]:[EPVISITTESTSET].[CREATIONDATE].[H1].[CREATIONMONTH].&[NOW])"
	//set n=n+1 set queres(n)="SELECT NON EMPTY [Measures].[%COUNT] ON 0,NON EMPTY ORDER([Analyzer].[H1].[Analyzer].Members,Measures.[%COUNT],BDESC) ON 1 FROM [EPVisitTestSetData]"
	
	set filterDays=##class(TCLEx.BI.Function.RunTimeVariable).GetFilterPeriodDays()
	
	// Лаборатория/Данные по анализаторам/Количество тестов по анализаторам.dashboard
	set n=n+1 set ^||query(0,n)="SELECT NON EMPTY [Measures].[%COUNT] ON 0,NON EMPTY ORDER([Analyzer].[H1].[Analyzer].Members,Measures.[%COUNT],BDESC) ON 1 FROM [EPVisitTestSetData] %FILTER %OR([EPVisitTestSet].[CreationDate].[H1].[CreationDay]."_filterDays_")"         
	// Финстатистика/Количество и сумма услуг.dashboard
	set n=n+1 set ^||query(0,n)="SELECT NON EMPTY NONEMPTYCROSSJOIN({[Department].[Итого],%LABEL(NONEMPTYCROSSJOIN([Department].[Итого],[Priority].[H1].[TestPriority].Members),""В том числе"","""")},{[Measures].[QServices],[Measures].[Price]}) ON 0,NON EMPTY {[Department].[Итого],[Department].[H1].[DepartmentCode].Members} ON 1 FROM [EPVisitTestSet] %FILTER %OR([DateAuthorisationService].[H1].[DateAuthorisationServiceDay]."_filterDays_")"
	// Лаборатория/Эпизоды.dashboard
	set n=n+1 set ^||query(0,n)="SELECT {%LABEL([Measures].[%COUNT],""Кол-во эпизодов"",""""),[Measures].[QTContainers],[MEASURES].[QTPATIENTS]} ON 0,NON EMPTY {%LABEL([VisitLocation].[Все местоположения пациента],""Итого"",""""),[VisitLocation].[H1].[PatientLocation].Members} ON 1 FROM [EPVisitNumber] %FILTER %OR([EnterDate].[H1].[EnterDay]."_filterDays_")"
	// Лаборатория/Наборы тестов.dashboard
	set n=n+1 set ^||query(0,n)="SELECT NON EMPTY {[Measures].[%COUNT],%LABEL(NONEMPTYCROSSJOIN([Measures].[%COUNT],[Priority].[H1].[TestPriority].Members),""В том числе"","""")} ON 0,NON EMPTY [EPVisitNumber].[VisitLocation].[H1].[PatientLocation].Members ON 1 FROM [EPVisitTestSet] %FILTER %OR([AuthorisationDate].[H1].[AuthorisationDay]."_filterDays_")"
	// Лаборатория/Тесты.dashboard
	set n=n+1 set ^||query(0,n)="SELECT {%LABEL([Measures].[%COUNT],""Количество тестов"",""""),%LABEL([Measures].[NumberAbnormal],""Из них вне нормы"","""")} ON 0,NON EMPTY [TestItems].[H2].[TestItemCodeDesc].Members ON 1 FROM [EPVisitTestSetData] %FILTER %OR([EPVisitTestSet].[AuthorisationDate].[H1].[AuthorisationDay]."_filterDays_")"
			
	set npp=""
	for {
		set npp=$order(^||query(0,npp),1,query) if npp="" quit
		if query="" continue
		Set rset=##class(%DeepSee.ResultSet).%New()
        Set ok=rset.%PrepareMDX(query)
        if 'ok {
	        do ##class(TCLEx.Function.General).WriteError($system.Status.GetErrorText(ok),$CLASSNAME()_":%PrepareMDX: "_query)
	        continue
        }
        Set ok=rset.%Execute()
        if 'ok {
	        do ##class(TCLEx.Function.General).WriteError($system.Status.GetErrorText(ok),$CLASSNAME())
        }
	}
	kill ^||query
	quit
]]></Implementation>
</Method>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	
	set reportid=""
	for {
		set reportid=$order(^TTAB("CTAL",reportid)) if reportid="" quit
		set url=$zcvt($get(^TTAB("CTAL",reportid,"URL")),"U")
		if url="" continue
		set dashboardname=$piece($piece(url,"DASHBOARD=",2),"&",1)
		if dashboardname="" continue
		if dashboardname["%20" continue
		w !,dashboardname
	    set dashboard=##class(%DeepSee.Dashboard.Utils).%OpenDashboard(dashboardname)
	
        Set widgetcount = dashboard.widgets.Count()
	    For n = 1:1:widgetcount {
		   Set widgetobj = dashboard.widgets.GetAt(n)
           b  
		   Set widgetname = widgetobj.name	
		   if widgetname="" continue
		     
		   set datasourcename=widgetobj.%GetDataSource()
		   if datasourcename'[".pivot" continue
		   
		   w !,"  ",widgetname,"-",datasourcename
		   
		   Set pivotobj = ##class(%DeepSee.UserLibrary.Utils).%OpenFolderItem(datasourcename,.tSC)
		   if tSC'=1 continue
		   b  
	    }
	}
]]></Implementation>
</Method>
</Class>
</Export>
