<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Utils.AnalyzeData">
<Super>%RegisteredObject</Super>
<TimeCreated>63400,57152.213598</TimeCreated>

<Method name="AnalyzeDateTime">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	
     set count1=0,count2=0
     kill ^test("noDate")
     set minEntry=99999999999,maxEntry=0
     set minReceiving=99999999999,maxReceiving=0
     set minCollection=99999999999,maxCollection=0
     
     set epis="" for {
	 set epis=$order(^TEPI(epis),1,rec) if epis="" quit
	 set dateOfEntry=$p(rec,"\",8)
	 set timeOfEntry=$p(rec,"\",9)
	 set dateOfReceiving=$p(rec,"\",32)
	 set timeOfReceiving=$p(rec,"\",33)
	 set dateOfCollection=$p(rec,"\",10)
	 set timeOfCollection=$p(rec,"\",11)

	 if +dateOfEntry=0 set ^test("noDate","dateOfEntry")=$get(^test("noDate","dateOfEntry"))+1
	 if +timeOfEntry=0 set ^test("noDate","timeOfEntry")=$get(^test("noDate","timeOfEntry"))+1

	 if +dateOfReceiving=0 set ^test("noDate","dateOfReceiving")=$get(^test("noDate","dateOfReceiving"))+1
	 if +timeOfReceiving=0 set ^test("noDate","timeOfReceiving")=$get(^test("noDate","timeOfReceiving"))+1

	 if +dateOfCollection=0 set ^test("noDate","dateOfCollection")=$get(^test("noDate","dateOfCollection"))+1
	 if +timeOfCollection=0 set ^test("noDate","timeOfCollection")=$get(^test("noDate","timeOfCollection"))+1

     if (+dateOfReceiving=0)&&(+timeOfReceiving'=0) set ^test("noDate","rasOfReceiving")=$get(^test("noDate","rasOfReceiving"))+1
 
     if timeOfEntry<minEntry set minEntry=timeOfEntry
     if timeOfEntry>maxEntry set maxEntry=timeOfEntry
     
     if timeOfReceiving<minReceiving set minReceiving=timeOfReceiving
     if timeOfReceiving>maxReceiving set maxReceiving=timeOfReceiving
     
     if timeOfCollection<minCollection set minCollection=timeOfCollection
     if timeOfCollection>maxCollection set maxCollection=timeOfCollection

      	
	/* 
   set ts=""
  for {
	  set ts=$order(^TEPI(epis,1,ts)) if ts="" quit
	  
	  set tscnt=""
	  for {
		  set tscnt=$o(^TEPI(epis,1,ts,tscnt),1,rects) if tscnt="" quit 
          set dateOfCollection=$p(rects,"\",44)
	      set timeOfCollection=$p(rects,"\",45)
	      
	      set dateOfCreation=$p(rects,"\",24)
	      set timeOfCreation=$p(rects,"\",25)
	      
	      if +dateOfCollection=0 set ^test("noDate","dateOfCollection")=$get(^test("noDate","dateOfCollection"))+1
	      if +timeOfReceiving=0 set ^test("noDate","timeOfCollection")=$get(^test("noDate","timeOfCollection"))+1
	      
	      if +dateOfCreation=0 set ^test("noDate","dateOfCreation")=$get(^test("noDate","dateOfCreation"))+1
	      if +timeOfCreation=0 set ^test("noDate","timeOfCreation")=$get(^test("noDate","timeOfCreation"))+1
	      
	
	  }
  }*/
 }
  set ^test("noDate","Episode","minTimeOfCollection")=minCollection
  set ^test("noDate","Episode","maxTimeOfCollection")=maxCollection
  set ^test("noDate","Episode","minTimeOfReceiving")=minReceiving
  set ^test("noDate","Episode","maxTimeOfReceiving")=maxReceiving
  set ^test("noDate","Episode","minTimeOfEntry")=minEntry
  set ^test("noDate","Episode","maxTimeOfEntry")=maxEntry
 quit
]]></Implementation>
</Method>

<Method name="AnalyzeTestSetData">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
  set count1=0,count2=0
  kill ^test("noAnalazer")
     set epis="" for {
	 set epis=$order(^TEPI(epis),1,rec) if epis="" quit
	 //set dateEnter=$e($zd($p(rec,"\",8),8),1,6)
	 
   set ts=""
  for {
	  set ts=$order(^TEPI(epis,1,ts)) if ts="" quit
	  
	  set tscnt=""
	  for {
		  set tscnt=$o(^TEPI(epis,1,ts,tscnt),1,rects) if tscnt="" quit 
		  //if $e($zd($p(rec,"\",8),8),1,4)=2014 if ts="B005" s ^test("noAnalazer","B005",epis)=""
		  set test=""
		  for {
			  set test=$o(^TEPI(epis,1,ts,tscnt,"DATA",test),1,data) if test="" quit
			  set key=test_"*"_ts
			  if $p(data,"\",6)'="" s $p(^test("noAnalazer","test",key),"*",1)=$p($get(^test("noAnalazer","test",key)),"*",1)+1 continue
			  if $data(^TTAB("TC",key,3,ts)) s $p(^test("noAnalazer","test",key),"*",3)=$p($get(^test("noAnalazer","test",key)),"*",3)+1 continue  // вычисляемое поле
			  set key=test_"*"_ts
			  s $p(^test("noAnalazer","test",key),"*",2)=$p($get(^test("noAnalazer","test",key)),"*",2)+1
			  //if '$data(^test("noAnalazer","notok",key)) set ^test("noAnalazer","notok",key)=$p(^TTAB("TC",test),"\",1)
			  
		  }
	
	  }
	  
  }
 }
 set test=""
	  for {
		  set test=$order(^test("noAnalazer","test",test),1,rec) if test="" quit
		  if (+$p(rec,"*",1)=0)&&(+$p(rec,"*",2)'=0)&&(+$p(rec,"*",3)=0) {
			  //if ..IsInAlalyzersTune(test)=0 continue
		     set ^test("noAnalazer","notok2",test)=$p(^TTAB("TC",$p(test,"*",1)),"\",1)
		  }
	  }
 quit
]]></Implementation>
</Method>

<Method name="IsInAlalyzersTune">
<Description>
Есть ли тест в настройках какого-нибудь анализатора</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pTestCode:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	set returnValue=0
	set mi=""
	for {
		set mi=$order(^TMIF(mi)) if mi="" quit
		if $piece($get(^TMIF(mi,2,pTestCode)),"\",1)'="" {
			set returnValue=1
			quit
		}
	}
	quit returnValue
]]></Implementation>
</Method>

<Method name="AnalyzeTestSetSpecimen">
<Description>
Биоматериал по умолчанию для набора тестов</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set ts=""
	for {
		set ts=$o(^TTAB("TS",ts)) if ts="" quit
		Set testsetobj=##class(User.CTTestSet).%OpenId(ts,0)
	    If '$IsObject(testsetobj) continue
	    set key=""
	    Set specimenobj=testsetobj.ChildCTTestSetSpecimen.GetNext(.key)
	    set key=""
		Set containerobj=testsetobj.ChildCTTestSetContainers.GetNext(.key)
		if '$IsObject(specimenobj)&&($IsObject(containerobj)) w !,ts
	}
]]></Implementation>
</Method>
</Class>
</Export>
