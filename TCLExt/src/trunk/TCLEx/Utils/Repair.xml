<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Utils.Repair">
<Super>%RegisteredObject</Super>
<TimeCreated>63203,69297.235068</TimeCreated>

<Method name="RepairMachineDR">
<Description>
В версии 6.9 часто не записывался код прибора в EPVisitTestSetData, в 2012 работает корректно
Утилита для заполнения поля VISTD_Machine_DR в EP_VisitTestSetData в эпизодах, созданных в версии 6.9, из всех имеющихся источников информауии </Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set epis=""
	for {
		set epis=$order(^TEPI(epis)) if epis="" quit
		set ts=""
		for {
			set ts=$order(^TEPI(epis,1,ts)) if ts="" quit
			set tscnt=""
            for {
	            set tscnt=$o(^TEPI(epis,1,ts,tscnt)) quit:tscnt=""  
	            set test=""
	            for {
		            set test=$order(^TEPI(epis,1,ts,tscnt,"DATA",test),1,vals) if test="" quit
		            set analyzercode=$piece(vals,"\",6)
		            if analyzercode'="" continue
		            set analyzercode=##class(TCBI.Utils).GetMachineTestData0(epis_"||"_ts_"||"_tscnt_"||"_test)
		            if analyzercode'="" {
			           set $piece(^TEPI(epis,1,ts,tscnt,"DATA",test),"\",6)=analyzercode
			           set ^log("RepairMachineDR",epis_"/"_ts_"/"_tscnt_"/"_test,"old")=vals
			           set ^log("RepairMachineDR",epis_"/"_ts_"/"_tscnt_"/"_test,"new")=^TEPI(epis,1,ts,tscnt,"DATA",test) 
		            }
	            }
            }
		}
	}
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
ClassMethod Repair2()
{
 set epis=""
	for {
		set epis=$order(^TEPI(epis)) if epis="" quit
		set ts=""
		for {
			set ts=$order(^TEPI(epis,1,ts)) if ts="" quit
			set tscnt=""
            for {
	            set tscnt=$o(^TEPI(epis,1,ts,tscnt)) quit:tscnt=""  
	            set test=""
	            for {
		            set test=$order(^TEPI(epis,1,ts,tscnt,"DATA",test),1,vals) if test="" quit
		            set analyzercode=$piece(vals,"\",6)	
		            if analyzercode="" set analyzercode=$$$nulindex
		            //if '$data(^log("RepairMachineDR",epis_"/"_ts_"/"_tscnt_"/"_test,"new")) continue
		            //if '$data(^log("RepairMachineDR",epis,ts,tscnt,test,"new")) continue
		            set date=$piece(vals,"\",16) if date="" set date=$$$nulindex
		            set time=$piece(vals,"\",17) if time="" set time=$$$nulindex
		            if $data(^TEPIi("InstrumentDT",test,analyzercode,date,time,epis,ts,tscnt)) continue
		            w !,test," ",analyzercode," ",date," ",time," ",epis," ",ts," ",tscnt
		            b  
		            set ^TEPIi("InstrumentDT",test,analyzercode,date,time,epis,ts,tscnt)=""
                }
            }
		}
	}
}*/
]]></Content>
</UDLText>

<Method name="CleanTRPT">
<Description>
 do ##class(User.EPVisitTestSetData).%BuildIndices($lb("InstrumentDT"),0,0)
Почистить лишние данные в модуле Групповая печать (^TRPT)</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set courier=""
	for {
		set courier=$order(^TRPT("DR",courier),1,rec) if courier="" quit
		set rec=$get(^TTAB("CR",courier))
		// если у курьера нет расписания и нет слота времени для печати, то удаляем задания для него
		set timeslot=$piece(rec,"\",5)
		if ('$data(^TTAB("CR",courier,"SCHEDULE")))&&(timeslot="") kill ^TRPT("DR",courier)
	}
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// Если хотим часть эпизодов удалить, то так надо чистить индексы

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// Так как содержимое индексов поменялось, %PurgeIndices не работает (ну просто так уж его запускаем)

]]></Content>
</UDLText>

<Method name="CleanIndicesTEPI">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	// удаление индексов
	//User.EPVisitNumber
	kill ^TDAY  // есть только в User.EPVisitnumber и User.EPVisitTestSet
	kill ^TDEBi // проверено - можно удалять целиком
	kill ^TDEBj("DONOR")
	kill ^TDEBj("BBP")
	kill ^TDEBj("HOSPITAL")
	kill ^TCLB
	
	//User.EPVisitTestSet
	kill ^TEPIi("AUTHORISED")
	kill ^TEPIi("DFT")
	kill ^TEPIi("PairedSera")
	kill ^TEPIi("REASON")
	kill ^TEPIi("RULE-3")
	kill ^TEPIi("Specimen-TS")
	kill ^TEPIi("STATUS-TEST")
	kill ^TEPIi("STATUS-US-TEST")
	kill ^TEPIi("STATUS-EPISODE")
	kill ^TDAY(5)
	kill ^TEPIi("ToRead")
	kill ^TEPIi("ToView")
	kill ^TRPT("WARD")
	
	
	//User.EPVisitTestSetData
	kill ^TEPIi("InstrumentDT")
	
	d ##class(User.EPVisitNumber).%PurgeIndices()
	d ##class(User.EPVisitNumber).%BuildIndices()

	d ##class(User.EPVisitTestSet).%PurgeIndices()
	d ##class(User.EPVisitTestSet).%BuildIndices()

	d ##class(User.EPVisitTestSetData).%PurgeIndices()
	d ##class(User.EPVisitTestSetData).%BuildIndices()
	
	set ts2=+$h*100000+$p($h,",",2)
	set ras=ts2-ts1
	set ^test("ClearIndices")=ras_" сек "_(ras\3600)_" ч"
	w !,ras_" сек "_(ras\3600)_" ч"
]]></Implementation>
</Method>
</Class>
</Export>
