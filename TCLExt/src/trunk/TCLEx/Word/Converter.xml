<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCLEx.Word.Converter">
<Super>%RegisteredObject</Super>
<TimeCreated>62657,51060.361521</TimeCreated>

<Method name="startJODConverterFacade">
<ClassMethod>1</ClassMethod>
<FormalSpec>fileIn:%String,fileOut:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	if $get(fileIn)="" Quit $$$ERROR($$$GeneralError,"Не указан файл для конвертирования")

	if $get(fileOut)="" set fileOut=$piece(fileIn,".",1,$length(fileIn,".")-1)_".pdf"
	 
	if '##class(%File).Exists(fileIn) Quit $$$ERROR($$$GeneralError,"Файл "_fileIn_" не существует")
	
    //удаление файла fileOut, если существует
    if ##class(%File).Exists(fileOut)&&('##class(%File).Delete(fileOut)) {
  	   Quit $$$ERROR($$$GeneralError,"Файл "_fileReport_" занят другим приложением")
    }

 // открываем gateway
  set gateway=##class(Report.JasperReportTune).getNameGateway() 
  if gateway="" Quit $$$ERROR($$$GeneralError,"Не указан gateway")
  
  set jvm = ##class(%Net.Remote.ObjectGateway).%OpenId(gateway)
  if '$IsObject(jvm) Quit $$$ERROR($$$GeneralError,"Incorrect Java GateWay configuration !")
  
  Set result=$$$OK
  Try
	{
		; запуск шлюза, если он не запущен
		If $$$ISERR(##class(%Net.Remote.Service).PingGateway(jvm.Port,jvm.Server,jvm.InitializationTimeout)) {
			$$$ThrowOnError(##class(%Net.Remote.Service).StartGateway(gateway))
		}	
	
		Set jgw=##class(%Net.Remote.Gateway).%New()
		; подключение к шлюзу
		$$$ThrowOnError(jgw.%Connect(jvm.Server,jvm.Port))
		Try
		{
			do ##class(isc.jodconverter.jodconverterFacade).DocToPDF(jgw,fileIn,fileOut)
		}
		Catch exception
		{
		If $ZERROR["<ZJGTW>" {
		    set %objlasterror=$get(%objlasterror)
		    if ##class(%SYSTEM.Status).IsError(%objlasterror) {
			    set result=%objlasterror
		    }  else {
			    Set result=$$Error^%apiOBJ(5001,$ZERROR)  //$$Error^%apiOBJ(5001,$get(%objlasterror))
		    }
            } 
		else {
		    Set result=exception.AsStatus()
		}
		}
		; отключение от шлюза
		Do jgw.%Disconnect()
	}
	Catch exception
	{
	    If $ZERROR["<ZJGTW>" {
		    set %objlasterror=$get(%objlasterror)
		    if ##class(%SYSTEM.Status).IsError(%objlasterror) {
			    set result=%objlasterror
		    }  else {
			    Set result=$$Error^%apiOBJ(5001,$ZERROR)  //$$Error^%apiOBJ(5001,$get(%objlasterror))
		    }
            } 
		else {
		    Set result=exception.AsStatus()
		}
	}
  quit result
]]></Implementation>
</Method>
</Class>
</Export>
