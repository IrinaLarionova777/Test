<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="UnitTest.BiRLab.Data.InvoiceEpisodeItem">
<Super>UnitTest.TestCase</Super>
<TimeCreated>63348,47492.51104</TimeCreated>

<Method name="TestFindAnyObject">
<ClassMethod>1</ClassMethod>
<FormalSpec>pObject:BiRLab.Data.InvoiceEpisodeItem</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set pObject="",ok=$$$OK
	try {
		set id=""
		&sql(DECLARE cur CURSOR FOR
	                 SELECT TOP 1 ID,EpisodeItem->Episode->Episode
	                 INTO :id,:episode
	                 from BiRLab_Data.InvoiceEpisodeItem
	    )

        &sql(OPEN cur)
        &sql(FETCH cur)
                          
        if (SQLCODE = 0) {
	        set pObject=##class(BiRLab.Data.InvoiceEpisodeItem).%OpenId(id)
	        
        } else {
	        set ok=$$$ERROR($$$GeneralError,"Нет ни одного объекта класса BiRLab.Data.InvoiceEpisodeItem")
        }
        &sql(CLOSE cur)
        
	} catch(e) {
		set ok=e.AsStatus()
		set pObject=""
	}
	quit ok
]]></Implementation>
</Method>

<Method name="TestUpdate">
<Implementation><![CDATA[
	#dim obj As BiRLab.Data.InvoiceEpisodeItem
	//set ok=$$$OK
	try {
		set obj=""
		set ok=..TestFindAnyObject(.obj)
		do $$$AssertStatusOK(ok, "Нахождение какого-нибудь объекта класса BiRLab.Data.InvoiceEpisodeItem")
		set value=$IsObject(obj) 
        do $$$AssertNotEquals(value,1, "Нахождение какого-нибудь объекта класса BiRLab.Data.InvoiceEpisodeItem (проверка найденного объекта)")
        if ('ok)||(value'=1) {
	        do ..LogMessage("Дальнейшие тесты прекращены")
	        quit
        }
		// тест объектного подхода
		set price=obj.Amount+1
		set obj.Amount=price
		set episode=obj.EpisodeItem.Episode.Episode
		kill ^SpeedI.DeltaP("TCLEx.Data.EPVisitNumberExt",episode)
		set ok=obj.%Save()
		do $$$AssertStatusOK(ok, "Сохрание объекта класса BiRLab.Data.InvoiceEpisodeItem после корректировки (объектный метод)")
		set value=$data(^SpeedI.DeltaP("TCLEx.Data.EPVisitNumberExt",episode))
		do $$$AssertEquals(value,1,"Создание ссылки в глобали ^SpeedI.DeltaP(""TCLEx.Data.EPVisitNumberExt"") (объектный метод)")
		    
		// тест SQL подхода
		set item=obj.EpisodeItem.Item.Code
		set price=price-1
		kill ^SpeedI.DeltaP("TCLEx.Data.EPVisitNumberExt",episode)
		&sql(UPDATE BiRLab_Data.InvoiceEpisodeItem (Amount) VALUES (:price) WHERE EpisodeItem->Episode->Episode=:episode and EpisodeItem->Item->Code=:item)
		set ok=1
		if SQLCODE'=0 {
			    if ($get(%objlasterror)'="")&&(##class(%SYSTEM.Status).IsError(%objlasterror)) {
			         set ok=%objlasterror
		        }  else {
			         Set ok=$$Error^%apiOBJ(5001,$ZERROR)  //$$Error^%apiOBJ(5001,$get(%objlasterror))
		        }
		}
		do $$$AssertStatusOK(ok, "Сохрание объекта класса BiRLab.Data.InvoiceEpisodeItem после корректировки (SQL метод)")
		set value=$data(^SpeedI.DeltaP("TCLEx.Data.EPVisitNumberExt",episode))
		do $$$AssertEquals(value,1,"Создание ссылки в глобали ^SpeedI.DeltaP(""TCLEx.Data.EPVisitNumberExt"") (SQL метод)")
		
	} catch(e) {
		throw e
	}
	//quit ok
]]></Implementation>
</Method>
</Class>
</Export>
