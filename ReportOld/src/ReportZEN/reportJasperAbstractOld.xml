<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="ReportZEN.reportJasperAbstractOld">
<Super>%ZEN.Component.page</Super>
<TimeCreated>62572,68037.0306</TimeCreated>

<Parameter name="APPLICATION">
<Description>
Имя приложения, которому принадлежит эта страница.</Description>
<Default>ReportZEN.ReportApplication</Default>
</Parameter>

<UDLText name="T">
<Content><![CDATA[
//Parameter APPLICATION = "WebER.Application"

]]></Content>
</UDLText>

<Parameter name="PAGENAME">
<Description>
Отображаемое имя для нового приложения.</Description>
</Parameter>

<Parameter name="DOMAIN">
<Description>
Домен, используемый для локализации.</Description>
</Parameter>

<XData name="Style">
<Data><![CDATA[
<style type="text/css">

.general {
	background-color: #C0C0C0;
}
.selected {
	background-color: #FFFFFF;
}

</style>
]]></Data>
</XData>

<UDLText name="T">
<Content><![CDATA[
// Start creating of report on client - call startRptServer()

]]></Content>
</UDLText>

<Method name="startRptClient">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	//проверка параметров
	var proxy = zenPage.getParamsServer();
	var err = proxy.flagError
	var message=proxy.message
	if ((message != '') && (message != null)) alert(message.replace("^","\n"));
	if (err==0) {
		zenPage.startRptServer();
		/*
		var urlProgressBar=zenPage.getUrlProgressBar();
		if (urlProgressBar!="") {
			zenPage.openModalWindowProgressBar(urlProgressBar);
			//window.showModalDialog(urlProgressBar,"","dialogWidth:255px;dialogHeight:250px");
			var urlClosePage = zenPage.getUrlClosePage();
			if (urlClosePage != "") {
				zenPage.gotoPage(urlClosePage);
			}
		}*/
		zenPage.createModalGroup();
		
	}		 

		//zenPage.gotoPage("http://localhost:57772/csp/DATA/ReportZEN.closepage.cls?file=c:\temp\test3\temp\demo\REPORT18.pdf");
	   //window.open(proxy.url);
	   //zenPage.gotoPage("http://google.com");
	   //zenPage.closePage();
	   // тест закрытия окна 
	   //netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserWrite");
       //window.open('','_parent',''); 
       //window.close();
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// здесь нужен dom html

]]></Content>
</UDLText>

<Method name="getParamsServer">
<ReturnType>%ZEN.proxyObject</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	
	set proxy = ##class(%ZEN.proxyObject).%New()
	set proxy.flagError=0
    set proxy.message=""
    set proxy.url=""

    set repFormat=$lg(%session.Data("params","par"),3)
	if repFormat="" set repFormat="pdf"
	
	set ok=..getFileReport(repFormat,.fileReport)
	if 'ok {
	   set proxy.flagError=1
	   set proxy.message = $System.Status.GetErrorText(ok)
	   quit proxy	
	}
	if $IsObject(%session) set %session.Data("fileReport")=fileReport	 
 
 	set ok=..getFileJasper(.fileJasper)
	if 'ok {
	   set proxy.flagError=1
	   set proxy.message = $System.Status.GetErrorText(ok)
	   quit proxy	
	}

	kill params
	set ok=..getParams(.params)
	if 'ok {
	   set proxy.flagError=1
	   set proxy.message = $System.Status.GetErrorText(ok)
	   quit proxy	
	}	 
     // if there is class Report.Jasper.(name of report) and in it there is method Validate, call it and test answer
    set ok=..isMetodValidate(.params) 
    if '+ok {
	   set proxy.flagError=1
	   set proxy.message = $piece(ok,$char(0),2)
	   quit proxy
    }
    
    
    quit proxy
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// Start creating of report on server

]]></Content>
</UDLText>

<Method name="startRptServer">
<ClassMethod>1</ClassMethod>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	set idReport=%session.SessionId
	kill ^TMPjasperreport(idReport)
	job ..createReport(idReport)
	quit
]]></Implementation>
</Method>

<Method name="createReport">
<ClassMethod>1</ClassMethod>
<FormalSpec>idReport:%String</FormalSpec>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	try {
		kill ^TMPjasperreport(idReport)
	    s ^test("idReport")=idReport
	    set r=$char(1)
	    h 60
	    //формат отчета
	    set repFormat=$lg(%session.Data("params","par"),3)
	    if repFormat="" set repFormat="pdf"
	    s ^test("repFormat")=repFormat
	    // файл отчета
	    set ok=..getFileReport(repFormat,.fileReport)
	    s ^test("fileReport")=fileReport
	    if 'ok {
	       set $piece(^TMPjasperreport(idReport),r,1)=1
	       set $piece(^TMPjasperreport(idReport),r,2) = $System.Status.GetErrorText(ok)
	       quit 	
	    }	 
        // файл с jasper шаблоном 
 	    set ok=..getFileJasper(.fileJasper)
 	    s ^test("fileJasper")=fileJasper
	    if 'ok {
	       set $piece(^TMPjasperreport(idReport),r,1)=1
	       set $piece(^TMPjasperreport(idReport),r,2) = $System.Status.GetErrorText(ok)
	       quit 	
	    }
        //params
        kill params
        set par=""
    for {
	       set par=$order(%session.Data("paramsItog","par",par)) if par="" quit
	       set value=$get(%session.Data("paramsItog","par",par))
	       if value'="" {
		       set params(par)=value
	       }
    }
    // form report
    set ok = ##class(Report.rpt).startRptFacade(fileReport, .params, fileJasper, repFormat)
	set $piece(^TMPjasperreport(idReport),r,1)=1 //'+ok
    set $piece(^TMPjasperreport(idReport),r,2)=$select('ok:$System.Status.GetErrorText(ok),1:"")
    quit
	} catch(exception) {
		if $get(idReport) {
			set $piece(^TMPjasperreport(idReport),$char(1),1)=1 //'+ok
            set $piece(^TMPjasperreport(idReport),$char(1),2)=$System.Status.GetErrorText(exception.AsStatus())
		}
	}
]]></Implementation>
</Method>

<Method name="openModalWindowProgressBar">
<FormalSpec>urlProgressBar:%String</FormalSpec>
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var size=zenPage.sizeWindow();
	var arraysize=size.split(",");
	var width=(parseInt(arraysize[0])/2);
	width=width-(width%1);
	var height=(parseInt(arraysize[1])/5);
	height=height-height%1;
	var winX=arraysize[2];
	winX=(parseInt(winX)+parseInt(arraysize[0])-width)/2;
	winX=winX-winX%1;
	var winY=arraysize[3];
	var winY=(parseInt(winY)+parseInt(arraysize[1])-height)/2;
	winY=winY-winY%1;
	alert(size+" /"+width+" /"+height+"/"+winX+"/"+winY);
    if (window.showModalDialog) {
         window.showModalDialog(urlProgressBar,"","dialogLeft:"+winX+";dialogTop:"+winY+";dialogWidth:"+width+";dialogHeight:"+height+";center:yes;status:no;");
    } else {
        //window.open(urlProgressBar,'','left='+winX+',top='+winY+',height='+height+',width='+width+',toolbar=no,directories=no,status=no,continued from previous linemenubar=no,scrollbars=no,resizable=no ,modal=yes');
    }
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// Start creating of report on server

]]></Content>
</UDLText>

<Method name="startRptServerOld">
<ClassMethod>1</ClassMethod>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	set idReport=%session.SessionId
	kill ^TMPjasperreport(idReport)
 /*	
	set proxy = ##class(%ZEN.proxyObject).%New()
	set proxy.flagError=0
    set proxy.message=""
    set proxy.url=""
  /*
	kill params
	set ok=..getParams(.params)
	if 'ok {
	   set proxy.flagError=1
	   set proxy.message = $System.Status.GetErrorText(ok)
	   quit proxy	
	}	 
     // if there is class Report.Jasper.(name of report) and in it there is method Validate, call it and test answer
    set ok=..isMetodValidate(.params) 
    if '+ok {
	   set proxy.flagError=1
	   set proxy.message = $piece(ok,$char(0),2)
	   quit proxy
    }
    
    set urlProgressBar=$select(ok=1:##class(ReportZEN.settings).getNodeSettings("server","urlWeb")_"ReportZEN.progressbar.cls",1:"")
     */   
	set repFormat=$li(%session.Data("params","par"),3)
	if repFormat="" set repFormat="pdf"
	
	set ok=..getFileReport(repFormat,.fileReport)
	if 'ok {
	   set proxy.flagError=1
	   set proxy.message = $System.Status.GetErrorText(ok)
	   quit proxy	
	}	 
 
 	set ok=..getFileJasper(.fileJasper)
	if 'ok {
	   set proxy.flagError=1
	   set proxy.message = $System.Status.GetErrorText(ok)
	   quit proxy	
	}
	/*	 
    if '##class(%File).Exists(fileJasper) {
	   set fileJRXML=$piece(fileJasper,".",1,$length(fileJasper,".")-1)_".jrxml"
	   if '##class(%File).Exists(fileJRXML) {
			s node="" kill params2
	        for {
	            s node=$order(params(node)) if node="" quit
	            set typeParam=$piece(params(node),$char(1),2) if typeParam="" set typeParam="String"
	            set params2(node)=typeParam
            }
            set ok = ##class(Report.rpt).startRptNew("isc.jasper.JasperFacadeDop", "setParametersReport", fileJRXML, .params2, "pdf","","") 
	   }  
    }
    */
    //params
    kill params
    set par=""
    for {
	       set par=$order(%session.Data("paramsItog","par",par)) if par="" quit
	       set value=$get(%session.Data("paramsItog","par",par))
	       if value'="" {
		       set params(par)=value
	       }
    }
    // form report
    set ok = ##class(Report.rpt).startRptFacade(fileReport, .params, fileJasper, repFormat)
	set proxy.flagError='+ok
    set proxy.message=$select('ok:$System.Status.GetErrorText(ok),1:"")
    //set proxy.url=$select(ok=1:##class(ReportZEN.downloadFile).getURL(fileReport),1:"")
    //set curUser="" if $IsObject(%session) if $data(%session.Data("curUser")) set curUser=%session.Data("curUser")
    //set reportKey="" if $IsObject(%session) if $data(%session.Data("reportKey")) set reportKey=%session.Data("reportKey") //set reportKey=$piece(reportKey,".",1,$length(reportKey,"."))
    //set proxy.url=$select(ok=1:##class(ReportZEN.closepage).getURL(fileReport,reportKey,curUser),1:"")
    //set proxy.urlProgressBar=$select(ok=1:##class(ReportZEN.settings).getNodeSettings("server","urlWeb")_"ReportZEN.progressbar.cls",1:"")
    quit proxy
]]></Implementation>
</Method>

<Method name="getUrlProgressBar">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[	quit ##class(ReportZEN.settings).getNodeSettings("server","urlWeb")_"ReportZEN.progressReport.cls"
]]></Implementation>
</Method>

<Method name="getUrlClosePage">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	set fileReport="" if $IsObject(%session) if $data(%session.Data("fileReport")) set fileReport=%session.Data("fileReport")
	set curUser="" if $IsObject(%session) if $data(%session.Data("curUser")) set curUser=%session.Data("curUser")
    set reportKey="" if $IsObject(%session) if $data(%session.Data("reportKey")) set reportKey=%session.Data("reportKey") 
	quit ##class(ReportZEN.closepage).getURL(fileReport,reportKey,curUser)
]]></Implementation>
</Method>

<Method name="getFileReport">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[repFormat:%String,&fileReport:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set fileReport="",ret=$$$OK
	try {
         set fileName=..getFileName()
         set curUser="" if $IsObject(%session) if $data(%session.Data("curUser")) set curUser=%session.Data("curUser")
         $$$ThrowOnError(##class(Report.rpt).getPathFileReportGroup(.pathFileReport,curUser))
         if $get(repFormat)="" set repFormat=##class(Report.JasperReportTune).getTypeFileReport() 
         set fileReport=pathFileReport_"\"_fileName_"."_repFormat
	} catch(exception) 
	{
	   set ret=exception.AsStatus()	
	} 
	quit ret
]]></Implementation>
</Method>

<Method name="getFileName">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set name=""
	if $IsObject(%session) if $data(%session.Data("fileJRXML")) set name=%session.Data("fileJRXML") set name=$piece(name,".",1,$length(name,".")-1)
	quit name
]]></Implementation>
</Method>

<Method name="getFileJasper">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&fileJasper:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set fileJasper="",ret=$$$OK
	try {
		 set fileName=..getFileName()
         set filePath=##class(Report.JasperReportTune).getPathFileJasper()
         if fileName'="",filePath'="" set fileJasper=filePath_"\"_fileName_".jasper"
	} catch(exception) 
	{
	   set ret=exception.AsStatus()	
	} 
	quit ret
]]></Implementation>
</Method>

<Method name="getParams">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&params:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	kill params 
	kill %session.Data("paramsItog")
	set ret=$$$OK
	try {
         if '$IsObject(%session) $$$ThrowOnError($$$ERROR($$$GeneralError,"Нет указана глобаль с параметрами для стартовой формы"))
         set par=""
         for {
	       set par=$order(%session.Data("params","par",par)) if par="" quit
	       set rec=$get(%session.Data("params","par",par))
	       set controlType=$listget(rec,1) 
		   if (controlType="")!(controlType="Label")!(controlType="form") continue
		   set ctrl=%page.%GetComponentByName(par) 
		   if '$IsObject(ctrl) continue
		   
		   set value="",text=""
		  		   		   
		   if (controlType="text") {
			   set value=ctrl.value  
			   //set params(par)=value  
		   }
		   elseif (controlType="datetext") {
			    set value=ctrl.value 
			    if value="" set value=$zdate($h)
			    set value=##class(Report.Function.general).getDateTimeLong($zdh($tr(value,"-",""),8))_$char(1)_"Date" 
			    //set params(par)=##class(Report.Function.general).getDateTimeLong($zdh($tr(value,"-",""),8))_$char(1)_"Date" //set ^test(1,$i(^test(1)))=params(par)_"?"_value
		        ;set params(par_"Display")=$zd(value,4)
		   }
		   elseif (controlType="checkbox") {
			    set value=ctrl.value 
			    //set params(par)=value
		   }
		   elseif (controlType="radiobutton") {
			    set value=ctrl.value 
			    //set params(par)=value
		   }
		   elseif (controlType="combobox") {
			    set text="",value=""
			    set class=ctrl.%ClassName()
			    if class="combobox" {
					set index=ctrl.selectedIndex
			        if index'="",index'=-1 {
				        set opt=ctrl.options.GetAt(index)
				        if $IsObject(opt) {
				           set value=opt.value
				           set text=opt.text
				        }
			        }
			    }
			    if class="dataCombo" {
     			      set value=ctrl.value
     			      if text=""!(text=value) set text=ctrl.%GetDisplayValue(value)
     			      ;if ctrl.sqlLookup'=""&&(value'="") set text=ctrl.%GetDisplayValue(value)
				      ;else  set text=ctrl.text
			    }        
			    //set params(par)=value
		        //set params(par_"Display")=text
		   }
		   elseif (controlType="listbox") {
			 set text="",value=""
			    set class=ctrl.%ClassName()
			    if class="listbox" {
					set index=ctrl.selectedIndex
			        if index'="",index'=-1 {
				        set opt=ctrl.options.GetAt(index)
				        if $IsObject(opt) {
				           set value=opt.value
				           set text=opt.text
				        }
			        }
			    }
			    if class="dataListBox" {
     			      set value=ctrl.value
     			      set text=ctrl.text
     			      if text=""!(text=value) set text=ctrl.%GetDisplayValue(value)
     			      ;if ctrl.sqlLookup'=""&&(value'="") set text=ctrl.%GetDisplayValue(value)
				      ;else  set text=ctrl.text
			    }        
			   // set params(par)=value
		       // set params(par_"Display")=text
		   }
		   elseif (controlType="table") {
			        set index=ctrl.selectedIndex
			        if ctrl.sql'="" {
				        set flagMultiSelect=ctrl.multiSelect
				        if flagMultiSelect=1 {
					       set value=ctrl.selectedRows
					       set text="",key1=%session.SessionId,key2=ctrl.snapshotId,key3=ctrl.index 
					       set c0=$char(0),c1=$char(1) ;set c0=",",c1="^" 
					       for i=1:1:$length(value,",") {
						       set val=$piece(value,",",i) if val="" continue
						       set rec=$get(^CacheTemp.zenData(key1,key2,key3,"data",i)) set len=$listlength(rec)
						       ;s ^tesst(111,"ii",i)=rec
						       set txt="" for j=2:1:len set txt=txt_$select(txt'="":c1,1:"")_$listget(rec,j)
						       set text=text_$select(text'="":c0,1:"")_txt
					       } 
					       set value=$zstrip(value,"<>=",",") 
				        }
				        else {
				           set rec=$lb("")
				           if index'=""&(index>0) set rec=$get(^CacheTemp.zenData(%session.SessionId,ctrl.snapshotId,ctrl.index,"data",index))
				           set value=$listget(rec,1)
				           set len=$listlength(rec)
				           set text="" if len>1 set text=$listget(rec,2,len)
				           ;if value'="" set text=$get(@globParamsForm@("par",par,value))
				           ;^CacheTemp.zenData(%session.SessionId,..snapshotId
				           ;set ^test(111,"%session.SessionId")=%session.SessionId
				           ;set ^test(111,par,"ctrl.snapshotId")=ctrl.snapshotId
				           ;m ^test(111,par,"data")=^CacheTemp.zenData(%session.SessionId,ctrl.snapshotId)
				        }
			        }
			        else {
				        set value=ctrl.value
				        set text="" if value'="" set text=$get(%session.Data("params","par",par,"data",value))
			        }
			    //set params(par)=value
		        //set params(par_"Display")=text
		   }
		   if value'="" {
			   set params(par)=value
			   set %session.Data("paramsItog","par",par)=value
		   }
		   if text'="" {
			   set params(par_"Display")=text
			   set %session.Data("paramsItog","par",par_"Display")=value
		   }
	    }
	 //m ^test(111,"params")=params
     
	} catch(exception) 
	{
	   set ret=exception.AsStatus()	
	} 
	quit ret
]]></Implementation>
</Method>

<Method name="isMetodValidate">
<Description>
if there is class Report.Jasper.(name of report) and in it there is method Validate, call it and test answer
method Validate() must return string: 1/0(ok/error)_$char(0)_message about error
output: 1/0(ok/error)_$char(0)_message about error</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&params:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 
   set ok=1
   // if there is class Report.Jasper.(name of report) and in it there is method Validate, call it and test answer
    set fileName=..getFileName()
    if fileName'="" {
	    set classname="Report.Jasper."_fileName
	    Set classobj = ##class(%Dictionary.CompiledClass).%OpenId(classname)
	    if $IsObject(classobj) {
		    Set classobj = ##class(%Dictionary.ClassDefinition).%OpenId(classname)
		    if $IsObject(classobj) { 
		        set methodname="Validate"
		        Set key=""
	            For  {
		            set methodobj=classobj.Methods.GetNext(.key) if key="" Quit
			        if methodobj.Name'=methodname continue
			        set ret=$classmethod(classname,methodname,.params)
			        if +ret=1 {
				        set ok=1
			        }
			        else {
				        set message=$piece(ret,$char(0),2)
				        if message="" set message=ret
				        set ok="0"_$char(0)_message
			        }
	            }
		    }
	    }
    }
    quit ok
]]></Implementation>
</Method>

<Method name="test">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set fileName="report19"
	// fileReport
	do ##class(Report.rpt).getPathFileReportGroup(.pathFileReport)
    set repFormat="pdf"
    set fileReport=pathFileReport_"\"_fileName_"."_repFormat
    w !,"fileReport="_fileReport
    //params
    kill params 
    set params("DateFrom")=##class(Report.Function.general).getDateTimeLong($zdh(20110120,8))_$char(1)_"Date" 
    set params("DateTo")=##class(Report.Function.general).getDateTimeLong($zdh(20120120,8))_$char(1)_"Date"
    set params("ExternalLab2")=1
    set params("ExternalLab3")=1
    set params("ExternalLab5")=1
    w !,"params="
    zw params
    //fileJasper
    set filePath=##class(Report.JasperReportTune).getPathFileJasper()
    if fileName'="",filePath'="" set fileJasper=filePath_"\"_fileName_".jasper" 
    w !,"fileJasper="_fileJasper
    set debug=1
    //set ok = ##class(Report.rpt).startRptFacade(fileReport, .params, fileJasper, repFormat, debug)
    set ok=##class(Report.rpt).startRptNew("isc.jasper.JasperFacade", "executeAndSave", fileReport, .params, repFormat, fileJasper, 1, debug )
    w !!,ok
]]></Implementation>
</Method>

<Method name="createModalGroup">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var modalgroup=this.createComponent('modalGroup');
	var texthidden=this.createComponent('hidden');
    texthidden.setProperty('id','currColumn');
    texthidden.setProperty('value','column1');
    modalgroup.addChild(texthidden);
	
    var text=this.createComponent('label');
    text.setProperty('value','Подождите, пожалуйста. Отчет формируется.');
    modalgroup.addChild(text);

	var hgroup=this.createComponent('hgroup');
	for (i=1; i<11; i++)  {
       var text = this.createComponent('text');
       text.setProperty('id','column'+i);
       text.setProperty('size','5mm');
       if (i==1) { text.setProperty('controlClass','selected'); }
       else  {text.setProperty('controlClass','general'); }
       hgroup.addChild(text);
    }
    modalgroup.addChild(hgroup);
    
    var t=window.setTimeout("zenPage.changeProgressBar()",1000);
    
    modalgroup.show();
]]></Implementation>
</Method>

<Method name="testReportOver">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
 set idReport=""
 if $IsObject(%session) set idReport=%session.SessionId
 set return=""
 if idReport="" {
	 &js<alert("Потерян контекст. Отчет не сформирован.");>
	 quit 1
 } 
 else {
	 quit +$get(^TMPjasperreport(idReport))
 }
]]></Implementation>
</Method>

<Method name="changeProgressBar">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	/*if (zenPage.testReportOver()==1) {
	//	window.close();
	}*/
	
	if (zenPage.testReportOver()==1) {
	    zenPage.endModal();  //stopProgreesBar();
	    var urlClosePage = zenPage.getUrlClosePage();
			if (urlClosePage != "") {
				zenPage.gotoPage(urlClosePage);
			}
	}
    var curr=document.getElementById("currColumn").childNodes[0].value;
    //alert(curr);
    var next=1;
    var length=10;
  for (i=1; i<length+1; i++) {
     if (curr=="column"+i) {
       if (i==length) {
           next=1;
       }
       else {
           next=i+1;
       }
       document.getElementById("column"+i).childNodes[0].setAttribute("class","general");
       document.getElementById("column"+next).childNodes[0].setAttribute("class","selected");
       document.getElementById("currColumn").childNodes[0].value="column"+next;
       break;
     }
  }
  var t=window.setTimeout("zenPage.changeProgressBar()",100);
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// не используется

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// просто храню совет Бори  по закрытию окна

]]></Content>
</UDLText>

<Method name="closePage">
<Language>javascript</Language>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
 //   ww = window.open(window.location, "_self");
  // console.log(ww);
  //   ww.close();
  netscape.security.PrivilegeManager.enablePrivilege("UniversalBrowserWrite");
  //alert("This will close the window");
  window.open('','_parent',''); 
  window.close();
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// не используется

]]></Content>
</UDLText>

<Method name="sizeWindow">
<Language>javascript</Language>
<ReturnType>%String</ReturnType>
<ClientMethod>1</ClientMethod>
<Implementation><![CDATA[
	var width=0,height=0,winX=0,winY=0;
  if( typeof( window.innerWidth ) == 'number' ) {
    //Non-IE
    width = window.innerWidth;
    height = window.innerHeight;
  } else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {
    //IE 6+ in 'standards compliant mode'
    width = document.documentElement.clientWidth;
    height = document.documentElement.clientHeight;
  } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {
    //IE 4 compatible
    width = document.body.clientWidth;
    height = document.body.clientHeight;
  }
  var winX = (document.all)?window.screenLeft:window.screenX;
  var winY = (document.all)?window.screenTop:window.screenY;
  
  return width+","+height+","+winX+","+winY;
]]></Implementation>
</Method>
</Class>
</Export>
