<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="Report.testQuery">
<Super>%Persistent</Super>
<TimeCreated>62295,73263.02176</TimeCreated>

<Query name="qq">
<Description>
Query for main report</Description>
<Type>%Query</Type>
<FormalSpec>par1:%String</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="ROWSPEC" value="field1:%String,field2:%Integer"/>
</Query>

<Method name="qqExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,par1:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   	set $li(qHandle,1)=par1
  	set $li(qHandle,2)=""
  	/* 	
  	set metainfo=^oddCOM("Report.testQuery","q","queryRpt",21)
  	set colsmeta=$li(metainfo,1),cmeta1=$li(colsmeta,1)
  	S cmeta1=$LB("aaa",10,"aaa")
  	S $li(colsmeta,1)=cmeta1
    set $li(metainfo,1)=colsmeta  	  	
  	set $li(^oddCOM("Report.testQuery","q","queryRpt",21),1)=metainfo
  	*/
  	Quit $$$OK
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//$P{SUBREPORT_DIR} +"rpt23sub.jasper"

]]></Content>
</UDLText>

<Method name="qqClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>queryRptExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="qqFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>qqExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set par1=$listget(qHandle,1) 
	set item=$listget(qHandle,2)
	if item>3 set Row="",AtEnd=1 quit $$$OK
	set $li(Row,1)=item
	set $li(Row,2)=item*2
	set $li(qHandle,2)=item+1
	set AtEnd=0
	Quit $$$OK
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//2,"field1",12,50,0,2,"field1","testQuery","Report","",$c(0,0,0,0,0,0,0,0,0,0,0,0),"field2",4,10,0,2,"field2","testQuery","Report","",$c(0,0,0,0,0,0,0,0,0,0,0,0))	

]]></Content>
</UDLText>

<Method name="qqGetODBCInfo">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&colinfo:%List,&parminfo:%List,&qHandle:%Binary]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 set colinfo=$lb(2,"field3",12,50,0,2,"field3","testQuery","Report","",$c(0,0,0,0,0,0,0,0,0,0,0,0),"field2",4,10,0,2,"field2","testQuery","Report","",$c(0,0,0,0,0,0,0,0,0,0,0,0))
 quit $$$OK
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//s ^test("testQuery","colinfo")=colinfo

]]></Content>
</UDLText>

<Method name="testqq">
<ClassMethod>1</ClassMethod>
<FormalSpec>par1:%String</FormalSpec>
<Implementation><![CDATA[
  SET rset=##class(%ResultSet).%New("Report.testQuery:qq")
  do rset.Execute(par1)
  set columnsCount=rset.GetColumnCount()
  w !,columnsCount
  for i=1:1:columnsCount {
	w !,"field"_i_":"_rset.GetColumnName(i)  
  }
  w !,rset.GetODBCInfo()
  while rset.Next() { 
     w !,rset.Data("field1")  ;," ",rset.Data("codeSetTest")
  }	
  do rset.Close()
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Report.testQueryD</DataLocation>
<DefaultData>testQueryDefaultData</DefaultData>
<IdLocation>^Report.testQueryD</IdLocation>
<IndexLocation>^Report.testQueryI</IndexLocation>
<StreamLocation>^Report.testQueryS</StreamLocation>
<Data name="testQueryDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
