<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="Report.EpisodePCL2">
<Super>%Persistent</Super>
<TimeCreated>62313,62529.356121</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
//@refTmp@("1",department,line,num)=$lb(offset,value,style)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
//@refTmp@("2",department,offset_$c(1)_width_$c(1)_lastRightPoint)=numField - for collect all offsets

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
//@refTmp@("3",department,line,offset,num)="" - for define widthField

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
//@refTmp@("field",department,numField)=$lb(offset,widthField,factorProporcional)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
//@refTmp@("data",department,line,numField)=$lb(offset,value,style)

]]></Content>
</UDLText>

<Method name="getData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[codeEpisode:%String,refTmp:%String,&pTestSets:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set result=$$$OK
  try {
    set r=$char(0),r1=$char(1),r2=$char(2)
   	do ..getVspData(codeEpisode, refTmp, .pTestSets)
   	  
    set department="" 
   	for {
	   set department=$order(@refTmp@("2",department)) if department="" quit
	   set maxCountLine=45 if department="H"!(department="D") set maxCountLine=47
	   set pageMax=$order(@refTmp@("1",department,""),-1) 
   	   set key="",numField=0,margin=3
   	   for {
	        set key=$order(@refTmp@("2",department,key)) if key="" quit
	   	    set numField=numField+1
	   	    set offset=$piece(key,r1,1)+margin
	   	    set width=$piece(key,r1,2),lastRightPoint=$piece(key,r1,3)+margin
	   	    set factor=0,specSign=$piece(key,r1,4),style=$piece(key,r1,5)
	   	    ;set factor=##class(Report.EpisodePCL).getFactorProportional(lastRightPoint)
	   	    set @refTmp@("field",department,numField)=$lb(offset,width,factor,lastRightPoint,specSign,style)
	  	   	set page="",lineNumNew=0 
		   	;for {
		   	;   	set page=$order(@refTmp@("2",department,key,page)) if page="" quit
		   	for page=1:1:pageMax {
		   	    set countLines=$order(@refTmp@("1",department,page,""),-1)
		        for line=1:1:maxCountLine {
			        set lineNumNew=lineNumNew+1 
			        if '$data(@refTmp@("data",department,lineNumNew)) set @refTmp@("data",department,lineNumNew)=page
			        set num="" 
			     	for {
				    	set num=$order(@refTmp@("2",department,key,page,line,num)) if num="" quit
				    	set rec=$get(@refTmp@("1",department,page,line,num))
				    	set value=$li(rec,2) ;set specSign=..specSign(value)
				    	set @refTmp@("data",department,lineNumNew,numField)=rec
			    	}
		    	}
	     	}
	     	;if specSign'="" set $li(@refTmp@("field",department,numField),5)=specSign
	   	}
	   	set countFields=0,i="" for {  set i=$o(@refTmp@("2",department,i)) quit:i=""  set countFields=countFields+1 }
        set $p(@refTmp@("field",department),$c(0),1)=countFields
        set key="",maxLastRightPoint=0
        for {
	        set key=$order(@refTmp@("field",department,key)) if key="" quit
	        set lastRightPoint=$li(^(key),4)
	        if lastRightPoint>maxLastRightPoint set maxLastRightPoint=lastRightPoint
        }
        set factor=##class(Report.EpisodePCL).getFactorProportional(maxLastRightPoint)
        set key=""
        for {
	        set key=$order(@refTmp@("field",department,key)) if key="" quit
	        set $li(@refTmp@("field",department,key),3)=factor
	    }
        
   	}
   	set @refTmp@("data")=codeEpisode
   	
   	//counte pages
   	set department="",counterPages=0 
   	for {
	   set department=$order(@refTmp@("1",department)) if department="" quit
	   set $piece(@refTmp@("field",department),$c(0),4)=counterPages
	   set page=""
	   for {
	      set page=$order(@refTmp@("1",department,page)) if page="" quit
	      set counterPages=counterPages+1
	   }
   	}
   	//all pages, all fields
   	set department="",counterFields=0 
   	for {
	   set department=$order(@refTmp@("1",department)) if department="" quit
	   set counterFields=counterFields+$piece(@refTmp@("field",department),$c(0),1)
   	}
    set @refTmp@("field")=$lb(counterFields,counterPages)
   
    if $data(@refTmp@("data"))<10 k @refTmp
    
    if $data(@refTmp) do ##class(Report.EpisodePCL).doParams(codeEpisode, refTmp)
   	   	
  	
  }  catch exception {
	  Set result=exception.AsStatus()
  }
  k ^test("epi",codeEpisode)
  s ^test("epi",codeEpisode)="$j="_$j
  m ^test("epi",codeEpisode,"data")=@refTmp
 
  quit result
]]></Implementation>
</Method>

<Method name="getVspData">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[codeEpisode:%String,refTmp:%String,&pTestSets:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set result=$$$OK
  try {
	set ref=$na(^||episode)
   	kill @ref,@refTmp
   	//Do ##class(TCLEx.Function.Episode).PCLResult(100904001102)
   	//Do ##class(TCLEx.Function.Episode).PCLResult(269100010101)
   	Do ##class(TCLEx.Function.Episode).PCLResult(codeEpisode,.pTestSets) 
   	 
   	set r=$char(0),r1=$char(1),r2=$char(2)
   	set offsetPrev=0,offset=0,value="",style="",styleWrite="",num=0
   	set department="" 
   	for {
	   set departmentp=department,department=$order(@ref@(department)) 
	   if departmentp'="" {
		  	   if ((offset=0)!(value=""))&(pagep'="")&(linep'="")  
					       {
						       if '$data(@refTmp@("1",departmentp,pagep,linep)) set @refTmp@("1",departmentp,pagep,linep)="" 
					       }
					       else     
					       {
					           set num=num+1
					           set styleUse=$s(styleWrite'="":styleWrite,style'="":style,1:"NORMAL")
					           set @refTmp@("1",departmentp,pagep,linep,num)=$lb(offset,value,styleUse,"",$l(value))
					           set @refTmp@("3",departmentp,pagep,linep,offset,num)=""
				}
				set offsetPrev=0,offset=0,value="",num=0
	   }  
	   if department="" quit 
	   set page=""
	   for {
		   set pagep=page,page=$order(@ref@(department,page)) if page="" quit
		   set line=""
		   for {
			   set linep=line,line=$order(@ref@(department,page,line)) if line="" quit
			   set npp=""
			   for {
				   set npp=$order(@ref@(department,page,line,npp)) if npp="" quit
				   set rec=^(npp),firstSymbol=$extract(rec),len=$l(rec)
				   if firstSymbol=$c(13) continue
				   if firstSymbol="!" {
					   if linep'="" {
						   if offset=0!(value="") 
					       {
						       if '$data(@refTmp@("1",department,page,linep)) set @refTmp@("1",department,page,linep)="" 
					       }
					       else     
					       {
					           set num=num+1
					           set styleUse=$s(styleWrite'="":styleWrite,style'="":style,1:"NORMAL")
					           set @refTmp@("1",department,page,linep,num)=$lb(offset,value,styleUse,"",$l(value))
					           set @refTmp@("3",department,page,linep,offset,num)=""
					       }
					   }
					   set offsetPrev=0,offset=0,value="",num=0
					   continue
				   }
				   if firstSymbol="?" {
					   set offsetPrev=offset
					   set offset=+$extract(rec,2,4)
					   if (offset'=offsetPrev)&(offsetPrev'=0) {
					      set num=num+1
					      set styleUse=$s(styleWrite'="":styleWrite,style'="":style,1:"NORMAL")
					      set @refTmp@("1",department,page,line,num)=$lb(offsetPrev,value,styleUse,"",$l(value))  
					      set @refTmp@("3",department,page,line,offsetPrev,num)=""
					      set value=""
					   }   
					   set value=$extract(rec,5,len) if value=" " s value=""
					   set styleWrite=style
					   continue
				   }	   
				   if firstSymbol="~" {
					   if $e(rec,2,10)="FLAG-HIGH" set value="FLAG-HIGH" continue
					   if $e(rec,2,9)="FLAG-LOW" set value="FLAG-LOW" continue
					   set wr=$extract(rec,2,len)
					   if style="" set styleWrite=wr
					   set style=wr
					   continue
				   }
				   set value=rec if value=" " s value=""
				   set styleWrite=style
				   
			   }
			 		   
		   }
	   }	   	   
   	}
   	
   	  	//"2a"
   	set department="" 
   	for {
	   set department=$order(@refTmp@("3",department)) if department="" quit
	   set page=""
	   for {
	      set page=$order(@refTmp@("3",department,page)) if page="" quit
	      set line=""
	          for {
	              set line=$order(@refTmp@("3",department,page,line)) if line="" quit
	              set offset="",key="",widthLastField=0
	              for {
	                  set offsetp=offset,offset=$order(@refTmp@("3",department,page,line,offset)) 
	                  if offset="" {
		                  if offsetp'="" {
			                  set num=$o(@refTmp@("3",department,page,line,offsetp,"")) 
			                  if num'="" 
			                  {
				                  set value=$listget(@refTmp@("1",department,page,line,num),2)
				                  set len=$length(value) if value="FLAG=HIGHT"!(value="FLAG-LOW") set len=1
				                  set widthLastField=len
			                  }
		                  }
		                  quit
	                  }
	                  set key=key_$s(key'="":r1,1:"")_offset
	              }
	              set offset=""
	              for {
		              set offset=$order(@refTmp@("3",department,page,line,offset)) if offset="" quit
		              set num="" 
	                  for {
		                  set num=$order(@refTmp@("3",department,page,line,offset,num)) if num="" quit
		                  set @refTmp@("2a",department,key,widthLastField,offset,page,line,num)=""
	                  }   
	              } 
	          }
	    }
   	}               
   	
   	//"2b"
   	set department="" 
   	for {
	   set department=$order(@refTmp@("2a",department)) if department="" quit
   	   set key="" 
   	   for {
	     	set key=$order(@refTmp@("2a",department,key)) if key="" quit
	   	    set width="",maxwidth=$order(@refTmp@("2a",department,key,""),-1)
	   	    set width="",key2=key_r2_maxwidth
	   	    for {
		   	    set width=$order(@refTmp@("2a",department,key,width)) if width="" quit
		   	    merge @refTmp@("2b",department,key2)=@refTmp@("2a",department,key,width)
	   	    }
   	   }   	
   	}
	//"2"
	set department="" 
   	for {
	   set department=$order(@refTmp@("2b",department)) if department="" quit
       set key="" 
   	   for {
	   	    set key=$order(@refTmp@("2b",department,key)) if key="" quit	
	   	    set maxWidthLastField=+$piece(key,r2,2),strOffsets=$p(key,r2,1) 
	        set len=$length(strOffsets,r1)
	        set offsetLast=$piece(strOffsets,r1,len)
	        set lastRightPoint=offsetLast+maxWidthLastField 
	   	    for i=1:1:len {
		   	   set offset=+$piece(strOffsets,r1,i)
		   	   set offsetNext=+$piece(strOffsets,r1,i+1)
		   	   if offsetNext'=0 set width=offsetNext-offset
		   	   else   set width=maxWidthLastField
		   	   set key2=offset_r1_width_r1_lastRightPoint
		   	   merge @refTmp@("2",department,key2)=@refTmp@("2b",department,key,offset)
	   	    }
   	   }
   	}
   	set department="" 
   	for {
	   set department=$order(@refTmp@("2",department)) if department="" quit
	   //выделение отдельно полей со спец-символами (стрелки вверх, вниз)
       set key="" 
   	   for {
	   	    set key=$order(@refTmp@("2",department,key)) if key="" quit
	   	    if $piece(key,r1,4)'="" continue	
	  	   	set page=""
		   	for {
		   	   	set page=$order(@refTmp@("2",department,key,page)) if page="" quit
		   	   	set line=""
		   	   	for {
			   	   	set line=$order(@refTmp@("2",department,key,page,line)) if line="" quit
		   	        set num="" 
			        for {
				   	   set num=$order(@refTmp@("2",department,key,page,line,num)) if num="" quit
				   	   set rec=$get(@refTmp@("1",department,page,line,num))  
				   	   set value=$li(rec,2)   	  
				   	   if value="FLAG-HIGH"!(value="FLAG-LOW") {
					      set key2=key set $piece(key2,r1,4)=value
					   	  set @refTmp@("2",department,key2,page,line,num)=@refTmp@("2",department,key,page,line,num)
					   	  k @refTmp@("2",department,key,page,line,num)
			     	   }
			        }
		   	    }
	   	    }
   	   }
   	    //выделение отдельно полей со спец-стилем (BOLD,ITALIC)
       set key="" 
   	   for {
	   	    set key=$order(@refTmp@("2",department,key)) if key="" quit
	   	    if $piece(key,r1,5)'="" continue	
	  	   	set page=""
		   	for {
		   	   	set page=$order(@refTmp@("2",department,key,page)) if page="" quit
		   	   	set line=""
		   	   	for {
			   	   	set line=$order(@refTmp@("2",department,key,page,line)) if line="" quit
		   	        set num="" 
			        for {
				   	   set num=$order(@refTmp@("2",department,key,page,line,num)) if num="" quit
				   	   set rec=$get(@refTmp@("1",department,page,line,num))  
				   	   set style=$li(rec,3)   	  
				   	   if style="BOLD"!(style="ITALIC")!(style="UNDERLINE") {
					      set key2=key set $piece(key2,r1,5)=style
					   	  set @refTmp@("2",department,key2,page,line,num)=@refTmp@("2",department,key,page,line,num)
					   	  k @refTmp@("2",department,key,page,line,num)
			     	   }
			        }
		   	    }
	   	    }
   	   }
   	}
   	k ^test("epi",codeEpisode,"PCL")
    m ^test("epi",codeEpisode,"PCL")=@ref  	
   	kill @ref
   	}  
   	catch exception 
   	{
	  Set result=exception.AsStatus()
    }
]]></Implementation>
</Method>

<Method name="specSign">
<ClassMethod>1</ClassMethod>
<FormalSpec>value:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set ret=""
	if value="FLAG-HIGH" set ret="FLAG-HIGH"
	if value="FLAG-LOW" set ret="FLAG-LOW"
	quit ret
]]></Implementation>
</Method>

<Query name="queryRpt">
<Type>%Query</Type>
<FormalSpec>department:%String,refTmp:%String</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="ROWSPEC" value="numPage:%String,Field1:%String,Field2:%String,Field3:%String,Field4:%String,Field5:%String,Field6:%String,Field7:%String,Field8:%String,Field9:%String,Field10:%String,Field11:%String,Field12:%String,Field13:%String,Field14:%String,Field15:%String,Field16:%String,Field9:%String,Field10:%String,Field11:%String,Field12:%String,Field13:%String,Field14:%String,Field15:%String,Field16:%String,Field17:%String,Field18:%String,Field19:%String,Field20:%String,Field21:%String,Field22:%String,Field23:%String,Field24:%String,Field25:%String,Field26:%String,Field27:%String,Field28:%String,Field29:%String,Field30:%String,Field31:%String,Field32:%String,Field33:%String,Field34:%String,Field35:%String,Field36:%String,Field37:%String,Field38:%String,Field39:%String,Field40:%String,Field41:%String,Field42:%String,Field43:%String,Field44:%String,Field45:%String,Field46:%String,Field47:%String,Field48:%String,Field49:%String,Field50:%String"/>
</Query>

<Method name="queryRptExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,department:%String,refTmp:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  	set $li(qHandle,1)=refTmp
  	set $li(qHandle,2)=department
  	set $li(qHandle,3)=""
   	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryRptClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>queryRpt2Execute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryRptFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>queryRpt2Execute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set refTmp=$listget(qHandle,1)
	set department=$listget(qHandle,2)
	set line=$listget(qHandle,3)
   	set line=$order(@refTmp@("data",department,line)) 
   	set Row=$lb("")
	if line="" set Row="",AtEnd=1 quit $$$OK
	set $li(Row,1)=+$get(@refTmp@("data",department,line))
	set numField="" 
	for {
		set numField=$order(@refTmp@("data",department,line,numField)) if numField="" quit
		set rec=^(numField)
		set value=$li(rec,2)
		;if value="FLAG-HIGH" set value=$c(24)  ;"\u2192" "\u8593"  ;fn CHAR(24)"
		set $li(Row,numField+1)=value
		set ^test("query",$o(^test("query",""),-1)+1)=Row
	}
	//set ^test("epi2","line",$o(^test("epi2","line",""),-1)+1)=Row
	set $li(qHandle,3)=line
	set AtEnd=0
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="testqueryRpt">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
  SET rset=##class(%ResultSet).%New("Report.EpisodePCL2:queryRpt")
  set epi="269100010101"
  do rset.Execute("B",$na(^test("epi",epi,"data")))
  while rset.Next() { 
     w !,rset.Data("Field1")," ",rset.Data("Field2")," ",rset.Data("Field3")," ",rset.Data("Field4")
     w " ",rset.Data("Field5")," ",rset.Data("Field6")," ",rset.Data("Field7")," ",rset.Data("Field8")
  }	
  do rset.Close()
]]></Implementation>
</Method>

<Query name="queryStruct">
<Description>
Query for generate setTest report</Description>
<Type>%Query</Type>
<FormalSpec>department:%String,refTmp:%String</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="ROWSPEC" value="numberField:%Integer, offsetField:%Integer, widthField:%Integer, factorProportional:%Float, specSign:%String"/>
</Query>

<Method name="queryStructExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,department:%String,refTmp:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  	set $li(qHandle,1)=""
  	set $li(qHandle,2)=refTmp
  	set $li(qHandle,3)=department
  	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryStructClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>queryStructExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryStructFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>queryStructExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set refTmp=$listget(qHandle,2)
	set department=$listget(qHandle,3)
	set item=$listget(qHandle,1)
	set item=$order(@refTmp@("field",department,item)) 
	if item="" set Row="",AtEnd=1 quit $$$OK
	set rec=$get(@refTmp@("field",department,item))
	set $li(Row,1)=item
	set $li(Row,2)=$listget(rec,1)
	set $li(Row,3)=$listget(rec,2)
	set $li(Row,4)=$listget(rec,3)
	set $li(Row,5)=$listget(rec,5)
	set $li(qHandle,1)=item
	set AtEnd=0
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="testqueryStruct">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
  set refTmp=$na(^||episodeUse)
  SET rset=##class(%ResultSet).%New("Report.Episode3:queryStruct")
  do rset.Execute("B",refTmp)
  while rset.Next() { 
     w !,rset.Data("numberField")," ",rset.Data("offsetField")," ",rset.Data("widthField")
  }	
  do rset.Close()
]]></Implementation>
</Method>

<Query name="queryDepartments">
<Description>
Query all departments from refTmp</Description>
<Type>%Query</Type>
<FormalSpec>refTmp:%String</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="ROWSPEC" value="department:%String,nameDepartment:%String,fioDoctor:%String,dateOut:%String,sectionName:%String,initPage:%String,kolAllPages:%String,kolFields:%Integer"/>
</Query>

<Method name="queryDepartmentsExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,refTmp:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  	set $li(qHandle,1)=""
  	set $li(qHandle,2)=refTmp
  	set $li(qHandle,3)=$get(@refTmp@("data")) 
  	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryDepartmentsClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>queryDepartmentsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryDepartmentsFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>queryDepartmentsExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set refTmp=$listget(qHandle,2)
	set codeEpisode=$listget(qHandle,3)
	set department=$listget(qHandle,1)
	set department=$order(@refTmp@("data",department)) 
	if department="" set Row="",AtEnd=1 quit $$$OK
	set $li(Row,1)=department
	set $li(qHandle,1)=department
	set nameDepartment=$get(@refTmp@("paramDep",department,"Vals","TS_DepartmentName"))
	set fioDoctor=$get(@refTmp@("paramDep",department,"Vals","TS_AuthorisedDoctor"))
	set dateOut=$get(@refTmp@("paramDep",department,"Vals","TS_DateOfAuthorisation"))
	set sectionName=$get(@refTmp@("paramDep",department,"Vals","sectionName"))
	set initPage=$get(@refTmp@("paramDep",department,"Vals","initPage"))
    set kolAllPages=$listget($get(@refTmp@("field")),2)
	set kolFields=$piece($get(@refTmp@("field",department)),$c(0),1)
	set $li(Row,1)=department
	set $li(Row,2)=nameDepartment
	set $li(Row,3)=fioDoctor
	set $li(Row,4)=dateOut
	set $li(Row,5)=sectionName	
	set $li(Row,6)=initPage
	set $li(Row,7)=kolAllPages
	set $li(Row,8)=kolFields
	set AtEnd=0
	Quit $$$OK
]]></Implementation>
</Method>

<Query name="queryParameters">
<Description>
Query all parameters from refTmp</Description>
<Type>%Query</Type>
<FormalSpec>department:%String,refTmp:%String</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="ROWSPEC" value="parameterName:%String,parameterValue:%String"/>
</Query>

<Method name="queryParametersExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,department:%String,refTmp:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  	set $li(qHandle,1)=""
  	set $li(qHandle,2)=refTmp
  	set $li(qHandle,3)=department
  	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryParametersClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>queryParametersExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryParametersFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>queryParametersExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set refTmp=$listget(qHandle,2)
	set department=$listget(qHandle,3)
	set item=$listget(qHandle,1)
	set item=$order(@refTmp@("paramDep",department,"Vals",item)) 
	if item="" set Row="",AtEnd=1 quit $$$OK
	set $li(Row,1)=item
	set $li(Row,2)=$get(@refTmp@("paramDep",department,"Vals",item))
	set $li(qHandle,1)=item
	set AtEnd=0
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getInfoFields">
<ClassMethod>1</ClassMethod>
<FormalSpec>department:%String,refTmp:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<SqlProc>1</SqlProc>
<Implementation><![CDATA[  quit $get(@refTmp@("field",department))
]]></Implementation>
</Method>

<Method name="getcodeEpisode">
<ClassMethod>1</ClassMethod>
<FormalSpec>refTmp:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<SqlProc>1</SqlProc>
<Implementation><![CDATA[  quit $get(@refTmp@("data"))
]]></Implementation>
</Method>

<Projection name="javaProjection">
<Type>%Projection.Java</Type>
<Parameter name="ROOTDIR" value="C:\work\jasper"/>
</Projection>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Report.EpisodePCL2D</DataLocation>
<DefaultData>EpisodePCL2DefaultData</DefaultData>
<IdLocation>^Report.EpisodePCL2D</IdLocation>
<IndexLocation>^Report.EpisodePCL2I</IndexLocation>
<StreamLocation>^Report.EpisodePCL2S</StreamLocation>
<Data name="EpisodePCL2DefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
