<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="Report.rpt50">
<Description>
Отчет - Акт приема-передачи документов
шаблон jasperreports rpt50.jrxml
клиент - ReportZEN.rpt50.cls
запрашиваемые параметры </Description>
<Super>%RegisteredObject</Super>
<TimeCreated>62347,59426.280398</TimeCreated>

<Query name="queryRpt">
<Type>%Query</Type>
<FormalSpec>refTmp:%String,countCopy:%Integer</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="ROWSPEC" value="codeHospital:%String,nameHospital:%String,NumInvoice:%String,kolInvoice:%String,kolRpt23:%String,kolAkt:%String,kolSF:%String"/>
</Query>

<Method name="queryRptExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,refTmp:%String,countCopy:%Integer=1]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    if $tr($get(refTmp),$c(0),"")="" set refTmp=$na(^CacheTempUserEpi($j))
	//set flagKillGlob=0 if '$data(@refTmp) if ..getData(stringHospitals, pDateInvoice, pDateFrom, pDateTo, refTmp) set flagKillGlob=1
  	set $li(qHandle,1)=""
  	set $li(qHandle,2)=refTmp
  	//set $li(qHandle,3)=flagKillGlob
  	set $li(qHandle,4)=countCopy
  	set $li(qHandle,5)=0
  	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryRptClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>queryRptExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	//if $listget(qHandle,3)=1 set refTmp=$listget(qHandle,2) if refTmp'="" k @refTmp
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryRptFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>queryRptExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set codeHospital=$listget(qHandle,1)
	set refTmp=$listget(qHandle,2)
	set countCopy=$listget(qHandle,4)
	set counterCopy=$listget(qHandle,5)
	if counterCopy<countCopy,codeHospital'="" 
	{
		set rec=$get(@refTmp@(codeHospital))
	}
	else  
	{
		set codeHospital=$order(@refTmp@(codeHospital)) if codeHospital="" set Row="",AtEnd=1 quit $$$OK
        Set rec=$get(@refTmp@(codeHospital))
        set counterCopy=0
	}
    set nameHospital=$listget(rec,1)
    set NumInvoice=$listget(rec,2)
    set kolInvoice=$listget(rec,3)
    set kolRpt23=$listget(rec,4)
    set kolAkt=$listget(rec,5)
    set kolSF=$listget(rec,6)
    set $li(Row,1)=codeHospital
	set $li(Row,2)=nameHospital
	set $li(Row,3)=NumInvoice
	set $li(Row,4)=kolInvoice
	set $li(Row,5)=kolRpt23
	set $li(Row,6)=kolAkt
	set $li(Row,7)=kolSF
	set $li(qHandle,1)=codeHospital
	set counterCopy=counterCopy+1 
	set $li(qHandle,5)=counterCopy
	set AtEnd=0
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="getData">
<ClassMethod>1</ClassMethod>
<FormalSpec>stringHospitals:%String,pDateInvoice:%String,pDateFrom:%String,pDateTo:%String,refTmp:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set res=1
  try {
	kill @refTmp
	set countHospitals=$length(stringHospitals)
	for i=1:1:countHospitals {
		set codeHospital=$piece(stringHospitals,",",i) if codeHospital="" continue
	    do BODY^PRTCLNRUS25(pDateFrom,pDateTo,codeHospital,pDateInvoice,"",$na(@refTmp@(codeHospital,"dataInv")))
	    set inv="",countInvoice=0,strNumInvoice="",dop=$listget(@refTmp@(codeHospital,"dataInv","REPORT"),6)
	    for {
		  set inv=$order(@refTmp@(codeHospital,"dataInv","REPORT", inv)) if inv="" quit
		  set countInvoice=countInvoice+1 
		  set strNumInvoice=strNumInvoice_$select(strNumInvoice'="":",",1:"")_dop_"/"_inv  
	    }
	    if countInvoice=0 kill @refTmp@(codeHospital,"dataInv") continue
	    set rec=$get(@refTmp@(codeHospital,"dataInv","REPORT"))
	    set nameHospital=$listget(rec,2)
	    set @refTmp@(codeHospital)=$listbuild(nameHospital,strNumInvoice,countInvoice,"1","1","1")
	}
  } catch(e)
  {
	 set res="0"_$c(1)_$ZERROR 
  }
 quit res
]]></Implementation>
</Method>

<Method name="startRpt">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&params:%String,refTmp:%String,USER:%String,idProcess:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 set fileReport="",res=$$$OK
 try {
     $$$ThrowOnError(..getFileReport(.fileReport, $get(USER), $get(idProcess) ) )

     //файл с шаблоном Jasper 
     set fileJasper = ..getFileJasper()
  
     //формат файла
     set reportFormat=..getFormatReport()
  
     $$$ThrowOnError(##class(Report.rpt).startRptFacade(fileReport, .params, fileJasper, reportFormat))
  
 }
 catch(exception) 
 {
   If $ZERROR["<ZJGTW>" Set res=$get(%objlasterror)
   else   Set res=exception.AsStatus()
   set fileReport=""
 }   
 quit $select(+res=1:"1"_$c(1)_fileReport,1:"0"_$c(1)_$System.Status.GetErrorText(res))
]]></Implementation>
</Method>

<Method name="getFileReport">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&fileReport:%String,USER:%String="",id:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set res=$$$OK set fileReport=""
	set res=##class(Report.rpt).getPathFileReportGroup(.pathFileReport,USER)
	//if +res=1 set fileReport=pathFileReport_"\"_"PRTCLNRUS50"_$get(id)_"."_..getFormatReport()
	if +res=1 set fileReport=pathFileReport_"\"_$zn_"."_..getFormatReport()
	quit res
]]></Implementation>
</Method>

<Method name="getFileJasper">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[ quit ##class(Report.JasperReportTune).getPathFileJasper()_"\rpt50.jasper"
]]></Implementation>
</Method>

<Method name="getFormatReport">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[ quit ##class(Report.rpt).getFormatReportDefault()
]]></Implementation>
</Method>
</Class>
</Export>
