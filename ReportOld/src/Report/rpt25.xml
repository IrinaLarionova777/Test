<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="Report.rpt25">
<Super>%RegisteredObject</Super>
<TimeCreated>62245,57781.761102</TimeCreated>

<Query name="queryRpt">
<Type>%Query</Type>
<FormalSpec>refTmp:%String</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="ROWSPEC" value="InvoiceNum:%String,InvoiceDate:%String,Npp:%Integer,NameString:%String,Ed:%String,Kol:%Integer,Price:%Float,Sum:%Float,SumProp:%String"/>
</Query>

<Method name="queryRptExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,refTmp:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  	set $li(qHandle,1)=refTmp
  	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryRptClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>queryRptExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="queryRptFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>queryRptExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set refTmp=$lg(qHandle,1) if refTmp=""!(refTmp=$c(0)) set Row="",AtEnd=1 quit $$$OK
	set item=$lg(qHandle,2)
	set npp=+$listget(qHandle,3)
	set item=$o(@refTmp@("REPORT",item)) 
	if item="" set Row="",AtEnd=1 quit $$$OK
	set itemvals1=$g(@refTmp@("REPORT",item))
	set invoiceDate=$ListGet(itemvals1,1)
	set invoiceSum=$ListGet(itemvals1,2)
	set npp=npp+1
	set $li(Row,1)=item
	set $li(Row,2)=$tr($zd(invoiceDate,15),"/",".")
	set $li(Row,3)=npp
	set $li(Row,4)=""
	set $li(Row,5)="шт."
	set $li(Row,6)=1
	set $li(Row,7)=invoiceSum
	set $li(Row,8)=invoiceSum
	set $li(Row,9)=$$SumStr^PRTCLNRUS25(invoiceSum)
	set $li(qHandle,2)=item
	set $li(qHandle,3)=npp
	set AtEnd=0
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TestqueryRpt">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
 s refTmp=$na(^temp($j))
 set pDateFrom=62100,pDateTo=62300,pHospital=2011,pInvoiceDate=62300,PAYMENT=""
 d BODY^PRTCLNRUS25(pDateFrom,pDateTo,pHospital,pInvoiceDate,PAYMENT,$name(@refTmp))
 Set result=##class(%ResultSet).%New("Report.rpt25:queryRpt")
 Do result.Execute($na(@refTmp))
 For  Quit:'result.Next()  Do
 .Write result.Data("Npp")," ",result.Data("InvoiceNum")," ",result.Data("InvoiceDate")," ",result.Data("Ed")," /",result.Data("Kol")," /",result.Data("Price")," /",result.Data("Sum"),"/",!
]]></Implementation>
</Method>

<Method name="StartRpt">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDateFrom:%String,pDateTo:%String,pDateInvoice:%String,pHospital:%String,refTmp:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  set nameReport=..getReportName()
  	
  set ret=..getFileReport( pDateTo, pHospital, "Счет" ) 
  if +ret=0 {
	  set str=$p(ret,$char(1),2)
	  do ##class(Report.rpt).Log(nameReport,str)
	  quit "0^"_str
  }
  s fileReport=$p(ret,$c(1),2) 

  if ##class(%File).Exists(fileReport)&&('##class(%File).Delete(fileReport)) {
	  set str="Файл "_fileReport_" занят другим приложением"
	  do ##class(Report.rpt).Log(nameReport,str)
	  quit "0^"_str
  }
  
  if $order(@refTmp@("REPORT",""))="" {
	  set str="Нет данных. Плательщик "_##class(User.CTPaymentCode).%OpenId(pHospital).CTPCDesc  
	  do ##class(Report.rpt).Log(nameReport,str)
	  quit "0^"_str  
  }
    
  //строка параметров
  do ..doParams(pDateFrom, pDateTo, pDateInvoice, pHospital, refTmp, .params )
    
  //файл с шаблоном Jasper 
  set fileJasper = ..getFileJasper()
  
  set answer=##class(Report.rpt).StartRpt(fileReport, fileJasper, .params, "rpt25" )
    
  quit answer
]]></Implementation>
</Method>

<Method name="doParams">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pDateFrom:%String,pDateTo:%String,pDateInvoice:%String,pHospital:%String,refTmp:%String,&params:%String]]></FormalSpec>
<Implementation><![CDATA[
	set params("pDateFrom")=$tr($zd(pDateFrom,15),"/",".")
    set params("pDateTo")=$tr($zd(pDateTo,15),"/",".")
    set params("pInvoiceDate")=$tr($zd(pDateInvoice,15),"/",".")
    
    Set pcobj=##class(User.CTPaymentCode).%OpenId(pHospital)
    set recInfo=$get(@refTmp@("REPORT"))
    set params("pHospital")=pHospital
    set name=pcobj.CTPCDesc 
    set contractNum=$listget(recInfo,6)
    set params("pCustomerName")=name_" "_pcobj.CTPCInvoiceMessage1_" "_$Piece(pcobj.CTPCPayCodeAddress,"|",1)
	set contractDate=$listget(recInfo,5)
	set params("pNameString")="Медицинские услуги по договору N "_contractNum_" от "_contractDate_" за период с "_params("pDateFrom")_" по "_params("pDateTo")
	
	set params("pGoodReceiver")=params("pCustomerName")
	
	set params("pINN")=##class(Report.FinancialEntity).getINNCompany()
	set params("pKPP")=##class(Report.FinancialEntity).getKPPCompany()
	set params("pName")=##class(Report.FinancialEntity).getNameCompany()
	set params("pBank")=##class(Report.FinancialEntity).getBankCompany()
	set params("pRS")=##class(Report.FinancialEntity).getRSCompany()
	set params("pKS")=##class(Report.FinancialEntity).getKSCompany()
 	set params("pBIK")=##class(Report.FinancialEntity).getBIKCompany()
 	set params("pRoleBoss")=##class(Report.FinancialEntity).getRoleBossCompany()
 	set params("pFIOBoss")=##class(Report.FinancialEntity).getFioBossCompany()
 	set params("pFIOMainAccountant")=##class(Report.FinancialEntity).getFioMainAccountantCompany()
 	
		
	set inv=$o(@refTmp@("REPORT",""))
	set params("pInvoiceNum")=inv
	set rec="" if inv'="" set rec=$get(@refTmp@("REPORT",inv)) 
	s sumItog=0 if rec'="" set sumItog=$j(+$listget(rec,2),0,2)
	set params("pSumItog")=$tr(sumItog,".",",")
	set params("pSumItogProp")=$$SumStr^PRTCLNRUS25(sumItog)
	
	set params("pSumNdsItog")="Без НДС"
	set params("pSumItogAll")=$tr(sumItog,".",",")
	
	set params("prefTmp")=$name(@refTmp)
		k ^test("javaTest") m ^test("javaTest")=@refTmp
]]></Implementation>
</Method>

<Method name="getFileJasper">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[ quit ##class(Report.JasperReportTune).getPathFileJasper()_"/rptInvoice.jasper"
]]></Implementation>
</Method>

<Method name="getFileReport">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDateTo:%String,pHospital:%String,nameReport:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 set ret=##class(Report.rpt).getPathFileReport(pDateTo) if +ret=0 quit ret
 set path=$p(ret,$char(1),2)
 quit "1"_$c(1)_path_"/"_..getNameFileReport(pDateTo, pHospital, nameReport)
]]></Implementation>
</Method>

<Method name="getNameFileReport">
<ClassMethod>1</ClassMethod>
<FormalSpec>pDateTo:%String,pHospital:%String,nameReport:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 set name=##class(User.CTPaymentCode).%OpenId(pHospital).CTPCDesc 
 set date=$zd(pDateTo,15)
 quit pHospital_"_"_$tr($tr($e(name,1,10),"""./\'"_$char(171,187),"")," ","_")_"_"_nameReport_"_"_$p(date,"/",2)_"_"_$p(date,"/",3)_"."_##class(Report.JasperReportTune).getTypeFileReport()
]]></Implementation>
</Method>

<Method name="getReportName">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit "rpt25"
]]></Implementation>
</Method>
</Class>
</Export>
