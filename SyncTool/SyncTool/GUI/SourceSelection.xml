<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="SyncTool.GUI.SourceSelection">
<Abstract>1</Abstract>
<Super>%ZEN.Dialog.standardDialog</Super>
<TimeCreated>61404,61256.691788</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
/*
Copyright 2009 Alexander Riemer (alex.riemer@gmx.net)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
]]></Content>
</UDLText>

<Parameter name="JSINCLUDES">
<Default>/csp/broker/zenCSLM.js</Default>
</Parameter>

<Property name="ModuleID">
<Type>%String</Type>
<Parameter name="ZENURL" value="ModuleID"/>
</Property>

<Method name="Summary">
<Description>
Exports a Summary of source selection as HTML code.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>iModule:SyncTool.Module</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit "Please implement the Summary() method of class "_..%ClassName(1)
]]></Implementation>
</Method>

<Method name="GetModuleNamespace">
<ClassMethod>1</ClassMethod>
<FormalSpec>iModuleID:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[	Quit ##class(SyncTool.Module).NamespaceGetStored(iModuleID)
]]></Implementation>
</Method>

<Method name="SavePreviewValue">
<ClassMethod>1</ClassMethod>
<FormalSpec>iModuleID:%String,iValue:%Boolean</FormalSpec>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	Set Module=##class(SyncTool.Module).%OpenId(iModuleID)
	If $IsObject(Module)
	{
		Set Module.Preview=iValue
		Set Status=Module.%Save()
	}
]]></Implementation>
</Method>

<Method name="Selection2Display">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&iSelection]]></FormalSpec>
<ZenMethod>1</ZenMethod>
<Implementation><![CDATA[
	&js<var Content=new Array();>
	If '$Data(iSelection) &js<Content[0]="nothing selected so far";>
	Set Object=""
	For  
	{
		Set Object=$Order(iSelection(Object))
		Quit:Object=""
		If $ListValid(Object)
		{
			Set Display=""
			For I=1:1:$ListLength(Object)
			{
				If Display="" Set Display="$lb("
				Else  Set Display=Display_","
				Set Display=Display_""""_$List(Object,I)_""""
			}
			Set Display=Display_")"
		}
		Else {Set Display=Object}

		&js<Content[Content.length]=#(..QuoteJS(Display))#;>
	}
	&js<
	var ContentDiv=zenPage.getComponentById("Preview").getDocument().getElementById("content");
	if (ContentDiv) ContentDiv.innerHTML=Content.join("<br>");
	>
]]></Implementation>
</Method>
</Class>
</Export>
