<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="SyncTool.SrcObject">
<Super>%Persistent</Super>
<TimeCreated>60811,57046.367064</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
/*
Copyright 2009 Alexander Riemer (alex.riemer@gmx.net)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
]]></Content>
</UDLText>

<Property name="Type">
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode> Set {*}=$Piece({ObjectName},".",$Length({ObjectName},"."))</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="SrcObjectDateModified">
<Type>%TimeStamp</Type>
</Property>

<Property name="File">
<Type>SyncTool.File</Type>
<Cardinality>parent</Cardinality>
<Inverse>SrcObjects</Inverse>
<Relationship>1</Relationship>
<SqlFieldName>_File</SqlFieldName>
</Property>

<Property name="ObjectName">
<Type>%Binary</Type>
<Required>1</Required>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="SourceSelection">
<Type>SourceSelection</Type>
</Property>

<Property name="Version">
<Type>%Integer</Type>
</Property>

<Index name="ObjectNameIdx">
<IdKey>1</IdKey>
<Properties>ObjectName</Properties>
</Index>

<Method name="TypeGet">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set ObjectName=..GetObjectName()
	Quit $Piece(ObjectName,".",$Length(ObjectName,"."))
]]></Implementation>
</Method>

<Method name="ObjectNameNormalize">
<ClassMethod>1</ClassMethod>
<FormalSpec>%val:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Quit:$ListValid(%val) %val
	Quit:$Extract(%val)="^" %val
	Quit:$Length(%val,".")=1 %val
	Set $Piece(%val,".",$Length(%val,"."))=$ZConvert($Piece(%val,".",$Length(%val,".")),"l")
	Quit %val
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
Method ObjectNameNormalize(%val As %String) As %String [ CodeMode = expression ]
{
%val
}
*/
]]></Content>
</UDLText>

<Method name="Exists">
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	Quit ..File.Module.ExportImportClass.ObjectExists(..GetObjectName(),..File.Module.Namespace)
]]></Implementation>
</Method>

<Method name="SetToSynchedState">
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If (..SrcObjectDateModified'="")||((..SrcObjectDateModified="")&&(..Version=""))
	{
		Set ..SrcObjectDateModified=..File.Module.ExportImportClass.GetObjectDateModified(%this)
	}
	If (..SrcObjectDateModified="")||(..Version'="")
	{
		Set ..Version=..File.Module.ExportImportClass.GetObjectVersion(%this)
	}
	Set Status=..%Save()
	Quit Status
]]></Implementation>
</Method>

<Method name="GetObjectName">
<ReturnType>%Binary</ReturnType>
<Implementation><![CDATA[
	Set Return=..ObjectName
	If $ListValid(Return)
	{
		For I=1:1:$ListLength(Return) Set $List(Return,I)=$Replace($List(Return,I),"%7C%7C","||")
	}
	Else {Set Return=$Replace(Return,"%7C%7C","||")}
	Quit Return
]]></Implementation>
</Method>

<Method name="SetObjectName">
<FormalSpec>iValue:%Binary</FormalSpec>
<Implementation><![CDATA[	Set ..ObjectName=..SetObjectNameStatic(iValue)
]]></Implementation>
</Method>

<Method name="SetObjectNameStatic">
<ClassMethod>1</ClassMethod>
<FormalSpec>iValue:%Binary</FormalSpec>
<ReturnType>%Binary</ReturnType>
<SqlProc>1</SqlProc>
<Implementation><![CDATA[
	Set Return=iValue
	If $ListValid(Return)
	{
		For I=1:1:$ListLength(Return) Set $List(Return,I)=$Replace($List(Return,I),"||","%7C%7C")
	}
	Else {Set Return=$Replace(Return,"||","%7C%7C")}
	Quit Return
]]></Implementation>
</Method>

<Query name="FileByObjName">
<Type>%SQLQuery</Type>
<FormalSpec>iObjectName:%Binary</FormalSpec>
<SqlQuery>select _File from SrcObject where ObjectName=SrcObject_SetObjectNameStatic(:iObjectName)</SqlQuery>
</Query>

<Method name="GetDateModified">
<ClassMethod>1</ClassMethod>
<FormalSpec>iD:%String</FormalSpec>
<ReturnType>%TimeStamp</ReturnType>
<SqlProc>1</SqlProc>
<Implementation><![CDATA[
	Set SrcObj=..%OpenId(iD)
	Quit:'$IsObject(SrcObj) ""
	Quit SrcObj.File.Module.ExportImportClass.GetObjectDateModified(SrcObj)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>{%%PARENT}("SrcObjects")</DataLocation>
<DefaultData>SrcObjectDefaultData</DefaultData>
<IdLocation>^SyncTool.FileC("SrcObjects")</IdLocation>
<IndexLocation>^SyncTool.SrcObjectI</IndexLocation>
<StreamLocation>^SyncTool.SrcObjectS</StreamLocation>
<Data name="SrcObjectDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>ItemDateModified</Value>
</Value>
<Value name="3">
<Value>SrcObjectDateModified</Value>
</Value>
<Value name="4">
<Value>SourceSelection</Value>
</Value>
<Value name="5">
<Value>Version</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
