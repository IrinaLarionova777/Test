<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="SyncTool.ObjectSelection">
<Super>SyncTool.SourceSelection</Super>
<TimeCreated>61422,27669.538243</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
/*
Copyright 2009 Alexander Riemer (alex.riemer@gmx.net)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
]]></Content>
</UDLText>

<Parameter name="EDITCLASS">
<Default>SyncTool.GUI.ObjectSelection</Default>
</Parameter>

<Property name="SQL">
<Type>%String</Type>
<Required>1</Required>
<Parameter name="MAXLEN" value="2048"/>
</Property>

<Property name="Type">
<Type>%Dictionary.CacheClassname</Type>
<Required>1</Required>
</Property>

<Property name="GroupObjectsBy">
<Type>%String</Type>
<Parameter name="MAXLEN" value="250"/>
</Property>

<Method name="ExpandSelection">
<FormalSpec><![CDATA[&oSelectedObjects]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set EditClassname=..GetEditClassName(.Status)
	Quit:'Status Status
	Set Status=$ZObjClassMethod(EditClassname,"ExpandSelection",..Module.Namespace
		,..SQL,..Type,.oSelectedObjects)
	Quit Status
]]></Implementation>
</Method>

<Method name="%OnValidateObject">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%ValidateObject</METHOD> method to 
provide notification that the current object is being validated.

<P>If this method returns an error then <METHOD>%ValidateObject</METHOD> will fail.]]></Description>
<Private>1</Private>
<ProcedureBlock>1</ProcedureBlock>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	Set Status=$$$OK
	If ..GroupObjectsBy'="",..GroupObjectsBy'="ID"
	{
		For I=1:1:$L(..GroupObjectsBy,",")
		{
			Set PropName=$Piece(..GroupObjectsBy,",",I)
			If PropName="" Set Status=$system.Status.Error(5001,"Group by property or constant expected") Quit
			Continue:PropName="ALL"
			If $IsValidNum(PropName)!($Extract(PropName)="""") Continue
			If '##class(%Dictionary.CompiledProperty).%ExistsId(..Type_"||"_PropName)
			{
				Set Status=$system.Status.Error(5001,"Property "_PropName_" not found in class "_..Type)
				Quit
			}
		}
	}
	Quit Status
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>ObjectSelectionDefaultData</DefaultData>
<StreamLocation>^SyncTool.ObjectSelectionS</StreamLocation>
<Data name="ObjectSelectionDefaultData">
<Subscript>"ObjectSelection"</Subscript>
<Value name="1">
<Value>SQL</Value>
</Value>
<Value name="2">
<Value>Type</Value>
</Value>
<Value name="3">
<Value>GroupObjectsBy</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
