<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="SyncTool.Compile">
<Description>
This is the basic and default compile manager class. It is used to compile 
the source objects held in imported files.</Description>
<Super>%RegisteredObject</Super>
<TimeCreated>60831,27451.020204</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
/*
Copyright 2009 Alexander Riemer (alex.riemer@gmx.net)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
]]></Content>
</UDLText>

<Parameter name="DISPLAYNAME">
<Description>
The display name of the compile manager used by the GUI.</Description>
<Default>Default</Default>
</Parameter>

<Method name="Compile">
<Description>
The compile method itself.</Description>
<FormalSpec><![CDATA[&iSrcObjects,iFlags:%String="k-d",iLogToFile:%String=""]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set ThisNS=$ZNSpace
	Set Status=$$$OK

	#;Exclude not compileable source objects from compiling
	Set Namespace=""
	For  
	{
		Set Namespace=$Order(iSrcObjects(Namespace))
		Quit:Namespace=""
		Set ObjectName=""
		For  
		{
			Set ObjectName=$Order(iSrcObjects(Namespace,ObjectName))
			Quit:ObjectName=""
			If 'iSrcObjects(Namespace,ObjectName) Kill iSrcObjects(Namespace,ObjectName)
		}
	}
	If iLogToFile'=""
	{
		Set iFlags=$Replace(iFlags,"-d","")
		Do ##class(%File).Delete(iLogToFile)
		Set LogFile=##class(%File).%New(iLogToFile)
		Do LogFile.Open("WSN")
		Set IO=$IO
		Use LogFile.Name
		Set Namespace=""
		For  
		{
			Set Namespace=$Order(iSrcObjects(Namespace))
			Quit:Namespace=""
			Kill SrcObjects
			Merge SrcObjects=iSrcObjects(Namespace)
			Write !,"Compiling in namespace ",Namespace,!
			ZN Namespace
			Set Status=$system.OBJ.CompileList(.SrcObjects,iFlags)
			Quit:'Status
		}
		ZN ThisNS
		Use IO
		Do LogFile.Close()
	}
	Else
	{
		For  
		{
			Set Namespace=$Order(iSrcObjects(Namespace))
			Quit:Namespace=""
			Kill SrcObjects
			Merge SrcObjects=iSrcObjects(Namespace)
			ZN Namespace
			Set Status=$system.OBJ.CompileList(.SrcObjects,$Replace(iFlags,"-d",""))
			Quit:'Status
		}
		ZN ThisNS
	}
	Quit Status
]]></Implementation>
</Method>

<Method name="GetOutputFile">
<Description>
Return a temporary file to which the compiler output is written.</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	Quit ..GetTempDir()_"SyncTool_Compile.log"
]]></Implementation>
</Method>

<Method name="GetTempDir">
<Description>
Returns the temporary directory of the operating system.</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	If $system.Version.GetOS()="UNIX" {Set Temp="/tmp"}
	Else {Set Temp=$system.Util.GetEnviron("TEMP")}
	Quit ##class(%File).NormalizeDirectory(Temp_"\")
]]></Implementation>
</Method>
</Class>
</Export>
