<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCBI.Cubes.EPVisitTestSetData">
<Description>
</Description>
<ProcedureBlock>1</ProcedureBlock>
<Super>%DeepSee.CubeDefinition</Super>
<TimeCreated>62560,55139.321732</TimeCreated>
<DependsOn>User.EPVisitTestSetData,User.EPVisitTestSet</DependsOn>

<Parameter name="DOMAIN">
</Parameter>

<XData name="Cube">
<Description>
Cube definition from Architect.</Description>
<XMLNamespace>http://www.intersystems.com/deepsee</XMLNamespace>
<Data><![CDATA[
<cube xmlns="http://www.intersystems.com/deepsee" name="EPVisitTestSetData" displayName="Тесты" disabled="false" abstract="false" sourceClass="User.EPVisitTestSetData" nullReplacement="Нет данных" countMeasureName="%COUNT" countMeasureCaption="# тестов" bucketSize="8" bitmapChunkInMemory="false" precompute="0">
  <dimension name="TestItems" displayName="Тесты" disabled="false" hasAll="true" allCaption="All VISTDTestCodeDR" allDisplayName="Итого" type="data" iKnowType="entity" hidden="false" showHierarchies="false">
    <hierarchy name="H1" disabled="false">
      <level sourceProperty="VISTDTestCodeDR.CTTCCode" factName="DxTestItemCode" name="TestItemCode" displayName="Тест (код)" disabled="false" list="false" useDisplayValue="true" useAsFilter="false">
      </level>
      <level sourceProperty="VISTDTestCodeDR.CTTCDesc" factName="DxTestItemDesc" name="TestItemDescription" displayName="Тест (наименование)" disabled="false" list="false" useDisplayValue="true" useAsFilter="false">
      </level>
    </hierarchy>
    <hierarchy name="H2" disabled="false">
      <level sourceExpression="%source.VISTDTestCodeDR.CTTCCode_&quot; &quot;_%source.VISTDTestCodeDR.CTTCDesc" factName="DxTestItemCodeDesc" name="TestItemCodeDesc" displayName="Тест" disabled="false" list="false" useDisplayValue="true" useAsFilter="true">
      </level>
    </hierarchy>
  </dimension>
  <dimension name="TestSetDataDetails" displayName="Данные по тесту - подробности" disabled="false" hasAll="false" allCaption="All CTTCCode" allDisplayName="CTTCCode" type="data" iKnowType="entity" hidden="false" showHierarchies="false">
    <hierarchy name="H1" disabled="false">
      <level sourceExpression="$li(%expression.GetAllInfoForTest,1)" factName="DxAbnormalFlag" name="AbnormalFlag" displayName="Тест не в норме" disabled="false" list="false" nullReplacement="Нет" useDisplayValue="false" useAsFilter="true">
      </level>
    </hierarchy>
  </dimension>
  <dimension name="Analyzer" displayName="Анализатор" disabled="false" hasAll="false" allCaption="All New_dataDimension1" allDisplayName="New_dataDimension1" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceProperty="VISTDMachineDR.MIMPCode" factName="DxAnalyzer" name="Analyzer" displayName="Анализатор" disabled="false" list="false" nullReplacement="Ручная обработка" useDisplayValue="true" useAsFilter="true">
        <property sourceProperty="VISTDMachineDR.MIMPMachineName" name="MIMPMachineName" displayName="Наименование анализатора" disabled="false" hidden="false" isName="true" isDescription="false" isReference="true" useDisplayValue="false"></property>
      </level>
    </hierarchy>
  </dimension>
  <dimension name="FlagCalculation" displayName="Вычисляемый тест" disabled="false" hasAll="false" allCaption="All New_dataDimension1" allDisplayName="New_dataDimension1" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceExpression="$li(%expression.GetAllInfoForTest,5)" factName="DxFlagCalculation" name="FlagCalculation" displayName="Вычисляемый тест" disabled="false" list="false" nullReplacement="Нет" useDisplayValue="false" useAsFilter="true">
      </level>
    </hierarchy>
  </dimension>
  <dimension name="FlagChangeResultFromMachine" displayName="Флаг изменения результата с анализатора" disabled="false" hasAll="false" allCaption="All FlagChangeResultFromMachine" allDisplayName="FlagChangeResultFromMachine" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceExpression="$li(%expression.GetAllInfoForTest,4)" factName="DxFlagChangeResultFromMachine" name="FlagChangeResultFromMachine" displayName="Флаг изменения результата с анализатора" disabled="false" list="false" rangeExpression="0:Нет изменений;1:Изменение результата анализатора вручную;2:Ошибочное удаление кода анализатора;" useDisplayValue="true" useAsFilter="true">
      </level>
    </hierarchy>
  </dimension>
  <dimension name="FlagResultExist" displayName="Наличие результата" disabled="false" hasAll="false" allCaption="All New_dataDimension1" allDisplayName="New_dataDimension1" type="data" iKnowType="entity" hidden="false" showHierarchies="default">
    <hierarchy name="H1" disabled="false">
      <level sourceExpression="$li(%expression.GetAllInfoForTest,6)" factName="DxFlagResultExist" name="FlagResultExist" displayName="Наличие результата" disabled="false" list="false" nullReplacement="Нет" useDisplayValue="false" useAsFilter="true">
      </level>
    </hierarchy>
  </dimension>
  <measure sourceExpression="$li(%expression.GetAllInfoForTest,1)=&quot;Да&quot;" factName="MxNumberAbnormal" name="NumberAbnormal" displayName="# тестов вне нормы" disabled="false" aggregate="SUM" type="number" hidden="false" searchable="true" iKnowSource="string"></measure>
  <measure sourceExpression="$li(%expression.GetAllInfoForTest,2)" factName="MxQTestChangeResultFromAnalyzer" name="QTestChangeResultFromAnalyzer" displayName="Кол-во тестов с результатами анализатора, исправленными  вручную" disabled="false" aggregate="SUM" type="number" hidden="false" searchable="false" iKnowSource="string"></measure>
  <measure sourceExpression="$li(%expression.GetAllInfoForTest,3)" factName="MxQTestErrorChangeResultFromAnalyzer" name="QTestErrorChangeResultFromAnalyzer" displayName="Кол-во тестов, результат по которым был получен с анализатора, а потом удалена информация, что результат получен с анализатора" description="Кол-во тестов, результат по которым был получен с анализатора, а потом удалена информация, что результат получен с анализатора" disabled="false" aggregate="SUM" type="number" hidden="false" searchable="false" iKnowSource="string"></measure>
  <relationship sourceProperty="VISTDParRef" factName="RxTestSet" name="EPVisitTestSet" displayName="Набор тестов" disabled="false" relatedCube="EPVisitTestSet" cardinality="one"></relationship>
  <expression sourceExpression="##class(TCBI.UtilsRu).GetAllInfoForTest(%source.%ID)" name="GetAllInfoForTest" disabled="false"></expression>
  <calculatedMember name="AbnormalRatio" displayName="% тестов вне нормы" disabled="false" dimension="Measures" valueExpression="[MEASURES].[NumberAbnormal]*100/[MEASURES].[%COUNT]" hidden="false"></calculatedMember>
  <calculatedMember name="ChangeResultFromAnalyzerRatio" displayName="% тестов с анализатора, исправленных вручную" disabled="false" dimension="Measures" valueExpression="[MEASURES].[QTestChangeResultFromAnalyzer]*100/[MEASURES].[%COUNT]" hidden="false"></calculatedMember>
  <listing name="listingID" displayName="Исходные данные" disabled="true" listingType="table" fieldList="%ID"></listing>
  <listing name="listingChangeResultFromAnalyzer" displayName="Данные с анализатора изменены вручную" disabled="false" listingType="table" sql="SELECT %ID,VISTD_TestCode_DR-&gt;CTTC_Desc As Test,VISTD_TestData,VISTD_ParRef-&gt;VISTS_UserEntered_DR-&gt;SSUSR_Name from EP_VisitTestSetData WHERE %SEARCH.&amp;[[FlagChangeResultFromMachine].[H1].[FlagChangeResultFromMachine]=&quot;Изменение результата анализатора вручную&quot;]"></listing>
</cube>
]]></Data>
</XData>

<Method name="GetAbnormalFlag">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	s returnVal=""
 	s m1=$p($g(id),"||",1)
 	s m2=$p($g(id),"||",2)
 	s m3=$p($g(id),"||",3)
 	s m4=$p($g(id),"||",4)
	s testdata=$p($g(^TEPI(m1,1,m2,m3,"DATA",m4)),"\",1)
	
	if testdata'="" d 
	.set flag=$extract($$validres^LVBVIS1(m1,m4,testdata,m1_"||"_m2_"||"_m3,1),1)
	.if flag'="N" set flag="A"  // "L","H" --> "A" (abnormal)
  	.//s flag=$P($G(^TTAB("TC",m4,2,testdata)),"\",1) // было в кубе, который привез Володя (это работает, когда стандартный комментарий и testdata="ERR")
 	.s returnVal=flag
 	quit returnVal
]]></Implementation>
</Method>
</Class>
</Export>
