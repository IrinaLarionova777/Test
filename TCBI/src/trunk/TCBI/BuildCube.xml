<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24">
<Class name="TCBI.BuildCube">
<Super>%RegisteredObject</Super>
<TimeCreated>62560,42776.246891</TimeCreated>

<Method name="InitialBuild">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
  set ok=$$$OK
  try {
	// a complete rebuild of all cubes
	//
	set ts1=+$h*100000+$p($h,",",2)
	s ^test("buildcube","start")=$h
	do CreateIndex^PRTCLNRUS05birlab($name(^invForGetPrice))
	//d ##class(%DeepSee.Utils).%BuildCube("BBPPackDetails",0)
	//d ##class(%DeepSee.Utils).%BuildCube("BBPPackTransactions",0)
	d ##class(%DeepSee.Utils).%BuildCube("EPVisitNumber",0)
	d ##class(%DeepSee.Utils).%BuildCube("EPVisitTestSet",0)
	d ##class(%DeepSee.Utils).%BuildCube("EPVisitTestSetData",0)
	//d ##class(%DeepSee.Utils).%BuildCube("EPVisitTestSetDataAntib",0)
	//d ##class(%DeepSee.Utils).%BuildCube("EPVisitTestSetQueue",0)
	//d ##class(%DeepSee.Utils).%BuildCube("EPVisitTestSetSnomedRes",0)
	set ts2=+$h*100000+$p($h,",",2)
	set ras=ts2-ts1
	set ^test("BuildCubes")=ras_" сек "_(ras\3600)_" ч"
	w !,ras_" сек "_(ras\3600)_" ч"
  } catch(e) { set ok=e.AsStatus() }
  q ok
]]></Implementation>
</Method>

<Method name="InitialBuild0">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[

   do CreateIndex^PRTCLNRUS05birlab($name(^invForGetPrice))
   d ##class(%SYSTEM.DeepSee).BuildCube("EPVisitTestSet",,,,5000)
]]></Implementation>
</Method>
</Class>
</Export>
